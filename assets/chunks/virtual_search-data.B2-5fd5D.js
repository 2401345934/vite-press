const e={map:'[{"small":["0.0"],"浏览器的缓存策略":["1.0"],"缓存位置":["1.1"],"service":["1.2","19.14"],"memory":["1.3"],"disk":["1.4"],"push":["1.5"],"网络请求":["1.6"],"缓存策略":["1.7"],"强缓存":["1.8"],"expires":["1.9"],"cache":["1.10","65.25","121.10","154.5"],"协商缓存":["1.11"],"last":["1.12","1.14","1.15"],"etag":["1.13","1.16"],"etag主要为了解决last":["1.17"],"如果":["1.18"],"实际场景应用缓存策略":["1.19"],"频繁变动的资源":["1.20"],"代码文件":["1.21"],"示例":["1.22","52.2","52.8","52.14"],"从输入一个":["2.0"],"简单版":["2.1"],"这里可以按照进程来分":["2.2"],"复杂版":["2.3"],"浏览器进程":["3.0"],"浏览器四大进程":["3.1"],"浏览器多进程的优势":["3.2"],"渲染进程包括哪些线程":["3.3"],"gui渲染线程":["3.4"],"js引擎线程":["3.5"],"事件触发线程":["3.6"],"定时触发器线程":["3.7"],"异步http请求线程":["3.8"],"浏览器缓存机浏览器的组成":["4.0"],"浏览器组成":["4.1"],"主要由7部分组成":["4.2"],"内核":["4.3"],"渲染引擎":["4.4"],"js引擎":["4.5"],"常见的浏览器内核有哪些":["4.6"],"浏览器的":["5.0"],"intersectionobserver":["5.1"],"一个元素从不可见到可见":["5.2"],"这有啥用":["5.3","5.6"],"mutationobserver":["5.4"],"监听一个普通":["5.5"],"resizeobserver":["5.7"],"窗口我们可以用":["5.8"],"performanceobserver":["5.9"],"reportingobserver":["5.10"],"总结":["5.11","48.28","50.34","129.7","133.8","144.6","191.4","206.6","206.17","216.7","217.8","218.11","219.15","220.8","221.11","222.12","233.0","237.0","241.12","243.15","252.8","258.11"],"浏览器提供了这":["5.12"],"浏览器渲染原理":["6.0"],"浏览器是如何渲染页面":["6.1"],"渲染流水线":["6.2"],"什么是":["6.3","6.4","21.15","21.16","218.2"],"为什么":["6.5"],"浏览器渲染流水线解析":["7.0"],"浏览器存储":["8.0"],"cookie":["8.1","8.2","19.13","175.14"],"cookie的用处":["8.3"],"cookie的特点":["8.4"],"localstorage":["8.5","175.15"],"异同":["8.6"],"生命周期":["8.7","196.10"],"存放数据大小":["8.8"],"http请求":["8.9"],"易用性":["8.10"],"应用场景":["8.11","159.7","159.11"],"浏览器支持情况":["8.12"],"localstorage和sessionstorage":["8.13"],"两者的共同点在于":["8.14"],"两者的不同点在于":["8.15"],"i":["9.0","22.26"],"下载插件":["9.1"],"注意":["9.2","123.1"],"浏览器代码片段":["10.0"],"使用方式":["10.1","88.2","95.23","168.3","168.7"],"添加代码片段":["10.2"],"分享我自己常用的代码片段":["10.3"],"colors":["10.4"],"cookies":["10.5"],"cssprettifier":["10.6"],"cssreload":["10.7"],"formcontrols":["10.8"],"jq":["10.9"],"log":["10.10"],"performance":["10.11","152.8","152.25"],"tags":["10.12","65.31"],"urlquerystring":["10.13"],"varglobal":["10.14"],"devtools":["11.0"],"elements":["11.1","17.0"],"element":["11.2","214.1"],"快速定位":["11.3"],"dom":["11.4"],"查看事件":["11.5"],"找到之前查看过的":["11.6"],"debugging":["11.7"],"使用":["12.0","62.21","75.6","79.0","95.25","96.8","152.9","152.10","152.11","152.12","152.13","286.34"],"拖动":["13.0"],"首先选中某个元素":["14.1"],"快速隐藏元素":["15.0"],"将下方代码粘贴到":["16.0"],"store":["18.0"],"浏览器基础知识点及常考面试题":["19.0"],"事件机制":["19.1","207.0"],"事件触发三阶段":["19.2"],"注册事件":["19.3"],"事件代理":["19.4"],"跨域":["19.5","179.51"],"jsonp":["19.6","24.4","175.18"],"cors":["19.7","175.17"],"简单请求":["19.8"],"复杂请求":["19.9"],"document":["19.10"],"postmessage":["19.11","175.19"],"存储":["19.12"],"js运行9大概念":["20.0"],"记住这张图":["20.1"],"解释这张图":["20.2"],"概念1":["20.3"],"概念2":["20.4"],"概念3":["20.5"],"概念4":["20.6"],"概念5":["20.7"],"概念6":["20.8"],"概念7":["20.9"],"概念8":["20.10"],"概念9":["20.11"],"首先我们讨论一下为什么要有this":["20.12"],"javascript是怎么被运行起来的":["21.0"],"web应用的生命周期":["21.1"],"什么是v8":["21.2"],"v8":["21.3"],"ignition解释器":["21.4"],"turbofan":["21.5"],"什么是抽象语法树":["21.6"],"抽象语法书生成过程":["21.7"],"什么是执行上下文":["21.8"],"执行上下文的类型":["21.9"],"骗人的小鬼":["21.10"],"执行栈":["21.11"],"如何创建执行上下文":["21.12"],"执行阶段":["21.13"],"创建阶段":["21.14"],"全局环境记录":["21.17"],"什么是作用域":["21.18"],"作用域和执行上下文是什么关系":["21.19"],"计算机组成原理":["22.0"],"工作原理如下":["22.2"],"首先":["22.11","31.7","39.2"],"高级语言一般有两种方式转换为机器语言":["22.13"],"如":["22.18"],"接下来看0":["22.19"],"所以浮点数的通用表示格式如下":["22.23"],"接着看第二阶段":["22.27"],"第三阶段":["22.28"],"计算机网络基础知识":["23.0"],"以上三点":["23.6"],"那物理层到底有哪些主要任务呢":["23.17"],"为什么需要中继器呢":["23.20"],"星型拓扑如下":["23.33"],"总线型拓扑如下":["23.34"],"为什么要分片呢":["23.48"],"ip地址有5种":["23.50"],"为什么需要arp协议呢":["23.54"],"大致工作过程":["23.56"],"icmp协议的功能主要有":["23.58"],"tcp报文的首部格式":["23.66"],"控制位":["23.67"],"以下是网上普遍的解答":["23.71"],"什么是syn洪泛攻击":["23.72"],"为什么需要流量控制呢":["23.75"],"文字版如下":["23.77"],"慢开始与拥塞避免":["23.78"],"快重传与快恢复":["23.79"],"短连接方式":["23.84"],"长连接方式":["23.85"],"大概的通信过程如下":["23.87"],"url的格式如下":["23.89"],"http报文头分析":["23.90"],"通用头部":["23.91"],"响应头部":["23.92"],"实体首部":["23.93","27.10","27.11"],"实体的主体部分":["23.94"],"http":["24.0","26.0","27.0","27.1","29.0","175.2","175.3"],"跨域的原理跨域":["24.1"],"跨域原理":["24.2"],"解决方案":["24.3","200.3"],"步骤":["24.5","43.4","150.10","150.12"],"跨域问题实际上改的是":["24.6"],"http请求头":["25.0"],"客户端在使用":["26.4"],"区别":["26.5","219.14"],"在技术上说":["27.2"],"首部":["27.3"],"通用首部":["27.4"],"通用字段":["27.5"],"请求首部":["27.6","27.7"],"响应首部":["27.8","27.9"],"tls":["27.12","27.15"],"对称加密":["27.13"],"非对称加密":["27.14"],"http2":["28.0","28.1"],"http3":["28.2"],"状态码第一位数字决定了不同的响应状态":["29.1"],"tcp":["30.0","48.0","48.25","48.26","48.27","49.2"],"对字节流分段并进行编号然后通过":["30.1"],"复盘思维":["31.0"],"什么是复盘":["31.1"],"为什么要复盘":["31.2"],"第一":["31.3","31.14"],"第二":["31.4","31.15"],"第三":["31.5","31.16"],"如何复盘":["31.6"],"其次":["31.8","39.3"],"再次":["31.9"],"此外":["31.10"],"最后":["31.11","39.4","204.6"],"何时复盘":["31.12"],"复盘的关键点":["31.13"],"第四":["31.17"],"其他行业的复盘工具":["31.18"],"提问的艺术":["32.0"],"正确的提问":["32.1"],"反例":["32.2"],"提问常识":["32.3"],"什么是架构师":["33.0"],"什么是架构":["33.1"],"前端架构师的核心工作是降低需求增长带来的技术实现的复杂性":["33.2"],"能够将业务转换成技术":["33.3"],"能合理利用技术支撑业务":["33.4"],"具备前瞻思维和战略思维":["33.5"],"回答的艺术":["34.0"],"前端的应该做到":["34.1"],"怎么看待前端这个行业":["34.2"],"概念化":["35.0"],"概念的形成":["35.1"],"正在讨论的是什么问题":["35.2"],"当对这个问题有了大致的了解之后":["35.3"],"构思过程":["35.4"],"概念具体化":["35.5"],"估算":["36.0"],"估算要注意以下的因素":["36.1"],"架构方法的关键要素包括":["36.2"],"估算的大致流程":["36.3"],"项目的类型":["36.4"],"估算策略":["36.5"],"飞轮思维":["37.0","37.2"],"亚马逊的商业飞轮":["37.1"],"个人成长飞轮":["37.3"],"组合使用":["37.4","44.10"],"发现":["38.0"],"了解客户":["38.1"],"与客户访问的准备":["38.2"],"与客户会面":["38.3"],"了解市场":["38.4"],"了解客户的客户":["38.5"],"了解你的业务":["38.6"],"灰度思维":["39.0"],"什么是灰度思维":["39.1"],"工作上的例子":["39.5"],"新功能模块的灰度切流":["39.6"],"蓝绿发布":["39.7"],"精益创业":["39.8"],"生活中的例子":["39.9"],"首笔转账":["39.10"],"培养自己的爱好":["39.11"],"培养孩子的爱好":["39.12"],"发展人际关系":["39.13"],"生活处处皆可灰度":["39.14"],"前端招聘面试流程":["40.0"],"迭代思维":["41.0","41.1"],"pdca循环":["41.2"],"例1":["41.3","136.7"],"例2":["41.4","136.8"],"例3":["41.5"],"ooda循环":["41.8"],"应用中的组合拳":["41.9"],"本章小结":["41.10","46.7"],"管理":["42.0"],"架构提供技术管理":["42.1"],"培养技术人才":["42.2"],"结构化思维":["43.0"],"基本介绍":["43.1"],"原则":["43.2"],"如果将上面人进行分类":["43.3"],"第1步":["43.5"],"第2步":["43.6"],"第3步":["43.7"],"类比划分人的问题上":["43.8"],"case":["43.9","43.10","43.11"],"初步结论":["43.12"],"切入点如何来":["43.13"],"切入点":["43.14"],"防错思维":["44.0"],"如果不防错":["44.1"],"一行代码让人疯狂两天":["44.2"],"什么是防错思维":["44.3"],"防呆不防傻":["44.4"],"生活处处有防错":["44.5"],"软件工程中的防错设计":["44.6"],"合作关系":["45.0"],"第一部分":["45.1"],"第一章":["45.2"],"合作关系的关键特征":["45.3"],"一致":["45.4"],"信任":["45.5"],"语境":["45.6"],"协作":["45.7"],"关系":["45.8"],"根因思维":["46.0"],"初识root":["46.1"],"什么是根因分析":["46.2"],"如何进行根因分析":["46.3"],"两类问题":["46.4"],"由果到因再由因到果":["46.5"],"时间的洗礼":["46.6"],"计算机网络分层结构":["47.0"],"一":["47.1","50.1","65.1","68.1","96.1","113.1","126.1","151.1","168.10","185.1","194.1","196.1","197.1","198.1","199.1","201.1","202.1","203.1","260.1"],"二":["47.2","50.2","65.2","68.2","113.2","133.7","151.2","168.11","185.2","194.2","196.5","197.3","198.4","199.3","201.2","202.2","203.2","260.2"],"三":["47.10","50.9","65.13","68.5","113.3","151.4","168.12","185.7","194.3","196.11","197.6","198.7","199.6","201.7","202.17","203.4","260.3"],"四":["47.11","50.26","65.34","68.9","113.4","168.13","260.4"],"头部":["48.1"],"状态机":["48.2","283.11"],"建立连接三次握手":["48.3"],"第一次握手":["48.4","48.8","50.11","50.15"],"第二次握手":["48.5","48.9","50.12","50.16"],"第三次握手":["48.6","48.10","50.13","50.17"],"断开链接四次握手":["48.7"],"第四次握手":["48.11","50.18"],"arq":["48.12"],"停止等待":["48.13"],"正常传输过程":["48.14"],"报文丢失或出错":["48.15"],"ack":["48.16"],"连续":["48.17"],"累计确认":["48.18"],"滑动窗口":["48.19"],"zero":["48.20"],"拥塞处理":["48.21"],"慢开始算法":["48.22"],"拥塞避免算法":["48.23"],"快速重传":["48.24"],"tcp三次握手":["49.0","49.1","176.15"],"tcp和udp的区别":["50.0"],"它有以下几个特点":["50.3"],"面向连接":["50.20"],"仅支持单播传输":["50.21"],"面向字节流":["50.22"],"可靠传输":["50.23"],"提供拥塞控制":["50.24"],"tcp提供全双工通信":["50.25"],"udp":["50.28","51.0","51.6"],"五":["50.29","113.5","151.12"],"六":["50.30","113.6","151.13"],"运行在tcp协议上的协议":["50.31"],"运行在udp协议上的协议":["50.32"],"运行在tcp和udp协议上":["50.33"],"面向无连接":["51.1"],"不可靠性":["51.2"],"高效":["51.3"],"传输方式":["51.4"],"适合使用的场景":["51.5"],"数组":["52.0","285.0"],"map":["52.1","127.17","286.31"],"思路分析":["52.3","52.9","52.15","57.3","57.7"],"一个":["52.4"],"对":["52.5","102.1","102.3","102.4","102.5","184.30"],"编码实现":["52.6","52.12","52.16","57.4"],"合并两个有序数组":["52.7"],"标准解法":["52.10"],"这里有一点需要解释一下":["52.11"],"三数求和问题":["52.13"],"在区间范围内统计奇数数目":["52.17"],"去掉最低工资和最高工资后的工资平均值":["52.18"],"二叉树":["53.0"],"前序遍历":["53.1"],"先序遍历":["53.2","53.3"],"中序遍历":["53.4","53.5","53.6"],"后序遍历":["53.7","53.8","53.9"],"二叉树的层序遍历":["53.10"],"二叉树的最小深度":["53.11"],"二叉树的最大深度":["53.12"],"入门介绍":["54.0"],"常见的数据结构":["54.1"],"常见的算法":["54.2"],"排序":["55.0"],"归并排序":["55.1","174.25"],"快速排序":["55.2","174.24"],"插入排序":["55.3","174.23"],"选择排序":["55.4","174.22"],"冒泡排序":["55.5","174.21"],"空间复杂度":["56.0"],"含义":["56.1","58.1"],"作用":["56.2","58.2"],"o":["56.3","56.4","56.5","58.3","58.4","58.5"],"字符串":["57.0","295.0"],"回文字符串的衍生问题":["57.1"],"真题描述":["57.2","57.6"],"字符串匹配问题":["57.5"],"时间复杂度":["58.0"],"树":["59.0"],"广度优先遍历":["59.1","174.34"],"hard":["60.0"],"适配方案分析":["61.0"],"方案一":["61.1"],"上效果":["61.2","61.11","61.16"],"实现思路":["61.3","61.13","61.17"],"话不多说":["61.4","61.12"],"css":["61.5","61.6"],"定义":["61.7"],"屏幕变化后":["61.8"],"图表字体":["61.9"],"方案二":["61.10"],"偷懒方法":["61.14"],"方案三":["61.15"],"实现方案":["61.18"],"参考资料":["61.19"],"窥探":["62.1"],"初见ast":["62.2"],"program":["62.3"],"expressionstatement":["62.4"],"callexpression":["62.5"],"memberexpression":["62.6"],"identifier":["62.7"],"stringliteral":["62.8"],"公共属性":["62.9"],"如何写一个babel插件":["62.10"],"构造visitor方法":["62.11"],"去除所有console":["62.12"],"增加env":["62.13"],"增加exclude":["62.14"],"增加commentwords":["62.15"],"细节完善":["62.16"],"对于后缀注释":["62.17"],"对于前缀注释":["62.18"],"发布到线上":["62.19"],"安装":["62.20","95.7","95.12","95.15","95.19","95.24","96.6","97.58","114.4","138.3"],"ast":["63.0","64.0","210.0","211.0"],"设计篇":["64.1"],"整体流程":["64.2"],"parsing":["64.3"],"transformation":["64.4"],"code":["64.5","265.0"],"原理篇":["64.6"],"生成tokens":["64.7"],"生成ast":["64.8"],"遍历和访问生成好的ast":["64.9"],"transformer转化":["64.10"],"新代码生成":["64.11"],"小试牛刀":["64.12"],"初露锋芒":["64.13"],"崭露头角":["64.14"],"初战告捷":["64.15"],"大展身手":["64.16"],"大展神威":["64.17"],"一鸣惊人":["64.18"],"厚积薄发":["64.19"],"一战成名":["64.20"],"赋值场景":["64.21"],"先声明再赋值场景":["64.22"],"泛型场景":["64.23"],"gitlab":["65.0","65.3","66.0"],"步骤一":["65.4"],"使用shared":["65.6"],"自己配置runner":["65.8"],"a":["65.9"],"b":["65.10"],"c":["65.11"],"步骤二":["65.12"],"yaml语法":["65.14"],"数组写法":["65.15"],"对象写法":["65.16"],"流水线环节梳理":["65.17"],"结构图":["65.18"],"script":["65.19"],"before":["65.20"],"variables变量":["65.21"],"image":["65.22","67.15"],"stages":["65.23"],"stage":["65.24"],"retry":["65.26"],"only":["65.27"],"rules":["65.28"],"workflow":["65.29"],"when":["65.30"],"注意事项":["65.32","71.6","71.14","71.18","195.4"],"模块化写法":["65.33"],"流水线demo1":["65.35"],"流水线demo2":["65.36"],"gitlabci":["66.1"],"ci":["66.2"],"cd":["66.3"],"大致可以分为几个阶段":["66.4"],"基于gitlab":["67.0"],"持续集成":["67.1"],"持续部署":["67.2"],"提交代码触发ci":["67.14"],"构建":["67.16"],"发布":["67.17"],"基于":["68.0","169.3","169.4"],"eslint":["69.0","95.6","95.10","154.15"],"代码检查工具":["69.2"],"代码风格工具":["69.3"],"工具":["69.8"],"安装流程":["69.9"],"类型":["69.10"],"单元测试":["69.12"],"配置jest":["69.13"],"github":["70.0"],"git":["71.0","116.0","117.0","117.1","119.0"],"特点":["71.1"],"适用场景":["71.2","101.2","101.4","190.1","190.3","190.5"],"为什么有":["71.3"],"了解":["71.4"],"如何让一个git仓库变为另一个git仓库的":["71.5"],"submodule":["71.7","71.8","71.9","71.10"],"如何给":["71.11"],"方法一":["71.12","71.16","71.21"],"方法二":["71.13","71.17","71.23"],"如何在主项目仓库":["71.15"],"方法三":["71.19"],"如何":["71.20"],"合并第2":["71.22","71.24"],"如何创建":["71.25","218.3"],"actions":["72.0"],"workflows":["72.1"],"事件":["72.2"],"任务":["72.3"],"动作":["72.4"],"运行器":["72.5"],"代码同步":["73.0"],"实现":["74.0","295.2"],"文件系统操作的跨平台兼容":["74.1"],"第":["74.2","74.3","74.5","74.6","74.8","74.9"],"用":["74.4","74.7","76.0","86.1","86.3"],"关于":["74.10"],"运行多个":["75.0"],"让多个":["75.1","75.2"],"wait":["75.3"],"有没有更好的管理方式":["75.4"],"下载依赖":["75.5","85.1","94.5"],"如何让多个":["75.7"],"实现命令行自动补全":["77.0"],"把":["77.1","221.9"],"更高级的自动完成":["77.2"],"npm":["78.0","80.0","81.0","144.0","145.0","145.1"],"由此我们知道":["78.1"],"第一步":["80.1","95.35"],"第二步":["80.2","95.36"],"第三步":["80.3","95.37"],"第四步":["80.4"],"在":["82.0","96.14"],"使用预定义变量":["82.1"],"文件变化时自动运行":["83.0"],"单元测试自动化":["83.1"],"代码检查自动化":["83.2"],"关于改动的几点说明":["83.5"],"给":["84.0","84.1","84.2"],"第一种":["84.3"],"第二种":["84.4"],"调整":["84.5"],"默认日志输出级别":["84.6"],"显示尽可能少的有用信息":["84.7"],"显示尽可能多的运行时状态":["84.8"],"下载完成之后会提供一个命令":["85.2"],"执行":["85.3"],"执行之后":["85.4"],"提供一个本地服务地址":["85.5"],"然后按照这个步骤":["85.6"],"发布包":["85.7"],"发布一个私有域名的包":["85.8"],"初识":["86.0"],"初始化":["86.2","94.4","95.3","103.6","208.7"],"创建自定义":["86.4"],"解读":["87.0"],"描述配置":["87.1"],"name":["87.2"],"version":["87.3"],"repository":["87.4"],"description":["87.5","121.2"],"keywords":["87.6","121.3"],"homepage":["87.7"],"bugs":["87.8"],"license":["87.9"],"author":["87.10","121.1"],"文件配置":["87.11"],"files":["87.12"],"type":["87.13","187.0","285.2"],"main":["87.14"],"browser":["87.15"],"module":["87.16"],"exports":["87.17"],"workspaces":["87.18"],"脚本配置":["87.19"],"scripts":["87.20"],"config":["87.21"],"依赖配置":["87.22"],"dependencies":["87.23"],"devdependencies":["87.24"],"peerdependencies":["87.25"],"optionaldependencies":["87.26"],"peerdependenciesmeta":["87.27"],"bundledependencies":["87.28"],"overrides":["87.29"],"发布配置":["87.30"],"private":["87.31"],"publishconfig":["87.32"],"系统配置":["87.33"],"engines":["87.34"],"os":["87.35","97.28","141.5"],"cpu":["87.36"],"第三方配置":["87.37"],"types":["87.38"],"unpkg":["87.39"],"jsdelivr":["87.40"],"browserslist":["87.41"],"sideeffects":["87.42"],"lint":["87.43"],"packager":["88.0"],"解决问题":["88.1"],"前端b端权限控制":["89.0"],"背景":["89.7","168.16"],"总体思路":["89.8"],"按钮":["89.9"],"业务接口返回权限类型字段":["89.10"],"怎么控制按钮的可用状态":["89.11"],"前端的js数据进行":["89.12"],"代码修改":["89.13"],"处理浏览器默认样式":["90.0","286.55"],"常用":["91.0","271.0"],"常用scss":["92.0"],"整理的一些前后端协同工作":["93.0"],"vite":["94.0","102.0"],"vitepress":["94.1"],"创建我们自己的个人博客":["94.2"],"创建项目":["94.3"],"修改":["94.6","97.32","97.39","97.40"],"就可以直接启动项目了":["94.7"],"添加我们的第一个页面":["94.8"],"推荐一个博客模版":["94.9"],"推荐一个自己的博客":["94.10"],"手把手教你搭建一个生产级的vite":["95.0"],"技术选型":["95.1"],"开始搭建":["95.2"],"esm":["95.4"],"pnpm":["95.5"],"vscode插件":["95.8"],"配置":["95.9","95.13","95.16","95.20","95.49","97.41","97.42","97.59"],"prettier":["95.11"],"commitlint":["95.14"],"手动添加commit":["95.17"],"自动添加commit":["95.18"],"配合tsconfig":["95.21"],"服务端路由与客户端路由":["95.22"],"重置样式":["95.26"],"tailwind配置":["95.27"],"响应式布局":["95.28"],"postcss配置":["95.29"],"移动端兼容":["95.30"],"响应式":["95.31","95.34"],"pxtorem方案":["95.32"],"pxtoviewport方案":["95.33"],"light":["95.38"],"dark":["95.39"],"tailwind":["95.40"],"antd":["95.41"],"获取当前网页的主题":["95.42"],"文本国际化":["95.43"],"i18next":["95.44"],"服务端":["95.45"],"客户端和服务端渲染":["95.46"],"react":["95.47","99.8","176.17","176.18","205.0","207.1","208.3","209.2","209.11","286.36"],"国际化":["95.48"],"vue3":["96.0","220.1","239.1","244.2","254.1","254.11","254.12"],"介绍":["96.7","153.1"],"mock":["96.12","96.13"],"从0搭建":["97.0"],"技术栈":["97.1"],"基础搭建":["97.2"],"安装依赖":["97.3","97.6","97.9","97.12","97.15","97.20","97.24","97.31","97.33","97.38","97.43","97.51"],"创建路由配置文件":["97.4"],"挂载路由配置":["97.5"],"创建仓库配置文件":["97.7"],"挂载":["97.8","236.4"],"基础使用":["97.10"],"按需引入":["97.11"],"请求配置":["97.13"],"模拟演示":["97.14"],"如何使用":["97.16"],"全局样式":["97.17"],"样式穿透":["97.18"],"代码规范":["97.19"],"安装插件":["97.21","97.25","97.34"],"创建":["97.22","97.23","97.26","97.27","97.35","97.36","97.61","213.0","240.0","258.5","258.6","258.7"],"local":["97.29"],"built":["97.30"],"启用":["97.37"],"新增配置":["97.44"],"修改触发命令":["97.45"],"提交规范":["97.46"],"header":["97.47"],"body":["97.48"],"footer":["97.49"],"参考例子":["97.50"],"指定适配器":["97.52"],"自定义配置":["97.53","97.57"],"全局使用":["97.54"],"安装全局依赖":["97.55"],"全局配置适配器类型":["97.56"],"自动部署":["97.60"],"数据埋点起步":["98.0"],"认识数据埋点":["98.1"],"用户行为":["98.2"],"错误警告":["98.3"],"页面性能":["98.4"],"设计前端数据埋点":["98.5"],"应用的唯一标识":["98.6"],"数据发送格式":["98.7"],"统计":["98.8"],"统计用户点击按钮":["98.9"],"全局错误":["98.10"],"局部错误":["98.11"],"接口请求错误":["98.12"],"组件级错误":["98.13"],"从0到1搭建前端监控平台":["99.0"],"定位源码":["99.1"],"播放录屏":["99.2"],"记录用户行为":["99.3"],"监控目的":["99.4"],"异常分析":["99.5"],"错误捕获方式":["99.6"],"vue":["99.7","254.25","254.26","286.47"],"跨域问题":["99.9"],"接口错误":["99.10"],"设计思路":["99.11","158.2","164.2"],"页面跳转":["99.12"],"用户点击":["99.13"],"资源加载":["99.14"],"long":["99.15","159.6"],"memory页面内存":["99.16"],"首屏加载时间":["99.17"],"整体架构":["99.18"],"sdk":["99.19"],"事件发布与订阅":["99.20"],"用户行为收集":["99.21"],"数据上报方式":["99.22"],"数据上报时机":["99.23"],"前端录屏":["100.0"],"sourcemap":["100.1"],"source":["100.2"],"error":["100.3"],"示例演示":["100.4"],"流程总结":["100.5"],"rrweb":["100.6","100.7"],"压缩数据":["100.8"],"何时上报录屏数据":["100.9"],"基于rem的适配方案":["101.0"],"rem是什么":["101.1"],"项目实战":["101.3","101.5"],"对静态资源的处理":["102.2"],"从0搭建一个webrtc":["103.0"],"enumeratedevices":["103.1"],"getusermedia":["103.2"],"视频参数配置":["103.3"],"音频参数配置":["103.4"],"一对一的流程":["103.5"],"创建offer":["103.7"],"处理offer":["103.8"],"处理answer":["103.9"],"处理ice":["103.10"],"处理音视频数据":["103.11"],"成员列表的接口":["103.12"],"多对多初始化":["103.13"],"获取成员列表":["103.14"],"创建多对多的offer和answer":["103.15"],"getdisplaymedia":["103.16"],"mediarecorder":["103.17"],"webrtc":["104.0"],"homebackgrount":["105.0"],"图片":["106.0","284.23","289.0"],"基础":["106.1","165.1"],"语法":["106.2","168.18","168.22","254.6"],"规则":["106.3"],"charset":["106.4"],"import":["106.5","127.54"],"supports":["106.6"],"层叠性":["106.7"],"选择器":["106.8"],"基础选择器":["106.9"],"组合选择器":["106.10"],"伪类":["106.11"],"伪元素":["106.12"],"优先级":["106.13"],"继承性":["106.14"],"文档流":["106.15"],"盒模型":["106.16"],"视觉格式化模型":["106.17"],"outer":["106.18"],"inner":["106.19"],"格式化上下文":["106.20"],"bfc":["106.21","106.39"],"ifc":["106.22"],"层叠上下文":["106.23"],"值和单位":["106.24"],"px":["106.25"],"em":["106.26"],"rem":["106.27"],"vw":["106.28"],"颜色体系":["106.29"],"颜色关键字":["106.30"],"transparent":["106.31"],"currentcolor":["106.32"],"rgb":["106.33"],"hsl":["106.34"],"媒体查询":["106.35"],"自定义属性":["106.36"],"清除浮动":["106.38"],"通过":["106.40"],"消除浏览器默认样式":["106.41"],"长文本处理":["106.42"],"水平垂直居中":["106.43"],"单行的文本":["106.44"],"固定宽高的块级盒子":["106.45"],"不固定宽高的块级盒子":["106.46"],"常用布局":["106.47"],"两栏布局":["106.48"],"三栏布局":["106.49"],"多列等高布局":["106.50"],"三行布局":["106.51"],"适配器模式":["107.0","107.2"],"场景":["107.1","108.1","109.1","110.1","111.1","112.1","158.1","164.1"],"代码实现":["107.3","108.3","109.7","110.3","111.3","153.5","153.6","153.7","153.11","159.2","159.5","159.9","159.13"],"更多场景":["107.4","112.4"],"易混设计模式":["107.5","108.4"],"装饰器模式":["108.0","108.2"],"代理模式":["109.0","109.2"],"what":["109.4","109.6"],"观察者模式":["110.0"],"设计模式定义":["110.2","111.2"],"发布订阅模式":["111.0"],"特殊情况":["111.4"],"策略模式":["112.0","112.2"],"优化代码":["112.3"],"docker":["113.0","114.0","114.32","177.14"],"七":["113.7"],"八":["113.8"],"认识docker":["114.1"],"术语":["114.2"],"从图中可以看出几个组成部分":["114.3"],"软件安装":["114.5"],"命令行安装":["114.6"],"使用docker启动一个vue项目":["114.7"],"新建项目":["114.8"],"新建":["114.9"],"拉取":["114.10"],"在根目录创建":["114.11"],"配置镜像":["114.12"],"构建镜像":["114.13"],"运行容器":["114.14"],"参数解释":["114.15"],"访问项目":["114.16"],"发布镜像":["114.17"],"底层原理简介":["114.18"],"namespace":["114.19"],"进阶技巧总结":["114.20"],"镜像仓库与拉取":["114.21"],"构建镜像与发布":["114.22"],"dockerfile":["114.23"],"from":["114.24"],"add":["114.25"],"run":["114.26"],"cmd":["114.27"],"容器":["114.28"],"创建容器":["114.29"],"容器管理":["114.30"],"容器测试":["114.31"],"常用命令":["116.1"],"查询配置信息":["116.2"],"第一次使用git":["116.3"],"其他配置":["116.4"],"gitignore":["117.2"],"储藏":["118.0"],"stash":["118.1"],"保存当前代码":["118.2"],"查看stash代码":["118.3"],"应用stash代码":["118.4"],"删除stash代码":["118.5"],"以stash储藏创建一个分支":["118.6"],"如图":["118.7"],"工作区":["119.1"],"从远程克隆仓库":["119.2"],"提交":["119.3"],"撤销":["119.4"],"更新文件":["119.5"],"查询信息":["119.6"],"暂存区":["119.7"],"提交文件到版本库":["119.8"],"查看信息":["119.9"],"打标签":["119.10"],"分支管理":["119.11"],"doctype":["120.0"],"html":["120.1","120.2"],"xml":["120.3"],"如何区分":["120.4"],"意义":["120.5"],"常见区别":["120.6"],"作为前端":["121.0"],"viewpoint":["121.4"],"robots":["121.5"],"renderer":["121.6"],"x":["121.7","121.9"],"content":["121.8","175.4"],"html简介":["122.0"],"标题标签":["122.1"],"段落标签":["122.2"],"水平线标签":["122.3"],"换行标签":["122.4"],"文本格式化标签":["122.5"],"图像标签":["122.6"],"路径":["122.7"],"超链接标签":["122.8"],"html中的注释和特殊字符":["122.9"],"表格标签":["122.10"],"表头单元格标签":["122.11"],"表格结构标签":["122.12"],"合并单元格":["122.13"],"列表标签":["122.14"],"无序列表":["122.15"],"有序列表":["122.16"],"自定义列表":["122.17"],"表单标签":["122.18"],"表单域":["122.19"],"表单控件":["122.20"],"input表单元素":["122.21"],"label标签":["122.22"],"select下拉表单元素":["122.23"],"textarea文本域标签":["122.24"],"如何理解":["124.0"],"浅拷贝与深拷贝":["125.0"],"九种跨域方式实现原理":["126.0"],"从es6到es10":["127.0"],"历史版本":["127.1"],"发展标准":["127.2"],"let":["127.3"],"类":["127.4"],"箭头函数":["127.5"],"函数参数默认值":["127.6"],"模板字符串":["127.7","127.27","127.38"],"解构赋值":["127.8"],"模块化":["127.9"],"扩展操作符":["127.10"],"对象属性简写":["127.11"],"promise":["127.12","127.44","132.2","132.3","132.4","165.2","176.13"],"for":["127.13","127.37","129.0","129.1","129.3","129.4","129.6"],"symbol":["127.14","127.48"],"迭代器":["127.15"],"set":["127.16","247.1"],"proxy":["127.18"],"regex对象的扩展":["127.19"],"正则新增符号":["127.20"],"字符串方法的实现改为调用":["127.21"],"正则新增属性":["127.22"],"math对象的扩展":["127.23"],"array对象的扩展":["127.24"],"array":["127.25","127.45","182.0"],"幂运算符":["127.26"],"async":["127.28","176.7"],"object":["127.29","127.30","127.36","127.47"],"padstart":["127.31"],"padend":["127.32"],"函数参数结尾逗号":["127.33"],"sharearraybuffer":["127.34"],"atomics对象":["127.35"],"正则表达式反向":["127.39"],"正则表达式":["127.40","127.41"],"正则表达式命名捕获组":["127.42"],"对象扩展操作符":["127.43"],"string":["127.46","127.49"],"function":["127.50"],"try":["127.51"],"bigintbigint":["127.52"],"globalthis":["127.53"],"私有元素与方法":["127.55"],"阐述一下":["128.0"],"代码示例":["129.2","129.5"],"总结来说":["129.8"],"json":["130.0","130.1","130.2","130.3","130.4","130.5","130.6","130.7","130.8","130.9","130.10","130.11","273.0","290.0"],"强大的第二个参数":["130.12"],"华丽的第三个参数":["130.13"],"常用的js":["131.0"],"手写":["131.1","131.2","131.3","131.4","131.5","131.6","131.7","131.8","131.9","131.10","132.0"],"手写instanceof":["131.11"],"mypromise":["132.1"],"跨页面通信":["133.0"],"对于同源页面":["133.9"],"细说前端路由的hash模式和":["134.0"],"为什么要用":["134.1"],"前端路由实现方式":["134.2"],"js":["135.0","176.8","286.50"],"url":["136.0","296.0"],"escape不编码字符有69个":["136.2"],"encodeuri不编码字符有82个":["136.4"],"与encodeuri":["136.6"],"硬链接和软链接":["137.0"],"文件重命名或文件移动":["137.1"],"文件删除":["137.2"],"链接文件和文件夹":["137.3"],"不同文件系统创建链接":["137.4"],"硬链接":["137.5"],"软链接":["137.6"],"基础知识":["138.0"],"基础命令":["138.1"],"列出":["138.2","138.5","142.24"],"查看":["138.4","138.16"],"全格式显示所有":["138.6"],"开机自启":["138.7"],"设置开机自启":["138.8"],"关闭开机自启":["138.9"],"启动":["138.10","138.11"],"停止":["138.12"],"重启":["138.13"],"重载":["138.14"],"杀死单个进程":["138.15"],"检查配置项是否有问题":["138.17"],"当前目录下":["138.18"],"不在当前目录":["138.19"],"配置文件":["138.20"],"上文日志格式中所涉及变量含义如下":["138.21"],"静态资源配置":["138.22"],"root":["138.23"],"autoindex":["138.24"],"反向代理":["138.25","139.2"],"我们在服务器上跑一个":["138.26"],"解决跨域":["138.27"],"hosts":["138.28"],"nginx":["138.29","139.0","177.13"],"https":["138.30"],"配置https":["138.31"],"访问":["138.32"],"rewrite":["138.33"],"图片防盗链":["138.34"],"访问限制":["138.35"],"禁用请求方法":["138.36"],"缓存":["138.37","225.4"],"pc端和移动端使用不同项目":["138.38"],"负载均衡":["138.39","139.3"],"限速限流":["138.40"],"其它":["138.41"],"开启gzip":["138.42"],"正向代理":["139.1"],"动静分离":["139.4"],"require加载器实现原理":["140.0"],"需要了解的nodejs知识":["141.0"],"util":["141.1"],"常用的判断属性":["141.2"],"常用的方法和属性":["141.3","141.6","141.8"],"dns":["141.4","146.1"],"path":["141.7"],"常用操作":["142.0"],"登录":["142.1"],"docs":["142.2"],"查看某个包的文档":["142.3"],"查看某个包的官网":["142.4"],"info":["142.5"],"star":["142.6"],"主要是用来收藏项目":["142.7"],"取消收藏":["142.8"],"查看收藏列表":["142.9"],"versions":["142.10"],"本地开发的":["142.11"],"publish":["142.12"],"记得每次发布前":["142.13"],"取消发布包":["142.14"],"取消发布包的指定版本":["142.15"],"deprecate":["142.16"],"弃用整个包":["142.17"],"弃用包的单个版本":["142.18"],"取消弃用操作":["142.19"],"将弃用消息改为空字符串即可":["142.20"],"其他操作":["142.21"],"查看项目中那些包过时":["142.22"],"查看本地中那些包过时":["142.23"],"审计项目中所有包的安全漏洞":["142.25"],"这个命令依赖":["142.26"],"执行后会列出有问题的包":["142.27"],"检测一下当前镜像源的延迟":["142.28"],"检测当前":["142.29"],"link":["143.0"],"使用软链":["143.1"],"运行":["144.1","149.3"],"node":["144.2","152.30"],"unix":["144.3"],"windows":["144.4","144.5"],"依赖包分类":["145.2"],"项目版本号管理":["145.3"],"预发版本":["145.4"],"当前版本号为":["145.5"],"在git环境中":["145.6"],"html优化":["146.0"],"图片加载优化":["146.2"],"预加载":["146.3","150.7"],"预渲染":["146.4"],"懒执行":["146.5"],"懒加载":["146.6","150.1","150.15"],"cdn":["146.7"],"图片懒加载":["147.0"],"何减少卡顿的代码":["148.0"],"使用代码延迟任务执行":["148.1"],"使用asycn":["148.2"],"只在必要时让步":["148.3"],"专门编排优先级的api":["148.4"],"内置不中断的让步方法":["148.5"],"减少引用类型内存访问":["149.0"],"案例":["149.1"],"请看为何":["149.2"],"原因":["149.4"],"前端性能监控performance":["150.0","151.0"],"实现代码":["150.2"],"实现细节":["150.3"],"实现效果":["150.6","150.13"],"实现方法":["150.8"],"总结对比":["150.14"],"我们可转化为三个方面来看":["151.3"],"最全的前端性能定位总结":["152.0"],"性能优化的意义":["152.1"],"用户角度的性能标准是什么":["152.4"],"著名的":["152.5"],"常见网站性能指标":["152.6"],"google":["152.7","152.14"],"整体结构":["152.15"],"工具条区域":["152.16"],"总览区域":["152.17"],"火焰图":["152.18"],"总体报告":["152.19"],"summary":["152.20"],"bottom":["152.21"],"call":["152.22"],"event":["152.23"],"lighthouse":["152.24"],"accessibility":["152.26"],"best":["152.27"],"seo":["152.28"],"progressive":["152.29"],"虚拟列表":["153.0","286.38"],"虚拟列表解决的长列表渲染大量节点导致的性能问题":["153.2"],"列表项高度固定":["153.3"],"思路讲解":["153.4","153.10"],"使用示例":["153.8","153.12"],"列表项高度动态":["153.9"],"webpack":["154.0","191.0","193.1","193.2","193.6","193.8","193.9","193.10"],"提升打包构建速度":["154.1"],"hotmodulereplacement":["154.2"],"hmr":["154.3"],"oneof":["154.4"],"持久化缓存":["154.6"],"network":["154.7"],"thead":["154.8"],"tree":["154.9"],"babel":["154.10"],"多入口":["154.11"],"提取重复代码":["154.12"],"按需加载":["154.13"],"给动态导入文件取名称":["154.14"],"统一命名配置":["154.16"],"preload":["154.17"],"core":["154.18"],"externals":["154.19"],"shimming":["154.20"],"小程序代码包极致压缩之路":["155.0"],"看起来很美好":["155.9"],"hooks":["156.0","208.0","208.1","208.2"],"自定义hooks是什么":["156.1"],"玩转react":["156.2"],"通过useref获取对应的属性值":["156.3"],"缓存数据":["156.4"],"uselatest":["156.5"],"结合usememo和useref封装usecreation":["156.6"],"验证":["156.7","156.14","156.18","156.24"],"usemount":["156.8"],"useunmount":["156.9"],"结合":["156.10"],"useupdate":["156.11"],"分析":["156.12"],"代码":["156.13","156.15"],"支持ssr":["156.16"],"详细代码":["156.17","156.23"],"小例子":["156.19"],"usetimeout":["156.20"],"useinterval":["156.21"],"usecountdown":["156.22"],"效果展示":["156.25"],"end":["156.26"],"react的setstate是异步的还是同步的":["157.0"],"那么为什么setstate设计为异步呢":["157.1"],"如何获取异步的结果":["157.2"],"关于前端":["158.0","164.0"],"开发":["158.3","164.3"],"测试":["158.4","164.4"],"结果":["158.5","164.5"],"实时更新数据":["159.0"],"概念解释":["159.1","159.8","159.12"],"polling的优缺点":["159.3"],"使用场景":["159.4","159.15"],"websocket的优缺点":["159.10"],"sse的优缺点":["159.14"],"实现拖拽":["160.0"],"eventloop":["161.0"],"请设计一个不能操作dom和调接口的环境":["162.0"],"简陋的沙箱":["162.1"],"with":["162.2"],"天然的优质沙箱":["162.3"],"设计一个":["163.0"],"红绿灯的两种实现":["165.0"],"无感刷新token":["166.0"],"请求合并":["167.0"],"要求":["167.1"],"场景分析":["167.2"],"考点":["167.3"],"需要考虑的问题":["167.4"],"requestanimationframe":["168.0","168.5","168.9","168.14","168.17","168.28"],"requestidlecallback":["168.1"],"原理":["168.2","168.6"],"演示效果":["168.4","168.8"],"前言":["168.15"],"用法":["168.19","168.23"],"返回值":["168.20","168.24"],"settimeout":["168.21","168.26"],"两者对比":["168.25"],"小结":["168.27"],"前端水印功能":["169.0"],"实现水印功能":["169.1"],"基于原图生成水印图片":["169.2"],"微信小程序实现一些优惠券":["170.0"],"局限性":["170.3","170.7"],"eg":["170.5"],"实现两侧内圆角":["170.6"],"综上所述":["170.9"],"常见的前端算法题":["174.0"],"两数之和":["174.1"],"题目":["174.2","174.6","174.10","174.14","174.18","174.27","174.31","174.35","174.39","174.42","174.46","174.50","174.54","174.58","174.62"],"输入":["174.3","174.7","174.11","174.15","174.19","174.28","174.32","174.36","174.40","174.43","174.47","174.51","174.55","174.59","174.63"],"输出":["174.4","174.8","174.12","174.16","174.20","174.29","174.33","174.37","174.44","174.48","174.52","174.56","174.60","174.64"],"三数之和":["174.5"],"版本号排序":["174.9"],"第一个不重复的字符":["174.13"],"字符串所有排列组合":["174.17"],"列表转成树":["174.26"],"深度优先遍历":["174.30"],"树形结构查找节点":["174.38"],"二叉查找树":["174.41"],"查找二叉树的路径":["174.45"],"买卖股票问题":["174.49"],"斐波那契数列":["174.53"],"滑动窗口最大值":["174.57"],"最长递增子序列":["174.61"],"面试万字总结":["175.0"],"为什么post请求会发送两次请求":["175.1"],"浏览器缓存的优点":["175.13"],"sessionstorage":["175.16"],"node中间件代理":["175.20"],"nginx反向代理":["175.21"],"什么是中间人攻击":["175.22"],"字节前端面试题":["176.0"],"写":["176.1"],"什么是防抖和节流":["176.2"],"介绍下":["176.3","176.19"],"介绍下深度优先遍历和广度优先遍历":["176.4"],"请分别用深度优先思想和广度优先思想实现一个拷贝函数":["176.5"],"es5":["176.6"],"谈谈你对":["176.14"],"四次握手":["176.16"],"中级前端面试":["177.0","178.0","179.0"],"经验":["179.10"],"最佳实践":["179.39"],"安全":["179.52"],"三十七个常见vue面试题":["180.0"],"普通插槽":["180.1"],"作用域插槽":["180.2","252.7"],"数组一般只限制集合的类型":["182.1"],"元祖":["182.2"],"interface":["183.0"],"type和interface的相同点":["183.1"],"都是用来定义":["183.2"],"type和interface的不同点":["183.3"],"首先聊聊type可以做到":["183.4"],"接下来聊聊interface可以做到":["183.5"],"面试题集合":["184.0"],"什么是typescript":["184.1"],"为什么要使用":["184.2"],"优势":["184.3"],"typescript":["184.4","184.5","184.6","184.7","184.8","184.9","184.10","184.11","184.12","184.13","184.16","184.24","184.26","184.28","185.3"],"相同点":["184.14"],"不同点":["184.15"],"简单介绍一下":["184.17"],"简单聊聊你对":["184.18"],"协变":["184.19","184.20"],"逆变":["184.21"],"双变":["184.22"],"抗变":["184.23"],"类型的全局声明和局部声明":["184.25"],"如何使":["184.27"],"declare":["184.29"],"keyof":["184.31"],"简述工具类型":["184.32"],"数组定义的两种方式":["184.33"],"说说你对":["185.0"],"类型批注":["185.4"],"类型推断":["185.5"],"接口":["185.6"],"tsconfig":["186.0","186.1"],"重要字段":["186.2"],"compileroptions":["186.3"],"unknown":["188.0"],"void":["189.0"],"vue3中操作dom的四种方式":["190.0"],"示例代码":["190.2","190.4","190.6"],"webpack内置插件progressplugin":["191.1"],"webpackbar美化":["191.2"],"friendly":["191.3"],"webpack中的三种hash分别是":["192.0"],"hash":["192.1"],"chunkhash":["192.2"],"contenthash":["192.3"],"file":["192.4"],"webpack面试题":["193.0"],"从上述打包流程角度":["193.3"],"流程类配置项综述":["193.4"],"工具类配置项综述":["193.5"],"webpack有哪些常":["193.7"],"微信小程序的实现原理":["194.0"],"小程序启动运行两种情况":["194.4"],"需要注意":["194.5"],"小程序攻略":["195.0"],"利用现有登录体系":["195.1"],"利用openid":["195.2"],"利用":["195.3"],"http2支持情况":["195.5"],"http2服务器需要对小程序做兼容性适配":["195.6"],"使用分包加载优化":["195.7"],"compiler":["195.8","254.13","254.14","254.15","254.16"],"runtime":["195.9","219.12","219.13","254.17","254.18","254.19"],"小程序生命周期":["196.0"],"应用的生命周期":["196.2","196.6"],"页面的生命周期":["196.3","196.7"],"组件的生命周期":["196.4","196.8","220.0"],"注意的是":["196.9"],"应用的生命周期执行过程":["196.12"],"当存在也应用生命周期和页面周期的时候":["196.14"],"微信小程序的登录流程":["197.0"],"实现小程序用户体系主要涉及到openid和code的概念":["197.2"],"微信小程序登陆具体实现的逻辑如下图所示":["197.4"],"更加详细的功能图如下所示":["197.5"],"这种方式的好处是不需要小程序服务端来参与校验":["197.7"],"提高微信小程序的应用速度的手段有哪些":["198.0"],"小程序启动会常常遇到如下图场景":["198.2"],"整体流程如下图":["198.3"],"加载":["198.5"],"渲染":["198.6"],"小程序启动加载性能":["198.8"],"小程序渲染性能":["198.9"],"微信小程序的支付流程":["199.0"],"场景如下图所示":["199.2"],"具体的做法":["199.4"],"参数表如下所示":["199.5","202.5","202.8","202.11","202.15"],"小程序面试题":["200.0"],"小程序是双线程架构还是单线程架构":["200.1"],"小程序中":["200.2","200.5","200.7","200.8"],"小程序":["200.4","200.6","200.13"],"编译":["200.9"],"wcsc":["200.10"],"三部分":["200.11"],"第三部分":["200.12"],"预编译":["200.14"],"半编译":["200.15"],"运行时框架":["200.16"],"微信小程序的发布流程":["201.0"],"关于发布的流程":["201.3"],"上传代码":["201.4"],"提交审核":["201.5"],"发布版本":["201.6"],"上述是最简单的小程序代码发布的流程":["201.8"],"微信小程序中路由跳转的方式有哪些":["202.0"],"常见的微信小程序页面跳转方式有如下":["202.3"],"wx":["202.4","202.7","202.10","202.12","202.14"],"流程图如下":["202.6"],"流程图如下所示":["202.9","202.16"],"参数表如下":["202.13"],"关于上述五种跳转方式":["202.18"],"其中关于它们的页面栈的关系如下":["202.19"],"微信小程序的理解":["203.0"],"其中相比h5":["203.3"],"优点":["203.5"],"缺点":["203.6"],"axios":["204.0"],"去除事件池":["205.1"],"事件委托到根节点":["205.2"],"更贴近原生浏览器事件":["205.3"],"全新的":["205.4"],"副作用清理时机":["205.5"],"返回一致的":["205.6"],"原生组件栈":["205.7"],"移除私有导出":["205.8"],"启发式更新算法更新":["205.9"],"并发模式":["205.10"],"更新":["205.11","221.8","222.6","236.6"],"自动批处理":["205.12"],"suspense":["205.13"],"starttransition":["205.14"],"usetransition":["205.15"],"usedeferredvalue":["205.16"],"useid":["205.17"],"提供给第三方库的":["205.18"],"usesyncexternalstore":["205.19"],"useinsertioneffect":["205.20"],"协调与调度":["206.0","206.7","209.0"],"requestupdatelane":["206.1"],"findupdatelane":["206.2"],"lanepriority":["206.3"],"createupdate":["206.4"],"enqueueupdate":["206.5"],"reconciler流程":["206.8"],"同步任务类型执行机制":["206.9"],"异步任务类型执行机制":["206.10"],"shouldyield":["206.11"],"performunitofwork":["206.12"],"beginwork":["206.13"],"completeunitofwork":["206.14"],"scheduler流程":["206.15"],"performworkuntildeadline":["206.16"],"冒泡阶段和捕获阶段":["207.2"],"阻止冒泡":["207.3"],"什么是事件合成":["207.4"],"事件合成概念":["207.5"],"事件插件机制":["207.6"],"第一个":["207.7"],"第二个registrationnamedependencies":["207.8"],"为什么要用不同的事件插件处理不同的":["207.9"],"为什么不能用":["207.10"],"事件是绑定在真实的dom上吗":["207.11"],"事件注册":["207.17"],"事件存储":["207.18"],"事件触发":["207.19"],"合成事件":["207.20"],"总流程":["207.21"],"状态派发":["208.4"],"dispatchaction":["208.5"],"处理副作用":["208.6"],"useeffect和uselayouteffect区别":["208.8"],"useeffect":["208.9"],"uselayouteffect":["208.10"],"状态获取与状态缓存":["208.11"],"ref":["208.12","208.13","208.14","250.0","250.1"],"usememo的处理":["208.15"],"usememo":["208.16","208.17","209.4"],"render阶段作用是什么":["209.1"],"缓存react":["209.3"],"usememo原理":["209.5"],"usememo应用场景":["209.6"],"purecomponent":["209.7","209.8"],"shallowequal":["209.9"],"shouldcomponentupdate":["209.10"],"memo的几个特点是":["209.12"],"有没有必要在乎组件不必要渲染":["209.13"],"一些开发中的细节问题":["209.14"],"usecallback":["209.15"],"getbasetransformpreset":["210.1"],"transform":["210.2"],"创建根节点的代码生成节点":["212.0"],"createrootcodegen":["212.1"],"遍历":["214.0"],"表达式节点转换函数":["214.2"],"text":["214.3"],"静态提升":["215.0","254.9"],"hoiststatic":["215.1"],"getconstanttype":["215.2"],"静态提升的成本":["215.3"],"内置组件":["216.0"],"teleport":["216.1"],"keepalive":["216.2"],"组件的渲染":["216.3"],"缓存的设计":["216.4"],"props":["216.5","221.1","221.2","221.6"],"组件的卸载":["216.6"],"异步组件":["217.0"],"渲染占位节点":["217.1"],"加载异步":["217.2"],"重新渲染组件":["217.3"],"高级用法":["217.4"],"loading组件":["217.5"],"error组件":["217.6"],"只加载一次":["217.7"],"组件的初始化流程":["218.0","219.11"],"组件的创建":["218.1"],"createbasevnode":["218.4","232.2"],"createvnode":["218.5"],"组件的挂载":["218.6"],"mountcomponent":["218.7","219.1"],"主要参数":["218.8"],"应用程序初始化":["218.9"],"为什么要重写":["218.10"],"组件的实例":["219.0"],"创建组件实例":["219.2"],"为什么要创建组件实例":["219.3"],"设置组件实例":["219.4"],"有状态组件是什么":["219.5"],"setupstatefulcomponent":["219.6"],"创建渲染函数上下文代理":["219.7"],"上下文代理的优化":["219.8"],"处理":["219.9"],"完成组件实例的设置":["219.10"],"注册钩子函数":["220.2"],"injecthook":["220.3"],"onbeforemount":["220.4"],"onbeforeupdate":["220.5"],"onbeforeunmount":["220.6"],"onerrorcaptured":["220.7"],"组件的":["221.0"],"设置props":["221.3"],"验证props":["221.4"],"响应式处理":["221.5"],"触发子组件的重新渲染":["221.7"],"对象类型":["221.10"],"组件的渲染流程":["222.0"],"渲染函数更新组件的过程":["222.1"],"更新组件主要做了三件事情":["222.2"],"patch":["222.3"],"首先处理组件":["222.4"],"处理普通元素":["222.5"],"更新子节点":["222.7"],"diff":["222.8"],"同步头部节点":["222.9"],"同步尾部节点":["222.10"],"处理完":["222.11"],"computed":["223.0","223.1"],"reactiveeffect":["223.2","247.4"],"计算属性":["224.0"],"计算属性的运行机制":["225.0"],"运行机制":["225.1"],"计算属性的两个特点":["225.2"],"延时计算":["225.3"],"生成代码":["226.0"],"generate":["226.1"],"创建代码生成上下文":["227.0"],"createcodegencontext":["227.1"],"生成预设代码":["228.0"],"genmodulepreamble":["228.1"],"helpernamemap":["228.2"],"genhoists":["228.3"],"生成渲染函数的名称和参数":["229.0"],"生成资源声明代码":["230.0"],"在渲染函数内部":["230.1"],"genassets":["230.2"],"生成创建的":["231.0"],"gennode":["231.1"],"genvnodecall":["231.2"],"gennullableargs":["231.3"],"gennodelist":["231.4"],"genexpression":["231.5"],"gennodelistasarray":["231.6"],"genconditionalexpression":["231.7"],"运行时的优化":["232.0"],"openblock":["232.1"],"createelementblock":["232.3"],"patchblockchildren":["232.4"],"自定义指令的定义":["234.0"],"钩子函数":["234.1"],"created":["234.2"],"beforemount":["234.3"],"mounted":["234.4"],"beforeupdate":["234.5"],"updated":["234.6"],"beforeunmount":["234.7"],"unmounted":["234.8"],"指令的注册":["235.0"],"全局注册":["235.1"],"局部注册":["235.2"],"指令的全局注册和局部注册区别":["235.3"],"directive":["235.4"],"指令的应用":["236.0"],"resolvedirective":["236.1"],"withdirectives":["236.2"],"元素的生命周期如何运行钩子函数":["236.3"],"invokedirectivehook":["236.5"],"卸载":["236.7"],"模版解析总结":["238.0"],"生成":["239.0","239.4","241.2"],"compile":["239.2"],"basecompile":["239.3"],"如果通过模版字符串生成":["239.5"],"createroot":["240.1"],"解析子节点":["241.0","241.10"],"parsechildren":["241.1"],"注释节点的解析":["241.3"],"advanceby":["241.4","241.5"],"插值的解析":["241.6"],"普通文本的解析":["241.7"],"元素节点的解析":["241.8"],"解析开始标签":["241.9"],"解析结束标签":["241.11"],"创建解析上下文":["242.0"],"createparsercontext":["242.1"],"依赖注入":["243.0","243.6","243.9","243.12"],"provide":["243.1"],"inject":["243.2"],"对比模块化共享数据的方式":["243.3"],"依赖注入和模块化共享数据的差异":["243.4"],"作用域不同":["243.5"],"模块化共享数据":["243.7","243.10","243.13"],"数据来源不同":["243.8"],"上下文不同":["243.11"],"依赖注入的缺陷和应用场景":["243.14"],"响应式原理总结":["244.0"],"vue2":["244.1"],"依赖收集":["245.0"],"get":["245.1"],"arrayinstrumentations":["245.2"],"track":["245.3"],"响应式实现的优化":["246.0"],"依赖收集的优化":["246.1"],"设计的全局变量":["246.2"],"effect":["246.3","247.3","258.8"],"优化结果":["246.4"],"trackopbit":["246.5"],"派发通知":["247.0"],"trigger":["247.2"],"reactive":["248.0"],"createreactiveobject":["248.1"],"mutablehandlers":["248.2"],"readonly":["249.0"],"readonlyhandlers":["249.1"],"readonlyget":["249.2"],"trackrefvalue":["250.2"],"unref":["250.3"],"shallowreactive":["251.0"],"shallowreactivehandlers":["251.1"],"shallowget":["251.2"],"插槽":["252.0"],"插槽的实现":["252.1"],"父组件的渲染":["252.2"],"normalizechildren":["252.3"],"子组件的渲染":["252.4"],"renderslot":["252.5"],"slot":["252.6"],"v":["253.0"],"整体设计":["254.0"],"源码结构上面的优化":["254.2"],"源码体积的优化":["254.3"],"数据劫持的优化":["254.4"],"编译优化":["254.5"],"引入":["254.7"],"diff算法优化":["254.8"],"ssr优化":["254.10"],"reactivity":["254.20"],"template":["254.21"],"sfc":["254.22"],"shared":["254.23"],"server":["254.24"],"监听器总结总结":["255.0"],"异步任务队列的创建":["256.0","256.1"],"queueflush":["256.2"],"异步任务队列的执行":["256.3"],"flushjobs":["256.4"],"flushpreflushcbs":["256.5"],"flushpostflushcbs":["256.6"],"检查循环更新":["256.7"],"checkrecursiveupdates":["256.8"],"开发环境":["257.0"],"ontrack":["257.1"],"ontrigger":["257.2"],"watch":["258.0","258.1","258.2"],"标准化":["258.3"],"traverse":["258.4"],"配置了":["258.9"],"返回销毁函数":["258.10"],"watcheffect":["259.0","259.1","259.2"],"注册无效回调函数":["259.3"],"warp":["260.0"],"api":["261.0","261.1"],"openai":["263.0"],"准备":["263.1"],"注册短信平台并充值":["263.2"],"注册openai账号":["263.3"],"准备接码":["263.4"],"开始使用chatgpt":["263.5"],"在线编辑器":["264.0"],"多平台":["265.1"],"循环列表自动输出":["265.2"],"批量数据绑定":["265.3"],"一键预览功能":["265.4"],"更加舒适的":["265.5"],"代码转换工具":["266.0"],"压缩图片":["267.0"],"iimg":["267.1"],"压缩视频":["268.0"],"shipinyasuo":["268.1"],"生成指定尺寸的图片":["269.0"],"抽奖插件":["270.0"],"阮一峰":["271.1"],"intro":["272.0"],"json可视化":["273.1"],"好看的loading":["274.0"],"快速搭建前端mac环境":["275.0"],"marktext":["276.0"],"在线ps":["277.0"],"奇链":["278.0"],"鼠标特效":["279.0"],"静态站点部署":["280.0"],"腾讯云":["280.1"],"常用轮子集合":["281.0"],"函数库":["281.1"],"动画库":["281.2"],"滚动库":["281.3"],"轮播图":["281.4"],"滚屏":["281.5"],"valine":["282.0"],"官网":["282.1"],"实例":["282.2"],"常用hooks":["283.0"],"useafter":["283.1"],"usebefore":["283.2"],"责任链":["283.3","283.7"],"防抖":["283.4"],"usedelay":["283.5"],"uselock":["283.6"],"useonce":["283.8"],"usesafecall":["283.9"],"useservices":["283.10"],"节流":["283.12"],"常用正则":["284.0"],"火车车次":["284.1"],"手机机身码":["284.2"],"必须带端口号的网址":["284.3"],"网址":["284.4"],"统一社会信用代码":["284.5","284.6"],"迅雷链接":["284.7"],"ed2k链接":["284.8"],"磁力链接":["284.9"],"子网掩码":["284.10"],"linux":["284.11"],"linux文件夹路径":["284.12"],"linux文件路径":["284.13"],"window":["284.14","286.51","286.53","286.54"],"window下":["284.15"],"股票代码":["284.16"],"大于等于0":["284.17"],"html注释":["284.18"],"md5格式":["284.19"],"guid":["284.20"],"版本号":["284.21"],"视频":["284.22"],"base64格式":["284.26"],"数字":["284.27","284.28","291.0"],"银行卡号":["284.29"],"中文姓名":["284.30"],"英文姓名":["284.31"],"车牌号":["284.32","284.33","284.34"],"手机号":["284.35","284.36","284.37"],"日期":["284.38","284.39"],"中国省":["284.40"],"可以被moment转化成功的时间":["284.41"],"email":["284.42","284.82"],"座机":["284.43"],"身份证号":["284.44","284.45","284.46"],"护照":["284.47"],"帐号是否合法":["284.48"],"中文":["284.49"],"小数":["284.50"],"只包含数字":["284.51"],"html标签":["284.52"],"匹配中文汉字和中文标点":["284.53"],"qq号格式正确":["284.54"],"数字和字母组成":["284.55"],"英文字母":["284.56"],"小写英文字母组成":["284.57"],"大写英文字母":["284.58"],"密码强度校验":["284.59"],"用户名校验":["284.60"],"ip":["284.61","284.62"],"微信号":["284.64"],"邮政编码":["284.65"],"中文和数字":["284.66"],"不能包含字母":["284.67"],"java包名":["284.68"],"mac地址":["284.69"],"匹配连续重复的字符":["284.70"],"数字和英文字母组成":["284.71"],"香港身份证":["284.72"],"澳门身份证":["284.73"],"台湾身份证":["284.74"],"大写字母":["284.75"],"ascii码表中的全部的特殊字符":["284.76"],"正整数":["284.77"],"负整数":["284.78"],"整数":["284.79"],"浮点数":["284.80","284.81"],"域名":["284.83"],"luhncheck":["284.84"],"计算数组的平均值":["285.1"],"求和":["285.3"],"数组去重":["285.4"],"对象数组去重":["285.5"],"all":["285.6"],"allequal":["285.7"],"castarray":["285.8"],"compact":["285.9"],"deepflatten":["285.10"],"intersection":["285.11"],"intersectionwith":["285.12"],"shuffle":["285.13"],"nest":["285.14"],"业务utils":["286.0"],"判断图片尺寸":["286.1"],"统计页面中所有标签的种类和个数":["286.2"],"计算首屏加载时间":["286.3"],"检查设备上的触摸支持":["286.4"],"网页上获取选定的文本":["286.5"],"检测密码强度":["286.6"],"求两个集合的交集":["286.7"],"求两个集合的并集":["286.8"],"动态引入js":["286.9"],"滚动到顶部":["286.10"],"el是否在视口范围":["286.11"],"洗牌算法随机":["286.12"],"判断类型集合":["286.13"],"deepclone":["286.14"],"unique":["286.15"],"判断数据类型":["286.16"],"getuuid":["286.17"],"createobjecturl":["286.18"],"随机":["286.19"],"判断是否是":["286.20"],"判断不是":["286.21"],"生成随机十六进制":["286.22"],"检查当前选项卡是否在后台":["286.23"],"检测元素是否处于焦点":["286.24"],"检查设备类型":["286.25"],"文字复制到剪贴板":["286.26"],"将":["286.27"],"根据身份证号自动生成性别":["286.28"],"扁平数据结构转tree":["286.29"],"递归":["286.30"],"数字滚动":["286.32"],"封装":["286.33"],"处理海量数据":["286.35"],"时间分片":["286.37"],"纯js监听document是否加载完成":["286.39"],"取得文件扩展名":["286.40"],"大文件":["286.41"],"创建切片":["286.42"],"拼接":["286.43"],"上传切片":["286.44"],"合并切片":["286.45"],"handlefileupload":["286.46"],"页面尺寸整体缩放":["286.48"],"用数组建立一个简单的循环":["286.49"],"相关":["286.52"],"scrolltotop":["286.56"],"smoothscroll":["286.57"],"detectdevicetype":["286.58"],"getscrollposition":["286.59"],"escapehtml":["286.60"],"isbrowser":["286.61"],"isbrowsertab":["286.62"],"random":["286.63"],"httpsredirect":["286.64"],"hide":["286.65"],"hasclass":["286.66"],"distance":["286.67"],"bottomvisible":["286.68"],"不能操作dom和调接口的环境":["286.69"],"防止重复请求":["286.70"],"获取获取字符串的宽度":["286.71"],"笛卡尔积算法":["286.72"],"时间":["287.0"],"两个日期之间的日差":["287.1"],"获取前几天后几天的时间":["287.2"],"获取前三个月的时间":["287.3"],"年月日日期前添加":["287.4"],"判断是否为同一天":["287.5"],"根据时间戳返回天":["287.6"],"查询某天是否为工作日":["287.7"],"转换华氏":["287.8"],"函数":["288.0"],"递归处理输入的函数":["288.1"],"批量处理函数":["288.2"],"通用函数拦截器":["288.3"],"函数重载":["288.4"],"函数结果缓存":["288.5"],"base64":["289.1"],"safejsonparse":["290.1"],"随机数范围":["291.1"],"数字千分位":["291.2"],"randomnumberinrange":["291.3"],"round":["291.4"],"tocurrency":["291.5"],"数值单位转换":["291.6"],"对象":["292.0","293.0"],"判断是否是空对象":["292.1","293.1"],"判断是不是对象":["292.2","293.2"],"请求":["294.0"],"请求结果缓存":["294.1"],"字符转换":["295.1"],"反转字符串":["295.3"],"bytesize":["295.4"],"capitalize":["295.5"],"capitalizeeveryword":["295.6"],"decapitalize":["295.7"],"连接命名转换成小驼峰命名":["295.8"],"连接命名转换成大驼峰命名":["295.9"],"驼峰命名转换成":["295.10"],"追加":["296.1"],"根据":["296.2"],"从":["296.3"],"currenturl":["296.4"]},{"0":["0.0","0.1","10.6","14.0","22.18","22.19","23.50","28.0","28.1","28.2","64.7","64.8","86.2","89.13","96.1","99.10","101.5","103.15","115.0","120.3","136.2","136.4","147.5","156.14","159.2","170.11","170.15","171.0","174.12","174.29","174.44","174.64","175.6","175.9","175.12","179.44","206.3","214.2","216.3","222.7","232.2","241.1","241.10","284.10","284.39","284.46","284.62","284.65","286.13","287.4","287.6"],"1":["0.0","0.1","2.3","7.0","7.1","7.2","7.3","7.4","7.5","7.6","7.7","7.8","7.9","7.10","7.11","7.12","7.13","7.14","10.6","20.7","20.12","22.1","22.3","22.4","22.5","22.6","22.15","22.18","22.21","23.1","23.8","23.22","23.24","23.30","23.39","23.44","23.50","23.58","23.63","23.78","23.90","25.1","25.2","25.3","25.4","25.7","26.1","30.1","35.4","36.5","38.1","38.3","38.4","38.5","38.6","41.0","41.6","43.3","43.9","43.11","43.14","44.5","44.7","45.5","45.6","45.7","45.8","47.3","49.2","50.4","50.10","50.27","52.8","53.10","55.2","56.3","58.3","61.0","61.8","61.18","64.2","64.12","64.24","65.21","67.3","68.3","68.6","68.10","69.1","69.9","70.0","72.5","73.0","74.2","74.5","74.8","76.1","77.3","81.1","81.2","81.3","81.4","81.5","81.6","83.3","86.2","86.5","89.1","89.5","89.6","92.0","93.1","96.3","96.11","96.14","99.5","99.6","99.7","99.10","99.11","100.7","100.9","101.3","101.5","102.2","109.6","113.2","113.3","113.4","113.5","113.6","113.7","115.0","116.2","116.3","116.4","117.1","119.3","119.5","119.6","120.0","120.3","122.0","123.0","123.1","125.1","125.6","126.2","127.1","127.12","127.24","127.52","129.2","133.1","134.3","134.4","136.1","137.5","137.6","140.0","140.1","140.4","140.6","143.2","144.6","145.5","147.1","150.4","150.9","151.3","151.4","151.5","151.9","152.2","152.6","152.18","152.20","154.3","154.10","154.11","154.12","154.13","154.14","155.1","155.6","157.2","162.0","162.2","166.1","166.2","166.3","166.8","167.3","167.4","168.11","168.13","170.2","170.3","170.4","170.7","170.8","170.11","170.14","170.15","171.0","172.0","173.1","173.17","173.24","173.39","173.46","173.52","173.58","173.68","173.69","173.87","173.93","173.94","174.8","174.11","174.12","174.28","174.29","174.33","174.37","174.48","175.0","175.1","175.4","175.5","175.6","175.8","175.9","175.10","175.12","176.4","176.9","177.1","177.6","177.9","177.10","178.1","178.6","179.1","179.11","179.34","179.44","179.53","179.60","181.0","184.3","184.14","184.15","194.5","195.4","195.6","195.8","200.1","200.3","200.4","200.5","204.1","205.13","206.3","207.12","216.3","218.2","218.4","218.5","218.8","218.10","222.2","222.4","222.5","222.9","222.11","222.12","241.9","260.2","262.0","275.1","279.1","279.8","284.39","284.61","284.62","284.65","285.2","286.13","286.28","295.1"],"2":["1.5","2.3","7.2","7.4","7.5","7.7","7.8","7.11","7.14","20.12","22.7","22.8","22.9","22.10","22.16","22.18","22.19","22.22","23.2","23.3","23.4","23.5","23.7","23.9","23.25","23.40","23.44","23.45","23.46","23.51","23.52","23.64","23.82","25.2","25.4","25.5","25.6","25.8","26.2","38.3","38.4","41.7","43.10","44.8","45.5","47.4","50.5","50.14","53.10","55.3","55.4","55.5","56.5","58.5","64.10","64.25","67.3","67.4","67.5","67.6","67.7","67.8","68.4","68.7","68.11","68.13","69.4","69.5","69.6","69.7","72.5","73.0","74.3","74.6","74.9","76.2","77.4","81.2","81.3","83.4","86.6","89.2","89.6","89.13","93.2","96.2","96.3","96.4","96.5","96.14","99.11","100.9","106.18","106.26","113.4","113.6","115.0","122.0","123.1","125.2","125.7","127.1","127.12","127.16","127.24","127.42","133.2","134.4","136.3","140.0","140.2","140.5","140.7","143.3","143.4","143.5","143.6","143.7","143.8","143.9","143.10","145.5","147.2","150.5","150.11","151.10","152.3","152.5","152.6","152.18","154.3","154.11","155.2","155.7","162.0","166.2","166.4","166.9","167.4","170.1","170.2","170.4","170.8","170.10","170.11","170.12","170.13","170.14","170.15","171.0","172.0","173.2","173.58","173.94","174.4","174.8","174.11","174.12","174.33","174.37","174.48","175.5","175.6","175.8","175.9","175.10","175.11","175.12","176.10","177.2","177.7","177.11","178.2","179.2","179.12","179.14","179.35","179.45","179.54","179.61","181.0","194.5","195.4","200.1","204.2","206.3","207.13","218.4","218.5","218.8","222.4","222.5","222.12","250.1","275.2","279.2","284.46","284.62","286.43","295.1"],"3":["0.0","2.3","7.5","7.6","7.9","7.12","22.12","22.17","23.10","23.14","23.26","23.46","23.65","23.68","23.69","23.70","23.73","25.3","25.6","25.7","25.8","25.9","26.3","40.3","43.11","44.9","47.5","50.6","50.19","53.10","61.0","64.26","67.3","67.9","67.10","67.11","67.12","68.8","68.12","69.11","76.3","77.5","81.3","86.7","89.3","89.6","89.13","93.3","96.5","97.1","113.6","115.0","125.3","125.8","127.1","127.12","127.16","127.24","133.3","136.5","140.3","140.8","145.5","147.3","152.18","155.3","155.8","162.0","166.3","166.4","166.5","166.6","166.7","167.4","170.8","170.14","170.15","171.0","172.0","173.3","174.8","174.29","174.33","174.37","174.48","174.60","174.63","174.64","175.6","175.9","175.12","176.11","177.3","177.8","177.12","178.3","179.3","179.13","179.15","179.36","179.46","179.55","179.62","181.0","195.4","204.3","206.3","207.14","215.2","218.4","218.5","218.8","222.4","250.1","279.3","284.39","286.13","295.1"],"4":["7.10","7.11","7.12","22.14","22.15","22.16","22.17","23.11","23.15","23.16","23.18","23.19","23.27","23.55","23.69","47.6","50.7","53.10","64.10","67.13","68.13","81.4","86.8","89.4","89.5","89.6","89.13","93.4","96.3","96.4","96.5","103.6","106.16","106.51","120.2","123.1","125.4","125.9","126.3","127.16","127.24","127.42","133.4","140.9","147.4","151.5","151.6","151.8","151.11","155.4","162.0","166.6","166.8","166.9","166.10","171.0","173.4","173.68","174.8","174.33","174.37","175.7","175.11","175.12","176.12","177.4","177.9","178.4","179.4","179.16","179.37","179.47","179.56","179.63","181.0","195.4","204.4","206.3","207.15","218.5","218.8","241.6","279.4","284.62","286.13","295.1"],"5":["5.0","5.12","7.13","7.14","22.18","22.20","22.21","22.22","23.12","23.21","23.22","23.23","23.28","23.88","37.1","37.2","46.3","47.7","50.8","53.10","62.15","81.5","86.9","93.5","115.0","120.1","125.5","126.4","133.5","140.5","147.5","152.5","155.5","162.0","166.7","171.0","173.5","174.4","174.8","174.12","174.33","174.43","174.48","174.60","174.64","175.8","175.12","177.5","178.5","179.5","179.17","179.38","179.48","179.57","179.64","181.0","204.5","206.3","207.16","218.5","279.5","284.62","286.13","286.28","295.1"],"6":["22.24","23.13","23.29","23.30","23.31","23.32","23.35","23.36","23.37","23.38","23.51","23.59","23.73","47.8","81.6","93.6","97.2","97.41","106.46","126.5","127.24","133.6","140.11","162.0","173.6","174.8","174.16","174.48","174.60","175.12","178.6","179.6","179.18","179.40","179.49","179.58","179.65","181.0","206.3","218.5","263.6","279.6","284.46","284.62","286.13"],"7":["22.25","23.41","23.42","23.43","23.44","23.45","23.46","23.47","23.49","23.51","23.52","23.53","23.55","23.57","23.59","47.9","81.7","93.7","97.2","106.37","115.0","126.6","140.12","173.7","173.68","174.60","174.64","175.5","175.6","175.7","175.8","175.9","175.12","175.13","178.7","179.7","179.19","179.41","179.50","179.59","195.9","206.3","275.2","279.7","284.62","286.13"],"8":["19.7","23.60","23.61","23.62","23.65","23.68","23.69","23.70","23.73","23.74","23.76","61.6","89.13","93.8","126.7","140.13","150.2","152.5","156.1","173.8","174.64","175.9","178.6","178.8","179.8","179.20","179.42","206.3","279.8","286.13"],"9":["10.6","23.80","23.81","23.82","23.83","23.86","23.88","126.8","136.2","136.4","140.14","173.9","179.9","179.21","179.43","206.3","279.9","284.39","284.61","286.13","286.28"],"10":["7.14","40.4","46.1","140.15","173.10","174.12","174.55","179.22","195.0","206.3","279.10"],"11":["0.1","113.6","115.0","173.11","175.10","179.23"],"12":["64.18","64.21","64.22","115.0","173.12","175.10","179.24","263.6"],"13":["68.13","87.17","115.0","173.13","175.10","179.25","231.1"],"14":["81.1","87.17","173.14","175.10","179.26"],"15":["152.6","173.15","175.21","179.27"],"16":["61.16","68.13","81.1","173.16","178.6","179.28"],"17":["173.17","179.29","205.0"],"18":["81.1","173.18","179.30","205.14","286.28"],"19":["41.0","173.2","173.19","173.42","173.43","173.44","179.31","284.46","286.28"],"20":["0.1","99.11","102.5","158.1","158.2","164.1","164.2","173.20","179.32","284.46","294.1"],"21":["115.0","173.21","179.33"],"22":["1.9","22.19","115.0","173.22","174.52"],"23":["173.23","286.28"],"24":["152.16","173.24"],"25":["22.18","173.25"],"26":["173.26"],"27":["115.0","173.27"],"28":["173.28"],"29":["173.29"],"30":["85.0","102.5","173.30","181.0"],"31":["173.31"],"32":["173.32"],"33":["173.33"],"34":["173.34"],"35":["173.35","175.10"],"36":["173.36"],"37":["173.37"],"38":["173.38"],"39":["127.2","173.39"],"40":["173.40"],"42":["173.41"],"43":["173.42"],"44":["173.43"],"45":["173.44"],"46":["173.45"],"47":["173.46"],"48":["173.47"],"49":["173.48"],"50":["170.15","173.49","206.8","286.40"],"51":["173.50"],"52":["22.18","173.51"],"53":["173.52"],"54":["173.53"],"55":["173.54"],"56":["173.55"],"57":["173.56"],"58":["173.57"],"59":["173.58"],"60":["7.14","173.59"],"61":["173.60"],"62":["173.61"],"63":["173.62"],"64":["173.63","286.72"],"65":["173.64","175.10"],"66":["173.65"],"67":["173.66"],"68":["173.67"],"69":["173.68"],"70":["173.69"],"71":["173.70"],"72":["173.71"],"73":["173.72"],"74":["173.73"],"75":["173.74"],"76":["173.75"],"77":["173.76"],"78":["173.77"],"79":["173.78"],"80":["138.22","138.29","173.79","175.10"],"81":["173.80"],"82":["173.81"],"83":["173.82"],"84":["173.83"],"85":["173.84"],"86":["173.85"],"87":["173.86"],"88":["173.87"],"89":["173.88","174.56"],"90":["173.89"],"91":["173.90"],"92":["115.0","173.91"],"93":["173.92"],"94":["173.93"],"95":["115.0","173.94"],"96":["173.95"],"97":["173.96"],"98":["173.97"],"99":["115.0","129.2","173.98"],"100":["129.2","173.99"],"101":["115.0"],"107":["115.0"],"110":["115.0"],"111":["99.6","168.12"],"113":["115.0"],"126":["23.50"],"128":["23.50","286.72"],"190":["175.10"],"191":["23.50"],"253":["127.52"],"255":["23.50","286.37"],"256":["286.72"],"400":["29.5"],"401":["25.9"],"443":["138.31","275.2"],"512":["286.72"],"536":["175.10"],"720":["104.0"],"1080":["106.25"],"1280":["104.0"],"1426":["236.6"],"1920":["61.6","106.25"],"2013":["10.6"],"2022":["0.1","115.0"],"2024":["0.0"],"2083":["175.10"],"2345":["115.0"],"8080":["113.6","136.8"],"8182":["175.10"],"8888":["114.29"],"10001":["89.13"],"10002":["89.13"],"10005":["89.13"],"10006":["89.13"],"12345":["204.3"],"20001":["89.13"],"150213":["152.15"],"150848":["152.17"],"151346":["152.18"],"155126":["152.20"],"1024100":["286.42"],"9252450":["0.1"],"9324251":["0.1"],"16100000":["152.8"],"35100000":["152.8"],"460055155":["115.0"],"793000000":["152.8"],"2401345934":["94.10"],"04":["0.0"],"08":["0.0"],"新增":["0.0","0.1","88.2","140.5"],"components":["0.0","0.1","97.11","156.14","156.24","219.6"],"新增了注册chartgpt":["0.0"],"09a7b00":["0.0"],"config":["0.0","0.1","67.8","81.2","95.16","95.28","96.5","96.6","97.22","97.33","97.35","97.38","97.59","100.3","154.11","193.9","219.6"],"更新lock":["0.0"],"3366e73":["0.0"],"升级package":["0.0"],"7ec849d":["0.0"],"doc":["0.0","0.1"],"工程化":["0.0","0.1"],"sdk补充":["0.0"],"️性能":["0.1"],"webpack":["0.1","70.0","87.42","102.0","154.1","154.2","154.3","154.6","154.11","154.16","154.20","177.6","177.7","177.8","191.1","191.3","193.3","193.4","193.5"],"修复令牌":["0.1"],"ab89e15":["0.1"],"新增补充组件":["0.1"],"542888a":["0.1"],"新增yml文件":["0.1"],"be08d5f":["0.1"],"暂时去掉search":["0.1"],"增加":["0.1","10.10"],"ts类型":["0.1"],"93babbf":["0.1"],"custom":["0.1"],"更新":["0.1","178.1","208.14","208.17","222.5"],"md":["0.1"],"87234de":["0.1"],"工程化补充":["0.1"],"f8dc538":["0.1"],"项目搭建":["0.1"],"313af20":["0.1"],"vue":["0.1","16.0","61.8","96.1","96.5","97.1","97.2","97.11","97.37","98.13","99.12","100.3","101.5","102.4","113.6","115.0","163.0","176.1","179.58","180.2","181.0","190.0","190.4","190.6","195.9","214.0","218.11","219.3","220.8","222.12","237.0","238.0","255.0","256.2","265.1","282.2"],"5b2952f":["0.1"],"cicd":["0.1","66.0"],"7d7c70b":["0.1"],"npm":["0.1","61.18","69.3","69.9","73.0","74.0","74.1","74.3","74.6","74.10","75.0","75.1","75.2","75.3","75.4","75.6","75.7","77.1","77.2","79.0","80.1","81.1","81.2","81.3","81.4","81.5","82.0","82.1","83.0","83.4","84.0","84.1","84.2","84.5","84.7","86.0","86.1","86.3","86.4","87.12","87.18","87.20","87.39","96.6","96.14","97.2","97.24","97.31","97.43","97.51","97.55","101.3","115.0","142.11","143.1","144.1","144.6","145.5","152.30","154.10","154.15","176.19","262.0"],"7e765c6":["0.1"],"0622beb":["0.1"],"安装流程":["0.1","80.0"],"9102d55":["0.1"],"发包过程":["0.1"],"3bf6bab":["0.1"],"内容":["0.1","88.2","106.16","152.20"],"知识补充":["0.1"],"f21e5e1":["0.1"],"package":["0.1","80.2","80.4","81.3","84.3","86.1","86.2","87.0","87.14","87.17","88.2","94.6","97.44","97.52","142.26","145.3","154.3","154.11","195.7"],"start":["0.1"],"72a067f":["0.1"],"vite":["0.1","81.1","81.6","95.3","95.23","95.25","96.0","96.1","96.5","97.0","97.1","97.2","102.4","102.5","115.0"],"屏幕适配":["0.1"],"ce5cc9e":["0.1"],"缓存可以说是性能优化中简单高效的一种优化方式了":["1.0"],"它可以显著减少网络传输所带来的损耗":["1.0"],"从缓存位置上来说分为四种":["1.1"],"并且各自有优先级":["1.1"],"当依次查找缓存且都没有命中的时候":["1.1"],"才会去请求网络":["1.1"],"worker":["1.2","19.14","133.2","133.4","133.5","177.13","179.41"],"cache":["1.3","1.4","1.5","25.5","27.5","67.10","97.30","154.6","154.7","283.7","288.5","294.1"],"图片":["1.3","1.10","1.11","6.2","20.1","21.3","22.11","22.21","22.23","22.24","22.27","23.33","23.34","23.46","23.54","23.64","23.69","23.89","23.90","27.15","32.0","36.0","36.3","48.1","48.7","50.13","65.11","65.18","97.20","104.0","106.13","106.14","106.22","106.25","106.33","106.34","106.42","114.1","126.4","151.4","193.1","193.2","197.4","197.5","198.2","198.3","199.2","199.5","200.12","201.8","202.5","202.6","202.8","202.9","202.11","202.13","202.15","202.16","207.17","207.18","207.19","207.20","207.21","218.11","219.11","219.15","225.1","265.0"],"是":["1.5","61.17","106.20","106.26","106.31","133.4","156.1","156.6","171.0","173.9","173.85","175.0","177.2","178.3","178.4","181.0","185.1","185.7","186.1","204.2","205.14","218.5","232.4","252.3","252.5","258.10"],"http":["1.5","1.18","24.6","26.1","26.2","27.12","50.31","104.0","109.1","113.6","114.29","115.0","121.7","126.4","136.7","136.8","138.29","138.32","159.2","159.5","159.13","175.0","179.44","195.6","271.1","286.64"],"中的内容":["1.5"],"当以上三种缓存都没有命中时":["1.5"],"fetch":["1.6","99.10","115.0","162.0"],"通常浏览器缓存策略分为两种":["1.7"],"强缓存可以通过设置两种":["1.8"],"wed":["1.9"],"control":["1.10","12.0","25.5","109.6","115.0","121.10"],"如果缓存过期了":["1.11"],"modified":["1.12","1.14","1.15"],"和":["1.12","1.13","23.79","26.1","26.2","50.29","52.7","61.3","70.0","72.5","73.0","89.6","96.5","96.6","97.11","97.30","97.47","97.61","98.8","99.7","99.8","100.7","106.18","106.22","106.27","106.28","108.2","109.7","112.2","115.0","126.8","127.3","134.4","140.5","154.5","156.6","156.10","168.0","168.9","168.14","168.28","169.4","171.0","172.0","173.9","173.25","173.79","173.98","175.0","175.4","175.12","176.3","179.11","179.42","179.55","179.56","180.0","181.0","182.0","183.0","184.4","184.6","184.9","184.31","187.0","188.0","189.0","193.10","204.2","204.3","205.6","205.16","206.15","208.4","209.15","213.0","220.4","220.5","220.6","221.1","222.4","223.2","232.1","241.4","241.6","241.10","249.0","249.1","251.0","254.2","256.2","259.2"],"if":["1.12","1.13","10.6","20.7","62.17","64.14","65.28","65.36","95.25","99.6","99.7","99.10","103.11","173.99","174.25","174.44","174.64","181.0","204.3","206.1","206.8","206.14","206.16","208.3","214.2","214.3","215.2","216.3","217.7","219.6","226.1","228.1","230.1","231.1","235.4","241.1","241.10","256.4","286.33","286.39","287.6"],"since":["1.12","214.2","236.6"],"none":["1.13","162.3","169.4"],"match":["1.13"],"是根据文件的内容有没有变化进行更新":["1.16"],"如果仅仅是修改时间变了":["1.16"],"但是内容没变":["1.16"],"modified无法解决的一些问题":["1.17"],"一些文件也许周期性的更改":["1.17"],"响应头中":["1.18"],"etag":["1.18"],"值改变了":["1.18"],"单纯了解理论而不付诸于实践是没有意义的":["1.19"],"对于频繁变动的资源":["1.20"],"首先需要使用":["1.20"],"这里特指除了":["1.21"],"html":["1.21","2.3","6.1","60.0","61.12","90.0","97.38","102.0","104.0","106.14","106.23","106.27","106.41","106.51","120.3","121.0","121.6","122.1","122.3","122.6","122.9","122.17","122.21","123.1","150.2","152.18","154.16","160.0","168.3","168.7","170.15","172.0","177.6","177.7","178.7","181.0","193.8","241.1","241.10","279.7","286.47","286.55"],"nginx":["1.22","67.3","68.11","113.6","114.10","114.11","114.12","114.29","114.30","138.2","138.3","138.4","138.5","138.6","138.11","138.12","138.13","138.14","138.16","138.20","139.4"],"强缓存时效为30s":["1.22"],"30s后默认使用协商缓存":["1.22"],"此时缓存时效优先级":["1.22"],"max":["1.22","216.2","216.5","294.1"],"age":["1.22","64.18","64.21","64.22","112.4","173.9"],"url":["2.0","2.2","21.1","95.23","99.10","99.14","102.2","136.7","136.8","150.12","159.2","159.5","162.3","175.10","179.37","193.7","284.4","286.69","296.1","296.2","296.3"],"浏览器主进程":["2.2"],"用户输入判断":["2.2"],"处理输入信息":["2.2"],"判断是":["2.2"],"还是":["2.2","217.7","232.4","241.9"],"关键字":["2.2","57.3","64.14","106.31","106.32"],"如果是关键字":["2.2"],"会按照默认地址组装出一个":["2.2"],"比如":["2.2","20.7","23.90","39.1","50.1","62.15","65.21","76.3","87.6","87.23","97.26","98.9","100.3","106.30","126.8","154.10","154.17","174.64","177.7","204.5","204.6","227.1"],"在":["2.2","48.19","61.8","67.3","72.5","73.0","87.13","87.17","87.35","95.47","97.4","97.5","97.7","97.8","97.13","97.16","97.17","97.18","97.32","97.40","97.44","106.14","106.15","106.16","106.26","106.33","114.32","115.0","169.3","173.25","173.27","173.59","173.81","173.82","179.11","179.23","195.9","207.5","208.4","208.7","216.4","223.2","226.1","250.1","250.2","252.4","265.5"],"谷歌浏览器直接输入":["2.2"],"百度":["2.2","32.1"],"两字":["2.2"],"用户输入url":["2.3"],"浏览器会根据用户输入的信息判断是搜索还是网址":["2.3"],"如果是搜索内容":["2.3"],"就将搜索内容":["2.3"],"默认搜索引擎合成新的url":["2.3"],"如果用户输入的内容符合url规则":["2.3"],"浏览器就会根据url协议":["2.3"],"在这段内容上加上协议合成合法的url":["2.3"],"用户输入完内容":["2.3"],"按下回车键":["2.3"],"浏览器导航栏显示loading状态":["2.3"],"但是页面还是呈现前一个页面":["2.3"],"这是因为新页面的响应数据还没有获得":["2.3"],"浏览器进程浏览器构建请求行信息":["2.3"],"会通过进程间通信":["2.3"],"ipc":["2.3"],"将url请求发送给网络进程":["2.3"],"get":["2.3","23.90","27.1","27.2","62.12","109.1","109.7","127.55","138.36","156.14","175.0","179.46","179.55","204.3","215.2","249.1"],"index":["2.3","64.19","96.2","97.4","97.7","106.23","137.0","153.10","153.12","154.20","156.3","156.13","156.14","166.9","195.7","195.8","195.9"],"browser进程":["3.1"],"浏览器的主进程":["3.1"],"负责协调":["3.1"],"主控":["3.1"],"相比于单进程浏览器":["3.2"],"多进程有如下优点":["3.2"],"渲染主线程":["3.4"],"负责渲染浏览器界面":["3.4"],"单线程":["3.5"],"也称为js内核":["3.5"],"归属于渲染进程而不是js引擎":["3.6"],"用来控制事件轮询":["3.6"],"定时器setinterval与settimeout所在线程":["3.7"],"用于处理请求xmlhttprequest":["3.8"],"内核组成制":["4.0"],"user":["4.2","89.5","115.0","148.4","204.3","236.6"],"interface":["4.2","103.3","103.4","107.2","108.2","183.2","184.7"],"用户界面":["4.2"],"所能看到的界面部分":["4.2"],"browser":["4.2","7.0","7.1","7.6","7.10","97.22","97.50","175.10"],"engine":["4.2"],"浏览器引擎":["4.2"],"主要分成两部分":["4.3"],"负责取得网页的内容":["4.4"],"解析和执行javascript来实现网页的动态效果":["4.5"],"trident内核":["4.6"],"ie":["4.6","19.7","205.10"],"maxthon":["4.6"],"从可见到不可见":["5.2"],"intersectionobserver":["5.2","147.5"],"可以监听一个元素和可视区域相交部分的比例":["5.2"],"然后在可视比例达到某个阈值的时候触发回调":["5.2"],"这太有用了":["5.3"],"js":["5.5","10.4","10.5","10.6","10.7","10.8","10.9","10.10","10.11","10.12","10.13","10.14","11.4","11.7","19.6","19.11","21.10","52.12","52.16","53.2","55.2","57.4","61.7","62.16","62.17","64.19","67.7","69.3","69.9","71.24","75.5","75.6","76.3","81.1","81.2","81.3","81.6","85.5","86.1","88.2","89.5","94.5","95.7","95.9","95.12","95.13","95.15","95.16","95.20","95.21","95.23","95.24","95.25","95.26","95.28","95.33","95.40","95.42","95.45","95.46","95.49","96.3","96.6","96.7","97.2","97.3","97.4","97.5","97.6","97.7","97.8","97.9","97.10","97.12","97.13","97.15","97.22","97.26","97.32","97.35","97.39","97.59","98.9","98.13","100.1","100.2","100.6","100.8","101.5","102.1","102.2","104.0","107.4","108.2","108.3","109.1","109.7","110.1","110.3","111.1","111.3","111.4","112.1","112.2","112.3","112.4","114.8","115.0","124.0","125.0","125.6","127.3","127.9","128.0","131.5","131.9","131.11","134.4","136.7","136.8","138.8","138.9","138.18","138.22","138.31","138.33","138.37","138.39","138.40","140.5","141.2","141.3","141.4","141.8","142.1","142.3","142.4","142.5","142.7","142.8","142.9","142.14","142.15","142.17","142.18","142.20","142.22","142.23","142.25","142.28","147.5","152.8","152.30","154.4","154.5","154.7","154.8","154.10","154.11","154.12","154.13","154.14","154.15","154.16","154.18","154.20","158.3","158.4","159.2","159.5","159.9","159.13","161.0","162.3","163.0","164.3","164.4","165.1","165.2","166.3","166.5","166.6","166.7","166.8","166.9","167.4","168.12","168.19","169.4","170.5","173.9","173.13","173.17","173.19","173.25","173.27","173.30","173.62","173.70","173.74","173.87","173.95","174.4","174.8","174.16","174.20","174.21","174.22","174.23","174.24","174.25","174.28","174.29","174.33","174.40","174.44","174.48","174.52","174.56","174.60","174.64","177.7","177.11","177.12","179.23","179.24","179.28","190.2","192.1","192.2","192.3","195.7","195.8","195.9","204.1","204.2","204.3","206.0","206.1","206.2","206.3","206.4","206.5","206.8","206.9","206.11","206.15","214.2","226.1","240.1","242.1","279.8","283.11","283.12","285.1","285.2","285.5","286.1","286.2","286.3","286.4","286.5","286.6","286.7","286.8","286.9","286.10","286.11","286.12","286.13","286.14","286.15","286.16","286.24","286.26","286.37","286.39","286.48","286.70","286.71","286.72","287.1","287.2","287.3","287.4","287.5","287.6","287.7","287.8","288.1","288.2","288.3","288.4","288.5","289.1","291.1","291.2","291.3","291.4","291.5","291.6","292.1","292.2","293.1","293.2","294.1","295.1","295.2","295.8","295.9","295.10"],"对象的变化":["5.5"],"我们会用":["5.5","5.11"],"比如文章水印被人通过":["5.6"],"addeventlistener":["5.8","19.3","99.7","133.6","286.48"],"监听":["5.8","156.19"],"resize":["5.8","61.8","101.5","286.48"],"事件":["5.8","98.9","99.12","151.12","152.20"],"浏览器提供了":["5.9"],"performance":["5.9","98.7","99.14","99.16","151.13","152.9","152.10","152.11","152.12","152.13","152.14"],"的":["5.9","61.5","87.42","106.27","113.5","114.6","115.0","154.3","169.3","173.1","177.6","179.50","181.0","184.28","195.7","195.9","204.3","205.3","206.8","212.1","262.0","295.2"],"api":["5.9","7.8","7.13","62.13","62.14","62.15","97.13","98.12","104.0","115.0","152.8","154.17","178.6","181.0","205.8","205.11","219.10","223.0","248.0","251.0","254.3","254.6","258.0","258.1","258.2","259.0","286.54"],"用于记录一些时间点":["5.9"],"某个时间段":["5.9"],"资源加载的耗时等":["5.9"],"我们希望记录了":["5.9"],"那就马上上报":["5.9"],"当浏览器运行到过时":["5.10"],"deprecation":["5.10"],"监听用户的交互行为":["5.11"],"种":["5.12","61.0","173.68"],"observer":["5.12","110.2","111.2","147.5","156.13"],"当浏览器的网络线程收到":["6.1"],"文档":["6.1"],"会产生一个渲染任务":["6.1"],"并将其传递给渲染主线程的消息队列":["6.1"],"在事件循环机制的作用下":["6.1"],"渲染主线程取出消息队列中的渲染任务":["6.1"],"开启渲染流程":["6.1"],"整个渲染流程分为多个阶段":["6.1"],"分别是":["6.1","127.12","180.0"],"解析":["6.1","64.3","173.9","173.59","173.82","173.94","239.3"],"样式计算":["6.1"],"布局":["6.1","179.39"],"分层":["6.1"],"绘制":["6.1"],"分块":["6.1"],"光栅化":["6.1"],"画每个阶段都有明确的输入输出":["6.1"],"上一个阶段的输出会成为下一个阶段的输入":["6.1"],"这样":["6.1"],"整个渲染流程就形成了一套组织严密的生产流水线":["6.1"],"parse":["6.1","125.6","130.9","195.8","211.0","213.0","214.2"],"reflow":["6.3"],"回流":["6.3"],"repaint":["6.4"],"transform":["6.5","64.13","64.14","106.37","153.6","154.10","210.1"],"性能高":["6.5"],"渲染流水线":["7.0"],"render":["7.0","99.8","178.1","178.4","178.6","178.7","179.54","195.9","205.2","205.11","205.12","206.1","208.7","209.13","218.5","219.3","229.0","235.4","236.0","252.6","252.7"],"pipeline":["7.0","65.36"],"上图显示了":["7.0"],"chrome":["7.0","7.1","7.6","7.9","9.1","10.11","115.0","152.8","175.10","179.11"],"一个高度简化后的渲染流水线示意图":["7.0"],"进程与线程":["7.1"],"一个":["7.1","88.2","114.27"],"浏览器一般会有一个":["7.1"],"进程":["7.1","7.10"],"gpu":["7.1"],"帧":["7.2"],"所有的渲染流水线都会有帧的概念":["7.2"],"帧这个概念抽象描述了渲染流水线下级模块往上级模块输出的绘制内容相关数据的封装":["7.2"],"我们可以看到":["7.2"],"main":["7.3","87.15","97.5","97.8","99.7","154.7","154.11","154.13","154.14","192.1","192.2","192.3"],"frame":["7.3","7.4","7.11"],"包含了对网页内容的描述":["7.3"],"主要以绘图指令的形式":["7.3"],"compositor":["7.4","7.10"],"layer":["7.4"],"gl":["7.5"],"调度":["7.6","206.15"],"渲染流水线的调度是基于请求和状态机响应":["7.6"],"调度的最上级中枢运行在":["7.6"],"ui":["7.6","61.9","112.4","181.0","265.0"],"线程":["7.6"],"合成器动画":["7.7"],"合成器动画又可以分为两类":["7.7"],"非合成器动画":["7.8"],"非合成器动画也可以分为两类":["7.8"],"使用":["7.8","19.14","61.5","70.0","72.5","81.5","96.13","97.11","100.3","100.6","102.0","102.5","114.19","114.22","114.29","115.0","148.3","162.2","173.59","173.63","178.2","179.62","181.0","204.3","205.11","214.2","260.2"],"css":["7.8","7.13","10.4","10.6","10.7","69.10","81.6","90.0","95.38","95.39","102.0","102.1","106.2","106.3","106.5","106.6","106.7","106.8","106.13","106.14","106.15","106.16","106.17","106.24","106.25","106.26","106.29","106.33","106.36","106.41","153.8","154.16","163.0","170.6","170.8","170.11","170.12","170.14","170.15","177.7","177.11","177.12","179.39","181.0","281.2","286.55"],"translation":["7.8"],"或者":["7.8","64.3","87.38","178.6","183.2","221.3"],"animation":["7.8","7.10","7.13"],"创建的动画":["7.8"],"但是无法由合成器运行":["7.8"],"timer":["7.8","101.5","167.4"],"raf":["7.8"],"光栅化机制":["7.9"],"在对动画性能进行分析之前":["7.9"],"需要先说明一下目前的":["7.9"],"动画流水线":["7.10","7.13"],"上图显示了合成器动画的渲染流水线示意图":["7.10"],"根据":["7.10","206.8"],"android":["7.10","98.4"],"webview":["7.10","177.2","177.5","200.1","203.2"],"平台的实现进行绘制":["7.10"],"其它平台可能略微不同":["7.10"],"但对后面的性能分析":["7.10"],"在大部分情况下影响不大":["7.10"],"整个流水线的大概过程是":["7.10"],"位于":["7.10"],"动画耗时分析":["7.11"],"begin":["7.11"],"的耗时一般很短":["7.11"],"大概":["7.11"],"毫秒左右":["7.11"],"动画性能优化":["7.12"],"checklist":["7.12"],"根据上述的耗时分析":["7.12"],"我们可以给出一个页端优化合成器动画性能的简单":["7.12"],"blink":["7.13"],"从上图可以看出非合成器动画的流水线比合成器动画更长更复杂":["7.13"],"并且非合成器动画的后半段跟合成器动画是一致的":["7.13"],"javascipt":["7.13","7.14"],"部分是页端实现的逻辑":["7.13"],"可能包含了计算的部分":["7.13"],"和调用浏览器提供的":["7.13"],"的部分":["7.13"],"修改":["7.13","69.10","97.45","97.52","175.12","275.2"],"dom":["7.13","7.14","11.6","153.6","153.7","153.11","156.19","162.0","169.3","178.1","178.7","179.1","179.54","179.56","200.5","208.7","216.4","216.6","222.6","254.5","254.14","254.18","286.37","286.38"],"树":["7.13","64.4","179.56","206.8"],"动画耗时分析和优化指南":["7.14"],"的耗时是由页端自己的逻辑决定的":["7.14"],"一般超过":["7.14"],"毫秒就基本上很难实现":["7.14"],"帧的非合成器动画了":["7.14"],"mainframe":["7.14"],"的耗时主要取决于网页":["7.14"],"vs":["8.1","26.0","51.6","220.1"],"cookie是客户端的解决方案":["8.2"],"会话管理":["8.3"],"大小限制在4kb以内":["8.4"],"只读的localstorage允许访问一个document的对象storage":["8.5"],"cookie":["8.7","8.8","8.9","8.10","25.8","133.5","195.4"],"从安全性来说":["8.11"],"因为每次http请求都会携带cookie信息":["8.11"],"localstorage和sessionstorage是html5才应用的新特性":["8.12"],"存储大小均为5m左右":["8.14"],"生命周期":["8.15","178.2","179.54","196.6","196.7","196.8"],"数据可以存储多少时间":["8.15"],"localstorage":["8.15","19.13","95.42","133.3"],"存储的数据是永久性的":["8.15"],"除非用户人为删除否则会一直存在":["8.15"],"控制台中安装插件":["9.0"],"https":["9.1","10.4","10.5","10.6","10.7","10.8","10.9","10.11","10.13","10.14","19.14","26.2","26.4","27.12","61.5","94.9","94.10","104.0","107.2","110.2","111.2","115.0","179.44","264.0","266.0","267.1","268.1","269.0","270.0","273.1","275.2","277.0","278.0","280.1","281.1","281.2","281.3","282.1","286.64"],"有的网站屏蔽了":["9.2"],"打开开发者工具":["10.1","10.2"],"获取页面所有的颜色":["10.4"],"allcolors":["10.4"],"github":["10.4","10.5","10.6","10.7","10.8","10.9","10.11","10.13","10.14","72.0","72.5","73.0","97.61","281.1","281.2","281.3"],"com":["10.4","10.6","10.7","10.8","10.9","10.11","10.13","10.14","61.2","61.5","115.0","126.8","138.29","163.0","275.2","281.3"],"bgrins":["10.4","10.6","10.7","10.8","10.9","10.11","10.13"],"devtools":["10.4","10.6","10.7","10.8","10.11","152.24"],"snippets":["10.4","10.6","10.7","10.8","10.11"],"print":["10.4","10.8","10.11"],"out":["10.4","10.11","70.0"],"used":["10.4","109.6"],"in":["10.4","99.10","107.2","110.2","111.2","129.0","129.1","137.0","175.22","195.8","216.2"],"elements":["10.4"],"on":["10.4","10.6","65.36","103.12","111.4","206.14","214.2","216.2"],"the":["10.4","10.6","10.7","61.17","107.2","107.4","109.4","109.6","110.2","111.2","137.0","175.22","204.3","205.5","206.1","206.12","206.14","214.1","216.2","236.6"],"page":["10.4","10.6","108.1","181.0","195.4","282.2"],"function":["10.4","10.6","10.11","10.12","20.3","20.12","21.10","52.16","52.18","53.3","53.6","53.9","55.1","57.4","64.7","64.8","64.11","64.16","64.18","64.23","95.42","97.35","99.10","99.13","100.1","101.5","104.0","109.1","127.4","127.5","127.6","127.33","129.2","131.1","131.2","131.3","131.4","131.5","131.6","131.7","131.8","131.9","131.10","131.11","132.2","132.3","132.4","140.2","148.3","148.5","149.2","153.6","153.7","153.12","161.0","165.1","165.2","167.4","173.2","173.3","173.5","173.9","173.29","173.46","173.99","174.16","174.21","174.22","174.23","174.24","174.25","174.33","174.44","174.60","174.64","176.2","176.4","177.9","178.4","179.27","179.54","179.56","179.61","181.0","184.7","195.4","204.2","204.3","205.1","206.1","206.2","206.4","206.5","206.8","206.11","206.12","206.14","206.15","207.16","208.5","208.16","208.17","209.3","214.0","215.2","217.0","217.7","218.4","219.3","219.6","219.10","220.2","221.4","226.1","228.1","228.3","231.1","231.2","231.7","232.2","235.4","241.1","241.6","241.8","241.10","252.5","256.4","279.8","283.10","283.12","286.1","286.2","286.19","286.31","286.37","286.38","286.46","286.49","286.70","287.3","288.1","288.2","288.3","288.4","288.5","294.1"],"should":["10.4","206.14","214.3"],"include":["10.4","216.2","216.5"],"from":["10.4","10.8","64.16","95.23","95.45","95.46","96.5","97.13","101.5","102.2","109.1","111.3","111.4","112.3","113.6","113.7","114.12","127.24","153.5","153.6","153.7","153.8","153.11","153.12","154.12","154.14","156.3","156.7","156.10","156.11","156.13","156.14","156.15","156.17","156.18","156.23","156.24","166.5","166.6","166.8","166.9","195.9","205.4","216.2","228.2"],"that":["10.4","107.2","109.6","137.0","206.14","228.2","239.3"],"have":["10.4","214.3"],"a":["10.4","10.6","20.12","32.2","38.4","48.11","50.18","64.14","64.16","64.18","87.25","89.5","89.6","99.6","99.7","106.33","106.34","106.41","107.2","109.6","110.2","110.3","111.2","126.7","126.8","127.20","136.2","136.4","137.0","163.0","173.3","173.6","206.1","214.3","216.2","236.6","241.8","284.69","286.49","286.55"],"border":["10.4","106.16","106.21","170.15"],"color":["10.4","102.1","106.30","170.15","181.0","286.63","286.72"],"but":["10.4","206.14"],"zero":["10.4"],"width":["10.4","104.0","106.24","170.15","171.0"],"var":["10.4","10.6","10.11","16.0","20.12","24.5","52.18","53.2","53.3","53.5","53.6","53.8","53.9","64.18","64.21","64.22","100.1","125.0","127.3","127.17","129.5","129.6","136.7","136.8","152.8","167.4","168.22","173.6","173.9","173.21","173.87","175.8","177.9","179.61","195.8","279.8","286.40","286.49"],"includebordercolorswithzerowidth":["10.4"],"false":["10.4","65.36","104.0","127.20","127.41","148.3","181.0","207.10","220.2","222.7","225.4","235.4","236.7","256.4","283.12"],"获取页面所有的":["10.5","10.12"],"viewcookies":["10.5"],"格式化":["10.6"],"unminify":["10.6"],"and":["10.6","109.6","110.2","113.4","127.33","214.3","216.2"],"prettify":["10.6"],"file":["10.6","137.0","193.7","289.1"],"bookmarklet":["10.6"],"copyright":["10.6"],"c":["10.6","64.10","110.3","125.0","275.2","286.49"],"addy":["10.6"],"osmani":["10.6"],"sindre":["10.6","10.14"],"sorhus":["10.6","10.14"],"cssbeautify":["10.6"],"sencha":["10.6"],"ariya":["10.6"],"hidayat":["10.6"],"prism":["10.6"],"lea":["10.6"],"verou":["10.6"],"licensed":["10.6"],"under":["10.6"],"mit":["10.6"],"license":["10.6"],"globals":["10.6","10.14"],"document":["10.6","98.9","99.13","115.0","126.8","133.6","147.5","162.0","162.3","168.19","205.2","279.8","286.2","286.33","286.39","286.69"],"true":["10.6","65.36","97.22","97.35","104.0","112.4","115.0","125.0","148.3","156.14","173.28","174.44","181.0","216.2","218.4","218.5","225.4","232.2","232.4","241.9","251.2","256.4"],"use":["10.6","154.17","180.2","204.2","283.7"],"strict":["10.6","120.2","120.3"],"body":["10.6","64.11","64.14","90.0","95.16","106.41","162.3","166.7","175.4","177.11","286.55"],"childnodes":["10.6"],"length":["10.6","99.6","99.7","134.4","173.99","174.25","174.44","174.64","179.61","181.0","214.2","216.3","228.1","241.1","241.10","279.8"],"console":["10.6","20.3","20.12","62.15","62.16","64.15","64.18","99.6","104.0","127.24","140.5","141.8","147.5","154.12","154.13","157.2","161.0","168.12","168.26","173.5","173.38","204.3","205.1","209.3"],"log":["10.6","10.14","20.12","62.15","62.16","64.15","64.18","99.6","104.0","127.24","140.5","141.8","147.5","152.23","154.12","154.13","161.0","168.12","173.5","173.38","204.3","209.3"],"this":["10.6","20.11","99.10","107.4","109.6","127.5","129.2","132.1","156.14","157.2","173.1","173.4","173.7","173.16","173.46","173.82","173.98","173.99","175.6","176.6","181.0","184.9","195.4","195.8","204.2","205.5","206.1","206.12","206.14","214.2","216.2","283.7","286.33"],"doesn":["10.6"],"t":["10.6","10.11","67.8","156.13","206.14","217.7","279.8"],"appear":["10.6"],"to":["10.6","61.18","65.30","97.50","104.0","107.4","109.6","148.5","206.14","216.2","228.2","235.4","275.2"],"be":["10.6","109.6","228.2","235.4"],"stylesheet":["10.6"],"make":["10.6","286.49"],"sure":["10.6"],"you":["10.6"],"run":["10.6","67.3","67.8","68.3","68.8","73.0","82.1","86.3","87.20","113.4","113.6","114.29","144.0","144.1","148.5","223.2","258.8"],"return":["10.6","52.16","64.11","64.14","64.16","95.42","99.10","109.1","127.55","132.2","132.3","132.4","156.11","158.3","164.3","173.87","173.99","174.64","177.9","178.4","181.0","195.4","205.5","206.1","206.2","206.8","206.14","207.10","209.3","215.2","216.3","231.1","235.4","279.8","286.13","288.1","288.2","288.5"],"b":["10.6","48.9","48.10","48.11","50.16","50.17","64.14","64.16","106.33","110.3","125.0","129.2","286.49"],"s":["10.6","57.2","57.4","115.0","127.41","236.6","241.1","241.10","284.26","284.42","286.55"],"n":["10.6","52.5","53.11","53.12","55.1","55.3","55.4","55.5","56.4","56.5","58.4","58.5","127.41","174.4","174.16","176.2","195.8","279.8","291.5"],"r":["10.6","106.33","286.37"],"f":["10.6","127.24","127.33","173.5","174.56","284.62","286.1"],"u":["10.6","49.2"],"h":["10.6","15.0"],"z":["10.6","106.23","127.20","136.2","136.4","241.8","279.8"],"indexof":["10.6"],"v":["10.6","61.14","67.8","68.8","72.5","91.0","181.0","195.4","195.8","214.2","214.3","241.6","241.7","241.9","265.2"],"for":["10.6","103.15","107.4","109.6","113.5","129.8","179.61","195.8","214.2","214.3","216.2","228.2","265.2"],"m":["10.6","52.12","286.38"],"g":["10.6","106.33","152.30","214.3"],"indent":["10.6"],"w":["10.6"],"p":["10.6","60.0","90.0","114.15","115.0","127.40","190.2","190.4","286.55"],"i":["10.6","61.18","67.8","69.3","69.9","96.14","101.3","127.20","152.30","154.10","154.15","154.17","173.13","177.13","214.2","241.8","279.8"],"x":["10.6","97.2","97.41","98.4","106.23","127.24","127.55","175.4","184.20","184.22"],"q":["10.6","286.55"],"charat":["10.6"],"push":["10.6","156.14","159.5","180.0","227.1","228.1","231.1","231.2"],"j":["10.6","49.1"],"k":["10.6"],"l":["10.6","279.8"],"o":["10.6","52.5","53.12","55.1","55.2","55.3","55.4","55.5","92.0","127.24","173.13","177.13","275.2","279.8"],"d":["10.6","61.18","69.9","88.2","96.6","114.15","127.42","154.10","214.3","284.46","284.61","286.28","286.49"],"e":["10.6","73.0","99.6","140.5","205.1","207.3","207.16","214.3","279.8","286.49"],"arguments":["10.6","64.15","127.5"],"void":["10.6","57.6","206.12","206.14","226.1"],"string":["10.6","99.10","108.2","112.4","127.7","127.21","127.27","127.38","156.13","156.14","156.23","183.2","184.8","216.2","231.1","236.4","236.6","287.2","291.2"],"typeof":["10.6","99.10","173.3","173.67","173.68","173.69","173.99","179.25","218.4","232.2","283.10"],"openbrace":["10.6"],"end":["10.6"],"of":["10.6","61.17","70.0","103.15","107.2","110.2","127.13","127.24","127.37","129.4","148.5","179.44","187.0","206.12","206.14","206.16","216.2"],"line":["10.6","60.0","92.0","113.5","113.6","179.44"],"页面":["10.7","195.7"],"颜色重新随机加载":["10.7"],"removes":["10.7"],"then":["10.7","98.11","176.13","206.14"],"reloads":["10.7"],"all":["10.7","106.35","132.4","173.15","173.84","261.1"],"页面所有的":["10.8"],"表单和表格打印":["10.8"],"给当前环境添加":["10.9"],"jquerify":["10.9"],"方法":["10.10","23.90","108.2","125.8","127.21","147.2","148.3","167.1","177.8","179.55","180.0","195.4"],"打印当前页面的":["10.11"],"window":["10.11","19.2","99.7","99.8","99.10","126.6","133.6","134.4","152.8","162.0","162.3","168.18","168.25","286.48"],"information":["10.11","175.10"],"developer":["10.11","115.0"],"mozilla":["10.11"],"org":["10.11","107.2","110.2","111.2"],"en":["10.11","107.2","110.2","111.2","150.2","168.3","168.7","286.47"],"us":["10.11","209.3"],"docs":["10.11","69.10","73.0","94.8"],"navigation":["10.11","151.5","152.8"],"timing":["10.11","152.9"],"lt":["10.11"],"标签数量":["10.12"],"gettagcount":["10.12","286.2"],"获取当前路径的拼接参数":["10.13"],"querystringvalues":["10.13"],"在console中打印全局变量":["10.14"],"用于检测全局变量的内存泄露":["10.14"],"by":["10.14","110.2","204.3"],"sindresorhus":["10.14"],"tips":["11.0","11.7","138.27"],"这个功能肯定是大家经常用到的":["11.1"],"状态":["11.2","48.6","132.1","205.15"],"element":["11.3","61.8","61.17","91.0","96.3","96.4","112.4","168.19","209.6","214.2","215.2","241.10"],"断点":["11.4"],"给":["11.4","11.7","52.16","99.13"],"打断点想必各位都听过":["11.4"],"我们还可以通过":["11.5"],"元素":["11.6","106.44","169.3","195.4"],"不知道你是否遇到过这样的问题":["11.6"],"打断点想必大家都会":["11.7"],"但是打断点也是有一个不为人知的":["11.7"],"放置":["13.0"],"然后在":["14.1","256.8"],"浏览器控制台中":["16.0"],"运行即可":["16.0"],"javascript":["16.0","20.3","20.7","20.12","21.3","24.5","52.6","52.17","52.18","53.3","53.5","53.6","53.8","53.9","53.10","53.11","53.12","55.1","55.3","55.4","55.5","59.1","64.19","70.0","85.2","85.3","85.7","85.8","102.0","102.5","115.0","118.4","118.5","127.18","129.2","129.5","129.6","130.3","130.9","131.1","131.2","131.3","131.4","131.6","131.7","131.8","131.10","132.1","132.2","132.3","132.4","133.6","138.15","138.19","138.29","138.35","138.38","138.42","140.0","145.5","149.2","173.9","173.25","173.30","173.32","173.37","173.93","176.2","176.4","176.5","176.18","177.6","178.5","179.41","181.0","185.1","217.2","283.1","283.2","283.3","283.4","283.5","283.6","283.7","283.8","283.9","283.10","284.1","284.5","284.7","284.10","284.12","284.13","284.16","284.18","284.20","284.26","284.30","284.31","284.32","284.33","284.38","284.39","284.40","284.42","284.46","284.49","284.50","284.51","284.53","284.54","284.55","284.56","284.57","284.58","284.61","284.62","284.65","284.66","284.67","284.68","284.69","284.70","284.72","284.73","284.74","284.76","284.79","284.80","284.82","284.84","285.3","285.4","285.6","285.7","285.8","285.9","285.10","285.11","285.12","285.13","285.14","286.18","286.19","286.22","286.23","286.25","286.27","286.28","286.30","286.31","286.33","286.34","286.40","286.46","286.49","286.51","286.53","286.56","286.57","286.60","286.61","286.65","286.66","286.67","286.68","286.69","295.3","295.4","295.5","295.6","295.7","296.1","296.2","296.3"],"walker":["16.0","214.2"],"node":["16.0","19.9","64.9","64.11","64.14","65.35","65.36","67.10","68.13","76.0","76.3","81.1","86.1","87.13","87.17","87.34","95.40","97.2","97.22","113.6","115.0","137.0","138.26","140.0","140.5","141.1","141.4","141.5","142.24","142.29","159.2","159.5","159.9","159.13","173.13","173.52","177.6","177.7","178.7","179.50","195.6","195.9","214.1","214.2","215.2","231.1","231.2","231.4","231.6","231.7","241.1","241.10"],"logs":["17.0","195.7"],"sources":["17.0"],"network":["17.0","98.7","115.0","152.18"],"as":["18.0","95.45","95.46","109.6","111.4","113.7","214.2","219.6"],"global":["18.0","21.17"],"存储为一个全局变量":["18.0"],"如果你在":["18.0","74.0"],"涉及面试题":["19.1","19.5","19.12"],"事件触发有三个阶段":["19.2"],"往事件触发处传播":["19.2"],"遇到注册的捕获事件会触发":["19.2"],"通常我们使用":["19.3"],"该函数的第三个参数可以是布尔值":["19.3"],"也可以是对象":["19.3"],"对于布尔值":["19.3"],"usecapture":["19.3"],"参数来说":["19.3"],"如果一个节点中的子节点是动态生成的":["19.4"],"那么子节点需要注册事件的话":["19.4"],"应该注册在父节点上":["19.4"],"什么是跨域":["19.5","126.1"],"为什么浏览器要使用同源策略":["19.5"],"你有几种方式可以解决跨域问题":["19.5"],"了解预检请求嘛":["19.5"],"因为浏览器出于安全考虑":["19.5"],"的原理很简单":["19.6"],"就是利用":["19.6"],"script":["19.6","24.5","65.20","65.36","74.0","74.1","74.3","74.6","74.10","79.0","82.0","83.4","84.1","84.4","84.7","86.1","88.2","99.9","115.0","173.31","175.18","179.18","179.51","279.8"],"标签没有跨域限制的漏洞":["19.6"],"通过":["19.6","68.4","99.3","114.13","134.4","169.4","173.39","177.6","177.8","177.9","180.0","197.4","209.1","214.0","214.2","216.6","219.4","221.3","221.5","236.1","236.4","236.6","236.7","241.3","241.6","241.7","241.8","256.1","286.43"],"标签指向一个需要访问的地址并提供一个回调函数来接收数据当需要通讯时":["19.6"],"需要浏览器和后端同时支持":["19.7"],"以":["19.8","102.1","241.3","241.8"],"ajax":["19.8","24.4"],"为例":["19.8"],"当满足以下条件时":["19.8"],"那么很显然":["19.9"],"不符合以上条件的请求就肯定是复杂请求了":["19.9"],"对于复杂请求来说":["19.9"],"首先会发起一个预检请求":["19.9"],"该请求是":["19.9"],"option":["19.9","108.3","195.4"],"方法的":["19.9"],"通过该请求来知道服务端是否允许跨域请求":["19.9"],"对于预检请求来说":["19.9"],"如果你使用过":["19.9"],"domain":["19.10","50.33","115.0","126.8","141.4"],"该方式只能用于":["19.10"],"这种方式通常用于获取嵌入页面中的第三方页面数据":["19.11"],"一个页面发送消息":["19.11"],"另一个页面判断来源并接收消息":["19.11"],"sessionstorage":["19.13"],"indexdb":["19.13"],"我们先来通过表格学习下这几种存储方式的区别":["19.13"],"特性":["19.13","178.6","185.2"],"是运行在浏览器背后的":["19.14"],"独立线程":["19.14"],"一般可以用来实现缓存功能":["19.14"],"worker的话":["19.14"],"传输协议必须为":["19.14"],"因为":["19.14","37.0","97.61","135.0","195.3","214.2","214.3","218.10"],"中涉及到请求拦截":["19.14"],"首先":["20.2","22.1","37.2","41.1","44.6","50.4","51.0","51.1","133.6","178.2"],"我打算对这张图中要表达的内容做一个综述":["20.2"],"然后再分别举例解释上述概念":["20.2"],"一段js代码的执行分为编译阶段和执行阶段":["20.2"],"变量提升":["20.3"],"foo":["20.3","20.12","60.0","127.24","129.2","173.3","173.4","173.5","184.33"],"执行上下文":["20.4","179.13"],"执行上下文就是js代码的执行环境":["20.4"],"调用栈":["20.5"],"作用域":["20.6","173.55","179.15"],"块状作用域":["20.7"],"var因为变量提升不支持块状作用域":["20.7"],"所谓块状就是一对大括号组成的区域":["20.7"],"if块":["20.7"],"作用域链":["20.8","179.16"],"词法作用域":["20.9"],"词法作用域指代的是我们刚才描述的js中应用的变量查找规则":["20.9"],"所以词法作用域全称应该是词法作用域链":["20.9"],"为什么叫词法作用域呢":["20.9"],"因为变量的查找的顺序取决于代码书写的位置":["20.9"],"闭包":["20.10","173.55","179.17"],"在执行上下文之间":["20.10"],"有时会插入一个闭包":["20.10"],"因为根据词法作用域的规则":["20.10"],"obj":["20.12","129.5","173.98","283.10","286.14"],"在这个例子中":["20.12"],"根据词法作用域的规则":["20.12"],"foo函数中访问的a是全局作用域的1":["20.12"],"典型客户端web应用的生命周期从用户在浏览器地址栏输入一串":["21.1"],"v8是谷歌的开源高性能javascript和webassembly引擎":["21.2"],"使用c":["21.2"],"编写":["21.2","68.9"],"是怎么执行":["21.3"],"代码的":["21.3"],"参考下面的流程图":["21.3"],"以及官方的流程图":["21.3"],"ignition是一台寄存器机器":["21.4"],"优化编译器":["21.5"],"在计算机科学中":["21.6","239.4"],"抽象语法树":["21.6","63.0","64.4","64.9","179.30","239.3"],"abstract":["21.6","63.0"],"syntax":["21.6","63.0"],"词法分析":["21.7","64.2","64.3"],"也称之为扫描":["21.7"],"scanner":["21.7"],"简单来说就是把一段代码进行拆分":["21.7"],"执行上下文是一种规范":["21.8"],"用于跟踪ecmascript实现对代码的运行时评估":["21.8"],"全局执行上下文在":["21.8"],"v8":["21.8","179.42"],"的生存周期内是不会被销毁的":["21.8"],"它会一直保存在堆中":["21.8"],"这样当下次在需要使用函数或者全局变量时":["21.8"],"就不需要重新创建了":["21.8"],"由于javascript是单线程的":["21.8"],"全局执行上下文":["21.9"],"eval函数":["21.10"],"在eval函数内部执行的代码也会获得它自己的执行上下文":["21.10"],"执行上下文的创建分为两个阶段":["21.12"],"执行阶段所要理解的东西不是很多":["21.13"],"在创建阶段":["21.14"],"v8引擎只是扫描所有代码":["21.14"],"但是不执行":["21.14"],"它创建作用域":["21.14"],"词法环境":["21.15"],"lexical":["21.15"],"environments":["21.15"],"中文理解就是词法环境是一种规范类型":["21.15"],"用于根据ecmascript代码的词法嵌套结构定义标识符与特定变量和函数的关联":["21.15"],"词汇环境由一个环境记录和一个可能为空的对外部词汇环境的引用组成":["21.15"],"环境记录":["21.16"],"environment":["21.16","21.17"],"records":["21.16","21.17"],"环境记录是在词法环境中存放变量和函数声明的地方":["21.16"],"环境记录可分为两种类型":["21.16"],"全局环境记录在逻辑上是单个记录":["21.17"],"但它被指定为封装对象环境记录和声明性环境记录的组合":["21.17"],"全局环境记录的对象环境记录组件包含所有内置全局变量的绑定":["21.17"],"以及由全局代码中包含的functiondeclaration":["21.17"],"generatordeclaration":["21.17"],"asyncfunctiondeclaration":["21.17"],"asyncgeneratordeclaration或variablestatement引入的所有绑定":["21.17"],"全局代码中所有其他ecmascript声明的绑定包含在全局环境记录的声明性环境记录组件中":["21.17"],"用伪代码的形式可以表现为以下的方式":["21.17"],"作用域是一套规则":["21.18"],"用于确定在何处以及如何查找变量":["21.18"],"标识符":["21.18"],"执行下上下文":["21.19"],"计算机的工作原理":["22.1"],"计算机最基本的5大组成部分如下图":["22.1"],"是取指令的过程如下":["22.11"],"第一步":["22.11","64.7","64.16","64.21","64.22","208.5","209.9"],"pc":["22.11","286.38"],"也就是存放指令地址的地方":["22.11"],"我们要知道下一条指令是什么":["22.11"],"计算机编程语言":["22.12"],"我们看看机器语言":["22.12"],"怎么表示存放一个数的指令":["22.12"],"一种是直接借助编译器":["22.13"],"将高级语言转换为二进制代码":["22.13"],"比如c":["22.13"],"十进制整数转为二进制":["22.16"],"十进制":["22.18"],"转为二进制":["22.18"],"取出整数部分":["22.18"],"取出整数部分1":["22.18"],"即十进制0":["22.18"],"25的二进制为":["22.18"],"01":["22.18","120.2","173.5"],"第一次所得到为最高位":["22.18"],"最后一次得到为最低位":["22.18"],"此时我们可以试试十进制0":["22.18"],"1和0":["22.18"],"2如何转为二进制":["22.18"],"2化二进制是":["22.19"],"定点数":["22.21"],"局部性原理和catche":["22.24"],"缓存":["22.24","25.5"],"先看下图":["22.24"],"说明一下":["22.24"],"mdr和mar虽然逻辑上属于主存":["22.24"],"但是在电路实现的时候":["22.24"],"mdr和mar离cpu比较近":["22.24"],"上图是在执行一串代码":["22.24"],"o是什么呢":["22.26"],"输入":["22.26","52.8","60.0","193.1","260.3"],"为了解决第一阶段cpu要等待i":["22.27"],"o设备":["22.27"],"cpu通过通道控制部件来管理i":["22.28"],"计算机网络概念":["23.1"],"我们举个案例":["23.6"],"一条路每秒最多能过100辆车":["23.6"],"正文开始":["23.14"],"比如说":["23.17","148.3","172.0"],"因为再线路上传输的信号功率会逐渐衰减":["23.20"],"流量控制":["23.28"],"以太网的帧格式":["23.30"],"网桥":["23.39"],"以太网交换机":["23.40"],"谈到交换机":["23.40"],"就不得不提两个概念":["23.40"],"数据报格式":["23.46"],"链路层数据帧封装的数据大小是有限制的":["23.48"],"以太网的mtu":["23.48"],"mtu是指一种通信协议的某一层上面所能通过的最大数据包大小":["23.48"],"a类":["23.50"],"b类":["23.50"],"网络地址转换":["23.51"],"子网划分和子网掩码":["23.52"],"首先要明白":["23.52"],"为什么要划分子网":["23.52"],"首先大家要知道":["23.52"],"总体来说":["23.52"],"划分子网不但没有增加可用ip地址":["23.52"],"而且减少了可用ip地址":["23.52"],"我们简单回顾一下以太网的帧的格式":["23.54"],"上图有一个源地址和目的地址":["23.54"],"这两个地址都是指的mac地址":["23.54"],"mac地址是什么呢":["23.54"],"简单说来就是两台相邻的路由器a和b":["23.54"],"了解即可":["23.56"],"确认ip包是否成功到达目标地址":["23.58"],"网络设备路由器简介":["23.59"],"路由器是一种具有多个输入端口和多个输出端口的专用计算机":["23.59"],"其任务是转发和分组":["23.59"],"如下图所示":["23.59","23.66","23.69"],"传输层知识":["23.60"],"udp协议的特点":["23.63"],"udp是无连接的":["23.63"],"减少开销和发送数据之前的时间延迟":["23.63"],"大家都知道tcp的三次握手和四次分手":["23.63"],"这个是需要时间花销的":["23.63"],"udp首部":["23.64"],"tcp协议":["23.65"],"tcp协议简单来说是一种位于传输层的":["23.65"],"面向连接的":["23.65"],"我们看一下比较重要的一些首部字段":["23.66"],"这里我们介绍固定的20字节的tcp首部":["23.66"],"作用":["23.67","27.5","27.7","27.9","27.11","141.4","154.8","196.7","241.5"],"ack":["23.67","30.1"],"tcp建立连接":["23.68"],"tcp释放连接":["23.69"],"分别来了解一下释放连接的过程":["23.69"],"客户端发起请求":["23.69"],"请求断开链接":["23.69"],"fin":["23.69","49.2"],"若建立连接只需两次握手":["23.71"],"客户端并没有太大的变化":["23.71"],"仍然需要获得服务端的应答后才进入established状态":["23.71"],"而服务端在收到连接请求后就进入established状态":["23.71"],"syn洪泛攻击就是利用tcp协议的特性":["23.72"],"三次握手":["23.72"],"攻击者发送tcp的":["23.72"],"syn":["23.72","49.1"],"syn是tcp三次握手中第一个数据包":["23.72"],"tcp如何实现可靠传输":["23.73"],"比如发送方发送速度非常快":["23.75"],"接收方接收速度特别慢":["23.75"],"如果网络出现拥塞":["23.77"],"分组将会丢失":["23.77"],"此时发送方会继续重传":["23.77"],"发送的最初执行慢开始":["23.78"],"令":["23.78"],"cwnd":["23.78"],"发送方只能发送":["23.78"],"在接收方":["23.79"],"要求每次接收到报文段都应该对最后一个已收到的有序报文段进行确认":["23.79"],"例如已经接收到":["23.79"],"m1":["23.79"],"m2":["23.79"],"当客户端有请求时":["23.84"],"会建立一个tcp连接":["23.84"],"接收到服务器响应后":["23.84"],"客户端和服务器建立tcp连接后":["23.85"],"用户主机上运行着dns的客户端":["23.87"],"就是我们的pc机或者手机客户端运行着dns客户端了":["23.87"],"万维网和http协议":["23.88"],"万维网www是一个大规模的":["23.88"],"联机式的信息存储所":["23.88"],"是无数个网络站点和网页的集合":["23.88"],"知识盲区":["23.88"],"在不少人看来":["23.88"],"互联网":["23.88"],"下面是对各部分的简要描述":["23.90"],"method":["23.90","99.10","166.8","178.3","195.9"],"客户端希望服务器对资源执行的动作":["23.90"],"是一个单独的词":["23.90"],"既可以出现在请求报文中":["23.91"],"也可以出现在响应报文中":["23.91"],"它提供了与报文相关的最基本的信息":["23.91"],"connection":["23.91","103.12","159.13","275.2"],"允许客户端和服务器指定与请求":["23.91"],"响应连接有关的选项":["23.91"],"响应头部为客户端提供了一些额外信息":["23.92"],"比如谁在发送响应":["23.92"],"描述主体的长度和内容":["23.93"],"或者资源自身":["23.93"],"allow":["23.93","27.11","115.0"],"该部分其实就是http要传输的内容":["23.94"],"请求跨域问题":["24.0"],"是指浏览器不能执行其他网站的脚本":["24.1"],"即是通过各种方式":["24.2"],"最初做项目的时候":["24.3"],"使用的是jsonp":["24.3"],"请求受同源策略影响":["24.4"],"不允许进行跨域请求":["24.4"],"去创建一个script标签":["24.5"],"script的src属性设置接口地址":["24.5"],"接口参数":["24.5"],"必须要带一个自定义函数名":["24.5"],"要不然后台无法返回数据":["24.5"],"通过定义函数名去接受返回的数据":["24.5"],"动态创建":["24.5"],"介绍":["25.2","25.5","25.8","96.1"],"content":["25.2","27.11","106.16","131.1","131.2","131.3","131.4","131.5","131.6","159.13","170.15","171.0","195.8","214.2","231.5","239.5","241.3","241.6"],"disposition":["25.2"],"示例":["25.3","99.6","99.9","286.47"],"为此":["25.3"],"我特意写了一个":["25.3"],"express":["25.3"],"小示例":["25.3"],"大抵是在":["25.3"],"场景":["25.4","25.7","64.15","64.16","89.8"],"用来指定缓存机制":["25.5"],"作为前端八股文必考知识":["25.5"],"相信大家已经耳熟能详":["25.5"],"常见的":["25.5","171.0","173.52"],"属性如下":["25.5"],"response":["25.5","89.13","204.2"],"实际生产如何运用":["25.6"],"凡是名称带有":["25.6"],"hash":["25.6","99.12","126.7","138.39","154.7","173.7","175.12"],"春哥春哥":["25.7"],"曾经是":["25.8"],"web":["25.8","26.4","96.1","100.0","100.4","104.0","113.0","115.0","127.55","151.1","152.7","152.29","177.4","177.13","179.41","181.0","195.9","214.2","239.2"],"开发无法绕开的一道门槛":["25.8"],"而现在它的存在感越来越弱":["25.8"],"但海量的存量项目并不会因为技术的趋势而消失":["25.8"],"它们依然很有价值":["25.8"],"依然需要维护":["25.8"],"而":["25.8","106.25","129.4","205.16","252.3","260.2"],"set":["25.8","73.0","127.17","159.5","159.9","159.13","176.3","179.55","181.0","235.4","249.1"],"开发常见问题分析":["25.9"],"为啥你登录成功了":["25.9"],"请求还是":["25.9"],"的区别及优缺点":["26.2"],"是超文本传输协议":["26.2"],"方式与":["26.4"],"服务器通信时有以下几个步骤":["26.4"],"https协议需要到ca申请证书":["26.5"],"一般免费证书较少":["26.5"],"及":["27.0","175.10"],"请求中的内容":["27.1"],"请求由三部分构成":["27.1"],"分别为":["27.1"],"请求行":["27.1"],"首部":["27.1"],"实体":["27.1"],"请求行大概长这样":["27.1"],"请求能缓存":["27.2"],"post":["27.2","109.1","109.7","175.0","255.0"],"首部分为请求首部和响应首部":["27.3"],"accept":["27.7","27.9","175.2"],"能正确接收的媒体类型":["27.7"],"charset":["27.7","61.6","150.2","168.7"],"能正确接收的字符集":["27.7"],"资源的正确请求方式":["27.11"],"还是通过了":["27.12"],"对称加密就是两边拥有相同的秘钥":["27.13"],"有公钥私钥之分":["27.14"],"公钥所有人都可以知道":["27.14"],"握手过程如下图":["27.15"],"客户端发送一个随机值以及需要的协议和加密方式":["27.15"],"服务端收到客户端的随机值":["27.15"],"自己也产生一个随机值":["27.15"],"特性如下":["28.1"],"二进制分帧传输":["28.1"],"多路复用":["28.1"],"头部压缩":["28.1"],"状态码都有哪些":["29.0"],"如下":["29.1","74.6","151.7","158.5","164.5","175.12","205.1"],"1xx":["29.2","179.45"],"代表请求已被接受":["29.2"],"需要继续处理":["29.2"],"2xx":["29.3"],"代表请求已成功被服务器接收":["29.3"],"处理":["29.3","102.0","154.4","206.15","208.12"],"3xx":["29.4"],"表示要完成请求":["29.4"],"需要进一步操作":["29.4"],"4xx":["29.5"],"代表了客户端看起来可能发生了错误":["29.5"],"妨碍了服务器的处理":["29.5"],"5xx":["29.6"],"表示服务器无法完成明显有效的请求":["29.6"],"这类状态代码代表了服务器在处理请求的过程中有错误或异常状态发生":["29.6"],"ip":["30.0","115.0","138.26","138.39","275.2"],"回复和超时重发这两个机制来保证":["30.1"],"复盘":["31.1"],"首先是一个围棋概念":["31.1"],"在围棋中":["31.1"],"复盘也称":["31.1"],"曾子说":["31.2"],"复盘可以避免未来的失败":["31.3"],"复盘是成功的催化剂":["31.4"],"避免了失败":["31.4"],"复盘产生新知":["31.5"],"新知可以传承":["31.5"],"复盘要求我们从全局视角去重新审视已经发生的事件":["31.5"],"在切换视角之后":["31.5"],"即便是同一件事情也可以从中看到不同的内容":["31.5"],"所以说复盘是一个重新学习":["31.5"],"relearn":["31.5"],"从复盘材料的来源看":["31.7"],"复盘有两种方式":["31.7"],"第一种":["31.7","89.5","275.2"],"复盘自己的经历":["31.7"],"第二种":["31.7","89.5","275.2"],"关于复盘的内容":["31.8"],"从复盘的过程来看":["31.9"],"信息的全面性":["31.9"],"复盘人数可以是一个人也可以是多人":["31.10"],"复盘一定要有指导未来的结果":["31.11"],"对于重大事件":["31.12"],"无论复盘的具体形式是怎样的":["31.13"],"复盘最怕肤浅":["31.14"],"复盘不是追责":["31.15"],"复盘盘的是事情的始末源委":["31.15"],"复盘之后一定要有行动":["31.16"],"既然复盘是面向未来的":["31.16"],"那么复盘之后":["31.16"],"除了有最痛的领悟之外":["31.16"],"失败要复盘":["31.17"],"成功更要复盘":["31.17"],"我们在工作当中":["31.17"],"复盘并不是互联网公司首创的":["31.18"],"每个行业都有它的复盘方法论":["31.18"],"先自己折腾":["32.1"],"尝试一番":["32.1"],"如果能搞定":["32.1"],"那感情好的":["32.1"],"如果搞不定":["32.1"],"这时候对问题来龙去脉有点思路了":["32.1"],"bing":["32.1"],"大佬":["32.2"],"要介绍妹子么":["32.2"],"回不回":["32.2"],"在的":["32.2"],"你说":["32.2"],"萌新":["32.2"],"关于":["32.2","61.17","98.8","113.6"],"这个框架中的":["32.2"],"ξοωχυλβιμητσ":["32.2"],"问题":["32.2","178.7"],"怎么搞啊":["32.2"],"没用过":["32.2"],"百度了下":["32.2"],"看到一堆现成解决方案":["32.2"],"揉揉头":["32.2"],"要知道":["32.3"],"free":["32.3"],"的正确翻译是":["32.3"],"自由":["32.3"],"而非":["32.3"],"免费":["32.3"],"在我看来软件架构就是将人员":["33.1"],"技术等资源组织起来以解决业务问题":["33.1"],"支撑业务":["33.1"],"增长的一种活动":["33.1"],"可能比较抽象":["33.1"],"我想我们可以从架构师的一些具体工作任务来理解":["33.1"],"这句话含义":["33.1"],"组织业务":["33.1"],"架构师通过探索和研究业务领域的知识":["33.1"],"构建自身看待业务的":["33.1"],"世界":["33.1"],"观":["33.1"],"简称":["33.2"],"必须具备超强的落地能力":["33.3"],"所谓架构":["33.5"],"不能产品说什么就闷着头做什么":["34.1"],"对于前端工程师这个职位":["34.2"],"架构师通常是商业世界和技术之间的主要联系之一":["35.0"],"当我们进入一个新的领域":["35.1"],"所要解决的是一组什么样的问题":["35.2"],"应该思考":["35.3"],"二八法则":["35.5"],"项目的成本":["36.1"],"项目相关背景信息的描述":["36.2"],"维护":["36.4"],"为未知因素和挑战指定计划":["36.5"],"懈怠似乎才是常态":["37.0"],"这是为什么呢":["37.0"],"我们日常中的诱惑实在是太多了":["37.0"],"而违背自己的常规生活路径的去坚持一件平常不会做的事情的阻力又非常的大":["37.0"],"那怕我们知道完成这件事将会是一个非常了不起的壮举":["37.0"],"那怕我们知道这个目标并非遥不可及":["37.0"],"我们都不愿意用当下去做交换":["37.0"],"这个场景似曾相识":["37.0"],"不禁让人想起经典电影":["37.0"],"闻香识女人":["37.0"],"里阿尔帕西诺的名言":["37.0"],"起初":["37.1"],"飞轮理论是由管理学大师吉姆":["37.1"],"柯林斯提出的":["37.1"],"他甚至专门写了一本名为":["37.1"],"飞轮效应":["37.1"],"的小册子":["37.1"],"jpeg":["37.1","37.2","44.1","44.3","44.5"],"在这本小册子中":["37.1"],"吉姆":["37.1"],"柯林斯用来支撑飞轮理论的案例里的公司就是亚马逊":["37.1"],"实际上":["37.1","46.3"],"说了这么多":["37.2"],"到底什么是飞轮思维":["37.2"],"飞轮思维的核心思想是打造一个":["37.2"],"飞轮系统":["37.2"],"然后通过持续推动飞轮的转动来积累足够的能量":["37.2"],"直到用很少的力气就可以让飞轮能够自发持续地转动下去":["37.2"],"核心概念":["37.2","113.4","177.6"],"作者认为":["37.2"],"飞轮思维包括两部主要内容":["37.2"],"飞轮思维的行事态度和构建飞轮的方法论":["37.2"],"飞轮效应主图":["37.2"],"飞轮思维的行事态度非常较简单但却非常重要":["37.2"],"从小需求做起":["37.3"],"高质量交付工作":["37.3"],"自身能力提升":["37.3"],"获得同事信任":["37.3"],"委以更大的需求":["37.3"],"获得自信":["37.3"],"回到第一步":["37.3"],"值得一提的是":["37.3"],"仅凭我一人的力量是绝对无法让这个飞轮旋转下去的":["37.3"],"这里还得感谢当时帮助过我的师兄":["37.3"],"师姐":["37.3"],"是他们的指导和帮助才让我的成长飞轮得以开始旋转":["37.3"],"换言之":["37.3","156.6"],"飞轮能够有效":["37.3"],"环境因素非常的重要":["37.3"],"因为飞轮需要反复的升级和优化":["37.4"],"作为架构师":["38.0"],"是否需要保密协议":["38.2"],"客户的角色":["38.3"],"客户所在组织的组织性质":["38.3"],"我们进入一个市场要掌握以下因素":["38.4"],"我们的产品影响那些市场":["38.4"],"整个市场的机遇是什么":["38.4"],"客户的客户是谁":["38.5"],"这个世界之所以能够正常运行":["39.1"],"很大的一部分原因就在于我们的物理定律和社会规范都是确定性的":["39.1"],"在确定性的世界里":["39.1"],"太阳从东方升起西方落下":["39.1"],"绿灯表示通行红灯表示静止":["39.1"],"大家的行动和行动造成的结果都是可预期的":["39.1"],"另一方面":["39.1"],"这个世界之所以有趣":["39.1"],"除了确定性的部分之外":["39.1"],"不确定的那一部分同样扮演了重要的角色":["39.1"],"彩票在开奖之前":["39.1"],"从概率上看我永远都有机会一夜暴富":["39.1"],"又比如盲盒再打开之前":["39.1"],"我永远都不知道里面装的是什么东西":["39.1"],"我们要判断问题的性质":["39.2"],"如果这个问题对于我们来说是已经解决的问题":["39.2"],"确认当前问题是否可以拆解为规模更小的等价问题":["39.3"],"只有把问题拆解成更小的问题":["39.3"],"我们才能有效降低验证成本":["39.3"],"同时":["39.3","102.5"],"在前面的功课都做完之后":["39.4"],"灰度思维要求我们付诸实践":["39.4"],"在这一步":["39.4"],"我们要设计好试验步骤并对试验结果做好假设":["39.4"],"灰度切流是每个研发同学在职业生涯中都会遇到的情况":["39.6"],"这样的例子不胜枚举":["39.6"],"在代码发布的时候":["39.7"],"并不是所有的改动都可以像前文描述的功能模块一样":["39.7"],"有独立的开关控制流量进行灰度":["39.7"],"如果你了解精益创业":["39.8"],"那么你一定也知道精益创业的思想背后其实也有灰度思维的影子":["39.8"],"精益创业的核心思想是用最小的成本验证你的点子是否可行":["39.8"],"给别人转账时":["39.10"],"学习一门兴趣":["39.11"],"没必要一开始就重金投入购入大量的装备":["39.11"],"家长也可以用灰度思维去帮助小孩培养兴趣":["39.12"],"人际交往的过程本来就是一个相互试探的过程":["39.13"],"试探就是灰度":["39.13"],"最后":["39.14"],"主要考察面试者编程能力":["40.0"],"1分钟":["40.1"],"面试官大致描述下本次面试":["40.1"],"3分钟":["40.2"],"5分钟":["40.3","40.6"],"20分钟":["40.5"],"具体的技术问题":["40.5"],"留给应聘者来提问":["40.6"],"我们希望应聘者较为关心的是公司文化":["40.6"],"产品或技术":["40.6"],"而非财务上的":["40.6"],"0版":["41.0"],"师兄说":["41.0"],"一开始的时候":["41.0"],"我们整个支付系统只是电商系统中的小模块":["41.0"],"就是这个代码量加起来不到一万行左右的支付模块":["41.0"],"支持了我们早期所有的支付业务":["41.0"],"相应的":["41.0"],"当时整个支付团队总共也就3到4个人":["41.0"],"工程师思维":["41.0","41.4","46.1"],"jpg":["41.0","62.15","123.1","152.6"],"后来":["41.0"],"随着业务的开展":["41.0"],"我们需要建设更多的支付工具":["41.0"],"一点澄清":["41.1"],"这里我们必须纠正这个浮躁时代存在的":["41.1"],"急于求成":["41.1"],"一夜暴富":["41.1"],"的错误观念":["41.1"],"罗马并不是在一天建成的":["41.1"],"和故事中支付系统的建设过程一样":["41.1"],"我们在工作中":["41.1"],"生活中":["41.1"],"没有什么事情是一蹴而就的":["41.1"],"我们必须承认":["41.1"],"绝大多数事情的发展都是渐进式地展开的":["41.1"],"只是有些事情发展的非常慢":["41.1"],"以至于在看到结果之前的很长一段时间里":["41.1"],"我们都以为自己只是在重复着一件看似相同":["41.1"],"什么是pdca循环":["41.2"],"pdca循环首先由美国质量管理专家沃特":["41.2"],"阿曼德":["41.2"],"休哈特提出":["41.2"],"而后由丰田的戴明推广":["41.2"],"因此又称戴明环":["41.2"],"虽然原创于质量管理领域":["41.2"],"但是几乎所有设计流程的场景都可以使用pdca循环":["41.2"],"pdca":["41.2"],"在公司里":["41.3"],"我们经常在生产环境做线上变更":["41.3"],"比如切库":["41.3"],"fo演练等等":["41.3"],"在变更之前":["41.3"],"在写":["41.4"],"的系列文章时":["41.4"],"我也做了一个pdca":["41.4"],"大体如下":["41.4"],"那么":["41.5","167.4","176.13","206.0"],"结合本文开头的故事":["41.5"],"如果我们用pdca循环的视角来看":["41.5"],"建设一套庞大的支付系统需要怎么做呢":["41.5"],"这里简单分析如下":["41.5"],"p阶段是重中之重":["41.6"],"管理者和执行者":["41.7"],"如果你是管理者":["41.7"],"作为传统的迭代工具":["41.8"],"pdca适用于环境稳定":["41.8"],"按部就班的事务处理场景":["41.8"],"然而":["41.8","44.1","154.20"],"进入互联网时代之后":["41.8"],"我们的工作和生活在快节奏中变得愈发不确定":["41.8"],"每天我们都要处理各种突发事件":["41.8"],"计划和方案刚作出来就面临着过期的窘境":["41.8"],"在这种瞬息万变的情况下":["41.8"],"我们需要快速的反应和决策能力":["41.8"],"此时死板的pdca循环就不那么好用了":["41.8"],"在这种情况下":["41.8","181.0"],"该怎么实践迭代思维呢":["41.8"],"幸好":["41.8"],"我们还有ooda循环":["41.8"],"什么是ooda循环":["41.8"],"ooda循环出自信息战领域":["41.8"],"发明者是美国陆军上校约翰":["41.8"],"本文是工程师思维的第四篇文章":["41.9"],"截止到现在":["41.9"],"我们已经介绍了四种工程师思维":["41.9"],"胖子不是一口气吃出来的":["41.10"],"罗马也不是一天建成的":["41.10"],"工程师们解决问题":["41.10"],"也不存在一蹴而就的说法":["41.10"],"坏消息":["42.0"],"架构师通常被视为":["42.0"],"管理和传达技术方向和架构方法":["42.1"],"管理和沟通":["42.1"],"指定架构师计划":["42.2"],"mece分析方法":["43.0"],"mece":["43.1"],"mece即把一个工作项目分解为若干个更细的工作任务的方法":["43.2"],"男性":["43.3"],"女性":["43.3"],"性别维度":["43.3"],"确定范围":["43.5","43.12"],"寻找符合mece的切入点":["43.6"],"切入点是指你准备按什么来分":["43.6"],"或者说大家共同的属性是什么":["43.6"],"考虑是否可以用mece继续细分":["43.7"],"比如对客户的分类如果按男和女来分":["43.7"],"的确是满足mece原则":["43.7"],"上面对于人的问题":["43.13"],"技术水平":["43.14"],"业务水平":["43.14"],"沟通交流":["43.14"],"工作态度":["43.14"],"心态":["43.14"],"个人定位":["43.14"],"这里的切入点是什么呢":["43.14"],"最好的防守":["44.0"],"后果很严重":["44.1"],"在之前的章节中":["44.1"],"我介绍了":["44.1"],"根因思维":["44.1"],"这是一种问题出现后进行事后补救的工程思维":["44.1"],"经验告诉我们":["44.1"],"问题出现事后补救的代价往往非常大":["44.1"],"崩溃2":["44.1"],"事故":["44.2"],"故事":["44.2"],"开头":["44.2","241.8","241.10"],"还得从当时我们维护的融资系统说起":["44.2"],"这个融资系统负责处理用户的融资请求":["44.2"],"它有一个重要的功能":["44.2"],"就是查询融资发起者的所有交易记录":["44.2"],"一般来说":["44.2","46.4"],"一个融资发起者会有多笔交易记录":["44.2"],"而这些交易记录往往来自于自不同的供应商":["44.2"],"依照业务需求":["44.2"],"查询时银行不需要全部的交易记录":["44.2"],"它只需要这个融资者名下指定供应商的交易记录":["44.2"],"为了满足这个需求":["44.2"],"我们在系统里为不同银行维护了一个供应商列表":["44.2"],"银行供应商白名单":["44.2"],"第一个白名单列表":["44.2"],"在融资者发起融资时":["44.2"],"我们的系统会查询融资者在这个":["44.2"],"下的所有交易记录":["44.2"],"听上去不就是一个crud的r吗":["44.2"],"是不是很简单":["44.2"],"别急":["44.2"],"业务上还有另外一个需求":["44.2"],"我们的业务还说":["44.2"],"并不是银行指定了供应商白名单":["44.2"],"我们的系统就一定得完全按着这个白名单来查询交易记录":["44.2"],"为了能够在业务侧控制风险":["44.2"],"业务上还为每个融资者设计了一个可融资的供应商列表":["44.2"],"融资者供应商白名单":["44.2"],"第二个白名单列表":["44.2"],"所以":["44.2","95.29","125.0","181.0"],"融资者实际可融资的供应商白名单":["44.2"],"融资者供应商白名单和银行供应商白名单的交集":["44.2"],"综上":["44.2"],"在融资发起时":["44.2"],"我们的系统会查询融资者在实际可融资的供应商白名单下的所有交易记录":["44.2"],"已经看晕了":["44.2"],"别慌":["44.2"],"不妨让我们举个例子":["44.2"],"若融资者a要在银行b发起融资":["44.2"],"已知":["44.2"],"融资者a的融资者供应商白名单是":["44.2"],"供应商1":["44.2"],"供应商2":["44.2"],"供应商3":["44.2"],"银行b的银行供应商白名单是":["44.2"],"那么融资者a涉及在银行b的可融资供应商列表就是":["44.2"],"人非圣贤":["44.3"],"孰能无过":["44.3"],"既然犯错如此容易":["44.3"],"那么我们必然就得考虑如何防止犯错":["44.3"],"在工程上":["44.3"],"对于一个产品或者一种生产流程来说":["44.3"],"在设计阶段就应该考虑使用者犯错的可能性":["44.3"],"事先通过巧妙的设计来避免错误":["44.3"],"让产品或者生产流程永远只有一种使用方式或者操作方式":["44.3"],"正确的那一种":["44.3"],"这样的设计就是防错设计":["44.3"],"而这样的设计思路就是防错思维":["44.3"],"需要注意的是":["44.3","104.0"],"我们说通过设计来避免错误":["44.3"],"这就意味着我们不能把":["44.3"],"错误的使用方式":["44.3"],"大力出奇迹":["44.4"],"防错设计还有一个称呼":["44.4"],"防呆设计":["44.4"],"防呆设计的概念源于日本":["44.4"],"为了让大家对防错思维和防错设计有一个更直观的认识":["44.5"],"我们将探讨更多":["44.5"],"防错设计":["44.5"],"的列子":["44.5"],"有缺角的sim卡":["44.5"],"下图是一张sim卡":["44.5"],"sim卡":["44.5"],"仔细观察的话":["44.5"],"会发现sim卡被故意设计成一个有缺角的长方形":["44.5"],"为什么":["44.5","135.0","173.45"],"想想看":["44.5"],"如果sim卡没有这个缺角并且是一个正方形":["44.5"],"会有多少种安装方式":["44.5"],"确定防错的具体范围":["44.6"],"软件工程师如何做防错设计":["44.6"],"这是一个很大的话题":["44.6"],"为了让这个话题变成一个可执行的指导":["44.6"],"首先我们应该明确":["44.6"],"事前":["44.7"],"事中":["44.8"],"事后":["44.9"],"犯错能被快速发现和修复":["44.9"],"如果在事前和事中都没能有效防错":["44.9"],"那么我们只能在事后进行防错布局了":["44.9"],"因为在事后环节问题已经发生了":["44.9"],"而我们又无法主动避免问题":["44.9"],"这是事前该做的事前":["44.9"],"那么我们至少要有快速发现问题和修复问题的能力":["44.9"],"防错思维是一个非常底层的思维工具":["44.10"],"项目能力":["45.0","45.1"],"合作关系":["45.2"],"一致":["45.3"],"确定要和那些人建立合作关系":["45.4"],"报喜又报忧":["45.5"],"是建立信任的一部分":["45.5"],"在设计解决方案的时候":["45.6"],"你往往不能当个孤胆英雄":["45.6"],"cause":["46.1"],"一个问题发生了":["46.2"],"在问题发生的那一刻":["46.2"],"我们看到的都只是问题的外在表象":["46.2"],"而引起问题发生的真正原因":["46.2"],"往往被表象所掩盖":["46.2"],"隐藏在一环套一环的原因和结果背后":["46.2"],"因此":["46.2","133.4","177.7","178.6"],"头痛医脚":["46.2"],"应用根因思维最基本的方式":["46.3"],"就是":["46.3","137.0","154.20","249.2"],"根因分析法":["46.3"],"而典型的根因分析法当属丰田的5":["46.3"],"why分析法了":["46.3"],"丰田5":["46.3"],"why分析法":["46.3","46.5"],"why分析法是丰田公司在汽车生产过程中总结出来的一种识别根因的方法":["46.3"],"简单来说":["46.3","172.0"],"就是就眼前发生的问题层层递进地问5个问题":["46.3"],"问题数量没有严格要求":["46.3"],"这个分析法的创造者名叫大野耐一":["46.3"],"他也是丰田生产法":["46.3"],"tps":["46.3"],"的创造者":["46.3"],"而丰田生产法就是后来大名鼎鼎的精益制造":["46.3"],"有兴趣的朋友可以阅读":["46.3"],"改变世界的机器":["46.3"],"这本书":["46.3"],"当然":["46.3"],"下面":["46.4"],"我们将从日常工作和生活中遇到的两类不同类型的问题展开":["46.4"],"继续对根因分析法的探讨":["46.4"],"在进入讨论之前":["46.4"],"我想解释一下问题分类的必要性":["46.4"],"之所以要对问题分类":["46.4"],"是因为对于不同类型的问题":["46.4"],"我们所用的分析方法是不同的":["46.4"],"在遇到问题时":["46.4"],"我们应该首先判断问题的类型":["46.4"],"然后再考虑用与之匹配的分析方法":["46.4"],"这样才会事半功倍":["46.4"],"通过5":["46.5"],"我们从结果推到了根因":["46.5"],"我们甚至采取了行动":["46.5"],"一劳永逸地解决了这个问题":["46.5"],"真是皆大欢喜":["46.5"],"根因思维说起来似乎简单":["46.6"],"但是实际操作起来":["46.6"],"根因思维和根因分析法":["46.7"],"是我们在日常中处理问题时必然会使用的思维工具":["46.7"],"根因思维认为引起问题的原因是由一个前后咬合的因果链构成的":["46.7"],"几种分层结构":["47.1"],"osi参考模型":["47.2"],"目的":["47.2"],"表示层":["47.4"],"会话层":["47.5"],"传输层":["47.6"],"负责主机中两个进程的通信":["47.6"],"即端对端的通信":["47.6"],"网络层":["47.7"],"主要任务":["47.7"],"把分组从源端传送到目的端":["47.7"],"数据链路层":["47.8"],"把网络层传下来的数据包组装成帧":["47.8"],"物理层":["47.9"],"将比特流转换为电信号进行传输":["47.9"],"tcp":["47.10","48.1","48.2","48.19","49.0","50.1","50.9","50.28","50.29","51.6","126.3","176.14","179.44"],"5层参考模型":["47.11"],"从这个图上我们就可以发现":["48.1"],"头部比":["48.1"],"udp":["48.1","50.2","51.1","51.3","51.4","51.5"],"头部复杂的多":["48.1"],"对于":["48.1","152.3","252.6"],"头部来说":["48.1"],"首先假设主动发起请求的一端称为客户端":["48.3"],"被动连接的一端称为服务端":["48.3"],"客户端向服务端发送连接请求报文段":["48.4","50.11"],"服务端收到连接请求报文段后":["48.5","50.12"],"当客户端收到连接同意的应答后":["48.6","50.13"],"还要向服务端发送一个确认报文":["48.6"],"客户端发完这个报文段后便进入":["48.6"],"established":["48.6"],"服务端收到这个应答后也进入":["48.6"],"若客户端":["48.8","50.15"],"收到连接释放请求后":["48.9","50.16"],"会告诉应用层要释放":["48.9","50.16"],"如果此时还有没发完的数据会继续发送":["48.10"],"收到释放请求后":["48.11","50.18"],"向":["48.11","50.18"],"发送确认应答":["48.11"],"此时":["48.11","49.2","172.0","196.9"],"协议":["48.12","104.0","126.3","179.44"],"arq":["48.13","48.17","48.18"],"只要":["48.14"],"在报文传输的过程中可能会出现丢包":["48.15"],"超时或丢失":["48.16"],"对端传输的应答也可能出现丢失或超时的情况":["48.16"],"连续":["48.18"],"中":["48.18","97.18","106.27","106.33","114.32","133.3","133.5","173.25","176.17","178.0","178.5","179.11","179.23","179.33","184.4","184.5","184.6","184.7","184.13","184.16","195.7","208.2","222.4","232.2","235.4","241.10"],"在上面小节中讲到了发送窗口":["48.19"],"窗口":["48.20"],"拥塞处理和流量控制不同":["48.21"],"顾名思义":["48.22","87.26","87.32"],"就是在传输开始时将发送窗口慢慢指数级扩大":["48.22"],"拥塞避免算法相比简单点":["48.23"],"每过一个":["48.23"],"快速重传一般和快恢复一起出现":["48.24"],"taho":["48.25"],"reno":["48.26","48.27"],"new":["48.27","97.50","99.10","103.7","127.17","131.7","132.2","132.3","132.4","140.2","147.5","158.3","159.5","159.9","159.13","164.3","167.4","173.10","173.38","173.61","173.76","173.83","175.8","179.33","195.4","204.2","217.7","235.4","287.3"],"ren":["48.27"],"改进后的快恢复":["48.27"],"算法改进了之前":["48.27"],"建立连接需要三次握手":["48.28"],"第一次握手":["49.1"],"建立连接时":["49.1"],"客户端发送syn包":["49.1"],"四次挥手":["49.2"],"客户端进程发出连接释放报文":["49.2"],"并且停止发送数据":["49.2"],"释放数据报文首部":["49.2"],"其序列号为seq":["49.2"],"等于前面已经传送过来的数据的最后一个字节的序号加1":["49.2"],"客户端进入fin":["49.2"],"wait":["49.2","283.4","283.12"],"tcp是面向链接的":["50.0"],"而udp是面向无连接的":["50.0"],"ip网络模型":["50.1"],"计算机与网络设备要相互通信":["50.1"],"双方就必须基于相同的方法":["50.1"],"如何探测到通信目标":["50.1"],"由哪一边先发起通信":["50.1"],"使用哪种语言进行通信":["50.1"],"面向无连接":["50.4"],"不可靠性":["50.7"],"首先不可靠性体现在无连接上":["50.7","51.2"],"头部开销小":["50.8"],"传输数据报文时是很高效的":["50.8"],"当一台计算机想要与另一台计算机通讯时":["50.9"],"两台计算机之间的通信需要畅通且可靠":["50.9"],"每条tcp传输连接只能有两个端点":["50.21"],"tcp不像udp一样那样一个个报文独立地传输":["50.22"],"对于可靠传输":["50.23"],"当网络出现拥塞的时候":["50.24"],"tcp允许通信双方的应用程序在任何时候都能发送数据":["50.25"],"tcp和udp的比较":["50.26"],"是否连接":["50.28"],"无连接":["50.28"],"运行在tcp":["50.30"],"hypertext":["50.31"],"transfer":["50.31"],"protocol":["50.31"],"超文本传输协议":["50.31"],"主要用于普通浏览":["50.31"],"bootp":["50.32"],"boot":["50.32"],"dns":["50.33","121.9","151.12","179.37"],"name":["50.33","64.18","65.16","65.36","67.10","81.3","89.5","89.13","96.2","98.7","112.4","113.7","119.11","126.6","138.22","138.29","140.5","141.4","150.2","152.11","156.14","170.15","173.1","173.9","183.2","214.2","216.2","216.5","219.6","228.2","235.4","236.1","236.5","239.3","252.5"],"service":["50.33","133.2"],"tcp向上层提供面向连接的可靠服务":["50.34"],"是不需要和":["51.1"],"通信都不需要建立连接":["51.2"],"虽然":["51.3","127.28"],"协议不是那么的可靠":["51.3"],"的妙用":["52.1"],"给定":["52.2"],"nums":["52.2","52.6","52.14","52.16","174.3","174.7","174.59","174.60","174.64"],"淳朴":["52.4","52.5"],"的解法":["52.4"],"解法的反思":["52.5"],"大家以后做算法题的时候":["52.5"],"要有这样的一种本能":["52.5"],"当发现自己的代码里有两层循环时":["52.5"],"先反思一下":["52.5"],"能不能用空间换时间":["52.5"],"把它优化成一层循环":["52.5"],"因为两层循环很多情况下都意味着":["52.5"],"param":["52.6","52.12","52.16","103.13","174.20","174.48","174.52","283.4","283.12","285.5","287.2","291.2","291.6"],"number":["52.6","52.12","52.16","64.21","64.22","112.4","127.40","127.52","156.23","184.8","206.4","206.8","209.3","216.2","283.12","291.2"],"target":["52.6","179.25","186.3","220.2","220.3","245.3","248.0","248.1"],"真题描述":["52.7"],"给你两个有序整数数组":["52.7"],"nums1":["52.7","52.8","52.11","52.12"],"这道题没有太多的弯弯绕绕":["52.10"],"为什么是从后往前填补":["52.11"],"因为是要把所有的值合并到":["52.11"],"里":["52.11"],"所以说我们这里可以把":["52.11"],"nums2":["52.12"],"双指针法能处理的问题多到你想不到":["52.13"],"不信来瞅瞅两数求和它儿子":["52.13"],"给定数组":["52.14"],"三数之和延续两数之和的思路":["52.15"],"我们可以把求和问题变成求差问题":["52.15"],"固定其中一个数":["52.15"],"在剩下的数中寻找是否有两个数和这个固定数相加是等于0的":["52.15"],"虽然乍一看似乎还是需要三层循环才能解决的样子":["52.15"],"不过现在我们有了双指针法":["52.15"],"const":["52.16","57.4","61.7","64.12","64.14","64.16","64.19","64.25","95.9","95.25","95.40","95.42","95.46","97.13","97.22","98.9","99.6","99.10","101.5","103.7","103.11","103.15","103.17","104.0","108.3","112.1","112.4","127.3","127.9","127.16","127.36","127.40","127.42","130.3","140.5","141.8","147.5","148.3","148.5","153.11","154.4","154.16","156.3","156.11","156.13","156.14","156.15","156.17","158.3","158.4","159.2","159.5","159.9","159.13","162.3","164.3","164.4","168.19","169.4","173.1","173.21","173.38","173.54","178.4","184.4","191.1","195.9","204.3","205.1","205.2","206.1","206.5","206.8","206.16","207.7","208.5","209.4","214.1","214.2","215.2","216.2","216.3","217.7","218.8","219.3","219.6","222.3","222.6","222.7","226.1","228.1","229.0","231.2","231.7","235.4","236.4","236.6","236.7","241.1","241.10","283.1","283.2","283.4","283.9","283.10","284.84","285.4","285.5","285.6","285.7","285.10","285.11","285.12","285.13","285.14","286.2","286.6","286.7","286.9","286.10","286.11","286.12","286.13","286.14","286.15","286.16","286.22","286.25","286.28","286.30","286.34","286.37","286.51","286.53","286.56","286.60","286.69","287.1","287.3","287.6","287.7","288.5","291.1","291.5","291.6","294.1","295.3","295.8","295.9","296.1","296.2","296.3"],"threesum":["52.16"],"用于存放结果数组":["52.16"],"let":["52.16","64.7","64.8","64.14","64.22","96.10","96.13","99.6","99.7","103.17","111.4","125.6","127.41","131.2","131.3","131.4","131.5","131.6","133.6","141.2","147.5","149.2","159.2","159.5","159.9","159.13","167.4","173.21","173.29","173.54","173.99","174.25","176.2","176.5","179.61","195.4","206.14","209.3","214.2","235.4","236.6","241.1","241.10","285.5","286.14","288.4","291.6","296.2"],"res":["52.16","112.1","251.2"],"排序":["52.16"],"不能被0整除的数为奇数":["52.17"],"那么求两个数之间的奇数个数":["52.17"],"以0为开始":["52.17"],"average":["52.18"],"递归":["53.2","53.5","53.8","54.2"],"非递归":["53.3","53.6","53.9"],"preordertraversal":["53.3"],"root":["53.3","53.6","53.9","61.17","95.46","97.22","97.35","106.27","138.38","195.7","205.2","206.8","206.9","206.15","212.1","235.4"],"inordertraversal":["53.6"],"postordertraversal":["53.9"],"需要返回":["53.10"],"时间复杂度":["53.10","53.12","55.1","55.2","55.3","55.4","55.5","173.51"],"给一个二叉树":["53.11","53.12"],"需要你找出其最小的深度":["53.11"],"从根节点到叶子节点的距离":["53.11","53.12"],"时间复杂度o":["53.11","174.4","174.16"],"n是树的节点数量":["53.11"],"需要你找出其最大的深度":["53.12"],"数组":["54.1","64.7","156.14","179.33","228.3","230.2","241.9","285.13","286.44"],"nlogn":["55.1","55.2","174.24","174.25"],"分需要劈开数组":["55.1"],"所以是logn":["55.1"],"合则是n":["55.1"],"空间复杂度":["55.1","55.2","55.4","173.51"],"array":["55.1","55.2","55.3","65.15","125.4","125.5","127.24","148.5","173.99","174.25","174.52","179.33","184.7","214.1","216.2"],"prototype":["55.1","55.2","99.10","125.4","125.5","127.21","127.22","127.24","127.25","127.44","127.45","127.46","127.48","127.49","127.50","131.8","131.9","131.10","173.99","176.5","179.11"],"mergesort":["55.1","174.25"],"n为数组长度":["55.4","55.5"],"和时间复杂度一样":["56.1"],"它用来定义描述算法运行过程中临时占用的存储空间大小":["56.2"],"声明一个数组":["56.4"],"类似一个矩阵的概念":["56.5"],"给定一个非空字符串":["57.2"],"最多删除一个字符":["57.2"],"如何判断自己解决回文类问题的解法是否":["57.3"],"高效":["57.3"],"其中一个很重要的标准":["57.3"],"就是看你对回文字符串的对称特性利用得是否彻底":["57.3"],"字符串题干中若有":["57.3"],"回文":["57.3"],"那么做题时脑海中一定要冒出两个关键字":["57.3"],"validpalindrome":["57.4"],"缓存字符串的长度":["57.4"],"len":["57.4","174.25","179.61"],"正则表达式初相见":["57.5"],"设计一个支持以下两种操作的数据结构":["57.6"],"addword":["57.6"],"word":["57.6"],"bool":["57.6"],"这道题要求字符串既可以被添加":["57.7"],"又可以被搜索":["57.7"],"这就意味着字符串在添加时一定要被存在某处":["57.7"],"键值对存储":["57.7"],"我们用":["57.7"],"map":["57.7","64.11","100.2","123.1","127.45","131.1","167.4","176.3","179.33","245.3","256.8"],"或对象字面量来模拟":["57.7"],"注意":["57.7","97.41"],"这里为了降低查找时的复杂度":["57.7"],"我们可以考虑以字符串的长度为":["57.7"],"key":["57.7","67.10","175.4","179.56","184.12","195.8","221.3","235.4","243.2"],"相同长度的字符串存在一个数组中":["57.7"],"这样可以提高我们后续定位的效率":["57.7"],"难点在于":["57.7"],"其实就是一个函数":["58.1"],"它的作用就是用来定义描述算法的运行时间":["58.2"],"如果是":["58.4","104.0","232.2","232.4","241.6","241.9"],"先访问离根节点最近的节点":["59.1"],"如果有兄弟节点就会先遍历兄弟节点":["59.1"],"再去遍历自己的子节点":["59.1"],"breaks":["60.0"],"软换行":["60.0"],"soft":["60.0"],"换行符不在行内代码或":["60.0"],"标签内":["60.0"],"前面没有两个或以上的空格":["60.0"],"将解析为":["60.0"],"渲染为":["60.0"],"时是一个":["60.0"],"行结束符或空格":["60.0"],"baz":["60.0"],"输出":["60.0","127.9","179.56"],"表现":["60.0"],"image":["60.0","64.14","65.35","65.36","67.10","67.17","68.13","70.0","108.2","113.7","114.30","137.0","147.1","147.5","148.0","154.16","158.2","158.5","164.2","164.5","169.4","180.0","180.2","191.2","275.2","284.23"],"png":["60.0","64.14","67.15","99.14","99.23","100.5","101.5","137.0","148.0","152.15","152.16","152.18","152.20","158.2","164.2","169.4","180.0","180.2","191.2","275.2"],"硬换行":["60.0"],"换行符不在内联代码或":["60.0"],"前面有两个或多个的空格":["60.0"],"并且不在块的末尾":["60.0"],"看了网上的各种方案":["61.0"],"目前大家采用的大概有":["61.0"],"方案":["61.0","61.5","61.6","153.6"],"实现方式":["61.0"],"优点":["61.0","175.12","181.0","195.7"],"缺点":["61.0","175.12","181.0"],"vm":["61.0","140.3","140.5","179.54","181.0"],"vh":["61.0","61.3","106.28","171.0"],"按照设计稿的尺寸":["61.0","61.3"],"将":["61.0","61.3","102.5","126.4","133.2","169.3","214.1"],"px":["61.0","61.3","61.18","171.0","181.0"],"按比例计算转为":["61.0","61.3"],"vw":["61.0","61.1","61.3","61.9","171.0"],"ezgif":["61.2"],"gif":["61.2","61.11","61.16","279.7","279.8"],"转换公式如下":["61.3"],"上代码":["61.4","61.12"],"sass":["61.5","102.0","179.8"],"util":["61.5","109.1","141.2","195.9"],"scss":["61.5","92.0"],"math":["61.5","154.12","286.37"],"函数":["61.5","64.7","64.8","131.0","140.5","154.18","156.14","166.9","183.2","204.2","205.4","206.9","214.1","217.7","218.5","219.6","219.9","219.10","220.7","222.4","222.6","222.7","223.2","228.2","236.1","241.6","245.3","247.1","250.1","258.3","286.46"],"lang":["61.5","106.11","150.2","160.0","168.3","168.7","286.47"],"less":["61.6","91.0","102.0"],"utils":["61.6","97.13","166.8","195.7","285.0","287.0","288.0","289.0","290.0","291.0","292.0","293.0","294.0","295.0","296.0"],"utf":["61.6","150.2"],"默认设计稿的宽度":["61.6"],"designwidth":["61.6"],"样式处理函数":["61.7"],"定义设计稿的宽高":["61.7"],"图表自动调整":["61.8"],"这种使用方式有个弊端":["61.8"],"就是屏幕尺寸发生变化后":["61.8"],"需要手动刷新一下才能完成自适应调整":["61.8"],"为了解决这个问题":["61.8"],"你需要在各个图表中监听页面尺寸变化":["61.8"],"重新调整图表":["61.8"],"项目中":["61.8"],"也可以借助":["61.8"],"detector":["61.8"],"最好封装个":["61.8"],"的指令":["61.8"],"在各图表中就只要使用该指令就可以了":["61.8"],"毕竟作为程序员":["61.8"],"能偷懒就偷懒":["61.8"],"安装":["61.8","64.13","68.1","74.5","76.1","113.5","260.1"],"间距":["61.9"],"位移等尺寸自适应":["61.9"],"echarts":["61.9"],"的字体大小只支持具体数值":["61.9"],"像素":["61.9","171.0"],"不能用百分比或者":["61.9"],"等尺寸":["61.9"],"一般字体不会去做自适应":["61.9"],"当宽高比跟":["61.9"],"稿比例出入太大时":["61.9"],"会出现文字跟图表重叠的情况":["61.9"],"vwh03":["61.9"],"scale":["61.10","61.11"],"sceen":["61.11"],"当屏幕的尺寸比例刚好是":["61.11","61.16"],"部分":["61.12","121.0"],"div":["61.12","106.41","169.3","169.4","181.0","190.2","190.4","190.6","209.3","214.3","282.2","286.55"],"classname":["61.12"],"如何缩放":["61.13"],"当":["61.13","77.0","133.3","148.2","173.78","184.10","216.5"],"屏幕宽高比":["61.13"],"设计稿宽高比":["61.13"],"我们需要缩放的比例是":["61.13"],"屏幕宽度":["61.13"],"设计稿宽度":["61.13"],"屏幕高度":["61.13"],"插件":["61.14","64.15","70.0","154.1"],"rem":["61.15","61.16","61.17","61.18"],"font":["61.17","106.27"],"size":["61.17","106.27","181.0"],"第一点":["61.18"],"获得":["61.18"],"的基准值":["61.18"],"首先安装":["61.18"],"njleonzhang":["61.18"],"postcss":["61.18","96.6","101.3"],"这个包":["61.18"],"推荐一个echarts":["61.19"],"的案列网站":["61.19"],"手撕babel插件":["62.0"],"我们的目的是":["62.1"],"去除console":["62.1"],"ast是对源码的抽象":["62.2"],"statement":["62.4"],"expression":["62.5","214.2","214.3"],"member":["62.6"],"expression通常是用于访问对象成员的":["62.6"],"他有几种形式":["62.6"],"identifer":["62.7"],"表示字符串字面量":["62.8"],"每种":["62.9"],"ast":["62.9","64.8","64.9","64.10","64.24","179.30","210.2","212.1","214.0","214.2","226.1","228.1","230.1","233.0","239.0","239.3","239.4","239.5","240.0","240.1","241.1"],"都有自己的属性":["62.9"],"babel插件是作用在第二阶段即transform阶段":["62.10"],"transform阶段有":["62.10"],"path":["62.11","62.12","64.14","64.19","64.25","81.2","89.5","95.40","96.2","140.5","141.8","154.4","154.16","175.10"],"是记录遍历路径的":["62.11"],"我们将所有的console":["62.12"],"log去掉":["62.12"],"一般去除console":["62.13"],"log都是在生产环境执行":["62.13"],"我们上面去除了所有的console":["62.14"],"不管是error":["62.14"],"warning":["62.14"],"table都会清除":["62.14"],"所以我们加一个exclude":["62.14"],"某些时候":["62.15"],"我们希望一些console":["62.15"],"不被删除":["62.15"],"我们可以给他添加一些注释":["62.15"],"no":["62.15","97.35","206.14","286.33"],"remove":["62.15"],"测试1":["62.15"],"测试2":["62.15"],"reserse":["62.15"],"hhhhh":["62.15"],"测试3":["62.15"],"如上":["62.15"],"我们希望带有no":["62.15"],"我们大致完成了插件":["62.16"],"我们引进项目里面进行测试":["62.16"],"我们可以判断后缀注释是否与当前的调用表达式处于同一行":["62.17"],"如果不是同一行":["62.17"],"则不将其归纳为后缀注释":["62.17"],"hastrailingcomments":["62.17"],"那么对于前缀注释":["62.18"],"我们应该怎么做呢":["62.18"],"因为我们在后缀注释的节点中添加了一个变量belongcurrentline":["62.18"],"表示该注释是否是和节点属于同一行":["62.18"],"我现已将代码发布到线上":["62.19"],"yarn":["62.20","64.13","81.1","88.2","94.7","113.6","191.2","191.3"],"举个例子":["62.21"],"到底是什么":["63.0","200.4"],"tree":["63.0","87.42","152.22","174.29","174.32","174.33","174.40","178.1","214.1","216.2"],"是源代码语法结构的一种抽象表示":["63.0"],"它以树状的形式表现编程语言的语法结构":["63.0"],"树上的每个节点都表示源代码中的一种结构":["63.0"],"广泛应用":["64.0"],"一个完整的编译器整体执行过程可以分为三个步骤":["64.2"],"parsing":["64.2"],"解析过程":["64.2"],"这个过程要经":["64.2"],"语法分析":["64.2","64.3"],"解析过程分为2个步骤":["64.3"],"是使用":["64.3"],"tokenizer":["64.3","64.7"],"分词器":["64.3","64.7"],"lexer":["64.3"],"词法分析器":["64.3"],"将源码拆分成":["64.3"],"tokens":["64.3","64.7","64.8"],"转化":["64.4"],"这个过程主要是":["64.4"],"改写ast":["64.4"],"或者根据当前ast":["64.4"],"生成一个新的ast":["64.4"],"这个过程可以是相同语言":["64.4"],"或者可以直接将ast":["64.4"],"翻译为其他语言":["64.4"],"注意看上述生成的ast":["64.4"],"有一些特殊的对象":["64.4"],"都具有自己的类型描述":["64.4"],"他们就是这个":["64.4"],"上的节点":["64.4"],"如下所示":["64.4","96.2"],"generation":["64.5"],"接下来按照上述步骤":["64.6"],"将代码解析为":["64.7"],"这个过程需要":["64.7"],"tokenzier":["64.7"],"整体思路就是通过遍历字符串的方式":["64.7"],"对每个字符按照一定的规则进行":["64.7"],"switch":["64.7","64.11","206.2","215.2","286.13"],"case":["64.7","64.11","206.2","215.2","286.13"],"最终生成":["64.7","99.14"],"input":["64.7","122.21","195.9"],"current":["64.7","64.8","153.11","206.12","206.14"],"记录当前访问的位置":["64.7"],"第二步":["64.8","64.16","64.21","64.22"],"将生成好的":["64.8"],"转化为":["64.8"],"现在需要定义":["64.8"],"parser":["64.8","100.3"],"接收上一步处理好的":["64.8"],"访问tokens的下标":["64.8"],"walk函数辅助我们遍历整个tokens":["64.8"],"walk":["64.8"],"token":["64.8","97.61","166.1","166.2","166.6","166.9","204.3"],"现在已经有ast了":["64.9"],"然后我们希望能够通过访问器访问不同的节点":["64.9"],"当遇到不同的节点的时候":["64.9"],"调用访问器的不同函数":["64.9"],"大致设计成这样":["64.9"],"traverse":["64.9","64.25"],"visitor":["64.9","64.14"],"迭代器":["64.9"],"访问器":["64.9"],"program":["64.9","64.11"],"enter":["64.9"],"现在已经生成好ast了":["64.10"],"在这一步需要使用到转换器":["64.10"],"帮助我们将刚才生成的ast转化为新的ast":["64.10"],"在转化之前":["64.10"],"必须要明确转化后的ast长什么样":["64.10"],"记得之前的案例":["64.10"],"lisp":["64.10"],"代码":["64.10","127.28","156.18","279.8"],"add":["64.10","64.13","88.2","95.7","100.1","113.6","127.35","191.2","191.3"],"subtract":["64.10"],"将原来的ast转化为目标ast":["64.10"],"数据结构如下":["64.10"],"original":["64.10"],"最后一步":["64.11"],"到这一步就是":["64.11"],"用新的ast":["64.11"],"遍历其每一个节点":["64.11"],"根据指定规则生成最终新的代码":["64.11"],"codegenerator":["64.11"],"我们以节点的种类拆解":["64.11"],"语法树":["64.11"],"type":["64.11","64.14","89.13","95.13","95.28","95.45","95.46","97.47","98.7","99.10","106.18","106.19","112.1","112.4","121.8","122.21","156.17","156.23","159.13","166.8","173.29","175.4","184.15","184.33","195.8","195.9","206.3","214.2","215.2","218.4","218.5","219.3","219.6","220.2","232.2","241.6","241.9","286.13","295.1"],"如果是progame":["64.11"],"那么就是ast的最根部了":["64.11"],"他的body中的每一项就是一个分支":["64.11"],"我们需要将每一个分支都放入代码生成器中":["64.11"],"join":["64.11","64.23"],"使用babel修改函数名":["64.12"],"上面铺垫了这么多":["64.12"],"现在开始进入实战演习":["64.12"],"要求":["64.12","87.13"],"借助":["64.12","195.4","214.1"],"babel":["64.12","64.13","64.14","64.17","154.5","154.8","154.18","179.29","214.2"],"给函数重命名":["64.12"],"源代码":["64.12","64.16","64.18","64.21","64.22","64.23"],"hello":["64.12","64.15","129.6","140.3","154.12","154.13","157.2"],"需要修改为":["64.12"],"world":["64.12","64.15"],"根据前面学过的知识点":["64.12"],"我们先来整理下思路":["64.12"],"手写简易版babel":["64.13"],"plugin":["64.13","64.14","95.23","96.5","96.14","154.1","154.10","154.16","177.8","191.3","193.10"],"es2015":["64.13","64.14","154.20","186.3"],"arrow":["64.13","64.14","127.5"],"functions":["64.13","64.14","148.5"],"接下来尝试稍微难度大一点的":["64.13"],"手写箭头函数转换插件":["64.13"],"将箭头函数转换为普通函数":["64.13"],"先看看使用原插件的情况":["64.13"],"手写复杂版babel":["64.14"],"在上面中":["64.14"],"我们虽然实现了基本的转换":["64.14"],"但还有一些场景并没有考虑进来":["64.14"],"比如箭头函数使用简写的语法":["64.14"],"该如何处理":["64.14"],"比如箭头函数中的this":["64.14"],"本节就来详细的分析分析":["64.14"],"剩下的希望大家能够举一反三":["64.14"],"先看看箭头函数使用简写的语法":["64.14"],"sourcecode":["64.14","64.22"],"sum":["64.14","64.16","154.12","154.14"],"如果还是使用上面写的插件进行转换":["64.14"],"结果肯定是不对的":["64.14"],"转换后的代码缺少一对大括号":["64.14"],"还缺少":["64.14"],"解决思路":["64.14"],"先判断要转换的函数体是不是一个块语句":["64.14"],"如果是就不处理":["64.14"],"不是就生成一个块语句":["64.14"],"将我们的代码添加到这个块里面去":["64.14"],"在添加的过程中还需要在原代码中添加return关键字":["64.14"],"在这过程中需要用到两个api":["64.14"],"blockstatement":["64.14"],"returnstatement":["64.14"],"可以用它们来生成节点或判断节点":["64.14"],"types":["64.14","184.10"],"require":["64.14","64.19","95.40","97.22","140.5","141.8","154.4","154.16","159.2","159.5","159.9","159.13","191.1","195.7"],"用来生成或者判断节点的ast语法树的节点":["64.14"],"arrowfunctionplugin":["64.14"],"如果是箭头函数":["64.14"],"那么就会进来此函数":["64.14"],"参数是箭头函数的节点路径对象":["64.14"],"arrowfunctionexpression":["64.14"],"functionexpression":["64.14"],"如果函数体不是块语句":["64.14"],"isblockstatement":["64.14"],"手写一个":["64.15"],"在开发阶段":["64.15"],"我们通常会打印一些":["64.15"],"进行调试":["64.15"],"但随着项目的日常迭代":["64.15"],"也越来越多":["64.15"],"有时候控制台打印了一大堆":["64.15"],"不能第一时间定位到想要的日志":["64.15"],"这个时候希望可以通过一个插件强化console":["64.15"],"让其也打印出当前文件名":["64.15"],"以及打印地方的行和列等代码信息":["64.15"],"经过分析":["64.15"],"其实就是往":["64.15"],"中添加几个参数":["64.15"],"比如源代码":["64.15"],"变成":["64.15"],"这样是不是会清晰很多":["64.15"],"当前文件名":["64.15"],"具体代码位置信息":["64.15"],"到了现在":["64.15"],"相信大家已经开始去对比前后ast树了":["64.15"],"经过我们火眼金睛的对比":["64.15"],"找出只是":["64.15"],"略有不同":["64.15"],"手写监控系统中的日志上传插件":["64.16"],"在监控系统的日志上传过程中":["64.16"],"我们需要":["64.16"],"往每个函数的作用域中添加一行日志执行函数":["64.16"],"也就是这样":["64.16"],"但这里要注意的是":["64.16"],"函数的定义方式总共有四种":["64.16"],"都需要考虑进来":["64.16"],"四种声明函数的方式":["64.16"],"multiply":["64.16"],"minus":["64.16"],"class":["64.16","99.11","107.2","108.2","112.2","113.5","113.6","127.4","127.55","132.1","162.3","170.15","173.1","173.4","173.7","173.85","176.18","177.8","178.4","181.0","184.11","190.2","190.4","195.4","195.8","218.5","222.6","241.9","282.2","283.3","283.7","283.11","286.33","286.69"],"calculator":["64.16"],"divide":["64.16"],"期望转换后的代码":["64.16"],"import":["64.16","95.23","95.25","95.28","95.45","95.46","96.2","96.3","96.5","97.10","97.11","97.13","100.2","100.6","101.5","102.2","109.1","111.3","111.4","112.3","153.5","153.6","153.7","153.8","153.11","153.12","154.12","154.14","154.17","156.3","156.7","156.10","156.11","156.13","156.14","156.15","156.17","156.18","156.23","156.24","166.5","166.6","166.8","166.9","179.7","195.7","195.9","205.4"],"loggerlib":["64.16"],"logger":["64.16"],"整体思路":["64.16"],"先判断源代码中是否引入了":["64.16"],"库":["64.16","100.2","100.3"],"如果引入了":["64.16"],"就找出导入的变量名":["64.16"],"实现简易版":["64.17"],"eslint":["64.17","68.13","69.2","84.1","86.7","86.8","97.20","97.22","97.23","97.32","154.5","154.8","154.16"],"相信大家在工作中都肯定使用过":["64.17"],"今天我们就来扒一扒它的工作原理":["64.17"],"本节会带着大家手写一个简易版的":["64.17"],"整体不难":["64.17"],"更多的是抛砖引玉":["64.17"],"帮助大家更好的理解":["64.17"],"eslint的工作原理":["64.17"],"在手写前先补充一个前置小知识":["64.17"],"其实":["64.17","170.12","177.7","178.6"],"里面的ast遍历也是有生命周期的":["64.17"],"有两个钩子":["64.17"],"在遍历开始之前或遍历结束之后":["64.17"],"它们可以用于设置或清理":["64.17"],"分析工作":["64.17"],"export":["64.17","89.5","95.42","95.46","99.7","101.5","109.1","173.7","195.8","195.9","206.1","206.2","206.3","206.4","206.5","206.8","206.11","206.15","214.0","214.1","214.2","215.2","217.7","219.3","219.10","220.2","221.1","226.1","235.4","250.1","252.5","286.19"],"default":["64.17","89.5","99.7","101.5","114.11","186.3","204.2","216.3"],"实现代码压缩":["64.18"],"代码压缩一般是在项目打包上线阶段做的":["64.18"],"平时大家可能更多的是直接使用插件":["64.18"],"今天也来趴一趴它的工作原理":["64.18"],"压缩其实也很简单":["64.18"],"就是把变量从有意义变成无意义":["64.18"],"保证尽可能的短":["64.18"],"例如变成":["64.18"],"b等":["64.18"],"当然其实远远不止这些":["64.18"],"还有将空格缩进取消等等":["64.18"],"本节同样也只是抛砖引玉":["64.18"],"getage":["64.18"],"zhufeng":["64.18"],"实现按需加载插件":["64.19"],"相信大家在工作中肯定都用过":["64.19"],"lodash":["64.19","281.1"],"这个工具库":["64.19"],"它是一个一致性":["64.19"],"模块化":["64.19","173.95","179.26"],"高性能的":["64.19","177.13"],"实用工具库":["64.19"],"但是在使用它的时候有一个痛点":["64.19"],"那就是它不支持按需加载":["64.19"],"只要我们引用了这个工具库中的某个方法":["64.19"],"就相当于引用整个工具库":["64.19"],"这无疑是不能接受的":["64.19"],"今天我们通过一个手写的babel插件来解决这个痛点问题":["64.19"],"在webpack中使用babel插件":["64.19"],"配置":["64.19","86.7","89.13","97.8","138.28","138.29","154.15","204.3","260.3"],"module":["64.19","95.16","95.28","95.33","97.22","97.35","97.39","102.1","127.9","173.87","177.6","186.3"],"exports":["64.19","95.16","95.28","95.33","97.22","97.35"],"mode":["64.19","206.1","227.1","241.1","241.10"],"development":["64.19","98.1"],"entry":["64.19","192.1","192.2","192.3","193.4"],"src":["64.19","89.5","97.4","97.7","97.13","97.17","109.1","122.6","123.1","154.11","169.4","172.0","192.1","192.2","192.3","206.0","206.1","206.11"],"output":["64.19","74.3","193.4"],"resolve":["64.19","132.3","132.4","158.3","164.3","173.38","173.61","236.1"],"dist":["64.19","97.30","113.6","114.12","154.3"],"filename":["64.19","195.8"],"实现":["64.20","115.0","147.5","168.23","169.4","173.99","214.1","221.3"],"typescript":["64.20","70.0","102.5","115.0","184.1","184.2","184.17","184.18","184.27","184.30","185.0","185.1","185.5","185.7"],"的类型校验":["64.20"],"此节难度较高":["64.20"],"校验思路":["64.21","64.22"],"获取拿到声明的类型":["64.21"],"获取真实值的类型":["64.21"],"的类型":["64.21","179.25"],"第三步":["64.21","64.22"],"比较声明的类型和值的类型是否相同":["64.21"],"先获取左侧变量的定义":["64.22"],"在获取左侧变量定义的类型":["64.22"],"获取右侧的值的类型":["64.22"],"由于整体较复杂":["64.23"],"我们此小节不写代码":["64.23"],"整体理解思路即可":["64.23"],"重在理解":["64.23"],"尽量避免遍历抽象语法树":["64.24"],"遍历":["64.24","179.56","210.2","231.4","256.5"],"的代价很昂贵":["64.24"],"并且很容易做出非必要的遍历":["64.24"],"可能是数以千计甚或上万次的多余操作":["64.24"],"优化嵌套的访问者对象":["64.25"],"当你嵌套访问者时":["64.25"],"直接把它们嵌套式的写进代码里看起来很合理":["64.25"],"myvisitor":["64.25"],"functiondeclaration":["64.25"],"留意嵌套结构":["64.26"],"有时候在考虑一些转换时":["64.26"],"你可能会忘记某些结构是可以嵌套的":["64.26"],"举例来说":["64.26"],"ci":["65.0","65.1","65.12","65.21","65.35","65.36","67.0","67.1","67.10","68.10","68.13","69.10","87.20","97.60"],"gitlab":["65.1","65.12","65.23","65.33","65.35","65.36","67.8","68.6","68.8","68.10","68.13"],"是什么":["65.1","99.14","113.1","120.0","171.0","185.1","196.1","198.1","202.1","203.1"],"如何使用":["65.2"],"ci的使用主要需要2大步骤":["65.3"],"配置runner":["65.4"],"我们可以简单的把gitlab":["65.4"],"runner":["65.6","65.10","67.7","67.8","68.6","68.8","255.0"],"部署gitlab":["65.8"],"安装docker":["65.9"],"启动gitlab":["65.10"],"container":["65.10","106.19","114.30","190.2","190.4","195.8","218.8","222.3","222.7","236.4","286.33"],"起一个docker":["65.10"],"container来执行gitlab":["65.10"],"注册runner到gitlab":["65.11"],"只用docker起一个gitlab":["65.11"],"runner不能将我们当前使用的gitlab":["65.11"],"repository和上一步创建的runner进行关联":["65.11"],"在此需要将其进行相互关联":["65.11"],"将runner注册到我们的gitlab":["65.11"],"repository":["65.11"],"使用上图得到的url和token去替换下面指令的":["65.11"],"创建":["65.12","179.56","208.13","208.16","210.2","218.5","228.2"],"yml":["65.12","65.35","65.36","68.10","68.13","97.26"],"文件":["65.12","68.11","72.5","88.2","96.6","97.13","97.22","97.26","97.32","97.35","97.39","97.59","100.1","101.5","102.1","102.5","154.3","154.8","154.12","177.11","178.7","195.7","275.2","284.15"],"在mono":["65.12"],"如何编写":["65.13"],"student1":["65.16"],"小明":["65.16"],"流水线的流程":["65.17"],"单个流水线任务的形式可以参考如下示例":["65.18"],"具体字段释义可以暂时忽略":["65.18"],"会在之后详解":["65.18"],"yaml":["65.18","66.3","72.5","97.26"],"需要被运行的脚本":["65.19"],"在gitlab":["65.21"],"ci中":["65.21"],"变量大致可分为三类":["65.21"],"gitlab给我们预先定义的变量":["65.21"],"ci流水线运行环境的docker镜像":["65.22"],"ci允许我们进行自定义的流水线阶段配置":["65.23"],"我们可以将自己的流水线自我划分为若干":["65.23"],"然后在不同的stage来做不同的事":["65.23"],"稍后会有示例":["65.23"],"stage为stages的一个子项":["65.24"],"缓存多个流水线任务之间共用的文件":["65.25"],"一个job可以被重新执行的最大数量":["65.26"],"必须是个正整数":["65.26"],"except":["65.27"],"设置流水线任务执行时机":["65.27"],"设置流水线任务不执行时机":["65.27"],"此字段可以在单个流水线job或者workflow字段下进行配置":["65.28"],"需要和":["65.29"],"rules":["65.29","65.32","65.36","95.16","97.35"],"配合用来控制整个pipeline的行为":["65.29"],"比如整个流水线执行与否":["65.29"],"这个关键字和stage需要配合使用":["65.30"],"如果一个stage":["65.30"],"fail掉了":["65.30"],"那么我们应该期待下个stage怎么办呢":["65.30"],"这个是设定gitlab":["65.31"],"配置时有些关键字比如":["65.32"],"workflow":["65.32","65.36","97.61"],"随着流水线任务的变多":["65.33"],"把所有的任务都写在":["65.33"],"demo配置":["65.34"],"基础用法":["65.35"],"镜像为node的环境镜像":["65.35"],"如果用的是别的环境可以更改为别的项目环境的镜像":["65.35"],"latest":["65.35","65.36","81.1","96.6","97.2"],"自定义stages":["65.35"],"stages":["65.35","66.3","68.13"],"first":["65.35","152.6","173.38"],"stage":["65.35"],"second":["65.35","152.17"],"third":["65.35","154.20"],"详细示例":["65.36"],"在运行所有任务之前执行如下脚本":["65.36"],"before":["65.36","106.12","170.15"],"echo":["65.36","97.56"],"在所有jobs之前进行执行":["65.36"],"variables":["65.36","97.17"],"is":["65.36","97.2","106.11","107.2","107.4","110.2","111.2","137.0","173.80","205.5","206.1","206.12","206.14","214.2","216.2"],"experiencing":["65.36"],"merging":["65.36"],"mybranch":["65.36"],"source":["65.36","172.0","204.3","217.0","217.7","241.1","241.4","241.10","258.3","258.5"],"merge":["65.36","184.32","214.3"],"request":["65.36","97.13","107.4","109.1","109.7","115.0","175.2","175.9","204.2","204.3"],"event":["65.36","97.50","100.8","111.3","111.4","156.15","159.2","159.5","159.9","159.13","173.52","179.36","179.50","179.54","195.9","222.6"],"commit":["65.36","88.2","206.9"],"ref":["65.36","101.5","153.11","190.2","190.6","250.2"],"轻量级":["66.1","177.13"],"持续集成":["66.2"],"连续交付":["66.3"],"通常可以自动将更改自动推送到":["66.3"],"发布系统":["66.3"],"随时软件发布到生产环境":["66.3"],"持续部署":["66.3"],"会更进一步":["66.3"],"并自动将更改推送到生产中":["66.3"],"会在开始的":["66.3"],"在此处定义阶段":["66.3"],"第一阶段":["66.4"],"编译阶段":["66.4"],"一般都会先build":["66.4"],"docker的前端自动化构建部署":["67.0"],"持续集成指在和向远程仓库":["67.1"],"cd":["67.2","71.16","73.0","76.3","113.6"],"持续部署在持续集成的基础上更进一步":["67.2"],"指将推送指仓库默认分支的部署至产品环境":["67.2"],"如果这部分需要手动触发":["67.2"],"这就是一个持续交付":["67.2"],"continuous":["67.2","72.0","97.60"],"首先用docker":["67.3"],"nginx部署项目":["67.3"],"docker下配置nginx部署vue项目步骤":["67.3"],"docker":["67.3","67.7","67.8","68.0","68.1","68.3","68.6","68.8","113.1","113.3","113.5","113.6","113.7","113.8","114.2","114.3","114.4","114.5","114.11","114.12","114.13","114.14","114.18","114.19","114.21","114.23","114.29","114.30"],"pull":["67.3"],"下载nginx":["67.3"],"data":["67.3","96.13","98.7","137.0","153.12","173.29","174.40","178.5","179.54","181.0","218.4","219.3","219.10","232.2","241.1","241.10","285.5","286.30"],"这里的":["67.3"],"nginx就是服务器上前端静态资源的文件夹":["67.3"],"路径下创建html":["67.3"],"conf":["67.3","68.11","114.11"],"d三个文件夹":["67.3"],"html下放npm":["67.3"],"build打包后的静态文件":["67.3"],"conf下放nginx":["67.3"],"d下放default":["67.3"],"conf和default":["67.3"],"conf需要自己配置":["67.3"],"下面是nginx":["67.3"],"模板文件":["67.3"],"可以自己根据需要修改":["67.3"],"2接下来在服务器上操作":["67.6"],"配置免密登录":["67.6"],"生产密钥对":["67.6"],"ssh":["67.6"],"3服务器上用docker安装gitlab":["67.7"],"用docker安装gitlab":["67.7"],"4服务器上用docker注册gitlab":["67.8"],"docker注册runner":["67.8"],"rm":["67.8","68.8","74.3","74.6","76.3","114.29","119.4","137.2"],"srv":["67.8"],"etc":["67.8","275.2"],"1gitlab":["67.10"],"yml文件":["67.10"],"做缓存的":["67.10"],"project":["67.10"],"paths":["67.10"],"modules":["67.10","97.4","102.1","144.2","154.20"],"测试":["67.10"],"test":["67.10","69.10","112.2","126.8","127.20","127.41","129.2","154.4","231.7","241.1","241.8","241.10","254.19","286.13"],"e2e":["67.10"],"cypress":["67.10"],"browsers":["67.10"],"2变量说明":["67.11"],"cd流程":["67.14"],"build":["67.16","68.13","69.10","73.0","113.4","113.6","114.13","115.0"],"deploy":["67.17"],"linux":["68.1","72.5","74.0","177.13"],"服务器使用":["68.1"],"curl":["68.1","275.2"],"下载快速安装的":["68.1"],"基于":["68.2","68.5","100.8","114.29","115.0","177.13"],"一键安装命令":["68.3"],"detach":["68.3"],"hostname":["68.3","141.6"],"localhost":["68.3","104.0","113.6","115.0","136.8"],"publish":["68.3"],"安装完成后通过域名或服务器ip访问":["68.4"],"一键安装运行":["68.6"],"查看gitlab":["68.7"],"runner配置信息":["68.7"],"注册gitlab":["68.8"],"运行注册命令":["68.8"],"home":["68.8","96.2","195.8"],"提供前端编译":["68.10"],"构建功能":["68.10"],"在项目根目录下创建一个":["68.10"],"的文件":["68.10"],"写入如下":["68.10"],"nginx配置文件编写":["68.11"],"在项目根目录创建":["68.11","97.22","97.26","97.35","97.59"],"把这个文件复制到容器内作为nginx配置文件":["68.11"],"写入以下内容":["68.11"],"server":["68.11","138.22","138.29","138.31","139.1","154.3","159.12","175.10","178.7"],"端口":["68.11","138.26","284.61","284.62"],"dockerfile文件编写":["68.12"],"在项目根目录下创建":["68.12"],"使用docker自动部署前端项目":["68.13"],"首先是":["68.13"],"文件编写":["68.13"],"slim":["68.13"],"分段":["68.13"],"install":["68.13","81.2","87.18","96.6","96.14","180.2","275.2"],"prettier":["69.0","69.3","97.26","97.27","97.30","97.35"],"项目集成":["69.2","69.3"],"husky":["69.8","69.9","97.29","97.41"],"操作":["69.8","89.8","178.4"],"安装代码校验依赖":["69.9"],"lint":["69.9","83.5","97.42","97.44"],"staged":["69.9","87.43","97.42"],"在package":["69.9","95.20"],"json中添加脚本":["69.9"],"描述":["69.10","113.6","122.21"],"编译相关的修改":["69.10"],"例如发布版本":["69.10"],"对项目构建或者依赖的改动":["69.10"],"chore":["69.10"],"其他修改":["69.10"],"比如改变构建流程":["69.10"],"或者增加依赖库":["69.10"],"工具等":["69.10"],"持续集成修改":["69.10"],"文档修改":["69.10"],"feat":["69.10","97.50"],"新特性":["69.10"],"新功能":["69.10"],"fix":["69.10","84.1"],"修改bug":["69.10"],"perf":["69.10"],"优化相关":["69.10"],"比如提升性能":["69.10"],"体验":["69.10"],"refactor":["69.10"],"代码重构":["69.10"],"revert":["69.10"],"回滚到上一个版本":["69.10"],"style":["69.10","97.17","137.0","153.5","162.3","181.0","218.5","222.6","241.9","286.33"],"代码格式修改":["69.10"],"注意不是":["69.10"],"测试用例修改":["69.10"],"jest":["69.12","69.13","97.22"],"前往":["69.13"],"pages部署报错":["70.0"],"heap":["70.0"],"memory":["70.0","99.16","152.8"],"20220309180119580":["70.0"],"经过百度":["70.0"],"发现原因是node使用的堆内存超出了v8引擎允许的最大值":["70.0"],"分析和解决过程":["70.0"],"经过搜索常常得出了两种解决方案":["70.0"],"increase":["70.0"],"limit":["70.0","138.40"],"时的常见问题":["70.0"],"项目过大时":["70.0"],"submodules":["71.0","71.3"],"因为暴露的是源代码":["71.1"],"团队":["71.2"],"解决公共代码问题":["71.3"],"如果某些文件":["71.3"],"在项目a和项目b中都会用到":["71.3"],"例如组件库":["71.3"],"git":["71.4","71.19","87.43","94.4","95.20","97.53","116.2","117.2","118.2","118.3","118.4","118.5","119.1","119.2","119.4","119.9","119.10","119.11","271.0"],"submodule":["71.5","71.11","71.16","71.19","71.21","71.23","71.25"],"创建git仓库a":["71.5"],"执行操作后":["71.6"],"会在当前父项目下新建个文件夹":["71.6"],"名字就是":["71.6"],"的父子关系存在哪里":["71.7"],"关系是保存在主项目的":["71.7"],"的父子关系信息怎么存":["71.8"],"的版本号":["71.9"],"开发常用操作":["71.10"],"像普通仓库一样更新":["71.12"],"在主项目中更新":["71.13"],"例如主项目在文件夹a":["71.13"],"当你在文件夹b中做commit后":["71.14"],"文件夹b里面就有了新的":["71.14"],"拉取":["71.15"],"后":["71.16","73.0","195.7"],"主项目执行git":["71.17"],"更新后需提交主项目变更":["71.18"],"主项目执行":["71.19"],"clone":["71.20","236.6"],"按需clone":["71.21"],"3步骤":["71.22","71.24"],"第2":["71.22"],"一次性clone所有":["71.23"],"关系":["71.25"],"是一个持续集成":["72.0"],"integration":["72.0"],"和持续交付":["72.0"],"工作流":["72.1"],"工作流是一个可配置的自动化的程序":["72.1"],"创建一个工作流":["72.1","72.5"],"events":["72.2","159.2","159.5","159.9","159.13","169.4","195.9","283.7"],"事件是指仓库触发运行工作流的具体的行为":["72.2"],"jobs":["72.3"],"任务是在同一个运行器上执行的一组步骤":["72.3"],"steps":["72.3"],"actions":["72.4","72.5","97.61"],"动作是":["72.4"],"runners":["72.5"],"一个运行器是一个可以运行工作流的服务":["72.5"],"每一个运行器一次只运行一个单独的任务":["72.5"],"提供":["72.5"],"ubuntu":["72.5"],"microsoft":["72.5","175.10"],"windows":["72.5","98.4"],"macos":["72.5","98.4"],"每一个工作流都运行在一个独立新建的虚拟机中":["72.5"],"如果你需要一个不同的操作系统":["72.5"],"你可以自定义运行器":["72.5"],"请查看":["72.5"],"自定义运行器":["72.5"],"语法定义工作流":["72.5"],"每一个工作流保存为一个独立的":["72.5"],"目录是":["72.5"],"workflows":["72.5"],"现在我们在代码仓库创建一个示例工作流":["72.5"],"当代码被推送的时候":["72.5"],"会自动执行一系列的命令":["72.5"],"在这个示例工作流中":["72.5"],"会检出提交的代码":["72.5"],"安装依赖":["72.5","101.3"],"运行":["72.5","113.4","144.6"],"bats":["72.5"],"在你的仓库":["72.5"],"创建一个":["72.5","81.1","162.3","169.3","208.5","218.4","286.69"],"目录":["72.5"],"gitee":["73.0"],"导入仓库":["73.0"],"上篇我们已经在":["73.0"],"创建了博客仓库":["73.0"],"现在我们在":["73.0"],"绑定":["73.0"],"账号后":["73.0"],"选择仓库导入":["73.0"],"仓库建立后":["73.0"],"问题也来了":["73.0"],"即我们一份本地仓库":["73.0"],"如何保证":["73.0"],"仓库代码的同步呢":["73.0"],"手动同步":["73.0"],"的项目主页":["73.0"],"提供了同步的按钮":["73.0"],"你只用点一下":["73.0"],"即可与":["73.0"],"同步更新":["73.0"],"但是注意这里的同步功能默认是强制同步":["73.0"],"有点麻烦的是":["73.0"],"我们需要在推送到":["73.0"],"再到":["73.0"],"项目主页手动点击一下":["73.0"],"推送两个仓库":["73.0"],"除此之外":["73.0"],"我们也可以在":["73.0"],"sh":["73.0","275.2"],"脚本文件里":["73.0"],"直接推送到两个仓库地址上":["73.0"],"我们修改一下上篇的脚本":["73.0"],"usr":["73.0","88.2","114.12"],"bin":["73.0","88.2"],"env":["73.0","74.7","88.2","97.22","113.6","154.18","166.6"],"确保脚本抛出遇到的错误":["73.0"],"生成静态文件":["73.0"],"进入生成的文件夹":["73.0"],"跨平台兼容":["74.0"],"到目前为止":["74.0"],"mac":["74.0","113.5"],"平台做开发":["74.0"],"中涉及到的文件系统操作包括文件和目录的创建":["74.1"],"删除":["74.1","208.7"],"步":["74.2","74.3","74.5","74.6","74.8","74.9"],"添加开发依赖":["74.2"],"改造涉及文件系统操作的":["74.3"],"json":["74.3","74.6","80.4","84.3","86.1","86.2","87.0","87.4","87.14","87.17","88.2","94.6","95.49","97.26","97.44","102.3","125.6","154.3","154.11","184.28","186.1","186.3","195.6","195.7","290.1"],"scripts":["74.3","74.6","86.1","86.3","87.21","95.20"],"cover":["74.3","74.6"],"cleanup":["74.3","74.6"],"rf":["74.3","74.6"],"coverage":["74.3"],"nyc":["74.3"],"archive":["74.3"],"cross":["74.3","74.4","74.7"],"改写引用变量":["74.6"],"具体":["74.6"],"diff":["74.6","178.1","179.56","214.1","222.3","286.38"],"设置环境变量":["74.7"],"添加":["74.8","83.4","86.8"],"的跨平台兼容":["74.10"],"还有几点需要大家注意":["74.10"],"内置支持的多条命令并行跟":["75.3"],"shelljs":["76.1","76.3"],"用":["76.3","86.7","174.8","205.4"],"实现同等功能":["76.3"],"为我们提供了各种常见命令的跨平台支持":["76.3"],"cp":["76.3"],"mkdir":["76.3","94.3"],"等命令":["76.3"],"此外":["76.3"],"理论上你可以在":["76.3"],"completion":["77.1"],"人类对于效率的追求是永无止境的":["77.2"],"工程师更是如此":["77.2"],"命令补全到目前为止显然还不够高效":["77.2"],"ci和npm":["78.0"],"install区别":["78.0"],"npm大家肯定都使用过":["78.0"],"可能会有一些不经常使用的命令":["78.0"],"install都可以用来安装依赖":["78.0"],"他们之间有什么区别呢":["78.0"],"官方文档":["78.0","97.18"],"当我们进行ci":["78.1"],"的钩子":["79.0"],"为了方便开发者自定义":["79.0"],"执行安装命令之后":["80.1"],"获取完配置文件之后":["80.2"],"就会构建依赖树":["80.2"],"首先会检查下项目中是否有":["80.2"],"在有了依赖树之后":["80.3"],"就可以根据依赖树下载完整的依赖资源":["80.3"],"在下载之前":["80.3"],"会生成":["80.4"],"lock":["80.4"],"plubilsh":["81.0"],"发包":["81.0"],"准备项目工程并编写组件":["81.1"],"创建一个基础模板":["81.1"],"这里我通过":["81.1"],"react":["81.1","95.23","96.1","98.13","153.6","153.7","153.11","153.12","156.1","156.2","156.3","156.7","156.11","156.13","156.14","156.15","156.17","156.18","156.23","156.24","157.2","176.1","178.1","178.2","178.3","178.4","178.5","178.6","178.7","178.8","205.1","205.2","205.3","205.4","205.6","205.12","205.14","206.0","206.1","206.6","206.8","206.15","206.17","207.3","207.5","207.6","207.9","207.11","208.2","208.7","209.3","209.8","209.12","209.13","286.38"],"模板":["81.1"],"版本要求":["81.1"],"create":["81.1","97.2","97.13","107.4","113.6","148.5","209.4"],"or":["81.1","186.3"],"配置vite":["81.2"],"ts":["81.2","101.5","102.0","102.5","103.3","103.4","103.7","103.8","103.9","103.10","103.11","103.12","103.13","103.14","103.15","169.4","183.2","184.18","184.33","214.0","214.1","214.2","214.3","215.2","216.2","216.3","217.0","217.7","218.4","218.8","219.3","219.6","219.10","220.2","221.1","221.4","222.3","222.6","222.7","228.1","228.2","228.3","229.0","230.1","231.1","231.2","231.3","231.7","232.2","235.4","236.4","236.6","236.7","239.3","241.1","241.6","241.8","241.10","250.1","251.2","252.5","256.4"],"下载":["81.2","100.4"],"配置npm":["81.3"],"终端执行命令":["81.3"],"init":["81.3","86.1","173.1","179.54"],"根据命令行提示输入对应信息":["81.3"],"包名":["81.3"],"发到":["81.3"],"上的名称":["81.3"],"version":["81.3","88.0","88.2","145.5","284.21"],"版本号":["81.3"],"description":["81.3","127.48"],"项目描述":["81.3"],"发布":["81.4"],"没有":["81.4"],"账号的可以先去npm官网注册一个或者通过":["81.4"],"在另一个项目中":["81.5"],"填坑":["81.6"],"虽然包发布成功了":["81.6"],"但是前面说过还有一些坑需要填":["81.6"],"这些坑刚刚也看见了":["81.6"],"都是在使用的时候出现的":["81.6"],"样式问题":["81.6"],"将包下载到另一个项目使用会发现组件结构是存在的就是没有样式":["81.6"],"这是因为":["81.6","198.2"],"打包的时候虽然将样式打包到输出目录了":["81.6"],"但是在":["81.6"],"文件中没有引用":["81.6"],"中使用变量":["82.0"],"为加高效的执行":["82.0"],"首先我们来看预定义变量":["82.1"],"通过运行":["82.1"],"幸运的是":["83.1"],"mocha":["83.1"],"本身支持":["83.1"],"我们使用的代码检查工具":["83.2"],"安装项目依赖":["83.3"],"watch":["83.5","181.0","219.10","258.5","258.11","259.2"],"里面的文件匹配模式可以使用通配符":["83.5"],"传递参数":["84.1"],"内置了代码风格自动修复模式":["84.1"],"只需给它传入":["84.1"],"参数即可":["84.1"],"中可以增加":["84.3"],"直接在":["84.4"],"声明中做手脚":["84.4"],"因为命令的本质是":["84.4"],"shell":["84.4"],"即不加任何日志控制参数得到的输出":["84.6"],"结合其他工具调用":["84.7"],"排查脚本问题的时候比较有用":["84.8"],"verdaccio":["85.1"],"登陆":["85.6"],"快速创建项目":["86.1"],"开始探索":["86.1"],"之前":["86.1","178.3","236.4","256.4"],"我们先聊聊这些":["86.1"],"所依赖的文件":["86.1"],"以它为基础的":["86.1"],"则是":["86.1"],"时的字段默认值是可以自己配置的":["86.2"],"我上面的默认版本号是":["86.2"],"执行任意命令":["86.3"],"是如何管理和执行各种":["86.3"],"的呢":["86.3"],"初始化":["86.7","95.20"],"packager":["87.0"],"主要是项目的基本信息":["87.1"],"项目的名称":["87.2"],"项目的版本号":["87.3"],"开源项目的版本号通常遵循":["87.3"],"semver":["87.3"],"语义化规范":["87.3"],"项目的仓库地址以及版本控制信息":["87.4"],"项目的描述":["87.5"],"会展示在":["87.5"],"一组项目的技术关键词":["87.6"],"ant":["87.6"],"项目主页的链接":["87.7"],"项目":["87.8","138.26"],"bug":["87.8","156.14","172.0"],"项目的开源许可证":["87.9"],"项目作者":["87.10"],"包括项目所包含的文件":["87.11"],"项目在进行":["87.12"],"发布时":["87.12"],"可以通过":["87.12","98.10","99.14","104.0"],"支持":["87.13","115.0","205.13","256.6","265.1"],"es":["87.13","87.16"],"模块后":["87.13"],"项目发布时":["87.14"],"默认会包括":["87.14"],"字段里指定的入口文件在":["87.15"],"同样":["87.16"],"项目也可以指定":["87.16"],"模块的入口文件":["87.16"],"这就是":["87.16"],"字段的作用":["87.16"],"支持在":["87.17"],"里定义":["87.17"],"字段":["87.17","162.0","195.7"],"拥有了条件导出的功能":["87.17"],"项目的工作区配置":["87.18"],"用于在本地的根目录下管理多个子项目":["87.18"],"可以自动地在":["87.18"],"时将":["87.18"],"指定项目的一些内置脚本命令":["87.20"],"这些命令可以通过":["87.20"],"来执行":["87.20"],"通常包含项目开发":["87.20"],"构建":["87.20"],"等":["87.20","97.26","98.4","154.18","178.8"],"命令":["87.20","88.2","113.6"],"用于设置":["87.21"],"项目可能会依赖其他包":["87.22"],"运行依赖":["87.23"],"也就是项目生产环境下需要用到的依赖":["87.23"],"开发依赖":["87.24"],"项目开发环境需要用到而运行时不需要的依赖":["87.24"],"用于辅助开发":["87.24"],"同伴依赖":["87.25"],"一种特殊的依赖":["87.25"],"不会被自动安装":["87.25"],"通常用于表示与另一个包的依赖与兼容性关系来警示使用者":["87.25"],"比如我们安装":["87.25"],"可选依赖":["87.26"],"表示依赖是可选的":["87.26"],"它不会阻塞主功能的使用":["87.26"],"同伴依赖也可以使用":["87.27"],"打包依赖":["87.28"],"它的值是一个数组":["87.28"],"在发布包时":["87.28"],"里面的依赖都会被一起打包":["87.28"],"主要是和项目发布相关的配置":["87.30"],"如果是私有项目":["87.31"],"和项目关联的系统配置":["87.33"],"一些项目由于兼容性问题会对":["87.34"],"指定项目只能在特定的":["87.36"],"一些第三方库或应用在进行某些内部处理时会依赖这些字段":["87.37"],"可以让":["87.39"],"上所有的文件都开启":["87.39"],"cdn":["87.39","262.0"],"服务":["87.39","113.6","114.29","178.7"],"与":["87.40","96.14","97.53","113.6","127.45","133.5","138.23","173.28","173.31","173.65","173.69","177.1","177.3","177.4","177.6","177.13","178.1","178.2","179.7","179.55","179.56","181.0"],"设置项目的浏览器兼容情况":["87.41"],"显示设置某些模块具有副作用":["87.42"],"用于":["87.42"],"shaking":["87.42","154.9","216.2"],"优化":["87.42","156.16"],"是用于对":["87.43"],"的暂存区的文件进行操作的工具":["87.43"],"每次提交代码自动修改":["88.1"],"项目根目录增加":["88.2"],"mjs":["88.2"],"下载依赖":["88.2"],"prompts":["88.2"],"zx":["88.2"],"自动升级版本号并打标签":["88.2"],"相当于修改package":["88.2"],"json里面version字段值":["88.2"],"然后git":["88.2"],"资源权限":["89.0","89.1","89.6"],"基本介绍":["89.1"],"前端权限控制":["89.4"],"前端控制权限也是分为两部分":["89.4"],"菜单页面":["89.4"],"路由权限":["89.5","89.6"],"代码地址":["89.5","89.6"],"demo地址":["89.5","89.6"],"这里是有两种做法":["89.5"],"控制路由的配置":["89.5"],"当然不是路由配置文件里去配置":["89.5"],"而是生效的路由配置里去做":["89.5"],"完全不做这里的路由控制":["89.5"],"而是在路由跳转到没有权限的页面":["89.5"],"写逻辑校验是否有当前的权限":["89.5"],"然后手动跳转到403页面":["89.5"],"这里还是先用第一种做法来做":["89.5"],"因为这里用第一种做了之后":["89.5"],"菜单可见权限自动适配好了":["89.5"],"会省去我们很多事情":["89.5"],"路由文件":["89.5"],"定义菜单页面权限":["89.5"],"并且将exception以及404的路由添加notinaut标志":["89.5"],"这个标志说明":["89.5"],"这两个路由不走权限校验":["89.5"],"同理的还有":["89.5"],"component":["89.5","96.2","127.55","176.18","178.4","217.0","217.7","218.4","219.6","232.2","252.3"],"layouts":["89.5"],"userlayout":["89.5"],"routes":["89.5","96.2"],"redirect":["89.5"],"login":["89.5","166.3","195.4","197.4"],"register":["89.5"],"result":["89.5"],"registerresult":["89.5"],"app":["89.5","98.13","100.1","152.29","154.11","154.12","177.1","195.7","196.14","205.1","205.2","235.1","235.4"],"basiclayout":["89.5"],"pages":["89.5","97.61","195.7"],"authorized":["89.5"],"authority":["89.5"],"admin":["89.5"],"dashboard":["89.5"],"list":["89.5","96.11","110.2","118.3","174.24","174.44","174.52","195.8"],"table":["89.5","107.1","107.3","113.5","113.6","179.39"],"forms":["89.5"],"form":["89.5","91.0","175.4"],"icon":["89.5"],"code":["89.5","89.13","97.40","113.6","162.1","162.2","177.9","227.1","260.0","286.55"],"菜单可见权限":["89.6"],"参照上面的方式":["89.6"],"这里的菜单可见权限不用做其他的操作":["89.6"],"按钮权限":["89.6"],"按钮权限上就涉及到两块":["89.6"],"数据权限":["89.6"],"数据获取的方式不同":["89.6"],"代码逻辑上会稍微有点不同":["89.6"],"核心是业务组件内部的code":["89.6"],"在加载的时候就自行累加":["89.6"],"然后在页面加载完成的时候":["89.6"],"发送请求":["89.6"],"拿到数据之后":["89.6"],"自行进行权限校验":["89.6"],"尽量减少业务页面代码的复杂度":["89.6"],"资源权限逻辑介绍":["89.6"],"pageheaderwrapper包含的业务页面存在按钮权限":["89.6"],"按钮权限通过authorizedbutton包含处理":["89.6"],"需要添加code":["89.6"],"但是业务页面因为是单独页面发送当前页面code集合去查询权限code":["89.6"],"然后在authorizedbutton进行权限逻辑判断":["89.6"],"所以authorizedbutton的componentwillmount生命周期进行当前业务页面的code累加":["89.6"],"累加完成之后":["89.6"],"通过pageheaderwrapper的componentdidmount生命周期函数发送权限请求":["89.6"],"拿到权限code":["89.6"],"通过公有globalauthority":["89.6"],"model读取数据进行权限逻辑判断":["89.6"],"对于业务页面的调用参考readme进行使用":["89.6"],"因为对于弹出框内部的code":["89.6"],"在业务列表页面渲染的时候":["89.6"],"组件还未加载":["89.6"],"所以通过extencode提前将code累加起来进行查询权限":["89.6"],"数据权限介绍":["89.6"],"涉及数据权限":["89.6"],"则直接将对应的数据规则放进authorizedbutton内部进行判断":["89.6"],"需要传入的数据则直接通过props传入即可":["89.6"],"因为数据权限的规则不同":["89.6"],"这里就没有举例子":["89.6"],"需要注意的逻辑是资源权限和数据权限是串行的":["89.6"],"先判断资源权限":["89.6"],"然后判断数据权限":["89.6"],"添加公用authority":["89.6"],"model":["89.6","106.17","253.0"],"数据权限是对于业务组件内部表格组件的数据进行的数据操作权限":["89.7"],"比如在商品列表中":["89.8"],"每条商品记录后面的":["89.8"],"acttype":["89.9","89.13"],"属性定义":["89.9"],"每个数据操作的按钮上加一个属性":["89.9"],"permissiontype":["89.10"],"对于有权限控制的业务数据":["89.10"],"现在列表上有三个按钮":["89.11"],"编辑":["89.11","89.13","97.57"],"收货":["89.11"],"完结":["89.11"],"判断":["89.12","179.25","218.5","231.4","232.2","248.1"],"接口mock返回数据":["89.13"],"创建活动":["89.13"],"订阅警报":["89.13"],"查询详情":["89.13"],"ul":["90.0"],"li":["90.0"],"ol":["90.0"],"dl":["90.0"],"dd":["90.0"],"dt":["90.0"],"h1":["90.0","106.9","106.14","286.55"],"h2":["90.0","286.55"],"mixins":["91.0","92.0"],"表单元素垂直居中对齐":["91.0"],"也可设置顶对齐":["91.0"],"底对齐":["91.0"],"align":["91.0","171.0"],"alignment":["91.0"],"middle":["91.0","175.22"],"display":["91.0","92.0","106.18","106.19","162.3","181.0"],"inline":["91.0","106.44","214.2","228.1","254.3"],"block":["91.0","106.18","106.44","212.1","214.1","232.3","232.4"],"vertical":["91.0","92.0"],"显示多行":["92.0"],"省略号":["92.0"],"mixin":["92.0","219.10","221.1"],"ellipsis":["92.0"],"row":["92.0"],"显示两行":["92.0"],"text":["92.0","122.0","122.21","159.13","181.0","200.4"],"overflow":["92.0","171.0","286.33"],"lastline":["92.0"],"hidden":["92.0","171.0","286.33"],"webkit":["92.0","170.8","170.12","170.15"],"box":["92.0","106.18","170.15","171.0"],"clamp":["92.0"],"orient":["92.0"],"单行":["92.0"],"uniline":["92.0"],"数据字典使用":["93.1"],"接口文本展示":["93.4"],"press":["94.0"],"官网":["94.1","96.7"],"ssr项目":["95.0"],"以上思维导图第一列是我们的目标":["95.1"],"第二列是我选择的技术栈":["95.1"],"有了选型了":["95.2"],"推荐使用":["95.3"],"我们全程使用esm规范开发":["95.4"],"pnpm相对npm速度快很多":["95.5"],"eslint可以根据规则校验代码是否符合规范":["95.6"],"pnpm":["95.7","95.19"],"eslint插件id":["95.8"],"dbaeumer":["95.8"],"vscode":["95.8","95.49"],"eslintrc":["95.9","97.22","97.32"],"cjs":["95.9","95.13","95.16"],"defineconfig":["95.9","96.5","97.22"],"ignore":["95.10"],"prettier可以格式化代码":["95.11"],"pretterrc":["95.13"],"commitlint可以根据规则检查我们的git":["95.14"],"commitlint":["95.16","97.58","97.59"],"extends":["95.16","97.32","97.35","127.55","156.13","176.18","178.4","217.7","221.1"],"conventional":["95.16"],"msg":["95.17","95.18"],"json的hook中触发":["95.20"],"simple":["95.20","214.2"],"hooks":["95.20","156.1","156.2","178.6","208.3"],"postinstall":["95.20"],"path设置路径别名":["95.21"],"服务端路由适合简单":["95.22"],"页面之间没有关联的项目":["95.22"],"页面跳转时都会经历一次服务端渲染":["95.22"],"客户端渲染适合复杂":["95.22"],"页面之间有关联的项目":["95.22"],"首次加载页面是服务端渲染":["95.22"],"后续页面跳转是客户端渲染":["95.22"],"就相当于spa了":["95.22"],"我们选择客户端路由":["95.22"],"按照":["95.22","99.5"],"navigate":["95.23"],"ssr":["95.23","178.7","205.13","229.0","254.15"],"client":["95.23","103.6","114.3","115.0"],"router":["95.23","97.4","99.12"],"some":["95.23","131.3"],"状态管理":["95.23"],"非业务层面全局状态使用":["95.23"],"context":["95.23","106.20","166.3","166.5","166.6","193.4","214.1","214.2","215.2","226.1","227.1","228.1","231.1","231.2","231.7","235.4","241.1","241.4","241.8","241.9","241.10"],"业务层面使用":["95.23"],"proxy":["95.25","109.6","138.29","162.2","173.62","178.4","179.57","244.0","248.2","254.4"],"meta":["95.25","121.6","150.2","168.7"],"引入tailwindcss":["95.26"],"tailwindcss":["95.28","96.6"],"postcss插件执行顺序是从上到下":["95.29"],"现在流行三种布局方案":["95.30"],"响应式是比较麻烦的":["95.31"],"因为需要针对不同的分辨率增加css代码":["95.31"],"需要配合动态rem使用":["95.32"],"监听窗口变化同时设置rem":["95.32"],"pxtorem相对比pxtoviewport":["95.32"],"前者可以做到限制最大宽度":["95.32"],"最小宽度":["95.32"],"自适应":["95.34"],"正常如上配置":["95.35"],"如果不希望转换":["95.36"],"就用大写px":["95.36"],"经过":["95.37"],"pxtorem":["95.37","101.3"],"dark配置":["95.40"],"fs":["95.40","140.5"],"enum":["95.42"],"theme":["95.42"],"dark":["95.42"],"light":["95.42"],"localstoragethemekey":["95.42"],"isdark":["95.42"],"i18next有非常丰富的社区生态":["95.43"],"由于我们是ssr国际化":["95.43"],"在服务端只用i18next来侦测语言":["95.45"],"不需要locale资源":["95.45"],"i18next":["95.45","95.46","95.47"],"i18n":["95.45","95.46","95.49"],"i18ntype":["95.45","95.46"],"服务端拿到客户端语言后":["95.46"],"也需要注水相应的语言":["95.46"],"此时服务端跟客户端语言已经一致了":["95.46"],"那么服务端就可以使用客户端的i18next实例进行ssr渲染了":["95.46"],"完整的i18next":["95.46"],"初始化代码":["95.46"],"getbase":["95.46"],"shared":["95.46","133.4","133.5"],"lookuptarget":["95.46"],"vscode插件":["95.48"],"setting":["95.49"],"ally":["95.49"],"法语单词":["96.1"],"快":["96.1","181.0"],"的意思":["96.1","173.28"],"是一种新型的前端构建工具":["96.1"],"最初是配合":["96.1"],"vue3":["96.1","96.14","97.18","214.1","232.1","246.0"],"一起使用的":["96.1"],"后来适配了各种前端项目":["96.1"],"目前提供了":["96.1"],"preact":["96.1"],"框架模板":["96.1"],"一个由":["96.1"],"作者尤雨溪开发的":["96.1"],"开发工具":["96.1"],"它具有以下特点":["96.1"],"快速的冷启动":["96.1"],"即时的模块热更新":["96.1"],"新增路由页面":["96.2"],"为了方便演示":["96.2"],"我们再新增两个路由页面":["96.2"],"熟悉":["96.2"],"创建views文件夹":["96.2"],"把需要展示的页面创建完成":["96.2"],"然后":["96.2","175.12"],"我们在router":["96.2"],"ts注册我们新增的页面":["96.2"],"alias":["96.2","96.5","138.23"],"views":["96.2"],"引入element":["96.3"],"plus":["96.3"],"我们可以引入整个":["96.3"],"也可以根据需要仅引入部分组件":["96.3"],"如果是全部引入":["96.3"],"只需要在main":["96.3"],"添加如下代码即可":["96.3"],"添加配置":["96.4"],"引入":["96.4"],"plus后":["96.4"],"我们可以添加一个全局配置对象":["96.4"],"该对象目前支持":["96.4"],"配置proxy":["96.5"],"如果要在vite中使用alias别名配置和proxy代理配置":["96.5"],"那么需要在vite":["96.5"],"ts文件中进行单独的配置":["96.5"],"vitejs":["96.5"],"styleimport":["96.5"],"autoprefixer":["96.6","101.3"],"lates":["96.6"],"创建您的配置文件":["96.6"],"接下来":["96.6"],"生成您的":["96.6"],"tailwind":["96.6"],"npx":["96.6"],"mock":["96.7","96.10","96.14"],"mockjs":["96.7","96.14"],"1下载":["96.9"],"2引入":["96.10"],"js暴露了一个全局的mock对象":["96.10"],"我们只需要将mock对象引入到文件中":["96.10"],"调用mock对象的方法即可":["96.10"],"commonjs的引入方式":["96.10"],"commonjs引入":["96.10"],"3mock":["96.11"],"js的规范":["96.11"],"方法是用来根据数据模板生成模拟数据":["96.12"],"我常用到的是以下两种传参方式":["96.12"],"random":["96.13","286.37"],"random是mock":["96.13"],"js提供一个工具类":["96.13"],"用于生成常用的几种数据":["96.13"],"生成布尔值":["96.13"],"占位符的方式":["96.13"],"vite2":["96.14"],"中使用mockjs来模拟数据":["96.14"],"安装mockjs":["96.14"],"save":["96.14","101.3"],"dev":["96.14","101.3","154.3","219.6","235.4","256.4","260.1"],"安装vite":["96.14"],"️":["97.1","265.0"],"构建工具":["97.1"],"就是快":["97.1"],"构建项目雏形":["97.2"],"确保你安装了最新版本的":["97.2"],"然后在命令行中运行以下命令":["97.2"],"template":["97.2","127.7","127.27","127.38","179.54","190.0","190.2","190.4","190.6","195.7","195.8","218.5","225.0","239.3","250.3","282.2"],"extra":["97.2"],"double":["97.2","108.2"],"dash":["97.2"],"needed":["97.2"],"目录下新建":["97.4","97.7"],"文件与":["97.4"],"文件夹":["97.4","284.14"],"store":["97.7","97.28","166.8","178.5"],"pinia":["97.8","115.0"],"createapp":["97.10","235.4"],"unplugin":["97.11"],"auto":["97.11","171.0"],"目录下创建":["97.13","97.17"],"配置好适合自己业务的请求拦截和响应拦截":["97.13"],"接口":["97.13","127.15"],"axios":["97.13","98.12","115.0","166.8","204.1","204.2","204.3","204.5","204.6"],"请求库二次封装":["97.13"],"创建请求实例":["97.13"],"instance":["97.13","166.9","216.2","219.6","219.10","221.1","221.8","221.9","236.1","236.5","251.2","256.1"],"baseurl":["97.13"],"指定请求超时的毫秒数":["97.13"],"timeout":["97.13"],"在需要使用接口的地方":["97.14"],"引入对应的业务模型文件":["97.14"],"改变了以往样式穿透的语法":["97.18"],"随着前端应用逐渐变得大型化和复杂化":["97.19"],"在同一个项目中有多个人员参与时":["97.19"],"每个人的前端能力程度不等":["97.19"],"他们往往会用不同的编码风格和习惯在项目中写代码":["97.19"],"长此下去":["97.19"],"势必会让项目的健壮性越来越差":["97.19"],"解决这些问题":["97.19"],"理论上讲":["97.19"],"口头约定和代码审查都可以":["97.19"],"但是这种方式无法实时反馈":["97.19"],"而且沟通成本过高":["97.19"],"不够灵活":["97.19"],"更关键的是无法把控":["97.19"],"不以规矩":["97.19"],"不能成方圆":["97.19"],"我们不得不在项目使用一些工具来约束代码规范":["97.19"],"本文讲解如何使用":["97.19"],"本体":["97.20","97.33"],"改善":["97.20"],"visual":["97.21","97.25","97.34","97.40","106.17"],"studio":["97.21","97.25","97.34","97.40"],"配置文件":["97.22","97.26","97.32","97.35","97.39","114.11"],"并填入以下内容":["97.22","97.35"],"define":["97.22","109.6"],"es6":["97.22","125.3","154.18","173.1","173.23","173.43","173.59","173.85","173.87","176.6","179.29","186.3"],"plugins":["97.22","97.35"],"过滤规则":["97.23","97.36"],"在项目根目录添加一个":["97.23"],"eslintignore":["97.23"],"支持多种格式的配置文件":["97.26"],"prettierrc":["97.26"],"ds":["97.28"],"files":["97.30","175.6","184.28","186.2"],"解决":["97.30"],"stylelint":["97.33","97.35","97.36","97.38","97.39"],"stylelintrc":["97.35","97.39"],"defaultseverity":["97.35"],"error":["97.35","98.7","99.7","99.8","99.9","179.33","286.33"],"standard":["97.35"],"order":["97.35","178.4","239.3"],"不允许未知函数":["97.35"],"unknown":["97.35","184.6","218.4"],"null":["97.35","99.7","132.1","167.4","169.4","173.28","173.67","173.70","184.6","206.8","206.15","206.16","216.3","217.7","218.4","219.3","220.2","222.3","232.2","232.4","235.4","236.4","236.6","288.4"],"添加如下配置":["97.39"],"工作区配置":["97.40"],"settings":["97.40"],"本项目使用":["97.41"],"版本":["97.41","195.6","250.1"],"版本配置方式跟之前版本有较大差异":["97.41"],"当发现配置方法不一致时":["97.41"],"一切以":["97.41"],"里增加":["97.44"],"多人协作项目中":["97.46"],"在提交代码环节":["97.46"],"也存在一种情况":["97.46"],"不能保证每个人对提交信息的准确描述":["97.46"],"因此会出现提交信息紊乱":["97.46"],"部分包括三个字段":["97.47"],"必需":["97.47"],"scope":["97.47"],"可选":["97.47","97.53","97.57"],"subject":["97.47","109.6","110.2","111.2"],"如果本次提交的代码是突破性的变更或关闭缺陷":["97.49"],"则":["97.49"],"onurlchange":["97.50"],"popstate":["97.50","99.12"],"hashchange":["97.50","99.12"],"polling":["97.50","159.2","159.5"],"added":["97.50"],"forward":["97.50"],"cz":["97.53"],"全局安装的好处在于":["97.54"],"方式一":["97.57"],"czrc":["97.57"],"文件以":["97.57"],"cli":["97.58","144.1","152.30"],"本章节将介绍如何使用":["97.60"],"仓库":["97.61"],"只对":["97.61"],"仓库有效":["97.61"],"所以创建":["97.61"],"仓库来托管项目代码":["97.61"],"master":["97.61","177.13","275.2"],"分支存储项目源代码":["97.61"],"gh":["97.61"],"分支存储打包后的静态文件":["97.61"],"创建一个有":["97.61"],"repo":["97.61"],"权限的":["97.61"],"sdk":["98.1","98.5","98.6"],"全称是":["98.1"],"software":["98.1","107.2","110.2","111.2"],"kit":["98.1"],"即":["98.1","114.3","169.3","171.0","177.9"],"用户行为就是在网页应用中进行的一系列操作":["98.2"],"但用户的操作有很多种":["98.2"],"都需要记录下来是不可能的":["98.2"],"一般需要记录用户的以下几种行为":["98.2"],"页面中代码运行产生的错误":["98.3"],"可能会导致用户核心操作流程被中断":["98.3"],"为了避免大量用户受到影响":["98.3"],"页面性能其实也是前端性能优化中一个需要考虑和优化的点":["98.4"],"毕竟如果一个网站老是发生":["98.4"],"白屏":["98.4","152.6"],"交互卡顿":["98.4"],"页面资源加载时间长":["98.4"],"等问题":["98.4"],"肯定是没办法留住用户的":["98.4"],"特别是用户的真实环境各不相同":["98.4"],"如":["98.4","102.0","119.11","167.4","173.84","178.8","262.0"],"ios":["98.4"],"更加需要统计和收集相关数据":["98.4"],"便于进行集中优化处理":["98.4"],"options":["98.6","109.1","219.10","226.1","241.1","242.1","258.6","283.12","286.33","286.52"],"appid":["98.6","98.7"],"数据埋点":["98.6"],"由于需要收集的数据类型包含多种":["98.7"],"最好能够定义一种比较通用的数据格式":["98.7"],"便于更友好地进行数据收集":["98.7"],"这里简单定义一下数据格式":["98.7"],"大致如下":["98.7"],"格式随需求场景产生差异":["98.7"],"当前应用唯一标识":["98.7"],"action":["98.7","208.5"],"不同数据类型":["98.7"],"pageurl":["98.7"],"页面地址":["98.7"],"apiurl":["98.7"],"接口地址":["98.7"],"userid":["98.7"],"当前用户":["98.7"],"id":["98.7","104.0","114.30","159.2","159.5","159.9","167.4","174.28","174.29","205.17","285.14"],"username":["98.7"],"time":["98.7","104.0","152.6","168.26"],"触发记录的时间":["98.7"],"接口响应结果":["98.7"],"性能指标":["98.7","151.4"],"错误对象":["98.7"],"用户操作相关信息":["98.7"],"确定数据发送方式":["98.7"],"如果要问前端埋点最基本要实现的功能是什么":["98.7"],"那必然是":["98.7"],"数据发送":["98.7"],"的能力":["98.7"],"否则即便有应用":["98.7"],"有用户":["98.7"],"有数据也只能保存在本地没法发送给相应的监控系统":["98.7"],"pv":["98.8"],"uv":["98.8"],"自动触发埋点":["98.8"],"交互式触发埋点":["98.9"],"假设我们希望记录某些按钮的使用次数的数据":["98.9"],"可以在":["98.9","140.0","140.2"],"上监听":["98.9"],"click":["98.9","195.9"],"目的利用事件冒泡以便于不需要侵入不同按钮的":["98.9"],"targetelementfilter":["98.9"],"即未被捕获的错误":["98.10"],"即通过":["98.11"],"try":["98.11","99.6","112.1","140.5","179.33"],"catch":["98.11","99.6","127.51","140.5","179.33","204.3"],"promise":["98.11","127.28","132.0","132.1","154.18","158.3","164.3","173.15","173.38","173.56","173.61","173.84","173.89"],"即在二次封装请求":["98.12"],"中进行请求和接收响应时的错误":["98.12"],"为了方便这里以":["98.12"],"来举例子":["98.12"],"我们可以在它的":["98.12"],"即使用":["98.13"],"框架组件时发生的错误":["98.13"],"完全可以使用它们在官方文档中提到的错误捕获方式来捕获并上报错误":["98.13"],"中的":["98.13","108.2","109.7","154.20","184.9","222.4","236.1"],"errorhandler":["98.13"],"就是用于为应用内抛出的未捕获错误指定一个全局处理函":["98.13"],"文章分成以下六部分来介绍":["99.0"],"自研监控平台解决了哪些痛点":["99.0"],"实现了什么亮点功能":["99.0"],"相比sentry等监控方案":["99.0"],"项目出错":["99.1"],"多数场景下":["99.2"],"定位到具体的源码":["99.2"],"就可以定位bug":["99.2"],"定位源码":["99.3","100.0"],"播放录屏":["99.3"],"这套组合":["99.3"],"还原错误应该够用了":["99.3"],"同时监控平台也提供了":["99.3"],"这种方式":["99.3"],"假如用户做了很多操作":["99.3"],"title":["99.4","174.28","174.29","174.40"],"5w1h":["99.5"],"法则来分析前端异常":["99.5"],"需要知道以下信息":["99.5"],"what":["99.5"],"只能捕获代码常规的运行错误":["99.6"],"语法错误和异步错误不能捕获到":["99.6"],"示例1":["99.6"],"常规运行时错误":["99.6"],"可以捕获":["99.6"],"undefined":["99.6","130.2","156.23","173.28","173.70","173.99","184.6","205.6","215.2","241.1","241.8","241.10","286.20","286.21"],"捕获到异常":["99.6"],"示例2":["99.6"],"语法错误":["99.6"],"不能捕获":["99.6"],"notdefined":["99.6"],"错误":["99.7","99.8","205.6"],"vue项目中":["99.7"],"onerror":["99.7","99.8"],"事件不能捕获到常规的代码错误":["99.7"],"异常代码":["99.7"],"created":["99.7","114.30","179.54","196.9","236.4"],"js中添加捕获代码":["99.7"],"从":["99.8","214.1","241.10","247.2"],"react16":["99.8","156.1"],"开始":["99.8"],"官方提供了":["99.8"],"errorboundary":["99.8"],"错误边界的功能":["99.8"],"被该组件包裹的子组件":["99.8"],"函数报错时会触发离当前组件最近父组件的errorboundary":["99.8"],"生产环境":["99.8","214.2"],"一旦被":["99.8"],"捕获的错误":["99.8"],"也不会触发全局的":["99.8"],"如果当前页面中":["99.9"],"引入了其他域名的js资源":["99.9"],"如果资源出现错误":["99.9"],"事件只会监测到一个":["99.9"],"的异常":["99.9"],"接口监控的实现原理":["99.10"],"针对浏览器内置的":["99.10"],"xmlhttprequest":["99.10","162.0","175.8","175.19"],"对象":["99.10","134.4","151.5","152.8","154.18","162.3","177.8","183.2","218.4","218.5","236.2","242.1","243.1","243.2","243.15","256.8"],"利用":["99.10","162.0","162.3","169.4","179.51","244.0"],"aop":["99.10"],"切片编程重写该方法":["99.10"],"实现对请求的接口拦截":["99.10"],"从而获取接口报错的情况并上报":["99.10"],"拦截xmlhttprequest请求示例":["99.10"],"xhrreplace":["99.10"],"originalxhrproto":["99.10"],"重写xmlhttprequest":["99.10"],"原型上的open方法":["99.10"],"replaceaop":["99.10"],"open":["99.10","133.6"],"originalopen":["99.10"],"args":["99.10","229.0","283.7","288.1"],"获取请求的信息":["99.10"],"xhr":["99.10","107.4","175.5","175.8"],"touppercase":["99.10"],"starttime":["99.10","151.12","287.3"],"date":["99.10","156.23","159.5","159.9","159.13","287.2","287.3"],"gettime":["99.10"],"执行原始的open方法":["99.10"],"apply":["99.10","131.9","173.11","173.98","176.6","177.8"],"通过breadcrumb类来创建用户行为的对象":["99.11"],"来存储和管理所有的用户行为":["99.11"],"通过重写或添加相应的事件":["99.11"],"完成用户行为数据的采集":["99.11"],"用户行为代码示例":["99.11"],"创建用户行为类":["99.11"],"breadcrumb":["99.11"],"maxbreadcrumbs控制上报用户行为的最大条数":["99.11"],"maxbreadcrumbs":["99.11"],"通过监听路由的变化来判断页面跳转":["99.12"],"路由有":["99.12"],"history":["99.12","134.4"],"两种模式":["99.12"],"history模式可以监听":["99.12"],"hash模式通过重写":["99.12"],"pushstate和":["99.12"],"replacestate":["99.12"],"vue项目中不能通过":["99.12"],"事件来监听路由变化":["99.12"],"底层调用的是":["99.12"],"pushstate":["99.12"],"对象添加click事件":["99.13"],"并上报":["99.13"],"domreplace":["99.13"],"获取页面中加载的资源信息":["99.14"],"比如它们的":["99.14"],"加载了多久":["99.14"],"是否来自缓存等":["99.14"],"资源加载瀑布图":["99.14"],"waterfall":["99.14"],"瀑布图展现了浏览器为渲染网页而加载的所有的资源":["99.14"],"包括加载的顺序和每个资源的加载时间":["99.14"],"分析这些资源是如何加载的":["99.14"],"可以帮助我们了解究竟是什么原因拖慢了网页":["99.14"],"从而采取对应的措施来提升网页速度":["99.14"],"getentriesbytype":["99.14"],"resource":["99.14"],"获取页面加载的资源列表":["99.14"],"同时可以结合":["99.14"],"initiatortype":["99.14"],"字段来判断资源类型":["99.14"],"对资源进行过滤":["99.14"],"其中":["99.14","104.0","106.22","195.8","195.9","252.5"],"performanceresourcetiming":["99.14"],"来分析资源加载的详细数据":["99.14"],"task":["99.15"],"执行时间超过50ms的任务":["99.15"],"被称为":["99.15"],"可以显示此刻内存占用情况":["99.16"],"首屏加载时间和首页加载时间不一样":["99.17"],"首屏指的是屏幕内的dom渲染完成的时间":["99.17"],"比如首页很长需要好几屏展示":["99.17"],"这种情况下屏幕以外的元素不考虑在内":["99.17"],"计算首屏加载时间流程":["99.17"],"sdkprocess":["99.18"],"入口":["99.19"],"通过添加监听事件来捕获错误":["99.20"],"core":["99.21","204.2","254.13","254.17"],"支持图片打点上报和fetch请求上报两种方式":["99.22"],"图片打点上报的优势":["99.22"],"优先使用":["99.23"],"requestidlecallback":["99.23"],"利用浏览器空闲时间上报":["99.23"],"其次使用微任务上报":["99.23"],"queue":["99.23","208.5","256.4"],"监控sdk":["99.23"],"参考了":["99.23"],"sentry":["99.23"],"monitor":["99.23"],"see":["100.0","100.4"],"前端监控方案":["100.0"],"提供了":["100.0","100.7"],"先了解下":["100.1"],"的基本内容":["100.1"],"例如":["100.1","115.0","127.41","127.43","133.5","154.20","163.0","177.9","178.6","181.0","206.15"],"a2a3ceec":["100.1"],"代码如下":["100.1","127.33","127.36","154.4","163.0"],"代码还原":["100.2"],"这里主要使用":["100.2"],"下面介绍下如何使用":["100.2"],"示例代码":["100.2"],"sourcemap":["100.2","100.5","195.8"],"stack":["100.3"],"通过第一篇文章的介绍":["100.3"],"我们知道可以通过多种方式来捕获报错":["100.3"],"error事件":["100.3"],"unhandledrejection事件":["100.3"],"中通过vue":["100.3"],"errorhander":["100.3"],"react中通过componentdidcatch":["100.3"],"为了消除各浏览器的差异":["100.3"],"demo":["100.4","113.6"],"安装并运行":["100.4"],"如上图所示":["100.5"],"定位源码流程总结":["100.5"],"先介绍下在vue中如何使用":["100.6"],"录制示例":["100.6"],"record":["100.6","100.7","100.8","115.0","156.13"],"原理浅析":["100.7"],"主要由":["100.7"],"player":["100.7"],"snapshot":["100.7"],"三个库组成":["100.7"],"如果一直录屏":["100.8"],"数据量是巨大的":["100.8"],"实测下来":["100.8"],"录制10s的时长":["100.8"],"数据大小约为":["100.8"],"8m":["100.8","195.7"],"左右":["100.8"],"页面的不同复杂度":["100.8"],"用户不同操作的频率都会造成大小不一样":["100.8"],"数据如果不经过压缩":["100.8"],"直接传给后端":["100.8"],"面对大量的用户":["100.8"],"需要非常高的带宽做支持":["100.8"],"还好":["100.8"],"rrweb官方提供了数据压缩函数":["100.8"],"packfn":["100.8"],"的单数据压缩":["100.8"],"在录制时可以作为":["100.8"],"传入":["100.8","204.3","283.12"],"rrweb":["100.8"],"emit":["100.8","111.4","181.0"],"pack":["100.8"],"回放时":["100.8"],"需要传入":["100.8"],"unpack":["100.8"],"一般关注的是":["100.9"],"页面报错的时候用户做了哪些操作":["100.9"],"所以目前只把报错前10s的录屏上报到服务端":["100.9"],"如何只上报报错时的录屏信息呢":["100.9"],"window上设置":["100.9"],"haserror":["100.9","181.0"],"recordscreenid":["100.9"],"变量":["100.9","138.21","256.2"],"haserror用来判断某段时间代码是否报错":["100.9"],"用来记录此次录屏的id":["100.9"],"rem是指相对于根元素的字体大小的单位":["101.1"],"不固定宽高比的web应用":["101.2"],"amfe":["101.3"],"flexible":["101.3","171.0"],"是postcss的插件":["101.3"],"固定宽高比的web应用":["101.4"],"新建":["101.5","113.6"],"qq图片20220927111729":["101.5"],"windowresize":["101.5"],"指向最外层容器":["101.5"],"screenref":["101.5"],"定时函数":["101.5"],"入门篇":["102.0"],"本文为稀土掘金技术社区首发签约文章":["102.0"],"14天内禁止转载":["102.0"],"14天后未获授权禁止转载":["102.0"],"侵权必究":["102.0"],"相信大部分兄弟都体验过":["102.0"],"了":["102.0","111.4"],"知道它很快":["102.0"],"但你知道它为什么快":["102.0"],"相比":["102.0"],"有哪些不同吗":["102.0"],"今天咱们就来全面了解一下":["102.0"],"尤其适合新手兄弟":["102.0"],"创作不易":["102.0"],"如果有触及到你的知识盲区":["102.0"],"还请点赞支持一下":["102.0"],"什么是构建工具":["102.0"],"很多人对构建工具没有什么概念":["102.0"],"只知道是用来打包的":["102.0"],"那么到底什么是构建工具呢":["102.0"],"大家都知道浏览器只支持":["102.0"],"但一个企业级项目可能会用到各种各样的前端技术":["102.0"],"vue组件":["102.0"],"语法降级":["102.0"],"体积优化等":["102.0"],"这时候我们就需要相应的工具去处理这些内容":["102.0"],"loader":["102.0","154.4","177.7","192.4","193.7","193.10","195.8","217.7"],"的处理":["102.1","102.3","102.4","102.5","206.15"],"在不同模块中定义相同类名":["102.1"],"会导致样式被覆盖":["102.1"],"这时候就要用到":["102.1"],"结尾的文件都被认为是一个":["102.1"],"导入这样的文件会返回一个相应的对象":["102.1"],"example":["102.1","173.1","176.18","183.2"],"red":["102.1","106.33","181.0"],"将资源引入为":["102.2"],"默认情况下引入一个静态资源":["102.2"],"会返回这个资源的":["102.2"],"路径":["102.2"],"也就是绝对路径":["102.2"],"imgurl":["102.2"],"为":["102.4","121.4","169.4","212.1","218.4","225.4","232.4","241.6","241.9"],"提供第一优先级支持":["102.4"],"直接使用相应的插件就好了":["102.4"],"天然支持引入":["102.5"],"esbuild":["102.5"],"转译到":["102.5"],"约是":["102.5"],"tsc":["102.5","115.0"],"速度的":["102.5"],"倍":["102.5"],"hmr":["102.5","154.2"],"热更新也是非常的快":["102.5"],"仅执行":["102.5"],"文件的转译工作":["102.5"],"并不执行任何类型检查":["102.5"],"实现多房间多对多通话":["103.0"],"并实现屏幕录制":["103.0"],"为什么要使用webrtc":["103.0"],"webrtc全称web":["103.0"],"real":["103.0","104.0"],"第一个要介绍的api是":["103.1"],"这个api顾名思义":["103.2"],"就是去获取用户的meida的":["103.2"],"那我们直接执行这个api来看看效果":["103.2"],"mediatrackconstraintset":["103.3","103.4"],"是否开启agc自动增益":["103.4"],"可以在原有音量上增加额外的音量":["103.4"],"autogaincontrol":["103.4"],"我们建立一对一的链接需要知道后流程是怎么流转的":["103.5"],"接下来上一张图":["103.5"],"首先启动fastify服务":["103.6"],"接下来在vue项目安装":["103.6"],"socket":["103.6","103.9","177.13"],"io":["103.6","103.12","281.2"],"然后连接服务端的socket":["103.6"],"开始创建rtcpeerconnection":["103.7"],"这里采用google的公共stun服务":["103.7"],"peerconnect":["103.7","103.10","103.11"],"rtcpeerconnection":["103.7"],"iceservers":["103.7"],"urls":["103.7","158.3","164.3"],"b需要监听socket里面的offer事件并创建rtcpeerconnection":["103.8"],"将这个offer设置到远端":["103.8"],"接下来来创建响应":["103.8"],"并且将这个响应设置到本地":["103.8"],"发送answer事件回复给a":["103.8"],"服务端广播answer":["103.9"],"candidate":["103.10"],"接下来a会获取到ice候选信息":["103.10"],"需要发送给b":["103.10"],"onicecandidate":["103.10"],"ontrack":["103.11"],"track":["103.11","250.1","250.2"],"rtctrackevent":["103.11"],"kind":["103.11"],"video":["103.11","104.0","172.0","284.22"],"在我们登录socket服务的时候我们在query参数里面有房间号":["103.12"],"userid和昵称":["103.12"],"我们可以通过redis记录对应的房间号的登录和登出":["103.12"],"从而实现成员列表":["103.12"],"可以在某一个人登录的时候获取一下redis对应房间的成员列表":["103.12"],"如果没有这个房间":["103.12"],"就把这个人丢进新的房间":["103.12"],"并且存储到redis中":["103.12"],"方便其他人登录这个房间的时候知道现在有多少人":["103.12"],"fastify":["103.12"],"async":["103.12","103.17","104.0","112.1","148.3","148.5","154.18","161.0","166.3","173.31","173.65","176.12","286.46","286.53"],"由于需要给每个人发送offer":["103.13"],"需要对上面的初始化函数进行封装":["103.13"],"创建rtcpeerconnection":["103.13"],"creatoruserid":["103.13"],"上面实现了成员列表":["103.14"],"接下来进入了对应的房间后需要轮询获取对应的成员列表":["103.14"],"在我们获取到视频流的时候":["103.15"],"可以对在线列表里除了自己的人都创建一个rtcpeer":["103.15"],"来进行一对一连接":["103.15"],"从而达到多对多连接的效果":["103.15"],"过滤自己":["103.15"],"emitlist":["103.15"],"userlist":["103.15"],"value":["103.15","132.1","223.2","225.0","225.4","250.1","250.3","291.6"],"filter":["103.15","131.2","254.3"],"item":["103.15","153.12","195.8"],"myuserid":["103.15"],"就是目标人的userid":["103.15"],"peer":["103.15","104.0"],"await":["103.15","104.0","112.1","127.28","127.37","173.65","176.7"],"initpeer":["103.15"],"这个api是在mediadevices里面的一个方法":["103.16"],"是用来获取屏幕共享的":["103.16"],"获取到屏幕共享流后":["103.17"],"需要使用":["103.17"],"mediarecorder这个api来对流进行录制":["103.17"],"接下来我们先获取屏幕流":["103.17"],"同时创建一个meidarecord类":["103.17"],"screenstream":["103.17"],"mediastream":["103.17"],"mediarecord":["103.17"],"blobmedia":["103.17"],"blob":["103.17"],"startlocalrecord":["103.17"],"的应用场景":["104.0"],"communications":["104.0"],"是一项":["104.0"],"实时通讯技术":["104.0"],"它允许网络应用或者站点":["104.0"],"在不借助中间媒介的情况下":["104.0"],"建立浏览器之间":["104.0"],"点对点":["104.0"],"的连接":["104.0"],"实现视频流和":["104.0"],"或":["104.0","106.44","127.23","133.5","154.17","154.20","156.6"],"音频流或者其他":["104.0"],"任意数据":["104.0"],"的传输":["104.0"],"包含的这些标准使用户在无需安装任何插件或者第三方的软件的情况下":["104.0"],"创建点对点":["104.0"],"的数据分享和电话会议成为可能":["104.0"],"直播":["104.0"],"游戏":["104.0"],"视频会议":["104.0"],"在线教育":["104.0"],"屏幕共享":["104.0"],"远程控制":["104.0"],"等等等":["104.0"],"可玩性很强":["104.0"],"可以做很多有趣的事情":["104.0"],"哪怕是被玩烂了概念":["104.0"],"元宇宙":["104.0"],"在网速与硬件越来越好的趋势下":["104.0"],"它有无限可能":["104.0"],"媒体流":["104.0"],"要想了解":["104.0"],"首先要了解媒体流":["104.0"],"媒体流可以是来自本地设备的":["104.0"],"也可以是来自远程设备的":["104.0"],"媒体流可以是实时的":["104.0"],"也可以是非实时的":["104.0"],"上述的应用场景中":["104.0"],"我们都需要使用到":["104.0"],"我们可以通过摄像头":["104.0"],"麦克风":["104.0"],"屏幕共享等方式获取到媒体流":["104.0"],"然后通过":["104.0"],"技术将媒体流传输到远端实现实时通讯":["104.0"],"摄像头获取媒体流及一些其他操作":["104.0"],"要实现":["104.0"],"音视频通话":["104.0"],"我们肯定要先获取到摄像头的媒体流":["104.0"],"下面我们先通过一个简单的拍照小应用来看一下如何通过摄像头获取媒体流":["104.0"],"先设置好用于播放媒体流的":["104.0"],"标签":["104.0","106.41","122.22","162.3","241.9","286.69"],"添加一个":["104.0"],"autoplay":["104.0"],"属性":["104.0","134.4","141.8","151.5","170.8","175.4","179.9","209.8","214.1","222.6"],"这样就可以在摄像头获取到媒体流后自动播放了":["104.0"],"localvideo":["104.0"],"playsinline":["104.0"],"muted":["104.0"],"只能在":["104.0"],"协议或者":["104.0"],"下使用":["104.0"],"会报错":["104.0"],"这里我们暂时使用":["104.0"],"做简单的演示":["104.0"],"后面通过":["104.0"],"信令服务器":["104.0"],"实现实时音视频的章节我会讲到如何在本地用":["104.0"],"mkcert":["104.0"],"做自签名证书":["104.0"],"ok":["104.0","168.26"],"continue":["104.0"],"我们主要通过":["104.0"],"navigator":["104.0","115.0","296.2"],"mediadevices":["104.0"],"getusermedia":["104.0"],"constraints":["104.0"],"这个":["104.0","181.0","286.54"],"来获取媒体流":["104.0"],"这个方法接收一个配置对象作为参数":["104.0"],"配置对象中包含了媒体流的类型":["104.0"],"以及媒体流的分辨率等信息":["104.0"],"获取本地音视频流":["104.0"],"getlocalstream":["104.0"],"mediastreamconstraints":["104.0"],"获取媒体流":["104.0"],"stream":["104.0","159.13"],"指定了请求的媒体类型和相对应的参数":["104.0"],"用于配置视频流和音频流的信息":["104.0"],"我可以看下":["104.0"],"参数中具体支持哪些配置项":["104.0"],"getsupportedconstraints":["104.0"],"这个方法来获取":["104.0"],"supportedconstraints":["104.0"],"我们把它打印出来":["104.0"],"可以看到它支持的配置项有":["104.0"],"通常我们不设置":["104.0"],"参数":["104.0","140.5","258.5","296.1"],"那么默认就是获取摄像头和麦克风的媒体流":["104.0"],"如果我们只想要获取摄像头的媒体流":["104.0"],"那么我们可以这样设置":["104.0"],"audio":["104.0","172.0"],"如果我们想要获取视频的高度宽度":["104.0"],"height":["104.0","170.15","171.0"],"诸如此类":["104.0"],"中也可以设置设备":["104.0"],"或者前后置摄像头":["104.0"],"大家可以在支持的情况下根据自己的需求来设置即可":["104.0"],"具体可以查看mdn":["104.0"],"这里我不做过多的介绍了":["104.0"],"我们继续":["104.0"],"获取通过摄像头获取媒体流后":["104.0"],"将媒体流赋值给":["104.0"],"标签的":["104.0"],"srcobject":["104.0"],"让其播放":["104.0"],"的核心功能是将":["106.2"],"属性设定为特定的值":["106.2"],"一个属性与值的键值对被称为":["106.2"],"声明":["106.2","195.7"],"declaration":["106.2"],"规则是样式表的主体":["106.3"],"通常样式表会包括大量的规则列表":["106.3"],"但有时候也需要在样式表中包括其他的一些信息":["106.3"],"比如字符集":["106.3"],"用于定义样式表使用的字符集":["106.4"],"它必须是样式表中的第一个元素":["106.4"],"如果有多个":["106.4"],"被声明":["106.4"],"只有第一个会被使用":["106.4"],"而且不能在html元素或html页面的":["106.4"],"用于告诉":["106.5"],"引擎引入一个外部样式表":["106.5"],"link":["106.5","106.35","179.7"],"用于查询特定的":["106.6"],"层叠样式表":["106.7"],"这里的层叠怎么理解呢":["106.7"],"其实它是":["106.7"],"中的核心特性之一":["106.7"],"标签选择器":["106.9"],"类选择器":["106.9"],"checked":["106.9"],"相邻兄弟选择器":["106.10"],"条件伪类":["106.11"],"基于元素语言来匹配页面元素":["106.11"],"dir":["106.11","214.2"],"匹配特定文字书写方向的元素":["106.11"],"has":["106.11"],"匹配包含指定元素的元素":["106.11"],"匹配指定选择器列表里的元素":["106.11"],"not":["106.11","127.17","206.1","214.2","215.2","216.2"],"用来匹配不符合一组选择器的元素":["106.11"],"行为伪类":["106.11"],"active":["106.11","181.0"],"鼠标激活的元素":["106.11"],"优先级就是分配给指定的":["106.13"],"声明的一个权重":["106.13"],"它由匹配的选择器中的每一种选择器类型的数值决定":["106.13"],"为了记忆":["106.13"],"中有一个很重要的特性就是子元素会继承父元素对应属性计算后的值":["106.14"],"比如页面根元素":["106.14"],"的文本颜色默认是黑色的":["106.14"],"页面中的所有其他元素都将继承这个颜色":["106.14"],"当申明了如下样式后":["106.14"],"文本将变成橙色":["106.14"],"的世界中":["106.15"],"会把内容按照从左到右":["106.15"],"从上到下的顺序进行排列显示":["106.15"],"中任何元素都可以看成是一个盒子":["106.16"],"而一个盒子是由":["106.16"],"部分组成的":["106.16"],"内边距":["106.16"],"padding":["106.16","106.22"],"边框":["106.16"],"和外边距":["106.16"],"margin":["106.16","106.21","106.22"],"盒模型有":["106.16"],"formatting":["106.17","106.20"],"是用来处理和在视觉媒体上显示文档时使用的计算规则":["106.17"],"对外显示方面":["106.18"],"盒子类型可以分成":["106.18"],"类":["106.18","283.3","283.7"],"level":["106.18","175.19"],"块级盒子":["106.18"],"对内方面":["106.19"],"其实就是把元素当成了容器":["106.19"],"里面包裹着文本或者其他子元素":["106.19"],"css2":["106.20"],"块格式化上下文":["106.21"],"它是一个独立的渲染区域":["106.21"],"只有块级盒子参与":["106.21"],"它规定了内部的块级盒子如何布局":["106.21"],"并且与这个区域外部毫不相干":["106.21"],"图来源于":["106.21"],"yachen168bfc":["106.21"],"渲染规则":["106.21","106.22"],"内部的盒子会在垂直方向":["106.21"],"一个接一个地放置":["106.21"],"盒子垂直方向的距离由":["106.21"],"决定":["106.21"],"属于同一个":["106.21"],"的两个相邻盒子的":["106.21"],"会发生重叠":["106.21"],"每个元素的":["106.21"],"的左边":["106.21"],"与包含块":["106.21"],"的左边相接触":["106.21"],"对于从左往右的格式化":["106.21"],"否则相反":["106.21"],"的形成条件非常简单":["106.22"],"块级元素中仅包含内联级别元素":["106.22"],"需要注意的是当ifc中有块级元素插入时":["106.22"],"会产生两个匿名块将父元素分割开来":["106.22"],"产生两个":["106.22"],"子元素在水平方向上一个接一个排列":["106.22"],"在垂直方向上将以容器顶部开始向下排列":["106.22"],"节点无法声明宽高":["106.22"],"在水平方向有效在垂直方向无效":["106.22"],"节点在垂直方向上以不同形式对齐":["106.22"],"在电脑显示屏幕上的显示的页面其实是一个三维的空间":["106.23"],"水平方向是":["106.23"],"轴":["106.23"],"竖直方向是":["106.23"],"y":["106.23","184.20"],"而屏幕到眼睛的方向可以看成是":["106.23"],"众":["106.23"],"元素依据自己定义的属性的优先级在":["106.23"],"轴上按照一定的顺序排开":["106.23"],"而这其实就是层叠上下文所要描述的东西":["106.23"],"w566":["106.23"],"我们对层叠上下文的第一印象可能要来源于":["106.23"],"认为它的值越大":["106.23"],"距离屏幕观察者就越近":["106.23"],"那么层叠等级就越高":["106.23"],"的声明是由属性和值组成的":["106.24"],"而值的类型有许多种":["106.24"],"数值":["106.24"],"长度值":["106.24"],"用于指定例如元素":["106.24"],"屏幕分辨率是指在屏幕的横纵方向上的像素点数量":["106.25"],"比如分辨率":["106.25"],"意味着水平方向含有":["106.25"],"个像素数":["106.25"],"垂直方向含有":["106.25"],"表示的是":["106.25"],"中的像素":["106.25"],"中的相对长度单位中的一个":["106.26"],"居然是相对的":["106.26"],"那它到底是相对的谁呢":["106.26"],"它有":["106.26"],"层意思":["106.26"],"em":["106.27","171.0","286.55"],"一样":["106.27","156.21","205.16"],"也是一个相对长度单位":["106.27"],"不过":["106.27"],"相对的是":["106.27"],"的根元素":["106.27"],"由于是基于":["106.27"],"来计算":["106.27"],"所以通常用于自适应网站或者":["106.27"],"h5":["106.27","286.55"],"分别是相对于屏幕视口宽度和高度而言的长度单位":["106.28"],"1vw":["106.28"],"中用于表示颜色的值种类繁多":["106.29"],"keywords":["106.30"],"是不区分大小写的标识符":["106.30"],"它表示一个具体的颜色":["106.30"],"white":["106.30"],"白":["106.30"],"黑":["106.30"],"black":["106.30"],"关键字表示一个完全透明的颜色":["106.31"],"即该颜色看上去将是背景色":["106.31"],"从技术上说":["106.31"],"它是带有":["106.31"],"alpha":["106.31","106.33"],"通道为最小值的黑色":["106.31"],"rgba":["106.31"],"颜色":["106.33","106.34","123.1"],"颜色是由":["106.33"],"green":["106.33"],"blue":["106.33"],"组成的色彩空间":["106.33"],"它有两种表示形式":["106.33"],"十六进制符号":["106.33"],"颜色是由色相":["106.34"],"hue":["106.34"],"饱和度":["106.34"],"saturation":["106.34"],"亮度":["106.34"],"lightness":["106.34"],"不透明度组成的颜色体系":["106.34"],"色相":["106.34"],"媒体查询是指针对不同的设备":["106.35"],"特定的设备特征或者参数进行定制化的修改网站的样式":["106.35"],"你可以通过给":["106.35"],"加上":["106.35","117.1"],"media":["106.35"],"属性来指定该样式文件只能对什么设备生效":["106.35"],"不指定的话默认是":["106.35"],"即对所有设备都生效":["106.35"],"之前我们通常是在预处理器里才可以使用变量":["106.36"],"而现在":["106.36"],"里也支持了变量的用法":["106.36"],"通过自定义属性就可以在想要使用的地方引用它":["106.36"],"1px":["106.37"],"边框解决方案":["106.37"],"retina":["106.37"],"显示屏比普通的屏幕有着更高的分辨率":["106.37"],"所以在移动端的":["106.37"],"边框就会看起来比较粗":["106.37"],"为了美观通常需要把这个线条细化处理":["106.37"],"这里有篇文章列举了":["106.37"],"中方案可以参考一下":["106.37"],"7种方法解决移动端retina屏幕1px边框问题":["106.37"],"而这里附上最后一种通过伪类和":["106.37"],"什么是浮动":["106.38"],"浮动元素会脱离文档流并向左":["106.38"],"向右浮动":["106.38"],"清除浮动":["106.39","106.40"],"前面介绍":["106.39"],"的时候提到过":["106.39"],"计算":["106.39"],"clear":["106.40"],"我先把结论贴出来":["106.40"],"clearfix":["106.40"],"zoom":["106.40"],"针对同一个类型的":["106.41"],"不同的浏览器往往有不同的表现":["106.41"],"所以在网站制作的时候":["106.41"],"开发者通常都是需要将这些浏览器的默认样式清除":["106.41"],"让网页在不同的浏览器上能够保持一致":["106.41"],"针对清除浏览器默认样式这件事":["106.41"],"在很早之前":["106.41"],"大师":["106.41"],"eric":["106.41"],"meyer":["106.41"],"就干过":["106.41"],"它就是写一堆通用的样式用来重置浏览器默认样式":["106.41"],"这些样式通常会放到一个命名为":["106.41"],"reset":["106.41"],"文件中":["106.41","204.2"],"比如大师的":["106.41"],"是这么写的":["106.41"],"span":["106.41","113.5","113.6","241.7","286.55"],"applet":["106.41","286.55"],"object":["106.41","107.4","109.6","110.2","111.2","125.1","127.11","173.40","173.80","174.48","176.5","202.4","202.7","219.6","235.4","252.3","283.10","283.12","286.55"],"iframe":["106.41","126.6","126.7","133.7","162.0","162.3","286.55","286.69"],"默认":["106.42"],"字符太长溢出了容器":["106.42"],"让元素在父元素中呈现出水平垂直居中的形态":["106.43"],"无非就":["106.43"],"方法一":["106.45","170.2"],"这里列了":["106.46"],"种方法":["106.46","106.51"],"参考了颜海镜":["106.46"],"边栏定宽主栏自适应":["106.48"],"针对以下这些方案写了几个示例":["106.48","106.49"],"两侧栏定宽主栏自适应":["106.49"],"结合示例阅读更佳":["106.50"],"头尾定高主栏自适应":["106.51"],"列了":["106.51"],"都是基于如下的":["106.51"],"当我们使用第三方库的时候":["107.1"],"常常会遇到当前接口和第三方接口不匹配的情况":["107.1"],"比如使用一个":["107.1"],"看一下":["107.2","108.2"],"维基百科":["107.2","112.2"],"给的定义":["107.2"],"engineering":["107.2"],"adapter":["107.2"],"pattern":["107.2","109.6","110.2","111.2"],"design":["107.2","109.6","110.2","111.2"],"allows":["107.2"],"wikipedia":["107.2","110.2","111.2"],"wiki":["107.2","110.2","111.2"],"computer":["107.2","110.2","111.2"],"science":["107.2","110.2","111.2"],"an":["107.2","110.2","111.2","148.5","206.14","235.4"],"existing":["107.2"],"回到开头接口不匹配的问题上":["107.3"],"除了应对数据格式不一致的问题":["107.4"],"通过适配器模式我们还可以为上层提供统一接口":["107.4"],"来解决兼容性问题":["107.4"],"最典型的例子就是":["107.4"],"jquery":["107.4","125.8","154.20","163.0"],"可以看一下其中一段代码":["107.4"],"still":["107.4"],"attached":["107.4"],"ajaxsettings":["107.4"],"backward":["107.4"],"compatibility":["107.4"],"适配器模式和代理模式在代码结构上很像":["107.5"],"微信小程序定义一个页面是通过微信提供的":["108.1"],"看下维基百科的定义":["108.2"],"装饰器":["108.2"],"修饰":["108.2"],"模式":["108.2","127.41"],"是面向对象程式领域中":["108.2"],"一种动态地往一个类别中添加新的行为的设计模式":["108.2"],"就功能而言":["108.2"],"修饰模式相比生成子类别更为灵活":["108.2"],"这样可以给某个对象而不是整个类别添加一些功能":["108.2"],"uml":["108.2"],"类图和次序图":["108.2"],"20220117093402007":["108.2"],"当访问":["108.2"],"component1":["108.2"],"operation":["108.2","204.3"],"方法时":["108.2"],"会先调用预先定义的两个装饰器":["108.2"],"decorator1":["108.2"],"decorator2":["108.2"],"执行一些额外操作":["108.2"],"最后再执行原始的":["108.2"],"举一个简单的例子":["108.2"],"买奶茶的话可以额外加珍珠":["108.2"],"椰果等":["108.2"],"不同小料有不同的价格":["108.2"],"也可以自由组合":["108.2"],"此时就可以用到装饰器模式":["108.2"],"对原始奶茶进行加料":["108.2"],"算价":["108.2"],"原始的奶茶有一个接口和类":["108.2"],"milktea":["108.2"],"public":["108.2","120.2","120.3","154.11"],"getcost":["108.2"],"返回奶茶的价格":["108.2"],"getingredients":["108.2"],"返回奶茶的原料":["108.2"],"simplemilktea":["108.2"],"回到文章最开头的场景":["108.3"],"我们需要为每个页面加载的时候上报一些自定义数据":["108.3"],"其实我们只需要引入一个装饰函数":["108.3"],"将传入的":["108.3"],"进行装饰返回即可":["108.3"],"base":["108.3","179.62"],"如果之前看过":["108.4"],"代理模式":["108.4","111.4"],"但还是有很大的不同点":["108.4"],"代理模式中":["108.4"],"我们是直接将原对象封装到代理对象之中":["108.4"],"对于业务方并不关系原始对象":["108.4"],"直接使用代理对象即可":["108.4"],"装饰器模式中":["108.4"],"平常业务开发中":["109.1"],"对于网络请求":["109.1"],"我们一般会封装成一个模块":["109.1"],"并且暴露":["109.1"],"方法供大家使用":["109.1"],"贴一下":["109.2"],"problems":["109.4"],"can":["109.4","109.6","154.17","215.2"],"solution":["109.6"],"does":["109.6"],"describe":["109.6"],"separate":["109.6"],"substitute":["109.6"],"another":["109.6"],"implements":["109.6"],"additional":["109.6","206.14"],"functionality":["109.6"],"access":["109.6","115.0","140.5"],"代理模式就是对原有对象进行扩展":["109.6"],"从而实现对原对象的控制或者进行额外的操作":["109.6"],"不同场景下代理模式又可以细分出很多类别":["109.6"],"回到最开始的场景":["109.7"],"现在有了一个新需求":["109.7"],"我们需要将第一次请求中":["109.7"],"后端返回请求中的":["109.7"],"graytype":["109.7"],"字段塞到后续请求中的":["109.7"],"headers":["109.7","159.13"],"我们可以通过代理模式将":["109.7"],"进行封装":["109.7"],"然后同样暴露出":["109.7"],"假设我们在开发一款外卖网站":["110.1","111.1"],"进入网站的时候":["110.1","111.1"],"第一步需要去请求后端接口得到用户的常用外卖地址":["110.1","111.1"],"然后再去请求其他接口":["110.1","111.1"],"渲染页面":["110.1","111.1","178.7"],"如果什么都不考虑可能会直接这样写":["110.1"],"getaddress":["110.1","111.3"],"异步请求":["110.1","111.3"],"页面里有三个模块":["110.1","110.3","111.1"],"可以看下":["110.2"],"维基百科的介绍":["110.2"],"which":["110.2","111.2"],"23objects":["110.2","111.2"],"oriented":["110.2","111.2"],"programming":["110.2","111.2"],"objects":["110.2","111.2"],"named":["110.2","111.2"],"maintains":["110.2"],"its":["110.2","205.5","216.2"],"dependents":["110.2"],"called":["110.2"],"observers":["110.2"],"notifies":["110.2"],"them":["110.2"],"automatically":["110.2"],"any":["110.2","132.3","156.3","156.13","156.14","184.6","188.0"],"state":["110.2","134.4","156.2","156.14","178.1","178.5","178.6","206.5","206.12","206.14","208.4","209.9","283.11"],"changes":["110.2"],"usually":["110.2"],"calling":["110.2"],"one":["110.2"],"回到开头的场景":["110.3"],"我们可以利用观察者模式将获取地址后的一系列后续操作解耦出来":["110.3"],"如果使用了观察者模式可能会这样写":["111.1"],"回忆一下观察者模式":["111.2"],"让我们改造下开头写的观察者模式的代码":["111.3"],"地址模块":["111.3"],"eventbus":["111.3","111.4"],"实际工程中可能遇到一些特殊场景":["111.4"],"由于":["111.4","133.7","177.7","179.28","179.29","181.0","216.3","218.5","228.0","232.4"],"一般在一个异步事件中执行":["111.4"],"如果这个异步事件突然执行的变快了":["111.4"],"就可能造成某个事件先":["111.4"],"然后某个模块才进行了":["111.4"],"此时我们可以对":["111.4"],"进行一定的改写":["111.4"],"使得先订阅事件":["111.4"],"后触发事件成为可能":["111.4"],"为了不改动原有逻辑":["111.4"],"我们可以通过":["111.4","127.46"],"进行改写":["111.4"],"eventproxy":["111.4"],"eventbusoriginal":["111.4"],"offlinestack":["111.4"],"listen":["111.4","138.22","138.29","138.31"],"进入一个营销活动页面":["112.1"],"会根据后端下发的不同":["112.1"],"前端页面展示不同的弹窗":["112.1"],"getmaindata":["112.1","112.3"],"看下":["112.2"],"的定义":["112.2"],"策略模式作为一种软件设计模式":["112.2"],"指对象有某个行为":["112.2"],"但是在不同的场景中":["112.2"],"该行为有不同的实现算法":["112.2"],"比如每个人都要":["112.2"],"交个人所得税":["112.2"],"但是":["112.2","126.3","140.3","166.2"],"在中国交个人所得税":["112.2"],"在美国交个人所得税":["112.2"],"就有不同的算税方法":["112.2"],"定义了一族算法":["112.2"],"业务规则":["112.2"],"封装了每个算法":["112.2"],"这族的算法可互换代替":["112.2"],"interchangeable":["112.2"],"看一下如果是":["112.2"],"java":["112.2"],"语言会怎么实现":["112.2"],"strategyexample":["112.2"],"application":["112.2","175.4","181.0"],"将所有弹窗方法从业务代码":["112.3"],"中抽离出来":["112.3"],"只暴露一个打开弹窗的函数供业务调用":["112.3"],"openpop":["112.3"],"表单验证也是一个典型场景":["112.4"],"常用的":["112.4"],"我们需要验证用户输入字段是否是数字":["112.4"],"是否必填":["112.4"],"是否是数组":["112.4"],"还有自定义的一些验证":["112.4"],"同样可以通过策略模式实现":["112.4"],"从而使得代码更易维护和扩展":["112.4"],"如果使用过":["112.4"],"对下边表单的":["112.4"],"rule":["112.4"],"一定很熟悉":["112.4"],"required":["112.4","221.4"],"message":["112.4","157.2","204.3"],"请输入名字":["112.4"],"请输入number":["112.4"],"年龄必须大于":["112.4"],"概念":["113.0","113.3"],"富":["113.0"],"时代":["113.0","173.82"],"讲个故事":["113.1"],"为了更好的理解":["113.1"],"我们先来讲个故事":["113.1"],"我需要盖一个房子":["113.1"],"虚拟机与容器":["113.2"],"开始之前":["113.2"],"我们来做一些基础知识的储备":["113.2"],"虚拟机":["113.2","177.14"],"虚拟化硬件":["113.2"],"virtual":["113.2","178.1","178.7","179.56"],"machine":["113.2"],"指通过软件模拟的":["113.2"],"具有完整硬件系统功能的":["113.2"],"运行在一个完全隔离环境中的完整计算机系统":["113.2"],"在实体计算机中能够完成的工作在虚拟机中都能够实现":["113.2"],"在计算机中创建虚拟机时":["113.2"],"需要将实体机的部分硬盘和内存容量作为虚拟机的硬盘和内存容量":["113.2"],"每个虚拟机都有独立的":["113.2"],"认识":["113.3"],"ship":["113.4"],"搭建":["113.4"],"运输":["113.4"],"命令行安装":["113.5"],"homebrew":["113.5","114.6"],"cask":["113.5"],"已经支持":["113.5"],"因此可以很方便的使用":["113.5"],"来进行安装":["113.5"],"执行如下命令":["113.5"],"tbody":["113.5","113.6"],"tr":["113.5","113.6"],"td":["113.5","113.6"],"gutter":["113.5","113.6"],"pre":["113.5","113.6","241.6","241.7","241.9","286.55"],"br":["113.5","113.6"],"快速开始":["113.6"],"安装完":["113.6"],"之后":["113.6"],"我们先打个实际项目的镜像":["113.6"],"边学边用":["113.6"],"首先需要大致了解一下我们将会用到的":["113.6"],"个命令":["113.6"],"基于哪个镜像来实现":["113.6"],"maintainer":["113.6"],"镜像创建者":["113.6"],"声明环境变量":["113.6"],"执行命令":["113.6"],"添加宿主机文件到容器里":["113.6"],"有需要解压的文件会自动解压":["113.6"],"copy":["113.6","114.12"],"添加宿住机文件到容器里":["113.6"],"workdir":["113.6"],"工作目录":["113.6"],"expose":["113.6"],"容器内应用可使用的端口":["113.6"],"cmd":["113.6","144.4"],"容器启动后所执行的程序":["113.6"],"如果执行":["113.6"],"后面跟启动命令会被覆盖掉":["113.6"],"entrypoint":["113.6"],"功能相同":["113.6"],"但需":["113.6"],"不会覆盖":["113.6"],"如果需要覆盖可增加参数":["113.6"],"来覆盖":["113.6"],"volume":["113.6"],"数据卷":["113.6"],"将宿主机的目录映射到容器中的目录":["113.6"],"新建项目":["113.6"],"为了快捷":["113.6"],"我们直接使用":["113.6"],"脚手架构建项目":["113.6","114.8"],"尝试启动一下":["113.6"],"serve":["113.6"],"访问地址":["113.6"],"项目就绪":["113.6"],"我们接着为项目打包":["113.6"],"这时候":["113.6"],"项目目录下的":["113.6"],"就是我们要部署的静态资源了":["113.6"],"我们继续下一步":["113.6"],"需要注意":["113.6","154.8"],"前端项目一般分两类":["113.6"],"一类直接":["113.6"],"静态部署":["113.6"],"一类需要启动":["113.6"],"本节我们只考虑第一种":["113.6"],"下文我会详细说明":["113.6"],"dockerfile":["113.6","113.7","114.9","114.27"],"amp":["113.6"],"常规操作":["113.7"],"到这里":["113.7"],"恭喜你已经完成了":["113.7"],"的入门项目":["113.7"],"如果还想继续深入":["113.7"],"不妨接着往下看看":["113.7"],"参数使用":["113.7"],"指定基础镜像":["113.7"],"所有构建的镜像都必须有一个基础镜像":["113.7"],"且":["113.7","125.0"],"命令必须是":["113.7"],"的第一个命令":["113.7"],"指定从一个镜像构建起一个新的镜像名字":["113.7"],"tag":["113.7","241.9"],"指定镜像的版本":["113.7"],"最佳实践":["113.8","177.10"],"在掌握":["113.8"],"常规操作之后":["113.8"],"我们很容易就可以打出自己想要的项目镜像":["113.8"],"起步":["114.0"],"命令行工具":["114.3"],"在本地安装":["114.5"],"使用vue":["114.8"],"touch":["114.11"],"写入":["114.11","114.12"],"打开dockerfile文件":["114.12"],"命令来构建镜像":["114.13"],"设置容器在后台运行":["114.15"],"表示端口映射":["114.15"],"可以在浏览器中看到对应的页面":["114.16"],"如果你想为社区贡献力量":["114.17"],"那么需要将镜像发布":["114.17"],"方便其他开发者使用":["114.17"],"发布镜像需要如下步骤":["114.17"],"大部分时候":["114.21"],"我们不需要自己构建镜像":["114.21"],"我们可以在官方镜像仓库":["114.21"],"hub拉取镜像":["114.21"],"可以简单使用命令":["114.21"],"但并不是所有的镜像都可以在镜像仓库中找到":["114.22"],"另外我们也需要为我们自己的业务应用去构建镜像":["114.22"],"在使用":["114.23"],"部署自己应用时":["114.23"],"往往需要独立构建镜像":["114.23"],"基于一个旧有的基础镜像":["114.24"],"格式如下":["114.24"],"把宿主机的文件或目录加入到镜像的文件系统中":["114.25"],"在镜像中执行命令":["114.26"],"指定容器如何启动":["114.27"],"中只允许有一个":["114.27"],"镜像与容器的关系":["114.28"],"镜像创建一个最简单的容器":["114.29"],"启动一个最简单的":["114.29"],"来启动容器":["114.29"],"ps":["114.29","114.30"],"查看容器启动状态":["114.29"],"启动":["114.29"],"容器":["114.29"],"并在本地":["114.29"],"端口进行访问":["114.29"],"it":["114.29","206.14","216.2","239.3"],"列出所有容器":["114.30"],"command":["114.30","260.3"],"status":["114.30"],"ports":["114.30"],"names":["114.30","219.6"],"404e88f0d90c":["114.30"],"如果某时某个容器出现问题":["114.31"],"compose":["114.32"],"v2":["114.32"],"使用了":["114.32","195.9"],"命令去替代了":["114.32"],"年前端大事记":["115.0"],"开始实施私有网络控制策略":["115.0"],"私有网络请求指的是目标服务器的":["115.0"],"地址比请求发起者获取的":["115.0"],"地址更私密的请求":["115.0"],"从公共网站":["115.0"],"www":["115.0","175.4","262.0"],"douyin":["115.0"],"到内网网站":["115.0"],"argus":["115.0"],"bytedance":["115.0"],"net":["115.0"],"的请求":["115.0"],"或从内网网站到":["115.0"],"据":["115.0"],"统计":["115.0"],"有数十万人遭受了针对私有网络的攻击":["115.0"],"简单说":["115.0"],"就是你打开一个公共的网站":["115.0"],"这个网站里会去请求你内网里的地址":["115.0"],"然后窃取信息":["115.0"],"基于此类问题":["115.0"],"提出了私有网络控制策略":["115.0"],"此策略会限制网站向私有网络上的服务器发送请求的能力":["115.0"],"你必须要部署下面两个":["115.0"],"header":["115.0","175.2","175.3"],"否则所有私有网络访问都会失败":["115.0"],"private":["115.0"],"resonse":["115.0"],"了解更多":["115.0"],"重大更新":["115.0"],"cors":["115.0"],"增加了两个新的请求头":["115.0"],"成为新的默认版本":["115.0"],"年":["115.0","173.2","173.42","173.43","173.44"],"月":["115.0","263.6"],"日":["115.0"],"除了":["115.0"],"核心库以外":["115.0"],"还几乎改进了框架的每个方面":["115.0"],"的极速构建工具链":["115.0"],"setup":["115.0","216.2","219.6","219.9","220.0"],"带来的开发体验更丝滑的组合式":["115.0"],"语法":["115.0","168.25"],"volar":["115.0"],"提供的单文件组件":["115.0"],"ide":["115.0"],"提供的针对单文件组件的命令行类型检查和生成":["115.0"],"提供的更简洁的状态管理":["115.0"],"新的开发者工具扩展":["115.0"],"同时支持":["115.0"],"并且提供一个插件系统来允许社区库自行扩展开":["115.0"],"发者工具面板":["115.0"],"zhuanlan":["115.0"],"zhihu":["115.0"],"被禁用":["115.0"],"自":["115.0"],"版本开始":["115.0"],"将变为可读属性":["115.0"],"当两个页面的":["115.0"],"都设置为二级域名的时候":["115.0"],"浏览器就会将两个来源视为同源":["115.0"],"利用这个方法我们可以绕过浏览器的同源策略":["115.0"],"也就是意味着上述这种跨域的方式被禁用了":["115.0"],"后续可以替换为":["115.0"],"postmessage":["115.0"],"的跨域方案":["115.0"],"又搞事情":["115.0"],"这种跨域方案要被禁用了":["115.0"],"blog":["115.0"],"immuta":["115.0"],"是当前最流行的跨平台":["115.0"],"在最新的":["115.0"],"v17":["115.0","205.8","205.10","207.5"],"版本中":["115.0"],"增加了对":["115.0"],"的支持":["115.0","205.10"],"后续无需再借助":["115.0"],"needle":["115.0"],"等第三方请求库了":["115.0"],"这并不是简单的支持了一个新的原生":["115.0"],"请求库那么简单":["115.0"],"这意味着很多之前在":["115.0"],"中用到":["115.0"],"包也可以在":["115.0"],"里以同样的方式工作了":["115.0"],"这些包同样可以实现跨平台兼容了":["115.0"],"可以和":["115.0"],"请求的跨平台兼容了":["115.0"],"agent":["115.0"],"携带信息即将进行删减":["115.0"],"为了减轻":["115.0"],"的身份标识作用":["115.0"],"正在逐步减少":["115.0"],"中的信息":["115.0"],"以下几部分信息都会逐步缩减":["115.0"],"请求标头":["115.0"],"useragentgetter":["115.0"],"platformgetter":["115.0"],"appversiongetter":["115.0"],"浏览器会推荐大家使用新的":["115.0"],"里面只会包括下面几部分信息":["115.0"],"sec":["115.0"],"ch":["115.0"],"ua":["115.0","121.7"],"浏览器名称和主要":["115.0"],"重要版本":["115.0"],"mobile":["115.0","156.14","156.24","284.35","284.36","284.37"],"是否为移动设备":["115.0"],"platform":["115.0"],"操作系统名称":["115.0"],"这样的版本号将会被简化为":["115.0"],"这大大的减轻了":["115.0"],"对用户的身份标识作用":["115.0"],"具体减少计划":["115.0"],"useragent":["115.0","296.2"],"appversion":["115.0"],"会在控制台打印警告":["115.0"],"支持为的网站注册原始试用":["115.0"],"开始对减少的":["115.0"],"字符串进行测试和反馈":["115.0"],"将会减少":["115.0"],"minor":["115.0"],"patch":["115.0","195.9","216.4","221.7","232.4","236.6"],"版本信息":["115.0"],"推荐迁移到新的":["115.0"],"pc端的":["115.0"],"字符串和":["115.0"],"将会直接缩减":["115.0"],"移动端的的":["115.0"],"将会缩减":["115.0"],"全面缩减":["115.0"],"mp":["115.0"],"weixin":["115.0"],"qq":["115.0"],"tcuioqzo0":["115.0"],"07":["115.0"],"将新增两个原始数据类型":["115.0"],"即将推出两个新的数据类型":["115.0"],"tuple":["115.0","182.2"],"该提案目前已经到达":["115.0"],"常用命令":["116.0"],"stash":["116.1","118.0","118.2","118.3","118.4"],"存储临时代码":["116.1"],"列出当前配置":["116.2"],"配置用户信息":["116.3"],"配置解决冲突时使用哪种差异分析工具":["116.4"],"比如要使用vimdiff":["116.4"],"本地仓库上的操作":["117.0","117.1"],"查看本地仓库关联的远程仓库":["117.1"],"remote":["117.1","138.21","138.40"],"在克隆完每个远程仓库后":["117.1"],"远程仓库默认为origin":["117.1"],"v的参数后":["117.1"],"会显示远程仓库的url地址":["117.1"],"添加远程仓库":["117.1"],"一般会取一个简短的别名":["117.1"],"一般我们总会有些文件无需纳入":["117.2"],"的管理":["117.2"],"也不希望它们总出现在未跟踪文件列表":["117.2"],"通常都是些自动生成的文件":["117.2"],"比如日志文件":["117.2"],"或者编译过程中创建的临时文件等":["117.2"],"储藏":["118.1"],"创建新分支branchname":["118.6"],"展示了几个常用的stash命令":["118.7"],"工作区":["119.0"],"提交工作区所有文件到暂存区":["119.3"],"删除工作区文件":["119.4"],"并且也从暂存区删除对应文件的记录":["119.4"],"file1":["119.4","286.40"],"file2":["119.4"],"从暂存区中删除文件":["119.4"],"但是工作区依然还有该文件":["119.4"],"cached":["119.4","215.2"],"将暂存区中的文件提交到本地仓库中":["119.8"],"即打上新版本":["119.8"],"比较暂存区与上一版本的差异":["119.9"],"使用的标签有两种类型":["119.10"],"轻量级的":["119.10"],"lightweight":["119.10"],"和含附注的":["119.10"],"annotated":["119.10"],"轻量级标签就像是个不会变化的分支":["119.10"],"实际上它就是个指向特定提交对象的引用":["119.10"],"而含附注标签":["119.10"],"实际上是存储在仓库中的一个独立对象":["119.10"],"它有自身的校验和信息":["119.10"],"包含着标签的名字":["119.10"],"电子邮件地址和日期":["119.10"],"以及标签说明":["119.10"],"标签本身也允许使用":["119.10"],"创建分支":["119.11"],"branch":["119.11"],"testing":["119.11"],"从当前所处的分支切换到其他分支":["119.11"],"checkout":["119.11"],"严格":["120.2","120.3","120.4","284.81"],"doctype":["120.2","120.3","150.2","160.0","168.3","168.7","172.0","286.47"],"w3c":["120.3"],"dtd":["120.3","120.4"],"xhtml":["120.3"],"浏览器解析时到底使用严格模式还是混杂模式":["120.4"],"与网页中的":["120.4"],"直接相关":["120.4"],"严格模式与混杂模式存在的意义与其来源密切相关":["120.5"],"严格模式下":["120.6"],"你必须要知道的meta标签知识":["121.0"],"概览":["121.0"],"meta标签一般放在整个":["121.0"],"页面的":["121.0"],"head":["121.0","150.2","168.7","173.31","177.11","179.44"],"用来表示网页的作者的名字":["121.1"],"是一段简短而精确的":["121.2"],"与页面内容相关的关键词":["121.3"],"viewport":["121.4","147.5"],"视口":["121.4"],"的初始大小提供指示":["121.4"],"表示爬虫对此页面的处理行为":["121.5"],"或者说":["121.5"],"用来指定双核浏览器的渲染方式":["121.6"],"比如360浏览器":["121.6"],"我们可以通过这个设置来指定360浏览器的渲染方式":["121.6"],"compatible":["121.7"],"我们最常见的":["121.7"],"equiv":["121.7"],"值可能就是":["121.7"],"什么是html":["122.0"],"超文本标记语言":["122.0"],"hyper":["122.0","172.0"],"markup":["122.0"],"language":["122.0"],"是用来描述网页的一种语言":["122.0"],"是一种标记语言":["122.0"],"不是编程语言":["122.0"],"标记语言是一套标记标签":["122.0"],"web标准":["122.0"],"web标准不是某一个标准":["122.0"],"而是由w3c":["122.0"],"把文字有条理的分段显示":["122.2"],"强制文本换行":["122.4"],"突出重要性":["122.5"],"比普通文字更重要":["122.5"],"在网页中":["122.5"],"有时需要把文字设置为粗体":["122.5"],"斜体或者下划线等效果":["122.5"],"这时就需要用到html中的文本格式化标签":["122.5"],"用于定义html页面中的图像":["122.6"],"是个单标签":["122.6"],"img":["122.6","123.1","147.0","169.3","286.55"],"图像url":["122.6"],"相对路径":["122.7"],"以引用文件所在的位置为基础建立出的目录路径":["122.7"],"文件相对于html页面的位置":["122.7"],"用于定义链接":["122.8"],"作用是从一个页面跳转到另一个页面":["122.8"],"anchor":["122.8","218.8","222.3","222.7","236.4"],"显示":["122.10","122.11"],"展示数据":["122.10"],"不是用来布置页面":["122.10"],"一般表头单元格位于表格的第一行或第一列":["122.11"],"表头单元格中的文本内容":["122.11"],"加粗居中":["122.11"],"th标签":["122.11"],"表示html表格的表头部分":["122.11"],"可能表格很长":["122.12"],"为了更好的表示表格标签的语义":["122.12"],"可以将表格分割成":["122.12"],"合并单元格的方式":["122.13"],"跨行合并":["122.13"],"rowspan":["122.13"],"用来布局":["122.14"],"ul标签":["122.15"],"表示html页面中的无序列表":["122.15"],"一般以项目符号呈现列表项":["122.15"],"而列表项使用":["122.15"],"ol标签":["122.16"],"用于定义有序列表":["122.16"],"列表排序以数字来显示":["122.16"],"并且使用":["122.16"],"通常在网页底部使用":["122.17"],"用于对术语或者名词进行解释和描述":["122.17"],"自定义列表的列表项前没有任何项目符号":["122.17"],"使用表单是为了":["122.18"],"包含表单元素的区域":["122.19"],"在html标签中":["122.19"],"form标签":["122.19"],"用于定义表单域":["122.19"],"以实现用户信息的收集和传递":["122.19"],"表单元素":["122.20"],"包含一个type属性":["122.21"],"根据不同的type属性值":["122.21"],"输入的字段有很多种形式":["122.21"],"属性值":["122.21"],"type属性的属性值如下":["122.21"],"定义单行的输入字段":["122.21"],"label标签为input元素定义标注":["122.22"],"label标签用于绑定一个表单元素":["122.22"],"页面中如果有多个选项让用户选择":["122.23"],"并且想要节约空间时使用":["122.23"],"用户输入内容较多时使用":["122.24"],"常见于留言板":["122.24"],"13个很酷但很少有人知道的html元素":["123.0"],"meter":["123.0"],"progress":["123.0"],"元素是显示进度条的语义正确方式":["123.0"],"除了在已知范围内显示标量测量值外":["123.0"],"建议不仅限于文本":["123.1"],"还可以与":["123.1"],"日期":["123.1"],"时间":["123.1"],"甚至":["123.1"],"范围":["123.1"],"输入一起使用":["123.1"],"虽然建议的默认样式看起来":["123.1"],"很简陋":["123.1"],"但是我们可以使用css设置其样式":["123.1"],"area":["123.1"],"并允许我们创建":["123.1"],"图像映射":["123.1"],"这是":["123.1"],"具有可单击区域图像":["123.1"],"的一种使用办法":["123.1"],"workplace":["123.1"],"alt":["123.1"],"usemap":["123.1"],"workmap":["123.1"],"的异步":["124.0"],"js是一门单线程的语言":["124.0"],"浅拷贝是创建一个新对象":["125.0"],"这个对象有着原始对象属性值的一份精确拷贝":["125.0"],"如果属性是基本类型":["125.0"],"拷贝的就是基本类型的值":["125.0"],"如果属性是引用类型":["125.0"],"拷贝的就是内存地址":["125.0"],"如果其中一个对象改变了这个地址":["125.0"],"就会影响到另一个对象":["125.0"],"深拷贝是将一个对象从内存中完整的拷贝一份出来":["125.0"],"从堆内存中开辟一个新的区域存放新对象":["125.0"],"修改新对象不会影响原对象":["125.0"],"a1":["125.0"],"a2":["125.0"],"shallowclone":["125.0"],"浅拷贝方法":["125.0"],"新旧对象还是共享同一块内存":["125.0"],"a3":["125.0"],"deepclone":["125.0"],"深拷贝方法":["125.0"],"assign":["125.1"],"函数库lodash的":["125.2","125.7"],"clone方法":["125.2"],"该函数库也有提供":["125.2","125.7"],"展开运算符":["125.3"],"展开运算符是一个":["125.3"],"es2015特性":["125.3"],"stringify":["125.6","130.0","130.1","130.2","130.3","130.4","130.5","130.6","130.7","130.8","130.9","130.10","130.11","215.2","295.2"],"arr":["125.6","131.2","131.5","156.14","173.4","174.21","174.22","174.33","174.51","179.61","286.15","286.49"],"clonedeep方法":["125.7"],"extend":["125.8","154.10"],"有提供一個":["125.8"],"手写递归方法":["125.9"],"递归方法实现深度克隆原理":["125.9"],"遍历对象":["125.9"],"数组直到里边都是基本数据类型":["125.9"],"然后再去复制":["125.9"],"就是深度拷贝":["125.9"],"有种特殊情况需注意就是对象存在":["125.9"],"循环引用":["125.9"],"的情况":["125.9"],"即对象的属性直接的引用了自身的情况":["125.9"],"解决循环引用问题":["125.9"],"我们可以额外开辟一个存储空间":["125.9"],"来存储当前对象和拷贝对象的对应关系":["125.9"],"当需要拷贝当前对象时":["125.9"],"什么是同源策略及其限制内容":["126.2"],"同源策略是一种约定":["126.2"],"它是浏览器最核心也最基本的安全功能":["126.2"],"如果缺少了同源策略":["126.2"],"浏览器很容易受到xss":["126.2"],"websocket":["126.3","159.9","162.0","179.47"],"websocket是html5的一个持久化的协议":["126.3"],"它实现了浏览器与服务器的全双工通信":["126.3"],"同时也是跨域的一种解决方案":["126.3"],"websocket和http都是应用层协议":["126.3"],"都基于":["126.3"],"node中间件代理":["126.4"],"两次跨域":["126.4"],"实现原理":["126.4","126.7","147.0","258.2"],"同源策略是浏览器需要遵循的标准":["126.4"],"而如果是服务器向服务器请求就无需遵循同源策略":["126.4"],"代理服务器":["126.4"],"需要做以下几个步骤":["126.4"],"接受客户端请求":["126.4"],"将请求":["126.4"],"转发给服务器":["126.4"],"拿到服务器":["126.4"],"响应":["126.4"],"数据":["126.4","152.8","219.3"],"转发给客户端":["126.4"],"我们先来看个例子":["126.4"],"本地文件index":["126.4"],"html文件":["126.4"],"通过代理服务器":["126.4"],"nginx反向代理":["126.5"],"实现原理类似于node中间件代理":["126.5","175.21"],"需要你搭建一个中转nginx服务器":["126.5","175.21"],"用于转发请求":["126.5","175.21"],"使用nginx反向代理实现跨域":["126.5","175.21"],"是最简单的跨域方式":["126.5","175.21"],"只需要修改nginx的配置即可解决跨域问题":["126.5","175.21"],"支持所有浏览器":["126.5","175.21"],"支持session":["126.5","175.21"],"不需要修改任何代码":["126.5","175.21"],"并且不会影响服务器性能":["126.5","175.21"],"实现思路":["126.5","162.0","175.21"],"通过nginx配置一个代理服务器":["126.5","175.21"],"域名与domain1相同":["126.5","175.21"],"端口不同":["126.5","175.21"],"做跳板机":["126.5","175.21"],"反向代理访问domain2接口":["126.5","175.21"],"并且可以顺便修改cookie中domain信息":["126.5","175.21"],"方便当前域cookie写入":["126.5","175.21"],"实现跨域登录":["126.5","175.21"],"先下载nginx":["126.5"],"name属性的独特之处":["126.6"],"name值在不同的页面":["126.6"],"甚至不同域名":["126.6"],"location":["126.7","134.3","138.29","138.35","138.38"],"html欲与c":["126.7"],"html跨域相互通信":["126.7"],"通过中间页b":["126.7"],"iframe该方式只能用于二级域名相同的情况下":["126.8"],"至发稿日为止有九个ecma":["127.1"],"262版本发表":["127.1"],"其历史版本如下":["127.1"],"1997年6月":["127.1"],"第一版":["127.1"],"1998年6月":["127.1"],"修改格式":["127.1"],"使其与iso":["127.1"],"iec16262国际标准一样":["127.1"],"1999年12月":["127.1"],"tc39":["127.2"],"technical":["127.2"],"committee":["127.2"],"是一个推动javascript发展的委员会":["127.2"],"在es6以前":["127.3"],"只有":["127.3","225.4"],"一种声明方式":["127.3"],"但是在es6之后":["127.3"],"就多了":["127.3"],"在es6之前":["127.4","127.7","127.9","127.11"],"如果我们要生成一个实例对象":["127.4"],"传统的方法就是写一个构造函数":["127.4"],"例子如下":["127.4","127.17","127.49"],"箭头函数表达式的语法比函数表达式更简洁":["127.5"],"并且没有自己的":["127.5"],"parameter":["127.6","127.33"],"defaults":["127.6","204.2"],"如果我们要拼接字符串":["127.7"],"则需要像这样":["127.7"],"destructuring":["127.8"],"assignment":["127.8"],"我们通过解构赋值":["127.8"],"可以将属性":["127.8"],"js并没有模块化的概念":["127.9"],"有的也只是社区定制的类似commonjs和amd之类的规则":["127.9"],"例如基于commonjs的nodejs":["127.9"],"circle":["127.9","170.5","170.6","170.8","170.11","170.15"],"spread":["127.10"],"operator":["127.10"],"扩展操作符可以在函数调用":["127.10"],"数组构造时":["127.10"],"将数组表达式或者string在语法层面展开":["127.10"],"还可以在构造字面量对象时":["127.10"],"将对象表达式按key":["127.10"],"value的方式展开":["127.10"],"比如在es5的时候":["127.10"],"attribute":["127.11"],"shorthand":["127.11"],"如果我们要将某个变量赋值为同样名称的对象元素":["127.11"],"则需要":["127.11"],"是es6提供的一种异步解决方案":["127.12"],"比回调函数更加清晰明了":["127.12"],"翻译过来就是承诺的意思":["127.12"],"这个承诺会在未来有一个确切的答复":["127.12"],"并且该承诺有三种状态":["127.12"],"等待中":["127.12"],"pending":["127.12","132.1","205.15","208.5"],"完成了":["127.12"],"resolved":["127.12"],"拒绝了":["127.12"],"语句在可迭代对象":["127.13"],"是一种基本数据类型":["127.14"],"函数会返回symbol类型的值":["127.14"],"该类型具有静态属性和静态方法":["127.14"],"它的静态属性会暴露几个内建的成员对象":["127.14"],"iterator":["127.15"],"生成器":["127.15"],"generator":["127.15"],"是一种迭代的机制":["127.15"],"为各种不同的数据结构提供统一的访问机制":["127.15"],"任何数据结构只要内部有":["127.15"],"就可以完成依次迭代操作":["127.15"],"一旦创建":["127.15"],"weakset":["127.16","173.44","176.3"],"对象允许你存储任何类型的唯一值":["127.16"],"无论是原始值或者是对象引用":["127.16"],"所以我们可以通过":["127.16"],"实现数组去重":["127.16"],"numbers":["127.16"],"weakmap":["127.17","173.44","176.3"],"对象保存键值对":["127.17"],"任何值":["127.17"],"对象或者原始值":["127.17"],"都可以作为一个键或一个值":["127.17"],"我们甚至可以使用":["127.17"],"nan":["127.17","173.26"],"来作为键值":["127.17"],"mymap":["127.17","131.1"],"reflect":["127.18"],"对象用于定义基本操作的自定义行为":["127.18"],"如属性查找":["127.18"],"赋值":["127.18"],"枚举":["127.18"],"函数调用等":["127.18"],"是一个内置的对象":["127.18"],"它提供拦截":["127.18"],"操作的方法":["127.18"],"修饰符":["127.20"],"u212a":["127.20"],"iu":["127.20"],"regexp":["127.21","127.22","216.2"],"二进制表示法":["127.23"],"0b或0b开头":["127.23"],"表示二进制":["127.23"],"0bxx":["127.23"],"八进制表示法":["127.23"],"0o或0o开头":["127.23"],"转换具有":["127.24"],"iterator接口":["127.24"],"的数据结构为真正数组":["127.24"],"返回新数组":["127.24"],"转换一组值为真正数组":["127.24"],"includes":["127.25","154.18"],"方法用来判断一个数组是否包含一个指定的值":["127.25"],"具有与math":["127.26"],"自es7起":["127.27"],"带标签的模版字面量遵守以下转义序列的规则":["127.27"],"unicode字符以":["127.27"],"可以解决回调地狱的问题":["127.28"],"但是链式调用太多":["127.28"],"则会变成另一种形式的回调地狱":["127.28"],"面条地狱":["127.28"],"所以在es8里则出现了":["127.28"],"的语法糖":["127.28"],"专门解决这个问题":["127.28"],"我们先看一下下面的":["127.28"],"values":["127.29"],"entries":["127.30","147.5"],"方法返回一个给定对象自身可枚举属性的键值对数组":["127.30"],"方法用另一个字符串填充当前字符串":["127.31"],"重复":["127.31"],"如果需要的话":["127.31"],"方法会用一个字符串填充当前字符串":["127.32"],"如果需要的话则重复填充":["127.32"],"lists":["127.33","195.8"],"calls":["127.33"],"trailing":["127.33"],"commas":["127.33"],"在es5里就添加了对象的尾逗号":["127.33"],"不过并不支持函数参数":["127.33"],"但是在es8之后":["127.33"],"便开始支持这一特性":["127.33"],"参数定义":["127.33"],"因安全问题":["127.34"],"暂时在chrome跟firefox中被禁用":["127.34"],"sharedarraybuffer":["127.34","127.35"],"提供了一组静态方法用来对":["127.35"],"对象进行原子操作":["127.35"],"方法如下":["127.35"],"atomics":["127.35"],"将指定位置上的数组元素与给定的值相加":["127.35"],"并返回相加前该元素的值":["127.35"],"getownpropertydescriptors":["127.36"],"方法用来获取一个对象的所有自身属性的描述符":["127.36"],"语句会在异步或者同步可迭代对象上创建一个迭代循环":["127.37"],"es9开始":["127.38"],"模板字符串允许嵌套支持常见转义序列":["127.38"],"lookbehind":["127.39"],"断言":["127.39"],"首先我们得先知道什么是":["127.39"],"assertion":["127.39"],"是一个对当前匹配位置之前或之后的字符的测试":["127.39"],"它不会实际消耗任何字符":["127.39"],"unicode":["127.40"],"转义":["127.40"],"正则表达式中的unicode转义符允许根据unicode字符属性匹配unicode字符":["127.40"],"它允许区分字符类型":["127.40"],"例如大写和小写字母":["127.40"],"数学符号和标点符号":["127.40"],"部分例子代码如下":["127.40"],"匹配所有数字":["127.40"],"regex":["127.40","127.41","138.33"],"dotall":["127.41"],"在以往的版本里":["127.41","127.42"],"js的正则的":["127.41"],"只能匹配emoji跟行终结符以外的所有文本":["127.41"],"js的正则分组是无法命名的":["127.42"],"所以容易混淆":["127.42"],"例如下面获取年月日的例子":["127.42"],"很容易让人搞不清哪个是月份":["127.42"],"哪个是年份":["127.42"],"matched":["127.42"],"es6中添加了数组的扩展操作符":["127.43"],"让我们在操作数组时更加简便":["127.43"],"美中不足的是并不支持对象扩展操作符":["127.43"],"但是在es9开始":["127.43"],"这一功能也得到了支持":["127.43"],"finally":["127.44"],"方法会返回一个":["127.44"],"flat":["127.45","173.59","173.99"],"flatmap":["127.45"],"方法会按照一个可指定的深度递归遍历数组":["127.45"],"并将所有元素与遍历到的子数组中的元素合并为一个新数组返回":["127.45"],"方法和深度为1的":["127.45"],"几乎相同":["127.45"],"trimstart":["127.46"],"trimleft":["127.46"],"trimend":["127.46"],"trimright":["127.46"],"在es5中":["127.46"],"trim":["127.46","181.0","241.6"],"来去掉字符首尾的空格":["127.46"],"但是却无法只去掉单边的":["127.46"],"fromentries":["127.47"],"是一个只读属性":["127.48"],"它会返回":["127.48"],"对象的可选描述的字符串":["127.48"],"matchall":["127.49"],"方法返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器":["127.49"],"并且返回一个不可重启的迭代器":["127.49"],"tostring":["127.50","176.5"],"返回注释与空格":["127.50"],"在以往的版本中":["127.50","127.51"],"是一种内置对象":["127.52"],"它提供了一种方法来表示大于":["127.52"],"的整数":["127.52"],"这原本是":["127.52"],"javascript中可以用":["127.52"],"表示的最大数字":["127.52"],"语句":["127.54"],"静态的":["127.54"],"语句用于导入由另一个模块导出的绑定":["127.54"],"无论是否声明了":["127.54"],"严格模式":["127.54"],"导入的模块都运行在严格模式下":["127.54"],"在es10之前":["127.55"],"如果我们要实现一个简单的计数器组件":["127.55"],"我们可能会这么写":["127.55"],"写法":["127.55"],"counter":["127.55","181.0"],"htmlelement":["127.55"],"的事件循环":["128.0"],"事件循环又叫做消息循环":["128.0"],"是浏览器渲染主线程的工作方式":["128.0"],"官方叫做":["128.0"],"in的特点":["129.1"],"循环返回的值都是数据结构的":["129.1"],"键值名":["129.1"],"in遍历数组的毛病":["129.3"],"特点":["129.4","177.13"],"循环用来获取一对键值对中的":["129.4"],"值":["129.4","173.98"],"of遍历类数组对象代码示例":["129.6"],"字符串":["129.6","156.14","236.1"],"str":["129.6","286.13"],"无论是for":["129.7"],"in还是for":["129.7"],"of语句都是迭代一些东西":["129.7"],"它们之间的主要区别在于它们的迭代方式":["129.7"],"对于for":["129.7"],"in循环":["129.7"],"由于并非所有厂商都遵循相同的实现方式":["129.7"],"因此仍未指定一个明确的枚举顺序":["129.7"],"第一大特性总结":["130.2"],"第二大特性":["130.3"],"非数组对象的属性不能保证以特定的顺序出现在序列化后的字符串中":["130.3"],"第三大特性":["130.4"],"转换值如果有":["130.4"],"第四大特性":["130.5"],"第五大特性":["130.6"],"第六大特性":["130.7"],"第七大特性":["130.8"],"关于对象属性的是否可枚举":["130.8"],"第八大特性":["130.9"],"我们都知道实现深拷贝最简单粗暴的方式就是序列化":["130.9"],"这个方式实现深拷贝会因为序列化的诸多特性从而导致诸多的坑点":["130.9"],"比如现在我们要说的循环引用问题":["130.9"],"对包含循环引用的对象":["130.9"],"第九大特性":["130.10"],"所有以":["130.10"],"symbol":["130.10","231.1"],"为属性键的属性都会被完全忽略掉":["130.10"],"作为函数时":["130.12"],"它有两个参数":["130.12"],"如果是一个数字":["130.13"],"fn":["131.1","131.2","131.3","131.4","131.5","131.6","173.98","176.2","177.9","223.2","252.6","283.1","283.2","283.10","288.2","288.3","288.5"],"myfilter":["131.2"],"mysome":["131.3"],"every":["131.4"],"myevery":["131.4"],"find":["131.5"],"myfind":["131.5"],"findindex":["131.6"],"myfindindex":["131.6"],"mynew":["131.7"],"call":["131.8","173.11","173.98"],"bind":["131.10","173.11","173.98","181.0","206.15"],"mybind":["131.10"],"myinstanceof":["131.11"],"定义":["132.1","150.15"],"static":["132.1","138.35","195.4"],"fulfilled":["132.1"],"rejected":["132.1"],"constructor":["132.1","162.3","173.1","173.4","173.7","176.18","195.4","283.3","283.7","286.33","286.69"],"surper":["132.1"],"赋值初始状态":["132.1"],"race":["132.2"],"myrace":["132.2"],"promises":["132.2","132.3","132.4"],"myany":["132.3"],"reject":["132.3","132.4","173.38","173.61"],"myall":["132.4"],"可以不是数组":["132.4"],"但必须要具有":["132.4"],"broadcast":["133.1","133.9"],"channel":["133.1","195.4"],"可以帮我们创建一个用于广播的通信频道":["133.1"],"是一个可以长期运行在后台的":["133.2"],"能够实现与页面的双向通信":["133.2"],"多页面共享间的":["133.2"],"可以共享":["133.2"],"作为消息的处理中心":["133.2"],"中央站":["133.2"],"即可实现广播效果":["133.2"],"也是":["133.2","181.0"],"pwa":["133.2"],"作为前端最常用的本地存储":["133.3"],"大家应该已经非常熟悉了":["133.3"],"但storageevent这个与它相关的事件有些同学可能会比较陌生":["133.3"],"变化时":["133.3"],"会触发storage事件":["133.3"],"利用这个特性":["133.3"],"我们可以在发送消息时":["133.3"],"把消息写入到某个":["133.3"],"家族的另一个成员":["133.4"],"普通的":["133.4"],"之间是独立运行":["133.4"],"数据互不相通":["133.4"],"而多个":["133.4"],"tab":["133.4","195.7","260.2"],"注册的":["133.4","220.4","220.5","220.6"],"则可以实现数据共享":["133.4"],"在实现跨页面通信时的问题在于":["133.4"],"它无法主动通知所有页面":["133.4"],"我们会使用轮询的方式":["133.4"],"indexeddb":["133.5"],"除了可以利用":["133.5"],"来共享存储数据":["133.5"],"还可以使用其他一些":["133.5"],"全局性":["133.5"],"支持跨页面":["133.5"],"的存储方案":["133.5"],"鉴于大家对":["133.5"],"已经很熟悉":["133.5"],"加之作为":["133.5"],"互联网最早期的存储方案之一":["133.5"],"已经在实际应用中承受了远多于其设计之初的责任":["133.5"],"我们下面会使用":["133.5"],"来实现":["133.5"],"其思路很简单":["133.5"],"方案类似":["133.5"],"消息发送方将消息存至":["133.5"],"接收方":["133.5"],"例如所有页面":["133.5"],"则通过轮询去获取最新的信息":["133.5"],"在这之前":["133.5"],"我们先简单封装几个":["133.5"],"的工具方法":["133.5"],"打开数据库连接":["133.5"],"opener":["133.6"],"当我们使用window":["133.6"],"open打开页面时":["133.6"],"方法会返回一个被打开页面window的引用":["133.6"],"而在未显示指定noopener时":["133.6"],"被打开的页面可以通过window":["133.6"],"opener获取到打开它的页面的引用":["133.6"],"通过这种方式我们就将这些页面建立起了联系":["133.6"],"一种树形结构":["133.6"],"我们把window":["133.6"],"open打开的页面的window对象收集起来":["133.6"],"childwins":["133.6"],"getelementbyid":["133.6","205.2"],"btn":["133.6"],"非同源页面之间的通信":["133.7"],"上面我们介绍了七种前端跨页面通信的方法":["133.7"],"但它们大都受到同源策略的限制":["133.7"],"然而有时候":["133.7"],"我们有两个不同域名的产品线":["133.7"],"也希望它们下面的所有页面之间能无障碍地通信":["133.7"],"那该怎么办呢":["133.7"],"要实现该功能":["133.7"],"可以使用一个用户不可见的":["133.7"],"作为":["133.7","235.4"],"桥":["133.7"],"与父页面间可以通过指定origin来忽略同源限制":["133.7"],"常见的方式包括":["133.9"],"广播模式":["133.9"],"history模式":["134.0","134.4"],"ajax局部刷新":["134.1"],"在单页面web网页中":["134.2"],"单纯的浏览器地址改变":["134.2"],"hash模式":["134.3"],"使用window":["134.3"],"hash属性及窗口的onhashchange事件":["134.3"],"可以实现监听浏览器地址hash值变化":["134.3"],"执行相应的js切换网页":["134.3"],"下面具体介绍几个使用过程中必须理解的要点":["134.3"],"hash指的是地址中":["134.3"],"号以及后面的字符":["134.3"],"也称为散列值":["134.3"],"hash也称作锚点":["134.3"],"概述":["134.4","140.0"],"属性指向":["134.4"],"它表示当前窗口的浏览历史":["134.4"],"当发生改变时":["134.4"],"只会改变页面的路径":["134.4"],"不会刷新页面":["134.4"],"对象保存了当前窗口访问过的所有页面网址":["134.4"],"可以得出当前窗口一共访问过几个网址":["134.4"],"由于安全原因":["134.4"],"浏览器不允许脚本读取这些地址":["134.4"],"但是允许在地址之间导航":["134.4"],"浏览器工具栏的":["134.4"],"前进":["134.4"],"后退":["134.4"],"按钮":["134.4","163.0"],"其实就是对":["134.4"],"对象进行操作":["134.4"],"对象主要有两个属性":["134.4"],"当前窗口访问过的网址数量":["134.4"],"包括当前网页":["134.4"],"堆栈最上层的状态值":["134.4"],"详见下文":["134.4"],"当前窗口访问过多少个网页":["134.4"],"中的计时器能做到精确计时吗":["135.0"],"不行":["135.0"],"转码":["136.0"],"escape":["136.1"],"的区别是":["136.6"],"它用于对url的组成部分进行个别编码":["136.6"],"众所周知":["137.0"],"unix":["137.0"],"linux系统中一切皆文件":["137.0"],"可见":["137.0"],"文件在linux系统中非常重要":["137.0"],"我们平常比较直观的对于文件的感受肯定是文件名和文件内容":["137.0"],"但在linux的文件系统中":["137.0"],"除了文件名和文件内容":["137.0"],"还有一个很重要的概念":["137.0"],"inode":["137.0"],"维基百科这样描述":["137.0"],"structure":["137.0"],"system":["137.0","141.4","186.3"],"describes":["137.0"],"文件重命名和文件移动对于linux系统来说都是文件绝对路径的更改":["137.1"],"命令或者nodejs的":["137.2"],"软链接可以链接文件和文件夹":["137.3"],"软链接可以跨不同的文件系统创建":["137.4"],"文件备份":["137.5"],"为了防止重要的文件被误删":["137.5"],"快捷方式":["137.6"],"对于路径很深的文件":["137.6"],"查找起来不太方便":["137.6"],"相关软件包":["138.2"],"运行进程":["138.6"],"停止":["138.10"],"每次更改完先检查后重载":["138.17"],"含义":["138.21","151.7","151.9"],"addr":["138.21","138.40"],"开启":["138.24"],"配置用":["138.26"],"域名":["138.26"],"来代替":["138.26"],"deeruby":["138.29"],"pass":["138.29"],"ssl":["138.31"],"采用443端口":["138.31"],"开启ssl":["138.31"],"自动跳转至":["138.32"],"replacement":["138.33"],"引言":["138.34"],"referer请求头用于识别访问来源":["138.34"],"以此来配置防盗链":["138.34"],"valid":["138.34"],"referers":["138.34"],"设置可访问资源的规则":["138.34"],"其不允许的规则":["138.34"],"仅允许使用":["138.36"],"upstream":["138.39"],"backserver":["138.39"],"存放负载均衡所需变量":["138.39"],"根据用户访问":["138.39"],"conn":["138.40"],"连接频率限制":["138.40"],"tcp连接":["138.40"],"zone":["138.40"],"binary":["138.40"],"conname":["138.40"],"一个位于客户端和原始服务器":["139.1"],"origin":["139.1"],"运行方式是代理服务器接受网络上的连接请求":["139.2"],"它将请求转发给内部网络上的服务器":["139.2"],"多在高并发情况下需要使用":["139.3"],"其原理就是将数据流量分摊到多个服务器执行":["139.3"],"提供的动静分离是指把动态请求和静态请求分离开":["139.4"],"合适的服务器处理相应的请求":["139.4"],"使整个服务器系统的性能":["139.4"],"效率更高":["139.4"],"人们常说":["140.0"],"并不是一门新的编程语言":["140.0"],"他只是":["140.0"],"的运行时":["140.0"],"运行时你可以简单地理解为运行":["140.0"],"的环境":["140.0"],"在大多数情况下会在浏览器中去运行":["140.0"],"有了":["140.0"],"的出现":["140.0"],"中去运行":["140.0"],"这意味着哪里安装了":["140.0"],"或者浏览器":["140.0"],"就可以在哪里运行":["140.0"],"node模块化的实现":["140.0"],"中是自带模块化机制的":["140.0"],"eval":["140.1"],"接收的是一个要执行的字符串":["140.2"],"返回的是一个新的函数":["140.2"],"调用这个新的函数字符串就会执行了":["140.2"],"如果这个函数需要传递参数":["140.2"],"内置模块":["140.3"],"虽然外部定义了":["140.3"],"path模块":["140.4"],"用于处理文件路径":["140.4"],"basename":["140.4"],"基础路径":["140.4"],"有文件路径就不是基础路径":["140.4"],"基础路劲是":["140.4"],"fs模块":["140.5"],"用于操作文件或者文件夹":["140.5"],"比如文件的读写":["140.5"],"删除等":["140.5"],"常用方法有":["140.5"],"readfile":["140.5"],"readfilesync":["140.5"],"分别是异步读取文件和同步读取文件":["140.5"],"buffer":["140.5"],"txt":["140.5"],"utf8":["140.5"],"如果不传入编码":["140.5"],"出来的是二进制":["140.5"],"判断是否存在":["140.5"],"node10":["140.5"],"提供的":["140.5"],"exists":["140.5"],"方法已经被废弃":["140.5"],"原因是不符合":["140.5"],"规范":["140.5"],"所以改为采用":["140.5"],"来判断文件是否存在":["140.5"],"accesssync":["140.5"],"文件不存在":["140.5"],"手动实现require模块加载器":["140.5"],"首先导入依赖的模块":["140.5"],"并且创建一个":["140.5"],"这个函数接收一个":["140.5"],"modulepath":["140.5"],"表示要导入的文件路径":["140.5"],"导入依赖":["140.5"],"路径操作":["140.5"],"文件读取":["140.5"],"文件执行":["140.5"],"工具模块":["141.0"],"在util":["141.2"],"types对象":["141.2"],"isdate":["141.2"],"判断是否是日期格式的变量":["141.2"],"isanyarraybuffer":["141.2"],"判断是否是buffer":["141.2"],"isasyncfunction":["141.2"],"判断函数是否是异步的":["141.2"],"format":["141.3"],"格式化字符串":["141.3"],"inspect":["141.3"],"将对象转为字符串":["141.3"],"isdeepstrictequal":["141.3"],"判断两个字符是否强相等":["141.3"],"相当于":["141.3"],"deprecate":["141.3"],"将函数包装为弃用":["141.3"],"模块用于解析域名":["141.4"],"域名系统":["141.4"],"组成":["141.4"],"他是由解析器和域名服务器组成":["141.4"],"域名解析":["141.4"],"将域名转换成ip地址":["141.4"],"将ip地址转换成域名列表":["141.4"],"nodejs中dns支持域名和对应ip地址的相互解析":["141.4"],"主要代码如下":["141.4"],"networkinterfaces获取网络信息":["141.6"],"cpus":["141.6"],"获取系统的cpu内核细腻":["141.6"],"返回个数组":["141.6"],"totalmem":["141.6"],"系统总共内存容量":["141.6"],"freemem":["141.6"],"系统空余内存变量":["141.6"],"nodejs用来处理文件路径的工具模块":["141.7"],"平台路径的分隔符":["141.8"],"sep":["141.8"],"分隔符获取":["141.8"],"delimiter":["141.8"],"查看某个包的文档":["142.2"],"查看一个包的详细信息":["142.5"],"收藏项目":["142.6"],"查看某个包的所有版本":["142.10"],"发布包":["142.12"],"修改下版本号":["142.13"],"弃用包":["142.16"],"critical":["142.27"],"创建软链":["143.0"],"xxx":["144.1"],"的时候发生了什么":["144.1"],"pm":["144.1"],"xxx的时候":["144.1"],"首先会去项目的package":["144.1"],"json文件里找scripts":["144.1"],"里找对应的xxx":["144.1"],"然后执行":["144.1","241.9","252.5"],"xxx的命令":["144.1"],"例如启动vue项目":["144.1"],"serve的时候":["144.1"],"实际上就是执行了vue":["144.1"],"系默认的可执行文件":["144.3"],"powershell":["144.5"],"中的依赖包":["145.1"],"dependencies":["145.2"],"json中的version字段代表的是该项目的版本号":["145.3"],"每当项目发布新版本时":["145.3"],"需要将version字段进行相应的更新以便后期维护":["145.3"],"虽然可以手动的修改vsersion字段":["145.3"],"执行npm":["145.6"],"version修改完版本号以后":["145.6"],"还会默认执行git":["145.6"],"预解析":["146.1"],"对于能够显示":["146.2"],"webp":["146.2"],"元素的":["146.3"],"rel":["146.3"],"可以通过预渲染将下载的文件预先在后台渲染":["146.4"],"懒执行就是将某些逻辑延迟到使用时再计算":["146.5"],"懒加载就是将不关键的资源延后加载":["146.6"],"懒加载的原理就是只加载自定义区域":["146.6"],"我们可以将静态资源尽量使用":["146.7"],"一":["147.0","166.0","180.0","275.0"],"标签本身有一个":["147.0"],"loading":["147.0","152.20"],"浏览器屏幕坐标系":["147.1"],"20221103101645081":["147.1"],"存在":["147.1","286.38"],"两种坐标系":["147.1"],"相对于窗口window":["147.1"],"获取节点坐标":["147.2"],"getboundingclinetrect":["147.2"],"elem":["147.2"],"getboundingclientrect":["147.2"],"返回最小矩形的窗口坐标":["147.2"],"该矩形将":["147.2"],"获取窗口尺寸":["147.3"],"窗口有两种定义":["147.3"],"一种是当前窗口的实际大小":["147.3"],"可能因为被缩小而变化":["147.3"],"判断节点是否在可视范围":["147.4"],"intersection":["147.5","184.32"],"该接口提供了一种异步观察目标元素与其祖先元素或顶级文档视窗":["147.5"],"交叉状态的方法":["147.5"],"该接口可以方便的检测元素的可视状态":["147.5"],"应用场景广泛":["147.5"],"当页面滚动时":["147.5"],"懒加载图片或其他内容":["147.5"],"可无限滚动":["147.5"],"网站":["147.5","274.0"],"也就是当用户滚动网页时直接加载更多内容":["147.5"],"无需翻页":["147.5"],"对某些元素进行埋点曝光":["147.5"],"滚动到相应区域来执行相应动画或其他任务":["147.5"],"构造器":["147.5"],"接受一个回调函数":["147.5"],"hlist":["147.5"],"queryselectorall":["147.5"],"h3":["147.5","286.55"],"observe":["147.5","179.55"],"输出结果如下":["147.5"],"20221103130154181":["147.5"],"可以看到":["147.5"],"enries":["147.5"],"是一个":["147.5","178.5","179.47","231.1","256.8"],"intersectionobserverentry":["147.5"],"对象数组":["147.5","285.5"],"该对象的属性如上":["147.5"],"聊网站性能的文章有很多":["148.0"],"通常为了提高js性能":["148.0"],"避不开这两点":["148.0"],"不要阻塞主线程":["148.0"],"减少长耗时":["148.0"],"该怎么做呢":["148.0"],"很明显":["148.0"],"精简js代码有好处":["148.0"],"但更少的代码量是否就一定意味着用户界面的体验会更顺畅":["148.0"],"可能会":["148.0"],"但也可能恰恰相反":["148.0"],"要弄懂优化js中任务的重要性":["148.0"],"首先需要了解什么是任务":["148.0"],"任务的角色以及浏览器的任务处理机制":["148.0"],"浏览器中的任务":["148.0"],"浏览器执行的":["148.0"],"任务":["148.0","173.13","206.8"],"之间是相互独立的":["148.0"],"像页面渲染":["148.0"],"html和css的解析":["148.0"],"以及执行js代码都属于任务的范畴":["148.0"],"虽然开发者不能直接控制这些任务":["148.0"],"但毫无疑问的是":["148.0"],"浏览器中的任务主要源自开发者编写和部署的代码":["148.0"],"上图中的任务便是chrome":["148.0"],"devtoos性能剖析中":["148.0"],"点击":["148.0","260.1"],"事件触发的":["148.0"],"从图中能看到":["148.0"],"任务在顶端":["148.0"],"任务下面列出了点击事件":["148.0"],"调用的函数":["148.0"],"此外还调用很多其他方法":["148.0"],"任务能影响性能的方式很多":["148.0"],"比如在打开网站时下载js代码":["148.0"],"为了拆分长任务":["148.1"],"开发者经常使用定时器":["148.1"],"settimeout":["148.1","168.12","168.16","168.25"],"通过把方法传递给":["148.1"],"也就等同于重新创建了一个新的任务":["148.1"],"延迟了回调的执行":["148.1"],"而且使用该方法":["148.1"],"即便是将delay时间设定成0":["148.1"],"也是有效的":["148.1"],"await来创造让步点":["148.2"],"在本文会出现一个新词":["148.2"],"让步":["148.2"],"这个词的定义":["148.2"],"用法和意义可以通过代码和介绍进行阐述":["148.2"],"重点提示":["148.2"],"于主线程后":["148.2"],"浏览器就有机会处理那些更重要的任务":["148.2"],"而不是放在队列中排队":["148.2"],"理想状态下":["148.2"],"一旦出现用户界面级别的任务":["148.2"],"就应该让步给主线程":["148.2"],"让任务更快的执行完":["148.2"],"让步于主线程让更重要的工作能更快的完成":["148.2"],"分解任务后":["148.2"],"按照浏览器内部的优先级别划分":["148.2"],"假如有一堆的任务":["148.3"],"但是只想在用户交互的时候才让步":["148.3"],"该怎么办":["148.3"],"正好有这种api":["148.3"],"isinputpending":["148.3"],"这个函数可以在任何时候调用":["148.3"],"它能判断用户是否要与页面元素进行交互":["148.3"],"调用isinputpending会返回布尔值":["148.3"],"代表要与页面元素交互":["148.3"],"则不交互":["148.3"],"任务队列中有很多任务":["148.3"],"但是不想阻挡用户输入":["148.3"],"和自定义方法":["148.3"],"yieldtomain":["148.3","148.5"],"就能够保证用户交互时的input不会延迟":["148.3"],"savesettings":["148.3","148.5"],"函数队列":["148.3"],"tasks":["148.3","148.5"],"validateform":["148.3","148.5"],"showspinner":["148.3","148.5"],"savetodatabase":["148.3","148.5"],"updateui":["148.3"],"sendanalytics":["148.3"],"目前在书写本文时该api提供":["148.4"],"posttask":["148.4"],"的功能":["148.4"],"对于所有的chromium浏览器和firefox均可使用":["148.4"],"允许更细粒度的编排任务":["148.4"],"该方法能让浏览器编排任务的优先级":["148.4"],"以便地优先级别的任务能够让步于主线程":["148.4"],"目前":["148.4"],"使用promise":["148.4"],"接受优先级这个参数设定":["148.4"],"方法有三个优先级别":["148.4"],"background":["148.4","169.4","170.5","170.6","170.8","170.11","170.12","170.15"],"级":["148.4"],"适用于优先级别最低的任务":["148.4"],"visible":["148.4"],"适用于优先级别中等的任务":["148.4"],"如果没有入参":["148.4"],"还有一个编排api目前还在提议阶段":["148.5"],"还没有内置到任何浏览器中":["148.5"],"它的用法和本章和开始讲到的":["148.5"],"这个方法类似":["148.5"],"aaaaa":["149.2"],"比":["149.2"],"bbbbb":["149.2"],"慢":["149.2"],"消除不必要的内存访问":["149.4"],"对于一个函数":["149.4"],"内部变量一般是存储在寄存器中":["149.4"],"懒加载和预加载的目的都是为了提高用户的体验":["150.0"],"lazyload":["150.1"],"如何判断一个元素出现在可视区域":["150.5"],"监听滚动事件":["150.5"],"用getboundingclientrect":["150.5"],"获取dom元素在页面的位置":["150.5"],"利用开发者工具我们可以看到如下截图":["150.6"],"preload":["150.7","195.7"],"提前加载所需要的图片资源":["150.7"],"加载完毕后会缓存到本地":["150.7"],"创建用来预加载的标签":["150.10"],"给标签使用背景图":["150.10"],"背景图的路径是需要预加载的图片资源":["150.10"],"并将图片移到看不见的地方":["150.10"],"或缩小到看不见":["150.10"],"将需要预加载的图片资源的":["150.12"],"保存在数组里":["150.12"],"循环遍历":["150.12"],"数组执行以下步骤":["150.12"],"直到结束":["150.12"],"预加载":["150.15","177.5"],"为什么需要性能监控":["151.1"],"监控什么":["151.2"],"首先我们需要知道应该监控些什么呢":["151.2"],"有哪些具体的指标":["151.2"],"响应速度":["151.3"],"google开发者针对用户体验":["151.4"],"提出的几个性能指标":["151.4"],"fp":["151.4","152.6"],"返回一个":["151.5"],"performancenavigation":["151.5"],"21个属性":["151.7"],"属性名":["151.7","151.9"],"connectstart":["151.7"],"返回与服务端建立连接开始时间":["151.7"],"如果是持久连接或者是从缓存中获取资源":["151.7"],"则这个值等于domainlookupend":["151.7"],"connectend":["151.7","151.12"],"返回与服务端建立连接完成时间":["151.7"],"比1":["151.9","151.10"],"2timing多以下字段":["151.9"],"decodedbodysize":["151.9"],"返回编码后字节大小":["151.9"],"各指标计算方式":["151.12"],"指标":["151.12"],"计算方式":["151.12"],"说明":["151.12","152.20","155.0","196.6","196.7","196.8","196.10"],"页面加载总耗时":["151.12"],"loadeventend":["151.12"],"指页面完全加载完所用的时间":["151.12"],"这时候触发完成了":["151.12"],"onload":["151.12"],"dns解析耗时":["151.12"],"domainlookupend":["151.12"],"domainlookupstart":["151.12"],"指通过域名解析服务":["151.12"],"将指定的域名解析成ip地址所消耗的时间":["151.12"],"tcp连接耗时":["151.12"],"首屏时间":["151.13"],"我们知道首屏时间是一项重要指标":["151.13"],"但是又很难从":["151.13"],"中拿到":["151.13"],"来看下首屏时间计算主要有哪些方式":["151.13"],"用户自定义打点":["151.13"],"最准确的方式":["151.13"],"只有用户自己最清楚":["151.13"],"性能是留住用户很重要的一环":["152.2"],"pinterest":["152.2"],"重建了他们的页面以实现性能":["152.2"],"性能是改善转换率至关重要的一环":["152.3"],"mobify":["152.3"],"主页加载速度每减少":["152.3"],"原则":["152.5"],"当用户能够在":["152.5"],"paint":["152.6"],"从页面开始加载到浏览器中检测到渲染":["152.6"],"任何渲染":["152.6"],"时被触发":["152.6"],"例如背景改变":["152.6"],"样式应用等":["152.6"],"白屏时间过长":["152.6"],"会让用户认为我们的页面不能用或者可用性差":["152.6"],"fcp":["152.6"],"首屏":["152.6"],"vitals":["152.7"],"使用者体验量化":["152.7"],"于":["152.7"],"是一个浏览器全局对象":["152.8"],"提供了一组":["152.8"],"用于编程式地获取程序在某些节点的性能数据":["152.8"],"它包含一组高精度时间定义":["152.8"],"以及配套的相关方法":["152.8"],"我们可以直接在浏览器控制台打印":["152.8"],"结果如下":["152.8"],"获取":["152.8","178.1","195.4","219.4","241.10"],"是非标准属性":["152.8"],"只在":["152.8"],"有":["152.8"],"我有多少内存":["152.8"],"usedjsheapsize":["152.8"],"包括v8引擎内部对象":["152.8"],"占用的内存":["152.8"],"一定小于":["152.8"],"totaljsheapsize":["152.8"],"可使用的内存":["152.8"],"jsheapsizelimit":["152.8"],"内存大小限制":["152.8"],"我从哪里来":["152.8"],"信息简单计算出":["152.9"],"网页性能数据":["152.9"],"getentriesbyname":["152.11"],"now":["152.12","159.5","159.9","159.13","287.3"],"精确计算程序执行时间":["152.12"],"mark":["152.13","169.4"],"以及":["152.13","195.9","214.3"],"wx20220107":["152.15","152.17","152.18","152.20","152.21","152.23"],"我们第一眼可能会被这些花花绿绿的色块吓到":["152.15"],"png1":["152.17"],"fps":["152.17","152.18"],"全称":["152.17","171.0","172.0"],"frames":["152.17","152.18"],"per":["152.17"],"表示每秒传输帧数":["152.17"],"是速度单位":["152.17"],"用来分析动画的一个主要性能指标":["152.17"],"表示每个服务器资源的加载情况":["152.18"],"表示每幅帧的运行情况":["152.18"],"这里可以和上面总览的":["152.18"],"结合来看":["152.18"],"timings":["152.18"],"dcl":["152.18"],"domcontentloaded":["152.18"],"表示":["152.18","242.1"],"文档加载完成事件":["152.18"],"当初始":["152.18"],"表示各指标时间占用统计报表":["152.20"],"这里的颜色代表的意思和":["152.20"],"总览区域里面的":["152.20"],"cpu":["152.20"],"颜色一样的意思":["152.20"],"大家不清楚的可以往上翻一下":["152.20"],"这里一般来说":["152.20"],"需要着重关注的有两个":["152.20"],"一是黄色的区域":["152.20"],"代表脚本执行时间":["152.20"],"另一个是紫色的渲染时间":["152.20"],"up":["152.21"],"表示事件时长排序列表":["152.21"],"倒序":["152.21"],"表示事件发生的顺序列表":["152.23"],"先来介绍":["152.24"],"工具":["152.24"],"目前官方提供了":["152.24"],"google":["152.24","175.10"],"性能":["152.25"],"列出了":["152.25"],"可访问性":["152.26"],"practice":["152.27"],"搜索引擎优化":["152.28"],"轻应用":["152.29"],"lighthouse":["152.30"],"项目安装":["152.30"],"虚拟列表":["153.1"],"一次性渲染大量节点":["153.2"],"会占用大量":["153.2"],"列表项高度固定的情况会简单很多":["153.4"],"因为我们可以在渲染前就能知道任何一个列表项的位置":["153.4"],"一个将":["153.5"],"items":["153.5","171.0","181.0","285.14","286.31"],"往下推到正确位置的空元素":["153.5"],"接收一个上面提到的几个数量和高度参数外":["153.5"],"还接收一个列表项组件":["153.5"],"我们会将计算出来的高度做成":["153.5"],"对象以及一个索引值":["153.5"],"index传入到这个组件里进行实例化":["153.5"],"所以记得在列表项组件内接收它们并使用上它们":["153.5"],"尤其是":["153.5"],"jsx":["153.5","153.6","153.7","153.8","153.11","153.12","157.2","205.4"],"usestate":["153.5","153.6","153.7","153.11","153.12","156.3","156.7","156.11","156.18","156.23","156.24","208.4"],"flushsync":["153.6","153.7","153.11"],"fixedsizelist":["153.6","153.7","153.8"],"containerheight":["153.6","153.7","153.11"],"绝对定位方案":["153.7"],"itemheight":["153.7","153.10"],"itemcount":["153.7","153.11"],"styles":["153.8"],"和列表项等高的实现不同":["153.10"],"这里不能传一个固定值":["153.10"],"改为传入一个根据":["153.10"],"获取列表项宽度函数":["153.10"],"forwardref":["153.11","205.6"],"动态列表组件":["153.11"],"variablesizelist":["153.11","153.12"],"getitemheight":["153.11"],"itemdata":["153.11"],"children":["153.11","174.29","209.3","212.1","216.3","218.4","222.4","222.7","252.3","252.5"],"resetheight":["153.11"],"useeffect":["153.12","156.15","156.17","156.23","205.5"],"useref":["153.12","156.3","156.4","156.5","156.6","156.9","156.13","156.17","156.18"],"列表项组件":["153.12"],"5高级配置优化":["154.0"],"在进行打包速度优化之前":["154.1"],"需要对当前项目每个部分的打包时间了解清楚":["154.1"],"我们借助":["154.1"],"speed":["154.1"],"measure":["154.1"],"它分析":["154.1"],"开发时我们修改了其中一个模块代码":["154.2"],"默认会将所有模块全部重新打包编译":["154.2"],"速度很慢":["154.2"],"所以我们需要做到修改某个模块代码":["154.2"],"就只有这个模块代码需要重新打包编译":["154.2"],"其他模块不变":["154.2"],"这样打包速度就能很快":["154.2"],"热模块替换":["154.2"],"在程序运行中":["154.2"],"的工作原理图解":["154.3"],"初识":["154.3"],"的时候觉得其很神奇":["154.3"],"一直有一些疑问萦绕在脑海":["154.3"],"可以将不同的模块打包成":["154.3"],"bundle":["154.3"],"文件或者几个":["154.3"],"chunk":["154.3"],"但是当我通过":["154.3"],"进行开发的过程中":["154.3"],"我并没有在我的":["154.3"],"目录中找到":["154.3"],"打包好的文件":["154.3"],"它们去哪呢":["154.3"],"通过查看":["154.3"],"我们知道其依赖于":["154.3"],"middleware":["154.3","283.7"],"打包时每个文件都会经过所有":["154.4"],"虽然因为":["154.4"],"正则原因实际没有处理上":["154.4"],"但是都要过一遍":["154.4"],"比较慢":["154.4"],"实际上就是匹配上一个":["154.4"],"剩下的就不匹配了":["154.4"],"每次打包时":["154.5"],"文件都要经过":["154.5"],"检查":["154.5"],"编译":["154.5","172.0"],"速度比较慢":["154.5"],"我们可以缓存之前的":["154.5"],"编译结果":["154.5"],"这样第二次打包时速度就会更快了":["154.5"],"对":["154.5","154.18","177.7","204.6","219.10"],"我们还可以通过通过配置":["154.6"],"将来开发时我们对静态资源会使用缓存来优化":["154.7"],"这样浏览器第二次请求资源就能读取缓存了":["154.7"],"速度很快":["154.7"],"但是这样的话就会有一个问题":["154.7"],"因为前后输出的文件名是一样的":["154.7"],"都叫":["154.7"],"一旦将来发布新版本":["154.7"],"因为文件名没有变化导致浏览器会直接读取缓存":["154.7"],"不会加载新资源":["154.7"],"项目也就没法更新了":["154.7"],"所以我们从文件名入手":["154.7"],"确保更新前后文件名不一样":["154.7"],"这样就可以做缓存了":["154.7"],"它们都会生成一个唯一的":["154.7"],"当项目越来越庞大时":["154.8"],"打包速度越来越慢":["154.8"],"甚至于需要一个下午才能打包出来代码":["154.8"],"这个速度是比较慢的":["154.8"],"我们想要继续提升打包速度":["154.8"],"其实就是要提升":["154.8"],"的打包速度":["154.8"],"因为其他文件都比较少":["154.8"],"而对":["154.8"],"文件处理主要就是":["154.8"],"terser":["154.8","154.16"],"三个工具":["154.8"],"所以我们要提升它们的运行速度":["154.8"],"我们可以开启多进程同时处理":["154.8"],"这样速度就比之前的单进程打包更快了":["154.8"],"多进程打包":["154.8"],"开启电脑的多个进程同时干一件事":["154.8"],"速度更快":["154.8"],"请仅在特别耗时的操作中使用":["154.8"],"因为每个进程启动就有大约为":["154.8"],"600ms":["154.8"],"左右开销":["154.8"],"开发时我们定义了一些工具函数库":["154.9"],"为编译的每个文件都插入了辅助代码":["154.10"],"使代码体积过大":["154.10"],"对一些公共方法使用了非常小的辅助代码":["154.10"],"默认情况下会被添加到每一个需要它的文件中":["154.10"],"你可以将这些辅助代码作为一个独立模块":["154.10"],"来避免重复引入":["154.10"],"runtime":["154.10","228.2"],"的作用":["154.10","181.0"],"禁用了":["154.10"],"自动对每个文件的":["154.10"],"注入":["154.10"],"而是引入":["154.10"],"并且使所有辅助代码从这里引用":["154.10"],"下载包":["154.10","154.11"],"文件目录":["154.11"],"如果多入口文件中都引用了同一份代码":["154.12"],"我们不希望这份代码被打包到两个文件中":["154.12"],"导致代码重复":["154.12"],"体积更大":["154.12"],"我们需要提取多入口的重复代码":["154.12"],"只打包生成一个":["154.12"],"其他文件引用它就好":["154.12"],"修改文件":["154.12","154.13","154.14"],"动态导入":["154.13"],"想要实现按需加载":["154.13"],"动态导入模块":["154.13"],"还需要额外配置":["154.13"],"引入资源":["154.14"],"webpack才会对其打包":["154.14"],"os":["154.16"],"eslintwebpackplugin":["154.16"],"htmlwebpackplugin":["154.16"],"minicssextractplugin":["154.16"],"mini":["154.16"],"extract":["154.16"],"cssminimizerplugin":["154.16"],"minimizer":["154.16"],"terserplugin":["154.16"],"imageminimizerplugin":["154.16"],"prefetch":["154.17"],"我们前面已经做了代码分割":["154.17"],"同时会使用":["154.17"],"动态导入语法来进行代码按需加载":["154.17"],"我们也叫懒加载":["154.17"],"比如路由懒加载就是这样实现的":["154.17"],"但是加载速度还不够好":["154.17"],"是用户点击按钮时才加载这个资源的":["154.17"],"如果资源体积很大":["154.17"],"那么用户会感觉到明显卡顿效果":["154.17"],"我们想在浏览器空闲时间":["154.17"],"加载后续需要使用的资源":["154.17"],"我们就需要用上":["154.17"],"技术":["154.17"],"告诉浏览器立即加载资源":["154.17"],"告诉浏览器在空闲时才开始加载资源":["154.17"],"它们共同点":["154.17"],"都只会加载资源":["154.17"],"并不执行":["154.17"],"都有缓存":["154.17"],"它们区别":["154.17"],"加载优先级高":["154.17"],"加载优先级低":["154.17"],"只能加载当前页面需要使用的资源":["154.17"],"可以加载当前页面资源":["154.17"],"也可以加载下一个页面需要使用的资源":["154.17"],"总结":["154.17","156.26","168.13","198.7","202.17","224.0","260.4"],"当前页面优先级高的资源用":["154.17"],"加载":["154.17","196.13"],"下一个页面需要使用的资源用":["154.17"],"它们的问题":["154.17"],"兼容性较差":["154.17"],"我们可以去":["154.17"],"网站查询":["154.17"],"的兼容性问题":["154.17"],"相对于":["154.17"],"过去我们使用":["154.18"],"代码进行了兼容性处理":["154.18"],"其中使用":["154.18"],"preset":["154.18"],"智能预设来处理兼容性问题":["154.18"],"它能将":["154.18"],"的一些语法进行编译转换":["154.18"],"比如箭头函数":["154.18"],"点点点运算符等":["154.18"],"但是如果是":["154.18"],"数组的一些方法":["154.18"],"它没办法处理":["154.18"],"所以此时我们":["154.18"],"代码仍然存在兼容性问题":["154.18"],"externals可以告诉webpack不打包资源":["154.19"],"从而减少入口文件的大小":["154.19"],"如果不打包某个包":["154.19"],"又要用到他":["154.19"],"这个时候需要从html的script标签进行引入":["154.19"],"一般引入的是包的cdn资源":["154.19"],"预置依赖":["154.20"],"provideplugin":["154.20","193.8"],"compiler":["154.20","177.8","236.6"],"能够识别遵循":["154.20"],"模块语法":["154.20"],"commonjs":["154.20","186.3"],"amd":["154.20","186.3"],"规范编写的模块":["154.20"],"一些":["154.20"],"party":["154.20"],"第三方库":["154.20"],"可能会引用一些全局依赖":["154.20"],"因此这些":["154.20"],"library":["154.20"],"也可能会创建一些需要导出的全局变量":["154.20"],"这些":["154.20"],"broken":["154.20"],"不符合规范的模块":["154.20"],"发挥作用的地方":["154.20"],"影响小程序代码包大小的因素":["155.0"],"类型":["155.0","188.0","218.5","222.3","231.4","252.3"],"文件路径压缩":["155.6"],"因为文件路径最终会原样打包到代码中":["155.6"],"类名压缩":["155.8"],"尽管采用原子css后":["155.8"],"代码体积下降了多":["155.8"],"为什么说看起来很美好呢":["155.9"],"是因为我们的小程序需要支持微信":["155.9"],"企业微信的移动端和pc端":["155.9"],"深入":["156.0"],"以后新增的钩子api":["156.1"],"目的是增加代码的可复用性":["156.1"],"逻辑性":["156.1"],"最主要的是解决了":["156.1"],"函数式组件无状态的问题":["156.1"],"这样既保留了函数式的简单":["156.1"],"又解决了没有数据管理状态的缺陷":["156.1"],"那么什么是自定义hooks呢":["156.1"],"自定义hooks":["156.1","156.4"],"是在":["156.1","178.4","220.7"],"基础上的一个扩展":["156.1"],"可以根据业务":["156.1"],"需求去制定相应的":["156.1"],"将常用的逻辑进行封装":["156.1"],"从而具备复用性":["156.1"],"如何设计一个自定义hooks":["156.1"],"在上述中我们讲了用":["156.2"],"usememo":["156.2","156.6","156.23","209.5","209.15"],"来处理无关的渲染":["156.2"],"接下来我们一起来看看":["156.2"],"的这些钩子的妙用":["156.2"],"这里建议先熟知":["156.2"],"并使用对应的":["156.2"],"才能造出好的钩子":["156.2"],"当一个父组件中调用了一个子组件的时候":["156.2"],"父组件的":["156.2"],"发生变化":["156.2","216.5"],"会导致父组件更新":["156.2"],"而子组件虽然没有发生改变":["156.2"],"但也会进行更新":["156.2"],"简单的理解下":["156.2"],"当一个页面内容非常复杂":["156.2"],"模块非常多的时候":["156.2"],"函数式组件会":["156.2"],"从头更新到尾":["156.2"],"只要一处改变":["156.2"],"所有的模块都会进行刷新":["156.2"],"这种情况显然是没有必要的":["156.2"],"我们理想的状态是各个模块只进行自己的更新":["156.2"],"我们先看个案例":["156.3"],"tsx":["156.3","156.7","156.10","156.11","207.7","207.8","207.16","208.5","208.13","208.14","208.16","208.17","209.3","209.4","209.8","209.11","286.37","286.38"],"fc":["156.3","156.14"],"除了获取对应的属性值外":["156.4"],"还有一点比较重要的特性":["156.4"],"那就是":["156.4"],"上述讲到我们封装一个合格的":["156.4"],"的时候需要结合usememo":["156.4"],"usecallback等api":["156.4"],"但我们控制变量的值用usestate":["156.4"],"经过上面的讲解我们知道":["156.5"],"可以拿到最新值":["156.5"],"usecreation":["156.6","156.7","156.13"],"的替代品":["156.6"],"这个钩子增强了":["156.6"],"让这个钩子可以替换这两个钩子":["156.6"],"来自ahooks":["156.6"],"的值不一定是最新的值":["156.6"],"但":["156.6"],"可以保证拿到的值一定是最新的值":["156.6"],"对于复杂常量的创建":["156.6"],"接下来我们写个小例子":["156.7"],"来验证下":["156.7"],"是否能满足我们的要求":["156.7"],"这个钩子不必多说":["156.8"],"只是简化了使用":["156.8"],"这个需要注意一个点":["156.9"],"就是使用":["156.9"],"usemount":["156.10"],"useunmount":["156.10","156.17"],"做个小例子":["156.10"],"button":["156.10","156.14","156.24"],"toast":["156.10","156.24"],"强制更新":["156.11"],"有的时候我们需要组件强制更新":["156.11"],"这个时候就可以使用这个钩子":["156.11"],"usecallback":["156.11"],"setstate":["156.11","157.2","176.17","176.18","178.3"],"以上四个小问题":["156.12"],"最关键的就是":["156.12"],"第二个":["156.12"],"我们如何将数据弄成":["156.12"],"响应式":["156.12"],"useupdate":["156.13"],"initialval":["156.13"],"接下来我们来验证一下我们写的":["156.14"],"usereactive":["156.14"],"我们将以":["156.14"],"数字":["156.14","284.75","291.2"],"布尔":["156.14"],"计算属性几个方面去验证一下":["156.14"],"antd":["156.14","156.24"],"props":["156.14","178.1","178.4","178.6","179.55","179.56","181.0","195.9","209.9","214.1","214.2","216.2","218.4","219.3","219.4","221.0","221.3","221.4","221.8","221.9","221.10","221.11","222.4","222.5","222.6","232.2","235.4","236.4","241.9","251.2"],"count":["156.14","173.5","173.87","256.8"],"小杜杜":["156.14"],"flag":["156.14","236.6"],"bugs":["156.14"],"hook":["156.14","205.18","220.2","220.3"],"addbug":["156.14"],"useeventlistener":["156.15","156.18","156.19"],"在原本的ahooks代码中":["156.16"],"会用到":["156.16"],"dependencylist":["156.17"],"uselatest":["156.17","156.23"],"depsaresame":["156.17"],"olddeps":["156.17"],"验证一下":["156.18"],"是否能够正常的使用":["156.18"],"顺变验证一下初始化":["156.18"],"卸载的":["156.18"],"usehover":["156.19"],"元素是否有鼠标悬停":["156.19"],"这个就很简单了":["156.19"],"只需要通过":["156.19"],"来监听":["156.19"],"一段时间内":["156.20"],"执行一次":["156.20"],"传递参数只要函数和延迟时间即可":["156.20"],"需要注意的是卸载的时候将定时器清除下就ok了":["156.20"],"详细代码":["156.20"],"每过一段时间内一直执行":["156.21"],"大体上与":["156.21"],"usetimeout":["156.21"],"多了一个是否要首次渲染的参数":["156.21"],"immediate":["156.21","258.9","283.4"],"简单控制倒计时的钩子":["156.22"],"dayjs":["156.23"],"dtime":["156.23"],"usecountdown":["156.24"],"img5":["156.25"],"参考":["156.26","170.14"],"ahooks":["156.26"],"开发中当组件中的状态发生了变化":["157.0"],"页面并不会重新渲染":["157.0"],"我们必须要通过setstate来告知react数据已经发生了变化":["157.0"],"重新渲染页面":["157.0"],"setstate设计为异步":["157.1"],"可以显著的提升性能":["157.1"],"setstate的回调":["157.2"],"setstate接受两个参数":["157.2"],"第二个参数是一个回调函数":["157.2"],"这个回调函数会在更新后会执行":["157.2"],"changetext":["157.2"],"如何实现并发请求数量控制":["158.0","164.0"],"假设有这么一个场景":["158.1","164.1"],"现在有":["158.1","164.1"],"首先来看将上面的文字转化为图之后的效果":["158.2","164.2"],"这样就直观的看到":["158.2","164.2"],"有一个最大并发数":["158.2","164.2"],"maxnum":["158.2","158.3","164.2","164.3"],"个异步请求的":["158.2","164.2"],"具体代码如下":["158.3","164.3"],"代码中已备注有注释":["158.3","164.3"],"并发请求函数":["158.3","164.3"],"concurrencyrequest":["158.3","164.3"],"测试代码如下":["158.4","164.4"],"下面通过运行代码来看看效果":["158.5","164.5"],"首先来看看控制台输出的结果":["158.5","164.5"],"先说一下这个":["159.0"],"动态事件列表":["159.0"],"我相信大多数程序员或多或少都使用过轮询来获取服务端的资源":["159.1"],"简单来说轮询就是":["159.1"],"下面就让我们用轮询来实现动态事件列表的需求":["159.2"],"首先是node代码":["159.2"],"时间列表":["159.2"],"最新生成的事件时间":["159.2"],"latesttimestamp":["159.2","159.9","159.13"],"事件生产者":["159.2"],"eventproducer":["159.2","159.5","159.9"],"从上面的代码我们可以看出":["159.3"],"短轮询这个技术方案最大的优点就是":["159.3"],"一般生产级别的应用都不会使用短轮询这个方案":["159.4"],"除非你只是写一些给少数人用的系统":["159.4"],"长轮询":["159.4"],"看完了上面关于短轮询的介绍":["159.4"],"接着就让我们使用长轮询来动态实现事件列表的功能":["159.5"],"先看一下后端代码":["159.5"],"long":["159.5"],"timers":["159.5"],"当前挂起的请求":["159.5"],"subscribers":["159.5"],"timestamp":["159.5"],"通知所有挂起的请求":["159.5"],"foreach":["159.5","179.33","195.4"],"polling的优缺点":["159.6"],"长轮询很完美地解决了短轮询的问题":["159.6"],"首先服务端在没有数据更新的情况下没有给客户端返回数据":["159.6"],"从网上找的资料来看之前的webqq和web微信都是基于长轮询实现的":["159.7"],"上面说到长轮询不适用于服务端资源频繁更新的场景":["159.8"],"而解决这类问题的一个方案就是websocket":["159.8"],"我们再来看一下如何使用websocket来实现动态事件列表的需求":["159.9"],"下面是后端代码":["159.9"],"ws":["159.9"],"clients":["159.9","159.13"],"总的来说":["159.10"],"我认为websocket有下面这些优点":["159.10"],"客户端和服务端建立连接的次数少":["159.10"],"理想情况下客户端只需要发送一个http升级协议就可以升级到websocket连接":["159.10"],"websocket的应用场景是一些":["159.11"],"sent":["159.12"],"events简称":["159.12"],"和上面一样":["159.13"],"我们使用sse来实现一下动态事件列表的需求":["159.13"],"先看后端代码":["159.13"],"sse":["159.13"],"告诉http连接":["159.13"],"它是一个event":["159.13"],"stream的请求":["159.13"],"保持http连接不断开":["159.13"],"keep":["159.13"],"在我看来":["159.14"],"sse的技术有下面的优点":["159.14"],"sse技术适合一些只需要服务端单向推送事件给客户端的场景":["159.15"],"async1":["161.0"],"最终实现":["162.0"],"创建沙箱":["162.0"],"取出其中的原生浏览器全局对象作为沙箱的全局对象":["162.0","162.3","286.69"],"设置一个黑名单":["162.0"],"若访问黑名单中的变量":["162.0"],"则直接报错":["162.0"],"实现阻止":["162.0"],"隔离的效果":["162.0"],"在黑名单中添加":["162.0"],"来实现禁止开发者操作":["162.0"],"实现禁用原生的方式调用接口":["162.0"],"若访问当前全局对象中不存在的变量":["162.0"],"实现禁用三方库调接口":["162.0"],"最后还要拦截对":["162.0"],"对象的访问":["162.0"],"题目要求":["162.1","162.2"],"实现这样一个沙箱":["162.1"],"要求程序中访问的所有变量":["162.1"],"均来自可靠或自主实现的上下文环境":["162.1"],"而不会从全局的执行环境中取值":["162.1"],"举个":["162.1","162.2"],"ctx":["162.1","162.2","166.3","166.7","216.2","219.10","252.6"],"作为执行上下文对象":["162.1","162.2"],"待执行程序":["162.1","162.2"],"实现沙箱":["162.2"],"希望沙箱中的代码只在手动提供的上下文对象中查找变量":["162.2"],"如果上下文对象中不存在该变量":["162.2"],"则提示对应的错误":["162.2"],"可以访问到的变量":["162.2"],"必须都来自ctx对象":["162.2"],"如果ctx对象中不存在该变量":["162.2"],"直接报错":["162.2"],"不再通过作用域链向上查找":["162.2"],"实现步骤":["162.2"],"标签可以创造一个独立的浏览器原生级别的运行环境":["162.3"],"这个环境由浏览器实现了与主环境的隔离":["162.3"],"来实现一个沙箱是目前最方便":["162.3"],"简单":["162.3"],"安全的方法":["162.3"],"可以把":["162.3"],"contentwindow":["162.3"],"作为沙箱执行的全局":["162.3"],"沙箱示例":["162.3"],"沙箱全局代理对象类":["162.3","286.69"],"sandboxglobalproxy":["162.3","286.69"],"sharedstate":["162.3"],"createelement":["162.3","205.4","286.69"],"about":["162.3"],"blank":["162.3"],"appendchild":["162.3"],"sandboxglobal作为沙箱运行时的全局对象":["162.3"],"sandboxglobal":["162.3"],"插件系统":["163.0"],"原文地址":["163.0"],"tricks":["163.0"],"designing":["163.0"],"前言":["163.0","199.1","265.0"],"许多开源库都有插件系统":["163.0"],"gatsby":["163.0"],"插件是库和框架的一个常见特性":["163.0"],"用于允许开发人员以一种安全":["163.0"],"可伸缩的方式添加功能":["163.0"],"那么怎么构建一个插件系统呢":["163.0"],"让我们用js构建一个自己的插件系统来回答这个问题":["163.0"],"简单的计算器示例":["163.0"],"从一个名为":["163.0"],"betacalc":["163.0"],"的示例项目开始":["163.0"],"的目标是成为一个简单的js计算器":["163.0"],"其他开发者可以为其添加":["163.0"],"我们将计算器定义为简单的":["163.0"],"对象字面量":["163.0"],"solve":["165.2"],"time1":["165.2"],"time2":["165.2"],"time3":["165.2"],"无感刷新refreshtoken是什么":["166.0"],"先了解":["166.1"],"认证流程":["166.1"],"的认证基本的流程就是":["166.1"],"refreshtoken是啥":["166.2"],"refreshtoken":["166.2","166.5"],"其实和":["166.2"],"并没有任何的区别":["166.2"],"都是通过":["166.2","220.2"],"jwt":["166.2","166.5","166.6"],"加密的一串加密字符串":["166.2"],"登录后返回":["166.3"],"next":["166.3","206.14"],"的权限时效判断":["166.5"],"koa":["166.5","166.6"],"的时效判断":["166.6"],"jsonwebtoken":["166.6"],"返回新的token":["166.7"],"request封装":["166.8"],"nprogress":["166.8"],"usestore":["166.8"],"baseurlfn":["166.8"],"handle401":["166.9"],"封装重新请求":["166.9"],"getrefreshtoken":["166.9"],"settoken":["166.9"],"面试中常考的一个代码题":["167.0"],"也是业务开发中经常会遇到的问题":["167.0"],"题目描述":["167.0"],"短时间内需要请求多个同类型的资源":["167.0"],"期望多个请求合并成一个请求发送":["167.0"],"实现一个":["167.1"],"getarticle":["167.1","167.4"],"每个方法回调最终拿到的是自己需要的内容":["167.1"],"常见需要短时间请求多个同类型资源的场景就是":["167.2"],"怎么确定这个":["167.3"],"短时间":["167.3"],"如果多个请求参数是一样的那么":["167.4"],"最终请求的参数只有一个":["167.4"],"连续调用两次":["167.4"],"请求的query依旧是":["167.4"],"而不是":["167.4"],"并且这两个请求的方法都需要得到响应":["167.4"],"如果这个请求没有被按时响应":["167.4"],"不能影响下一次发送":["167.4"],"代码实现":["167.4"],"resolvemap":["167.4"],"将在浏览器的空闲时段内调用的函数排队":["168.2"],"演示结果":["168.4"],"告诉浏览器":["168.6"],"思考":["168.10"],"任务的执行时机":["168.11"],"在浏览器的event":["168.11"],"loop中是有多个任务队列的":["168.11"],"每个任务队列的执行时机是不一样的":["168.11"],"下面直接上干货":["168.11"],"说说浏览器执行任务的顺序":["168.11"],"从task任务队列中取第一个task":["168.11"],"代码验证":["168.12"],"我们可以写一些代码到chrome浏览器中验证一下":["168.12"],"看看requestanimationframe和requestidlecallback的执行顺序是怎样的":["168.12"],"运行以下这段代码":["168.12"],"requestanimationframe":["168.12","168.20","168.25"],"requestanimationframe和requestidlecallback是和宏任务性质一样的任务":["168.13"],"对于现在技术社区的现状的":["168.15"],"相信大部分的开发者都使用过":["168.16"],"顾明思议":["168.17"],"一般用在操作动画帧上":["168.19"],"在物体需要在一帧渲染之前执行某个动画":["168.19"],"一般是更好的优化动画上":["168.19"],"你没看错":["168.20"],"下面介绍的":["168.21"],"timeoutid":["168.22","168.24"],"用于延迟执行某个动作":["168.23"],"或者可以循环调用自身":["168.23"],"setinterval":["168.23"],"是一个正整数":["168.24"],"下面我们总结一下他们的差异":["168.25"],"最小延迟时间":["168.26"],"timeend":["168.26"],"这篇文章到这里就结束了":["168.27"],"几种实现方案":["169.1"],"后端":["169.2"],"这种方案就是将":["169.2"],"实现水印效果":["169.3","169.4"],"前端":["169.3","169.4"],"自定义指令钩子非常多":["169.3"],"但实际上能使用到的不多":["169.3"],"比如最常用的就是":["169.3"],"mounted":["169.3","236.4"],"updated":["169.3"],"在这我们只需要通过":["169.3"],"即可实现对应的功能":["169.3"],"并且核心代码比较简单":["169.3"],"核心内容":["169.3"],"watermark":["169.3","169.4"],"节点":["169.3","200.5","210.2","212.1","214.0","214.1","214.2","219.3","226.1"],"用于包裹对应的":["169.3"],"便于展示水印内容":["169.3"],"在创建一个":["169.3"],"waterbg":["169.3"],"节点作为":["169.3"],"子节点":["169.3"],"并进行":["169.3"],"绝对定位":["169.3"],"保证":["169.3"],"最上层显示":["169.3"],"将对应的":["169.3"],"canvas":["169.4","195.4"],"实现方式的优点就在于能够动态的设置水印内容":["169.4"],"相比于上一种基于固定背景图片的方式更灵活":["169.4"],"这种方式也是":["169.4"],"语雀":["169.4"],"在使用的方式":["169.4"],"具体效果如下":["169.4"],"核心步骤":["169.4"],"填充文本":["169.4"],"并通过":["169.4"],"todataurl":["169.4"],"获取到对应的":["169.4"],"base64":["169.4"],"格式的图片":["169.4"],"将这个":["169.4"],"格式的图片作为类名为":["169.4"],"water":["169.4"],"节点的背景图":["169.4"],"repeat":["169.4"],"让这个图重复填充背景即可":["169.4"],"节点设置":["169.4"],"pointer":["169.4"],"点击穿透":["169.4"],"利用对应图片的父元素作为":["169.4"],"节点的相对定位节点":["169.4"],"保证绝对定位的":["169.4"],"节点显式在对应图片之上":["169.4"],"效果和代码如下":["169.4"],"directives":["169.4","214.2","236.1","236.2"],"全局保存":["169.4"],"避免重复创建":["169.4"],"单例模式":["169.4"],"globalcanvas":["169.4"],"卡券":["170.0"],"半圆伪元素":["170.2"],"投影不准确":["170.2"],"可将这个想象成一个正常的矩形":["170.2"],"左右两侧分别有个小半圆":["170.2"],"在这里插入图片描述":["170.2","170.6","170.15","206.13"],"将半圆的颜色设置为与背景色一致":["170.2"],"方法二":["170.4"],"radial":["170.4","170.5","170.6","170.8","170.11","170.15"],"圆形":["170.5","170.6"],"起始点位置为左上角即left":["170.5"],"center":["170.5","170.6","170.8","170.15"],"不写则为center":["170.5"],"从橘色开始":["170.5"],"变成粉色":["170.5"],"最后变成天空蓝":["170.5"],"不写百分比就均匀分布":["170.5"],"gradient":["170.5","170.6","170.8","170.11","170.15"],"at":["170.5","170.6","170.8","170.11","170.15"],"起始点位于left":["170.6"],"定义一个透明色占据20rpx":["170.6"],"剩下颜色为20rpx到100":["170.6"],"的纯色":["170.6"],"left":["170.6","170.15"],"transparent":["170.6","170.11","170.15"],"20rpx":["170.6","170.15"],"pink":["170.6","170.8"],"试着改变pink颜色的起始位置":["170.6"],"我们发现要实现一个透明的半圆":["170.6"],"后面的颜色起始点要小于等于前个颜色的结束位置":["170.6"],"试着在右边再次定义一个内圆角":["170.6"],"发现两个透明圆角都不显示了":["170.6"],"方法三":["170.8"],"mask遮罩":["170.8","170.12","170.14","170.15"],"mask":["170.8","170.12","170.15"],"允许使用者通过遮罩或者裁切特定区域的图片的方式来隐藏一个元素的部分或者全部可见区域":["170.8"],"可以理解为透明的部分不显示":["170.8"],"展示非透明区域":["170.8"],"mask语法与background类似":["170.8"],"使用mask可以实现一些amazing的效果":["170.8"],"可以参考文章chokcoco":["170.8"],"奇妙的":["170.8"],"假设给一个元素设置一个mask遮罩":["170.8"],"遮罩设置为起始点位于left":["170.8"],"定义一个透明色占据20rpx的半圆":["170.8"],"使用mask遮罩实现内凹圆角无疑是最佳方法":["170.9"],"gradient渐变":["170.11"],"先实现一个透明的的1":["170.11"],"4内圆角":["170.11"],"mask遮罩的内容与radial":["170.12"],"gradient渐变的内容是一致的":["170.12"],"我们可以按照2":["170.12"],"1的内容实现两种遮罩":["170.12"],"遮罩一":["170.12"],"slateblue":["170.12"],"多重drop":["170.14"],"shadow":["170.14"],"xboxyan":["170.14"],"filter生成不规则边框这篇文章":["170.14"],"利用多重投影drop":["170.14"],"伪元素":["170.15"],"设置border":["170.15"],"18rpx":["170.15"],"000":["170.15","175.10"],"ff6810":["170.15"],"3rpx":["170.15"],"solid":["170.15"],"添加两个半圆伪元素":["170.15"],"背景色与border颜色一致":["170.15"],"调整好相应位置":["170.15"],"card":["170.15"],"006":["170.15"],"after":["170.15","206.16"],"position":["170.15"],"absolute":["170.15","171.0"],"40rpx":["170.15"],"radius":["170.15"],"top":["170.15"],"calc":["170.15"],"21rpx":["170.15"],"right":["170.15"],"实现代码":["170.15"],"内容较多":["170.15"],"这里展示前两个demo":["170.15"],"完整代码请戳这里":["170.15"],"苏苏的github":["170.15"],"苏苏的码云":["170.15"],"样式1":["170.15"],"view":["170.15","171.0","195.8","200.4"],"苏苏就是小苏苏哇":["170.15"],"2022高频前端面试题":["171.0","172.0"],"css篇":["171.0"],"的区别":["171.0","172.0","173.11","173.21","173.31","173.69","188.0","193.10"],"参考回答":["171.0"],"pixel":["171.0"],"是相对于屏幕分辨率而言的":["171.0"],"它是一个绝对单位":["171.0"],"但同时具有一定的相对性":["171.0"],"因为在同一个设备上每个像素代表的物理长度是固定不变的":["171.0"],"这点表现的是绝对性":["171.0"],"但是在不同的设备之间每个设备像素所代表的物理长度是可以变化的":["171.0"],"这点表现的是相对性":["171.0"],"是一个相对长度单位":["171.0"],"具体的大小需要相对于父元素计算":["171.0"],"比如父元素的字体大小为80px":["171.0"],"那么子元素1em就表示大小和父元素一样为80px":["171.0"],"5em就表示字体大小是父元素的一半为40px":["171.0"],"css3":["171.0","281.2"],"新单位":["171.0"],"可视窗口宽度":["171.0"],"可视窗口高度":["171.0"],"就等于可视窗口宽度的百分之一":["171.0"],"就等于可视窗口高度的百分之一":["171.0"],"介绍下":["171.0"],"bfc":["171.0","179.2"],"及其应用":["171.0"],"所谓":["171.0"],"指的是一个独立的布局环境":["171.0"],"内部的元素布局与外部互不影响":["171.0"],"触发":["171.0"],"的方式有很多":["171.0"],"常见的有":["171.0"],"设置浮动":["171.0"],"设置为":["171.0","256.4"],"scroll":["171.0","195.9"],"positon":["171.0"],"fixed":["171.0"],"应用有":["171.0"],"解决浮动元素令父元素高度坍塌的问题":["171.0"],"解决非浮动元素被浮动元素覆盖问题":["171.0"],"解决外边距垂直方向重合的问题":["171.0"],"ifc":["171.0"],"gfc":["171.0"],"ffc":["171.0"],"块级格式上下文":["171.0"],"行内格式化上下文":["171.0"],"将一块区域以行内元素的形式来格式化":["171.0"],"网格布局格式化上下文":["171.0"],"将一块区域以":["171.0"],"grid":["171.0"],"网格的形式来格式化":["171.0"],"弹性格式化上下文":["171.0"],"将一块区域以弹性盒的形式来格式化":["171.0"],"flex":["171.0"],"布局如何使用":["171.0"],"的缩写":["171.0"],"意为":["171.0"],"弹性布局":["171.0"],"指定容器display":["171.0"],"flex即可":["171.0"],"容器有以下属性":["171.0"],"direction":["171.0"],"wrap":["171.0"],"flow":["171.0"],"justify":["171.0"],"html篇":["172.0"],"什么是":["172.0","173.19","265.0"],"有何作用":["172.0"],"是html5的文档声明":["172.0"],"通过它可以告诉浏览器":["172.0"],"使用哪一个html版本标准解析文档":["172.0"],"在浏览器发展的过程中":["172.0"],"html出现过很多版本":["172.0"],"不同的版本之间格式书写上略有差异":["172.0"],"如果没有事先告诉浏览器":["172.0"],"那么浏览器就不知道文档解析标准是什么":["172.0"],"大部分浏览器将开启最大兼容模式来解析网页":["172.0"],"我们一般称为":["172.0"],"怪异模式":["172.0"],"这不仅会降低解析效率":["172.0"],"而且会在解析过程中产生一些难以预知的":["172.0"],"所以文档声明是必须的":["172.0"],"说说对":["172.0"],"语义化的理解":["172.0"],"html标签的语义化":["172.0"],"就是用正确的标签做正确的事情":["172.0"],"给某块内容用上一个最恰当最合适的标签":["172.0"],"使页面有良好的结构":["172.0"],"页面元素有含义":["172.0"],"无论是谁都能看懂这块内容是什么":["172.0"],"语义化的优点如下":["172.0"],"在没有css样式情况下也能够让页面呈现出清晰的结构":["172.0"],"有利于seo和搜索引擎建立良好的沟通":["172.0"],"有助于爬虫抓取更多的有效信息":["172.0"],"爬虫是依赖于标签来确定上下文和各个关键字的权重":["172.0"],"方便团队开发和维护":["172.0"],"语义化更具可读性":["172.0"],"遵循w3c标准的团队都遵循这个标准":["172.0"],"可以减少差异化":["172.0"],"href":["172.0"],"src和href都是html中特定元素的属性":["172.0"],"都可以用来引入外部的资源":["172.0"],"两者区别如下":["172.0"],"它通常用于img":["172.0"],"script元素":["172.0"],"通过src指向请求外部资源的来源地址":["172.0"],"指向的内容会嵌入到文档中当前标签所在位置":["172.0"],"在请求src资源时":["172.0"],"它会将资源下载并应用到文档内":["172.0"],"js脚本":["172.0"],"img图片":["172.0"],"frame等元素":["172.0"],"当浏览器解析到该元素时":["172.0"],"会暂停其它资源下载":["172.0"],"直到将该资源加载":["172.0"],"执行完毕":["172.0"],"这也是为什么将js脚本放在底部而不是头部的原因":["172.0"],"reference":["172.0"],"意味着超链接":["172.0"],"指向网络资源":["172.0"],"当浏览器识别到它指向的":["172.0"],"件时":["172.0"],"就会并":["172.0"],"下载资源":["172.0"],"不会停":["172.0"],"对当前":["172.0"],"2022高频前端面试题合集之javascript篇":["173.0"],"根据下面":["173.1"],"构造函数的书写方式":["173.1"],"要求写出":["173.1"],"es5":["173.1","173.22","173.46","173.55","173.59","173.82","173.85","186.3"],"数组去重有哪些方法":["173.2"],"美团":["173.2","173.33","173.34","173.37","173.39","173.41","173.42","173.43","173.44"],"参考答案":["173.2","173.8","173.9","173.11","173.12","173.13","173.14","173.16","173.17","173.18","173.20","173.24","173.25","173.27","173.28","173.29","173.30","173.31","173.32","173.37","173.39","173.42","173.43","173.44","173.46","173.47","173.48","173.51","173.52","173.55","173.56","173.57","173.58","173.59","173.64","173.68","173.69","173.70","173.74","173.78","173.79","173.81","173.82","173.85","173.87","173.93","173.94","173.95","173.98","173.99"],"数字或字符串数组去重":["173.2"],"效率高":["173.2"],"描述下列代码的执行结果":["173.3","173.4","173.5","173.6","173.7","173.38"],"02":["173.5"],"buttonwrapper":["173.7"],"dombtnel":["173.7"],"箭头函数有哪些特点":["173.8"],"说一说类的继承":["173.9"],"继承是面向对象编程中的三大特性之一":["173.9"],"中的继承经过不断的发展":["173.9"],"从最初的对象冒充慢慢发展到了今天的圣杯模式继承":["173.9"],"其中最需要掌握的就是":["173.9"],"伪经典继承":["173.9"],"圣杯模式":["173.9"],"的继承":["173.9"],"很长一段时间":["173.9"],"继承使用的都是":["173.9"],"组合继承":["173.9"],"这种继承也被称之为伪经典继承":["173.9"],"该继承方式综合了原型链和盗用构造函数的方式":["173.9"],"将两者的优点集中了起来":["173.9"],"组合继承弥补了之前原型链和盗用构造函数这两种方式各自的不足":["173.9"],"中使用最多的继承方式":["173.9"],"组合继承最大的问题就是效率问题":["173.9"],"最主要就是父类的构造函数始终会被调用两次":["173.9"],"一次是在创建子类原型时调用":["173.9"],"另一次是在子类构造函数中调用":["173.9"],"本质上":["173.9","177.14"],"子类原型最终是要包含超类对象的所有实例属性":["173.9"],"子类构造函数只要在执行时重写自己的原型就行了":["173.9"],"圣杯模式的继承解决了这一问题":["173.9"],"其基本思路就是不通过调用父类构造函数来给子类原型赋值":["173.9"],"而是取得父类原型的一个副本":["173.9"],"然后将返回的新对象赋值给子类原型":["173.9"],"该题主要考察就是对":["173.9"],"中的继承是否了解":["173.9"],"以及常见的继承的形式有哪些":["173.9"],"最常用的继承就是":["173.9"],"和圣杯模式继承":["173.9"],"下面附上":["173.9"],"中这两种继承模式的详细解析":["173.9"],"下面是一个组合继承的例子":["173.9"],"基类":["173.9"],"person":["173.9"],"操作符都做了哪些事":["173.10"],"事件循环机制":["173.12"],"宏任务":["173.12","173.52"],"微任务":["173.12","173.52"],"你了解":["173.13"],"中的事件循环机制吗":["173.13"],"node11":["173.13"],"版本以后有什么改变":["173.13"],"在主线程里维护了一个":["173.13"],"事件队列":["173.13"],"当接到请求后":["173.13"],"就将该请求作为一个事件放入这个队列中":["173.13"],"然后继续接收其他请求":["173.13"],"当主线程空闲时":["173.13"],"没有请求接入时":["173.13"],"就开始循环事件队列":["173.13"],"检查队列中是否有要处理的事件":["173.13"],"这时要分两种情况":["173.13"],"如果是非":["173.13"],"就亲自处理":["173.13"],"什么是函数柯里化":["173.14"],"柯里化":["173.14","173.47"],"currying":["173.14"],"又称部分求值":["173.14"],"方法的使用场景":["173.15"],"数组中必须每一项都是":["173.15"],"对象吗":["173.15"],"的指向哪几种":["173.16"],"总结起来":["173.16"],"中继承实现的几种方式":["173.17"],"的继承随着语言的发展":["173.17"],"从最早的对象冒充到现在的圣杯模式":["173.17"],"涌现出了很多不同的继承方式":["173.17"],"每一种新的继承方式都是对前一种继承方式不足的一种补充":["173.17"],"什么是事件监听":["173.18"],"首先需要区别清楚事件监听和事件监听器":["173.18"],"在绑定事件的时候":["173.18"],"的闭包":["173.19"],"事件委托以及冒泡原理":["173.20"],"事件委托":["173.20"],"又被称之为事件代理":["173.20"],"什么是块级作用域":["173.21"],"如何用":["173.21"],"的方法实现块级作用域":["173.22"],"箭头函数的特性":["173.23"],"箭头函数与普通函数的区别":["173.24"],"外形不同":["173.24"],"箭头函数使用箭头定义":["173.24"],"普通函数中没有":["173.24"],"的基本数据类型有哪些":["173.25"],"基本数据类型和引用数据类型的区别":["173.25"],"数据类型整体上来讲可以分为两大类":["173.25"],"基本类型":["173.25"],"引用数据类型":["173.25"],"是什么的缩写":["173.26"],"的作用域类型":["173.27"],"返回的结果是什么":["173.28"],"的区别在哪":["173.28"],"返回":["173.28","179.56","195.6","209.12","215.2"],"这两个值都表示":["173.28"],"无":["173.28"],"通常情况下":["173.28"],"当我们试图访问某个不存在的或者没有赋值的变量时":["173.28"],"写一个函数判断变量类型":["173.29"],"gettype":["173.29"],"的异步处理函数":["173.30"],"在最早期的时候":["173.30"],"中要实现异步操作":["173.30"],"defer":["173.31"],"按照惯例":["173.31"],"所有":["173.31"],"元素都应该放在页面的":["173.31"],"元素中":["173.31"],"这种做法的目的就是把":["173.31"],"浏览器事件循环和任务队列":["173.32"],"原型与原型链":["173.33"],"作用域与作用域链":["173.34"],"闭包及应用场景以及闭包缺点":["173.35"],"原始值与引用值":["173.37"],"19年":["173.37","173.39","173.41"],"原始值是表示":["173.37"],"中可用的数据或信息的最底层形式或最简单形式":["173.37"],"如何判断数组或对象":["173.39"],"instanceof":["173.39","173.41","173.69"],"对象深拷贝与浅拷贝":["173.40"],"单独问了":["173.40"],"说说":["173.41"],"原理":["173.41","178.7","208.0"],"并回答下面的题目":["173.41"],"内存泄漏":["173.42"],"新增哪些东西":["173.43"],"让你自己说":["173.43"],"实现继承":["173.46"],"虾皮":["173.46","173.48"],"借用构造函数实现继承":["173.46"],"parent1":["173.46"],"科里化":["173.47"],"搜狗":["173.47","173.52"],"英语全称":["173.47"],"防抖和节流":["173.48"],"排序算法":["173.51"],"算法":["173.51","178.1","222.8"],"algorithm":["173.51"],"浏览器事件循环和":["173.52"],"事件循环":["173.52"],"浏览器中的":["173.52"],"loop":["173.52","179.50"],"事件循环中的异步队列有两种":["173.52"],"macro":["173.52"],"队列和":["173.52"],"micro":["173.52"],"队列":["173.52"],"宏任务队列可以有多个":["173.52"],"微任务队列只有一个":["173.52"],"可以扩充到作用域链":["173.55"],"什么是作业域":["173.55"],"是异步编程的一种解决方案":["173.56"],"比传统的解决方案":["173.56"],"实现一个函数":["173.57"],"对一个url进行请求":["173.57"],"失败就再次请求":["173.57"],"超过最大次数就走失败回调":["173.57"],"任何一次成功都走成功回调":["173.57"],"示例代码如下":["173.57"],"params":["173.57","195.4"],"冒泡排序":["173.58","179.61"],"冒泡排序的核心思想是":["173.58"],"比较相邻的两个元素":["173.58"],"如果前一个比后一个大或者小":["173.58"],"取决于排序的顺序是小到大还是大到小":["173.58"],"则交换位置":["173.58"],"比较完第一轮的时候":["173.58"],"数组降维":["173.59"],"数组降维就是将一个嵌套多层的数组进行降维操作":["173.59"],"也就是对数组进行扁平化":["173.59"],"时代我们需要自己手写方法或者借助函数库来完成":["173.59"],"但是现在可以使用":["173.59"],"新提供的数组方法":["173.59"],"来完成数组降维操作":["173.59"],"代码题":["173.61"],"是实现代理":["173.62"],"可以改变":["173.62"],"深拷贝":["173.64","286.14"],"有深拷贝就有浅拷贝":["173.64"],"浅拷贝就是只拷贝对象的引用":["173.64"],"而不深层次的拷贝对象的值":["173.64"],"多个对象指向堆内存中的同一对象":["173.64"],"任何一个修改都会使得所有对象的值修改":["173.64"],"因为它们共用一条数据":["173.64"],"深拷贝不是单纯的拷贝一份引用数据类型的引用地址":["173.64"],"而是将引用类型的值全部拷贝一份":["173.64"],"形成一个新的引用类型":["173.64"],"这样就不会发生引用错乱的问题":["173.64"],"数据的基础类型":["173.66"],"返回结果":["173.67"],"对变量进行类型判断的方式有哪些":["173.68"],"常用的方法有":["173.68"],"是一个操作符":["173.68","173.69"],"其右侧跟一个一元表达式":["173.68"],"并返回这个表达式的数据类型":["173.68"],"返回的结果用该类型的字符串":["173.68"],"全小写字母":["173.68"],"形式表示":["173.68"],"包括以下":["173.68"],"是如何实现":["173.69"],"引用类型有哪些":["173.70"],"有什么特点":["173.70"],"中七种内置类型":["173.70"],"闭包的缺点是什么":["173.73"],"闭包的应用场景有哪些":["173.73"],"怎么销毁闭包":["173.73"],"的垃圾回收站机制":["173.74"],"具有自动垃圾回收机制":["173.74"],"什么是作用域链":["173.75"],"原型链":["173.75","177.10","179.12"],"一个构造函数发生了什么":["173.76"],"什么是变量提升":["173.78"],"的区别是什么":["173.79"],"基础数据类型和引用数据类型":["173.81"],"哪个是保存在栈内存中":["173.81"],"哪个是在堆内存中":["173.81"],"箭头函数解决了什么问题":["173.82"],"箭头函数主要解决了":["173.82"],"的指向问题":["173.82"],"一旦对象的方法里面又存在函数":["173.82"],"的其他方法有用过吗":["173.84"],"是如何实现的":["173.85"],"新推出的关键字":["173.85"],"它是一个语法糖":["173.85"],"本质上就是基于这个原型实现的":["173.85"],"只不过在以前":["173.85"],"原型实现的基础上":["173.85"],"添加了一些":["173.85"],"classcallcheck":["173.85"],"defineproperties":["173.85"],"createclass":["173.85"],"等方法来做出了一些特殊的处理":["173.85"],"中模块化导入和导出与":["173.87"],"common":["173.87"],"有什么区别":["173.87","176.2","181.0"],"commonjs模块输出的是值的拷贝":["173.87"],"也就是说":["173.87"],"一旦输出一个值":["173.87"],"模块内部的变化不会影响到这个值":["173.87"],"printcount":["173.87"],"说一下":["173.89"],"说一下你学习过的有关":["173.90"],"了解过":["173.91"],"强制类型转换方法有哪些":["173.93"],"中的数据类型转换":["173.93"],"主要有三种方式":["173.93"],"纯函数":["173.94","178.8"],"一个函数":["173.94"],"如果符合以下两个特点":["173.94"],"那么它就可以称之为":["173.94"],"对于相同的输入":["173.94"],"永远得到相同的输出":["173.94"],"没有任何可观察到的副作用":["173.94"],"针对上面的两个特点":["173.94"],"我们一个一个来看":["173.94"],"模块化主要是用来抽离公共代码":["173.95"],"隔离作用域":["173.95"],"避免变量冲突等":["173.95"],"模块化的整个发展历史如下":["173.95"],"iife":["173.95"],"看过":["173.96"],"区别":["173.98","185.7","189.0","202.0"],"手写":["173.98","173.99"],"的功能相同":["173.98"],"区别在于传参的方式不一样":["173.98"],"arg1":["173.98"],"arg2":["173.98"],"调用一个函数":["173.98"],"具有一个指定的":["173.98"],"值和分别地提供的参数":["173.98"],"参数的列表":["173.98"],"argsarray":["173.98"],"以及作为一个数组":["173.98"],"或类数组对象":["173.98"],"提供的参数":["173.98"],"有一个很重要的区别":["173.98"],"一个函数被":["173.98"],"reduce":["173.99"],"my":["173.99","275.2"],"callback":["173.99"],"initialvalue":["173.99"],"isarray":["173.99"],"else":["173.99","204.3","206.1","214.2"],"判断是否有初始值":["173.99"],"hasinitialvalue":["173.99"],"给定一个数组":["174.2","174.58"],"空间复杂度o":["174.4","174.16"],"给定一个数组nums":["174.6"],"双端指针":["174.8"],"的方式":["174.8"],"将三数之和转化为两数之和":["174.8"],"输入一组版本号":["174.10"],"输入一个字符串":["174.14","174.18"],"abcabcde":["174.15"],"abc":["174.19","174.20","214.3"],"acb":["174.20"],"bca":["174.20"],"bac":["174.20"],"cab":["174.20"],"cba":["174.20"],"利用回溯算法":["174.20","174.48"],"计算所有字符串的组合":["174.20"],"时间复杂度为o":["174.21","174.22","174.23","174.24","174.25"],"n²":["174.21","174.22","174.23"],"稳定排序算法":["174.21"],"bubblesort":["174.21"],"不稳定":["174.22","174.24"],"selectsort":["174.22"],"稳定":["174.23","174.25"],"insertsort":["174.23"],"quicksort":["174.24"],"当每个子序列中仅有1个元素时返回":["174.25"],"输入一组列表如下":["174.27"],"child1":["174.29"],"parentid":["174.29","286.31"],"对树进行遍历":["174.31"],"递归版本":["174.33"],"deeptree":["174.33"],"以横向的维度对树进行遍历":["174.35"],"tree结构":["174.36"],"查找树形结构中符合要求的节点":["174.39"],"结果":["174.40"],"上文第11题生成的tree":["174.40"],"func":["174.40","283.4","283.12"],"判断一个数组":["174.42"],"preorderofbst":["174.44"],"查找二叉树和为某一值的路径":["174.46"],"二叉树结构如下":["174.47"],"找到和为某一值的路径":["174.48"],"给定一个整数数组":["174.50"],"贪心算法求解":["174.52"],"股票每天的价格列表":["174.52"],"从第3项开始":["174.54"],"使用动态规划":["174.56"],"将复杂的问题拆分":["174.56"],"也就是":["174.56"],"maxslidingwindow":["174.60"],"一个整数数组":["174.62"],"lengthoflis":["174.64"],"创建一个和原数组等长的数组dp":["174.64"],"用来存储每一项的最长递增子序列":["174.64"],"浏览器网络篇":["175.0"],"get和post的请求的区别":["175.0"],"请求的两种方法":["175.0"],"其区别如下":["175.0"],"第一次请求为":["175.1"],"responses":["175.3"],"type常见的":["175.4"],"属性值有以下四种":["175.4"],"urlencoded":["175.4"],"浏览器的原生":["175.4"],"表单":["175.4"],"如果不设置":["175.4"],"enctype":["175.4"],"那么最终就会以":["175.4"],"方式提交数据":["175.4"],"该种方式提交的数据放在":["175.4"],"里面":["175.4"],"数据按照":["175.4"],"key1":["175.4"],"val1":["175.4"],"key2":["175.4"],"val2":["175.4"],"的方式进行编码":["175.4"],"val":["175.4"],"都进行了":["175.4"],"onreadstatechange事件":["175.5"],"onload事件":["175.5"],"接收服务器响应的数":["175.5"],"一次请求":["175.5"],"只会执行一次":["175.5"],"onreadystatechang事件":["175.5"],"作用与onload事件一致":["175.5"],"会执行多次":["175.5"],"面试点":["175.5"],"xmlhttprequest对象的状态码":["175.5"],"如何上传文件":["175.6"],"上传图片":["175.6"],"文件上传思路总结":["175.6"],"给file表单注册onchange事件":["175.6"],"当用户选择图片之后执行":["175.6"],"获取用户选择的图片":["175.6"],"如何自定义上传文件按钮":["175.7"],"ajax请求如何取消":["175.8"],"原生xhr取消请求":["175.8"],"abort":["175.8"],"6取消ajax请求有什么意义":["175.9"],"取消ajax请求的意义":["175.9"],"已发出的请求可能仍然会到达后端":["175.9"],"取消后续的回调处理":["175.9"],"避免多余的回调处理":["175.9"],"以及特殊情况":["175.9"],"先发出的后返回":["175.9"],"导致回调中的数据错误覆盖":["175.9"],"取消loading效果":["175.9"],"以及该请求的其他交互效果":["175.9"],"特别是在单页应用中":["175.9"],"a页面跳转到b页面之后":["175.9"],"a页面的请求应该取消":["175.9"],"否则回调中的一些处理可能影响b页面":["175.9"],"超时处理":["175.9"],"错误处理等都省去了":["175.9"],"节约资源":["175.9"],"options请求方法及使用场景":["175.9"],"options是除了get和post之外的其中一种":["175.9"],"http请求方法":["175.9"],"浏览器自动执行":["175.9"],"options方法是用于请求获得由":["175.9"],"uri":["175.9"],"标识的资源在请求":["175.9"],"响应的通信过程中可以使用的功能选项":["175.9"],"通过这个方法":["175.9"],"客户端可以":["175.9"],"在采取具体资源请求之前":["175.9"],"决定对该资源采取何种必要措施":["175.9"],"或者了解服务器的性能":["175.9"],"该请求方法的响应不能缓存":["175.9"],"队头阻塞的解决方案":["175.10"],"并发连接":["175.10"],"对于一个域名允许分配多个长连接":["175.10"],"那么相当于增加了任务队列":["175.10"],"不至于一个队伍的任务阻塞其它所有任务":["175.10"],"域名分片":["175.10"],"将域名分出很多二级域名":["175.10"],"它们都指向同样的一台服务器":["175.10"],"能够并发的长连接数变多":["175.10"],"解决了队头阻塞的问题":["175.10"],"http和https协议的区别":["175.10"],"http和https协议的主要区别如下":["175.10"],"https协议需要ca证书":["175.10"],"费用较高":["175.10"],"而http协议不需要":["175.10"],"http协议是超文本传输协议":["175.10"],"信息是明文传输的":["175.10"],"https则是具有安全性的ssl加密传输协议":["175.10"],"使用不同的连接方式":["175.10"],"端口也不同":["175.10"],"http协议端口是80":["175.10"],"https协议端口是443":["175.10"],"http协议连接很简单":["175.10"],"是无状态的":["175.10"],"https协议是有ssl和http协议构建的可进行加密传输":["175.10"],"身份认证的网络协议":["175.10"],"比http更加安全":["175.10"],"get方法url长度限制的原因":["175.10"],"实际上http协议规范并没有对get方法请求的url长度进行限制":["175.10"],"这个限制是特定的":["175.10"],"浏览器":["175.10"],"服务器":["175.10","177.13","195.6"],"对它的限制":["175.10"],"ie对url长度的限制是2083字节":["175.10"],"2k":["175.10"],"由于ie浏览器对url长度的允许值是":["175.10"],"最小的":["175.10"],"所以开发过程中":["175.10"],"只要url不超过2083字节":["175.10"],"那么在所有浏览器中工作都不会有问题":["175.10"],"get的长度值":["175.10"],"你的domain":["175.10"],"2是get请求中":["175.10"],"两个字符的长度":["175.10"],"下面看一下主流浏览器对get方法中url的长度限制范围":["175.10"],"internet":["175.10"],"explorer":["175.10","254.21"],"ie浏览器对url的最大限制为2083个字符":["175.10"],"如果超过这个数字":["175.10"],"提交按钮没有任何反应":["175.10"],"firefox":["175.10","179.11"],"对于firefox浏览器url的长度限制为":["175.10"],"个字符":["175.10"],"safari":["175.10"],"url最大长度限制为":["175.10"],"opera":["175.10"],"主流的服务器对get方法中url的长度限制范围":["175.10"],"apache":["175.10"],"能接受最大url长度为8192个字符":["175.10"],"iis":["175.10"],"能接受最大url的长度为16384个字符":["175.10"],"根据上面的数据":["175.10"],"可以知道":["175.10"],"get方法中的url长度最长不超过2083个字符":["175.10"],"这样所有的浏览器和服务器都可能正常工作":["175.10"],"一个页面从输入":["175.10"],"到页面加载显示完成":["175.10"],"这个过程中都发生了什么":["175.10"],"解析url":["175.10"],"首先会对":["175.10"],"进行解析":["175.10"],"分析所需要使用的传输协议和请求的资源的路径":["175.10"],"如果输入的":["175.10"],"中的协议或者主机名不合法":["175.10"],"将会把地址栏中输入的内容传递给搜索引擎":["175.10"],"如果没有问题":["175.10"],"浏览器会检查":["175.10"],"中是否出现了非法字符":["175.10"],"如果存在非法字符":["175.10"],"则对非法字符进行转义后再进行下一过程":["175.10"],"缓存判断":["175.10"],"浏览器会判断所请求的资源是否在缓存里":["175.10"],"数字签名是什么":["175.12"],"数字签名就是先用ca自带的hash算法来计算出证书内容的一个摘要":["175.12"],"然后使用ca私钥进行加密":["175.12"],"组成数字签名":["175.12"],"当别人把他的数字证书发过来时":["175.12"],"接收方用同样的算法再次生成摘要":["175.12"],"用ca公钥解密后得到ca生成的摘要":["175.12"],"两者进行对比后":["175.12"],"就能确定中间是否被人篡改":["175.12"],"这样就能最大程度的保证通信的安全了":["175.12"],"https通信":["175.12"],"握手":["175.12"],"过程":["175.12"],"https的通信过程如下":["175.12"],"客户端向服务器发起请求":["175.12"],"请求中包含使用的协议版本号":["175.12"],"生成的一个随机数":["175.12"],"以及客户端支持的加密方法":["175.12"],"服务器端接收到请求后":["175.12"],"确认双方使用的加密方法":["175.12"],"并给出服务器的证书":["175.12"],"以及一个服务器生成的随机数":["175.12"],"客户端确认服务器证书有效后":["175.12"],"生成一个新的随机数":["175.12"],"并使用数字证书中的公钥":["175.12"],"加密这个随机数":["175.12"],"然后发给服":["175.12"],"务器":["175.12"],"并且还会提供一个前面所有内容的":["175.12"],"的值":["175.12","181.0"],"用来供服务器检验":["175.12"],"服务器使用自己的私钥":["175.12"],"来解密客户端发送过来的随机数":["175.12"],"并提供前面所有内容的":["175.12"],"值来供客户端检验":["175.12"],"客户端和服务器端根据约定的加密方法使用前面的三个随机数":["175.12"],"生成对话秘钥":["175.12"],"以后的对话过程都使用这个秘钥来加密信息":["175.12"],"https的优缺点":["175.12"],"https的":["175.12"],"使用https协议可以认证用户和服务器":["175.12"],"确保数据发送到正确的客户端和服务器":["175.12"],"使用https协议可以进行加密传输":["175.12"],"身份认证":["175.12"],"通信更加安全":["175.12"],"防止数据在传输过程中被窃取":["175.12"],"确保数据安全性":["175.12"],"https是现行架构下最安全的解决方案":["175.12"],"虽然不是绝对的安全":["175.12"],"但是大幅增加了中间人攻击的成本":["175.12"],"https需要做服务器和客户端双方的加密个解密处理":["175.12"],"耗费更多服务器资源":["175.12"],"过程复杂":["175.12"],"https协议握手阶段比较费时":["175.12"],"增加页面的加载时间":["175.12"],"ssl证书是收费的":["175.12"],"功能越强大的证书费用越高":["175.12"],"https连接服务器端资源占用高很多":["175.12"],"支持访客稍多的网站需要投入更大的成本":["175.12"],"ssl证书需要绑定ip":["175.12"],"不能再同一个ip上绑定多个域名":["175.12"],"https是如何保证安全的":["175.12"],"结合":["175.12"],"对称加密":["175.12"],"非对称加密":["175.12"],"两种加密":["175.12"],"式":["175.12"],"将对称加密的密钥使":["175.12"],"对称加密的公钥进":["175.12"],"加密":["175.12"],"然后发送出去":["175.12"],"接收":["175.12"],"使":["175.12","252.6"],"私钥进":["175.12"],"解密得到对称加密的密钥":["175.12"],"然后双":["175.12"],"可以使":["175.12"],"对称加密来进":["175.12"],"沟通":["175.12"],"这个时候还需要":["175.12"],"个安全的":["175.12"],"第三":["175.12"],"颁发证书":["175.12"],"ca":["175.12"],"证明身份的身份":["175.12"],"防":["175.12"],"被中间":["175.12"],"攻击":["175.12"],"为了防止中间人篡改证书":["175.12"],"需要用到":["175.12"],"数字签名":["175.12"],"这个技术":["175.12"],"数字签名就是":["175.12"],"带的hash算法对证书的内容进":["175.12"],"hash得到":["175.12"],"个摘要":["175.12"],"再":["175.12"],"ca的私钥加密":["175.12"],"最终组成数字签名":["175.12"],"当别":["175.12"],"把他的证书发过来的时候":["175.12"],"我再":["175.12"],"同样的hash算法":["175.12"],"再次":["175.12"],"成消息摘要":["175.12"],"ca的公钥对数字签名解密":["175.12"],"得到ca创建的消息摘要":["175.12"],"两者":["175.12"],"就知道中间有没有被":["175.12"],"使用浏览器缓存":["175.13"],"有以下优点":["175.13"],"减少了服务器的负担":["175.13"],"提高了网站的性能":["175.13"],"加快了客户端网页的加载速度":["175.13"],"减少了多余网络数据传输":["175.13"],"点击刷新按钮或者按":["175.13"],"f5":["175.13"],"按":["175.13"],"ctrl":["175.13"],"强制刷新":["175.13"],"地址栏回车有什么区别":["175.13"],"浏览器直接对本地的缓存文件过期":["175.13"],"但是会带上if":["175.13"],"cookie是最早被提出来的本地存储方式":["175.14"],"在此之前":["175.14"],"服务端是无法判断网络中的两个请求是否是同一用户发起的":["175.14"],"为解决这个问题":["175.14"],"localstorage是html5新引入的特性":["175.15"],"由于有的时候我们存储的信息较大":["175.15"],"cookie就不能满足我们的需求":["175.15"],"sessionstorage和localstorage都是在html5才提出来的存储方案":["175.16"],"主要用于临时保存同一窗口":["175.16"],"或标签页":["175.16"],"的数据":["175.16","195.9"],"刷新页面时不会删除":["175.16"],"关闭窗口或标签页之后将会删除这些数据":["175.16"],"sessionstorage与localstorage对比":["175.16"],"sessionstorage和localstorage都在":["175.16"],"本地进行数据存储":["175.16"],"sessionstorage也有同源策略的限制":["175.16"],"但是sessionstorage有一条更加严格的限制":["175.16"],"sessionstorage只有在同一浏览器的同一窗口下才能够共享":["175.16"],"cors需要浏览器和服务器同时支持":["175.17"],"jsonp的原理就是利用":["175.18"],"标签没有跨域限制":["175.18"],"postmessage是html5":["175.19"],"proxy正向代理":["175.20"],"正向代理和反向代理的区别":["175.21"],"中间":["175.22"],"man":["175.22"],"attack":["175.22"],"mitm":["175.22"],"是指攻击者与通讯的两端分别创建独":["175.22"],"的联系":["175.22"],"并交换其所收到的数据":["175.22"],"使通讯的两端认为他们正在通过":["175.22"],"个私密的连接与对":["175.22"],"直接对话":["175.22"],"但事实上整个会话都被攻击者完全控制":["175.22"],"在中间":["175.22"],"攻击中":["175.22"],"攻击者可以拦截通讯双":["175.22"],"的通话并插":["175.22"],"新的内容":["175.22"],"攻击过程如下":["175.22"],"客户端发送请求到服务端":["175.22"],"请求被中间":["175.22"],"截获":["175.22"],"服务器向客户端发送公钥":["175.22"],"截获公钥":["175.22"],"保留在":["175.22"],"上":["175.22","176.6","179.0","205.2"],"如何实现":["176.2","176.4"],"防抖":["176.2","179.27"],"触发高频事件后":["176.2"],"秒后函数只会执行一次":["176.2"],"如果":["176.2","212.1"],"秒内高频事件再次被触发":["176.2"],"则重新计算时间":["176.2"],"debounce":["176.2","179.27","283.4"],"深度优先遍历":["176.4"],"是指从某个顶点出发":["176.4"],"首先访问这个顶点":["176.4"],"然后找出刚访问这个结点的第一个未被访问的邻结点":["176.4"],"然后再以此邻结点为顶点":["176.4"],"继续找它的下一个顶点进行访问":["176.4"],"重复此步骤":["176.4"],"直至所有结点都被访问完为止":["176.4"],"广度优先遍历":["176.4"],"是从某个顶点出发":["176.4"],"然后找出刚访问这个结点所有未被访问的邻结点":["176.4"],"访问完后再访问这些结点中第一个邻结点的所有结点":["176.4"],"重复此方法":["176.4"],"直到所有结点都被访问完为止":["176.4"],"深度优先遍历的递归写法":["176.4"],"的继承除了写法以外还有什么区别":["176.6"],"的继承实质上是先创建子类的实例对象":["176.6"],"然后再将父类的方法添加到":["176.6"],"parent":["176.6","206.14","219.3","241.1","241.10"],"异步解决方案的发展历程以及优缺点":["176.8"],"回调函数":["176.9","177.13"],"构造函数是同步执行还是异步执行":["176.13"],"方法呢":["176.13"],"客户端发送syn包到服务器":["176.15"],"就是中间多了一层":["176.16"],"等待服务器再一次响应回复相关数据的过程":["176.16"],"笔试题":["176.18"],"下面的代码输出什么":["176.18"],"super":["176.18"],"模块安装机制":["176.19"],"发出":["176.19"],"下":["177.0"],"hybrid":["177.0","177.1"],"随着":["177.0"],"混合方案简析":["177.1"],"俗称":["177.1","178.7"],"混合应用":["177.1"],"即混合了":["177.1"],"native技术":["177.1"],"web技术":["177.1"],"进行开发的移动应用":["177.1"],"webviev":["177.2"],"交互原理":["177.3"],"hybrid技术":["177.3"],"中最核心的点就是":["177.3"],"native端":["177.3"],"h5端":["177.3"],"之间的":["177.3"],"双向通讯层":["177.3"],"其实这里也可以理解为我们需要一套":["177.3"],"接入方案":["177.4"],"整套方案需要":["177.4"],"native":["177.4"],"优化方案简述":["177.5"],"的初始化其实挺耗时的":["177.5"],"我们测试过":["177.5"],"大概在100":["177.5"],"200ms之间":["177.5"],"因此如果能前置做好初始化于内存中":["177.5"],"会大大加快渲染速度":["177.5"],"更新机制":["177.5"],"使用离线包的时候":["177.5"],"原理简述":["177.6"],"已经成为了现在前端工程化中最重要的一环":["177.6"],"的配合":["177.6"],"前端领域完成了不可思议的进步":["177.6"],"通过预编译":["177.6"],"将软件编程中先进的思想和理念能够真正运用于生产":["177.6"],"让前端开发领域告别原始的蛮荒阶段":["177.6"],"深入理解":["177.6"],"可以让你在编程思维及技术领域上产生质的成长":["177.6"],"极大拓展技术边界":["177.6"],"这也是在面试中必不可少的一个内容":["177.6"],"模块打包工具":["177.6"],"bundler":["177.6"],"通过分析模块之间的依赖":["177.6"],"最终将所有模块打包成一份或者多份代码包":["177.6"],"供":["177.6"],"直接引用":["177.6"],"是基于":["177.7","251.1"],"其实是只能识别":["177.7"],"模块":["177.7","217.2"],"图片等类型的文件并无法加载":["177.7"],"因此就需要一个对":["177.7"],"不同格式文件转换器":["177.7"],"做的事":["177.7"],"也并不难理解":["177.7"],"插件系统是":["177.8"],"成功的一个关键性因素":["177.8"],"在编译的整个生命周期中":["177.8"],"会触发许多事件钩子":["177.8"],"可以监听这些事件":["177.8"],"根据需求在相应的时间点对打包内容进行定向的修改":["177.8"],"一个最简单的":["177.8"],"是这样的":["177.8"],"注册插件时":["177.8"],"会调用":["177.8","180.2"],"方法接收":["177.8"],"编译优化":["177.9"],"代码优化":["177.9"],"无用代码消除":["177.9"],"是许多编程语言都具有的优化手段":["177.9"],"这个过程称为":["177.9"],"dce":["177.9"],"dead":["177.9"],"elimination":["177.9"],"删除不可能执行的代码":["177.9"],"例如我们的":["177.9"],"uglifyjs":["177.9"],"它就会帮我们在生产环境中删除不可能被执行的代码":["177.9"],"下面代码便属于":["177.9"],"不可能执行的代码":["177.9"],"编码优化":["177.10"],"指的就是":["177.10"],"在代码编写时的":["177.10"],"通过一些":["177.10"],"提升代码的执行性能":["177.10"],"通常这并不会带来非常大的收益":["177.10"],"但这属于":["177.10"],"程序猿的自我修养":["177.10"],"而且这也是面试中经常被问到的一个方面":["177.10"],"考察自我管理与细节的处理":["177.10"],"数据读取":["177.10"],"通过作用域链":["177.10"],"读取变量或方法时":["177.10"],"需要更多的耗时":["177.10"],"且越长越慢":["177.10"],"对象嵌套越深":["177.10"],"读取值也越慢":["177.10"],"尽量在局部作用域中进行":["177.10"],"变量缓存":["177.10"],"避免嵌套过深的数据结构":["177.10"],"数据扁平化":["177.10"],"有利于数据的读取和维护":["177.10"],"页面基础优化":["177.11"],"引入位置":["177.11"],"中引入":["177.11"],"底部引入":["177.11"],"影响首屏的":["177.11"],"优先级很高的":["177.11"],"首屏渲染优化":["177.12"],"分割":["177.12"],"使首屏依赖的文件体积最小":["177.12"],"内联首屏关键":["177.12"],"非关键性的文件尽可能的":["177.12"],"异步加载和懒加载":["177.12"],"在现今的大型应用":["177.13"],"网站基本都离不开":["177.13"],"已经成为了一项必选的技术":["177.13"],"其实可以把它理解成":["177.13"],"入口网关":["177.13"],"这里我举个例子可能更好理解":["177.13"],"当你去银行办理业务时":["177.13"],"刚走进银行":["177.13"],"需要到入门处的机器排队取号":["177.13"],"然后按指令到对应的柜台办理业务":["177.13"],"或者也有可能告诉你":["177.13"],"今天不能排号了":["177.13"],"回家吧":["177.13"],"这样一个场景中":["177.13"],"取号机器就是":["177.13"],"一个个柜台就是我们的业务服务器":["177.13"],"办理业务":["177.13"],"银行中的保险箱就是我们的数据库":["177.13"],"存取数据":["177.13"],"配置方便灵活":["177.13"],"无侵入性":["177.13"],"占用内存少":["177.13"],"启动快":["177.13"],"性能好":["177.13"],"高并发":["177.13"],"事件驱动":["177.13"],"异步":["177.13"],"热部署":["177.13"],"修改配置热生效":["177.13"],"架构模型":["177.13"],"epoll":["177.13"],"事件通知机制":["177.13"],"实现了":["177.13"],"使用模块化":["177.13"],"事件通知":["177.13"],"计时器":["177.13"],"轮询实现非阻塞的异步模式":["177.13"],"磁盘不足的情况":["177.13"],"可能会导致阻塞":["177.13"],"是一款现在最流行的":["177.14"],"软件容器平台":["177.14"],"提供了软件运行时所依赖的环境":["177.14"],"物理机":["177.14"],"硬件环境":["177.14"],"真实的":["177.14"],"计算机实体":["177.14"],"包含了例如物理内存":["177.14"],"硬盘等等硬件":["177.14"],"在物理机上":["177.14"],"模拟出一套硬件环境和操作系统":["177.14"],"应用软件可以运行于其中":["177.14"],"并且毫无感知":["177.14"],"是一套":["177.14"],"隔离的完整环境":["177.14"],"它只是物理机上的一份":["177.14"],"运行文件":["177.14"],"为什么需要虚拟机":["177.14"],"环境配置与迁移":["177.14"],"在软件开发和运行中":["177.14"],"进阶知识":["178.0"],"框架":["178.0"],"fiber":["178.1","178.2","206.1","206.5","206.8","206.12","206.14","206.15","208.5"],"的核心流程可以分为两个部分":["178.1"],"reconciliation":["178.1"],"调度算法":["178.1"],"也可称为":["178.1"],"调用生命周期钩子":["178.1"],"生成":["178.1","239.3","241.1"],"这里应该称为":["178.1"],"更为符合":["178.1"],"通过新旧":["178.1"],"vdom":["178.1"],"进行":["178.1","252.3"],"change":["178.1","195.9"],"确定是否需要重新渲染":["178.1"],"在新版本中":["178.2"],"官方对生命周期有了新的":["178.2"],"变动建议":["178.2"],"getderivedstatefromprops":["178.2"],"替换":["178.2","254.4"],"componentwillmount":["178.2"],"componentwillreceiveprops":["178.2"],"getsnapshotbeforeupdate":["178.2"],"componentwillupdate":["178.2"],"避免使用":["178.2","179.39"],"其实该变动的原因":["178.2"],"正是由于上述提到的":["178.2"],"从上面我们知道":["178.2"],"可以分成":["178.2"],"在了解":["178.3"],"我们先来简单了解下":["178.3"],"一个包装结构":["178.3"],"transaction":["178.3"],"事务":["178.3"],"中的一个调用结构":["178.3"],"用于包装一个方法":["178.3"],"结构为":["178.3"],"initialize":["178.3"],"perform":["178.3","214.1"],"close":["178.3"],"通过事务":["178.3"],"可以统一管理一个方法的开始与结束":["178.3"],"hoc":["178.4","178.6"],"高阶组件":["178.4"],"higher":["178.4","239.3"],"componennt":["178.4"],"机制下社区形成的一种组件模式":["178.4"],"在很多第三方开源库中表现强大":["178.4"],"简述":["178.4"],"高阶组件不是组件":["178.4"],"增强函数":["178.4"],"可以输入一个元组件":["178.4"],"返回出一个新的增强组件":["178.4"],"高阶组件的主要作用是":["178.4"],"代码复用":["178.4"],"状态和参数":["178.4"],"用法":["178.4","258.1"],"属性代理":["178.4"],"返回出一个组件":["178.4"],"它基于被包裹组件进行":["178.4"],"功能增强":["178.4"],"默认参数":["178.4"],"可以为组件包裹一层默认参数":["178.4"],"proxyhoc":["178.4"],"comp":["178.4","221.1"],"redux":["178.5","178.8"],"数据管理中心":["178.5"],"可以把它理解为一个全局的":["178.5"],"实例":["178.5","179.11"],"它通过一定的使用规则和限制":["178.5"],"保证着数据的健壮性":["178.5"],"可追溯和可预测性":["178.5"],"它与":["178.5"],"无关":["178.5"],"可以独立运行于任何":["178.5"],"环境中":["178.5"],"从而也为同构应用提供了更好的数据同步通道":["178.5"],"核心理念":["178.5"],"单一数据源":["178.5"],"整个应用只有唯一的状态树":["178.5"],"也就是所有":["178.5"],"最终维护在一个根级":["178.5"],"状态只读":["178.5"],"为了保证状态的可控性":["178.5"],"最好的方式就是监控状态的变化":["178.5"],"那这里就两个必要条件":["178.5"],"中通常使用":["178.6"],"类定义":["178.6"],"函数定义":["178.6"],"创建组件":["178.6"],"在类定义中":["178.6"],"我们可以使用到许多":["178.6"],"各种组件生命周期钩子等":["178.6"],"但是在函数定义中":["178.6"],"我们却无能为力":["178.6"],"版本推出了一个新功能":["178.6"],"通过它":["178.6"],"可以更好的在函数定义组件中使用":["178.6"],"好处":["178.6"],"跨组件复用":["178.6"],"也是为了复用":["178.6"],"相比于它们":["178.6"],"作为官方的底层":["178.6"],"服务端渲染":["178.7"],"side":["178.7"],"讲人话就是":["178.7"],"直接在服务端层获取数据":["178.7"],"渲染出完成的":["178.7"],"直接返回给用户浏览器访问":["178.7"],"前后端分离":["178.7"],"前端与服务端隔离":["178.7"],"前端动态获取数据":["178.7"],"痛点":["178.7"],"首屏渲染性能瓶颈":["178.7"],"空白延迟":["178.7"],"html下载时间":["178.7"],"js下载":["178.7"],"执行时间":["178.7"],"请求时间":["178.7"],"渲染时间":["178.7"],"在这段时间内":["178.7"],"页面处于空白的状态":["178.7"],"seo":["178.7","181.0"],"由于页面初始状态为空":["178.7"],"因此爬虫无法获取页面中任何有效数据":["178.7"],"因此对搜索引擎不友好":["178.7"],"虽然一直有在提动态渲染爬虫的技术":["178.7"],"不过据我了解":["178.7"],"大部分国内搜索引擎仍然是没有实现":["178.7"],"最初的服务端渲染":["178.7"],"便没有这些问题":["178.7"],"但我们不能返璞归真":["178.7"],"既要保证现有的前端独立的开发模式":["178.7"],"又要由服务端渲染":["178.7"],"因此我们使用":["178.7"],"让前后端运行同一套代码成为可能":["178.7"],"让前端代码脱离浏览器运行":["178.7"],"条件":["178.7"],"中间层":["178.7"],"函数式编程":["178.8"],"函数式编程是一种":["178.8"],"编程范式":["178.8"],"你可以理解为一种软件架构的思维模式":["178.8"],"它有着独立一套理论基础与边界法则":["178.8"],"追求的是":["178.8"],"更简洁":["178.8"],"可预测":["178.8"],"高复用":["178.8"],"易测试":["178.8"],"其实在现有的众多知名库中":["178.8"],"都蕴含着丰富的函数式编程思想":["178.8"],"常见的编程范式":["178.8"],"命令式编程":["178.8"],"过程化编程":["178.8"],"更关心解决问题的步骤":["178.8"],"一步步以语言的形式告诉计算机做什么":["178.8"],"事件驱动编程":["178.8"],"事件订阅与触发":["178.8"],"被广泛用于":["178.8"],"gui":["178.8"],"的编程设计中":["178.8"],"面向对象编程":["178.8"],"基于类":["178.8"],"对象与方法的设计模式":["178.8"],"拥有三个基础概念":["178.8"],"封装性":["178.8"],"继承性":["178.8"],"多态性":["178.8"],"换成一种更高端的说法":["178.8"],"面向数学编程":["178.8"],"怕不怕":["178.8"],"函数式编程的理念":["178.8"],"确定性函数":["178.8"],"是函数式编程的基础":["178.8"],"可以使程序变得灵活":["178.8"],"高度可拓展":["178.8"],"可维护":["178.8"],"盒模型":["179.1"],"页面渲染时":["179.1"],"元素所采用的":["179.1"],"块级格式化上下文":["179.2"],"是一个独立的渲染区域":["179.2"],"让处于":["179.2"],"内部的元素与外部的元素相互隔离":["179.2"],"使内外元素的定位不会相互影响":["179.2"],"ie下为":["179.2"],"层叠上下文":["179.3"],"元素提升为一个比较特殊的图层":["179.3"],"居中布局":["179.4"],"水平居中":["179.4"],"行内元素":["179.4"],"css预处理器":["179.8"],"css动画":["179.9"],"transition":["179.9","222.4"],"过渡动画":["179.9"],"property":["179.9"],"duration":["179.9"],"通常":["179.10","179.26"],"原型":["179.11"],"构造函数":["179.11"],"一个简单的对象":["179.11"],"用于实现对象的":["179.11"],"属性继承":["179.11"],"可以简单的理解成对象的爹":["179.11"],"原型链是由原型对象组成":["179.12"],"每个对象都有":["179.12"],"ec":["179.13"],"执行上下文可以简单理解为一个对象":["179.13"],"它包含三个部分":["179.13"],"变量对象":["179.13","179.14"],"执行上下文中还包含作用域链":["179.15"],"理解作用域之前":["179.15"],"先介绍下作用域":["179.15"],"我们知道":["179.16"],"闭包属于一种特殊的作用域":["179.17"],"称为":["179.17"],"对象的拷贝":["179.19"],"浅拷贝":["179.19"],"new运算符的执行过程":["179.20"],"instanceof原理":["179.21"],"继承":["179.23"],"类型转换":["179.24"],"大家都知道":["179.24"],"类型判断":["179.25"],"单单用":["179.25"],"并无法完全满足":["179.25"],"这其实并不是":["179.25"],"模块化开发在现代开发中已是必不可少的一部分":["179.26"],"它大大提高了项目的可维护":["179.26"],"可拓展和可协作性":["179.26"],"我们":["179.26"],"防抖与节流":["179.27"],"防抖与节流函数是一种最常用的":["179.27"],"高频触发优化方式":["179.27"],"能对性能有较大的帮助":["179.27"],"将多次高频操作优化为只在最后一次执行":["179.27"],"通常使用的场景是":["179.27"],"用户输入":["179.27"],"只需再输入完成后做一次输入校验即可":["179.27"],"函数执行改变this":["179.28"],"的设计原理":["179.28"],"在函数中":["179.28"],"可以引用运行环境中的变量":["179.28"],"es7":["179.29"],"的强大和普及":["179.29"],"现在":["179.29"],"基本上已经是现代化开发的必备了":["179.29"],"通过新的语法糖":["179.29"],"能让代码整体更为简洁和易读":["179.29"],"babel编译原理":["179.31"],"函数柯里化":["179.32"],"在一个函数中":["179.32"],"首先填充几个参数":["179.32"],"遍历数组":["179.33"],"返回回调返回值组成的新数组":["179.33"],"无法":["179.33","195.7"],"break":["179.33","206.2"],"可以用":["179.33","207.3"],"throw":["179.33","286.33"],"来停止":["179.33"],"跨标签页通讯":["179.34"],"不同标签页间的通讯":["179.34"],"本质原理就是去运用一些可以":["179.34"],"浏览器架构":["179.35"],"浏览器下事件循环":["179.36"],"从输入":["179.37"],"到展示的过程":["179.37"],"重绘与回流":["179.38"],"当元素的样式发生变化时":["179.38"],"浏览器需要触发更新":["179.38"],"重新绘制元素":["179.38"],"这个过程中":["179.38"],"有两种类型的操作":["179.38"],"存储":["179.40"],"我们经常需要对业务中的一些数据进行存储":["179.40"],"通常可以分为":["179.40"],"现代浏览器为":["179.41"],"创造的":["179.41"],"v8垃圾回收机制":["179.42"],"垃圾回收":["179.42"],"将内存中不再使用的数据进行清理":["179.42"],"释放出内存空间":["179.42"],"将内存分成":["179.42"],"新生代空间":["179.42"],"内存泄露":["179.43"],"意外的":["179.43"],"协议缺陷":["179.44"],"无法复用链接":["179.44"],"完成即断开":["179.44"],"重新慢启动和":["179.44"],"3次握手":["179.44"],"常见状态码":["179.45"],"接受":["179.45"],"继续处理":["179.45"],"tcp三次握手":["179.48"],"建立连接前":["179.48"],"客户端和服务端需要通过握手来确认对方":["179.48"],"tcp四次挥手":["179.49"],"jsonp":["179.51"],"标签不受跨域限制的特点":["179.51"],"缺点是只能支持":["179.51"],"xss攻击":["179.52"],"注入恶意代码":["179.52"],"nexttick":["179.53","195.9"],"initlifecycle":["179.54"],"往":["179.54"],"上挂载各种属性":["179.54"],"callhook":["179.54"],"beforecreated":["179.54"],"实例刚创建":["179.54"],"initinjection":["179.54"],"initstate":["179.54"],"初始化注入和":["179.54"],"响应性":["179.54"],"创建完成":["179.54"],"属性已经绑定":["179.54"],"但还未生成真实":["179.54"],"进行元素的挂载":["179.54"],"el":["179.54","236.6","286.11"],"mount":["179.54","195.9","235.4"],"是否有":["179.54"],"解析成":["179.54"],"数据响应":["179.55"],"数据劫持":["179.55"],"看完生命周期后":["179.55"],"里面的":["179.55"],"watcher":["179.55","180.0"],"等内容其实是数据响应中的一部分":["179.55"],"数据响应的实现由两部分构成":["179.55"],"观察者":["179.55"],"依赖收集器":["179.55"],"dep":["179.55","180.0","245.3","250.2"],"其核心是":["179.55"],"defineproperty":["179.55","180.0"],"这个方法":["179.55"],"它可以":["179.55"],"重写属性的":["179.55"],"从而完成监听数据的改变":["179.55"],"观察":["179.55","181.0"],"原理实现":["179.56"],"树的":["179.56"],"同层对比":["179.56"],"patchs":["179.56"],"listdiff":["179.56"],"diffchildren":["179.56"],"diffprops":["179.56"],"没有新的节点":["179.56"],"新的节点":["179.56"],"tagname":["179.56"],"不变":["179.56","184.23"],"对比":["179.56"],"继续递归遍历子树":["179.56"],"对比属性":["179.56"],"对比新旧属性列表":["179.56"],"旧属性是否存在与新属性列表中":["179.56"],"都存在的是否有变化":["179.56"],"是否出现旧列表中没有的新属性":["179.56"],"值变化了":["179.56"],"则直接替换成新节点":["179.56"],"渲染差异":["179.56"],"把需要更改的节点取出来":["179.56"],"局部更新":["179.56"],"diff算法的实现":["179.56"],"oldtree":["179.56"],"vuex":["179.59"],"基础排序算法":["179.61"],"两两比较":["179.61"],"bublesort":["179.61"],"outer":["179.61"],"高级排序算法":["179.62"],"快速排序":["179.62"],"选择基准值":["179.62"],"原数组长度减一":["179.62"],"基准值":["179.62"],"splice":["179.62"],"循环原数组":["179.62"],"递归运用":["179.63"],"斐波那契数列":["179.63"],"爬楼梯问题":["179.63"],"数据树":["179.64"],"二叉树":["179.64"],"最多只有两个子节点":["179.64"],"完全二叉树":["179.64"],"满二叉树":["179.64"],"深度为":["179.64"],"天平找次品":["179.65"],"谈谈你对mvvm的理解":["180.0"],"映射关系简化":["180.0"],"隐藏controller":["180.0"],"mvvm在mvc的基础上":["180.0"],"把控制层隐藏掉了":["180.0"],"vue不是一个mvvm框架":["180.0"],"它是一个视图层框架":["180.0"],"viewmodal是一个桥梁":["180.0"],"将数据和视图进行关联":["180.0"],"二":["180.0"],"谈谈你对vue中响应式数据的理解":["180.0"],"数组和对象类型的值变化的时候":["180.0"],"definereactive":["180.0"],"借助了":["180.0"],"将所有的属性添加了":["180.0"],"getter":["180.0","223.2","258.3"],"setter":["180.0","223.2"],"用户在取值和设置的时候":["180.0"],"可以进行一些操作":["180.0"],"缺陷":["180.0"],"只能监控最外层的属性":["180.0"],"如果是多层的":["180.0"],"就要进行全量递归":["180.0"],"get里面会做依赖搜集":["180.0"],"set里面会做数据更新":["180.0"],"notify":["180.0"],"通知watcher更新":["180.0"],"三":["180.0"],"vue中如何检测数组的变化":["180.0"],"vue中对数组没有进行defineproperty":["180.0"],"而是重写了数组的7个方法":["180.0"],"普通插槽是渲染后做替换的工作":["180.1"],"父组件渲染完毕后":["180.1"],"作用域插槽可以拿到子组件里面的属性":["180.2"],"在子组件中传入属性然后渲染":["180.2"],"作用域插槽的编译结果":["180.2"],"二十八":["180.2"],"use是干什么的":["180.2"],"是用来使用插件的":["180.2"],"我们可以在插件中扩展全局组件":["180.2"],"指令":["180.2","236.1","241.9"],"原型方法等":["180.2"],"方法将vue的构建函数默认传入":["180.2"],"道":["181.0"],"面试题":["181.0"],"说说你对":["181.0"],"spa":["181.0"],"单页面的理解":["181.0"],"它的优缺点分别是什么":["181.0"],"single":["181.0","195.7","214.3"],"仅在":["181.0"],"页面初始化时加载相应的":["181.0"],"一旦页面加载完成":["181.0"],"不会因为用户的操作而进行页面的重新加载或跳转":["181.0"],"取而代之的是利用路由机制实现":["181.0"],"内容的变换":["181.0"],"与用户的交互":["181.0"],"避免页面的重新加载":["181.0"],"用户体验好":["181.0"],"内容的改变不需要重新加载整个页面":["181.0"],"避免了不必要的跳转和重复渲染":["181.0"],"基于上面一点":["181.0"],"相对对服务器压力小":["181.0"],"前后端职责分离":["181.0"],"架构清晰":["181.0"],"前端进行交互逻辑":["181.0"],"后端负责数据处理":["181.0"],"初次加载耗时多":["181.0"],"为实现单页":["181.0"],"应用功能及显示效果":["181.0"],"需要在加载页面的时候将":["181.0"],"统一加载":["181.0"],"部分页面按需加载":["181.0"],"前进后退路由管理":["181.0"],"由于单页应用在一个页面中显示所有的内容":["181.0"],"所以不能使用浏览器的前进后退功能":["181.0"],"所有的页面切换需要自己建立堆栈管理":["181.0"],"难度较大":["181.0"],"由于所有的内容都在一个页面中动态替换显示":["181.0"],"所以在":["181.0","206.15"],"上其有着天然的弱势":["181.0"],"show":["181.0","196.10"],"真正":["181.0"],"的条件渲染":["181.0"],"因为它会确保在切换过程中条件块内的事件监听器和子组件适当地被销毁和重建":["181.0"],"惰性的":["181.0"],"如果在初始渲染时条件为假":["181.0"],"则什么也不做":["181.0"],"直到条件第一次变为真时":["181.0"],"才会开始渲染条件块":["181.0"],"就简单得多":["181.0"],"不管初始条件是什么":["181.0"],"元素总是会被渲染":["181.0"],"并且只是简单地基于":["181.0"],"属性进行切换":["181.0"],"适用于在运行时很少改变条件":["181.0"],"不需要频繁切换条件的场景":["181.0"],"则适用于需要非常频繁切换条件的场景":["181.0"],"如何动态绑定":["181.0"],"可以通过对象语法和数组语法进行动态绑定":["181.0"],"对象语法":["181.0"],"isactive":["181.0"],"danger":["181.0"],"数组语法":["181.0"],"activeclass":["181.0"],"errorclass":["181.0"],"也可以通过对象语法和数组语法进行动态绑定":["181.0"],"activecolor":["181.0"],"fontsize":["181.0","286.71"],"stylecolor":["181.0"],"stylesize":["181.0"],"23px":["181.0"],"怎样理解":["181.0"],"的单向数据流":["181.0"],"所有的":["181.0"],"prop":["181.0","221.4","241.9"],"都使得其父子":["181.0"],"之间形成了一个":["181.0"],"单向下行绑定":["181.0"],"父级":["181.0"],"的更新会向下流动到子组件中":["181.0"],"但是反过来则不行":["181.0"],"这样会防止从子组件意外改变父级组件的状态":["181.0"],"从而导致你的应用的数据流向难以理解":["181.0"],"额外的":["181.0"],"每次父级组件发生更新时":["181.0"],"子组件中所有的":["181.0"],"都将会刷新为最新的值":["181.0"],"这意味着你不应该在一个子组件内部改变":["181.0"],"如果你这样做了":["181.0"],"会在浏览器的控制台中发出警告":["181.0"],"子组件想修改时":["181.0"],"只能通过":["181.0"],"派发一个自定义事件":["181.0"],"父组件接收到后":["181.0"],"由父组件修改":["181.0"],"有两种常见的试图改变一个":["181.0"],"的情形":["181.0"],"用来传递一个初始值":["181.0"],"这个子组件接下来希望将其作为一个本地的":["181.0"],"数据来使用":["181.0"],"最好定义一个本地的":["181.0"],"属性并将这个":["181.0"],"用作其初始值":["181.0"],"initialcounter":["181.0"],"以一种原始的值传入且需要进行转换":["181.0"],"最好使用这个":["181.0"],"的值来定义一个计算属性":["181.0"],"computed":["181.0","195.9","219.10","224.0"],"normalizedsize":["181.0"],"tolowercase":["181.0"],"的区别和运用的场景":["181.0"],"是计算属性":["181.0"],"依赖其它属性值":["181.0"],"并且":["181.0","195.6","232.2","235.4"],"的值有缓存":["181.0"],"只有它依赖的属性值发生改变":["181.0"],"下一次获取":["181.0"],"的值时才会重新计算":["181.0"],"更多的是":["181.0"],"类似于某些数据的监听回调":["181.0"],"每当监听的数据变化时都会执行回调进行后续操作":["181.0"],"运用场景":["181.0"],"当我们需要进行数值计算":["181.0"],"并且依赖于其它数据时":["181.0"],"应该使用":["181.0"],"因为可以利用":["181.0"],"的缓存特性":["181.0"],"避免每次获取值时":["181.0"],"都要重新计算":["181.0"],"当我们需要在数据变化时执行异步或开销较大的操作时":["181.0"],"选项允许我们执行异步操作":["181.0"],"访问一个":["181.0"],"限制我们执行该操作的频率":["181.0"],"并在我们得到最终结果前":["181.0"],"设置中间状态":["181.0"],"这些都是计算属性无法做到的":["181.0"],"直接给一个数组项赋值":["181.0"],"能检测到变化吗":["181.0"],"的限制":["181.0"],"不能检测到以下数组的变动":["181.0"],"当你利用索引直接设置一个数组项时":["181.0"],"indexofitem":["181.0"],"newvalue":["181.0"],"当你修改数组的长度时":["181.0"],"newlength":["181.0"],"为了解决第一个问题":["181.0"],"提供了以下操作方法":["181.0"],"但是不会限制你某个位置的元素的类型":["182.1"],"只要符合":["182.1"],"可以限制":["182.2"],"集合中":["182.2"],"的形状":["183.2"],"但interface不能做到的事情":["183.4"],"type可以定义":["183.4"],"基本类型的别名":["183.4"],"但是type不可以做到的事情":["183.5"],"interface可以":["183.5"],"声明合并":["183.5"],"never":["184.6","189.0"],"可以给":["184.7"],"中可以使用":["184.8"],"boolean":["184.8","219.6","220.2","228.1","236.4","236.6"],"中使用":["184.10"],"union":["184.10"],"时有哪些注意事项":["184.10"],"属性或方法访问":["184.10"],"如何设计":["184.11"],"的声明":["184.11"],"中如何联合枚举类型的":["184.12"],"等符号的含义":["184.16"],"可选链":["184.16"],"遇到":["184.16","241.7"],"模块的加载机制":["184.17"],"假设有一个导入语句":["184.17"],"类型兼容性的理解":["184.18"],"类型兼容":["184.18"],"当一个类型":["184.18"],"逆变":["184.19"],"类型可以赋值给":["184.20"],"printy":["184.21"],"printx":["184.21"],"函数x":["184.21"],"类型可以赋值给函数y":["184.21"],"双向协变":["184.22"],"中对象展开会有什么副作用吗":["184.24"],"如果声明文件内不包含import":["184.25"],"中同名的":["184.26"],"项目引入并识别编译为":["184.27"],"tsconfig":["184.28"],"中有哪些配置项信息":["184.28"],"global是什么":["184.29"],"类中成员的":["184.30"],"exclude":["184.32","216.2","216.5"],"omit":["184.32"],"的类型的超集":["185.1"],"支持es6语法":["185.1"],"的特性主要有如下":["185.3"],"类型批注和编译时类型检查":["185.3"],"在编译时批注变量类型":["185.3"],"通过类型批注提供在编译时启动类型检查的静态类型":["185.4"],"这是可选的":["185.4"],"而且可以忽略而使用":["185.4"],"当类型没有给出时":["185.5"],"接口简单来说就是用来描述对象的类型":["185.6"],"数据的类型有":["185.6"],"选项":["186.3"],"基本选项":["186.3"],"指定":["186.3"],"ecmascript":["186.3"],"目标版本":["186.3"],"es3":["186.3"],"es2016":["186.3"],"es2017":["186.3"],"esnext":["186.3"],"指定使用模块":["186.3"],"umd":["186.3"],"是任何类型可以直接使用":["188.0"],"类型的":["189.0","252.5"],"通过ref直接拿到dom引用":["190.0"],"单一dom元素或者个数较少的场景":["190.1"],"demo1":["190.2"],"通过ref直接拿到dom":["190.2"],"sectionref":["190.2"],"通过v":["190.3"],"demo2":["190.4"],"多个页面都可能有操作组件dom的场景":["190.5"],"cellref":["190.6"],"编译时样式美化":["191.0"],"因为是内置的":["191.1"],"所以直接在webpack中引入就行":["191.1"],"progressplugin":["191.1"],"progressplugin包含一个对象progressplugin":["191.1"],"结合我们上一篇写的在webpack":["191.1"],"先安装webpackbar":["191.2"],"这个包还是很多人在用的":["191.2"],"errors":["191.3"],"首先下载这个包":["191.3"],"编译样式美化算是弄完了":["191.4"],"全局hash":["192.1"],"分组hash":["192.2"],"内容hash":["192.3"],"的编译过程":["193.1"],"的打包过程":["193.2"],"合并webpack":["193.2"],"与打包流程强相关的配置项有":["193.4"],"输入输出":["193.4"],"用于定义项目入口文件":["193.4"],"会从这些入口文件开始按图索骥找出所有项目文件":["193.4"],"项目执行上下文路径":["193.4"],"配置产物输出路径":["193.4"],"名称等":["193.4"],"除了核心的打包功能之外":["193.5"],"还提供了一系列用于提升研发效率的工具":["193.5"],"大体上可划分为":["193.5"],"treeshaking机制的原理":["193.6"],"treeshaking":["193.6"],"的loader":["193.7"],"把":["193.7","241.10","252.6","256.4"],"件输出到":["193.7"],"个":["193.7"],"件夹中":["193.7"],"在代码中通过相对":["193.7"],"常见的plugin有哪些":["193.8"],"自动加载模块":["193.8"],"代替require和import":["193.8"],"plugin可以根据模板自动生成html代码":["193.8"],"的构建流程是什么":["193.9"],"初始化参数":["193.9"],"解析webpack配置参数":["193.9"],"合并shell传入和webpack":["193.9"],"js文件配置的参数":["193.9"],"背景":["194.1","197.1","201.1","203.2","262.0"],"网页开发":["194.1"],"渲染线程和脚本是互斥的":["194.1"],"这也是为什么长时间的脚本运行可能会导致页面失去响应的原因":["194.1"],"通信":["194.2"],"小程序在渲染层":["194.2"],"宿主环境会把wxml转化成对应的js对象":["194.2"],"在逻辑层发生数据变更的时候":["194.2"],"运行机制":["194.3"],"冷启动":["194.4"],"小程序没有重启的概念":["194.5"],"该内容由银科控股融汇研发部曹俊及其团队授权提供":["195.0"],"该团队拥有":["195.0"],"多名小程序开发":["195.0"],"深耕小程序领域":["195.0"],"总结出了本篇优质长文":["195.0"],"同时本篇内容也已经合并入我的":["195.0"],"直接复用现有系统的登录体系":["195.1"],"创建用户体系":["195.2","195.3"],"提过":["195.2"],"openid":["195.2","195.4"],"是一个小程序对于一个用户的标识":["195.2"],"unionid":["195.3","195.4"],"如果想实现多个小程序":["195.3"],"公众号":["195.3"],"已有登录系统的数据互通":["195.3"],"可以通过获取到用户":["195.3"],"的方式建立用户体系":["195.3"],"需要获取":["195.4"],"形式的登录体系":["195.4"],"在以前":["195.4"],"18年4月之前":["195.4"],"是通过以下这种方式来实现":["195.4"],"但后续微信做了调整":["195.4"],"因为一进入小程序":["195.4"],"主动弹起各种授权弹窗的这种形式":["195.4"],"比较容易导致用户流失":["195.4"],"调整为必须使用按钮引导用户主动授权的方式":["195.4"],"这次调整对开发者影响较大":["195.4"],"开发者需要注意遵守微信的规则":["195.4"],"并及时和业务方沟通业务形式":["195.4"],"不要存在侥幸心理":["195.4"],"以防造成小程序不过审等情况":["195.4"],"wx":["195.4","197.4","199.4","202.3","284.64"],"获取code":["195.4"],"getuserinfo":["195.4","197.4"],"用户授权":["195.4"],"因为小程序不存在":["195.4"],"的概念":["195.4","214.1"],"登录态必须缓存在本地":["195.4"],"因此强烈建议为登录态设置过期时间":["195.4"],"值得一提的是如果需要支持风控安全校验":["195.4"],"多平台登录等功能":["195.4"],"可能需要加入一些公共参数":["195.4"],"例如platform":["195.4"],"deviceparam等参数":["195.4"],"在和服务端确定方案时":["195.4"],"作为前端同学应该及时提出这些合理的建议":["195.4"],"设计合理的系统":["195.4"],"不要在接口中明文传输":["195.4"],"这是一种危险的行为":["195.4"],"同时也很不专业":["195.4"],"小程序":["195.4"],"图片导出":["195.4"],"经常开发和使用小程序的同学对这个功能一定不陌生":["195.4"],"这是一种常见的引流方式":["195.4"],"一般同时会在图片中附加一个小程序二维码":["195.4"],"基本原理":["195.4"],"将需要导出的样式首先在":["195.4"],"画布上绘制出来":["195.4"],"api基本和h5保持一致":["195.4"],"但有轻微差异":["195.4"],"使用时注意即可":["195.4"],"借助微信提供的":["195.4"],"canvastotempfilepath":["195.4"],"导出图片":["195.4"],"最后再使用":["195.4"],"saveimagetophotosalbum":["195.4"],"需要授权":["195.4"],"保存图片到本地":["195.4"],"如何优雅实现":["195.4"],"根据上述的原理来看":["195.4"],"实现是很简单的":["195.4"],"只不过就是设计稿的提取":["195.4"],"绘制即可":["195.4"],"但是作为一个常用功能":["195.4"],"每次都这样写一坨代码岂不是非常的难受":["195.4"],"那小程序如何设计一个通用的方法来帮助我们导出图片呢":["195.4"],"思路如下":["195.4"],"绘制出需要的样式这一步是省略不掉的":["195.4"],"但是我们可以封装一个绘制库":["195.4"],"包含常见图形的绘制":["195.4"],"例如矩形":["195.4"],"圆角矩形":["195.4"],"圆":["195.4"],"扇形":["195.4"],"三角形":["195.4"],"文字":["195.4"],"图片减少绘制代码":["195.4"],"只需要提炼出样式信息":["195.4"],"便可以轻松的绘制":["195.4"],"最后导出图片存入相册":["195.4"],"笔者觉得以下这种方式绘制更为优雅清晰一些":["195.4"],"其实也可以使用加入一个type参数来指定绘制类型":["195.4"],"传入的一个是样式数组":["195.4"],"实现绘制":["195.4"],"结合上一步的实现":["195.4"],"如果对于同一类型的卡片有多次导出需求的场景":["195.4"],"也可以使用自定义组件的方式":["195.4"],"封装同一类型的卡片为一个通用组件":["195.4"],"在需要导出图片功能的地方":["195.4"],"引入该组件即可":["195.4"],"canvaskit":["195.4"],"drawimg":["195.4"],"drawrect":["195.4"],"drawtext":["195.4"],"exportimg":["195.4"],"drawer":["195.4"],"canvasid":["195.4"],"styleobj1":["195.4"],"styleobj2":["195.4"],"小程序中无法绘制网络图片到canvas上":["195.4"],"需要通过downloadfile":["195.4"],"先下载图片到本地临时文件才可以绘制":["195.4"],"通常需要绘制二维码到导出的图片上":["195.4"],"有一种方式导出二维码时":["195.4"],"需要携带的参数必须做编码":["195.4"],"而且有具体的长度":["195.4"],"32可见字符":["195.4"],"限制":["195.4","195.7"],"可以借助服务端生成":["195.4"],"短链接":["195.4"],"的方式来解决":["195.4"],"数据统计":["195.4"],"数据统计作为目前一种常用的分析用户行为的方式":["195.4"],"小程序端也是必不可少的":["195.4"],"小程序采取的曝光":["195.4"],"点击数据埋点其实和h5原理是一样的":["195.4"],"但是埋点作为一个和业务逻辑不相关的需求":["195.4"],"我们如果在每一个点击事件":["195.4"],"每一个生命周期加入各种埋点代码":["195.4"],"则会干扰正常的业务逻辑":["195.4"],"和使代码变的臃肿":["195.4"],"笔者提供以下几种思路来解决数据埋点":["195.4"],"设计一个埋点sdk":["195.4"],"小程序的代码结构是":["195.4"],"每一个":["195.4"],"中都有一个":["195.4"],"接受一个包含生命周期函数":["195.4"],"数据的":["195.4"],"业务逻辑对象":["195.4"],"包装这层数据":["195.4"],"借助小程序的底层逻辑实现页面的业务逻辑":["195.4"],"通过这个我们可以想到思路":["195.4"],"对page进行一次包装":["195.4"],"篡改它的生命周期和点击事件":["195.4"],"混入埋点代码":["195.4"],"不干扰业务逻辑":["195.4"],"只要做一些简单的配置即可埋点":["195.4"],"简单的代码实现如下":["195.4"],"代码仅供理解思路":["195.4"],"keys":["195.4","219.6"],"模拟器与真机均不支持":["195.5"],"为了验证小程序对http的支持适配情况":["195.5"],"我找了两个服务器做测试":["195.5"],"一个是网上搜索到支持http2的服务器":["195.5"],"由上可以看出":["195.6"],"在真机与模拟器都不支持":["195.6"],"http2":["195.6"],"但是都是成功请求的":["195.6"],"响应头":["195.6"],"里的":["195.6"],"版本都变成了http1":["195.6"],"说明服务器对":["195.6"],"http1":["195.6"],"做了兼容性适配":["195.6"],"本地新启一个":["195.6"],"为请求的":["195.6"],"sub":["195.7"],"在构建小程序分包项目时":["195.7"],"构建会输出一个或多个功能的分包":["195.7"],"其中每个分包小程序必定含有一个主包":["195.7"],"所谓的主包":["195.7"],"即放置默认启动页面":["195.7"],"tabbar":["195.7"],"以及一些所有分包都需用到公共资源":["195.7"],"脚本":["195.7"],"而分包则是根据开发者的配置进行划分":["195.7"],"在小程序启动时":["195.7"],"默认会下载主包并启动主包内页面":["195.7"],"如果用户需要打开分包内某个页面":["195.7"],"客户端会把对应分包下载下来":["195.7"],"下载完成后再进行展示":["195.7"],"对开发者而言":["195.7"],"能使小程序有更大的代码体积":["195.7"],"承载更多的功能与服务":["195.7"],"对用户而言":["195.7"],"可以更快地打开小程序":["195.7"],"同时在不影响启动速度前提下使用更多功能":["195.7"],"整个小程序所有分包大小不超过":["195.7"],"单个分包":["195.7"],"主包大小不能超过":["195.7"],"2m":["195.7"],"原生分包加载的配置":["195.7"],"假设支持分包的小程序目录结构如下":["195.7"],"wxss":["195.7"],"packagea":["195.7"],"cat":["195.7"],"dog":["195.7"],"packageb":["195.7"],"apple":["195.7"],"banana":["195.7"],"开发者通过在":["195.7"],"subpackages":["195.7"],"字段声明项目分包结构":["195.7"],"分包原则":["195.7"],"将按":["195.7"],"配置路径进行打包":["195.7"],"配置路径外的目录将被打包到":["195.7"],"主包":["195.7"],"也可以有自己的":["195.7"],"即最外层的":["195.7"],"subpackage":["195.7"],"的根目录不能是另外一个":["195.7"],"内的子目录":["195.7"],"首页的":["195.7"],"页面必须在":["195.7"],"内":["195.7"],"引用原则":["195.7"],"但可以":["195.7"],"自己":["195.7"],"内的":["195.7"],"无法使用":["195.7"],"的资源":["195.7"],"但可以使用":["195.7"],"内的资源":["195.7"],"官方即将推出":["195.7"],"分包预加载":["195.7"],"独立分包":["195.7"],"渲染性能优化":["195.7"],"compiler相关":["195.8"],"也就是template预编译这块":["195.8"],"可以参考":["195.8"],"聊聊vue的template编译":["195.8"],"来搞明白":["195.8"],"原理是一样的":["195.8"],"mpvue自己实现了":["195.8"],"compile":["195.8"],"compiletofunctions":["195.8"],"compiletowxml":["195.8"],"链接":["195.8"],"是用来生成wxml":["195.8"],"具体代码在这":["195.8"],"另外mpvue是不需要提供运行时":["195.8"],"编译器的":["195.8"],"虽然理论上是能够做到的":["195.8"],"因为小程序不能操作dom":["195.8","195.9"],"即便提供了运行时":["195.8"],"编译器也产生不了界面":["195.8"],"详细讲解compile过程":["195.8"],"将vue文件解析成模板对象":["195.8"],"mpvue":["195.8"],"lib":["195.8","204.1","204.2","204.3"],"parts":["195.8"],"假如vue文件源码如下":["195.8"],"bg":["195.8"],"quotation":["195.8"],"reason":["195.8"],"stocklist":["195.8"],"itemviewclicked":["195.8"],"调用":["195.8","206.9","220.7","286.44","286.72"],"函数得到的结果大致如下":["195.8"],"目录结构":["195.9"],"解答问题5":["195.9"],"入口提供vue对象":["195.9"],"和各种初始化":["195.9"],"liefcycle":["195.9"],"解答问题6":["195.9"],"ops":["195.9"],"操作真实dom的相关实现":["195.9"],"所以这里都是直接返回":["195.9"],"解答问题3":["195.9"],"解答问题4":["195.9"],"和vue使用的":["195.9"],"createpatchfunction":["195.9"],"保持一致":["195.9"],"任然是旧树和新树进行patch产出diff":["195.9"],"但是多了一行this":["195.9"],"updatedatatomp":["195.9"],"用以更新":["195.9"],"两个核心的方法":["195.9"],"initdatatomp":["195.9"],"收集vm上的data":["195.9"],"然后调用小程序page示例的":["195.9"],"setdata":["195.9"],"渲染":["195.9","219.1"],"在每次patch":["195.9"],"也就是依赖收集发现数据改变时更新":["195.9"],"参考patch":["195.9"],"js代码":["195.9"],"这部分一样会使用":["195.9"],"和队列":["195.9"],"最终使用了节流阀":["195.9"],"throttlesetdata":["195.9"],"50毫秒用来控制频率以解决频繁修改data":["195.9"],"会造成大量传输data数据而导致的性能问题":["195.9"],"collectvmdata":["195.9"],"最终也是用到了":["195.9"],"formatvmdata":["195.9"],"尤其要注意的是一句注释":["195.9"],"getvmdata":["195.9"],"这儿获取当前组件内的所有数据":["195.9"],"包含":["195.9"],"我们又知道":["195.9"],"service到view是两个线程间通信":["195.9"],"如果data含有大量数据":["195.9"],"增加了传输数据量":["195.9"],"加大了传输成本":["195.9"],"将会造成性能下降":["195.9"],"正如官网所说的":["195.9"],"这里使用":["195.9"],"eventtypemap":["195.9"],"做了各事件的隐射":["195.9"],"getcomkey":["195.9"],"用于小程序的":["195.9"],"到":["195.9"],"tap":["195.9"],"touchstart":["195.9"],"touchmove":["195.9"],"touchcancel":["195.9"],"touchend":["195.9"],"longtap":["195.9"],"blur":["195.9","207.8"],"submit":["195.9"],"focus":["195.9"],"scrolltoupper":["195.9"],"scrolltolower":["195.9"],"handleproxywithvue":["195.9"],"方法来代理小程序事件到vue事件":["195.9"],"另外看下作者自己对这部分的思路":["195.9"],"事件代理机制":["195.9"],"用户交互触发的数据更新通过事件代理机制完成":["195.9"],"代码中":["195.9"],"事件响应函数对应到组件的":["195.9"],"小程序的生命周期函数是在app":["196.2"],"页面生命周期函数就是当你每进入":["196.3"],"有哪些":["196.5","202.2"],"组件实例刚刚被创建好时":["196.9"],"生命周期被触发":["196.9"],"组件数据":["196.9"],"执行过程":["196.11"],"户":["196.12"],"次打开":["196.12"],"程序":["196.12"],"面生命周期的执行过程":["196.13"],"程序注册完成后":["196.13"],"触发onload":["196.13"],"法":["196.13"],"相关的执行顺序如下":["196.14"],"打开小程序":["196.14"],"onlaunch":["196.14","200.2"],"传统的web开发实现登陆功能":["197.1"],"调用wx":["197.2","197.4"],"流程":["197.3","199.3","201.2","206.9","222.3"],"获取到用户的code判断用户是否授权读取用户信息":["197.4"],"扩展":["197.6","201.7"],"实际业务中":["197.6"],"而是在小程序端调用ap":["197.7"],"手段":["198.4"],"提升体验最直接的方法是控制小程序包的大小":["198.5"],"常见手段有如下":["198.5"],"关于微信小程序首屏渲染优化的手段如下":["198.6"],"请求可以在页面onload就加载":["198.6"],"不需要等页面ready后在异步请求数据":["198.6"],"控制代码包的大小":["198.8"],"避免不当的使用setdata":["198.9"],"打开某小程序":["199.4"],"点击直接下单":["199.4"],"login获取用户临时登录凭证code":["199.4"],"发送到后端服务器换取openid":["199.4"],"在下单时":["199.4"],"小程序需要将购买的商品id":["199.4"],"结束":["199.6","241.7"],"小程序的架构模型有别与传统web单线程架构":["200.1"],"小程序为双线程架构":["200.1"],"微信小程序的渲染层与逻辑层分别由两个线程管理":["200.1"],"渲染层的界面使用":["200.1"],"进行渲染":["200.1"],"为什么不能在":["200.2"],"里面阻止页面显示":["200.2"],"通过自定义":["200.3"],"又是如何实现的":["200.4"],"为什么不能直接操作":["200.5"],"为了解决安全管控问题":["200.5"],"是单页面应用还是多页面应用":["200.6"],"为什么限制了":["200.7"],"页面栈":["200.7"],"是怎么实现":["200.8"],"wxss并不可以直接执行在webview层进行渲染":["200.9"],"编译的工具名字叫wcsc":["200.10"],"三部分加一起就是完整的代码":["200.11"],"第一部分":["200.11"],"setcsstohead":["200.12"],"分别有":["200.13"],"什么是预编译的框架呢":["200.14"],"还记得我们讲解wxss的时候":["200.14"],"半运行":["200.15"],"半编译半运行框架有什么呢":["200.15"],"在小程序双线程架构中":["200.16"],"在中大型的公司里":["201.1"],"主要分成了三个部分":["201.3"],"在开发者工具中":["201.4"],"代码上传完毕":["201.5"],"当审核通过之后":["201.6"],"通常的流程如下":["201.8"],"代码管理服务器上新建分支":["201.8"],"navigateto":["202.3","202.4","202.18"],"redirectto":["202.7"],"switchtab":["202.10"],"navigateback":["202.12"],"relaunch":["202.14"],"做下总结":["202.18"],"保留当前页面":["202.18"],"avigateto":["202.19"],"新页面入栈":["202.19"],"2017年":["203.1"],"微信正式推出了小程序":["203.1"],"允许外部开发者在微信内部运行自己的代码":["203.1"],"程序并":["203.2"],"凭空冒出来的":["203.2"],"个概念":["203.2"],"当微信中的":["203.2"],"小程序与其的区别有如下":["203.3"],"运":["203.3"],"环境":["203.3"],"优缺点":["203.4"],"随搜随用":["203.5"],"用户留存":["203.6"],"源码介绍":["204.0"],"是个很优秀的项目":["204.0"],"到2022":["204.0"],"axios是怎么实现可以创建多个实例的":["204.1"],"打开":["204.1"],"这个入口文件的源码":["204.1"],"可以看到这个文件代码很少":["204.1"],"主要的一个函数就是":["204.1"],"createinstance":["204.1"],"这个函数返回一个实例":["204.1"],"这个实例就是":["204.1"],"axios的拦截器是怎么实现的":["204.2"],"拦截器的源码主要在":["204.2"],"interceptormanager":["204.2"],"我们先来看看":["204.2"],"instanceconfig":["204.2"],"interceptors":["204.2"],"函数在实例对象上有两个属性":["204.2"],"是默认配置":["204.2"],"就是我们的拦截器对象":["204.2"],"它也有两个属性":["204.2"],"分别对应请求拦截和响应拦截":["204.2"],"它们的值都是":["204.2"],"对象实例":["204.2"],"再来看看我们拦截器的使用方式":["204.2"],"axios取消请求是怎么实现的":["204.3"],"先来看看取消请求是如何使用的":["204.3"],"canceltoken":["204.3"],"thrown":["204.3"],"iscancel":["204.3"],"canceled":["204.3"],"处理错误":["204.3"],"取消请求":["204.3"],"参数是可选的":["204.3"],"cancel":["204.3"],"这里通过":["204.3"],"函数返回一个对象":["204.3"],"然后把":["204.3"],"则可以取消请求":["204.3"],"来看看源码的实现":["204.3"],"取消请求有两部分关键代码分别在":["204.3"],"axios是怎么做到防":["204.4"],"xsrf":["204.4"],"csrf":["204.4"],"攻击的":["204.4"],"axios的优缺点":["204.5"],"的优点有很多":["204.5"],"除了以上的内容":["204.6"],"还有很多值得学习的地方":["204.6"],"这里就不一一讲解了":["204.6"],"config配置":["204.6"],"的合并":["204.6"],"在react17之前":["205.1"],"如果使用异步的方式来获取事件e对象":["205.1"],"会发现合成事件对象被销毁":["205.1"],"handleclick":["205.1","207.16"],"mouseevent":["205.1"],"reactv17前":["205.2"],"将事件委托到":["205.2"],"在react17中":["205.2"],"则委托到根节点":["205.2"],"rootnode":["205.2","226.1","228.1"],"reactdom":["205.2","205.11"],"对事件系统进行了一些较小的更改":["205.3"],"onscroll":["205.3"],"事件不再冒泡":["205.3"],"以防止出现常见的混淆":["205.3"],"onfocus":["205.3"],"转换器":["205.4"],"总结下来就是两点":["205.4"],"函数替换":["205.4"],"运行时自动引入":["205.4"],"无需手写引入":["205.4"],"在v16中":["205.4"],"我们写一个react组件":["205.4"],"总要引入":["205.4"],"effect":["205.5","223.2","255.0","258.7"],"itself":["205.5"],"在v17以前":["205.6"],"组件返回":["205.6"],"始终是一个错误":["205.6"],"但是有漏网之鱼":["205.6"],"只对类组件和函数组件执行此操作":["205.6"],"但并不会检查":["205.6"],"memo":["205.6","209.11","209.12"],"v16中错误调用栈的缺点":["205.7"],"缺少源码位置追溯":["205.7"],"在控制台无法点击跳转到到出错的地方":["205.7"],"引用":["205.9"],"react17新特性":["205.9"],"v18的新特性是使用现代浏览器的特性构建的":["205.10"],"彻底放弃对":["205.10"],"v18":["205.11"],"createroot":["205.11"],"创建一个新的根元素进行渲染":["205.11"],"批处理是指":["205.12"],"将多个状态更新":["205.12"],"聚合到一次":["205.12"],"中执行":["205.12"],"以提升性能":["205.12"],"在v17的批处理只会在事件处理函数中实现":["205.12"],"而在promise链":["205.12"],"异步代码":["205.12"],"一次页面渲染的流程":["205.13"],"服务器获取页面所需数据":["205.13"],"transitions":["205.14"],"引入的一个全新的并发特性":["205.14"],"它允许你将标记更新作为一个":["205.14"],"过渡":["205.14","205.15"],"这会告诉":["205.14"],"它们可以被中断执行":["205.14"],"并避免回到已经可见内容的":["205.14"],"当有过渡任务":["205.15"],"非紧急更新":["205.15"],"时":["205.15","287.6"],"我们可能需要告诉用户什么时候当前处于":["205.15"],"因此v18提供了一个带有":["205.15"],"usetransition":["205.16"],"都是标记了一次非紧急更新":["205.16"],"是处理一段逻辑":["205.16"],"支持同一个组件在客户端和服务端生成相同的唯一的":["205.17"],"避免":["205.17"],"一般是第三方状态管理库使用如":["205.19"],"仅限于":["205.20"],"其实在":["206.0"],"执行过程中":["206.0"],"会有数不清的任务要去执行":["206.0"],"但是他们会有一个":["206.0"],"优先级的判定":["206.0"],"假如两个事件的":["206.0"],"优先级一样":["206.0"],"是怎么去判定他们两谁先执行呢":["206.0"],"packages":["206.0","206.1","206.11"],"reconciler":["206.0","206.1","206.8"],"reactfiberworkloop":["206.0","206.1"],"requesteventtime位每一个需要执行的任务打上了触发更新时间标签":["206.1"],"那么任务的优先级还需要进一步的确立":["206.1"],"requestupdatelane就是用来获取每一个任务执行的优先级的":["206.1"],"old":["206.1","236.6"],"lane":["206.1","206.2","206.4","206.8","206.9","206.15"],"special":["206.1","214.2","216.2"],"cases":["206.1"],"blockingmode":["206.1"],"nomode":["206.1"],"synclane":["206.1","206.2"],"concurrentmode":["206.1"],"getcurrentprioritylevel":["206.1"],"immediateschedulerpriority":["206.1"],"syncbatchedlane":["206.1","206.2"],"deferrenderphaseupdatetonextbatch":["206.1"],"executioncontext":["206.1"],"rendercontext":["206.1"],"nocontext":["206.1"],"workinprogressrootrenderlanes":["206.1"],"nolanes":["206.1"],"phase":["206.1"],"update":["206.1","206.5","208.5","236.6","256.1"],"these":["206.1"],"are":["206.1","206.14","214.2","216.2"],"officially":["206.1"],"supported":["206.1"],"behavior":["206.1"],"lanepriority":["206.2"],"wiplanes":["206.2"],"lanes":["206.2"],"nolanepriority":["206.2"],"synclanepriority":["206.2"],"syncbatchedlanepriority":["206.2"],"inputdiscretelanepriority":["206.2"],"opaque":["206.3"],"eventtime":["206.4","206.8"],"获取当前更新队列":["206.5"],"为啥呢":["206.5"],"因为无法保证react是不是还有正在更新或者没有更新完毕的任务":["206.5"],"协调":["206.7","206.15"],"流程以":["206.8"],"scheduleupdateonfiber":["206.8"],"为入口":["206.8"],"并在":["206.8"],"checkfornestedupdates":["206.8"],"里面处理任务更新的嵌套层数":["206.8"],"如果嵌套层数过大":["206.8"],"就会认为是无效更新":["206.8"],"则会抛出异常":["206.8"],"之后便根据":["206.8"],"markupdatelanefromfibertoroot":["206.8"],"对当前的":["206.8"],"自底向上的递归":["206.8"],"做二进制比较或者位运算处理":["206.8"],"详情如下":["206.8"],"如果当前执行任务的优先级为同步":["206.8"],"则去判断有无正在执行的":["206.8"],"如果没有则执行":["206.8"],"ensurerootisscheduled":["206.8","206.9"],"进行调度处理":["206.8"],"如果当前任务优先级是异步执行":["206.8"],"则执行":["206.8"],"检查嵌套层数":["206.8"],"避免是循环做无效操作":["206.8"],"warnaboutrenderphaseupdatesindev":["206.8"],"更新当前更新队列里面的任务优先级":["206.8"],"自底而上更新child":["206.8"],"fiberlanes":["206.8"],"warnaboutupdateonunmountedfiberindev":["206.8"],"当任务的类型为同步任务":["206.9"],"并且当前的":["206.9"],"主线程空闲":["206.9"],"会通过":["206.9","230.2","232.2","252.4"],"performsyncworkonroot":["206.9"],"方法开始执行同步任务":["206.9"],"里面主要做了两件事":["206.9"],"renderrootsync":["206.9"],"从根节点开始进行同步渲染任务":["206.9"],"commitroot":["206.9"],"执行":["206.9","207.19","214.2","222.3","222.4","222.5","231.4","232.4","236.7","241.10"],"当前":["206.9"],"线程中有正在执行的任务时候":["206.9"],"就会触发":["206.9"],"里面主要是处理当前加入的更新任务的":["206.9"],"是否有变化":["206.9"],"如果没有变化则表示跟当前的":["206.9"],"schedule":["206.9"],"一起执行":["206.9"],"如果有则创建新的":["206.9"],"执行同步任务":["206.9"],"异步任务则会去执行":["206.10"],"performconcurrentworkonroot":["206.10","206.15"],"进而去执行":["206.10"],"renderrootconcurrent":["206.10"],"scheduler":["206.11","223.2","258.6"],"schedulerposttask":["206.11"],"unstable":["206.11"],"unitofwork":["206.12","206.14"],"flushed":["206.12","206.14"],"当遍历完毕执行":["206.14"],"beginwork":["206.14"],"遍历完毕之后就会走":["206.14"],"attempt":["206.14"],"complete":["206.14"],"unit":["206.14"],"work":["206.14","214.1"],"move":["206.14","216.6"],"sibling":["206.14"],"there":["206.14"],"more":["206.14"],"siblings":["206.14"],"completedwork":["206.14"],"do":["206.14","214.2"],"alternate":["206.14"],"ideally":["206.14"],"nothing":["206.14"],"rely":["206.14"],"relying":["206.14"],"here":["206.14"],"means":["206.14"],"we":["206.14","214.2","216.2","239.3"],"don":["206.14"],"need":["206.14","214.2","228.2"],"field":["206.14"],"在这里应该有很多人不明白":["206.15"],"是什么意思":["206.15"],"通俗来讲":["206.15"],"协调就是协同合作":["206.15"],"调度就是执行命令":["206.15"],"中协调就是一个":["206.15"],"线程中":["206.15"],"需要安排很多模块去完成整个流程":["206.15"],"同步异步":["206.15"],"reconcilechildren":["206.15"],"节点等":["206.15"],"保证整个流程有条不紊的执行":["206.15"],"调度表现为让":["206.15"],"空闲的js线程":["206.15"],"帧层面":["206.15"],"去执行其他任务":["206.15"],"这个过程称之为调度":["206.15"],"那么它到底是怎么去做的呢":["206.15"],"我们回到处理异步任务那里":["206.15"],"我们会发现":["206.15"],"这个函数外面包裹了一层":["206.15"],"schedulecallback":["206.15"],"newcallbacknode":["206.15"],"schedulerprioritylevel":["206.15"],"reactprioritylevel":["206.15"],"scheduledhostcallback":["206.16"],"currenttime":["206.16"],"getcurrenttime":["206.16"],"yield":["206.16"],"yieldinterval":["206.16"],"ms":["206.16"],"regardless":["206.16"],"where":["206.16","216.2"],"本文讲了":["206.17"],"在状态改变的时候":["206.17"],"为什么有自己的事件系统":["207.1"],"冒泡阶段":["207.2"],"中如果想要阻止事件向上冒泡":["207.3"],"stoppropagation":["207.3"],"第一个部分是事件合成系统":["207.4"],"的事件不是绑定在元素上的":["207.5"],"而是统一绑定在顶部容器上":["207.5"],"之前是绑定在":["207.5"],"registrationnamemodules":["207.7"],"onblur":["207.8"],"onclick":["207.8"],"来阻止事件的默认行为":["207.10"],"如何不是绑定在哪里":["207.11"],"为什么要手动绑定this":["207.12"],"通过事件触发过程的分析":["207.12"],"react事件和原生事件有什么区别":["207.13"],"合成事件":["207.16"],"浏览器兼容":["207.16"],"组件装载":["207.17"],"出现本质上原因是":["208.1"],"对象本质上是主要以三种处理策略存在":["208.2"],"contextonlydispatcher":["208.2"],"为什么不能写在条件语句中":["208.3"],"因为在更新过程中":["208.3"],"如果通过":["208.3"],"条件语句":["208.3"],"增加或者删除":["208.3"],"解决了函数组件没有":["208.4"],"的问题":["208.4"],"让无状态组件有了自己的状态":["208.4"],"章节已经说了基本使用":["208.4"],"接下来重点介绍原理使用":["208.4"],"usereducer":["208.4"],"原理大同小异":["208.4"],"阶段":["208.7"],"实际没有进行真正的":["208.7"],"元素的增加":["208.7"],"把想要做的不同操作打成不同的":["208.7"],"effecttag":["208.7"],"等到commit":["208.7"],"统一处理这些副作用":["208.7"],"包括":["208.7"],"render结束后":["208.9"],"这个是用在处理dom的时候":["208.10"],"mountmemo":["208.16"],"updatememo":["208.17"],"nextcreate":["208.17"],"nextdeps":["208.17"],"根据一次更新中产生的新状态值":["209.1"],"几种控制":["209.2"],"element对象":["209.3"],"子组件":["209.3"],"子组件渲染":["209.3"],"learn":["209.3"],"cachesomething":["209.4"],"会记录上一次执行":["209.5"],"可以缓存":["209.6"],"纯组件是一种发自组件本身的渲染优化策略":["209.7"],"当开发类组件选择了继承":["209.7"],"就意味这要遵循其渲染规则":["209.7"],"规则就是浅比较":["209.7"],"原理及其浅比较原则":["209.8"],"原型链上会有":["209.8"],"ispurereactcomponent":["209.8"],"是如何浅比较的呢":["209.9"],"首先会直接比较新老":["209.9"],"或者新老":["209.9"],"第二个参数":["209.12","223.2"],"在正常情况下":["209.13"],"无须过分在乎":["209.13"],"没有必要的渲染":["209.13"],"要理解执行":["209.13"],"不等于真正的浏览器渲染视图":["209.13"],"开发过程中对于大量数据展示的模块":["209.14"],"开发者有必要用":["209.14"],"转换":["210.0","239.3","289.1","290.1"],"对于模版的编译会先通过":["210.0"],"baseparse":["210.0","239.5"],"生成一个":["210.0"],"会执行":["210.1","217.7","226.1"],"函数获取节点和指令转换的函数":["210.1"],"然后调用":["210.1"],"核心流程":["210.2"],"主要做了四件事":["210.2"],"tramsform":["210.2","213.0"],"上下文":["210.2","213.0"],"静态提升":["210.2"],"转换总结":["211.0"],"如果说":["211.0"],"阶段是一个":["211.0"],"词法分析的过程":["211.0"],"目的就是":["212.1","214.3","241.1"],"这个虚拟的":["212.1"],"根节点创建一个代码生成节点":["212.1"],"的子节点":["212.1"],"是单个元素节点":["212.1"],"就将":["212.1"],"转换成一个":["212.1"],"把这个":["212.1"],"child":["212.1"],"codegennode":["212.1","215.2","231.1"],"赋值给":["212.1","214.1","256.5"],"traversenode":["214.0"],"函数完成":["214.0","214.2","236.7","239.5","241.1"],"递归遍历":["214.0"],"针对每个节点执行一系列的转换函数":["214.0"],"有些还会设计退出函数":["214.0"],"当执行完函数后":["214.0"],"会返回一个或多个退出函数":["214.0"],"内置了很多转换函数":["214.0"],"处理指令":["214.0"],"表达式":["214.0","214.1"],"元素节点":["214.0","214.3","241.9"],"文本节点等不同的特性":["214.0"],"节点转换函数":["214.1","214.3"],"transformelement":["214.1"],"会返回一个退出函数":["214.1","214.3"],"会在该元素节点的子节点逻辑处理完毕之后":["214.1"],"退出":["214.1"],"判断这个节点是不是一个":["214.1"],"为了运行时的更新优化":["214.1"],"设计了一个":["214.1"],"将模版基于动态节点指令进行切割的嵌套区块":["214.1"],"每个区块需要一个":["214.1"],"追踪自身包含的动态节点":["214.1"],"的更新性能":["214.1"],"由模版整体大小提升为了":["214.1"],"动态内容的数量相关":["214.1"],"极大的优化了":["214.1"],"然后处理节点的":["214.1"],"对象进一步解析出指令":["214.1"],"vnodedirectives":["214.1"],"动态属性":["214.1"],"dynamicpropsnames":["214.1"],"以及更新标识":["214.1"],"patchflag":["214.1","232.2","236.6"],"主要用于标识节点更新的类型":["214.1"],"处理节点的":["214.1"],"chilren":["214.1","241.10"],"对于组件节点而言":["214.1"],"如果有子节点":["214.1"],"说明就是组件的插槽会有一些内置组件的处理逻辑":["214.1"],"对于一个普通元素节点来说":["214.1"],"直接把节点的":["214.1"],"拿给":["214.1"],"vnodechilren":["214.1"],"就行":["214.1"],"当节点只有一个子节点":["214.1"],"并且是一个普通文本节点":["214.1"],"插值":["214.1"],"就直接把值":["214.1"],"vnodechildren":["214.1"],"nodetransform":["214.1","214.2"],"transformexpression":["214.2"],"函数实现":["214.2","214.3"],"主要就是转换插值和元素节点中的动态表达式":["214.2"],"内部主要通过":["214.2"],"processexporession":["214.2"],"模版":["214.2","241.9"],"生成的表达式节点":["214.2"],"是一个简单的表达式":["214.2"],"处理后":["214.2","230.2"],"变成了一个复合表达式的对象":["214.2"],"内部依赖了":["214.2"],"解析表达式生成":["214.2"],"依赖了":["214.2"],"estree":["214.2"],"遍历了":["214.2"],"然后分析判断是否需要对节点添加前缀":["214.2"],"接着修改":["214.2"],"转换生成新的表达式对象":["214.2"],"通常是在":["214.2"],"本身体积很大":["214.2"],"所以生产环境web端不会引入这个库":["214.2"],"因为生产环境也不需要对表达式进行转换":["214.2"],"运行时编译会使用":["214.2"],"with":["214.2","216.2"],"方式":["214.2"],"nodetypes":["214.2","215.2"],"interpolation":["214.2"],"processexpression":["214.2"],"simpleexpressionnode":["214.2","215.2"],"handle":["214.2"],"process":["214.2"],"they":["214.2"],"handled":["214.2"],"directive":["214.2"],"exp":["214.2"],"arg":["214.2"],"handling":["214.2","216.2"],"wrapping":["214.2"],"statements":["214.2","230.1"],"transformtext":["214.3"],"只处理":["214.3"],"根节点":["214.3"],"分支相关节点":["214.3"],"因为要保证所有表达式节点都已经处理完毕才执行转换逻辑":["214.3"],"合并一些相邻的文本节点":["214.3"],"然后为内部每一个文本节点创建一个代码生成节点":["214.3"],"在内部":["214.3"],"静态文本节点和动态插值节点都被看作成一个文本节点":["214.3"],"所以函数首先遍历节点的子节点":["214.3"],"然后把子节点相邻的文本节点合并成一个":["214.3"],"合并完子文本节点后":["214.3"],"判断是不是只带有单个文本子元素的纯元素节点":["214.3"],"且元素上不存在自定义指令":["214.3"],"那么不需要转换":["214.3"],"运行时可用通过设置元素的":["214.3"],"textcontent":["214.3"],"直接更新文本":["214.3"],"adjacent":["214.3"],"nodes":["214.3","231.4","241.1","241.10"],"expressions":["214.3"],"into":["214.3","236.6"],"节点转换完毕之后":["215.1"],"会判断编译配置中是否配置了":["215.1"],"会根据节点类型的不同":["215.2"],"返回不同的值":["215.2"],"对于文本和注释节点":["215.2"],"对于元素节点":["215.2"],"会判断节点自身以及它子元素的类型":["215.2"],"属性类型":["215.2"],"再去决定它的常量类型":["215.2"],"如果发现没有任何动态数据":["215.2"],"就是可以被静态提升的":["215.2"],"虽然有的节点会包含一些动态节点":["215.2"],"但是本身的静态属性还是可以被静态提升的":["215.2"],"如果节点满足可以被静态提升的条件":["215.2"],"节点对应的":["215.2"],"会通过执行":["215.2"],"hoist":["215.2"],"将其修改为一个简单的表达式节点":["215.2"],"templatechildnode":["215.2","241.1","241.10"],"transformcontext":["215.2"],"constanttypes":["215.2"],"constantcache":["215.2"],"tagtype":["215.2","241.9"],"elementtypes":["215.2"],"constant":["215.2"],"静态提升过程最终结果还是修改了可以被静态提升的节点的":["215.3"],"组件是vue3":["216.1"],"提供的内置组件":["216.1"],"目的是让包裹的子节点可以脱离当前组件的dom":["216.1"],"流":["216.1"],"渲染到任意指定的目标元素内部":["216.1"],"keepaliveimpl":["216.2"],"componentoptions":["216.2","219.6"],"marker":["216.2"],"inside":["216.2"],"renderer":["216.2","254.24"],"using":["216.2"],"check":["216.2"],"directly":["216.2"],"because":["216.2"],"importing":["216.2"],"would":["216.2"],"prevent":["216.2"],"being":["216.2"],"shaken":["216.2"],"iskeepalive":["216.2"],"keepaliveprops":["216.2"],"slots":["216.2","216.3","252.3","252.5"],"setupcontext":["216.2"],"getcurrentinstance":["216.2"],"communicates":["216.2"],"instantiated":["216.2"],"via":["216.2"],"passes":["216.2"],"internals":["216.2"],"exposes":["216.2"],"activate":["216.2","263.2"],"deactivate":["216.2"],"implementations":["216.2"],"whole":["216.2"],"point":["216.2"],"avoid":["216.2"],"facilitate":["216.2"],"sharedcontext":["216.2"],"渲染函数先通过执行":["216.3"],"拿到子节点":["216.3"],"它就是":["216.3"],"keepalive":["216.3","216.7"],"组件包裹的子节点":["216.3"],"只能渲染单个子节点":["216.3"],"所以当":["216.3"],"长度":["216.3"],"大于":["216.3","232.2"],"1会发出警告":["216.3"],"pendingcachekey":["216.3"],"rawvnode":["216.3"],"组件递归的":["216.4"],"过程就是为了渲染":["216.4"],"递归是需要性能耗时的":["216.4"],"其实就是缓存了":["216.4"],"下一次渲染直接从缓存中取出":["216.4"],"设计":["216.5"],"从缓存中删除":["216.5"],"函数从":["216.6"],"树中移除节点":["216.6"],"queuepostrendereffect":["216.6","236.4","236.6","236.7"],"的方式执行定义的":["216.6"],"deactivated":["216.6"],"钩子函数":["216.6","220.1","220.6","220.7","236.4","236.6","236.7"],"是一个抽象组件":["216.7"],"组件本身不渲染任何实体节点":["216.7"],"defineasynccomponent":["217.0","217.1","217.4","217.5","217.6","217.7"],"asynccomponentloader":["217.0","217.7"],"asynccomponentoptions":["217.0","217.7"],"返回的是":["217.1"],"definecomponent":["217.1"],"除了把异步组件渲染成注释节点":["217.2"],"setup函数内部还调用了":["217.2"],"在调用":["217.3"],"load":["217.3","217.7"],"可以接受一个对象":["217.4"],"内部会通过":["217.7"],"一个变量":["217.7"],"pendingrequest":["217.7"],"即使初始化多次":["217.7"],"变量还是共享的":["217.7"],"第一次执行":["217.7"],"函数加载异步组件":["217.7"],"并把返回值赋给":["217.7"],"第二次执行的时候":["217.7"],"发现":["217.7"],"有值":["217.7"],"直接返回":["217.7","225.4"],"上一次的结果":["217.7"],"不会再次调用":["217.7"],"componentpublicinstance":["217.7"],"isfunction":["217.7","235.4","283.10"],"异步组件本质就是一个普通的组件":["217.8"],"在内部通过定义的":["217.8"],"vnode":["218.2","218.3","218.4","218.5","218.8","219.3","219.4","222.3","222.4","226.1","228.2","231.0","231.1","232.2","232.3","232.4","236.2","236.4","236.5","236.6","236.7","252.2","252.3","252.5"],"用来创建基础的":["218.4"],"根据传入的参数":["218.4"],"可以完整的描述该节点的信息":["218.4"],"如果参数":["218.4"],"needfullchildrennormalization":["218.4","218.5"],"还会执行":["218.4"],"normalizechildren":["218.4"],"去标准化子节点":["218.4"],"vnodetypes":["218.4","232.2"],"classcomponent":["218.4","232.2"],"dynamic":["218.4","232.2"],"vnodeprops":["218.4","232.2"],"相比于":["218.5","254.1"],"createbasevnode":["218.5","232.3"],"有很多额外的判断":["218.5"],"是否为空":["218.5"],"是否":["218.5"],"还会对":["218.5"],"执行标准化":["218.5"],"最后执行":["218.5"],"创建完":["218.5","258.9"],"对象还会执行":["218.5"],"normalizechildren标准化子节点":["218.5"],"组件的":["218.5"],"不能直接使用":["218.5"],"必须编译生成":["218.5"],"函数内部会执行":["218.5"],"创建普通元素的":["218.5"],"主要用来创建组件的实例":["218.7"],"initialvnode":["218.8"],"表示组件的":["218.8"],"组件挂载的父节点":["218.8"],"表示挂载的参考锚点":["218.8"],"parentcomponent":["218.8","222.3","222.7","236.4","236.6","236.7"],"父组件的示例":["218.8"],"mountcomponent":["218.8"],"mountcomponentfn":["218.8"],"初始化一个应用程序":["218.9"],"组件化是":["218.11"],"的核心思想之一":["218.11"],"允许用模版加对象描述的方式创建组件":["218.11"],"再给组件注入不同的数据":["218.11"],"就可以渲染组件了":["218.11"],"整个渲染过程中":["219.3"],"要维护组件的上下文数据":["219.3"],"组件渲染需要的":["219.3"],"组件":["219.3"],"函数一系列声明周期函数":["219.3"],"等等":["219.3"],"我们要把这些数据和函数都挂载到一个对象上":["219.3"],"后续就可以通过对象访问":["219.3"],"对象就是组件的实例":["219.3"],"是通过":["219.3"],"createcomponentinstance":["219.3"],"创建的组件实例":["219.3"],"componentinternalinstance":["219.3","219.6","220.2","236.4","236.6"],"suspense":["219.3"],"suspenseboundary":["219.3","236.4","236.6"],"setupcomponent":["219.4","252.4"],"方法实现":["219.4","219.10"],"从组件的":["219.4"],"组件会在渲染过程中把一些状态挂载到组件实例对应的属性上":["219.5"],"主要做":["219.6","248.1"],"创建渲染上下文代理":["219.6"],"判断处理":["219.6"],"完成组件实例的设置":["219.6"],"isssr":["219.6"],"validatecomponentname":["219.6"],"appcontext":["219.6","236.1"],"主要对":["219.7"],"在解析":["219.8"],"finishcomponentsetup":["219.10"],"主要":["219.10"],"标准化模版或者渲染函数":["219.10"],"兼容":["219.10"],"主要是通过":["219.10"],"applyoptions":["219.10"],"定义的属性和数据":["219.10"],"都添加到组件的实例":["219.10"],"相关的属性上":["219.10"],"会添加到":["219.10"],"provide":["219.10","243.2"],"inject":["219.10"],"methods":["219.10"],"添加到":["219.10"],"和extends":["219.10"],"会递归执行":["219.10"],"applyopions":["219.10"],"方法完成定义的对象和属性":["219.10"],"数据进行合并":["219.10"],"only":["219.12","219.13"],"是否注册了":["219.14"],"vue2":["220.1","254.2","254.5"],"createhook":["220.2"],"注册":["220.2"],"会返回一个函数":["220.2"],"内部通过":["220.2"],"injecthook":["220.2"],"lifecyclehooks":["220.2"],"weh":["220.2"],"currentinstance":["220.2"],"prepend":["220.2"],"对用户注册的钩子函数":["220.3"],"做了一层封装":["220.3"],"然后添加到一个数组中":["220.3"],"并把数组保存到当前组件的实例的":["220.3"],"onmounted":["220.4"],"onupdated":["220.5"],"beforeupdate":["220.5","236.6"],"onunmounted":["220.6"],"beforeunmount":["220.6","236.7"],"会在组件销毁之前执行":["220.6"],"handleerror":["220.7"],"中执行的":["220.7"],"配置的标准化":["221.1"],"标准化":["221.1"],"的配置是通过":["221.1"],"normalizepropsoptions":["221.1"],"函数完成的":["221.1","236.4"],"会先处理":["221.1"],"两个特殊属性":["221.1"],"都是拓展组件的定义":["221.1"],"需要对其定义的":["221.1"],"递归执行":["221.1","241.10"],"会对定义不同形式的":["221.1"],"进行转换":["221.1"],"最终返回标准化结果":["221.1"],"会用":["221.1"],"进行缓存":["221.1"],"对一个组件重复执行":["221.1"],"会返回":["221.1"],"缓存的结果":["221.1"],"最后使用":["221.1"],"propsoptions":["221.1"],"存储标准化结果":["221.1"],"方便后续统一处理":["221.1"],"值的初始化":["221.2"],"有了标准化的":["221.2"],"setfullprops":["221.3"],"主要目的就是遍历":["221.3"],"数据求值":["221.3"],"以及对需要转换的":["221.3"],"求值":["221.3"],"该过程就是遍历":["221.3"],"rawprops":["221.3"],"获取每个":["221.3"],"对应的值并赋值给":["221.3"],"attrs":["221.3"],"因为我们在标准化":["221.3"],"配置的过程中已经把":["221.3"],"定义的":["221.3"],"转换成了":["221.3"],"驼峰形式":["221.3"],"然后对比查看传递的props数据是否已经在配置中定义":["221.3"],"如果已经定义":["221.3"],"就把值赋值到":["221.3"],"对象中":["221.3"],"validateprop":["221.4"],"函数用来检测":["221.4"],"求的的值":["221.4"],"是否合法":["221.4"],"如不匹配则会抛出警告":["221.4"],"首先验证":["221.4"],"情况":["221.4"],"然后验证":["221.4"],"值的类型":["221.4"],"的更新":["221.6","254.5"],"组件的重新渲染会触发":["221.7"],"其实就是执行":["221.8"],"componentupdatefn":["221.8"],"数据的更新":["221.10"],"在组件设置是一个非常重要的特性":["221.11"],"首先判断":["222.3"],"新旧节点是否相同":["222.3"],"如果不同":["222.3"],"则删除旧的节点":["222.3"],"再创建新的节点":["222.3"],"如果类型相同":["222.3"],"则需要进入":["222.3"],"更新流程了":["222.3"],"然后根据不同的":["222.3"],"不同的逻辑处理":["222.3"],"patchfn":["222.3"],"n1":["222.3","222.7","236.6"],"n2":["222.3","222.7","236.6"],"parentsuspense":["222.3","222.7","236.4","236.6","236.7"],"processcomponent":["222.4"],"再执行":["222.4"],"updatecomponent":["222.4"],"函数来更新子组件":["222.4"],"函数在更新子组件的时候":["222.4"],"会先执行":["222.4","252.6"],"shouldupdatecomponent":["222.4"],"根据新旧子组件":["222.4"],"判断是否需要更新":["222.4"],"内部":["222.4","223.2"],"主要通过检测并对比组件的":["222.4"],"dirs":["222.4","236.6"],"processelement":["222.5"],"逻辑":["222.5"],"更新元素的过程中主要做了两件事":["222.5"],"patchprops":["222.6"],"会更新":["222.6"],"节点的":["222.6"],"等等其他":["222.6"],"patchchildren":["222.7"],"patchchildrenfn":["222.7"],"issvg":["222.7","236.4","236.6"],"slotscopeids":["222.7","236.4","236.6"],"optimized":["222.7","236.6","236.7"],"c1":["222.7"],"prevshapeflag":["222.7"],"shapeflag":["222.7","252.3"],"c2":["222.7"],"需要维护几个变量":["222.9"],"头部的索引":["222.9"],"依次对比新旧节点":["222.10"],"头部尾部节点":["222.11"],"只会剩下三种情况":["222.11"],"新子节点有剩余":["222.11"],"添加新节点":["222.11"],"视图更新粒度是组件级别的":["222.12"],"如果传递给":["223.0"],"拥有单个参数":["223.1"],"getteroroptions":["223.1"],"可以是":["223.1","258.3"],"第一个参数":["223.2"],"函数在后续执行":["223.2"],"会执行这个":["223.2"],"在后续执行派发通知的时候好":["223.2"],"会通知":["223.2"],"依赖执行对应的":["223.2"],"computerefimpl":["223.2"],"对实例的":["223.2"],"属性创建了":["223.2"],"计算属性的本质其实就是响应式对象":["224.0"],"计算属性在":["225.0"],"中也不需要访问":["225.0"],"当我们访问计算属性的时候":["225.3"],"内部会缓存上次的计算结果":["225.4"],"dirtry":["225.4"],"的时候才会重新计算":["225.4"],"如果访问计算属性时":["225.4"],"缓存的":["225.4"],"转换后":["226.1"],"函数生成代码":["226.1"],"函数的输入":["226.1"],"就是转换后的":["226.1"],"主要做了五件事情":["226.1"],"创建代码生成上下文":["226.1"],"生成预设代码":["226.1"],"生成渲染函数的名称和参数":["226.1"],"生成资源声明代码":["226.1"],"生成创建":["226.1","231.1"],"树的表达式":["226.1"],"codegenoptions":["226.1"],"oncontextcreated":["226.1"],"codegencontext":["226.1","228.1","231.1","231.2","231.7"],"codegenresult":["226.1"],"createcodegencontext":["226.1"],"通过执行":["227.0","236.4"],"该上下文对象":["227.1"],"维护了":["227.1"],"generate":["227.1","230.1"],"过程中的一些配置":["227.1"],"prefixidentifers":["227.1"],"也维护了generate":["227.1"],"过程的一些状态数据":["227.1"],"比如当前生产的代码的":["227.1"],"还包含了在":["227.1"],"过程中可能会使用的辅助函数":["227.1"],"用户修改上下文状态数据":["227.1"],"当前代码":["227.1"],"后追加":["227.1"],"更新他的值":["227.1"],"newline":["227.1","228.1","228.3"],"添加一个换行符":["227.1"],"保持代码缩进":["227.1"],"ident":["227.1"],"增加代码的缩进":["227.1"],"会让上下文维护的代码缩进":["227.1"],"加一":["227.1"],"内部会执行":["227.1"],"genscopeid":["228.1"],"optimizeimports":["228.1"],"runtimemodulename":["228.1"],"ssrruntimemodulename":["228.1"],"hoists":["228.1","228.3"],"每个属性对应的值是一个字符串":["228.2"],"就是需要引用的模块或者函数的名称":["228.2"],"createvnode":["228.2"],"是直接通过模块的方式导出的":["228.2"],"其他函数都是类似":["228.2"],"mapping":["228.2"],"helpers":["228.2"],"imported":["228.2"],"内部先执行":["228.3"],"生成一个空行":["228.3"],"然后遍历":["228.3"],"生成静态提升遍历定义的函数":["228.3"],"jschildnode":["228.3"],"functionname":["229.0"],"ssrrender":["229.0"],"先生成资源声明代码":["230.1"],"asset":["230.1"],"resolution":["230.1"],"接下来通过":["230.2"],"生成自定义组件声明代码":["230.2"],"函数内部调用了":["230.2"],"helper函数":["230.2"],"就是从":["230.2"],"helpernamemap":["230.2"],"查找对应的字符串":["230.2"],"会遍历":["230.2"],"assets":["230.2"],"过程中":["230.2"],"tovalidassetid":["230.2"],"包装":["230.2"],"运行时就可以":["230.2"],"主要的思路就是根据不同节点类型":["231.1"],"生成不同代码":["231.1"],"根节点的":["231.1"],"类型是":["231.1"],"vnodecall":["231.1","231.2"],"所以会执行":["231.1"],"genvnodecall":["231.1"],"节点的表达式代码":["231.1"],"isstring":["231.1"],"issymbol":["231.1"],"会倒叙遍历参数数组":["231.3"],"找到一个不为空的参数":["231.3"],"返回该参数前面所有参数组成的数组":["231.3"],"拿到每个node":["231.4"],"如果是字符串":["231.4"],"直接添加到代码中":["231.4"],"如果是数组":["231.4"],"gennodelistasarray":["231.4"],"就是往代码中添加":["231.5"],"的内容":["231.5"],"把一个":["231.6"],"列表生成类似数组形式的代码":["231.6"],"前后添加中括号":["231.6"],"判断是否生成多行代码":["231.6"],"如果多行":["231.6"],"生成条件表达式的代码":["231.7"],"会在逻辑测试代码":["231.7"],"conditionalexpression":["231.7"],"在运行时设计了一个":["232.1"],"blockstack":["232.1"],"currentblock":["232.1","232.2"],"是不是一个动态节点":["232.2"],"isblocktreeenabled":["232.2"],"就把它添加到":["232.2"],"这就是动态收集":["232.2"],"到过程":["232.2"],"还会判断":["232.2"],"isblocknode":["232.2"],"到值":["232.2"],"不会添加到":["232.2"],"本质就是通过":["232.3"],"setupblock":["232.3"],"函数封装":["232.3"],"函数生成的":["232.3"],"将其变成一个":["232.3"],"首先执行":["232.3"],"主要是用来遍历新的动态子节点数组":["232.4"],"拿到对应的新旧动态子节点":["232.4"],"更新子节点":["232.4"],"更新子节点会遇到":["232.4"],"是动态":["232.4"],"动态":["232.4"],"那么它的":["232.4"],"dynaimcchildren":["232.4"],"optimize":["232.4"],"无需做其他":["232.4"],"生成代码阶段也是一个":["233.0"],"自顶向下的过程":["233.0"],"主要依据在前面转换了":["233.0"],"对象去生成相应的代码":["233.0"],"在生成过程中":["233.0"],"自定义指令本质就是一个":["234.0"],"绑定元素":["234.2"],"当指令第一次绑定到元素":["234.3"],"绑定元素的父组件被挂载后调用":["234.4"],"更新包含指令元素的":["234.5"],"包含指令元素的":["234.6"],"卸载绑定元素的父组件之前调用":["234.7"],"指令与元素解除绑定":["234.8"],"组件对象的":["235.2"],"指令对象保存的地方不同":["235.3"],"函数拥有两个参数":["235.4"],"表示名称":["235.4"],"表示指令对象":["235.4"],"指令的全局注册就是把指令对象创建在全局上下文的":["235.4"],"createappapi":["235.4"],"hostelement":["235.4"],"rootrenderfunction":["235.4"],"hydrate":["235.4"],"roothydratefunction":["235.4"],"createappfunction":["235.4"],"rootcomponent":["235.4"],"rootprops":["235.4"],"isobject":["235.4","283.10"],"warn":["235.4"],"passed":["235.4"],"must":["235.4"],"createappcontext":["235.4"],"installedplugins":["235.4"],"ismounted":["235.4"],"指令编译后的":["236.0"],"内部调用了":["236.1"],"resolveasset":["236.1"],"传入的类型名称为":["236.1"],"内部先通过":["236.1"],"函数解析注册的资源":["236.1"],"由于我们传入的是":["236.1"],"所以会从组件实例中":["236.1"],"查找对应的":["236.1"],"查找不到就从组件定义对象上的":["236.1"],"属性中查找":["236.1"],"如果都查找不到":["236.1"],"查找对应的指令":["236.1"],"的逻辑就是优先查找组件是否局部注册该指令":["236.1"],"拥有两个参数":["236.2"],"就是应用指令节点的":["236.2"],"是指令构成的数组":["236.2"],"因为一个元素可能存在多个指令":["236.2"],"其实就是给":["236.2"],"增加一个":["236.2"],"dirc":["236.2"],"的属性":["236.2","286.52"],"属性的值就是从元素节点上所有的指令构成的对象数组":["236.2"],"mountelement":["236.4"],"在其中处理元素的":["236.4"],"会执行指令的":["236.4"],"元素插入到容器之前执行":["236.4"],"指令的":["236.4"],"beforemount":["236.4"],"插入元素之后":["236.4"],"的方式执行指令的":["236.4"],"钩子函数的执行是通过":["236.4"],"invokedirectivehook":["236.4"],"rendererelement":["236.4"],"renderernode":["236.4"],"拥有四个参数":["236.5"],"元素当前的":["236.5"],"prevnode":["236.5"],"元素之前的":["236.5"],"组件实例":["236.5","243.1"],"钩子函数的名称":["236.5"],"函数通过遍历":["236.5"],"patchelement":["236.6"],"函数实现的":["236.6"],"更新子节点之前会执行指令的":["236.6"],"更新完子节点后":["236.6"],"执行指令的":["236.6","236.7"],"dynamicchildren":["236.6"],"take":["236.6"],"account":["236.6"],"may":["236.6"],"generated":["236.6"],"元素的卸载通过":["236.7"],"unmount":["236.7"],"主要思路就是递归的方式遍历删除自身节点和子节点":["236.7"],"在移除元素之前":["236.7"],"移除节点和当前节点之后":["236.7"],"unmounted":["236.7"],"unmountfn":["236.7"],"doremove":["236.7"],"自定义指令是":["237.0"],"模版解析是":["238.0"],"编译过程的第一步":["238.0"],"的编译场景":["239.1"],"端主要是通过":["239.2"],"函数实现模版编译":["239.2"],"主要做了三件事":["239.3","241.8"],"生成代码":["239.3","265.5"],"so":["239.3"],"compilers":["239.3"],"like":["239.3"],"用于两个参数":["239.5"],"会返回一个":["240.1","258.10"],"对象作为":["240.1"],"解析子节点通过":["241.1"],"解析模版并创建":["241.1"],"节点数据":["241.1"],"有两个主要流程":["241.1"],"自顶向下分析代码":["241.1"],"节点数组":["241.1"],"空白字符的处理":["241.1"],"提高编译效率":["241.1"],"parsercontext":["241.1","241.8","241.10"],"textmodes":["241.1","241.10"],"ancestors":["241.1","241.8","241.10"],"elementnode":["241.1","241.8","241.10"],"last":["241.1","241.10"],"ns":["241.1","241.10"],"namespaces":["241.1","241.10"],"while":["241.1","241.10"],"isend":["241.1","241.10"],"assert":["241.1","241.8","241.10"],"rcdata":["241.1","241.10"],"invpre":["241.1","241.9"],"startswith":["241.1"],"delimiters":["241.1"],"parseinterpolation":["241.1","241.6"],"ast节点数组":["241.2"],"开头的字符串":["241.3"],"会进入注释节点的解析":["241.3"],"parsecomment":["241.3"],"函数解析的":["241.3","241.6"],"首先会利用注释结束符的正则表达式去匹配代码":["241.3"],"找出注释结束符":["241.3"],"如果没有匹配到或者注释结束符不合法":["241.3"],"都会报错":["241.3"],"如果找到合法的注释结束符":["241.3"],"获取她中间的注释内容":["241.3"],"然后截取注释开头到结尾的代码":["241.3"],"判断是否有嵌套注释":["241.3"],"如果有":["241.3"],"报错":["241.3"],"通过调用":["241.3"],"advanceby":["241.3"],"主要更新上下文":["241.4"],"来前进代码":["241.4"],"同时更新":["241.4"],"会跳过插值的解析":["241.6"],"首先尝试查找取插值的结束隔离符":["241.6"],"找不到则报错":["241.6"],"如果找到把代码前进到取插值开始分隔符后":["241.6"],"parsetextdata":["241.6"],"获取插值中间的内容并将代码前进到插值内容后":["241.6"],"除了普通字符串":["241.6"],"内部会处理一些":["241.6"],"html实体符号":["241.6"],"由于插值内容可能会有前后空白字符":["241.6"],"最终返回到":["241.6"],"需要执行一下":["241.6"],"为了准确的拿到插值内容的代码位置信息":["241.6"],"innerstart":["241.6"],"innerend":["241.6"],"去记录插值内容的代码开头和结束为止":["241.6"],"最终的返回值是一个描述插值节点的对象":["241.6"],"为5":["241.6"],"表示是一个插值节点":["241.6"],"loc":["241.6"],"表示代码的开头和结束位置信息":["241.6"],"插值内容可以是一个表达式":["241.6"],"又是一个描述表达式节点的对象":["241.6"],"表示是一个表达式节点":["241.6"],"表示插值表达式内容":["241.6"],"parsetext":["241.7"],"函数解析":["241.7","241.8"],"会尝试从代码中截取响应的文本内容":["241.7"],"或者插值分隔符":["241.7"],"找到结束位置":["241.7"],"会解析模版中的标签节点":["241.8"],"当代码是":["241.8"],"后门跟着字母":["241.8"],"说明是一个标签开头":["241.8"],"进入解析":["241.8"],"parseelement":["241.8","241.10"],"解析开始标签":["241.8"],"解析子节点":["241.8"],"解析闭合标签":["241.8"],"parsetag":["241.9"],"首先匹配标签文本的结束位置":["241.9"],"将代码前进到标签文本后门的空白字符后":["241.9"],"parseattributes":["241.9"],"解析标签的属性":["241.9"],"指令等":["241.9"],"最终解析生成一个":["241.9"],"将代码推进到属性后":["241.9"],"接着检查是不是一个":["241.9"],"设置":["241.9"],"inpre":["241.9"],"再去检查属性有没有":["241.9"],"重置上下文":["241.9"],"重置解析属性":["241.9"],"判断是不是一个":["241.9"],"自闭和标签":["241.9"],"将代码推进到闭合标签后":["241.9"],"最后判断标签类型":["241.9"],"插槽":["241.9"],"自定义组件":["241.9"],"最终返回到值是一个描述节点类型的对象":["241.9"],"标签名":["241.9"],"标签的类型":["241.9"],"标签的属性":["241.9"],"parsechildren":["241.10"],"如果遇到元素节点":["241.10"],"ancestor":["241.10"],"数组的最后一个值":["241.10"],"拿到元素的标签节点":["241.10"],"前添加到数组的尾部元素":["241.10"],"解析完成子节点后":["241.10"],"中弹出":["241.10"],"把children":["241.10"],"数组添加到":["241.10"],"更新标签节点的代码位置":["241.11"],"通过不断递归的解析":["241.12"],"解析上下文实际就是一个":["242.1"],"维护着解析过程中的上下文":["242.1"],"解析相关配置":["242.1"],"会根据传入的配置和默认的配置做一些合并":["242.1"],"就是提供数据":["243.1"],"函数提供的数据主要保存在组件实例的":["243.1"],"provides":["243.1","243.2","243.15"],"对象上":["243.1"],"在创建组件实例的时候":["243.1"],"对象直接指向父组件实例的":["243.1"],"默认情况下":["243.1","243.15","283.6"],"组件实例的":["243.1"],"之家指向其父组件的":["243.1"],"就是注入数据":["243.2"],"注入来自其祖先组件的数据":["243.2"],"通过注入的key":["243.2"],"来访问其祖先组件实例中的":["243.2"],"对象对应的值":["243.2"],"如果某个组件组件中执行了":["243.2"],"那么在":["243.2"],"的过程中":["243.2"],"会先从其父组件去寻找这个":["243.2"],"找到就返回":["243.2"],"找不到就通过":["243.2"],"的原型去查找这个":["243.2"],"的原型就指向它父级的":["243.2"],"形成了一个递归查找的过程":["243.2"],"模块化可以共享数据":["243.4"],"局部范围":["243.6"],"作用域是全局范围":["243.7"],"后代组件不需要知道那里注入的数据":["243.9"],"用户必须明确知道这个数据那里来的":["243.10"],"提供数据的上下文就是组件实例":["243.12"],"没有上下文":["243.13"],"依赖注入是和上下文相关的":["243.14"],"依赖注入的实现主要依赖实例的":["243.15"],"子组件的":["243.15"],"响应式api实现和组件更新之间的关系":["244.1","244.2"],"依赖收集发生在数据的访问阶段":["245.0"],"函数主要做了":["245.1"],"4件事":["245.1","247.2"],"重写了数组中的":["245.2"],"创建了全局的":["245.3"],"targetmap作为原始数据对象的":["245.3"],"键是":["245.3"],"值是":["245.3"],"depsmap":["245.3"],"用来作为依赖的":["245.3"],"的key":["245.3"],"集合":["245.3"],"中存储的是依赖的副作用函数":["245.3"],"每次执行":["245.3","246.4"],"之前每次执行副作用函数":["246.1"],"effecttrackdepth":["246.2"],"函数实现优化":["246.3"],"内部使用":["246.3"],"reactiveeffect":["246.3"],"类创建了":["246.3"],"effect实例":["246.3"],"并且让函数返回":["246.3"],"相比于优化前":["246.4"],"的设计":["246.5"],"标记依赖的":["246.5"],"派发通知发生在数据更新阶段":["247.0"],"主要做了":["247.2"],"targetmap":["247.2"],"副作用函数":["247.4"],"函数拥有单个参数":["248.0"],"必须是对象或者数据类型":["248.0"],"内部通过了":["248.0"],"拥有":["248.1"],"5个参数":["248.1"],"表示待变成响应式对象的":["248.1"],"对象或者数组":["248.1"],"isreadonly":["248.1","249.0"],"是否创建只读对象":["248.1"],"basehandles":["248.1"],"表示普通对象和数组类型数据的响应式对象处理器":["248.1"],"collectionhandles":["248.1"],"表示集合类型数据的响应式处理器":["248.1"],"proxymap":["248.1"],"表示原始对象和响应式对象的缓存映射图":["248.1"],"是不是对象或者数组":["248.1"],"不是直接返回":["248.1"],"如果已经是响应式对象":["248.1"],"再次执行":["248.1"],"reactive":["248.1","249.0","251.0"],"劫持了对":["248.2"],"对象对一些操作":["248.2"],"访问对象属性会触发":["248.2"],"主要区别":["249.0"],"就是执行":["249.0"],"createreactiveobject":["249.0"],"函数的参数":["249.0"],"不同":["249.0"],"mutablehandlers":["249.1","251.1"],"区别主要是在于":["249.1"],"creategetter":["249.2","251.2"],"函数返回执行":["250.0"],"的优化":["250.1"],"主要是对":["250.1"],"对象的":["250.1"],"属性执行依赖收集和派发通知的逻辑":["250.1"],"的实现中":["250.1"],"依赖收集部分由原先的":["250.1"],"变成了":["250.1"],"trackrefvalue":["250.1"],"直接把":["250.2"],"相关依赖保存到":["250.2"],"属性中":["250.2"],"函数的实现":["250.2"],"中访问":["250.3"],"响应式对象":["250.3"],"不需要":["250.3"],"访问":["250.3"],"也是通过":["251.2"],"第二个参数传递是":["251.2"],"即使":["251.2","255.0"],"返回的":["251.2"],"的值是对象类型":["251.2"],"也不会通过递归变成响应式":["251.2"],"只会把对象的最外层属性变成响应式":["251.2"],"在初始化":["251.2"],"到过程中":["251.2"],"就是对":["251.2"],"求值后":["251.2"],"就是通过":["251.2"],"shallowreactive":["251.2"],"把它变成响应式":["251.2"],"父组件渲染阶段":["252.1"],"通常创建":["252.2"],"传入的子节点是一个数组":["252.2"],"主要的作用标准化":["252.3"],"以及更新":["252.3"],"的节点类型":["252.3"],"主要关注插槽的逻辑":["252.3"],"经过处理":["252.3"],"是插槽对象":["252.3"],"会与":["252.3"],"slot":["252.3","252.5"],"子节点类型":["252.3"],"或运算":["252.3"],"由于当前的":["252.3"],"本身的":["252.3"],"stateful":["252.3"],"所以运算后的":["252.3"],"在组件的渲染过程中":["252.4"],"有一个":["252.4"],"的流程":["252.4"],"的执行过程中":["252.4"],"initslots":["252.4"],"首先根据第二个参数":["252.5"],"获取对应的插槽函数":["252.5"],"函数获取插槽的内容":["252.5"],"这里会执行":["252.5"],"ensurevaildvnode":["252.5"],"进行判断":["252.5"],"如果插槽中全是注释节点":["252.5"],"不是一个合法的插槽内容":["252.5"],"最后通过":["252.5"],"createblock":["252.5"],"创建了":["252.5"],"fragment":["252.5"],"节点并返回":["252.5"],"validslotcontent":["252.5"],"函数执行的逻辑":["252.6"],"执行了":["252.6"],"withctx":["252.6"],"函后的返回值":["252.6"],"的主要作用就是给待执行的函数":["252.6"],"坐了一层封装":["252.6"],"执行当前组件实例指向上下文变量":["252.6"],"默认值是":["252.6"],"currentrenderinginstance":["252.6"],"也就是执行":["252.6"],"函数的组件实例":["252.6"],"返回新的函数":["252.6"],"renderfnwithcontext":["252.6"],"来说":["252.6"],"当它执行的时候":["252.6"],"setcurrentrenderinginstance":["252.6"],"设置成当前渲染组件实例":["252.6"],"和普通插槽相比":["252.7"],"作用域插槽编译生成的":["252.7"],"插槽的实现实际就是一种延时渲染":["252.8"],"指令才是真正意义上的双向绑定":["253.0"],"因为数据的流动是双向的":["253.0"],"可以作用于原声带表单元素":["253.0"],"采用了":["254.2"],"monorepo":["254.2","254.11"],"typscript":["254.2"],"移除一些不常用的":["254.3"],"直接":["254.4"],"颗粒度是到组件的":["254.5"],"rfc":["254.7"],"新增了静态标记":["254.8"],"会把静态节点进行局部作用域的提升":["254.9"],"再次更新的时候不会循环":["254.9"],"会直接取声明的":["254.9"],"当存在大量静态内容时":["254.10"],"这些内容会被当作纯字符串推进一个":["254.10"],"源码编译过程":["254.11"],"的源码是通过":["254.11"],"源码结构":["254.12"],"sfc":["254.16"],"响应式系统":["254.20"],"playground":["254.22"],"多个包共享的实用工具库":["254.23"],"面向用户的完整构建":["254.25"],"compat":["254.26"],"侦听器用于观测响应式数据的变化":["255.0"],"然后执行执行某些逻辑":["255.0"],"执行也分多钟":["255.0"],"同步执行":["255.0"],"渲染前执行":["255.0"],"渲染后执行":["255.0"],"侦听器观测的响应式数据在同一个":["255.0"],"tick":["255.0"],"被多次修改":["255.0"],"非同步的情况下":["255.0"],"回调函数只会调用一次":["255.0"],"当侦听器执行方式是":["255.0"],"内部的":["255.0"],"会推入":["255.0"],"内部实现的异步队列":["255.0"],"侦听器可以随时销毁":["255.0"],"也可以在开发环境下调试":["255.0"],"侦听器内部通过":["255.0"],"组件的副作用函数":["256.1"],"在它依赖的响应数据更新后":["256.1"],"queuejob":["256.1"],"方式再次运行":["256.1"],"内部维护了":["256.2"],"isflushing":["256.2","256.4"],"isflushpending":["256.2","256.4"],"用来控制异步任务的刷新逻辑":["256.2"],"一开始会把":["256.4"],"重置为":["256.4"],"表示正在执行异步队列任务":["256.4"],"执行异步任务队列之前":["256.4"],"先执行":["256.4"],"flushpreflushcbs":["256.4","256.6"],"处理所有预处理任务队列":["256.4"],"seen":["256.4","256.8"],"countmap":["256.4"],"首先对":["256.5"],"pendingpreflushcbs":["256.5"],"做了去重":["256.5"],"activepreflushcbs":["256.5"],"然后清空自己":["256.5"],"依次执行这些任务":["256.5"],"函数和":["256.6"],"的逻辑类似":["256.6"],"主要就是执行一些后续处理的任务":["256.6"],"还有三处不同的地方":["256.6"],"的嵌套执行":["256.6"],"这种情况会导致在执行":["256.6"],"的时候":["256.6","256.8","260.2"],"activepostflushcbs":["256.6"],"可能不为空":["256.6"],"flushjobs":["256.8"],"一开始创建了":["256.8"],"会把任务添加到":["256.8"],"中并记录引用计数":["256.8"],"侦听器调试":["257.0"],"当观测的响应式对象被访问的时候":["257.1"],"当响应式对象被修改的时候":["257.2"],"当监听对象或者函数发生变化的时候":["258.2"],"也可以是响应式对象":["258.3"],"甚至是响应式对象数组":["258.3"],"所以需要标准化":["258.3"],"通过递归的方式访问":["258.4"],"job":["258.5"],"处理完":["258.5"],"第一个":["258.5"],"创建逻辑收到了第三个参数":["258.6"],"的执行":["258.8"],"当回调函数":["258.8"],"cb":["258.8"],"销毁函数":["258.10"],"作用是注册":["259.1"],"的不同":["259.2"],"监听的源不同":["259.2"],"可以监听一个或者多个响应式对象":["259.2"],"还可以监听一个":["259.2"],"oninvalidate":["259.3"],"可以利用":["259.3"],"watcheffect":["259.3"],"注册一个副作用函数":["259.3"],"程序员的一生":["260.0"],"用的最多的两个工具":["260.0"],"一个是代码编辑器":["260.0"],"editor":["260.0"],"另外一个就是命令行终端工具":["260.0"],"terminal":["260.0"],"这两个工具对于提高开发效率至关重要":["260.0"],"warp":["260.1","260.2","260.3"],"直接到官网":["260.1"],"解决的第一个痛点":["260.2"],"就是减少配置":["260.2"],"方便输入":["260.2"],"优化输出":["260.2"],"并且增加常用命令的自动提示":["260.2"],"智能提示":["260.2"],"普通的终端在你键入":["260.2"],"是这样提示的":["260.2"],"就是简单地帮你罗列下":["260.2"],"最后总结一波吧":["260.4"],"搜索":["261.0"],"目前国内有很多":["262.0"],"可以高速支持相关包文件的访问下载":["262.0"],"bootcdn":["262.0"],"推出超神":["263.0"],"首先能能访问":["263.1"],"先行注册sms":["263.2"],"打开beta":["263.3"],"openai":["263.3"],"这里需要注意下的就是":["263.4"],"注册完后":["263.5"],"日更新":["263.6"],"如果你的页面出现下面提示":["263.6"],"fun":["265.0"],"codefun":["265.0","265.5"],"大部分公司中我们前端现在的开发工作流大概是下面这几步":["265.0"],"一般会有":["265.0"],"先根据产品提供的原型图产出设计稿":["265.0"],"前端根据设计稿上的标注":["265.0"],"大小":["265.0"],"边距等":["265.0"],"进行编写代码来开发":["265.0"],"开发完后需要给":["265.0"],"走查来确认是不是":["265.0"],"他":["265.0"],"她":["265.0"],"想要的效果":["265.0"],"如果发现有问题之后又继续重复上面的工作":["265.0"],"修改样式":["265.0"],"走查":["265.0"],"多框架支持":["265.1"],"我们平时在写一个列表组件的时候都喜欢使用":["265.2"],"在我们平时":["265.3"],"coding":["265.3"],"的过程中都不会把数据写死":["265.3"],"有很多同学反馈在之前做小程序的情况下需要将代码编写完整并跑起来的情况下":["265.4"],"生成的代码中是会让人看起来比较舒适的":["265.5"],"变量名":["265.5"],"可读性":["265.5"],"会比较强":["265.5"],"布局一般不会固定死宽高":["265.5"],"100px":["270.0"],"页面引导":["272.0"],"iterm2":["275.1"],"使用oh":["275.2"],"zsh":["275.2"],"打扮终端":["275.2"],"安装oh":["275.2"],"安装方式":["275.2"],"fssl":["275.2"],"raw":["275.2"],"githubusercontent":["275.2"],"robbyrussell":["275.2"],"oh":["275.2"],"tools":["275.2"],"wget":["275.2"],"安装时候出现异常":["275.2"],"failed":["275.2"],"connect":["275.2"],"port":["275.2"],"refused":["275.2"],"使用www":["275.2"],"ipaddress":["275.2"],"查出raw":["275.2"],"hosts":["275.2"],"输入如下命令":["275.2"],"sudo":["275.2"],"vim":["275.2"],"在hosts文件中添加":["275.2"],"githubhomebrew":["275.2"],"查到的ip地址":["275.2"],"继续安装":["275.2"],"安装成功效果图":["275.2"],"作为一名程序员":["276.0"],"经常会有写技术文档的需求":["276.0"],"markdown由于语法简洁":["276.0"],"使用方便深受广大程序员们的喜爱":["276.0"],"谁电脑上不安装个markdown工具呢":["276.0"],"之前一直使用typora":["276.0"],"很喜欢它所见即所得的实时预览功能":["276.0"],"不过现在新版收费了":["276.0"],"最近发现了一款写作体验媲美typora的开源神器":["276.0"],"支持多种主题非常炫酷":["276.0"],"推荐给大家":["276.0"],"marktext简介":["276.0"],"鼠标点击弹出爱心":["279.1"],"效果图":["279.1","279.2","279.4","279.5","279.7","279.8","279.9","279.10"],"鼠标点击弹出文字":["279.2"],"鼠标小星星拖尾跟随":["279.4"],"鼠标粒子随心拖尾跟随":["279.5"],"鼠标笑脸跟随":["279.6"],"仙女棒":["279.6"],"泡泡":["279.6"],"雪花":["279.6"],"樱花特效":["279.7"],"蜘蛛网特效":["279.8"],"getattribute":["279.8"],"getelementsbytagname":["279.8"],"zindex":["279.8"],"看板娘":["279.9"],"左下角的小人":["279.9"],"烟花":["279.10"],"推荐":["281.1"],"animate":["281.2"],"也是目前最通用的动画库":["281.2"],"daneden":["281.2"],"anime":["281.2"],"iscroll":["281.3"],"平滑滚动插件":["281.3"],"cubiq":["281.3"],"swiper":["281.4"],"常用于移动端网站的内容触摸滑动":["281.4"],"fullpage":["281.5"],"页面评论功能":["282.0"],"section":["282.2"],"后置装饰器":["283.1"],"按照aop原则为功能动态注入一个后置函数":["283.1"],"默认同步":["283.1","283.2"],"afterfn":["283.1"],"issync":["283.1"],"前置装饰器":["283.2"],"按照aop原则为功能动态注入一个前置函数":["283.2"],"beforefn":["283.2"],"chain":["283.3"],"usedebounce":["283.4"],"延时":["283.5"],"锁机制":["283.6"],"解决多次连续触发接口问题":["283.6"],"防双击":["283.6"],"需要原函数返回一个promise以达到promise决议后将locking重置为false":["283.6"],"而如果没有返回值":["283.6"],"locking将会被立即重置":["283.6"],"在一些不方便返回promise或者请求结束还要进行其它动作之后才能重置locking的地方":["283.6"],"中间件":["283.7"],"middlewares":["283.7"],"注册中间件":["283.7"],"让一个事件":["283.8"],"判断是否为promise":["283.10"],"参考vue":["283.10"],"next源码的shared模块":["283.10"],"状态模式":["283.11"],"usethrottle":["283.12"],"传入函数":["283.12"],"表示时间窗口的间隔":["283.12"],"如果想忽略开始边界上的调用":["283.12"],"leading":["283.12"],"imei":["284.2"],"或ip":["284.3"],"宽松匹配":["284.6","284.8","284.9","284.52"],"15位":["284.6","284.46"],"不包含":["284.10"],"隐藏文件":["284.11"],"a股":["284.16"],"小于等于150":["284.17"],"支持小数位出现5":["284.17"],"32位":["284.19"],"uuid":["284.20"],"链接地址":["284.22","284.23"],"24小时制时间":["284.24"],"hh":["284.24","284.25","284.41"],"12小时制时间":["284.25"],"货币金额":["284.27","284.28"],"只支持正数":["284.28"],"10到30位":["284.29"],"新能源":["284.32","284.34"],"京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领":["284.32"],"非新能源":["284.33","284.34"],"phone":["284.35","284.36","284.43","286.13"],"中国":["284.35","284.65"],"宽松":["284.38"],"严谨":["284.39"],"支持闰年判断":["284.39"],"浙江":["284.40"],"上海":["284.40"],"北京":["284.40"],"yyyymmdd":["284.41"],"mm":["284.41"],"ss":["284.41"],"邮箱":["284.42"],"tel":["284.43","286.13"],"1代":["284.44"],"15位数字":["284.44"],"2代":["284.45","284.46"],"18位数字":["284.45","284.46"],"最后一位是校验位":["284.45"],"可能为数字或字符x":["284.45"],"支持1":["284.46"],"包含香港":["284.47"],"澳门":["284.47"],"字母开头":["284.48"],"汉字":["284.49"],"u3400":["284.49","284.66"],"u4db5":["284.49","284.66"],"u4e00":["284.49","284.53","284.66"],"u9fea":["284.49","284.66"],"u9fa5":["284.53"],"u3002":["284.53"],"最少6位":["284.59"],"包括至少1个大写字母":["284.59"],"4到16位":["284.60"],"v4":["284.61"],"v6":["284.62"],"9a":["284.62"],"fa":["284.62"],"16进制颜色":["284.63"],"6至20位":["284.64"],"ufa0e":["284.66"],"并且同时含有数字和英文字母":["284.71"],"小写字母":["284.75"],"特殊符号":["284.75"],"不包含0":["284.77","284.78"],"支持中文邮箱":["284.82"],"非网址":["284.83"],"银行卡号码校验":["284.84"],"luhn算法":["284.84"],"数组排序":["285.2"],"从小到大":["285.2"],"数组的对象完全匹配后去重":["285.5"],"uniqobject":["285.5"],"布尔全等判断":["285.6"],"检查数组各项相等":["285.7"],"其它类型转数组":["285.8"],"去除数组中的无效":["285.9"],"无用值":["285.9"],"递归扁平化数组":["285.10"],"两数组的交集":["285.11"],"两数组都符合条件的交集":["285.12"],"intersectionby":["285.12"],"洗牌":["285.13"],"根据parent":["285.14"],"id生成树结构":["285.14"],"阿里一面真题":["285.14"],"checkfile":["286.1"],"tags":["286.2"],"checkpwd":["286.6"],"intersect":["286.7"],"injectscript":["286.9"],"scrolltotop":["286.10"],"elementisvisibleinviewport":["286.11"],"partiallyvisible":["286.11"],"shuffle":["286.12"],"checkstr":["286.13"],"手机号码":["286.13"],"座机":["286.13"],"先检测是不是数组和object":["286.14"],"去重":["286.15"],"getuuid":["286.19"],"rgb":["286.27"],"转换为十六进制":["286.27"],"出生日期和年龄":["286.28"],"reg":["286.28"],"递归查找":["286.30"],"获取children":["286.30"],"getchildren":["286.30"],"地址引用":["286.31"],"arraytotree":["286.31"],"pid":["286.31"],"实现数字滚动的效果的类":["286.33"],"digitscroll":["286.33"],"获取容器的dom":["286.33"],"没有则抛出错误":["286.33"],"queryselector":["286.33"],"时间分片主要解决":["286.37"],"初次加载":["286.37"],"一次性渲染大量数据造成的卡顿现象":["286.37"],"浏览器执":["286.37"],"速度要比渲染":["286.37"],"速度快的多":["286.37"],"并没有本质减少浏览器的工作量":["286.37"],"而是把一次性任务分割开来":["286.37"],"给用户一种流畅的体验效果":["286.37"],"就像造一个房子":["286.37"],"如果一口气完成":["286.37"],"那么会把人累死":["286.37"],"所以可以设置任务":["286.37"],"每次完成任务一部分":["286.37"],"这样就能有效合理地解决问题":["286.37"],"获取随机颜色":["286.37"],"getcolor":["286.37"],"floor":["286.37"],"虚拟列表是一种长列表的解决方案":["286.38"],"现在滑动加载是":["286.38"],"端和":["286.38"],"端一种常见的数据请求加载场景":["286.38"],"这种数据交互有一个问题就是":["286.38"],"如果没经过处理":["286.38"],"加载完成后数据展示的元素":["286.38"],"都显示在页面上":["286.38"],"如果伴随着数据量越来越大":["286.38"],"会使页面中的":["286.38"],"元素越来越多":["286.38"],"即便是像":["286.38"],"可以良好运用":["286.38"],"来复用老节点":["286.38"],"但也不能保证大量的":["286.38"],"带来的性能开销":["286.38"],"所以虚拟列表的出现":["286.38"],"就是解决大量":["286.38"],"带来的性能问题":["286.38"],"virtuallist":["286.38"],"跨浏览器且纯javascript检测document是否加载完成的方法是使用readystate":["286.39"],"xsl":["286.40"],"断点续传":["286.41"],"createfilechunks":["286.42"],"方法接收两个参数":["286.42"],"要进行切片的文件对象":["286.42"],"切片大小":["286.42"],"这里设置默认值为":["286.42"],"formdata":["286.43"],"上传的时候":["286.43"],"对象组装要上传的切片数据":["286.43"],"遍历上面的":["286.44"],"chunkslist":["286.44"],"当所有切片都已经上传成功后":["286.45"],"告诉后端一声":["286.45"],"大文件上传":["286.46"],"循环播放使用":["286.49"],"alist":["286.49"],"looper":["286.49"],"实现上传":["286.50"],"showopenfilepicker":["286.51"],"代表选中文件":["286.51"],"clickfunc":["286.51","286.53"],"excludeacceptalloption上面代码中":["286.52"],"showsavefilepicker":["286.53"],"保存文件":["286.53"],"showdirectorypicker":["286.54"],"代表的是":["286.54"],"选中":["286.54"],"h4":["286.55"],"h6":["286.55"],"blockquote":["286.55"],"abbr":["286.55"],"acronym":["286.55"],"address":["286.55"],"big":["286.55"],"cite":["286.55"],"del":["286.55"],"dfn":["286.55"],"ins":["286.55"],"kbd":["286.55"],"samp":["286.55"],"small":["286.55"],"strike":["286.55"],"平滑滚动至顶部":["286.56"],"滚动到指定元素区域":["286.57"],"检测移动":["286.58"],"pc设备":["286.58"],"返回当前的滚动位置":["286.59"],"默认参数为window":["286.59"],"pagexoffset":["286.59"],"pageyoffset":["286.59"],"转义html":["286.60"],"当然是用来防xss攻击啦":["286.60"],"检查是否为浏览器环境":["286.61"],"检查当前标签页是否活动":["286.62"],"hexadecimal":["286.63"],"跳转":["286.64"],"隐藏所有的指定标签":["286.65"],"校验指定元素的类名":["286.66"],"返回两点间的距离":["286.67"],"检查页面底部是否可见":["286.68"],"blacklist":["286.69"],"保证同一时间只有一个请求":["286.70"],"获取获取字符串的宽度代码":["286.71"],"gettextwidth":["286.71"],"textstr":["286.71"],"计算商品sku集合":["286.72"],"cartesian":["286.72"],"黑色":["286.72"],"白色":["286.72"],"金色":["286.72"],"storage":["286.72"],"daydiff":["287.1"],"returns":["287.3"],"dateobj":["287.3"],"endtime":["287.3"],"getlast3month":["287.3"],"年月日日期前添加0":["287.4"],"分":["287.6"],"秒":["287.6"],"countdownformat":["287.6"],"distance":["287.6"],"天":["287.6"],"摄氏":["287.8"],"将华氏温度转换为摄氏温度":["287.8"],"continous":["288.1"],"reducer":["288.1"],"batch":["288.2"],"intercept":["288.3"],"createoverloaded":["288.4"],"fnlist":["288.4"],"curfn":["288.4"],"addmethod":["288.4"],"fncache":["288.5"],"生成指定范围的随机小数":["291.3"],"四舍五入到指定位数":["291.4"],"简单的货币单位转换":["291.5"],"curr":["291.5"],"numberunitformat":["291.6"],"最多缓存接口数":["294.1"],"首字母大写":["295.1","295.5"],"首字母小写":["295.1","295.7"],"大小写转换":["295.1"],"全部大写":["295.1"],"全部小写":["295.1"],"qs":["295.2"],"返回字符串的字节长度":["295.4"],"每个单词首字母大写":["295.6"],"连接命名":["295.10"],"地址下载":["296.2"],"download":["296.2"],"ischrome":["296.2"],"获取参数并转为对象":["296.3"],"返回当前链接url":["296.4"]},{"0":["10.4","52.8","52.14","52.16","57.4","65.26","90.0","99.6","103.11","103.17","104.0","106.31","106.34","113.7","114.30","126.4","127.42","138.29","145.5","148.2","148.3","148.5","149.2","150.2","152.8","152.17","153.11","156.3","156.17","158.3","164.3","168.26","169.4","170.5","170.12","173.2","173.99","174.8","174.11","174.28","175.5","175.22","176.4","176.18","177.11","179.56","179.61","195.7","200.12","208.4","209.3","214.0","216.2","217.7","218.4","218.5","219.6","221.1","226.1","232.4","240.1","256.5","279.8","284.5","284.42","284.61","284.79","285.5","286.6","286.28","286.37","286.38","286.49"],"1":["10.4","15.0","16.0","19.8","22.8","22.24","23.3","23.16","23.42","23.61","23.69","23.81","27.1","29.1","37.3","40.5","41.1","43.10","44.6","46.4","52.14","55.1","55.4","55.5","57.2","58.4","61.2","64.17","65.35","65.36","67.8","69.5","71.21","71.23","81.7","87.3","91.0","95.16","95.30","99.17","99.22","100.4","100.5","102.0","102.1","106.20","106.28","106.30","106.40","107.2","119.10","126.4","127.45","129.5","131.7","133.5","136.8","138.29","143.4","150.2","152.3","152.8","154.2","154.8","168.10","168.26","170.0","170.1","173.5","173.8","173.21","173.23","173.43","173.54","173.61","173.74","173.98","173.99","174.16","174.24","174.25","174.40","174.51","174.54","174.56","174.59","174.64","175.7","177.11","178.4","178.7","179.2","179.61","179.63","180.0","195.2","195.5","200.6","200.7","204.2","215.2","216.2","221.1","236.1","241.1","241.6","241.10","256.4","256.8","275.2","284.38","284.42","284.44","284.45","284.46","284.54","284.70","284.73","284.80","287.3","296.2"],"2":["7.9","7.10","7.13","10.6","22.4","22.24","23.18","23.23","23.31","23.43","23.47","23.49","23.58","23.62","23.90","30.1","36.5","38.5","41.1","43.3","43.11","43.14","46.4","52.2","52.5","52.8","61.0","61.8","61.18","64.2","64.3","64.4","64.11","64.12","65.21","65.26","65.36","68.10","81.1","81.4","87.25","95.16","97.26","99.6","100.5","100.7","100.8","101.3","102.0","106.16","106.39","106.43","109.6","113.2","113.5","127.9","127.23","127.45","129.5","134.3","137.6","151.4","151.6","152.8","154.10","154.12","157.2","162.2","166.1","168.11","169.4","173.6","173.24","173.39","173.43","173.61","173.68","173.87","174.23","174.25","174.29","174.40","174.64","175.4","175.7","178.6","178.7","179.64","180.0","195.6","195.7","200.5","204.0","205.13","214.2","222.9","246.0","284.39","284.61","285.2","286.13","286.28"],"3":["7.11","7.13","7.14","10.6","22.5","22.10","22.24","23.5","23.19","23.32","23.53","23.74","23.76","23.83","23.90","38.3","38.4","41.1","43.14","45.5","52.8","61.8","64.12","65.36","69.7","69.10","72.5","73.0","96.14","97.0","102.4","109.6","113.4","122.0","125.6","127.45","133.2","138.40","140.2","143.6","151.8","152.6","154.3","154.11","154.12","158.1","162.2","164.1","166.1","166.10","168.11","169.4","170.13","173.24","173.38","173.39","173.43","173.58","173.61","174.43","174.59","175.4","175.5","175.10","178.6","178.7","180.0","195.6","205.13","284.62","285.2","287.4"],"4":["2.3","10.6","22.6","22.18","22.19","23.7","23.35","23.86","38.3","38.4","64.4","89.11","106.19","106.25","106.31","109.6","113.6","114.30","115.0","127.1","127.39","127.45","145.5","152.15","154.3","154.12","172.0","173.27","174.12","174.29","175.4","175.5","175.6","175.10","175.16","205.13","222.4","284.38","284.41","284.61"],"5":["2.3","7.11","10.6","23.36","23.57","23.70","37.0","38.4","101.5","104.0","113.6","113.7","127.16","152.7","154.3","172.0","173.6","174.7","174.37","174.40","174.63","175.6","175.10","195.4","222.4","279.8","284.17","286.72"],"6":["2.3","10.6","106.33","113.6","127.16","171.0","172.0","173.25","175.10","286.72"],"7":["10.6","23.38","52.2","113.6","127.16","127.24","171.0","173.38","173.69","173.81","181.0","218.5","284.65","286.72"],"8":["10.6","22.19","23.46","113.6","129.2","156.14","160.0","168.3","168.7","174.3","175.12","181.0","218.5","286.19","286.37","286.47"],"9":["19.7","61.11","61.16","113.6","129.2","175.9","181.0","284.42","284.44","284.45","284.46","284.69","284.80"],"10":["7.12","96.11","108.2","113.6","115.0","129.2","181.0","195.8","286.28"],"11":["52.2","152.3","181.0","206.3","286.28"],"12":["22.18","156.24","174.51","175.16","181.0","206.3","284.46","286.28"],"13":["68.10","181.0","206.3","284.46"],"14":["72.5","206.3","286.71"],"15":["152.2","206.3","286.13"],"16":["21.3","61.11","68.10","89.13","106.30","115.0","152.6","206.3","286.19"],"17":["175.22","206.3","286.13"],"18":["112.4","115.0","286.13"],"20":["104.0","156.14","169.4"],"22":["22.18","68.3"],"23":["115.0"],"24":["156.24"],"25":["284.61","284.62"],"26":["276.0"],"29":["115.0"],"30":["1.10","284.46","286.33","286.40","287.4"],"31":["143.7","156.24"],"32":["89.13","127.16","143.8"],"33":["143.9"],"34":["123.1","143.10"],"40":["129.2","152.2","260.0"],"41":["1.9"],"42":["22.19","127.36","127.43"],"44":["123.1"],"50":["129.2","170.5","170.12"],"53":["127.23"],"64":["89.13"],"80":["67.3","68.3","68.11","114.11","114.29","138.26"],"81":["126.5"],"90":["104.0"],"91":["204.0"],"99":["2.2","279.8"],"100":["7.12","104.0","106.28","115.0","152.3","256.8"],"103":["115.0"],"120":["97.26","106.34"],"127":["126.4","138.29"],"128":["10.6"],"172":["123.1"],"180":["169.4"],"192":["23.50","284.10"],"200":["29.3","104.0","175.12","175.13","179.45","217.7"],"201":["175.12","179.45"],"202":["115.0","175.12","179.45"],"204":["175.12"],"205":["175.12"],"206":["175.12"],"222":["68.3","168.12"],"223":["23.50"],"224":["23.50","284.10"],"239":["23.50"],"240":["284.10"],"248":["284.10"],"250":["123.1"],"251":["195.8"],"252":["284.10"],"254":["284.10"],"255":["10.4","152.8"],"270":["123.1"],"290":["123.1"],"300":["29.4"],"301":["175.12"],"302":["175.12"],"303":["175.12"],"304":["152.17","175.12","175.13"],"307":["175.12"],"333":["123.1","168.12"],"350":["123.1"],"356":["284.65"],"360":["106.34","262.0"],"379":["123.1"],"400":["123.1","175.12"],"401":["25.7","29.5","175.12"],"402":["174.12"],"403":["175.12"],"404":["175.12"],"408":["175.12"],"443":["68.3"],"500":["29.6"],"1000":["22.24","97.13"],"1011":["22.21"],"1080":["61.5","61.6","61.7","61.9","101.5"],"1920":["61.5","61.7","61.9","101.5"],"2018":["1.9"],"2019":["127.42"],"2020":["152.7"],"2022":["141.3","156.24","287.4"],"2028":["127.41"],"2029":["127.41"],"3000":["114.15","126.4"],"4000":["126.4"],"4096":["70.0"],"5000":["159.2","159.5"],"5500":["126.4"],"8080":["126.5","136.7","138.29"],"8888":["114.30"],"10000":["106.13","291.6"],"10007":["89.13"],"10008":["89.13"],"19302":["103.7"],"77778":["101.5"],"88888":["170.15"],"155339":["152.21"],"155402":["152.23"],"160622":["152.24"],"19201080":["61.3"],"86400000":["287.6"],"1825097218":["103.5"],"84e1eb2":["0.0"],"浏览器":["0.0"],"渲染原理":["0.0"],"042387c":["0.0"],"面试题":["0.0","0.1","40.5"],"8169bd8":["0.0"],"场景题":["0.0"],"3b6ca8a":["0.0"],"插件系统":["0.0"],"3bd78c4":["0.0"],"起步":["0.1"],"98350ac":["0.1"],"webrtc":["0.1"],"3bdce5e":["0.1"],"工作工具":["0.1"],"98ec3e4":["0.1"],"视频压缩工具":["0.1"],"a2b60b3":["0.1"],"新增命令行工具和md工具":["0.1"],"86a4efc":["0.1"],"code":["0.1","21.3","60.0","93.4","97.21","97.25","97.34","106.41","107.1","107.2","113.5","162.3","228.2","286.63"],"fun":["0.1","173.1","286.48"],"a84483e":["0.1"],"30到vue面试题合集":["0.1"],"f3dd2a8":["0.1"],"37道vue面试图补充":["0.1"],"76f1672":["0.1"],"补充了场景题":["0.1"],"83bfa24":["0.1"],"补充面试题合集":["0.1"],"b1d8eae":["0.1"],"1fbf59c":["0.1"],"面试题集合":["0.1"],"5a7d856":["0.1"],"面试题完善":["0.1"],"993775f":["0.1"],"面试题之路由的模式":["0.1"],"92fff6a":["0.1"],"ast":["0.1","21.6","64.12","64.16","210.1","227.1"],"164e104":["0.1"],"新增场景题":["0.1"],"998a5c4":["0.1"],"新增面试题":["0.1"],"工具":["0.1","67.2"],"23068eb":["0.1"],"新增设计模式":["0.1"],"55f75e7":["0.1"],"性能优化":["0.1","195.0"],"df358f8":["0.1"],"对于一个数据请求来说":["1.0"],"可以分为发起网络请求":["1.0"],"service":["1.1","98.12","133.9","144.1"],"worker":["1.1","21.8","67.3","133.9"],"自由控制哪些文件缓存":["1.1"],"缓存时效是持续性的":["1.1"],"的缓存与浏览器其他内建的缓存机制不同":["1.2"],"它可以让我们自由控制缓存哪些文件":["1.2"],"如何匹配缓存":["1.2"],"如何读取缓存":["1.2"],"也就是内存中的缓存":["1.3"],"读取内存中的数据肯定比磁盘快":["1.3"],"但是内存缓存虽然读取高效":["1.3"],"可是缓存持续性很短":["1.3"],"会随着进程的释放而释放":["1.3"],"也就是存储在硬盘中的缓存":["1.4"],"读取速度慢点":["1.4"],"但是什么都能存储到磁盘中":["1.4"],"它才会被使用":["1.5"],"并且缓存时间也很短暂":["1.5"],"只在会话":["1.5"],"session":["1.5","138.39"],"中存在":["1.5"],"一旦会话结束就被释放":["1.5"],"如果所有缓存都没有命中的话":["1.6"],"强缓存和协商缓存":["1.7"],"http":["1.8","19.6","85.5","95.25","98.7","99.14","120.2","120.3","126.5","133.7","134.3","168.3","168.7","175.9","175.12","177.11","179.47","286.47"],"header":["1.8","1.22","95.16","286.55"],"oct":["1.9"],"08":["1.9","115.0"],"max":["1.10","70.0","95.16","291.1"],"age":["1.10","21.10","27.9","115.0","127.4","127.7","178.4","183.2"],"就需要发起请求验证资源是否有更新":["1.11"],"协商缓存可以通过设置两种":["1.11"],"表示本地文件最后修改日期":["1.12"],"类似于文件指纹":["1.13"],"和":["1.14","19.7","57.3","61.0","64.14","65.1","65.11","78.0","79.0","81.1","83.4","87.15","87.16","87.17","87.28","87.41","98.12","99.12","99.14","106.5","106.16","106.46","106.51","113.2","122.12","123.0","130.6","136.1","142.29","147.1","151.9","154.1","154.3","156.19","166.7","173.11","173.89","173.93","175.9","177.0","177.6","178.2","178.3","178.6","179.15","179.40","184.16","193.7","195.7","204.6","205.3","205.10","208.7","209.7","209.13","219.1","252.3","252.4"],"静态文件的":["1.15"],"不会更新":["1.16"],"当文件更改时":["1.16"],"但是它的内容并不改变":["1.17"],"仅仅改变的是修改时间":["1.17"],"这个时候我们不希望客户端认为这个文件被修改了":["1.17"],"是否意味着文件内容一定已经更改":["1.18"],"不一定":["1.18"],"由服务器中":["1.18"],"的生成算法决定":["1.18"],"接下来我们来通过几个场景学习下如何使用这些理论":["1.19"],"cache":["1.20","1.22","64.17","65.36","68.13","159.13","216.2","220.2","221.1","229.0"],"control":["1.20","1.22","27.5","159.13","166.8"],"外的代码文件":["1.21"],"因为":["1.21","6.5","44.3","98.7","120.1"],"location":["1.22","23.93","67.3","126.5","138.22","151.12","152.8"],"add":["1.22","10.9","62.20","64.3","64.11","69.10","73.0","81.2","81.5","95.19","113.7","117.1","119.3","145.6","235.4"],"地址到浏览器完成渲染的整个过程":["2.0"],"最终会拼接成一个":["2.2"],"https":["2.2","10.10","25.3","26.0","26.1","26.3","50.31","73.0","88.2","94.1","96.5","138.32","151.12","152.30","175.10","241.1","241.10","261.1","272.0","274.0","281.5","283.10"],"www":["2.2","21.1","69.13","120.2","120.3","126.5","152.30","267.1","268.1","271.1","273.1","278.0","281.4"],"google":["2.2","9.1","32.1","88.2","103.7","115.0","151.1","151.2","263.1"],"com":["2.2","9.1","10.5","10.10","73.0","76.3","88.2","96.7","96.14","103.7","113.7","117.1","126.5","133.7","138.22","138.31","141.4","152.30","262.0","263.3","281.1","281.2","283.10"],"search":["2.2","57.6","57.7"],"q":["2.2","106.41"],"e7":["2.2"],"be":["2.2","107.2","204.3","214.2","219.10","220.2","222.7","252.5","255.0"],"e5":["2.2"],"ba":["2.2"],"a6":["2.2"],"oq":["2.2"],"http1":["2.3","23.91","175.9"],"网络进程获取到url":["2.3"],"先去本地缓存中查找是否有缓存文件":["2.3"],"如果有":["2.3"],"拦截请求":["2.3"],"直接200返回":["2.3"],"否则":["2.3"],"进入网络请求过程":["2.3"],"网络进程请求dns返回域名对应的ip和端口号":["2.3"],"如果之前dns数据缓存服务缓存过当前域名信息":["2.3"],"就会直接返回缓存信息":["2.3"],"发起请求获取根据域名解析出来的ip和端口号":["2.3"],"如果没有端口号":["2.3"],"http默认80":["2.3"],"https默认443":["2.3"],"如果是https请求":["2.3"],"还需要建立tls连接":["2.3"],"chrome":["2.3","7.3","21.2","148.0","151.13","154.3","296.2"],"只有一个":["3.1"],"负责浏览器界面显示":["3.1"],"与用户交互":["3.1"],"如前进":["3.1"],"后退等":["3.1"],"避免单个page":["3.2"],"crash影响整个浏览器":["3.2"],"避免第三方插件crash影响整个浏览器":["3.2"],"解析html":["3.4"],"css":["3.4","6.1","87.42","97.40","106.4","106.23","106.30","106.35","106.51","151.7","154.10","154.14","154.17","154.20","170.2","173.31","179.0","179.10","205.20"],"构建dom树和":["3.4"],"负责处理javascript脚本程序":["3.5"],"例如常常听到的谷歌浏览器的v8引擎":["3.5"],"可以理解":["3.6"],"js引擎自己都忙不过来":["3.6"],"浏览器定时计数器并不是由javascript引擎计数的":["3.7"],"因为javascript引擎是单线程的":["3.7"],"在连接后是通过浏览器新开一个线程请求":["3.8"],"如ajax":["3.8"],"在用户界面和渲染引擎之间传送指令或在客户端本地缓存中读写数据等":["4.2"],"是浏览器中各个部分之间相互通信的核心":["4.2"],"networking":["4.2"],"网络":["4.2","195.0"],"实现http":["4.2"],"ftp等传输协议":["4.2"],"完成网络调用或资源下载的模块":["4.2"],"rendering":["4.2","206.1","206.8","209.13","216.2","252.6"],"渲染引擎":["4.3"],"html":["4.4","7.0","67.3","97.39","106.7","106.21","114.12","121.1","122.2","122.4","122.8","122.10","122.11","122.19","122.23","122.24","123.0","126.4","133.7","134.3","147.5","150.10","152.20","154.4","154.5","154.10","154.11","154.17","154.20","162.0","175.22","179.18","205.13","227.1","279.1","279.2","279.4","279.6","279.9","279.10"],"xml":["4.4","175.4"],"最开始渲染引擎和js引擎并没有区分的很明确":["4.5"],"tt":["4.6","106.41","286.55"],"the":["4.6","10.14","67.8","148.0","148.3","148.4","148.5","206.2","206.5","206.8","206.16","207.16","214.2","214.3","218.8","220.2","226.1","228.2","252.5","256.4"],"world":["4.6","173.94"],"种":["5.0","106.16","106.19","173.25","173.27","173.69"],"javascript":["5.2","11.7","21.7","22.24","56.5","58.3","85.1","85.6","97.1","97.30","130.10","133.1","133.2","133.3","133.5","138.11","138.26","138.28","145.3","146.4","173.20","173.27","173.28","173.31","173.42","173.55","173.78","176.13","177.3","179.11","184.1","184.9","184.27","185.4","185.7","186.3","205.7","218.11","284.2","284.3","284.4","284.8","284.9","284.19","284.22","284.23","284.28","284.34","284.35","284.41","284.44","284.45","284.47","284.52","284.63","284.71","284.75","284.77","284.78","284.81","284.83","286.20","286.21","286.42","286.43","286.45","286.54","286.58","286.59","286.62","286.63","286.64","290.1","296.4"],"const":["5.2","10.12","22.24","25.3","52.6","52.18","53.2","53.3","53.5","53.6","53.8","53.9","55.1","55.2","56.5","61.13","62.14","62.15","62.17","64.13","64.15","64.21","64.22","76.3","88.2","89.6","89.13","95.23","95.45","96.3","98.12","98.13","99.13","100.8","103.12","103.13","110.3","111.3","111.4","112.3","115.0","126.4","127.18","127.24","130.9","133.1","133.3","133.5","133.6","140.1","140.2","141.2","141.3","141.6","153.5","153.6","153.7","153.12","154.5","154.8","154.10","154.17","154.20","156.1","156.6","156.7","156.18","156.23","156.24","162.1","166.3","166.6","166.8","166.9","167.4","173.99","174.60","175.8","176.13","178.7","179.29","191.2","205.12","206.2","206.4","206.9","206.14","206.15","208.4","208.16","208.17","210.2","212.1","214.0","214.3","216.6","218.4","219.10","220.2","220.3","221.1","221.3","221.4","222.4","222.5","228.2","228.3","232.2","232.4","241.3","241.6","241.8","245.3","251.2","283.5","283.6","283.8","285.1","285.2","285.3","285.8","285.9","286.4","286.5","286.8","286.23","286.24","286.26","286.27","286.31","286.33","286.38","286.42","286.43","286.46","286.48","286.54","286.57","286.58","286.61","286.64","286.65","286.66","286.67","286.68","286.71","287.5","287.8","288.4","289.1","290.1","291.3","291.4","292.1","292.2","293.1","293.2","295.1","295.2","295.4","295.5","295.6","295.7","295.10","296.4"],"new":["5.2","64.17","98.11","98.13","100.3","100.8","112.2","125.9","127.5","127.12","127.14","133.5","140.5","148.2","150.12","156.6","156.13","162.2","162.3","165.2","173.1","173.9","173.24","173.41","173.52","174.64","176.13","178.7","178.8","179.11","204.3","206.11","206.14","216.2","255.0","256.4","285.4","286.34"],"我们在做一些数据采集的时候":["5.3"],"希望知道某个元素是否是可见的":["5.3"],"object":["5.5","62.14","64.15","99.10","115.0","125.3","137.0","156.17","173.29","173.62","173.67","173.68","173.70","177.10","179.19","184.8","202.3","202.10","202.12","202.14","206.15","214.2","250.1","251.2","254.4","286.14"],"defineproperty":["5.5","173.62","179.57","254.4"],"或者":["5.5","39.1","81.5","106.34","127.10","173.82","178.8","209.9"],"proxy":["5.5","109.4","126.5","156.13","162.3","247.0","249.0"],"devtools":["5.6","10.5","10.9","10.13","11.5","17.0","148.0","151.13","216.2"],"去掉了":["5.6"],"那元素呢":["5.8"],"元素可以用":["5.8"],"resizeobserver":["5.8"],"监听大小的改变":["5.8"],"当":["5.8","110.2","223.2","256.5"],"可是怎么知道啥时候会记录":["5.9"],"数据呢":["5.9"],"用":["5.9","22.18","127.3","173.98","247.0"],"peformanceobserver":["5.9"],"用于监听记录":["5.9"],"数据的行为":["5.9"],"一旦记录了就会触发回调":["5.9"],"的":["5.10","11.7","87.39","95.37","106.26","106.51","110.2","112.4","126.3","127.54","138.39","154.18","173.37","175.22","178.3","184.27","195.4","200.4","205.4","216.5","218.11","234.2","252.3","252.4"],"api":["5.10","19.6","57.7","62.11","138.29","154.18","168.16","177.8","178.7","178.8","195.8"],"的时候":["5.10","73.0","106.27","167.2","173.98","230.2"],"addeventlistener":["5.11","99.9","99.10","99.13","103.17","133.3"],"来监听":["5.11"],"intersectionobserver":["5.12"],"监听元素可见性变化":["5.12"],"常用来做元素显示的数据采集":["5.12"],"渲染主线程":["6.1"],"解析过程中遇到":["6.1"],"css解析":["6.1","7.0"],"遇到":["6.1"],"js":["6.1","7.8","19.4","19.9","21.17","25.3","61.8","61.13","61.18","62.6","62.13","62.14","62.15","64.12","65.9","69.2","69.10","71.25","74.2","74.7","75.3","76.0","83.3","84.1","86.5","86.7","87.20","87.42","89.6","94.4","95.10","95.22","95.36","95.38","95.39","97.11","97.44","98.11","98.12","99.8","99.21","100.3","102.5","106.27","107.1","110.2","113.6","117.2","125.1","125.2","125.4","125.5","125.7","125.8","125.9","126.4","133.2","136.4","138.2","138.3","138.6","138.12","138.13","138.32","140.0","140.1","140.2","140.4","141.1","141.5","141.6","142.10","142.11","147.4","154.2","154.17","162.1","167.1","169.3","173.12","173.91","173.93","174.12","174.37","177.3","177.8","177.9","177.10","178.8","179.25","194.1","195.0","203.2","204.4","205.4","205.20","209.8","209.13","220.8","234.0","243.1","243.2","281.2"],"执行":["6.1","41.2","71.25","81.4","179.54","218.5","222.10","223.2","241.7","246.2"],"为了提高解析效率":["6.1"],"浏览器在开始解析前":["6.1"],"会启动一个预解析的线程":["6.1"],"率先下载":["6.1"],"中的外部":["6.1"],"文件和":["6.1","173.31"],"外部的":["6.1"],"文件":["6.1","68.12","71.8","72.1","80.2","80.4","81.6","87.0","87.42","97.23","97.36","97.38","97.52","113.6","140.0","173.31","179.54","186.3"],"如果主线程解析到":["6.1"],"link":["6.1","96.2","106.11","143.1","207.16","279.9","285.14"],"位置":["6.1"],"此时外部的":["6.1"],"文件还没有下载解析好":["6.1"],"主线程不会等待":["6.1"],"的本质就是重新计算":["6.3"],"layout":["6.3","179.2"],"树":["6.3","7.14","218.5","230.2"],"重绘":["6.4","179.38"],"既不会影响布局也不影响绘制指令":["6.5"],"最底层的是":["7.0"],"最核心的部分":["7.0"],"blink":["7.0","7.2","7.3","7.4","7.7"],"负责js的解析执行":["7.0"],"和多个":["7.1"],"renderer":["7.1","7.10","95.28"],"通常每个":["7.1"],"进程对应一个页面":["7.1"],"在特殊架构":["7.1"],"android":["7.1","286.25"],"webview":["7.1","177.1","195.4"],"输出":["7.2","22.26","174.40"],"main":["7.2","7.4","67.3","87.16","98.13","102.1","112.2","154.4","154.12","154.16","169.3","171.0","195.8"],"frame":["7.2","7.5","7.10","152.18"],"给":["7.2","106.27"],"layer":["7.2","7.6","7.10","172.0"],"或者可以简单理解为某个时间点对整个网页的一个矢量图快照":["7.3"],"可以局部更新":["7.3"],"当前版本的":["7.3"],"图层化的决策仍然由":["7.3"],"来负责":["7.3"],"需要决定如何根据网页的":["7.3"],"接收":["7.4"],"生成的":["7.4"],"并转换成合成器内部的图层树结构":["7.4"],"因为图层化决策仍然由":["7.4"],"display":["7.5","106.40","156.14","171.0","286.33","286.69"],"compositor":["7.5","7.6","7.11"],"将":["7.5","23.78","69.9","100.9","102.0","150.12","166.9","179.31","205.4","256.5"],"它按显示器的":["7.6"],"vsync":["7.6","7.10","206.16"],"垂直同步":["7.6"],"周期向":["7.6"],"发出输出下一帧的请求":["7.6"],"而":["7.6","24.4","86.2","106.3","112.4","127.3","156.2","172.0","173.28","175.0","175.9","265.3"],"合成器本身触发并运行的":["7.7"],"比如最常见的网页惯性滚动":["7.7"],"包括整个网页或者某个页内可滚动元素的滚动":["7.7"],"由":["7.8","176.17"],"驱动的动画":["7.8"],"比较典型的就是":["7.8"],"canvas":["7.8","104.0","152.18","286.55"],"webgl":["7.8"],"游戏":["7.8"],"这种动画实际上是由页端自己定义的":["7.8"],"浏览器本身并没有对应的动画的概念":["7.8"],"也就是说浏览器本身是不知道这个动画什么时候开始":["7.8"],"是否正在运行":["7.8"],"什么时候结束":["7.8"],"这些完全是页端自己的内部逻辑":["7.8"],"合成器动画和非合成器动画在渲染流水线上有较大的差异":["7.8"],"后者更复杂":["7.8"],"流水线更长":["7.8"],"上面四种动画的分类":["7.8"],"按渲染流水线的复杂程度和理论性能排列":["7.8"],"复杂程度由低到高":["7.8"],"的光栅化机制":["7.9"],"合成器会监控是否需要安排新的光栅化任务":["7.9"],"当需要光栅化调度时":["7.9"],"合成器找到所有在当前可见区域的图层":["7.9"],"ui":["7.10","61.0","61.3","106.27","154.20","173.52","177.1","178.6"],"线程的窗口管理器接收到来自操作系统的屏幕刷新垂直同步信号":["7.10"],"开始准备输出新的一帧":["7.10"],"它首先给位于":["7.10"],"线程的":["7.10"],"发送一个":["7.10"],"begin":["7.10"],"消息":["7.10"],"接收到":["7.10"],"draw":["7.11"],"的耗时也不长":["7.11"],"一般不超过":["7.11"],"毫秒":["7.11","152.3"],"耗时主要取决于网页的图层复杂度":["7.11"],"总的来说合成器动画过程中":["7.11"],"线程的开销一般都不会构成性能瓶颈":["7.11"],"render":["7.11","102.0","115.0","127.55","181.0","195.7","205.6","206.8","206.14","209.2","216.2","219.10","230.2"],"检查网页的图层结构是否合理":["7.12"],"包括深度和数量":["7.12"],"一般来说深度在":["7.12"],"以内":["7.12"],"数量在":["7.12"],"以内是比较合理的值":["7.12"],"属性等":["7.13"],"最终改变了网页的内容":["7.13"],"网页内容被改变会导致":["7.13"],"生成新的":["7.13"],"mainframe":["7.13"],"包括了重排版":["7.13"],"更新图层树":["7.13"],"和重新记录发生变更的图层的内容":["7.13"],"displaylist":["7.13"],"等等":["7.13","109.1"],"后需要向合成器发起":["7.13"],"图层树的复杂程度和变化程度":["7.14"],"在变更很小":["7.14"],"比如只有几个元素的内容发生变化":["7.14"],"图层树不变的情况下":["7.14"],"一般耗时都是在":["7.14"],"毫秒左右":["7.14"],"如果变更很大":["7.14"],"几十甚至几百都是有可能的":["7.14"],"commit":["7.14","65.21","69.10","71.14","73.0","95.20","97.46","97.47","97.48","119.8","145.6","178.1","178.2"],"的耗时主要取决于图层树的复杂程度":["7.14"],"一般耗时都很短":["7.14"],"大概":["7.14"],"localstorage":["8.1","133.9","175.16"],"是一种网络服务器存储在计算机或移动设备上的纯文本文件":["8.2"],"用户账号密码":["8.3"],"都会消耗网络的带宽":["8.4"],"存储的数据将保存在浏览器会话中":["8.5"],"可设置失效时间":["8.7"],"4kb左右":["8.8"],"每次都会携带在http头中":["8.9"],"需要程序员自己封装":["8.10"],"这样无形中浪费了带宽":["8.11"],"所以cookie应该尽可能少的使用":["8.11"],"另外cookie还需要指定作用域":["8.11"],"可能有些浏览器并不支持":["8.12"],"这里要注意":["8.12"],"都有同源策略限制":["8.14"],"sessionstorage":["8.15"],"与存储数据的脚本所在的标签页的有效期是相同的":["8.15"],"一旦窗口或者标签页被关闭":["8.15"],"那么所有通过":["8.15"],"webstore":["9.1"],"command":["10.1","113.7","114.29"],"选择":["10.2"],"source":["10.2","64.16","97.35","99.6","107.2","175.8","241.3","241.6","241.8"],"props":["10.4","156.1","156.18","156.24","209.3","209.7","218.5","231.2","236.6","236.7","252.5"],"background":["10.4","154.20"],"top":["10.4","286.11"],"right":["10.4","91.0","131.11","170.6","179.62","180.2","286.11"],"bottom":["10.4","106.37","286.11"],"left":["10.4","91.0","131.11","169.4","170.8","170.12","174.25","179.62","286.11"],"skipcolors":["10.4"],"rgb":["10.4"],"rgba":["10.4","169.4","286.37"],"foreach":["10.4","103.15","159.9","159.13","174.33","283.7"],"call":["10.4","89.6","89.13","131.1","131.2","131.3","131.4","131.5","131.6","173.46","173.60","195.4","206.1","215.2"],"document":["10.4","10.8","10.12","16.0","24.5","61.13","99.17","102.1","102.2","103.11","104.0","154.13","169.4","207.5","286.9","286.10","286.48"],"queryselectorall":["10.4","10.8"],"bgrins":["10.5"],"snippets":["10.5","10.9","10.13"],"shows":["10.5"],"all":["10.5","75.6","214.1","214.3"],"stored":["10.5"],"boolean":["10.6","95.46","96.13","154.16","156.17","173.25","173.68","173.69","173.70","219.10","221.4"],"autosemicolon":["10.6"],"prototype":["10.6","55.3","55.4","55.5","62.14","89.6","131.1","131.2","131.3","131.4","131.5","131.6","131.11","173.9","173.41","173.98","181.0","204.2","286.14"],"trimright":["10.6"],"replace":["10.6","99.12","177.7","286.60"],"start":["10.6","62.9","62.17","156.14","161.0","195.8","241.3","241.6","241.8","241.9"],"atrule":["10.6"],"block":["10.6","137.0","232.1"],"selector":["10.6","97.35"],"ruleset":["10.6"],"property":["10.6","115.0"],"separator":["10.6"],"expression":["10.6","64.10","64.11"],"url":["10.6","23.90","26.4","27.1","65.11","67.8","99.7","99.12","117.1","127.28","133.7","173.57","175.12","179.51","195.8","204.6","286.18"],"null":["10.6","21.15","21.17","131.5","147.5","156.3","173.25","173.98","176.2","176.4","179.25","179.27","184.16","185.6","204.2","206.5","206.14","208.5","216.2","218.5","221.3","222.4","222.5","222.6","226.1","227.1","228.3","231.1","236.7","283.3","285.14","286.1","286.20","286.21","286.38","288.3"],"else":["10.6","64.18","92.0","148.3","167.4","177.10","195.4","206.14","208.5","216.3","235.4","239.3","241.1","241.10"],"continue":["10.6"],"charcodeat":["10.6"],"break":["10.6"],"substr":["10.6"],"files":["10.7","97.39","107.4"],"in":["10.7","92.0","95.42","98.13","104.0","109.6","127.30","129.4","133.5","148.0","177.10","205.20","206.1","206.8","206.14","206.16","214.2","226.1","228.2","236.6"],"current":["10.7","131.5","131.6","153.12","174.20","216.2","216.3","252.6","286.49"],"page":["10.7","10.9","10.11","89.5","98.2","195.9"],"function":["10.7","10.8","20.7","24.5","52.6","53.2","53.5","53.8","53.11","55.2","55.3","55.4","64.14","64.17","64.22","95.46","99.7","99.8","99.12","107.4","111.4","125.9","127.10","133.3","133.5","133.6","140.5","147.4","148.1","148.2","148.4","153.5","154.13","154.20","162.2","162.3","168.22","173.1","173.41","173.58","173.68","173.85","173.94","173.95","173.98","174.4","174.8","174.12","174.37","174.52","177.7","177.8","179.9","179.51","184.10","195.9","204.1","205.2","205.6","206.0","206.9","207.12","208.13","208.14","209.8","210.2","212.1","214.1","214.2","218.5","221.1","221.3","225.4","227.1","230.2","231.3","231.4","231.6","236.1","239.3","241.3","241.9","242.1","243.1","243.2","245.3","250.1","251.2","252.3","252.6","256.8","283.7","286.42","286.43","291.2"],"insertafter":["10.7"],"newelement":["10.7"],"targetelement":["10.7"],"var":["10.7","10.8","20.3","52.17","53.10","53.11","64.14","67.3","74.3","74.4","74.5","99.12","106.41","125.7","127.7","127.11","127.20","127.33","127.43","127.45","127.49","173.2","173.39","173.54","173.58","173.59","173.78","173.82","173.98","174.44","204.3","206.15","286.1","286.55"],"parent":["10.7","19.11","64.9","106.39","181.0","214.2","229.0","241.8","241.9","255.0","256.4","285.14"],"parentnode":["10.7","62.17"],"if":["10.7","53.3","53.6","53.9","55.1","55.2","64.7","64.8","64.18","65.29","89.6","92.0","97.13","97.35","97.50","99.11","99.12","103.10","103.15","107.4","111.4","112.1","131.8","131.9","131.10","132.1","132.2","132.3","132.4","133.3","133.5","133.6","138.38","148.3","156.17","158.3","162.3","164.3","167.4","173.29","174.4","174.16","174.24","174.33","175.13","176.4","177.10","179.56","179.61","195.4","195.8","206.0","206.2","206.5","206.9","206.15","208.5","209.8","214.1","216.2","216.4","219.3","219.10","220.2","221.1","221.4","222.3","222.7","228.3","229.0","236.6","236.7","241.6","243.1","251.2","283.2","283.7","286.6","286.64","288.2","288.4","288.5","295.2","295.9"],"lastchild":["10.7"],"out":["10.8","10.13","20.12","148.3","217.7"],"forms":["10.8"],"and":["10.8","111.2","127.35","137.0","206.1","206.8","214.1","252.5"],"their":["10.8","107.2","110.2","111.2"],"controls":["10.8"],"form":["10.8","90.0","98.7","114.27","122.19","148.4","286.55"],"for":["10.8","10.14","11.7","20.7","52.16","55.3","55.4","104.0","127.30","129.7","131.2","149.2","153.11","156.17","158.4","164.4","173.2","173.98","173.99","174.8","174.21","174.22","174.23","174.44","174.60","176.4","177.10","214.0","215.2","219.6","220.2","228.1","231.1","232.4","285.5","286.2","286.30","286.31"],"i":["10.8","22.25","52.16","57.4","67.10","69.10","74.2","92.0","97.24","97.31","97.43","104.0","154.11","154.18","156.17","158.4","164.4","172.0","173.2","173.52","173.98","174.8","174.22","174.23","174.60","176.4","204.3","214.0","219.6","222.9","222.11","232.4","285.5","286.55"],"jquery":["10.9","154.19","173.96"],"to":["10.9","10.14","96.2","107.2","115.0","168.19","179.42","206.1","206.2","206.8","206.9","214.1","215.2","219.3","236.6","252.5","252.6","256.4"],"any":["10.9","111.2","156.15","156.18","156.24","184.5","206.9","216.2","231.3","235.4","255.0"],"that":["10.9","107.4","148.1","206.1","206.8","214.2","214.3","215.2","216.2","241.9","256.4"],"does":["10.9"],"github":["10.10","72.4","88.2","94.9","94.10","96.14","115.0","117.1","275.2","283.10"],"loadtimes":["10.11"],"timings":["10.11"],"push":["10.11","53.3","53.6","53.9","64.7","65.35","67.1","72.5","73.0","99.11","104.0","111.4","133.6","159.2","159.9","159.13","174.33","176.4","179.33","179.56","204.2","226.1","228.3","229.0","231.7","283.7"],"label":["10.11","286.55"],"time":["10.11","48.11","103.0","149.2","168.25","206.1","206.16"],"until":["10.11"],"loaded":["10.11","217.3"],"loadeventend":["10.11","151.9"],"navigationstart":["10.11","152.9","152.12"],"ms":["10.11","168.26"],"domcontentloaded":["10.11"],"domcontentloadedeventend":["10.11","151.7"],"total":["10.11"],"response":["10.11","89.6","99.10","127.28","152.20"],"getelementsbytagname":["10.12","286.2"],"print":["10.13"],"key":["10.13","65.36","92.0","104.0","111.4","129.1","129.7","130.12","133.3","156.13","167.4","176.1","187.0","195.7","218.4","232.2","243.1","245.1","245.3","251.2","288.5","296.1"],"value":["10.13","64.4","64.7","64.8","64.10","64.17","92.0","104.0","112.4","127.15","127.55","173.99","178.4","221.4","236.2","243.1","258.4","296.1"],"pairs":["10.13"],"from":["10.13","61.8","64.19","89.6","95.22","95.42","96.3","97.10","99.8","100.2","100.3","100.6","102.1","103.6","109.7","154.20","156.19","156.20","156.21","169.3","178.7","179.42","184.17","195.8","205.2","205.6","206.1","214.2","219.3","219.10","256.4"],"querystring":["10.13"],"mit":["10.14"],"license":["10.14","81.3","87.14"],"logs":["10.14"],"your":["10.14"],"global":["10.14","21.15","116.4","166.8","173.98","195.9"],"variables":["10.14","65.21"],"console":["10.14","18.0","24.5","64.19","88.2","96.13","99.7","99.9","102.1","102.2","103.17","115.0","127.42","129.6","141.6","149.2","154.11","162.1","163.0","165.1","165.2","173.1","173.3","173.9","173.39","173.61","173.85","173.87","173.94","181.0","192.1","192.2","192.3","207.16","280.1","286.3"],"useful":["10.14"],"finding":["10.14"],"leaked":["10.14"],"我们可以通过它来可视化所有的":["11.1"],"你可能会在开发中遇到这么一个场景":["11.2"],"给一个":["11.2"],"通常页面都是可以滚动的":["11.3"],"那么如果想查看的元素不在当前窗口的话":["11.3"],"但是":["11.4","37.3","39.7","74.0","99.7","154.3","173.98","243.4"],"断点知道的人应该就少了":["11.4"],"如果你想查看一个":["11.4"],"找不到之前查看过的":["11.6"],"元素在哪里了":["11.6"],"需要一个个去找这就有点麻烦了":["11.6"],"let":["11.7","55.3","57.4","64.13","64.15","64.16","95.45","95.46","96.12","100.6","103.12","103.14","104.0","109.7","125.1","125.4","125.5","127.28","129.6","131.1","131.7","131.11","140.5","141.4","153.11","156.17","158.3","158.4","164.3","164.4","165.2","166.9","173.38","173.86","173.87","173.94","174.8","174.16","174.21","174.22","174.23","174.60","174.64","176.4","179.27","179.29","179.56","182.2","195.8","214.0","214.1","214.3","215.2","216.2","216.3","217.7","219.6","221.3","232.4","236.4","283.4","283.6","283.12","284.84","285.13","286.6","286.7","286.12","286.15","286.19","286.70","287.3"],"index":["11.7","67.3","81.3","81.6","87.16","99.19","104.0","126.4","134.3","154.14","156.7","156.18","156.24","158.3","164.3","173.87","173.99","174.22","177.7","179.56","209.3","283.10"],"按钮":["12.0","89.1","89.4","100.4","281.2"],"来移动元素":["12.0"],"元素":["13.0","162.0"],"控制台":["14.1"],"通过":["15.0","61.10","64.16","81.6","95.42","114.5","122.1","140.0","152.8","154.3","156.6","175.18","177.1","190.4","195.3","195.4","205.4","230.2","247.1","252.6"],"createtreewalker":["16.0"],"body":["16.0","64.10","106.14","147.5","150.2","154.20","166.3","173.57","279.8","286.69"],"while":["16.0","20.7","64.7","64.18","148.3","148.5","239.3","285.13"],"中的查找":["17.0"],"中的前4个主要的面板":["17.0"],"每一个都支持":["17.0"],"中打印了一堆数据":["18.0"],"例如你在":["18.0"],"app":["18.0","19.9","95.25","96.3","169.3","177.2","195.4","207.5","219.3"],"事件的触发过程是怎么样的":["19.1"],"传播到事件触发处时触发注册的事件":["19.2"],"从事件触发处往":["19.2"],"传播":["19.2"],"该参数默认值为":["19.3"],"false":["19.3","95.45","95.46","96.6","97.13","125.0","156.17","162.3","166.9","179.33","204.2","205.2","206.14","209.12","214.2","218.4","221.1","221.3","222.3","227.1","232.2","236.6","251.2","258.8","283.2","283.6","286.11"],"决定了注册的事件是捕获事件还是冒泡事件":["19.3"],"对于对象参数来说":["19.3"],"可以使用以下几个属性":["19.3"],"capture":["19.3","180.2"],"布尔值":["19.3","130.7"],"ul":["19.4","122.15","286.55"],"id":["19.4","61.12","71.14","96.11","106.9","114.29","140.5","159.13","167.0","174.40","204.2","214.2","228.1","241.9","256.6"],"有同源策略":["19.5"],"也就是说":["19.5","156.12","173.37"],"如果协议":["19.5"],"域名或者端口有一个不同就是跨域":["19.5"],"ajax":["19.5","109.1"],"请求会失败":["19.5"],"那么是出于什么安全考虑才会引入这种机制呢":["19.5"],"src":["19.6","95.28","98.7","99.19","102.2","104.0","106.35","109.7","113.6","154.4","154.5","154.16","178.7","206.15","209.8","254.2","283.10","286.9"],"domain":["19.6"],"param1":["19.6","113.7"],"a":["19.6","20.3","22.24","48.8","48.10","48.14","48.16","50.15","52.16","62.6","64.23","65.30","73.0","88.2","106.10","110.1","111.1","115.0","122.8","127.17","127.24","127.33","129.5","130.3","136.7","136.8","141.4","148.0","153.11","156.6","173.9","173.41","173.68","177.9","184.17","204.3","206.8","214.1","214.2","215.2","222.11","241.1","241.9","241.10","252.5","252.6","279.8","284.20","284.26","284.31","284.32","284.33","284.34","284.55","284.56","284.57","284.58","284.63","284.67","284.68","284.72","284.74","284.75","284.82","285.11","285.12","286.7","286.34","288.1"],"param2":["19.6","113.7"],"b":["19.6","50.18","52.16","62.6","64.23","87.25","106.10","110.1","111.1","115.0","119.11","122.5","126.8","127.24","127.33","129.5","130.3","136.8","140.2","156.6","172.0","173.6","173.41","173.68","284.62","285.11","285.12","286.7","286.37","286.55","288.1"],"callback":["19.6","156.2","168.25","173.30","176.9","206.15"],"需要通过":["19.7","218.9"],"xdomainrequest":["19.7"],"会触发简单请求":["19.8"],"使用下列方法之一":["19.8"],"get":["19.8","68.1","127.17","133.4","156.13","167.4","175.12","178.7","179.51","221.1","235.4","248.2","251.1","251.2","275.2","294.1"],"来设置":["19.9"],"cors":["19.9","175.9"],"的话":["19.9"],"可能会遇到过这么一个坑":["19.9"],"以下以":["19.9"],"express":["19.9"],"框架举例":["19.9"],"use":["19.9","61.5","64.19","95.25","96.3","97.13","107.4","127.1","173.85","178.7","235.4"],"req":["19.9","138.40","159.2","159.5"],"二级域名相同":["19.10"],"的情况下":["19.10","179.17"],"比如":["19.10","23.87","25.9","39.4","39.6","39.11","39.13","43.6","44.1","63.0","87.20","87.33","87.34","87.39","95.32","102.0","106.17","117.1","141.4","148.0","173.52","248.1","275.2"],"发送消息端":["19.11"],"window":["19.11","21.17","95.42","98.10","99.6","99.9","99.12","100.9","107.4","127.55","133.3","133.5","140.0","173.98","174.60","179.34","279.8","286.46"],"message":["19.11","99.6","128.0","154.3","166.8"],"有几种方式可以实现存储功能":["19.12"],"数据生命周期":["19.13"],"一般由服务器生成":["19.13"],"可以设置过期时间":["19.13"],"除非被清理":["19.13"],"否则一直存在":["19.13"],"页面关闭就清理":["19.13"],"数据存储大小":["19.13"],"所以必须使用":["19.14"],"协议来保障安全":["19.14"],"实现缓存功能一般分为三个步骤":["19.14"],"首先需要先注册":["19.14"],"然后监听到":["19.14"],"install":["19.14","61.8","65.36","68.10","69.9","70.0","72.5","78.0","81.1","81.5","97.11","97.51","97.55","102.5","113.5","176.19","235.4"],"事件以后就可以缓存需要的文件":["19.14"],"那么在下次用户访问的时候就可以通过拦截请求的方式查询是否存在缓存":["19.14"],"存在缓存的话就可以直接读取缓存文件":["19.14"],"否则就去请求数据":["19.14"],"以下是这个步骤的实现":["19.14"],"在编译阶段中":["20.2"],"代码经过编译会生成两部分内容":["20.2"],"执行上下文和可执行代码":["20.2"],"执行上下文是js代码的执行环境":["20.2"],"log":["20.3","24.5","62.1","67.3","68.11","88.2","96.13","99.7","99.9","102.1","102.2","103.17","115.0","127.42","129.6","141.6","157.2","163.0","173.1","173.3","173.9","173.39","173.61","173.85","173.87","173.94","181.0","205.1","207.16"],"在js编译阶段创建":["20.4"],"用于变量的存储和查询":["20.4"],"多个执行上下文会放在一个栈结构中进行管理":["20.5"],"由于该结构可以表达函数的调用关系":["20.5"],"作用域是变量的定义区域":["20.6"],"等同于执行上下文":["20.6"],"while块":["20.7"],"函数块":["20.7"],"foo":["20.7","21.10","64.26","102.1","127.17","127.43"],"for循环块":["20.7"],"作用域链是不同作用域之间的变量查找顺序":["20.8"],"在上下文内部":["20.8"],"即在编译时就已经决定好了":["20.9"],"因此词法作用域也叫静态作用域":["20.9"],"刚才我们讨论作用域链的时候提到了outer":["20.9"],"这个outer就是词法作用域实现的关键":["20.9"],"outer变量中存储了下一级要访问的上下文对象":["20.9"],"内部函数总是可以访问其外部函数中声明的变量":["20.10"],"如果外部函数在返回一个内部函数后":["20.10"],"外部函数销毁了":["20.10"],"那怎么办呢":["20.10"],"js就把内部函数引用的变量保存在一块独立的内存空间中":["20.10"],"而不是obj对象中的2":["20.12"],"不过":["20.12","127.38"],"在java":["20.12"],"c":["20.12","92.0","99.8","108.2","110.1","111.1","115.0","127.24","127.33","130.3","170.15","205.12","279.8","286.10","286.56"],"这样的语言中":["20.12"],"对象内部方法访问的变量就是对象的属性":["20.12"],"用java举例":["20.12"],"java":["20.12","110.2","260.0"],"public":["20.12","112.2","113.6","178.7","184.30","279.7"],"class":["20.12","95.28","96.6","97.35","104.0","127.33","179.29","184.7","190.0","190.6","209.3","255.0"],"int":["20.12"],"void":["20.12","52.12","112.2","156.13","156.15","156.23","166.3","183.2","184.6","206.15","241.9"],"system":["20.12"],"或单击一个链接开始":["21.1"],"首先当我们输入了url":["21.1"],"目前主要使用于":["21.2"],"浏览器和":["21.2"],"首先blink将ja代码交给v8引擎":["21.3"],"以ascll":["21.3"],"latin1":["21.3"],"utf":["21.3","106.4","160.0","168.3","168.7","286.47"],"8编码的方式把代码交给stream":["21.3"],"stream再以utf":["21.3"],"每个字节码将其输入和输出指定为显式寄存器操作数":["21.4"],"将尖端的中间表示与多层翻译和优化管道相结合":["21.5"],"tree":["21.6","174.37","177.9","177.11","179.30","179.54","206.8","214.2","222.3","232.1"],"或简称语法树":["21.6"],"一个一个字母的来读取字符":["21.7"],"然后与定义好的":["21.7"],"关键字符做比较":["21.7"],"生成对应的token":["21.7"],"token":["21.7","65.11","97.13","166.7","175.8"],"所以在任何时间点":["21.8"],"实际上最多有一个上下文正在执行代码":["21.8"],"执行栈用于跟踪执行上下文":["21.8"],"正在运行的执行上下文总是这个执行栈的顶部元素":["21.8"],"每当解析器从与当前运行的执行上下文关联的可执行代码转移到与该执行上下文不关联的可执行代码时":["21.8"],"就会创建一个新的执行上下文":["21.8"],"新创建的执行上下文被推到堆栈上":["21.8"],"并成为当前正在运行的执行上下文":["21.8"],"每个执行上下文至少具有三个状态组件":["21.8"],"这是默认的或基本的执行上下文":["21.9"],"任何不在函数内部的代码位于全局执行上下文中":["21.9"],"str":["21.10","140.2","140.3","174.16","286.6","286.60","295.1","295.3","295.6","295.8","295.9","295.10"],"eval":["21.10"],"在其他编程语言中也被用为调用栈":["21.11"],"是一个具有后进先出数据结构的栈":["21.11"],"第一阶段是创建阶段":["21.12"],"在这里先提前说了":["21.13"],"并且为其作用域内的每个变量和函数都分配内存":["21.14"],"之后还初始化this的值":["21.14"],"创建阶段会创建一个词法环境":["21.14"],"lexicalenvironment":["21.14"],"组件和变量环境":["21.14"],"词法环境就是一个链表结构":["21.15"],"outer":["21.15"],"environment":["21.15"],"声明性环境记录":["21.16"],"声明性环境变量存储了作用域中的变量":["21.16"],"常量":["21.16"],"类":["21.16"],"模块或函数声明":["21.16"],"globalenvironmentrecords":["21.17"],"outerenv":["21.17"],"全局环境":["21.17"],"的外部引用为null":["21.17"],"globalthisvalue":["21.17"],"this的执行":["21.17"],"如":["21.17","89.9","127.52","134.3","183.4"],"objectrecord":["21.17"],"即对象式环境记录objectenvironmentrecord":["21.17"],"如果查找的目的对变量进行赋值":["21.18"],"那么就会使用lhs查询":["21.18"],"如果目的是获取变量的值就会使用rhs查询":["21.18"],"简单概括来说就是全局代码执行期间":["21.19"],"js引擎就会创建一个栈来存储管理所有的执行上下文对象":["21.19"],"分别为":["22.1"],"输入设备":["22.1"],"比如键盘":["22.1"],"存储器":["22.1"],"比如内存":["22.1"],"控制器分析指令":["22.4"],"cpu及其工作过程":["22.7"],"运算器主要部件":["22.8"],"控制器主要部件":["22.9"],"就必须去存储器拿":["22.11"],"cpu才知道接下来做什么":["22.11"],"pc去了存储器的mar拿要执行的指令地址":["22.11"],"mar":["22.11"],"存储器里专门存指令地址的地方":["22.11"],"第二步和第三步":["22.11"],"mar去存储体内拿到指令之后":["22.11"],"例如下图":["22.12"],"图片":["22.12","23.22","23.30","23.48","23.56","23.59","23.66","23.68","47.1","47.11","50.8","80.0","87.3","118.7","121.7","152.18","244.1","244.2"],"其中第一个0000":["22.12"],"表示的是汇编语言里的load":["22.12"],"也就是加载":["22.12"],"这样c运行起来就特别快":["22.13"],"因为编译后是机器语言":["22.13"],"直接就能在系统上跑":["22.13"],"但问题是":["22.13"],"进制转换":["22.14"],"二进制如何转化为十进制":["22.15"],"例如2进制101":["22.15"],"1如何转化为10进制":["22.15"],"js里面可以用tostring":["22.16"],"这个方法来转换":["22.16"],"如果要用通用的方法":["22.16"],"十进制小数转为二进制":["22.17"],"方式是采用":["22.17"],"0001100110011001":["22.18"],"二进制":["22.18"],"十进制数0":["22.18"],"1转二进制计算过程":["22.18"],"整数部分为":["22.18"],"整数部分":["22.18"],"清零后为":["22.18"],"接着计算":["22.18"],"整数位为0":["22.19"],"定点数和浮点数":["22.20"],"如上图":["22.21"],"举例纯整数的二进制1011和":["22.21"],"如果是整数":["22.21"],"浮点数":["22.22"],"浮点数怎么表示呢":["22.22"],"s代表尾数":["22.23"],"r代表基数":["22.23"],"可以理解为js的for循环":["22.24"],"n":["22.24","52.12","53.10","64.11","127.52","173.4","174.56","179.64","291.4"],"input":["22.26"],"串行的工作方式":["22.27"],"所有i":["22.27"],"o设备通过i":["22.27"],"o设备":["22.28"],"简单扫一眼即可":["23.1"],"计算机网络":["23.1"],"是一个将分散的":["23.1"],"衡量计算机网络的性能的指标":["23.2"],"宽带就相当于100辆":["23.6"],"秒":["23.6","152.17"],"而并不是每秒都会有100辆车过":["23.6"],"时延":["23.7"],"发送时延":["23.8"],"传播时延":["23.9"],"排队时延":["23.10"],"分组在经过网络传输时":["23.10"],"处理时延":["23.11"],"往返时间":["23.12"],"时延带宽积":["23.13"],"osi参考模型":["23.14"],"osi参考模型是网络互连的七层框架":["23.14"],"这里不详细介绍了":["23.14"],"物理层":["23.15"],"物理层有啥用":["23.16"],"规定了电气特性":["23.17"],"信号的电平用":["23.17"],"光纤宽带上网是以什么样的形式传输数据呢":["23.18"],"衰减到一定程度时将造成信号失真":["23.20"],"因此会导致接收错误":["23.20"],"数据链路层":["23.21"],"数据链路层是做什么的呢":["23.22"],"我们用一个小故事来举例":["23.22"],"封装成帧":["23.24"],"透明传输":["23.25","47.9"],"透明传输是指不管boss下达的任何信息":["23.25"],"差错控制":["23.26"],"差错控制是在文件送到b公司小秘书手里的时候":["23.26"],"差错纠正":["23.27"],"差错纠正是链路层知道1":["23.27"],"比如说发送方发送速度特别快":["23.28"],"接收方接收速度特别慢":["23.28"],"以太网和无线网":["23.29"],"以太网是一种局域网技术":["23.29"],"其中目的地址和源地址指的是mac地址":["23.30"],"即设备的物理地址":["23.30"],"mac地址用于标示网卡":["23.30"],"互联网初期":["23.34"],"网卡":["23.35"],"无线局域网":["23.36"],"csma":["23.37"],"网桥根据mac帧的目的地址进行转发和过滤":["23.39"],"当网桥收到一个帧时":["23.39"],"冲突域和广播域":["23.40"],"冲突域":["23.40"],"是指同一时间只能由一台设备发送信息的范围":["23.40"],"广播域":["23.40"],"网络层":["23.41"],"分组交换":["23.44"],"当主机h1要向另一主机h2发送数据":["23.44"],"报文":["23.44"],"数据报":["23.45"],"首部的固定部分是20字节":["23.46"],"共20":["23.46"],"160比特":["23.46"],"1字节":["23.46"],"是1500字节":["23.48"],"接下来我们就看看在ip数据包上":["23.48"],"哪些字段标识了分片的数据呢":["23.48"],"c类":["23.50"],"d类":["23.50"],"nat":["23.51"],"在ip地址分类里面":["23.51"],"我们知道私有ip地址是不能跟外网交互的":["23.51"],"在小公司大多数计算机的地址都是192":["23.51"],"因为每个子网中的全0网络地址和全1广播地址均不能作为主机ip来使用":["23.52"],"为什么划分子网":["23.52"],"例如":["23.52","50.9","97.57","127.27","133.7","154.19","167.0","173.8","173.82","173.85","175.9"],"一个a类网络可以容纳16777214台主机":["23.52"],"但是在实际运用中":["23.52"],"不可能把一个a类网络只用于一个子网":["23.52"],"因为那样管理起来很不方便":["23.52"],"也会出现广播风暴等种种问题":["23.52"],"所以需要根据实际需求把它划分为若干个较小的子网":["23.52"],"一个b类网络可以容纳65534台主机":["23.52"],"往往也是需要划分子网的":["23.52"],"a怎么把数据传给b呢":["23.54"],"它总要知道b的物理地址吧":["23.54"],"物理地址就像门牌号一样":["23.54"],"我要知道你住在哪里":["23.54"],"才能把数据送过去吧":["23.54"],"首先你肯定知道自己的mac地址是多少":["23.54"],"dhcp协议":["23.55"],"dhcp":["23.55"],"icmp协议":["23.57"],"通知在发送过程中ip包被丢弃的原因":["23.58"],"分别由转发和分组功能的说明":["23.59"],"接着":["23.59"],"我们看一下路由器输入端口做了哪些事情":["23.59"],"首先":["23.59","46.2","133.2","133.4","142.12","166.0","178.8","207.1"],"传输层是只有计算机才有的层次":["23.60"],"主要提供是进程间逻辑通信":["23.60"],"可靠传输或者不可靠的功能":["23.60"],"端口号有什么用":["23.61"],"但是udp没有这部分花销":["23.63"],"udp使用最大努力交付":["23.63"],"即不保证可靠交付":["23.63"],"那谁来保证可靠的交付呢":["23.63"],"是由udp的上一层协议":["23.63"],"应用层来保证":["23.63"],"16位端口号占了2b":["23.64"],"也就是16位":["23.64"],"说明端口号的范围是0":["23.64"],"可靠的":["23.65"],"基于字节流的传输层通信协议":["23.65"],"tcp协议的特点":["23.65","50.19"],"tcp是面向连接的传输层协议":["23.65"],"比如说tcp的三次握手":["23.65"],"源端口和目的端口分别是指发送方应用程序的端口和目的方应用程序的端口号":["23.66"],"序号是指在一个tcp连接中传送的字节流中的每一个字节都按顺序编号":["23.66"],"置1时表示确认号合法":["23.67"],"为0的时候表示数据段不包含确认信息":["23.67"],"确认号被忽略":["23.67"],"如下图所示":["23.68","150.5"],"分别来了解一下建立连接的过程":["23.68"],"首先客户端要发送一个数据包告诉服务器要建立连接":["23.68"],"seq":["23.69"],"u":["23.69","127.27","127.40","127.41","286.55"],"u是之前传送过来的最后一个字节的序号":["23.69"],"用来释放一个链接":["23.69"],"当fin":["23.69"],"1的时候":["23.69"],"表明此报文的发送方已经完成了数据的发送":["23.69"],"tcp3次握手4次挥手常见面试题":["23.70"],"此时如果网络拥塞":["23.71"],"客户端发送的连接请求迟迟到不了服务端":["23.71"],"客户端便超时重发请求":["23.71"],"如果服务端正确接收并确认应答":["23.71"],"而当服务器返回ack后":["23.72"],"该攻击者就不对其进行再确认":["23.72"],"那这个tcp连接就处于挂起状态":["23.72"],"也就是半连接状态":["23.72"],"服务器收不到再确认的话":["23.72"],"还会重复发送ack给攻击者":["23.72"],"主要通过以下四种方式实现可靠传输机制":["23.73"],"校验":["23.73","87.43"],"伪首部是为了增加tcp校验和的检错能力":["23.73"],"通过伪首部的目的ip地址来检查tcp报文是否收错了":["23.73"],"这样就会发生严重的丢包现象":["23.75"],"tcp通过滑动窗口的机制来实现流量控制":["23.75"],"简单来说如下":["23.75"],"从而导致网络拥塞程度更高":["23.77"],"因此当出现拥塞时":["23.77"],"应当控制发送方的速率":["23.77"],"这一点和流量控制很像":["23.77"],"个报文段":["23.78"],"当收到确认后":["23.78"],"此时收到":["23.79"],"m4":["23.79"],"应当发送对":["23.79"],"的确认":["23.79"],"在发送方":["23.79"],"应用层":["23.80","47.3"],"应用层有啥用":["23.81"],"应用层常见的模型":["23.82"],"第一种是客户端":["23.82"],"短链接和长链接":["23.83"],"就断开连接":["23.84"],"下次有请求时":["23.84"],"再建立连接":["23.84"],"会一直使用这条连接进行数据交互":["23.85"],"dns":["23.86","175.10","175.21","177.12"],"浏览器将接收到的url中抽取出域名字段":["23.87"],"就是访问的主机名":["23.87"],"因特网":["23.88"],"万维网没有大多的区别":["23.88"],"其实这三者之间的关系应该是":["23.88"],"互联网包含因特网":["23.88"],"因特网包含万维网":["23.88"],"互联网internet":["23.88"],"凡是由能彼此通信的设备组成的网络就叫互联网":["23.88"],"即使仅有两台机器":["23.88"],"计算机":["23.88"],"用户通过点击超链接获取资源":["23.89"],"post或head":["23.90"],"请求url":["23.90"],"request":["23.90","133.5","152.20","166.3","168.17","175.12","195.5","197.4"],"要直接与服务器进行对话":["23.90"],"只要请求url是资源的绝对路径就可以了":["23.90"],"服务器可以假定自己是url的主机":["23.90"],"端口":["23.90","126.2"],"1默认是keep":["23.91"],"alive":["23.91","159.13","179.44","181.0","236.7"],"date":["23.91","141.3","159.2","175.3","178.8","206.11","248.1","287.7"],"提供日期和时间标志":["23.91"],"说明报文是什么时间创建的":["23.91"],"响应者的功能":["23.92"],"甚至与响应相关的一些特殊指令":["23.92"],"列出了可以对此实体执行的请求方法":["23.93"],"告知客户端实体实际上位于何处":["23.93"],"用于将接收端定向到资源的位置":["23.93"],"是可选的":["23.94"],"它是由浏览器的同源策略造成的":["24.1"],"避开浏览器的安全限制":["24.2"],"但存在一些问题":["24.3"],"使用get请求不安全":["24.3"],"script":["24.4","65.35","67.10","68.13","69.9","69.10","74.9","75.0","75.1","75.2","75.7","77.0","83.0","84.0","84.2","84.5","86.0","86.4","98.7","127.54","173.52","195.8"],"标签":["24.4","60.0","64.3","106.7","122.5","286.71"],"createelement":["24.5","103.11","104.0","169.4","209.1","216.2"],"设置回调函数":["24.5"],"getdata":["24.5"],"data":["24.5","96.10","96.12","99.11","100.9","130.3","133.3","152.20","173.95","174.33","175.4","195.4","195.7","195.8","196.9","218.5","221.3","222.6","252.5","284.26"],"里面哪个参数":["24.6"],"场景":["25.1"],"这个响应头可以决定内容是":["25.2"],"预览":["25.2"],"还是":["25.2"],"下载":["25.2"],"它支持三种格式的值":["25.2"],"应用下写了三个路由":["25.3"],"如下":["25.3","84.1","158.2","164.2","185.5"],"user":["25.3","67.3","138.21","148.1","166.3","252.5","275.2"],"name":["25.3","61.6","64.4","64.10","64.15","65.10","67.3","68.6","68.11","72.5","114.11","114.29","115.0","117.1","121.6","123.1","126.5","127.4","127.7","130.9","138.26","138.31","141.3","154.16","166.3","173.46","173.94","178.4","221.4","241.1","241.10"],"摸鱼的春哥":["25.3"],"blogurl":["25.3"],"实施":["25.4"],"客户反馈":["25.4"],"bug":["25.4","179.25"],"还是没修复":["25.4"],"header属性":["25.5"],"值":["25.5","97.47","126.6","154.7","173.28"],"含义":["25.5","138.34"],"no":["25.5","62.16","89.6","159.13","170.12","175.12","215.2","291.2"],"store":["25.5"],"不缓存":["25.5"],"这个会让客户端":["25.5"],"服务器都不缓存":["25.5"],"也就没有所谓的强缓存":["25.5"],"协商缓存了":["25.5"],"值的资源":["25.6"],"一律可以强缓存":["25.6"],"毕竟内容一旦有变化":["25.6"],"名称的":["25.6"],"也跟着变了":["25.6"],"为啥我登录成功了":["25.7"],"请求还是":["25.7"],"响应头正是":["25.8"],"体系中最为核心的":["25.8"],"第一主角":["25.8"],"是一个响应头":["25.8"],"服务端赋值":["25.8"],"让浏览器端产生":["25.8"],"并限定":["25.8"],"的各种特性":["25.8"],"这些特性就包括":["25.8"],"过期时限":["25.8"],"早期非常多的项目":["25.9"],"使用":["25.9","87.23","97.26","97.41","114.23","135.0","140.5","154.3","175.8","177.12","178.1","179.25","179.55","195.7","195.9","202.18","252.7"],"cookie":["25.9","115.0","126.5","175.16","179.52"],"作为用户身份识别的手段":["25.9"],"spring":["25.9"],"的基本概念":["26.1"],"信息是明文传输":["26.2"],"协议要比":["26.2"],"协议安全":["26.2"],"是具有安全性的":["26.2"],"ssl":["26.2","50.31"],"客户端使用":["26.4"],"访问服务器":["26.4"],"因而需要一定费用":["26.5"],"http是超文本传输协议":["26.5"],"tls":["27.0","175.10"],"images":["27.1"],"logo":["27.1"],"gif":["27.1","99.23","156.25","279.1","279.2","279.4","279.5","279.6","279.9","279.10"],"基本由请求方法":["27.1"],"协议版本组成":["27.1"],"不能":["27.2"],"相对":["27.2"],"并且部分首部两种通用":["27.3"],"控制缓存的行为":["27.5"],"connection":["27.5"],"encoding":["27.7","27.11"],"能正确接收的编码格式列表":["27.7"],"language":["27.7","27.11"],"能正确接收的语言列表":["27.7"],"ranges":["27.9"],"是否支持某些种类的范围":["27.9"],"内容的编码格式":["27.11"],"来传输信息":["27.12"],"但是信息通过":["27.12"],"两边都知道如何将密文加密解密":["27.13"],"可以将数据用公钥加密":["27.14"],"但是将数据解密必须使用私钥解密":["27.14"],"并根据客户端需求的协议和加密方式来使用对应的方式":["27.15"],"并且发送自己的证书":["27.15"],"如果需要验证客户端证书需要说明":["27.15"],"客户端收到服务端的证书并验证是否有效":["27.15"],"验证通过会再生成一个随机值":["27.15"],"做了哪些改进":["28.0"],"服务器推送":["28.1"],"http3":["28.1"],"相对于":["28.1"],"特性如下":["28.2"],"表示消息":["29.1"],"这类响应是临时响应":["29.2"],"只包含状态行和某些可选的响应信息":["29.2"],"并一空行结束":["29.2"],"并接受":["29.3"],"成功":["29.3","64.14","175.12","179.45"],"请求已成功":["29.3"],"通常这些状态代码用来重定向":["29.4"],"多种选择":["29.4"],"针对请求":["29.4"],"错误请求":["29.5"],"服务器不理解请求的语法":["29.5"],"未授权":["29.5"],"服务器内部错误":["29.6"],"服务器遇到错误":["29.6"],"无法完成请求":["29.6"],"如何保证数据包传输的有序可靠":["30.0"],"为了保证数据包的可靠传递":["30.1"],"发送方必须把已发送的数据包保留在缓冲区":["30.1"],"复局":["31.1"],"指对局完毕后":["31.1"],"棋手复演这盘棋的记录":["31.1"],"以检查对局中双方招法的优劣与得失关键":["31.1"],"吾日三省吾身":["31.2"],"在脑海中失败的越多":["31.3"],"不代表我们一定会成功":["31.4"],"如果想要成功":["31.4"],"的过程":["31.5","156.6"],"在这个过程中":["31.5"],"我们会从未知走向已知":["31.5"],"这句话未来我可能会反复提起很多遍":["31.5"],"就和下面的图一样":["31.5"],"发现自己之前不曾关注的信息":["31.5"],"知识甚至规律":["31.5"],"梳理出更加体系化的知识和智慧":["31.5"],"复盘别人的经历":["31.7"],"第一种方式":["31.7"],"概括下来":["31.7"],"就是":["31.7","66.3","87.32"],"我当时为何要这样做":["31.7"],"可以是成功的经历":["31.8"],"也可以是失败的经历":["31.8"],"客观性非常重要":["31.9"],"为了能够对整个事件有全面的把握":["31.9"],"我们要把事件的始末梳理清楚":["31.9"],"一个人复盘不难理解":["31.10"],"复盘不是空想和空谈":["31.11"],"不能因为盘过了就抛之脑后":["31.11"],"比如故事中故障复盘":["31.12"],"最好的复盘时间是故障发生后的一周之内":["31.12"],"都必须遵循如下四个关键点":["31.13"],"既然是复盘":["31.14"],"那就要想方设法弄清楚所复盘事件的前后因果":["31.14"],"盘事情的目的是为了未来把事情做好":["31.15"],"而不是为了给哪个人定责":["31.15"],"一定要有行动":["31.16"],"若没有行动":["31.16"],"只是在脑子里想想":["31.16"],"嘴上说说":["31.16"],"更多的是复盘故障和失败":["31.17"],"从来没有复盘过成功":["31.17"],"事实上":["31.17","37.0","44.2"],"无论是成功还是失败":["31.17"],"这里仅列举三个例子":["31.18"],"第一":["31.18"],"在我国的航天领域有所谓的":["31.18"],"好吧":["32.1"],"在国内被墙了":["32.1"],"还真没咋用过梯子":["32.1"],"所以":["32.1","135.0"],"不常用":["32.1","136.2"],"你说这个问题啊":["32.2"],"是有解决方案的":["32.2"],"下次你可以先百度瞅瞅":["32.2"],"我对":["32.2"],"也没用过":["32.2"],"不过我看了几篇文章":["32.2"],"觉得可以说明白你那些问题":["32.2"],"发送几篇参考文献":["32.2"],"没回复了":["32.2"],"过了一天":["32.2"],"在不":["32.2"],"问你个问题撒":["32.2"],"极不情愿":["32.2"],"即便回答你的人由时间":["32.3"],"愿意回答问题的人":["32.3"],"都是":["32.3","256.2"],"可爱":["32.3"],"的人":["32.3"],"他会基于这种认识拆分业务生命周期":["33.1"],"确立业务边界":["33.1"],"构建出了一套解决特定":["33.1"],"业务问题的领域模型":["33.1"],"并且确认模型之间":["33.1"],"领域之间的关系与协作方式":["33.1"],"完成了对业":["33.1"],"务领域内的要素的组织工作":["33.1"],"组织技术":["33.1"],"为了能在计算机世界中运作人类社会的业务模型":["33.1"],"架构师需要选用计":["33.1"],"算机世界中合适的框架":["33.1"],"降本增效":["33.2"],"因为运营页面需求的增长":["33.2"],"能够将用户的业务需求落地到技术方案":["33.3"],"我理解是综合考虑目标":["33.5"],"应该站到前端的角度":["34.1"],"我觉得这是和用户接触最近的一个职位":["34.2"],"它们有着与众不同的用法":["35.1"],"解决这些问题有什么常用的方案":["35.2"],"真正的边界在哪里":["35.3"],"开发环境图和概率图能够为讨论的问题提供备选方案":["35.4"],"同样适用于软件开发":["35.5"],"项目何时交付":["36.1"],"方法与业务需求相符的说明":["36.2"],"收入登记":["36.3"],"迁移":["36.4"],"务实":["36.5"],"我知道正确的道路是什么":["37.0"],"但是那种生活对我来说太他妈的痛苦了":["37.0"],"闻香":["37.0"],"jpeg":["37.0","41.2","41.8"],"只要稍加思考":["37.0"],"我们便会发现我们无法长期坚持一件事情的原因":["37.0"],"主要在于我们无法在短时间内改变我们在生活路径和思考模式上长期积攒下来的的巨大惯性":["37.0"],"我们不会让已有的飞轮停下来":["37.0"],"换言之":["37.0","37.2"],"我们懈怠的原因并非是因为我的惰性":["37.0"],"而是出于我们长期形成的惯性":["37.0"],"后来几乎所有介绍":["37.1"],"飞轮理论":["37.1"],"的文章都会用亚马逊飞轮来举例子":["37.1"],"既然这个例子已成为业界标准":["37.1"],"那么本文也不能免俗":["37.1"],"柯林斯认为":["37.1"],"一个公司的飞轮就是公司各个职能模块的组织模式":["37.1"],"也就是所谓商业模式":["37.1"],"而亚马逊的飞轮":["37.1"],"据说是有一次贝佐斯灵光乍现然后在餐巾纸上画下来的":["37.1"],"且不说这个故事有多少杜撰的成分":["37.1"],"不妨先让我们看一下这个飞轮长什么样子":["37.1"],"它的理念类似于前阵子非常火的长期主义":["37.2"],"用一句话概括":["37.2"],"就是因为我们知道在飞轮能够自发转动之前推动飞轮持续转动起是整个过程中最艰难":["37.2"],"最劳心费力的一步":["37.2"],"所以在开始的时候":["37.2"],"我们要有数十年如一日地推动飞轮旋转的觉悟和毅力":["37.2"],"你有没有把牺牲自己":["37.2"],"把自己变成飞轮的一部分的觉悟呢":["37.2"],"其次":["37.2","46.2"],"确认过态度之后":["37.2"],"然后才是飞轮思维的方法论":["37.2"],"飞轮思维的方法论主要集中在如构建飞轮上":["37.2"],"而构建飞轮的过程":["37.2"],"需要和我们所解决的实际问题相结合":["37.2"],"就像上一节中讨论的亚马逊飞轮一样":["37.2"],"飞轮思维的关键点":["37.3"],"如果你只想要了解设计和推动飞轮的基本逻辑":["37.3"],"那么上面的内容就已经足够入门了":["37.3"],"如果你想要更好地推动飞轮":["37.3"],"那么你最好还是看一下我在本节提及的的关键点":["37.3"],"这些内容都是吉姆":["37.3"],"柯林斯在他的书中没有提及":["37.3"],"也许他默认我们都已经知道了":["37.3"],"但在实践中却非常重要的":["37.3"],"飞轮系统必须是一个开放系统":["37.3"],"飞轮系统能够持续转动的本质是量变的无限积累":["37.3"],"只有把飞轮系统中的每个部件设计成开放系统":["37.3"],"才有可能持续地产生量变":["37.3"],"所以飞轮思维可以和迭代思维组合使用":["37.4"],"应该抓住一切机会与客户会面":["38.0"],"与销售":["38.1"],"可以以私人的方式访问他们吗":["38.2"],"是否理解客户的工作流程":["38.3"],"客户这种工作方式的优劣势":["38.3"],"解决的方案是地区性的还是全国性":["38.4"],"这个解决方案是否容易复制":["38.4"],"是否容易实现":["38.4"],"为什么以前没人做":["38.4"],"他们的关注点":["38.5"],"他们对什么比较在乎":["38.5"],"当完成一个项目时":["38.6"],"再比如":["39.1"],"我无法决定我的性别以及所在的国家":["39.1"],"这是出生的不确定性":["39.1"],"带来不确定性的事件有很多种类":["39.1"],"彩票这种随机事件":["39.1"],"人这种天生具有不确定性的动物产生的不确定的行为":["39.1"],"此前从来没有经历过的未知情况带来的不可预期的结果":["39.1"],"行动和结果不可预期":["39.1"],"有时候带给我们的是惊喜":["39.1"],"在生活中我们的确需要这样的惊喜不是吗":["39.1"],"但在另外一些时候":["39.1"],"不可预期的结果就不那么让人愉快了":["39.1"],"它除了不会带来惊喜之外":["39.1"],"那你多半已经轻车熟路了":["39.2"],"除非有新的因素引入":["39.2"],"只有确保这些小问题是原始问题的等价问题":["39.3"],"我们才可能从对小问题的验证中获得对原始问题一样有价值的信息":["39.3"],"工程师思维":["39.3","46.4"],"05":["39.3","173.5"],"在dba切换的例子里":["39.4"],"试验步骤就是我们当时拟定好的操作计划":["39.4"],"当灰度试验开始":["39.4"],"一定要按照计划步骤操作":["39.4"],"我甚至可以不重样地说上一整天":["39.6"],"这并不能阻挡工程师们想要灰度的决心":["39.7"],"他们甚至把灰度做到了机房级别":["39.7"],"在发布时对机房的流量进行灰度控制":["39.7"],"这里的可行与否":["39.8"],"有两个维度":["39.8"],"一":["39.8"],"为了避免账号输错":["39.10"],"而是从入门所需的最基本原料开始":["39.11"],"此时可以把前期报的各种兴趣班看作是看作一种灰度":["39.12"],"臭名昭著的服从性测试就以灰度的方式展开":["39.13"],"重要的事情值得反复提起":["39.14"],"只要是从已知世界走向未知世界的问题":["39.14"],"提问技术性问题":["40.0"],"参考话术":["40.1"],"你好":["40.1"],"应聘者3分钟进行自我介绍":["40.2"],"让应聘者回答":["40.3"],"之前都做过什么项目":["40.3"],"对什么东西感兴趣":["40.3"],"15分钟":["40.4"],"让应聘者谈谈之前最让他感觉骄傲的一个项目":["40.4"],"要有一道手写编程题":["40.5"],"针对工作流程的参考话术":["40.6"],"我们采用日":["40.6"],"周":["40.6"],"月的工作流程":["40.6"],"日为每日站会":["40.6"],"对接更多的支付渠道":["41.0"],"我们需要更复杂的支付工具运营能力":["41.0"],"这个时候我们发现这个小模块已经不够用了":["41.0"],"更为要命的是":["41.0"],"要在电商系统里开发支付模块":["41.0"],"就必须让支付研发团队的项目节奏和电商研发团队保持一致":["41.0"],"但这两个团队的研发节奏天然就是不同的":["41.0"],"时间长了":["41.0"],"在两个团队间项目协调带来的冲突时常发生":["41.0"],"这不但影响了大家的研发效率":["41.0"],"更糟糕的是":["41.0"],"团队内的士气和团队间的友谊也受到了严重的伤害":["41.0"],"在电商系统里跑了大概1年多时间之后":["41.0"],"大家实在不想在这个憋屈的支付模块里缝缝补补了":["41.0"],"小小的身躯里塞满了本不属于它的复杂功能":["41.0"],"其实不同的":["41.1"],"事情":["41.1"],"很多时候":["41.1"],"我们对新事物的学习过程都是这样的":["41.1"],"最开始的时候":["41.1"],"我们做得磕磕绊绊":["41.1"],"甚至连主要目标都完成得很勉强":["41.1"],"经过无数次尝试之后":["41.1"],"我们会变得越来越熟练":["41.1"],"除了能够闭眼轻松完成主要目标之外":["41.1"],"就连之前无暇顾及的细节现在也可以被我们兼顾到了":["41.1"],"继续深入之后":["41.1"],"我们可能还会遇到很多之前根本没有考虑到的状况":["41.1"],"pdca循环一般会有多个周期":["41.2"],"也就是迭代":["41.2"],"在一个周期里":["41.2"],"我们将我们将要做的事情分成四个阶段":["41.2"],"即plan":["41.2"],"计划":["41.2","44.10"],"do":["41.2","52.12","97.50","148.1","219.10"],"我会做一个简单的pdca文档":["41.3"],"内容大概如下":["41.3"],"p":["41.3","41.4","41.5","74.3","74.6","96.6","106.41","114.29","127.33","165.2","173.3","173.38","216.2","260.3","286.70"],"变更内容是什么":["41.3"],"预期影响是什么":["41.3"],"执行步骤是什么":["41.3"],"写":["41.4"],"系列文章":["41.4"],"以故事的方式分享我在公司学到的工程师思维":["41.4"],"计划用半年时间写10篇左右":["41.4"],"建设一个支付系统":["41.5"],"能够支持xx业务":["41.5"],"支持xx支付工具":["41.5"],"支付处理的tps":["41.5"],"每秒钟交易量":["41.5"],"从pdca循环可以看到":["41.6"],"p阶段制定计划的合理与否":["41.6"],"方向正确与否":["41.6"],"那么在pdca循环中":["41.7"],"应该重点抓p阶段和c阶段":["41.7"],"在计划阶段做好计划":["41.7"],"包以德":["41.8"],"因而又被称为包以德循环":["41.8"],"在ooda循环的四个字母中代表四个不同的阶段":["41.8"],"第一个o表示观察":["41.8"],"observe":["41.8","127.18"],"第二个o表示调整":["41.8"],"orient":["41.8"],"d代表决策":["41.8"],"decide":["41.8"],"a代表行动":["41.8"],"act":["41.8"],"ooda":["41.8"],"具体来说":["41.8"],"ooda的每个阶段要做如下事项":["41.8"],"观察阶段":["41.8"],"o":["41.8","53.10","173.52","216.2"],"观察外部环境变化":["41.8"],"灰度思维":["41.9"],"复盘思维":["41.9"],"根因思维":["41.9"],"过去所有的经验告诉我们":["41.10"],"问题都是一点一点的解决的":["41.10"],"优化也是一点一点的做出来的":["41.10"],"这正是迭代思维的核心思想":["41.10"],"想要实践迭代思维":["41.10"],"管理员":["42.0"],"的一员":["42.0"],"系统的边界":["42.1"],"帮助识别和管理项目的风险及问题":["42.1"],"拓展业务知识":["42.2"],"是mutually":["43.1"],"exclusive":["43.1"],"它主要有两条原则":["43.2"],"老年人":["43.3"],"中年人":["43.3"],"青年人":["43.3"],"也就是要明确当下讨论的问题到底是什么":["43.5"],"以及我们想要达到的目的是什么":["43.5"],"是按颜色分":["43.6"],"按大小分":["43.6"],"按时间序列分还是按重要性分":["43.6"],"但仅仅这么分对于我们的营销策略有什么帮助吗":["43.7"],"不管走到哪一步":["43.7"],"请时刻记住":["43.7"],"确定我们当前思考的问题范围是中国":["43.10"],"假设我们当前讨论的范围是公司内部":["43.11"],"关注的切入点":["43.12"],"这里很多都是我们可以想到的切入点":["43.13"],"因为我们从再说一个人的时候":["43.13"],"本职工作能力":["43.14"],"更多的是从业务串联的角度":["43.14"],"因为这是一个检测产出的基础":["43.14"],"就是进攻":["44.0"],"如果你读过本系列之前的文章":["44.1"],"那么你应该还记得":["44.1"],"出了故障一年白干":["44.1"],"的说法":["44.1"],"在我打工的公司":["44.1"],"一旦发生线上故障就有可能出现资金损失":["44.1"],"事后补救不论多难多复杂也得含着泪也得做完":["44.1"],"当然":["44.1","44.8","71.3","119.10","177.7","181.0"],"故障责任人这一年肯定就算是白干了":["44.1"],"系统会查询融资者a在":["44.2"],"整个业务逻辑并不复杂":["44.2"],"取两个集合的交集而已":["44.2"],"我想当时我们的研发同学肯定也都理解了这个需求":["44.2"],"然而":["44.2"],"在我们实现这个交集逻辑时":["44.2"],"问题还是出现了":["44.2"],"这里先让我们暂停5分钟":["44.2"],"读者可以自行思考一下这个交集逻辑如何用代码实现":["44.2"],"在融资系统里":["44.2"],"我们的开发同学把交集逻辑封装成了一个函数":["44.2"],"而其中的代码逻辑是这样的":["44.2"],"def":["44.2"],"calcactualwhitelist":["44.2"],"bank":["44.2"],"supplier":["44.2"],"whitelist":["44.2"],"set":["44.2","64.17","69.9","69.10","127.13","127.55","130.8","167.4","173.44","216.2","219.10","248.2","254.3"],"取交集":["44.2"],"intersection":["44.2"],"update":["44.2","71.17","71.19","110.2","179.54","179.55","181.0","206.4","206.8","206.14","222.4"],"return":["44.2","52.6","52.12","55.1","64.8","64.17","64.22","95.45","95.46","97.13","98.9","100.1","103.15","107.4","108.2","108.3","111.4","133.5","140.5","148.2","153.12","154.16","156.14","156.17","162.3","167.4","169.4","173.4","173.29","173.94","173.95","174.16","174.25","174.33","176.2","177.7","179.27","179.56","195.8","195.9","204.2","204.3","205.6","206.11","206.15","214.1","214.2","214.3","216.2","217.7","221.1","222.3","228.3","241.6","251.2","283.1","283.2","283.7","283.10","286.16","286.37","286.49","286.69","288.3","288.4","294.1","295.1"],"list":["44.2","65.11","96.10","106.18","111.2","116.2","174.20","190.4"],"注":["44.2"],"在此python仅是示例":["44.2"],"实际工作中我们用java":["44.2"],"而且":["44.2"],"实际的白名单计算函数比例子要复杂的多":["44.2"],"怎么样":["44.2"],"能看出代码中的问题吗":["44.2"],"实际上":["44.2","168.26"],"我所经历过的绝大多线上故障的发现":["44.2"],"写在说明书里或者写在文档里":["44.3"],"加黑加粗醒目高亮都不行":["44.3"],"时间是无价的":["44.3"],"没人愿意花功夫去读厚厚的说明书和又臭又长的使用文档":["44.3"],"在最好的防错设计中":["44.3"],"对错误的使用方式的避免是":["44.3"],"设计在":["44.3"],"产品中":["44.3"],"在用户使用产品时自然而然地就避免了错误":["44.3"],"而不是把":["44.3"],"防错事项":["44.3"],"做成一个可有可无的说明书交给用户":["44.3"],"用户不可能比设计者":["44.3"],"你":["44.3"],"更懂这个产品":["44.3"],"而这种转移责任的行为":["44.3"],"反而是一种不敬业":["44.3"],"不专业的表现":["44.3"],"是为了避免工人在生产线上犯错":["44.4"],"减轻工人的认知负担而做的设计":["44.4"],"防呆设计的英文为fool":["44.4"],"proof":["44.4"],"日语拼音为poka":["44.4"],"答案是8种":["44.5"],"1种正确方式":["44.5"],"7种错误方式":["44.5"],"如果sim卡是一个长方形但是没有这个缺角":["44.5"],"答案是4种":["44.5"],"3种错误方式":["44.5"],"正是因为有了这个缺角":["44.5"],"才使得我们在装sim卡时":["44.5"],"只会有一种安装方式":["44.5"],"正确的那一种":["44.5"],"这样设计的sim卡":["44.5"],"在没有任何说明的情况下":["44.5"],"你也不会":["44.5"],"缩小":["44.6"],"问题覆盖的范围":["44.6"],"在笔者看来":["44.6"],"从宏观的架构到微观的编码":["44.6"],"软件工程师的工作大体在四个层次进行":["44.6"],"产品":["44.6","265.0"],"通过提前设计":["44.7"],"直接消除错误":["44.7"],"即使犯错也不会导致问题":["44.8"],"事前拦截并不一定都能成功":["44.8"],"检测能力":["44.9"],"因此":["44.9","125.0","136.6","177.6","179.38","216.1"],"在产品设计的初期时":["44.9"],"就要将产品的监控能力和熔断能力一并考虑":["44.9"],"这是事前和事中防错失败之后":["44.9"],"软件工程师可以依靠的最后一根救命稻草":["44.9"],"能够走到事后防错这一步":["44.9"],"说明我们遇上了意料之外的问题":["44.9"],"现在该如何处理呢":["44.9"],"这其实就回到了这个系列文章曾经讨论过的":["44.9"],"只要涉及到设计":["44.10"],"技术能力":["45.0"],"合作关系是确立了相互信任的一种关系":["45.2"],"信任":["45.3"],"找出在某些领域的思想领袖":["45.4"],"对于信息得公开要谨慎":["45.5"],"对用户的机密信息要保密":["45.5"],"在":["45.5","65.33","71.16","74.7","77.3","77.4","77.5","80.4","84.1","86.8","106.25","121.0","140.0","140.5","148.2","148.3","154.3","156.4","173.12","173.20","173.44","173.55","177.6","178.2","178.3","179.26","204.4","208.12","213.0","218.11","256.2"],"寻求指导或者批准时要披露以下的信息":["45.5"],"要让":["45.6"],"关键人物":["45.6"],"参与方案的决策":["45.6"],"方案既要满足当前的业务需求":["45.6"],"寻找导师":["45.7"],"合作是通过关系确立和维护的":["45.8"],"jpg":["46.1","61.9","99.3","99.18","127.28","152.30"],"根因":["46.1"],"也就是一个事件的根本原因":["46.1"],"root":["46.1","53.2","53.5","53.8","53.11","67.3","68.4","106.36","138.22","138.35","147.5","174.44","210.2","214.3","219.3"],"屁股决定脑袋这种惨剧在我们的现实世界里反复出现真的一点都不奇怪":["46.2"],"而根因思维是正是一种避免惨剧发生的系统性思考方式":["46.2"],"它的基本原则如下":["46.2"],"根因思维承认世界本身的复杂性":["46.2"],"根因思维认为问题和原因互为因果":["46.2"],"组成了一条因果链":["46.2"],"最后":["46.2"],"这本书真的比较老":["46.3"],"至于为什么叫5":["46.3"],"据说是大野耐一在一次回答记者的关于汽车质量的问题时说的":["46.3"],"他说":["46.3"],"我们遇到问题时至少要问5个为什么":["46.3"],"why":["46.3"],"下面":["46.3"],"让我们举一个5":["46.3"],"why的例子":["46.3"],"这个例子非常经典":["46.3"],"例子当中的主角就是大野耐一":["46.3"],"有一次":["46.3"],"大野耐一见到生产线上的机器总是停转":["46.3"],"多次维修仍不见好转":["46.3"],"于是大野询问现场的工作人员":["46.3"],"第一问":["46.3"],"问":["46.3"],"为什么机器停了":["46.3"],"答":["46.3"],"因为超过了负荷":["46.3"],"保险丝就断了":["46.3"],"第二问":["46.3"],"我们遇到的问题可以在很多种维度上进行分类":["46.4"],"本文主要从因果链的复杂度上出发":["46.4"],"将问题分为两类":["46.4"],"线性问题":["46.4"],"非线性问题":["46.4"],"所谓的线性问题":["46.4"],"就是由一组组因为和所以关系前后咬合组成的单一链条":["46.4"],"这条链没有旁路和分支":["46.4"],"你可以从根因一路走到表象":["46.4"],"但请务必注意":["46.5"],"这还不是根因思维的全部":["46.5"],"根因思维的使用到这里其实才刚刚过半":["46.5"],"再进一步":["46.5"],"当我们推导出根因之后":["46.5"],"我们还不能停止思考":["46.5"],"此时我们应该切换思维方式":["46.5"],"其实非常吃经验":["46.6"],"以笔者曾从事过的支付业务为例":["46.6"],"在这个领域里":["46.6"],"我们可以通过逆推的方式":["46.7"],"比如5":["46.7"],"why分析法":["46.7"],"支持异构网络系统的互联互通":["47.2"],"制定一个标准":["47.2"],"用户与网络的界面":["47.3"],"处理两种通信系统中交换信息的表示方式":["47.4"],"比如说":["47.4"],"向表示层实体":["47.5"],"用户进程提供建立连接并在连接上有序地传输数据":["47.5"],"建立连接":["47.5"],"传输单位是报文段或用户数据报":["47.6"],"因为是端口号之间的通信":["47.6"],"因此是端对端":["47.6"],"下面的几层":["47.6"],"为分组交换网上的不同主机提供通信服务":["47.7"],"数据过大时进行切割":["47.7"],"实现网际互联":["47.7"],"传输单位是数据包":["47.7"],"传输单位是帧":["47.8"],"功能一":["47.8"],"成帧":["47.8"],"物理传输单位是比特":["47.9"],"不管给什么比特流":["47.9"],"ip模型":["47.10"],"基本是和":["48.0"],"以下几个字段是很重要的":["48.1"],"sequence":["48.1"],"number":["48.1","64.8","100.2","127.17","127.23","156.3","173.25","173.68","173.69","173.70","174.48","174.52","183.2","185.6","206.3","206.9","208.4","214.2","218.5","243.1","287.2"],"这个序号保证了":["48.1"],"传输的报文都是有序的":["48.1"],"对端可以通过序号顺序的拼接报文":["48.1"],"acknowledgement":["48.1"],"的状态机是很复杂的":["48.2"],"不管是客户端还是服务端":["48.3"],"tcp":["48.3","48.7","48.9","50.16","51.1","51.3","175.10","179.37"],"连接建立完后都能发送和接收数据":["48.3"],"该报文段中包含自身的数据通讯初始序号":["48.4","50.11"],"如果同意连接":["48.5","50.12"],"此时连接建立成功":["48.6"],"ps":["48.6","103.2","138.6","277.0"],"第三次握手中可以包含数据":["48.6"],"通过快速打开":["48.6"],"tfo":["48.6"],"技术就可以实现这一功能":["48.6"],"其实只要涉及到握手的协议":["48.6"],"都可以使用类似":["48.6"],"链接":["48.9","50.16"],"然后会发送":["48.9","50.16"],"ack":["48.9","48.27","49.2","50.16"],"完毕后会向":["48.10","50.17"],"发送连接释放请求":["48.10"],"进入":["48.11"],"wait":["48.11","179.27"],"状态":["48.11","49.2"],"该状态会持续":["48.11"],"2msl":["48.11"],"这时候超过定时器设定的时间就会再次发送丢失的数据直到对端响应":["48.15"],"所以需要每次都备份发送的数据":["48.15"],"那么超过定时器时间":["48.16"],"端照样会重传报文":["48.16"],"在连续":["48.17"],"接收端会持续不断收到报文":["48.18"],"如果和停止等待":["48.18"],"中接收一个报文就发送一个应答一样":["48.18"],"中":["48.19","77.1","81.6","87.18","100.9","115.0","140.5","173.20","173.55","173.91","178.2","178.3","178.8","179.54","195.0","245.3","250.2"],"两端其实都维护着窗口":["48.19"],"分别为发送端窗口和接收端窗口":["48.19"],"在发送报文的过程中":["48.20"],"可能会遇到对端出现零窗口的情况":["48.20"],"后者是作用于接收方":["48.21"],"保证接收方来得及接受数据":["48.21"],"从而避免一开始就传输大量数据导致网络拥塞":["48.22"],"想必大家都下载过资源":["48.22"],"每当我们开始下载的时候都会发现下载速度是慢慢提升的":["48.22"],"rtt":["48.23"],"窗口大小只加一":["48.23"],"一旦接收端收到的报文出现失序的情况":["48.24"],"实现如下":["48.25","48.26"],"拥塞窗口减半":["48.26"],"算法的缺陷":["48.27"],"在之前":["48.27"],"快恢复中只要收到一个新的":["48.27"],"包":["48.27"],"就会退出快恢复":["48.27"],"断开连接需要四次握手":["48.28"],"四次挥手":["49.0"],"到服务器":["49.1"],"并进入syn":["49.1"],"sent状态":["49.1"],"等待服务器确认":["49.1"],"终止等待1":["49.2"],"tcp规定":["49.2"],"fin报文段即使不携带数据":["49.2"],"也要消耗一个序号":["49.2"],"服务器收到连接释放报文":["49.2"],"发出确认报文":["49.2"],"tcp仅支持单播传输":["50.0"],"udp":["50.0","50.4","50.8","50.29"],"怎样结束通信等规则都需要事先确定":["50.1"],"不同的硬件":["50.1"],"操作系统之间的通信":["50.1"],"所有的这一切都需要一种规则":["50.1"],"而我们就把这种规则称为协议":["50.1"],"protocol":["50.1","50.32","151.12"],"ip":["50.1","138.40","175.10","175.21"],"是互联网相关的各类协议族的总称":["50.1"],"udp协议全称是用户数据报协议":["50.2"],"在网络中它与tcp协议一样用于处理数据包":["50.2"],"是不需要和":["50.4"],"tcp一样在发送数据前进行三次握手建立连接的":["50.4"],"想发数据就可以开始发送了":["50.4","51.1"],"有单播":["50.5"],"多播":["50.5"],"udp是面向报文的":["50.6"],"通信都不需要建立连接":["50.7"],"想发就发":["50.7","51.2"],"这样的情况肯定不可靠":["50.7","51.2"],"并且收到什么数据就传递什么数据":["50.7","51.2"],"头部包含了以下几个数据":["50.8"],"这样才能保证正确收发数据":["50.9"],"当你想查看网页或查看电子邮件时":["50.9"],"tcp连接过程":["50.10"],"还要向服务端发送一个确认报文":["50.13"],"客户端发完这个报文段后便进入":["50.13"],"tcp断开链接":["50.14"],"如果此时还有没发完的数据会继续发送":["50.17"],"发送确认应答":["50.18"],"此时":["50.18"],"是指发送数据之前必须在两端建立连接":["50.20"],"只能进行点对点的数据传输":["50.21"],"而是在不保留报文边界的情况下以字节流方式进行传输":["50.22"],"判断丢包":["50.23"],"误码靠的是tcp的段编号以及确认号":["50.23"],"tcp能够减小向网络注入数据的速率和数量":["50.24"],"因为tcp连接的两端都设有缓存":["50.25"],"对比":["50.27"],"面向连接":["50.28"],"是否可靠":["50.28"],"不可靠传输":["50.28"],"不使用流量控制和拥塞控制":["50.28"],"应用场景":["50.29","175.0"],"udp的应用场景":["50.29"],"或udp的应用层协议分析":["50.30"],"over":["50.31","148.5","216.4"],"安全超文本传输协议":["50.31"],"http协议的安全版本":["50.31"],"启动协议":["50.32"],"域名服务":["50.33"],"用于完成地址查找":["50.33"],"邮件转发等工作":["50.33"],"echo":["50.33","260.2"],"udp向上层提供无连接不可靠服务":["50.34"],"协议是面向无连接的":["51.0"],"也就是说不需要在正式传递数据之前先连接起双方":["51.0"],"一样在发送数据前进行三次握手建立连接的":["51.1"],"并且也只是数据报文的搬运工":["51.1"],"但是正是因为它不是那么的可靠":["51.3"],"所以也就没有":["51.3"],"那么复杂了":["51.3"],"不止支持一对一的传输方式":["51.4"],"虽然对比":["51.5"],"相比":["51.6"],"两数求和问题":["52.1"],"真题描述":["52.1"],"这道题相信很多同学看一眼就很快能得出一个最基本的思路":["52.4"],"两层循环来遍历同一个数组":["52.4"],"的复杂度":["52.5"],"这个复杂度非常容易导致你的算法超时":["52.5"],"即便没有超时":["52.5"],"在明明有一层遍历解法的情况下":["52.5"],"你写了两层遍历":["52.5"],"面试官对你的印象分会大打折扣":["52.5"],"空间换时间":["52.5"],"map":["52.5","64.17","100.1","127.13","130.8","176.5","177.10","178.8","216.2","256.4","265.2"],"来帮忙":["52.5"],"拿我们这道题来说":["52.5"],"其实二层遍历是完全不必要的":["52.5"],"twosum":["52.6"],"nums2":["52.7"],"请你将":["52.7"],"合并到":["52.7"],"标准解法就是双指针法":["52.10"],"首先我们定义两个指针":["52.10"],"看做是一个":["52.11"],"容器":["52.11","113.2"],"但是这个容器":["52.11"],"它不是空的":["52.11"],"而是前面几个坑有内容的":["52.11"],"not":["52.12","97.50","106.6","132.4","162.3","173.26","175.12","222.3","222.7","252.5"],"anything":["52.12"],"modify":["52.12","235.4"],"俗话说":["52.13"],"青出于蓝而胜于蓝":["52.13"],"三数求和虽然和两数求和只差了一个字":["52.13"],"定位效率将会被大大提升":["52.15"],"从此告别过度循环":["52.15"],"这里大家相信已经能察觉出来双指针法的使用场景了":["52.15"],"一方面":["52.15"],"它可以做到空间换时间":["52.15"],"另一方面":["52.15","195.9"],"sort":["52.16","174.8","180.0","256.4"],"缓存数组长度":["52.16"],"len":["52.16","173.58","286.19"],"length":["52.16","55.1","57.4","64.7","89.6","95.16","99.11","104.0","148.3","148.5","154.8","154.16","156.14","156.17","158.3","164.3","174.21","174.24","174.33","204.2","214.0","216.2","219.6","226.1","228.3","230.1","241.6","285.13","288.4"],"注意我们遍历到倒数第三个数就足够了":["52.16"],"因为左右指针会遍历后面两个数":["52.16"],"然后相减即可":["52.17"],"规律":["52.17"],"countodds":["52.17"],"salary":["52.18"],"先算":["52.18"],"最大最小的和":["52.18"],"sumother":["52.18"],"preordertraversal":["53.2"],"res":["53.3","53.6","53.9","111.3","112.3","156.13"],"stack":["53.3","53.6","53.9","99.11","174.48"],"inordertraversal":["53.5"],"postordertraversal":["53.8"],"n为树的节点数":["53.10","53.12"],"空间复杂度":["53.10","53.12","55.5"],"levelorder":["53.10"],"空间复杂度o":["53.11"],"mindepth":["53.11"],"有一个递归调用的栈":["53.12"],"所以为":["53.12"],"n也是为二叉树的最大深度":["53.12"],"字典":["54.1"],"链表":["54.1"],"排序":["54.2"],"rec":["55.1","55.2"],"arr":["55.1","55.2","56.5","125.5","131.1","131.3","131.4","131.6","173.2","173.39","173.58","173.59","173.99","174.4","174.8","174.23","284.84","285.4","285.6","285.7","285.9","285.10","285.13","286.12"],"递归终点":["55.1"],"获取中间索引":["55.1"],"mid":["55.1"],"quicksort":["55.2"],"如果数组长度小于等于1":["55.2"],"就不用排序了":["55.2"],"insertionsort":["55.3"],"遍历数组":["55.3"],"从第二个开始":["55.3"],"array":["55.4","55.5","65.16","127.13","127.37","131.1","131.2","131.3","131.4","131.5","131.6","174.4","174.20","174.48","174.64","176.5","181.0","184.33","252.5","283.2","286.14","288.2"],"selectionsort":["55.4"],"bubblesort":["55.5"],"空间复杂度也是用大":["56.1"],"占用越少":["56.2"],"单个变量":["56.3"],"所以占用永远是":["56.3"],"添加":["56.4","86.6","97.61"],"个值":["56.4"],"就是二维数组的意思":["56.5"],"判断是否能成为回文字符串":["57.2"],"示例":["57.2","113.7","156.11"],"对称性":["57.3"],"双指针":["57.3"],"这两个工具一起上":["57.3"],"足以解决大部分的回文字符串衍生问题":["57.3"],"回到这道题上来":["57.3"],"我们首先是初始化两个指针":["57.3"],"一个指向字符串头部":["57.3"],"j分别为左右指针":["57.4"],"j":["57.4","170.15"],"可以搜索文字或正则表达式字符串":["57.6"],"这个":["57.7","103.16","115.0","168.16","195.9"],"它既可以搜索文字":["57.7"],"又可以搜索正则表达式":["57.7"],"因此我们在搜索前需要额外判断一下":["57.7"],"传入的到底是普通字符串":["57.7"],"还是正则表达式":["57.7"],"若是普通字符串":["57.7"],"则直接去":["57.7"],"中查找是否有这个":["57.7"],"若是正则表达式":["57.7"],"则创建一个正则表达式对象":["57.7"],"判断":["57.7","174.6"],"用大":["58.1"],"也就是双层循环":["58.5"],"自此类推":["58.5"],"口诀":["59.1"],"新建一个队列":["59.1"],"并把根节点入队":["59.1"],"把队头出队并访问":["59.1"],"把队头的children挨个入队":["59.1"],"br":["60.0"],"注意":["60.0","71.19","97.61","106.4","148.2","178.6","275.2"],"后面有两个空格":["60.0"],"反斜杠":["60.0"],"backslash":["60.0"],"除了用于转义":["60.0"],"在行尾的反斜杠相当于硬换行":["60.0"],"bar":["60.0","127.43","129.2","173.4","173.5","200.3"],"行内代码":["60.0"],"span":["60.0","190.6"],"我们通常会用一对反引号包裹字符串":["60.0"],"表示":["60.0"],"可以动态计算图表的宽高":["61.0"],"字体等":["61.0","106.3"],"灵活性较高":["61.0"],"当屏幕比例跟":["61.0"],"稿不一致时":["61.0"],"不会出现两边留白情况":["61.0"],"每个图表都需要单独做字体":["61.0"],"间距":["61.0"],"位移的适配":["61.0"],"比较麻烦":["61.0","81.6"],"scale":["61.0","61.13","61.14","101.5","106.37","150.2"],"vh":["61.1"],"maker":["61.2"],"假设设计稿尺寸为":["61.3"],"做之前一定问清楚":["61.3","61.9"],"设计稿的尺寸":["61.3","61.9"],"即":["61.3","99.14","106.32","151.9","152.8"],"网页宽度":["61.3"],"1920px":["61.3","61.9"],"网页高度":["61.3"],"documentation":["61.5"],"breaking":["61.5"],"changes":["61.5","111.2"],"slash":["61.5"],"div":["61.5","104.0","106.51","147.5","153.12","154.20","156.14","190.0","216.2","241.9","286.71"],"默认设计稿的宽度":["61.5"],"designwidth":["61.5","61.7"],"默认设计稿的高度":["61.5","61.6"],"designheight":["61.5","61.6","61.7"],"px":["61.5","61.6","101.5","286.33"],"px2vw":["61.6"],"100vw":["61.6"],"px2vh":["61.6"],"npm":["61.8","67.10","68.13","69.2","69.10","70.0","72.5","74.2","74.9","75.5","77.0","83.3","84.3","85.7","85.8","86.2","87.5","87.26","87.31","87.32","96.9","97.3","97.6","97.9","97.11","97.12","97.15","102.5","114.8","142.1","142.3","142.4","142.5","142.7","142.8","142.9","142.13","142.14","142.15","142.17","142.18","142.20","142.22","142.23","142.25","142.28","145.3","152.24","154.11","154.17","154.18","184.27"],"save":["61.8","89.6"],"引入工具包在组件中使用或者在单独的":["61.8"],"中使用":["61.8","177.10","178.7","179.26"],"import":["61.8","64.19","87.17","87.42","88.2","89.6","95.13","95.22","95.26","95.42","97.5","97.8","99.8","100.3","102.1","103.6","109.7","110.2","154.13","154.15","154.18","154.20","156.9","156.19","156.20","156.21","169.3","178.7","184.17","205.2","228.1"],"resizedetector":["61.8"],"封装":["61.8","252.6"],"directive":["61.8","235.1"],"这里我们就需要封装一个工具函数":["61.9"],"来处理图表中文字自适应了":["61.9"],"默认情况下":["61.9"],"这里以你的设计稿是":["61.9"],"为例":["61.9","178.7"],"即网页宽度是":["61.9"],"把这个函数写在一个单独的工具文件":["61.9"],"时":["61.11","61.16","151.7","184.18","203.2"],"页面能刚好全屏展示":["61.11","61.16"],"内容占满显示器":["61.11","61.16"],"screen":["61.12","61.14","97.35","106.35"],"wrapper":["61.12","220.2"],"设计稿高度":["61.13"],"documentelement":["61.13","279.8"],"clientwidth":["61.13","279.8"],"clientheight":["61.13","156.3","279.8"],"designdraftwidth":["61.13"],"designdraftheight":["61.13"],"vw":["61.15"],"css3":["61.17"],"中新增的一个大小单位":["61.17"],"即相对于根元素":["61.17"],"值的大小":["61.17"],"自适应思路":["61.17"],"动态的计算出页面的":["61.17"],"fontsize":["61.17"],"从而改变":["61.17"],"在项目根目录新建":["61.18"],"postcssrc":["61.18"],"配置文件":["61.18"],"module":["61.18","95.9","95.13","96.6","97.26","97.32","97.59","127.54","140.0","140.5","140.8","140.12","140.13","154.2","154.4","154.5","154.16","177.7","177.8","193.4","226.1","227.1"],"exports":["61.18","96.6","97.26","97.32","97.39","97.59","127.9","140.5","154.2","154.4","154.5","154.16","173.87","177.7","291.2"],"plugins":["61.18","64.19","95.33","96.5","154.16","177.8","214.0"],"autoprefixer":["61.18","95.29"],"unittoconvert":["61.18"],"string":["61.18","64.8","97.35","99.6","100.2","103.15","112.2","127.37","156.15","173.25","173.68","173.69","173.70","174.20","179.25","183.4","184.33","185.6","214.2","218.4","218.5","221.4","228.2","230.2","231.4","232.2","236.1","239.3","243.1","243.2","245.3","251.2","252.5"],"要转换的单位":["61.18"],"默认是":["61.18"],"需要什么直接图表直接在上面去找":["61.19"],"可以省去很多查":["61.19"],"echarts":["61.19"],"消灭console":["62.0"],"我们首先需要通过ast查看语法树的结构":["62.1"],"我们以下面的console为例":["62.1"],"字面量":["62.2"],"是代表整个程序的节点":["62.3"],"它有":["62.3"],"是语句":["62.4"],"是表达式":["62.5"],"callexpression表示调用表达式":["62.5"],"是标识符的意思":["62.7"],"我们这里的log就是一个字符串字面量":["62.8"],"但是它们也有一些公共的属性":["62.9"],"type":["62.9","64.4","64.7","64.8","64.10","64.22","87.4","89.6","95.23","127.54","151.5","152.8","166.5","166.6","173.46","179.56","183.0","183.2","183.4","184.13","214.1","214.3","216.3","217.0","219.10","221.4","222.3","230.2","231.1","236.1","236.4","236.7","240.1","241.7","252.3"],"ast节点的类型":["62.9"],"babel":["62.10","64.15","64.16","64.19","64.21","64.22","64.24","64.25","87.41","102.0","113.6","205.4"],"traverse":["62.10"],"可以遍历ast":["62.10"],"它记录了父子节点的引用":["62.11"],"还有很多增删改查":["62.11"],"表示获取某个属性的path":["62.12"],"matchespattern":["62.12"],"检查某个节点是否符合某种模式":["62.12"],"所以增加env参数":["62.13"],"ast的第二个参数opt中有插件传入的配置":["62.13"],"传一个数组":["62.14"],"可以去除想要去除的console类型":["62.14"],"isarray":["62.14","174.4","283.2","286.14","288.2"],"arg":["62.14","236.2"],"remove前缀注释的console":["62.15"],"和带有reserse后缀注释的console保留不被删除":["62.15"],"之前我们提到":["62.15"],"babel给我们提供了leadingcomments":["62.15"],"前缀注释":["62.15"],"和trailingcomments":["62.15"],"后缀注释":["62.15"],"我们可以利用他们":["62.15"],"由ast可知":["62.15"],"她和callexpression同级":["62.15"],"所以我们需要获取他的父节点":["62.15"],"然后获取父节点的属性":["62.15"],"path":["62.15","64.17","96.5","97.56","97.57","154.5","154.8","154.10","154.17","167.0","222.7"],"parentpath":["62.15"],"获取父path":["62.15"],"node":["62.15","64.17","68.10","69.10","70.0","72.5","74.7","80.3","86.7","87.15","87.18","97.23","102.0","174.48","176.4","177.14","179.26","204.6","214.0","214.3"],"获取当前节点":["62.15"],"exclude":["62.15","181.0","184.28"],"env":["62.15","74.8","82.1","96.14","154.16","166.5"],"opts":["62.15","236.6"],"测试1":["62.16"],"remove":["62.16","206.1"],"line":["62.17","99.7","100.2","106.22","106.46","204.3","241.4"],"currentline":["62.17"],"我们只需要判断是否存在belongcurrentline":["62.18"],"如果存在belongcurrentline":["62.18"],"表示不能将其当作前缀注释":["62.18"],"新建":["62.21"],"在代码语法的检查":["63.0"],"代码风格的检查":["63.0"],"代码的格式化":["63.0"],"代码的高亮":["63.0"],"代码错误提示":["63.0"],"代码自动补全等等场景均有广泛的应用":["63.0"],"以前我们在做小学语文题时":["63.0"],"经常会做到的一种题型就是在一句话中找出不恰当的部分":["63.0"],"你是猪":["63.0","64.3"],"手写编译器":["64.0"],"构建ast":["64.2"],"抽象语法树":["64.2"],"一系列操作":["64.2"],"transformation":["64.2"],"转化过程":["64.2"],"这个过程就是将上一步解析后的内容":["64.2"],"按照编译器指定的规则进行处理":["64.2"],"tokens是一个放置对象的数组":["64.3"],"其中的每一个对象都可以看做是一个单元":["64.3"],"数字":["64.3","130.7","179.24","284.60"],"标点":["64.3"],"操作符":["64.3"],"的描述信息":["64.3"],"结合最开始做的语文题目":["64.3"],"我们照葫芦画瓢":["64.3"],"对":["64.3","248.1"],"数字片段节点":["64.4"],"numberliteral":["64.4","64.8","64.9","64.10"],"调用语句节点":["64.4"],"callexpression":["64.4","64.9","64.10","64.11","64.15"],"subtract":["64.4"],"params":["64.4","64.10","214.2","294.1"],"生成代码":["64.5"],"最后就是代码生成阶段了":["64.5"],"开始手写编译器":["64.6"],"最终生成的tokens":["64.7"],"循环遍历input":["64.7"],"char":["64.7"],"如果字符是开括号":["64.7"],"我们把一个新的token放到tokens数组里":["64.7"],"类型是":["64.7"],"paren":["64.7"],"现在就是遍历出每一个token":["64.8"],"根据其类型生成对应的节点":["64.8"],"stringliteral":["64.8","64.17"],"exit":["64.9","214.1","214.3"],"transformed":["64.10"],"program":["64.10"],"expressionstatement":["64.10","64.11"],"callee":["64.10","64.11","64.15","214.1"],"如果是声明语句注意看新的ast结构":["64.11"],"那么在声明语句中expression":["64.11"],"就是声明的标示":["64.11"],"我们以他为参数再次调用codegenerator":["64.11"],"如果是调用语句":["64.11"],"我们需要打印出调用者的名字加括号":["64.11"],"中间放置参数如生成这样":["64.11"],"arguments":["64.11","111.4","173.91","179.27"],"先将源代码转化成":["64.12"],"遍历":["64.12","179.55","236.2"],"上的节点":["64.12"],"找到":["64.12"],"函数名节点并修改":["64.12"],"将转换过的":["64.12"],"再生成":["64.12"],"代码":["64.12","177.9","205.4","279.1","279.7","279.9","279.10"],"将源代码拷贝到":["64.12"],"d":["64.13","65.10","68.6","69.10","81.1","81.2","96.14","102.5","119.11","127.49","154.11","154.15","154.17","284.38","284.41","284.45","284.47","284.50","284.51","284.62","286.13"],"使用插件":["64.13"],"core":["64.13","64.15","64.16","64.21","64.22","283.10"],"require":["64.13","64.15","64.16","64.21","64.22","87.17","88.2","95.9","96.10","140.0","141.2","141.4","141.6","154.5","154.8","154.10","154.17","173.87"],"babel核心模块":["64.13","64.15","64.16","64.21"],"arrowfunctionplugin":["64.13"],"生成一个块语句":["64.14"],"并将内容return":["64.14"],"查看运行后的结果":["64.14"],"再来看如果存在":["64.14"],"this":["64.14","64.17","99.11","108.2","111.4","112.1","127.4","127.55","131.1","131.2","131.3","131.4","131.5","131.6","131.10","140.5","173.3","173.9","173.85","176.18","178.4","178.6","179.13","179.28","195.9","196.9","204.3","206.8","206.16","209.3","222.7","252.5","256.4","283.3","283.11","286.49"],"的情况":["64.14"],"原插件":["64.14"],"转换后的结果":["64.14"],"老套路":["64.14"],"我们先得知道":["64.14"],"转化后的代码的ast":["64.14"],"源代码的ast":["64.14"],"之间的差异":["64.14"],"这里就不贴图了":["64.14"],"大家可以自己动手看一看比较一下":["64.14"],"整体思路":["64.14","64.18"],"第一步":["64.14","64.15","64.18"],"找到当前箭头函数要使用哪个作用域内的":["64.14"],"暂时称为父作用域":["64.14"],"第二步":["64.14","64.15","64.18","209.9"],"往父作用域中加入":["64.14"],"变量":["64.14","140.3"],"也就是添加语句":["64.14"],"第三步":["64.14","64.15","64.16"],"找出当前箭头函数内所有用到":["64.14"],"的地方":["64.14"],"第四步":["64.14","64.16","64.22"],"将当前箭头函数中的":["64.14"],"统一替换成":["64.14"],"具体思路":["64.14"],"从当前节点开始向上查找":["64.14"],"直到找到一个不是箭头函数的函数":["64.14"],"最后还找不到那就是根节点":["64.14"],"新增":["64.14","115.0"],"hoistfunctionenvironment":["64.14"],"函数":["64.14","64.18","102.0","130.4","156.1","156.2","156.6","163.0","223.1","236.0","241.3","246.3","246.4","248.2","258.2","259.2"],"确定当前箭头函数要使用哪个地方的this":["64.14"],"thisenv":["64.14"],"我们只需处理这一块即可":["64.15"],"image":["64.15","64.16","67.16","68.10","104.0","110.2","111.2","114.24","114.29","122.21","127.28","150.12","154.17","169.3","180.1","191.0","205.2","263.2"],"png":["64.15","64.16","67.17","99.4","102.2","104.0","152.21","152.23","158.5","164.5","169.3","181.0","191.0","205.2"],"思路":["64.15"],"先找出":["64.15"],"节点的部分":["64.15"],"判断是否是这几个方法名中的某一个":["64.15"],"info":["64.15"],"warn":["64.15","216.3","219.6"],"error":["64.15","97.13","98.13","162.3","175.12","205.6","206.14","220.2"],"往节点的":["64.15"],"中添加参数":["64.15"],"我们先观察console":["64.15"],"log部分的ast":["64.15"],"看完思路也就出来了":["64.15"],"先找":["64.15"],"类型的节点":["64.15"],"然后再找出节点中的":["64.15"],"属性":["64.15","115.0","147.2","147.5","171.0","179.12","181.0","225.0","250.3"],"types":["64.15","64.16","141.2","286.51","286.53"],"后面直接使用该变量名即可":["64.16"],"如果没有引入我们就在源代码的顶部引用一下":["64.16"],"在函数中插入引入的函数":["64.16"],"导入的方式总共有三种":["64.16"],"logger2":["64.16"],"logger1":["64.16"],"logger4":["64.16"],"logger3":["64.16"],"as":["64.16","95.42","103.6","104.0","107.2","109.7","137.0","166.3","178.7","206.1","206.8","206.9","214.1","214.3","216.2","216.3","219.3","219.10","235.4","236.4"],"logeer6":["64.16"],"logger5":["64.16"],"要判断源代码中有没有引入":["64.16"],"其实就是查找":["64.16"],"节点后面有没有":["64.16"],"老规矩":["64.16"],"查看这三种导入方式的":["64.16"],"发现不管哪种导入方式":["64.16"],"我们都可以通过节点的":["64.16"],"value属性获取导入的库名":["64.16"],"specifiers":["64.16"],"local":["64.16","107.4","177.13"],"name属性获取导入的变量名":["64.16"],"上代码":["64.16"],"用来生成或者判断节点的ast语法树的节点":["64.16"],"sourcecode":["64.16","64.21"],"遍历开始之前":["64.17"],"pre":["64.17","79.0","97.45","106.41","218.8"],"state":["64.17","89.6","89.13","111.2","132.1","157.2","176.18","178.4","179.55","179.59","209.3","209.7","216.4","241.1","241.10"],"visitor":["64.17","64.24"],"遍历结束后":["64.17"],"post":["64.17","79.0","98.7","133.4","138.36","175.4","179.46"],"压缩后希望将getage":["64.18"],"name这些命名进行压缩":["64.18"],"需要捕获那些能够生成作用域的节点":["64.18"],"类的函数":["64.18"],"函数表达式":["64.18"],"语句块":["64.18"],"for等":["64.18"],"因为只要有作用域":["64.18"],"就有可能会使用变量":["64.18"],"给这些作用域内的捕获到的变量重新命名":["64.18"],"进行简化":["64.18"],"这里引入一个新的知识点":["64.18"],"bindings":["64.18"],"它是变量引用的集合":["64.18"],"比如在下面这个例子中":["64.18"],"scopeonce":["64.18"],"bundle":["64.19"],"rules":["64.19"],"test":["64.19","65.1","66.3","127.40","173.9","241.3","241.6"],"loader":["64.19","81.1","154.1","154.16","177.6","179.54","193.1","193.4","217.0","217.4","217.8"],"options":["64.19","154.16","156.23","175.1","175.9","195.4","204.2","206.15","210.2","221.3","235.4","239.2","239.3","239.5","241.6","241.10","286.51","286.53"],"我们自己手写的babel":["64.19"],"plugin":["64.19","69.3","81.6","95.3","95.22","97.22","97.32","102.4","102.5","154.4","154.5","154.11","154.15","154.17","177.6","193.8","235.4"],"import插件":["64.19"],"dirname":["64.19","140.4","140.5","141.8","154.16"],"libraryname":["64.19","96.5"],"源代码":["64.19"],"flatten":["64.19"],"concat":["64.19","125.4","179.62","285.10"],"还是有一定的难度":["64.20"],"不过既然大家都能坚持到这里":["64.20"],"相信一定也没有问题":["64.20"],"这里先说一个题外话":["64.20"],"typeannotationmap":["64.21"],"tsnumberkeyword":["64.21","64.22"],"判断变量的左侧变量的类型和右侧的值的类型是否相同":["64.22"],"transformtype":["64.22"],"switch":["64.22","177.10","231.1","295.1"],"case":["64.22","95.40","107.4","206.1","206.8","231.1","295.1"],"numbertypeannotation":["64.22"],"t":["64.23","67.6","114.13","127.49","133.5","184.32","206.8","225.4","243.1","243.2","250.1","255.0"],"w":["64.23","133.6","177.7"],"尽可能的对此做出了优化":["64.24"],"方法是如果合并多个":["64.24"],"能够在单次遍历做完所有事情的话那就合并它们":["64.24"],"及时合并访问者对象":["64.24"],"当编写访问者时":["64.24"],"若逻辑上必要的话":["64.24"],"identifier":["64.25","214.2"],"当上述代码在每次调用":["64.25"],"时都会创建新的访问者对象":["64.25"],"使得":["64.25"],"变得更大并且每次都要去做验证":["64.25"],"这也是代价不菲的":["64.25"],"所以最好把访问者向上提升":["64.25"],"假设我们要从":["64.26"],"classdeclaration":["64.26"],"中查找":["64.26"],"constructor":["64.26","99.11","157.0","173.85","178.4","209.3","283.11"],"classmethod":["64.26"],"从入门到实践":["65.0"],"现代持续的软件开发导致了开发者需要持续的build":["65.1"],"runner给理解成":["65.4"],"gitlab":["65.4","65.13","65.17","65.21","67.2","67.7","68.0","68.7","68.9"],"ci":["65.4","65.13","65.33","67.8","78.0"],"无需多余操作":["65.6"],"runner官方文档":["65.8"],"run":["65.8","65.10","65.30","67.10","68.6","70.0","72.5","75.4","75.6","113.7","114.14","144.6","148.3","246.3","275.2"],"runner镜像":["65.10"],"yaml":["65.10","65.11","72.1"],"docker":["65.10","68.2","68.5","113.4","114.6","114.17","114.22","114.24","114.25","114.27","114.28"],"registration":["65.11"],"tag":["65.11","88.2","119.10","214.1","215.2","231.2","241.1","241.8","241.10"],"为当前runner的标签":["65.11"],"在配置流水线job的时候使用":["65.11"],"在此可随意配置不同的标签名":["65.11"],"repo的根目录创建一个文件":["65.12"],"命名为":["65.12","97.61"],"并将其push到master分支":["65.12"],"red":["65.15","65.16","106.2"],"blue":["65.16","88.2","104.0"],"根据配置的":["65.17"],"这个my":["65.18"],"job的任务名是可以自定义起的":["65.18"],"my":["65.18"],"job":["65.18","65.30","65.35","65.36","68.13"],"only":["65.18","65.35","67.10","115.0","206.1","206.5","214.2","219.10"],"以数组形式配置":["65.19"],"pipeline":["65.19"],"在所有的流水线任务执行之前需要执行的脚本":["65.20"],"branch":["65.21","214.3"],"predefined":["65.21"],"reference":["65.21"],"任何相关的代码运行环境镜像皆可":["65.22"],"stages会依次执行":["65.23"],"如果前一个stage的任务没有运行完":["65.23"],"后面的stage不会被触发":["65.23"],"一旦有一个stage中的任务fail掉了":["65.23"],"下一个stage的任务便不会执行":["65.23"],"如果当前stage定义了多个任务":["65.23"],"那么其中一个任务失败":["65.23"],"在我们自定义单个流水线任务时可以配置":["65.24"],"目录":["65.25","254.2"],"etc":["65.25","68.8","114.12"],"可配置选项":["65.27"],"常用的几个":["65.27"],"分支名":["65.27"],"特定分支change的时候触发":["65.27"],"pushes":["65.27","65.35"],"关键词下可以进行if语句配置":["65.28"],"如果if满足的话可执行某些自定义配置":["65.28"],"会在流水线任务demo2中和":["65.28"],"整个流水线正常运行的前提是其":["65.29"],"配置中的":["65.29"],"on":["65.30","72.5","103.8","103.9","206.1","206.8","206.9","206.12","214.1","214.3","219.10","236.4"],"success":["65.30","127.12","175.12"],"default":["65.30","67.3","89.6","96.5","114.12","156.11","166.5","166.6","195.8","209.3","216.2"],"所有之前stage的任务都执行成功了才执行当前stage的任务":["65.30"],"在执行脚本时使用哪个runner":["65.31"],"什么的会显示报错":["65.32"],"xxx":["65.32","88.2","115.0","144.0","156.1"],"config":["65.32","68.8","69.3","95.9","95.13","97.13","113.6","116.2","116.3","116.4","166.5","166.6","177.8","191.1","191.2","191.3","193.2","195.4","235.4"],"yml文件中会显得很臃肿":["65.33"],"解决方法是拆分多个任务到不同的模块":["65.33"],"运行示例":["65.34"],"fourth":["65.35","65.36"],"fifth":["65.35","65.36"],"自定义任务1":["65.35"],"设置使用fe":["65.35"],"tags标签的shared":["65.35"],"runner":["65.35","68.7","68.12","246.3"],"tags":["65.35","68.13"],"yehanli":["65.35"],"当前任务需要执行的脚本":["65.35"],"modules":["65.36","68.13","86.7","87.18","97.7","102.0","113.6","142.24"],"在这里写出需要缓存的文件的路径":["65.36"],"在此为node":["65.36"],"paths":["65.36","68.13"],"自定义stages":["65.36"],"stages":["65.36","68.10"],"first":["65.36","98.4","115.0","148.5","151.4","152.18","231.1","236.4"],"stage":["65.36","67.10","68.13","115.0"],"second":["65.36"],"third":["65.36"],"include":["65.36","137.0","181.0","184.28"],"build":["65.36","66.3","70.0","87.20","114.22","178.7","214.2"],"deploy":["65.36","68.13","73.0","97.61"],"不需要复杂的安装手段":["66.1"],"配置简单":["66.1"],"合并开发人员正在开发编写的所有代码一种做法":["66.2"],"每次我们打tag":["66.3"],"和打版本都会显示几个圆圈":["66.3"],"定义了两个阶段":["66.3"],"一个":["66.3","168.20"],"开始编译":["66.4","193.9"],"代码测试":["66.4"],"单元测试":["66.4"],"可以在本阶段进行":["66.4"],"cd":["67.0","275.2"],"流程":["67.0","221.7"],"什么是ci":["67.0"],"代码后":["67.1"],"delivery":["67.2","72.0"],"环节":["67.2"],"内置了":["67.2"],"cicd":["67.2"],"conf配置":["67.3"],"server":["67.3","67.11","95.46","114.11","126.3","126.5","138.26","138.40","159.2","159.5","175.12","176.16","216.2"],"listen":["67.3","68.11","114.11","126.5","138.26"],"localhost":["67.3","68.11","114.11","126.4","134.3","136.7","154.2"],"charset":["67.3","68.11","114.11","160.0","168.3","175.2","286.47"],"koi8":["67.3","68.11"],"r":["67.3","68.11","74.3","127.9","127.41","279.8","286.27"],"access":["67.3","68.11","107.4","137.0","159.13"],"host":["67.3","67.11","114.3","154.2","179.44"],"usr":["67.3","85.2","85.3","177.13"],"share":["67.3","114.12"],"htm":["67.3"],"在gitlab新建的项目的ci":["67.4"],"1gitlab上项目中ci":["67.5"],"keygen":["67.6"],"rsa":["67.6"],"配置让gitlab服务器和前端代码服务器之间可以免密登录具体免密登录操作如下":["67.6"],"登录服务器":["67.6"],"pull":["67.7","71.16","72.0","72.2","113.6","114.21"],"latest":["67.7","72.5","97.22","114.8"],"停止并删除现有容器":["67.7"],"register":["67.8","68.8","133.2"],"接下来会提示你进行一系列的操作":["67.8"],"please":["67.8"],"enter":["67.8"],"coordinator":["67.8"],"e":["67.8","127.49","133.3","133.5","156.15","173.1","195.9","241.9"],"g":["67.8","70.0","72.5","114.29","114.30","127.20","177.7","178.8","241.9","286.37","286.60"],"将你所需要发布的项目下新建一个":["67.9"],"chrome67":["67.10"],"headless":["67.10"],"record":["67.10","152.16","214.2","228.2","245.3"],"b2a22185":["67.10"],"8eeb":["67.10"],"4f0e":["67.10"],"9b21":["67.10"],"2d61f769d8c7":["67.10"],"demo":["67.11","106.48","106.49","106.51","270.0"],"3注意":["67.12"],"在webpack项目中配置导出的文件名为你需要同步的文件夹的名称":["67.12"],"打包构建":["67.13"],"然后在gitlab项目中的ci":["67.14"],"点击状态或者阶段都可以进入构建发布详情页面查看内容":["67.15"],"至此":["67.17","95.48"],"shell":["68.1","74.0","77.1","275.2"],"脚本":["68.1"],"fssl":["68.1"],"用户登陆":["68.4"],"安装好":["68.7"],"后":["68.7","70.0","127.12","195.9"],"non":["68.8","215.2"],"slim":["68.10"],"分段":["68.10"],"eslint":["68.10","69.3","83.2","86.6","87.24","89.6","95.7","95.8","95.9","97.19","97.30","154.4","154.10","154.17","195.4","204.3"],"dockerfile":["68.12"],"会根据这个文件创建一个的":["68.12"],"缓存":["68.13","177.11"],"dist":["68.13","73.0","81.3","97.23","154.16"],"husky":["69.0","69.10","97.45"],"代码规范":["69.1"],"git规范":["69.4"],"git":["69.8","69.9","71.7","71.16","71.24","73.0","81.3","97.41","97.46","97.57","116.3","116.4","118.1","119.3","119.6","119.8","145.6","275.2"],"钩子的工具":["69.8"],"prepare":["69.9"],"初始化husky":["69.9"],"hooks":["69.9","208.7","220.2","236.6"],"钩子交由":["69.9"],"husky执行":["69.9"],"msg":["69.10","92.0","95.20","99.7","99.8","133.3"],"钩子执行":["69.10"],"消息校验":["69.10"],"我们也可以使用自己写的方法":["69.10"],"设置的话使用一下指令":["69.10"],"npx":["69.10","97.41"],"dir":["69.10"],"filename":["69.10","88.2","100.2","154.16","227.1"],"指定目录文件":["69.10"],"安装辅助提交依赖":["69.10"],"commitizen":["69.10"],"cz":["69.10","97.57"],"conventional":["69.10"],"changelog":["69.10"],"安装指令和命令行的展示信息":["69.10"],"测试":["69.11","72.0","254.19"],"测试三部曲":["69.12"],"文档":["69.13"],"根据需求添加内容":["69.13"],"增加node服务器内存限制":["70.0"],"安装":["70.0"],"进入工程目录执行":["70.0"],"在执行上述操作后":["70.0"],"然后执行":["70.0","252.6"],"会报错":["70.0","144.1"],"old":["70.0","206.0","222.3","288.4"],"space":["70.0","92.0"],"size":["70.0","96.4","106.24","106.26","170.11","171.0","254.23","286.72"],"不是内部或外部命令":["70.0"],"也不是可运行的程序":["70.0"],"在高版本中移除了":["70.0"],"介绍":["71.0"],"引用方必须有子模块的读权限":["71.1"],"组织内部协作":["71.2"],"那么这些文件可以作为":["71.3"],"来管理":["71.3"],"减少重复代码":["71.3"],"该场景下npm包是另一解决方案":["71.3"],"submodules":["71.4"],"创建git仓库b":["71.5"],"在git仓库a中":["71.5"],"通过git":["71.5"],"submodule":["71.6","71.12","71.15","71.17","71.24"],"仓库的名字":["71.6"],"这个文件夹里面的内容":["71.6"],"仓库中":["71.7"],"被当作":["71.7"],"gitmodules":["71.8"],"主项目还保存了对应":["71.9"],"仓库提交更新":["71.11"],"之前说过":["71.12","140.5"],"a里面包含":["71.13"],"git文件夹":["71.13"],"readmd":["71.13"],"此时主项目a中所记录的":["71.14"],"当我们更新子项目后":["71.18"],"submodule文件夹相对路径":["71.19"],"这个方法会使":["71.19"],"包含":["71.20"],"先git":["71.21","71.23"],"clone":["71.21","71.23","119.2","275.2"],"3步可以合并":["71.22"],"使用以下命令":["71.22"],"cd到主项目":["71.25"],"的平台":["72.0"],"它可以做到自动化构建":["72.0"],"部署":["72.0"],"你可以创建工作流":["72.0"],"构建和测试每一个":["72.0"],"你需要定义一个":["72.1"],"比如创建一个":["72.2"],"一个步骤":["72.3"],"要么是一个shell":["72.3"],"平台的一个自定义的应用":["72.4"],"创建一个文件":["72.5"],"名为":["72.5"],"learn":["72.5","73.0"],"yml":["72.5"],"添加下面的代码":["72.5"],"jobs":["72.5"],"check":["72.5","206.9","206.14","214.2","215.2"],"version":["72.5","74.3","74.6","114.32","141.6","145.3","235.4"],"runs":["72.5"],"steps":["72.5"],"uses":["72.5","214.2"],"checkout":["72.5","119.4"],"v2":["72.5","263.6"],"setup":["72.5","219.10","220.1","226.1"],"with":["72.5","107.2","162.3","215.2","228.1","241.9"],"提交这些改动":["72.5"],"推送到你的":["72.5"],"vuepress":["73.0"],"init":["73.0","96.6","97.41","114.8","119.1"],"m":["73.0","88.2","119.8","216.2","275.2","279.8","285.13"],"如果发布到":["73.0"],"username":["73.0","125.6"],"io":["73.0","94.10","275.2"],"repo":["73.0"],"f":["73.0","178.8","275.2","284.20"],"mqyqingfeng":["73.0"],"typescript":["73.0","81.1","102.0","186.1"],"master":["73.0"],"gh":["73.0"],"pages":["73.0","195.8","196.14"],"当我们执行":["73.0"],"就会自动往两个仓库里推送":["73.0"],"actions":["73.0","283.11"],"自动同步":["73.0"],"我们也可以利用":["73.0"],"写一个工作流":["73.0"],"在发现":["73.0"],"博客仓库的":["73.0"],"所有的":["74.0"],"都会顺利运行":["74.0"],"windows":["74.0","173.82"],"下面的同学可能就比较痛苦了":["74.0"],"因为不是所有的":["74.0"],"移动":["74.1"],"复制等操作":["74.1"],"而社区为这些基本操作也提供了跨平台兼容的包":["74.1"],"列举如下":["74.1"],"rimraf":["74.1","74.2","74.3"],"mkdir":["74.3","74.6","275.2"],"package":["74.3","74.6","77.2","86.8","87.39","88.1","95.4","95.5","96.14","113.6","142.5"],"cp":["74.3","74.6"],"cross":["74.5","74.8","96.14"],"为开发依赖":["74.5"],"coverage":["74.6"],"nyc":["74.6"],"output":["74.6","154.16","177.6"],"archive":["74.6"],"到开发依赖":["74.8"],"改写使用了环境变量的":["74.9"],"所有使用引号的地方":["74.10"],"建议使用双引号":["74.10"],"并且加上转义":["74.10"],"没做特殊处理的命令比如":["74.10"],"串行":["75.1"],"并行":["75.2"],"里面同时发起多个异步请求非常类似":["75.3"],"它只负责触发多条命令":["75.3"],"xxx1":["75.6"],"依赖":["76.1"],"使用如下命令安装":["76.1"],"创建":["76.2","177.13","178.5"],"脚本中使用任何":["76.3"],"npmjs":["76.3"],"上能找到的包":["76.3"],"清理归档目录":["76.3"],"运行测试":["76.3"],"归档并预览覆盖率报告的完整":["76.3"],"代码如下":["76.3","127.25","127.31"],"集成到":["77.1"],"能不能补全":["77.2"],"json":["77.2","80.2","87.10","87.16","87.34","87.39","87.43","96.14","97.40","97.52","97.57","99.10","113.6","133.3","159.5","159.9","175.4","288.5","294.1","296.3"],"里面的依赖名称":["77.2"],"类似":["78.0","87.40","193.7"],"不同之处在于":["78.0"],"旨在用于自动化环境":["78.0"],"例如测试平台":["78.0"],"持续集成和部署":["78.0"],"cd或生产发布时":["78.1"],"最好使用":["78.1"],"的设计者为命令的执行增加了类似生命周期的机制":["79.0"],"具体来说就是":["79.0"],"首先会去查找":["80.1"],"lock":["80.2","113.6","142.26","166.9"],"存在":["80.2","258.8"],"会先检查下是否有缓存资源":["80.3"],"如果存在缓存资源的话":["80.3"],"那么直接将缓存资源解压到":["80.3"],"那么这个文件是干什么的呢":["80.4"],"我们都知道":["80.4"],"前言":["81.0","154.0"],"学会发包可以避免我们在项目开发中重复造轮子的现象":["81.0"],"当我们开发了通用的组件或者工具库后可以将其发布到":["81.0"],"然后根据命令行提示输入项目名称":["81.1"],"选择框架":["81.1"],"选择语言":["81.1"],"我这边选择的是":["81.1"],"项目创建后先安装依赖":["81.1"],"less":["81.1","97.17","97.40","154.14","179.8","195.4"],"or":["81.2","96.6","109.6","137.0","206.14","219.3","222.7","241.9"],"yarn":["81.2","81.5","87.20","94.5","97.2","154.1"],"配置":["81.2","95.22","154.10","177.13","221.2"],"vite":["81.2","87.24","95.22","96.14","97.61"],"选填":["81.3"],"entry":["81.3","154.4","154.5","154.7","154.16","177.6"],"point":["81.3"],"入口文件路径":["81.3"],"路径就是我们打包后的目录文件":["81.3"],"lib":["81.3","101.3","186.3"],"repository":["81.3"],"仓库地址":["81.3","86.1"],"keywords":["81.3"],"关键词":["81.3"],"author":["81.3"],"作者信息":["81.3","86.1"],"adduser":["81.4"],"命令注册":["81.4"],"完成上面步骤后我们先登录npm账号":["81.4"],"包名":["81.5"],"解决方案":["81.6","178.1"],"可以手动将":["81.6"],"style":["81.6","96.5","106.4","112.1","153.8","156.14","286.69","291.5"],"引入到":["81.6"],"每次打包都需要引一次":["81.6"],"不推荐":["81.6"],"libcss":["81.6"],"插件自动引入":["81.6"],"更新包":["81.7"],"做了大量的优化":["82.0"],"创建并运行":["82.0"],"就能拿到完整的变量列表":["82.1"],"这个列表非常长":["82.1"],"这里我使用":["82.1"],"watch":["83.1","83.4","193.5","195.7","258.10"],"参数":["83.1","236.2","259.3"],"即在代码变化时自动重跑所有的测试":["83.1"],"我们只需要在":["83.1"],"stylelint":["83.2","97.19","97.40"],"按照如下提示添加":["83.4"],"lint":["83.4","84.1"],"但是模式两边使用了转义的双引号":["83.5"],"这样是跨平台兼容的":["83.5"],"scripts":["84.1","94.6"],"中声明检查代码命令的同时你可能也需要声明修复代码的命令":["84.1"],"面对这种需求":["84.1"],"大多数同学可能会忍不住复制粘贴":["84.1"],"为键的值":["84.3"],"注释就可以写在对应的值里面":["84.3"],"会忽略这种键":["84.3"],"命令":["84.4","86.8","114.32","176.19"],"适用于":["84.4","97.20"],"linux":["84.4","87.35","113.3","114.19"],"平台":["84.4"],"我们可以在命令前面加上注释":["84.4"],"运行时日志输出":["84.5"],"可能是你最常用的":["84.6"],"的时候比较有用":["84.7"],"需要使用":["84.7","84.8"],"loglevel":["84.7","84.8"],"秒搭建一个":["85.0"],"社区蓬勃发展的顶梁柱":["86.1"],"为我们提供了快速创建":["86.1"],"文件的命令":["86.1"],"执行该命令会问几个基本问题":["86.1"],"如包名称":["86.1"],"版本号":["86.1"],"入口文件":["86.1","177.6"],"许可协议等":["86.1"],"多数问题已经提供了默认值":["86.1"],"你可以在问题后敲回车接受默认值":["86.1"],"默认的版本号是":["86.2"],"可以用下面的命令去修改默认配置":["86.2"],"作为":["86.3","100.8","169.3"],"内置的核心功能之一":["86.3"],"实际上是":["86.3"],"准备被检查的代码":["86.5"],"做检查需要配置规则集":["86.7"],"存放规则集的文件就是配置文件":["86.7"],"使用如下文件生成配置文件":["86.7"],"运行":["86.9","195.4"],"是前端每个项目都有的":["87.0"],"位于项目的根目录":["87.0"],"包括名称":["87.1"],"如果是第三方包的话":["87.2"],"具体规则如下图所示":["87.3"],"简单介绍一下":["87.3"],"代表主版本号":["87.3"],"官网":["87.5"],"design":["87.6","87.42","109.4"],"组件库的":["87.6","87.42"],"通常是项目":["87.7"],"反馈地址":["87.8"],"通常是":["87.8","134.4"],"项目的版权拥有人可以使用开源许可证来限制源码的使用":["87.9"],"复制":["87.9"],"以及入口等信息":["87.11"],"指定需要跟随一起发布的内容来控制":["87.12"],"包的大小":["87.12"],"避免安装时间太长":["87.12"],"发布时默认会包括":["87.12"],"模块采用":["87.13"],"mjs":["87.13","87.16"],"后缀文件名":["87.13"],"只要遇到":["87.13"],"readme":["87.14","113.6","260.2"],"和main":["87.14"],"字段里指定的文件":["87.14"],"当一个项目同时定义了":["87.16"],"browser":["87.16","214.2","226.1"],"字段可以配置不同环境对应的模块入口文件":["87.17"],"并且当它存在时":["87.17"],"它的优先级最高":["87.17"],"比如使用":["87.17"],"字段根据模块规范分别定义入口":["87.17"],"下面的包":["87.18"],"软链到根目录的":["87.18"],"webpack":["87.20","87.24","154.4","154.5","154.10","154.17","195.4","228.1"],"我们可以使用命令":["87.20"],"里的脚本在运行时的参数":["87.21"],"比如设置":["87.21"],"port":["87.21"],"为":["87.21","106.18","169.3","206.11","256.8","258.8"],"需要在":["87.22"],"react":["87.23","87.28","95.22","115.0","153.5","156.4","156.10","156.19","156.20","156.21","178.0","186.3","207.2","207.10","207.13","208.4","209.1"],"vue":["87.23","87.39","96.2","96.3","97.10","97.14","97.20","97.22","97.38","97.39","97.61","102.0","114.8","154.17","169.3","178.7","179.54","195.7","218.10","227.1","228.2","239.3","254.16","256.1"],"状态管理库以及组件库等":["87.23"],"通常包括项目工程化工具比如":["87.24"],"的正常使用依赖":["87.25"],"x":["87.25","100.1","106.27","127.43","127.45","147.2","168.7","173.85","184.18","214.2","218.8","241.6","286.13"],"版本":["87.25"],"那么":["87.25","87.26","154.3","211.0"],"安装或者引入失败也无妨":["87.26"],"这类依赖如果安装失败":["87.26"],"的整个安装过程也是成功的":["87.26"],"将其指定为可选的":["87.27"],"比如指定":["87.28"],"dom":["87.28","95.22","100.7","153.5","154.20","179.53","181.0","195.9","218.5","218.11","236.5","237.0","239.3"],"为打包依赖":["87.28"],"可以重写项目依赖的依赖":["87.29"],"不希望发布到公共":["87.31"],"包发布时使用的配置":["87.32"],"或者包管理器有特定的版本号要求":["87.34"],"上能正常运行的项目可能在":["87.35"],"使用它们时需要安装对应的第三方库":["87.37"],"typings":["87.38"],"unpkg":["87.40"],"比如在项目中整体引入":["87.42"],"ant":["87.42"],"比如可以在代码提交前执行":["87.43"],"类型检查":["87.43"],"图片优化等操作":["87.43"],"再git":["88.2"],"globals":["88.2"],"chalk":["88.2"],"long":["88.2","148.0","168.20"],"ago":["88.2","114.30"],"there":["88.2","206.8","206.16"],"is":["88.2","132.4","148.1","156.17","173.9","206.8","214.1","215.2","226.1","231.1","236.4","252.5","256.4"],"tiger":["88.2"],"数据权限":["89.0"],"菜单导航栏":["89.1"],"页面":["89.1"],"权限数据录入与展示":["89.2"],"用户资源权限流程图":["89.3"],"与":["89.4","96.4","126.3","127.48","156.2","166.9","172.0","173.63","179.42","206.7"],"因为前端权限控制的实现":["89.4"],"会因为后台接口形式有所影响":["89.4"],"但是大体方向是相同":["89.4"],"menu":["89.5"],"basic":["89.5"],"basicform":["89.5"],"searchtable":["89.5"],"tablelist":["89.5"],"profile":["89.5"],"basicprofile":["89.5"],"advanced":["89.5"],"advancedprofile":["89.5"],"exception":["89.5"],"warning":["89.5"],"notinaut":["89.5"],"true":["89.5","99.9","100.9","127.15","127.20","127.25","127.40","156.17","159.2","162.3","179.33","186.3","195.6","209.12","217.7","222.4","228.3","232.3","236.6","236.7","249.2","255.0","283.1"],"hideinmenu":["89.5"],"disable":["89.6","138.9","204.3","236.6"],"unused":["89.6"],"vars":["89.6","95.40"],"builtins":["89.6"],"getauthority":["89.6"],"services":["89.6"],"authority":["89.6"],"export":["89.6","96.5","98.9","140.0","154.20","156.11","166.8","177.8","184.25","206.0","209.3","210.1","210.2","214.3","220.3","225.4","228.2","239.3","243.1","243.2","252.3","252.6","255.0"],"namespace":["89.6"],"globalauthority":["89.6","89.13"],"hasauthoritycodearray":["89.6"],"获取当前具有权限的资源code":["89.6"],"pagecodearray":["89.6","89.13"],"用来存储当前页面存在的资源code":["89.6"],"effects":["89.6","220.6"],"获取当前页面的权限控制":["89.6","89.13"],"getauthorityforpage":["89.6","89.13"],"payload":["89.6","89.13"],"put":["89.6","89.13"],"select":["89.6","89.13","122.23"],"这里的资源code都是自己加载的":["89.6","89.13"],"yield":["89.6","89.13"],"pluscode":["89.6"],"列表数据可能归属于不同的数据类型":["89.7"],"一栏下用三个按钮":["89.8"],"编辑":["89.8","89.9"],"上架":["89.8"],"下架":["89.8"],"删除":["89.8","89.9","177.7","177.9"],"代表这个按钮的动作类型":["89.9"],"列表接口或者详情接口都会返回一个":["89.10"],"的字段":["89.10"],"它们对应的":["89.11"],"acttype":["89.11"],"分别为2":["89.11"],"需要进行数据转换":["89.12"],"批量操作":["89.13"],"更多操作":["89.13"],"每一个返回的接口权限会将对应的acttype一起返回":["89.13"],"getauthorityforpage代码修改":["89.13"],"简单修改一下":["89.13"],"因为之前返回的是code数组":["89.13"],"现在返回的是对象":["89.13"],"h3":["90.0","106.41"],"h4":["90.0","106.41"],"h5":["90.0","106.41","177.1"],"h6":["90.0","106.41"],"fieldset":["90.0","286.55"],"legend":["90.0","286.55"],"img":["90.0","98.7","102.2","104.0","106.41","263.6","286.1"],"margin":["90.0","91.0","156.14","179.4"],"padding":["90.0","156.14","265.5"],"auto":["91.0"],"zoom":["91.0","179.2"],"水平居中":["91.0","106.44"],"horizontal":["91.0"],"center":["91.0","92.0","179.4","180.2","286.55"],"绝对居中":["91.0"],"相对于固定宽高的容器":["91.0"],"absolute":["91.0","106.45","179.2","179.39"],"white":["92.0"],"nowrap":["92.0","171.0"],"flex样式":["92.0"],"flex":["92.0","156.14","170.15","286.33"],"each":["92.0","97.35","137.0"],"align":["92.0","179.4"],"items":["92.0","153.8"],"justify":["92.0"],"content":["92.0","95.28","106.37","106.40","121.6","131.8","131.9","150.2","168.7","175.12","236.4","241.7"],"数据字典提供统一查询接口":["93.1"],"查询所有字典接口":["93.1"],"查询单个字典数据集合":["93.1"],"bff层说明":["93.2"],"基本结构":["93.2"],"接口查询字段需明确":["93.3"],"列表查询接口对于查询条件的匹配需要明确":["93.3"],"接口返回字段":["93.4"],"转换文本的方式处理":["93.4"],"复杂数据结构处理":["93.5"],"日期格式处理":["93.6"],"错误文本展示":["93.7"],"权限处理":["93.8"],"搭建个人博客":["94.0"],"blog":["94.3"],"docs":["94.6","94.7"],"getting":["94.8"],"本文不对ssr原理深入解释":["95.0"],"通过目标导向技术栈":["95.1"],"每个目标都对应了许多不同的技术栈":["95.1"],"那我们可以快速搭建项目模板了":["95.2"],"ssr":["95.3","95.22","181.0","216.2","226.1"],"cli初始化项目":["95.3"],"且做了依赖优化":["95.5"],"eslint看团队或个人习惯":["95.6"],"define":["95.7","95.9"],"为了方便大家都安装了这些插件":["95.8"],"我把插件写在了":["95.8"],"设置不需要eslint处理的文件":["95.10"],"也可按照团队或个人风格相应修改":["95.11"],"pnpm":["95.12","95.15","95.20","95.24","97.2"],"prettier":["95.13","97.19","97.25","97.32","97.33"],"commit是否符合规范":["95.14"],"leading":["95.16","214.2"],"blank":["95.16","286.69"],"always":["95.16","107.4","206.16","214.2","252.5","256.4"],"footer":["95.16","286.55"],"手动添加只适合咱们了解原理":["95.17"],"目前市面上比较流行的是":["95.18"],"json中配置":["95.20"],"exec":["95.20","114.27","127.42","163.0"],"resolve":["95.21","127.12","132.1","132.2","133.5","140.4","140.5","141.8","148.2","154.16","165.2","167.4","168.12","193.4","204.3","214.1"],"alias":["95.21"],"find":["95.21","98.9","162.3"],"reactdom":["95.22","115.0"],"client":["95.22","126.3","159.9","159.13","175.12","178.7"],"zustand":["95.23"],"创建globalcontext":["95.23"],"usecontext":["95.23"],"globalcontextprops":["95.23"],"pagetype":["95.23"],"pagecontext":["95.23"],"createcontext":["95.23"],"globalcontextprovidertype":["95.23"],"createproxymiddleware":["95.25"],"await":["95.25","103.12","103.17","112.3","148.3","161.0","173.89","176.12","195.8","283.1"],"middleware":["95.25"],"rewritekey":["95.25"],"antd":["95.26","156.7","156.10","156.11","156.18","166.8"],"darkmode":["95.28","96.6"],"jsx":["95.28","97.22","157.0","186.3"],"tsx":["95.28","156.6","156.9","207.12","208.4"],"一个处理css浏览器兼容的插件":["95.29"],"放在最后":["95.29"],"维护成本和难度相比自适应布局更难":["95.31"],"但tailwind使得响应式布局更简单":["95.31"],"我们的网页最大宽度为1920px":["95.32"],"那么在窗口超过1920px后":["95.32"],"rem不再变化即可":["95.32"],"pxtoviewport做不到":["95.32"],"它只能跟随窗口的大小变化":["95.32"],"tailwindcss":["95.33"],"nesting":["95.33"],"一种奇怪的组合":["95.34"],"pxtorem":["95.35"],"如果希望转化":["95.36"],"就用小写px":["95.36"],"pxtoviewport":["95.37"],"extra":["95.40"],"camelcase":["95.40"],"change":["95.40","137.0"],"readfilesync":["95.40"],"matchmedia":["95.42"],"prefers":["95.42"],"color":["95.42","106.2","106.14","156.14","279.8"],"scheme":["95.42"],"matches":["95.42"],"configprovider":["95.42"],"配置主题token":["95.42"],"antdtheme":["95.42"],"所以需要在服务端跟客户端语言同步":["95.43"],"那么服务端就需要在收到客户端请求的时候判断客户端的语言":["95.43"],"此时我们需要使用到":["95.43"],"createi18nextinstance":["95.45","95.46"],"createinstance":["95.45","95.46"],"debug":["95.45","95.46"],"fallbacklng":["95.45","95.46"],"en":["95.45","95.46","120.2","120.3","147.5","151.9","160.0"],"nsseparator":["95.46"],"keyseparator":["95.46"],"interpolation":["95.46","241.6"],"escapevalue":["95.46"],"clienti18next":["95.46"],"serveri18next":["95.46"],"async":["95.46","103.8","103.9","103.15","112.3","112.4","166.7","173.89","178.7","195.8","283.1","283.2","283.9","286.51","286.54","289.1"],"geti18next":["95.46"],"初始化的时候使用到了":["95.47"],"localespaths":["95.49"],"locales":["95.49"],"keystyle":["95.49"],"nested":["95.49"],"ts":["96.0","98.13","103.6","115.0","169.3","182.1","182.2","184.7","184.8","184.10","184.11","184.12","184.32","185.3","185.4","188.0","210.0","210.1","210.2","212.1","216.4","216.6","218.5","220.3","221.3","222.4","222.5","225.4","227.1","230.2","231.4","231.5","231.6","232.4","236.1","241.3","241.9","242.1","243.2","245.3","248.0","252.3","252.6","255.0","256.8","283.10"],"真正的按需编译":["96.1"],"从作者在微博上的发言":["96.1"],"一个基于浏览器原生":["96.1"],"es":["96.1","102.0"],"imports":["96.1"],"的开发服务器":["96.1"],"利用浏览器去解析":["96.1"],"在服务器端按需编译返回":["96.1"],"完全跳过了打包这个概念":["96.1"],"服务器随起随用":["96.1"],"同时不仅有":["96.1"],"文件支持":["96.1","97.37"],"还搞定了热更新":["96.1"],"而且热更新的速度不会随着模块增多而变慢":["96.1"],"针对生产环境则可以把同一份代码用":["96.1"],"rollup":["96.1","195.4"],"打":["96.1"],"虽然现在还比较粗糙":["96.1"],"但这个方向我觉得是有潜力的":["96.1"],"做得好可以彻底解决改一行代码等半天热更新的问题":["96.1"],"中可以看出":["96.1"],"接下来":["96.2"],"我们再修改一下app":["96.2"],"vue的代码":["96.2"],"template":["96.2","96.12","219.10","227.1","238.0","239.2","254.3"],"router":["96.2","97.1","166.4","178.7","179.58"],"about":["96.2","286.69"],"view":["96.2","98.2","195.4"],"createapp":["96.3","97.5","98.13","169.3"],"elementplus":["96.3"],"zindex":["96.4"],"字段":["96.4","138.34"],"用于改变组件的默认尺寸":["96.4"],"设置弹框的初始":["96.4"],"z":["96.4","284.26","284.32"],"dev":["96.5","115.0","214.2","216.2","216.3","219.10","222.3","231.1"],"libs":["96.5"],"element":["96.5","147.5","173.99","214.3","218.4","231.1","232.2","241.8"],"这将会在您的项目根目录创建一个最小化的":["96.6"],"purge":["96.6"],"media":["96.6"],"theme":["96.6"],"extend":["96.6"],"variants":["96.6","97.35"],"目前的大部分公司的项目都是采用的前后端分离":["96.7"],"后端接口的开发和前端人员是同时进行的":["96.7"],"那么这个时候就会存在一个问题":["96.7"],"mockjs":["96.10"],"调用mock":["96.10"],"方法模拟数据":["96.10"],"根据数据模板template生成模拟数据":["96.12"],"使用mock":["96.13"],"random调用函数的方式":["96.13"],"mock介绍":["96.14"],"vbenjs":["96.14"],"渐进式":["97.1"],"框架":["97.1"],"路由模块":["97.4"],"路由配置文件":["97.4"],"关于路由表":["97.4"],"建议根据功能的不同来拆分到":["97.4"],"文件夹中":["97.4"],"好处是":["97.4"],"文件中挂载路由配置":["97.5"],"文件与":["97.7"],"文件夹":["97.7","286.54"],"文件中挂载":["97.8"],"vuex":["97.8"],"tdesign":["97.10"],"来实现自动导入":["97.11"],"表示跨域请求时是否需要使用凭证":["97.13"],"withcredentials":["97.13"],"前置拦截器":["97.13"],"发起请求之前的拦截":["97.13"],"interceptors":["97.13"],"在这里一般会携带前台的参数发送给后台":["97.13"],"比如下面这段代码":["97.13"],"gettoken":["97.13","166.8"],"headers":["97.13","109.1"],"promise":["97.13","133.5","148.2","166.3","167.4","168.12","173.45","176.10","204.3","217.0","217.7","248.1"],"reject":["97.13","127.12","132.1","132.2","133.5"],"参考如下":["97.14"],"样式标签中引用":["97.16"],"lang":["97.16","147.5"],"全局样式文件":["97.17"],"如果继续使用":["97.18"],"v":["97.18","98.9","104.0","142.5","173.87","216.2","218.4","225.0","232.2","235.4","248.1"],"deep":["97.18","125.7","125.8"],"等语法的话":["97.18"],"会出现一个警告":["97.18"],"editorconfig":["97.19","97.28"],"组合来实现代码规范化":["97.19"],"这样做带来好处":["97.19"],"解决团队之间代码不规范导致的可读性差和可维护性差的问题":["97.19"],"解决团队成员不同编辑器导致的编码规范不统一问题":["97.19"],"提前发现代码风格问题":["97.19"],"给出对应规范提示":["97.19"],"及时修复":["97.19"],"减少代码审查过程中反反复复的修改过程":["97.19"],"节约时间":["97.19"],"自动格式化":["97.19"],"统一编码风格":["97.19"],"从此和脏乱差的代码说再见":["97.19"],"集成":["97.19"],"规范编写体验":["97.20"],"文件的":["97.20"],"插件":["97.20","152.24","193.9"],"编辑器使用":["97.21","97.25","97.34"],"parser":["97.22"],"parseroptions":["97.22"],"ecmaversion":["97.22"],"sourcetype":["97.22"],"allowimportexporteverywhere":["97.22"],"ecmafeatures":["97.22"],"extends":["97.22","97.39","97.59","108.2","209.3","250.1"],"airbnb":["97.22","97.30"],"base":["97.22","191.1","191.2","191.3"],"recommended":["97.22","97.32"],"vue3":["97.22"],"essential":["97.22"],"内容如下":["97.23"],"并填入以下内容":["97.26","97.59"],"一行最多":["97.26"],"字符":["97.26"],"printwidth":["97.26"],"个空格缩进":["97.26"],"tabwidth":["97.26"],"不使用缩进符":["97.26"],"过滤规则":["97.27"],"idea":["97.28"],"冲突":["97.30"],"本项目中的":["97.30"],"配置使用了":["97.30"],"中添加":["97.32"],"规则":["97.32","97.35"],"此规则一定要加在最后":["97.32"],"关闭":["97.33","177.13"],"中与":["97.33"],"中会发生冲突的规则":["97.33"],"指定类选择器的模式":["97.35"],"pattern":["97.35","109.4","127.39","206.1"],"禁止空源码":["97.35"],"empty":["97.35","127.24","236.6"],"指定字符串使用单引号":["97.35"],"quotes":["97.35"],"single":["97.35"],"禁止未知的":["97.35"],"at":["97.35","148.4","170.12","206.16"],"rule":["97.35"],"ignoreatrules":["97.35"],"tailwind":["97.35"],"apply":["97.35","111.4","118.4","173.9","214.0","221.1","231.1"],"responsive":["97.35"],"在项目根目录添加一个":["97.36"],"stylelintignore":["97.36"],"解析":["97.38","173.28","173.64","173.67","179.37"],"postcss":["97.38","97.40","154.16","179.8"],"overrides":["97.39"],"设置文件中":["97.40"],"增加以下代码":["97.40"],"validate":["97.40","148.4"],"scss":["97.40"],"官网为准":["97.41"],"命令快速在项目初始化":["97.41"],"初始化仓库":["97.41"],"初始化":["97.41","241.9"],"staged":["97.44"],"配置项":["97.44"],"风格不一致的情况":["97.46"],"如果":["97.46","106.14","106.33","115.0","175.10","256.8","258.3"],"的描述信息精准":["97.46"],"用于说明":["97.47"],"的提交类型":["97.47"],"必须是以下几种之一":["97.47"],"描述":["97.47","122.5","175.12","181.0"],"feat":["97.47"],"新增功能":["97.47","179.44"],"是对本次":["97.48"],"必需":["97.49"],"否则可以省略":["97.49"],"突破性的变更":["97.49"],"available":["97.50"],"when":["97.50","219.10","228.1"],"neither":["97.50"],"commitlint":["97.53"],"进行联动给予校验信息":["97.53"],"所以可以编写于":["97.53"],"在任何项目下都可以利用":["97.54"],"形式添加配置":["97.57"],"本体":["97.58"],"integration":["97.60"],"持续集成":["97.60"],"服务来完成项目部署工作":["97.60"],"新生成的":["97.61"],"只会显示一次":["97.61"],"secret":["97.61"],"将上述创建的":["97.61"],"添加到":["97.61"],"仓库中的":["97.61"],"secrets":["97.61"],"里":["97.61","127.51"],"并将这个新增的":["97.61"],"步骤":["97.61"],"settings":["97.61"],"软件开发工具包":["98.1"],"一般都是一些软件工程师为特定的软件包":["98.1"],"软件框架":["98.1"],"硬件平台":["98.1"],"操作系统等建立应用软件时的开发工具的集合":["98.1"],"为什么需要前端数据埋点":["98.1"],"对产品本身而言":["98.1"],"我们需要关注内容包括如下几个方面":["98.1"],"用户浏览页面次数":["98.2"],"pv":["98.2"],"我们需要获取":["98.3"],"生产环境的错误数据":["98.3"],"这样才能便于开发者及时进行修复":["98.3"],"通常来讲代码中的错误会包含以下几大类":["98.3"],"提升用户体验":["98.4"],"与页面性能指标相关的内容":["98.4"],"在之前的":["98.4"],"前端性能优化到底该怎么做":["98.4"],"上":["98.4","104.0","220.3"],"开门见山":["98.4"],"一文中有提到":["98.4"],"这里大致总结下":["98.4"],"首次绘制":["98.4","151.4"],"paint":["98.4","151.4","152.18"],"fp":["98.4","152.9","152.18"],"在渲染进程确认要渲染当前响应资源后":["98.4"],"渲染进程会先创建一个空白页面":["98.4"],"通常把创建空白页面的这个时间点称为":["98.4"],"简称":["98.4"],"这里只我们考虑数据埋点的核心内容":["98.5"],"因此不会涉及得肯定没有那么全面":["98.5"],"作为一个通用的工具集":["98.6"],"是可供多个系统进行使用的":["98.6"],"而这就意味着需要去保证每个应用的唯一性":["98.6"],"一般来讲":["98.6"],"意味就没法进行收集和统计":["98.7"],"数据等于白给":["98.7"],"那么数据发送都有什么方式呢":["98.7"],"针对这个问题把":["98.7"],"翻译成":["98.7"],"请求发送":["98.7"],"就容易多了":["98.7"],"转而问题就变成了":["98.7"],"请求发送方式都有哪些":["98.7"],"一般会包括如下几种":["98.7"],"包括但不限于":["98.7"],"xmlhttprequest":["98.7"],"fetch":["98.7","127.28"],"表单的":["98.7"],"基于元素":["98.7"],"属性的请求":["98.7"],"标签的":["98.7"],"navigator":["98.7","103.17","133.2","148.3"],"sendbeacon":["98.7"],"这里选择的是最后一种":["98.7"],"就是专门用于通过":["98.7"],"将统计数据":["98.7"],"异步":["98.7","178.1","178.3"],"发送到":["98.7"],"web":["98.7","99.23","100.8","148.0","204.6","218.10","239.1","265.1"],"服务器上":["98.7"],"同时能避免传统技术发送分析数据的一些问题":["98.7"],"在上述已经做过介绍了":["98.8"],"本质上这两个数据统计都可在一个上报类型为":["98.8"],"action":["98.8","122.19","178.5"],"数据发送中获得":["98.8"],"主要看监控系统是按照怎样的规则对数据进行分析和统计":["98.8"],"这里在":["98.8"],"sdk":["98.8","100.5"],"内部监听了页面的":["98.8"],"btn":["98.9","154.13","190.2"],"findtarget":["98.9"],"filters":["98.9"],"filter":["98.9","104.0","133.6","154.16","159.5","159.9","179.33","195.8","285.14"],"onerror":["98.10","99.6","133.5","217.7"],"事件来捕获":["98.10"],"等捕获的错误":["98.11"],"大致使用如下":["98.11"],"throw":["98.11","98.13","131.10","162.3","204.3"],"请求拦截":["98.12"],"响应拦截":["98.12"],"的第二个回调参数中去上报对应的错误数据信息":["98.12"],"大致如下":["98.12"],"创建axios实例":["98.12"],"onmounted":["98.13"],"自研监控的优势有哪些":["99.0"],"前端监控的设计方案":["99.0"],"监控的目的":["99.0"],"数据的采集方式":["99.0"],"要是能定位到源码就好了":["99.1"],"可线上的项目都是打包后的代码":["99.1"],"但如果是用户做了异常操作":["99.2"],"或者是在某些复杂操作下才出现的bug":["99.2"],"仅仅通过定位源码":["99.2"],"操作的间隔超过了单次录屏时长":["99.3"],"录制的视频可能是不完整的":["99.3"],"此时可以借助用户行为来分析用户的操作":["99.3"],"帮助复现bug":["99.3"],"最终效果":["99.3"],"userlist":["99.3","103.12","103.14"],"用户行为列表记录了":["99.3"],"鼠标点击":["99.3"],"发":["99.5"],"了什么错误":["99.5"],"js错误":["99.5","100.4"],"异步错误":["99.5","99.6"],"资源加载":["99.5"],"接口错误等":["99.5"],"捕获不到异常":["99.6"],"uncaught":["99.6"],"syntaxerror":["99.6"],"示例3":["99.6"],"settimeout":["99.6","148.2","165.1","168.14","168.22","168.23","173.5","173.38","173.52","176.2","179.50"],"referenceerror":["99.6"],"可以捕获常规错误":["99.6"],"但不能捕获资源错误":["99.6"],"param":["99.6","100.2","195.4"],"错误信息":["99.6"],"col":["99.7"],"控制台会报错":["99.7"],"事件":["99.8","195.7","205.3","207.9"],"父组件代码":["99.8"],"child":["99.8","181.0","214.1","214.3","216.3","236.4","256.4"],"不能捕获render函数的错误":["99.8"],"err":["99.8","132.1","166.5","166.6","217.7"],"捕获到异常":["99.9"],"当前页面加载其他域的资源":["99.9"],"原型上的send方法":["99.10"],"send":["99.10","152.20","159.9"],"originalsend":["99.10"],"当请求结束时触发":["99.10"],"无论请求成功还是失败都会触发":["99.10"],"loadend":["99.10"],"responsetype":["99.10"],"status":["99.10","114.29","195.9","275.2"],"endtime":["99.10"],"reqdata":["99.10"],"text":["99.10","169.4","170.15","175.4","179.4","193.8","275.2","286.53"],"indexof":["99.10","241.6","245.2","296.2"],"responsetext":["99.10"],"stringify":["99.10","129.7","159.5","159.9","285.5","288.5","294.1"],"获取接口的请求时长":["99.10"],"elapsedtime":["99.10"],"存储用户行为":["99.11"],"添加用户行为栈":["99.11"],"不会触发":["99.12"],"router源码":["99.12"],"savescrollposition":["99.12"],"try":["99.12","103.17","112.3","132.1"],"click":["99.13","133.6","190.2","190.6","195.4","207.8"],"target":["99.13","106.11","127.5","133.5","156.13","156.15","162.3","174.4","174.8","205.1","235.4","247.2","251.2"],"tagname":["99.13"],"各字段说明":["99.14"],"connectend":["99.14"],"表示浏览器完成建立与服务器的连接以检索资源之后的时间":["99.14"],"connectstart":["99.14","151.12"],"表示浏览器开始建立与服务器的连接以检索资源之前的时间":["99.14"],"decodedbodysize":["99.14"],"表示在删除任何应用的内容编码之后":["99.14"],"从":["99.14","154.19","236.5"],"消息主体":["99.14"],"的请求":["99.14","175.0"],"或缓存":["99.14"],"中接收到的大小":["99.14"],"以八位字节为单位":["99.14"],"domainlookupend":["99.14"],"表示浏览器完成资源的域名查找之后的时间":["99.14"],"domainlookupstart":["99.14"],"表示在浏览器立即开始资源的域名查找之前的时间":["99.14"],"duration":["99.14","151.9","206.14"],"返回一个timestamp":["99.14"],"responseend":["99.14","151.12"],"starttime":["99.14","206.15"],"属性的差值":["99.14"],"encodedbodysize":["99.14"],"表示在删除任何应用的内容编码之前":["99.14"],"长任务":["99.15"],"获取页面的长任务列表":["99.15"],"它是一个动态值":["99.16"],"其中":["99.16","100.1","147.5","173.25","173.59","181.0"],"jsheapsizelimit":["99.16"],"该属性代表的含义是":["99.16"],"利用":["99.17","99.20","177.13"],"mutationobserver":["99.17"],"监听":["99.17"],"整体架构使用":["99.18"],"aop":["99.20"],"breadcrumb":["99.21"],"支持跨域":["99.22"],"mitojs":["99.23"],"项目后台demo":["99.23"],"主要用来演示错误还原功能":["99.23"],"方式包括":["99.23"],"定位源码":["99.23"],"播放录屏":["99.23"],"记录用户行为":["99.23"],"see":["99.23","175.12"],"方式":["100.0"],"让bug无处藏身":["100.0"],"这是前端监控的第二篇":["100.0"],"该篇讲解如何实现错误还原功能":["100.0"],"第一篇":["100.0"],"y":["100.1","127.20","127.22","184.18","184.22"],"sourcemappingurl":["100.1"],"用来说明该文件对应的map文件":["100.1"],"findcodebysourcemap用于获取map文件对应的源代码":["100.2"],"map文件名称":["100.2"],"发生错误的行号":["100.2"],"库来提取给定错误的原始文件名":["100.3"],"行和列信息":["100.3"],"示例代码":["100.3","173.58"],"errorstackparser":["100.3"],"parse":["100.3","152.20","159.2","159.5","241.9","296.3"],"boom":["100.3"],"返回值":["100.3"],"stackframe":["100.3"],"堆栈列表":["100.3"],"点击":["100.4","201.5"],"会执行":["100.4","245.0"],"homeview":["100.4"],"项目中引入监控":["100.5"],"打包后将js文件发布到服务器上":["100.5"],"events存储录屏信息":["100.6"],"events":["100.6","100.8","169.3"],"用于记录":["100.6"],"replay":["100.7"],"两个方法":["100.7"],"方法用来记录页面上":["100.7"],"的变化":["100.7"],"方法支持根据时间戳去还原":["100.7"],"unpackfn":["100.8"],"replayer":["100.8"],"但是官方提供的压缩方式":["100.8"],"是对每个":["100.8"],"数据单独进行压缩":["100.8"],"压缩比不高":["100.8"],"压缩比在70":["100.8"],"比如原来":["100.8"],"的数据":["100.8"],"压缩后为":["100.8"],"4m":["100.8"],"官方更加推荐实现将多个":["100.8"],"批量一次性压缩":["100.8"],"这样压缩效果更好":["100.8"],"当页面发出报错需要上报时":["100.9"],"判断是否开启了录屏":["100.9"],"如果开启了":["100.9"],"设为":["100.9"],"同时将":["100.9"],"上的":["100.9","207.5"],"存储到此次上报信息的":["100.9"],"在日常开发过程中我们通常把根元素":["101.1"],"适用于绝大部分业务场景":["101.2"],"用于将像素单元生成rem单位":["101.3"],"浏览器前缀处理插件":["101.3"],"可伸缩布局方案":["101.3"],"替代了原先的":["101.3"],"选用了当前众多浏览器兼容的":["101.3"],"viewport":["101.3","150.2"],"项目根目录创建":["101.3"],"如大屏或者固定窗口业务应用":["101.4"],"默认缩放值":["101.5"],"width":["101.5","106.16","122.6","123.1","150.2","169.4","170.2","279.8","286.37"],"height":["101.5","106.46","123.1","153.12","169.4","170.2","279.8","286.33","286.37"],"设计稿尺寸":["101.5"],"basewidth":["101.5"],"baseheight":["101.5"],"需保持的比例":["101.5"],"默认1":["101.5"],"baseproportion":["101.5"],"parsefloat":["101.5","173.93"],"tofixed":["101.5"],"tsc":["102.0"],"转换为":["102.0","104.0"],"complier":["102.0"],"组件模板转换为":["102.0"],"的新语法转换为旧版浏览器认识的语法":["102.0"],"uglifyjs":["102.0"],"将我们的代码压缩成体积更小的文件":["102.0"],"我们可以手动把代码挨个处理一遍":["102.0"],"但这样效率非常低":["102.0"],"当我们稍微修改一点代码":["102.0"],"这个流程又要重新走一遍":["102.0"],"非常麻烦":["102.0"],"有个神奇的东西":["102.0"],"可以把以上工具集成到一起":["102.0"],"整个流程交给它自动处理":["102.0"],"而且当代码发生变化时":["102.0"],"自动帮我们重新走一遍":["102.0"],"这个东西就叫做构建工具":["102.0"],"当然构建工具做的事情远不止于此":["102.0"],"模块化开发支持":["102.0"],"支持直接从":["102.0"],"里引入代码":["102.0"],"处理代码兼容性":["102.0"],"te83z":["102.1"],"getelementbyid":["102.1","102.2","104.0","154.13","168.19"],"classname":["102.1"],"hero":["102.2"],"文件可以被直接导入":["102.3"],"同时也支持具名导入":["102.3"],"支持":["102.4"],"vitejs":["102.4"],"换句话来说":["102.5"],"即使":["102.5"],"ide":["102.5"],"提示报错":["102.5"],"也不影响正常开发和生成环境打包":["102.5"],"这样肯定是不行的":["102.5"],"不然很难对代码进行有效约束":["102.5"],"我们可以使用插件实现这个功能":["102.5"],"用于检查的插件":["102.5"],"checker":["102.5"],"是":["102.5","106.5","113.2","154.7","172.0","254.9"],"的依赖":["102.5"],"然后在根目录创建":["102.5"],"communication":["103.0"],"是一种实时音视频的技术":["103.0"],"它的优势是低延时":["103.0"],"本片文章食用者要求":["103.0"],"是请求一个可用的媒体输入和输出设备的列表":["103.1"],"由于掘金的代码片段的iframe没有配置":["103.2"],"allow":["103.2","138.35","159.13"],"画面比例":["103.3"],"aspectratio":["103.3"],"constraindouble":["103.3"],"设备id":["103.3","103.4"],"constrainboolean":["103.4"],"声道配置":["103.4"],"channelcount":["103.4"],"constrainulong":["103.4"],"可以从enumeratedevices中获取":["103.4"],"deviceid":["103.4"],"便可以清晰的了解":["103.5"],"5db028f8d5205":["103.5"],"v4":["103.6"],"uuid":["103.6"],"stun":["103.7"],"l":["103.7","114.29","204.3"],"根据上面的流程图我们下一步要做的事情是用上面的方式获取视频流":["103.7"],"并将获取到的流添加到rtcpeerconnection中":["103.7"],"并创建offer":["103.7"],"把这个offer设置到这个rtcpeer中":["103.7"],"socket":["103.8","103.10","103.12"],"offer":["103.8","103.9"],"sdp":["103.8"],"rtcsessiondescriptioninit":["103.8"],"candidateinfo":["103.10"],"rtcpeerconnectioniceevent":["103.10"],"srcobject":["103.11"],"streams":["103.11"],"autoplay":["103.11"],"room":["103.12"],"handshake":["103.12"],"query":["103.12"],"redis":["103.12"],"获取当前房间的数据":["103.12"],"创建者id":["103.13"],"本人":["103.13"],"recuserid":["103.13","103.15"],"接收者id":["103.13"],"ref":["103.14","153.12","218.4","232.2","236.7","286.48"],"createoffer":["103.15"],"peerconnect":["103.15"],"rtcpeerconnection":["103.15"],"stream":["103.15"],"mediastream":["103.15","104.0"],"localstream":["103.15"],"gettracks":["103.15"],"track":["103.15"],"addtrack":["103.15"],"mediadevices":["103.16","103.17"],"接口的":["103.16"],"getdisplaymedia":["103.17"],"getvideotracks":["103.17"],"ended":["103.17"],"用户中断了屏幕共享":["103.17"],"endlocalrecord":["103.17"],"将媒体流设置到":["104.0"],"标签上播放":["104.0"],"playlocalstream":["104.0"],"播放本地视频流":["104.0"],"videoel":["104.0"],"htmlvideoelement":["104.0"],"实现拍照功能":["104.0"],"标签可以将媒体流绘制到":["104.0"],"也可以通过":["104.0"],"todataurl":["104.0"],"方法将":["104.0"],"base64":["104.0","115.0"],"图片后做一些其他操作":["104.0"],"附上一个":["104.0"],"体验地址":["104.0"],"item":["104.0","106.18","170.15","190.6","283.7","285.14","286.30","286.49"],"imglist":["104.0"],"alt":["104.0","122.6","180.2"],"我们通过获取已经在播放媒体流的":["104.0"],"然后将其绘制到":["104.0"],"再通过":["104.0"],"这里你可以加一些滤镜或者加一些美颜功能或是其他的操作":["104.0"],"最终生成的":["104.0"],"imgurl":["104.0"],"给到":["104.0"],"标签让其展示就行了":["104.0"],"拍照":["104.0"],"takephoto":["104.0"],"videowidth":["104.0"],"videoheight":["104.0"],"ctx":["104.0","169.4","178.7","229.0"],"getcontext":["104.0","169.4"],"2d":["104.0","169.4"],"drawimage":["104.0"],"添加滤镜":["104.0"],"filterlist":["104.0"],"blur":["104.0"],"5px":["104.0"],"模糊":["104.0"],"brightness":["104.0"],"亮度":["104.0"],"contrast":["104.0"],"对比度":["104.0"],"grayscale":["104.0"],"灰度":["104.0"],"hue":["104.0"],"rotate":["104.0","169.4"],"90deg":["104.0"],"色相旋转":["104.0"],"invert":["104.0"],"反色":["104.0"],"opacity":["104.0","171.0","279.8"],"透明度":["104.0"],"saturate":["104.0"],"饱和度":["104.0"],"sepia":["104.0"],"褐色":["104.0"],"drop":["104.0","118.5"],"shadow":["104.0"],"4px":["104.0"],"8px":["104.0","156.14"],"阴影":["104.0"],"拍摄的时候我们也可以切换摄像头":["104.0"],"这里我们通过调用":["104.0"],"而如果将一个或者多个声明用":["106.2"],"包裹起来后":["106.2"],"那就组成了一个":["106.2"],"声明块":["106.2"],"导入其它的外部样式表":["106.3"],"这些需要专门的语句表示":["106.3"],"元素内使用":["106.4"],"值必须是双引号包裹":["106.4"],"且和":["106.4"],"都能导入一个样式文件":["106.5"],"它们有什么区别嘛":["106.5"],"是否生效":["106.6"],"可以结合":["106.6"],"用于合并来自多个源的属性值的算法":["106.7"],"比如说针对某个":["106.7"],"有许多的":["106.7"],"选择器无疑是其核心之一":["106.8"],"选择器":["106.9"],"picker":["106.9"],"通配选择器":["106.9"],"属性选择器":["106.9"],"hover":["106.11","281.2"],"鼠标悬浮的元素":["106.11"],"selection":["106.11"],"鼠标选中的元素":["106.11"],"状态伪类":["106.11"],"当前锚点的元素":["106.11"],"未访问的链接元素":["106.11"],"visited":["106.11"],"已访问的链接元素":["106.11"],"focus":["106.11"],"输入聚焦的表单元素":["106.11"],"required":["106.11"],"在元素前插入内容":["106.12"],"可以把权重分成如下几个等级":["106.13"],"数值越大的权重越高":["106.13"],"important":["106.13","179.5","214.2"],"01000":["106.13"],"内联样式":["106.13"],"orange":["106.14","170.5"],"inherit":["106.14","219.3"],"设想一下":["106.14"],"中不存在继承性":["106.14"],"那么我们就需要为不同文本的标签都设置一下":["106.14"],"这样一来的后果就是":["106.14"],"正常情况下会把页面分割成一行一行的显示":["106.15"],"而每行又可能由多列组成":["106.15"],"所以从视觉上看起来就是从上到下从左到右":["106.15"],"而这就是":["106.15"],"中的流式布局":["106.15"],"标准盒模型和":["106.16"],"ie":["106.16","115.0"],"本别是由":["106.16"],"w3c":["106.16","120.2","120.6","279.7"],"iexplore":["106.16"],"制定的标准":["106.16"],"如果给某个元素设置如下样式":["106.16"],"box":["106.16","106.19","106.22","179.1","286.38"],"200px":["106.16"],"中一切皆盒子":["106.17"],"而视觉格式化模型简单来理解就是规定这些盒子应该怎么样放置到页面中去":["106.17"],"这个模型在计算的时候会依赖到很多的因素":["106.17"],"盒子尺寸":["106.17"],"盒子类型":["106.17"],"定位方案":["106.17"],"inline":["106.18","226.1"],"行内级盒子":["106.18"],"依据上图可以列出都有哪些块级和行内级盒子":["106.18"],"table":["106.18","122.10","122.11","286.55"],"的类型依据":["106.19"],"的值不同":["106.19"],"分为":["106.19","173.81"],"规范中的一个概念":["106.20"],"大概说的是页面中的一块渲染区域":["106.20"],"规定了渲染区域内部的子元素是如何排版以及相互作用的":["106.20"],"不同类型的盒子有不同格式化上下文":["106.20"],"即使存在浮动也是如此":["106.21"],"的区域不会与":["106.21"],"float":["106.21","106.22"],"盒子重叠":["106.21"],"就是页面上的一个隔离的独立容器":["106.21"],"容器里面的子元素不会影响到外面的元素":["106.21"],"反之也如此":["106.21"],"计算":["106.21"],"的高度时":["106.21"],"浮动元素也参与计算":["106.21"],"如何创建":["106.21","143.3"],"根元素":["106.21","179.2"],"非溢出的可见元素":["106.21"],"overflow":["106.21"],"不为":["106.21"],"visible":["106.21","148.1","171.0"],"设置浮动":["106.21"],"属性不为":["106.21"],"none":["106.21","106.37","138.34","169.3","171.0","175.13","286.69"],"设置定位":["106.21"],"能把在一行上的框都完全包含进去的一个矩形区域":["106.22"],"被称为该行的线盒":["106.22"],"线盒的宽度是由包含块":["106.22"],"containing":["106.22"],"和与其中的浮动来决定":["106.22"],"中的":["106.22","112.4","208.7","258.6"],"一般左右边贴紧其包含块":["106.22"],"但":["106.22"],"元素会优先排列":["106.22"],"事实确实是这样的":["106.23"],"但层叠上下文的内容远非仅仅如此":["106.23"],"能够在层叠上下文中对元素的堆叠顺序其作用是必须配合定位才可以":["106.23"],"除了":["106.23"],"之外":["106.23"],"一个元素在":["106.23"],"轴上的显示顺序还受层叠等级和层叠顺序影响":["106.23"],"在看层叠等级和层叠顺序之前":["106.23"],"我们先来看下如何产生一个层叠上下文":["106.23"],"特定的":["106.23"],"元素或者":["106.23"],"属性产生层叠上下文":["106.23"],"mdn":["106.23","121.0"],"中给出了这么一个列表":["106.23"],"符合以下任一条件的元素都会产生层叠上下文":["106.23"],"border":["106.24","106.37"],"font":["106.24","106.26","169.4","275.2"],"等属性的值":["106.24"],"百分比":["106.24"],"可以用于指定尺寸或长度":["106.24"],"例如取决于父容器的":["106.24"],"中它是绝对的长度单位":["106.25"],"也是最基础的单位":["106.25"],"其他长度单位会自动被浏览器换算成":["106.25"],"但是对于设备而言":["106.25"],"它其实又是相对的长度单位":["106.25"],"比如宽高都为":["106.25"],"2px":["106.25"],"在正常的屏幕下":["106.25"],"其实就是":["106.25","156.1","220.6"],"个像素点":["106.25"],"而在设备像素比":["106.25"],"devicepixelratio":["106.25"],"中使用是相对于":["106.26"],"父元素":["106.26"],"大小":["106.26"],"比如父元素":["106.26"],"比如在做":["106.27"],"前端通常会让":["106.27"],"750px":["106.27"],"宽的设计图":["106.27"],"而在开发的时候可以基于":["106.27"],"iphone":["106.27"],"的尺寸":["106.27"],"375px":["106.27"],"812px":["106.27"],"来写页面":["106.27"],"这样一来的话":["106.27"],"就可以用下面的":["106.27"],"依据当前页面的视口宽度自动计算出根元素":["106.27"],"的基准":["106.27"],"视口宽度均分成":["106.28"],"份中":["106.28"],"份的长度":["106.28"],"1vh":["106.28"],"视口高度均分成":["106.28"],"足够构成一个体系":["106.29"],"所以这里就专门拿出一个小节来讲解它":["106.29"],"等":["106.30","173.68","236.2","254.3"],"可接受的关键字列表在css的演变过程中发生了改变":["106.30"],"标准":["106.30"],"只接受":["106.30"],"个基本颜色":["106.30"],"称为":["106.30"],"vga":["106.30"],"的简写":["106.31","172.0"],"透明关键字有什么应用场景呢":["106.31"],"实现三角形":["106.31"],"下面这个图是用":["106.31"],"条边框填充的正方形":["106.31"],"会取当前元素继承父级元素的文本颜色值或声明的文本颜色值":["106.32"],"computed":["106.32","195.7","223.2","225.4"],"函数符":["106.33"],"中的每种颜色的值范围是":["106.33"],"00":["106.33","156.24","284.35"],"ff":["106.33"],"值越大表示颜色越深":["106.33"],"所以一个颜色正常是":["106.33"],"个十六进制字符加上":["106.33"],"组成":["106.33"],"比如红色就是":["106.33"],"ff0000":["106.33"],"颜色需要加上不透明度":["106.33"],"那就需要加上":["106.33"],"通道的值":["106.33"],"它的范围也是":["106.33"],"h":["106.34","179.64"],"是色彩的基本属性":["106.34"],"值范围是":["106.34"],"0deg":["106.34"],"360deg":["106.34"],"或":["106.34","127.5","127.39","141.4"],"为红色":["106.34"],"rel":["106.35","279.9"],"stylesheet":["106.35"],"styles":["106.35"],"自定义属性也和普通属性一样具有级联性":["106.36"],"申明在":["106.36"],"下的时候":["106.36"],"在全文档范围内可用":["106.36"],"而如果是在某个元素下申明自定义属性":["106.36"],"实现的相对完美的解决方案":["106.37"],"只设置单条底部边框":["106.37"],"position":["106.37","170.11","179.2","179.39","286.37","286.38"],"relative":["106.37"],"after":["106.37","106.40","214.1"],"直到碰到父元素或者另一个浮动元素":["106.38"],"为什么要清楚浮动":["106.38"],"它造成了什么问题":["106.38"],"高度的时候浮动子元素的高度也将计算在内":["106.39"],"利用这条规则就可以清楚浮动":["106.39"],"假设一个父元素":["106.39"],"内部只有":["106.39"],"h1":["106.41","172.0"],"h2":["106.41"],"blockquote":["106.41"],"abbr":["106.41"],"acronym":["106.41"],"address":["106.41","111.3"],"big":["106.41"],"cite":["106.41"],"del":["106.41"],"dfn":["106.41"],"em":["106.41","172.0"],"ins":["106.41"],"kbd":["106.41"],"s":["106.41","127.20","129.6","137.0","148.0","179.63","206.0","206.8","206.16","284.16","284.18","284.41","285.12","286.9"],"samp":["106.41"],"small":["106.41"],"strike":["106.41"],"strong":["106.41","122.5","172.0","286.55"],"sub":["106.41","286.55"],"sup":["106.41","286.55"],"字符超出部分换行":["106.42"],"字符超出位置使用连字符":["106.42"],"种情况":["106.43"],"此类元素需要水平居中":["106.44"],"则父级元素必须是块级元素":["106.44"],"level":["106.44","206.2"],"负":["106.45"],"写的文章":["106.46"],"其中的两种":["106.46"],"codepen":["106.48","106.49","106.50","106.51"],"方法一":["106.48","106.49"],"结合示例阅读效果更佳":["106.51"],"的组件":["107.1"],"它要求我们返回的表格数据格式如下":["107.1"],"used":["107.2","214.2"],"another":["107.2"],"it":["107.2","206.0","206.1","206.12","214.2","215.2"],"often":["107.2"],"make":["107.2","228.2"],"classes":["107.2"],"work":["107.2","148.1","206.8","206.9"],"others":["107.2"],"without":["107.2"],"modifying":["107.2"],"组件提供了一个":["107.3"],"responseprocessor":["107.3"],"的钩子":["107.3"],"activexobject":["107.4"],"undefined":["107.4","127.15","130.3","134.4","152.8","173.25","173.68","173.82","173.98","184.16","214.3","217.7","220.2","221.3","236.4","236.6","241.6","241.9","255.0","291.5"],"support":["107.4","133.5"],"ie6":["107.4"],"ie8":["107.4"],"cannot":["107.4","115.0","235.4"],"activex":["107.4"],"islocal":["107.4"],"createactivexhr":["107.4"],"代理模式也是对原对象进行包装处理":["107.5"],"方法":["108.1","110.2","134.4","147.5","163.0","173.98","176.6","209.2"],"然后传入一个配置对象进去":["108.1"],"implements":["108.2"],"override":["108.2"],"下边引入装饰器":["108.2"],"进行加料":["108.2"],"添加一个装饰器的抽象类":["108.2"],"abstract":["108.2","179.30"],"milkteadecorator":["108.2"],"private":["108.2","184.30","236.1","252.6"],"final":["108.2"],"decoratedmilktea":["108.2"],"添加珍珠":["108.2"],"withpearl":["108.2"],"onload":["108.3","195.4","196.7","196.14"],"rest":["108.3"],"重写":["108.3"],"我们只提供了装饰函数":["108.4"],"输入原始对象":["108.4"],"输出增强对象":["108.4"],"输出的增强对象":["108.4"],"还可以接着传入到新的装饰器函数中继续增强":["108.4"],"对于业务方":["108.4"],"可以随意组合装饰函数":["108.4"],"但得有一个最最开始的原始对象":["108.4"],"obj":["109.1","125.9","127.33","130.9","141.3","179.11","236.6","286.15","286.16","295.2"],"模块主要是将":["109.1"],"请求封装":["109.1"],"填充一些":["109.1"],"然后业务方使用的时候只需要引入上边的":["109.1"],"即可":["109.1","109.7","156.19"],"维基百科的一些解释":["109.2"],"远程代理":["109.6"],"通过代理模式":["109.6"],"实现像操作本地对象一样的操作远程对象":["109.6"],"虚拟代理":["109.6"],"place":["109.6"],"of":["109.6","111.2","114.30","115.0","129.6","129.7","129.8","137.0","148.0","148.3","206.8","214.1","222.7","286.2","286.30"],"complex":["109.6"],"heavy":["109.6"],"skeleton":["109.6"],"representation":["109.6"],"may":["109.6","137.0","214.2","218.8","236.4"],"advantageous":["109.6"],"some":["109.6","133.6","168.19","179.33","214.2","222.7","236.4"],"cases":["109.6"],"常见的比如大图的加载":["109.6"],"我们可以通过引入代理对象":["109.6"],"先加载一张小图":["109.6"],"大图加载完毕后再显示大图":["109.6"],"保护代理":["109.6"],"将原有对象的属性访问进行权限控制":["109.6"],"缓存代理":["109.6"],"引入缓存":["109.6"],"将之前的结果进行缓存":["109.6"],"常见的比如斐波那契数列":["109.6"],"不管起了什么新名字":["109.6"],"它们的本质都是一样的":["109.6"],"如果用类图表示就是下边的样子":["109.6"],"util":["109.7","110.2","133.2"],"requestnew":["109.7"],"需要拿到地址后再进行下一步":["110.1","110.3","111.1"],"三个模块都是不同人写的":["110.1","110.3","111.1"],"提供了不同的方法供我们调用":["110.1","110.3"],"methods":["110.2","111.2","195.8"],"method":["110.2","111.2"],"很好理解的一个设计模式":["110.2"],"有一个":["110.2","163.0","259.3"],"对象":["110.2","127.37","140.5","150.12","162.0","209.6","210.0","218.11","236.5"],"然后有很多":["110.2"],"观察者对象":["110.2"],"对象有变化的时候去通知":["110.2"],"对象即可":["110.2"],"再看一下":["110.2"],"uml":["110.2"],"图和时序图":["110.2"],"20220127110751274":["110.2"],"每一个观察者都实现了":["110.2"],"并且调用":["110.2"],"对象的":["110.2","150.12","223.2","250.2"],"attach":["110.2"],"方法订阅变化":["110.2"],"变化时":["110.2"],"调用":["110.2","127.21","193.1","195.7"],"方法去通知观察者":["110.2"],"先用":["110.2"],"写一个简单的例子":["110.2"],"公众号文章可以看作是":["110.2"],"会不定期更新":["110.2"],"然后每一个用户都是一个":["110.2"],"订阅公众号":["110.2"],"当更新的时候就可以第一时间收到消息":["110.2"],"maintains":["111.2"],"its":["111.2"],"dependents":["111.2"],"called":["111.2"],"observers":["111.2"],"notifies":["111.2"],"them":["111.2","206.1","206.9"],"automatically":["111.2"],"usually":["111.2"],"by":["111.2","206.9","241.1","241.10","252.5"],"calling":["111.2"],"one":["111.2","127.33","195.4","195.7","216.3"],"观察者模式中":["111.2"],"自己维护观察者列表进行注册和通知":["111.2"],"then":["111.3","127.28","133.2","154.13","168.12","204.3"],"emit":["111.3"],"之前的":["111.4"],"事件进行缓存":["111.4"],"triggerproxy":["111.4"],"self":["111.4","171.0","180.2"],"args":["111.4","112.2","173.98","179.27","214.2","231.3","283.1","283.2","283.4","283.12","288.2","288.5"],"fn":["111.4","173.11","179.27","283.3","283.6","285.6","285.12","288.4"],"trigger":["111.4"],"listenproxy":["111.4"],"activityquery":["112.1","112.3"],"请求后端数据":["112.1","112.3"],"styletype":["112.1"],"reward":["112.1"],"static":["112.2","138.22","138.38","154.16"],"context":["112.2","131.10","173.98","195.4","195.7","212.1","214.0","214.3","219.3","228.3","230.1","241.3","241.6","283.4","283.12","286.38"],"three":["112.2"],"contexts":["112.2"],"following":["112.2"],"different":["112.2"],"strategies":["112.2"],"firststrategy":["112.2"],"execute":["112.2"],"secondstrategy":["112.2"],"poptypes":["112.3"],"validator":["112.4","221.4"],"会帮助我们校验":["112.4"],"是否是":["112.4"],"其实是用的一个开源的":["112.4"],"校验库":["112.4"],"内部会内置很多":["112.4"],"然后会根据":["112.4"],"来帮我们填充相应的":["112.4"],"应用变得越来越强大":["113.0"],"与此同时也越来越复杂":["113.0"],"集群部署":["113.0"],"隔离环境":["113.0"],"灰度发布以及动态扩容缺一不可":["113.0"],"于是我搬石头":["113.1"],"砍木头":["113.1"],"画图纸":["113.1"],"盖房子":["113.1"],"一顿操作":["113.1"],"终于把这个房子盖好了":["113.1"],"cmos":["113.2"],"硬盘和操作系统":["113.2"],"可以像使用实体机一样对虚拟机进行操作":["113.2"],"在容器技术之前":["113.2"],"业界的网红是虚拟机":["113.2"],"虚拟机技术的代表":["113.2"],"vmware":["113.2"],"openstack":["113.2"],"更多请参看百科虚拟机":["113.2"],"将操作系统层虚拟化":["113.2"],"是一个标准的软件单元":["113.2"],"随处运行":["113.2"],"是一个开源的应用容器引擎":["113.3"],"让开发者可以打包他们的应用以及依赖包到一个可移植的容器中":["113.3"],"然后发布到任何流行的":["113.3"],"机器上":["113.3"],"也可以实现虚拟化":["113.3"],"once":["113.4","180.2"],"anywhere":["113.4"],"一次搭建":["113.4"],"处处运行":["113.4"],"本身并不是容器":["113.4"],"它是创建容器的工具":["113.4"],"brew":["113.5"],"更多安装方式":["113.5"],"请查看官方文档":["113.5"],"查看版本":["113.5"],"touch":["113.6"],"此时的项目目录如下":["113.6"],"md":["113.6","260.2"],"可以看到我们已经在":["113.6"],"目录下成功创建了":["113.6"],"准备":["113.6"],"镜像":["113.6","114.10"],"运行你的":["113.6"],"桌面端":["113.6"],"就会默认启动实例":["113.6"],"我们在控制台拉取":["113.6"],"控制台会出现如下信息":["113.6"],"mysql":["113.7"],"database":["113.7"],"maintainer":["113.7"],"镜像维护人的信息":["113.7"],"jartto":["113.7"],"qq":["113.7"],"构建镜像时要执行的命令":["113.7"],"executable":["113.7"],"将本地的文件添加复制到容器中去":["113.7"],"然而不同的操作打出的镜像也是千差万别":["113.8"],"究竟是什么原因导致镜像差异":["113.8"],"我们不妨继续探索":["113.8"],"以下是在应用":["113.8"],"的架构图如下":["114.2"],"宿主机":["114.3"],"daemon":["114.3","114.29","114.30"],"compose":["114.5"],"cask":["114.6"],"已经支持":["114.6"],"在docker":["114.9"],"首先打开你的docker":["114.10"],"conf":["114.12","138.20"],"把本机的":["114.15"],"端口映射到":["114.15"],"container":["114.15","114.29","216.2","222.4","235.4"],"跟我们前面创建项目的时候看到的界面是一样的":["114.16"],"登陆":["114.17"],"dockerhub":["114.17"],"注册账号":["114.17"],"命令行执行":["114.17"],"底层使用了一些":["114.18"],"构建隔离的环境":["114.19"],"拉取镜像":["114.21"],"拉取镜像后可以使用":["114.21"],"inspect":["114.21"],"查看镜像信息":["114.21"],"如配置及环境变量等":["114.21"],"构建镜像":["114.22"],"作为配置文件构建镜像":["114.23"],"简单看一个":["114.23"],"由于":["114.26","252.3","256.5"],"ufs":["114.26"],"类似于代码与进程的关系":["114.28"],"alpine":["114.29","114.30"],"created":["114.29","175.12","181.0","196.8","256.4"],"ports":["114.29"],"names":["114.29","204.3"],"404e88f0d90c":["114.29"],"minutes":["114.30","156.23"],"up":["114.30"],"可直接进入容器内部进行调试":["114.31"],"可以通过":["114.32","162.0","178.4","179.11"],"查看版本号":["114.32"],"在用法上和对象":["115.0"],"数据保持一致只不过他们是只读的":["115.0"],"一个非常不可变的类对象结构":["115.0"],"myrecord":["115.0"],"conardli":["115.0"],"typeerror":["115.0","132.4","204.3"],"assign":["115.0","125.3","173.40"],"read":["115.0"],"一个非常不可变的类数组结构":["115.0"],"mytuple":["115.0"],"另外还有一个很重要的点":["115.0"],"当我们去比较":["115.0"],"的值时":["115.0"],"只会对比它们的值":["115.0"],"而不再对比引用":["115.0"],"tc39":["115.0"],"propos":["115.0"],"edge":["115.0"],"firefox":["115.0"],"safari":["115.0"],"决定合力解决":["115.0"],"兼容性问题":["115.0"],"浏览器制造商":["115.0"],"apple":["115.0","286.72"],"microsoft":["115.0"],"mozilla":["115.0"],"以及软件公司":["115.0"],"bocoup":["115.0"],"igalia":["115.0"],"正在合力制定一项名为":["115.0"],"interop":["115.0"],"兼容性规范":["115.0"],"以使":["115.0"],"技术和代码在不同的设备和浏览器中有统一的渲染效果":["115.0"],"利好前端开发":["115.0"],"这是有史以来第一次":["115.0"],"所有市场上主要的浏览器供应商和利益相关者齐心协力地解决浏览器兼容性问题":["115.0"],"此前":["115.0"],"互相为竞争关系的浏览器厂商常常在":["115.0"],"技术的兼容性上出现分歧":["115.0"],"尤其是":["115.0"],"还活着的时候":["115.0"],"前端一个页面三套代码的情况十分常见":["115.0"],"想要跟进规范的整体进度":["115.0"],"可以查看":["115.0"],"dashboard":["115.0"],"09":["115.0","141.3"],"团队提议为":["115.0"],"增加类型注释提案":["115.0"],"在过去的":["115.0"],"调查报告中":["115.0"],"静态类型一直是":["115.0"],"开发者强烈要求的一个功能":["115.0"],"微软":["115.0"],"团队提出了一项新的提案":["115.0"],"在提案中希望可以为":["115.0"],"带来可选的类型注释语法":["115.0"],"提案的目的是让开发者能够直接运行用":["115.0"],"flow":["115.0"],"或其他静态类型库编写的程序":["115.0"],"而不需要再编译一次":["115.0"],"如果提案能够顺利实施":["115.0"],"将是":["115.0"],"语法的一个重大变革":["115.0"],"目前提案已经到达":["115.0"],"阶段":["115.0","179.50"],"提案地址":["115.0"],"cli":["115.0","152.24","154.11"],"的依赖项被供应链投毒":["115.0"],"的依赖项":["115.0"],"ipc":["115.0"],"包的作者":["115.0"],"riaevangelist":["115.0"],"是个反战人士":["115.0"],"他特意新建了一个":["115.0"],"peacenotwar":["115.0"],"仓库来宣传他的反战理念":["115.0"],"更过分的是":["115.0"],"作者不只添加了反战标语":["115.0"],"还在":["115.0"],"版本中添加了恶意":["115.0"],"文件删除俄罗斯和白俄罗斯用户文件":["115.0"],"攻击源码在仓库中仍可找到":["115.0"],"源码经过压缩":["115.0"],"简单地将一些关键字符串进行了":["115.0"],"编码":["115.0"],"其行为是利用第三方服务探测用户":["115.0"],"针对俄罗斯和白俄罗斯":["115.0"],"会尝试覆盖当前目录":["115.0"],"父目录和根目录的所有文件":["115.0"],"把所有内容替换成":["115.0"],"上具有周百万次的下载量":["115.0"],"这是又一次对脆弱的":["115.0"],"生态进行的一次沉痛打击":["115.0"],"百万周下载量的":["115.0"],"包以反战为名进行供应链投毒":["115.0"],"partitioned":["115.0"],"将在":["115.0"],"到":["115.0"],"版本启动":["115.0"],"chips":["115.0"],"试用版本":["115.0"],"指的是具有独立分区状态的":["115.0"],"它允许开发者将":["115.0"],"选择到":["115.0"],"分区":["115.0"],"存储中":["115.0"],"每个顶级站点都有单独的":["115.0"],"jar":["115.0"],"引入了一个新的":["115.0"],"它可以让顶级上下文":["115.0"],"顶级站点或第":["115.0"],"party":["115.0"],"sets":["115.0"],"决定哪些":["115.0"],"进行分区":["115.0"],"在站点":["115.0"],"中通过":["115.0"],"iframe":["115.0"],"嵌入了一个站点":["115.0"],"正常情况下如果三方":["115.0"],"被禁用后":["115.0"],"是无法在":["115.0"],"站点访问到它的":["115.0"],"在它的":["115.0"],"上指定了":["115.0"],"将保存在一个特殊的分区":["115.0"],"它只会在站点":["115.0"],"嵌入站点":["115.0"],"时才会生效":["115.0"],"浏览器会判定只会在顶级站点为":["115.0"],"时才发送该":["115.0"],"当用户访问一个新站点时":["115.0"],"例如站点":["115.0"],"如果也它通过":["115.0"],"嵌入了站点":["115.0"],"这时在站点":["115.0"],"下的站点":["115.0"],"是无法访问到之前在":["115.0"],"下面设置的那个":["115.0"],"谁能帮我们顺利过渡到没有三方":["115.0"],"的未来":["115.0"],"正式版发布":["115.0"],"2022年3月29号":["115.0"],"react18":["115.0"],"新的":["115.0"],"createroot":["115.0"],"替换":["115.0","154.2","181.0"],"starttransition":["115.0"],"用于非紧急状态更新":["115.0"],"渲染的自动批处理优化":["115.0"],"主要解决异步回调中无法批处理的问题":["115.0"],"reset":["116.1","119.4","175.12"],"soft":["116.1"],"软回溯":["116.1"],"配置用户名":["116.3"],"gitignore":["117.0"],"example":["117.1"],"我们可以创建一个名为":["117.2"],"的文件":["117.2","260.2"],"列出要忽略的文件模式":["117.2"],"如下例":["117.2"],"此为注释":["117.2"],"快速储藏代码":["118.2"],"默认储藏名称为":["118.2"],"wip":["118.2"],"查看stash列表":["118.3"],"show":["118.3","195.9"],"应用第一个储藏":["118.4"],"但不会删除":["118.4"],"stash":["118.5"],"删除以一个储藏":["118.5"],"并切换到此分支":["118.6"],"分支的状态与stash储藏时的状态一致":["118.6"],"暂存区的操作命令":["119.0"],"file":["119.4","286.46"],"取消暂存区已经暂存的文件":["119.4"],"head":["119.4","138.36","147.5","160.0","168.3","286.47"],"撤销上一次对文件的操作":["119.4"],"要确定上一次对文件的修改不再需要":["119.4"],"如果想保留上一次的修改以备以后继续工作":["119.4"],"重命名文件":["119.5"],"查询当前工作区所有文件的状态":["119.6"],"diff":["119.9","179.54"],"cached":["119.9","221.1"],"指定文件在暂存区和本地仓库的不同":["119.9"],"gnu":["119.10"],"privacy":["119.10"],"guard":["119.10"],"gpg":["119.10"],"来签署或验证":["119.10"],"一般我们都建议使用含附注型的标签":["119.10"],"以便保留相关信息":["119.10"],"如果只是临时性加注标签":["119.10"],"或者不需要旁注额外信息":["119.10"],"用轻量级标签也没问题":["119.10"],"列出现在所有的标签":["119.10"],"新建并切换到新建分支上":["119.11"],"删除分支":["119.11"],"将当前分支与指定分支进行合并":["119.11"],"merge":["119.11"],"是一种通用标记语言的文档声明类型":["120.0"],"它主要作用是告诉浏览器的解析器":["120.0"],"应该以什么样的":["120.0"],"文档类型定义":["120.0"],"来解析文档":["120.0"],"dtd":["120.2","279.7"],"w3":["120.3"],"org":["120.3","241.1","241.10","262.0","263.2"],"tr":["120.3","122.10","122.11","286.55"],"xhtml1":["120.3"],"严格模式":["120.4","172.0"],"如果文档包含严格的":["120.4"],"doctype":["120.4","147.5","150.10","241.1","241.10","279.1","279.7"],"那么它一般以严格模式呈现":["120.4"],"有":["120.4","179.64"],"uri":["120.4"],"如果说只存在严格模式":["120.5"],"中对他这样定义":["121.0"],"meta是":["121.0"],"文档级元数据元素":["121.0"],"用来表示那些不能由其它":["121.0"],"元相关元素":["121.0"],"例如某个组织或者机构":["121.1"],"对页面内容的描述":["121.2"],"使用逗号分隔":["121.3"],"目前仅用于移动设备":["121.4"],"可能你也发现了":["121.4"],"我们在":["121.4"],"vscode":["121.4"],"应当遵守的规则":["121.5"],"是用来做搜索引擎抓取的":["121.5"],"它的":["121.5","173.83"],"webkit":["121.6"],"默认webkit内核":["121.6"],"了":["121.7"],"它常常长这个样子":["121.7"],"用来声明文档类型和字符集":["121.8"],"prefetch":["121.9","177.12"],"pragma":["121.10"],"万维网联盟":["122.0"],"国际最著名的标准化组织":["122.0"],"和其他标准化组织制定的一系列的集合":["122.0"],"主要包括结构":["122.0"],"structure":["122.0"],"表现":["122.0"],"presentation":["122.0","172.0"],"行为":["122.0"],"behave":["122.0"],"三个方面":["122.0"],"为什么需要web标准":["122.0"],"浏览器不同":["122.0"],"他们显示的页面或者排版就有差异":["122.0"],"需要web标准来限制":["122.0"],"该标签用于定义段落":["122.2"],"hr":["122.3"],"abc":["122.4","134.3"],"使文字以特殊方式显示":["122.5"],"语义":["122.5"],"图片说明":["122.6"],"title":["122.6","147.5","150.2","172.0"],"提示文本":["122.6"],"图片宽度":["122.6"],"绝对路径":["122.7"],"从盘符开始的路径":["122.7"],"或者完整的网络地址":["122.7"],"锚":["122.8"],"注释":["122.9"],"键盘使用ctrl":["122.9"],"head的缩写":["122.11"],"th":["122.11","286.55"],"姓名":["122.11"],"表格头部":["122.12"],"表格主体":["122.12"],"合并单元格的个数":["122.13"],"跨列合并":["122.13"],"colspan":["122.13"],"特点":["122.14","173.17","173.95"],"li":["122.15","122.16","286.55"],"定义":["122.15"],"列表项1":["122.15"],"li标签":["122.16"],"来定义列表项":["122.16"],"ol":["122.16","286.55"],"dl":["122.17","286.55"],"dt":["122.17","195.8","286.55"],"名词":["122.17"],"dd":["122.17","286.55"],"收集用户信息":["122.18"],"在网页中我们也要跟用户进行交互":["122.18"],"会把它范围内的表单元素提交给服务器":["122.19"],"在表单域中定义的表单元素就是":["122.20"],"允许用户在表单中输入或选择的内容控件":["122.20"],"用户可以在其中输入文本":["122.21"],"默认宽度为20个字符":["122.21"],"password":["122.21"],"定义密码字段":["122.21"],"该字段中的字符被掩码":["122.21"],"checkbox":["122.21"],"定义复选框":["122.21"],"定义图像形式的提交按钮":["122.21"],"radio":["122.21"],"定义单选按钮":["122.21"],"submit":["122.21"],"当点击label标签内的文本时":["122.22"],"浏览器会自动将焦点":["122.22"],"光标":["122.22"],"option":["122.23"],"评论":["122.24"],"textarea标签是用于定义多行文本输入的控件":["122.24"],"它还允许我们指定值的":["123.0"],"低":["123.0"],"高":["123.0","181.0"],"最佳":["123.0"],"范围":["123.0"],"shape":["123.1"],"rect":["123.1","150.5"],"coords":["123.1"],"computer":["123.1"],"href":["123.1"],"phone":["123.1","284.37"],"这是因为它运行在浏览器的渲染主线程中":["124.0"],"而渲染主线程只有一个":["124.0"],"而渲染主线程承担着诸多的工作":["124.0"],"渲染页面":["124.0"],"新对象跟原对象不共享内存":["125.0"],"借助conardli大佬以下两张图片":["125.0"],"帮我们更好的理解两者的含义":["125.0"],"总而言之":["125.0"],"浅拷贝只复制指向某个对象的指针":["125.0"],"而不复制对象本身":["125.0"],"但深拷贝会另外创造一个一模一样的对象":["125.0"],"修改新对象不会改到原对象":["125.0"],"赋值和深":["125.0"],"浅拷贝的区别":["125.0"],"这三者的区别如下":["125.0"],"不过比较的前提都是":["125.0"],"针对引用类型":["125.0"],"当我们把一个对象赋值给一个新的变量时":["125.0"],"赋的其实是该对象的在栈中的地址":["125.0"],"而不是堆中的数据":["125.0"],"也就是两个对象指向的是同一个存储空间":["125.0"],"无论哪个对象发生改变":["125.0"],"其实都是改变的存储空间的内容":["125.0"],"两个对象是联动的":["125.0"],"浅拷贝":["125.0"],"重新在堆中创建内存":["125.0"],"拷贝前后对象的基本数据类型互不影响":["125.0"],"但拷贝前后对象的引用类型因共享同一块内存":["125.0"],"会相互影响":["125.0"],"深拷贝":["125.0"],"对对象中的子对象进行递归拷贝":["125.0"],"拷贝前后的两个对象互不影响":["125.0"],"我们先来看下面的例子":["125.0"],"对比赋值与深":["125.0"],"方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象":["125.1"],"然后返回目标对象":["125.1"],"obj1":["125.1","127.43"],"clone用来做":["125.2"],"shallow":["125.2","251.2"],"copy":["125.2","125.7","125.8","216.4"],"后面我们会再介绍利用这个库实现深拷贝":["125.2"],"它提供了一种非常方便的方式来执行浅拷贝":["125.3"],"这与":["125.3"],"的功能相同":["125.3","173.11"],"slice":["125.5","131.1","131.2","131.3","131.4","131.5","131.6","173.4"],"kobe":["125.6"],"arr4":["125.6"],"clonedeep用来做":["125.7"],"可以用来做":["125.8"],"先去存储空间中找":["125.9"],"有没有拷贝过这个对象":["125.9"],"如果有的话直接返回":["125.9"],"如果没有的话继续拷贝":["125.9"],"这样就巧妙化解的循环引用的问题":["125.9"],"关于这块如有疑惑":["125.9"],"请仔细阅读":["125.9"],"conardli大佬":["125.9"],"如何写出一个惊艳面试官的深拷贝":["125.9"],"这篇文章":["125.9"],"deepclone":["125.9"],"hash":["125.9","179.58"],"csrf等攻击":["126.2"],"所谓同源是指":["126.2"],"协议":["126.2","175.10"],"域名":["126.2"],"三者相同":["126.2"],"是一种双向通信协议":["126.3"],"在建立连接之后":["126.3"],"都能主动向对方发送或接收数据":["126.3"],"同时":["126.3","175.22","195.7"],"在建立连接时需要借助":["126.3"],"向目标服务器":["126.4"],"请求数据":["126.4"],"server1":["126.4"],"然后将nginx目录下的nginx":["126.5"],"conf修改如下":["126.5"],"proxy服务器":["126.5"],"domain1":["126.5"],"pass":["126.5"],"domain2":["126.5"],"反向代理":["126.5","175.21"],"加载后依旧存在":["126.6"],"并且可以支持非常长的":["126.6"],"2mb":["126.6"],"其中a":["126.6"],"html和b":["126.6"],"html是同域的":["126.6"],"html来实现":["126.7"],"三个页面":["126.7"],"不同域之间利用iframe的location":["126.7"],"hash传值":["126.7"],"相同域之间直接js访问来通信":["126.7"],"具体实现步骤":["126.7"],"一开始a":["126.7"],"html给c":["126.7"],"html传一个hash值":["126.7"],"然后c":["126.7"],"适用于该方式":["126.8"],"只需要给页面添加":["126.8"],"表示二级域名都相同就可以实现跨域":["126.8"],"强大的正则表达式":["127.1"],"更好的词法作用域链处理":["127.1"],"新的控制指令":["127.1"],"异常处理":["127.1"],"错误定义更加明确":["127.1"],"数据输出的格式化及其它改变":["127.1"],"2009年12月":["127.1"],"添加严格模式":["127.1"],"strict":["127.1","173.85"],"修改了前面版本模糊不清的概念":["127.1"],"增加了getters":["127.1"],"setters":["127.1"],"它的成语来自各个主流浏览器的代表成语":["127.2"],"会议实行多数决":["127.2"],"每一项决策只有大部分人同意且没有强烈反对才能去实现":["127.2"],"tc39成员制定着ecmascript的未来":["127.2"],"每一项新特性最终要进入到ecmascript规范里":["127.2"],"需要经历5个阶段":["127.2"],"跟":["127.3","127.18","203.1"],"这两种方式":["127.3"],"定义的变量没有块级作用域的概念":["127.3"],"person":["127.4"],"super":["127.5","176.6","178.4","209.3"],"这些函数表达式更适用于那些本来需要匿名函数的地方":["127.5"],"并且它们不能用作构造函数":["127.5"],"在es6以前":["127.5"],"在es6之前":["127.6"],"如果我们写函数需要定义初始值的时候":["127.6"],"需要这么写":["127.6"],"kris":["127.7"],"值从对象":["127.8"],"数组中取出":["127.8"],"赋值给其他变量":["127.8"],"比如我们需要交换两个变量的值":["127.8"],"在es6之前我们可能需要":["127.8"],"pi":["127.9","169.4"],"math":["127.9","154.13","169.4","174.25","178.8","286.22","287.1","287.6"],"area":["127.9"],"circumference":["127.9"],"我们要对一个数组的元素进行相加":["127.10"],"在不使用":["127.10"],"reduce":["127.10","288.1"],"reduceright":["127.10"],"的场合":["127.10"],"我们需要":["127.10"],"sum":["127.10","149.2","285.3"],"cat":["127.11"],"miaow":["127.11"],"dog":["127.11"],"woof":["127.11"],"rejected":["127.12","127.44","204.2"],"这个承诺一旦从等待状态变成为其他状态就永远不能更改状态了":["127.12"],"也就是说一旦状态变为":["127.12"],"就不能再次改变":["127.12"],"无效":["127.12"],"当我们在构造":["127.12"],"包括":["127.13","127.37","130.8"],"它的静态方法会暴露全局的symbol注册":["127.14"],"且类似于内建对象类":["127.14"],"但作为构造函数来说它并不完整":["127.14"],"因为它不支持语法":["127.14"],"迭代器对象可以通过重复调用next":["127.15"],"显式地迭代":["127.15"],"从而获取该对象每一级的值":["127.15"],"直到迭代完":["127.15"],"返回":["127.15","162.3","173.67","178.7","222.4"],"done":["127.15"],"虽然自定义的迭代器是一个有用的工具":["127.15"],"但由于需要显式地维护其内部状态":["127.15"],"因此需要谨慎地创建":["127.15"],"生成器函数提供了一个强大的选择":["127.15"],"othernan":["127.17"],"这些方法与":["127.18"],"的方法相同":["127.18"],"不是一个函数对象":["127.18"],"因此它是不可构造的":["127.18"],"是非常完美的配合":["127.18"],"例子如下":["127.18","127.45"],"y修饰符":["127.20"],"aaa":["127.20","130.3"],"aa":["127.20"],"r1":["127.20","141.8"],"r2":["127.20"],"match":["127.21","175.13"],"sticky":["127.22"],"表示是否有":["127.22"],"0oxx":["127.23"],"epsilon":["127.23"],"数值最小精度":["127.23"],"min":["127.23","291.1"],"safe":["127.23"],"integer":["127.23"],"最小安全数值":["127.23"],"copywithin":["127.24"],"把指定位置的成员复制到其他位置":["127.24"],"返回原数组":["127.24"],"array1":["127.24"],"根据情况":["127.25"],"如果包含则返回":["127.25"],"否则返回false":["127.25"],"pow":["127.26"],"一样的功能":["127.26"],"开头":["127.27"],"u00a9":["127.27"],"unicode码位用":["127.27"],"coffee":["127.28"],"blob":["127.28","283.10"],"myblob":["127.28"],"objecturl":["127.28"],"createobjecturl":["127.28"],"方法返回一个给定对象自身的所有可枚举属性值的数组":["127.29"],"值的顺序与使用for":["127.29"],"in循环的顺序相同":["127.29"],"区别在于":["127.29","127.30"],"其排列与使用":["127.30"],"循环遍历该对象时返回的顺序一致":["127.30"],"以便产生的字符串达到给定的长度":["127.31"],"填充从当前字符串的开始":["127.31"],"左侧":["127.31"],"应用的":["127.31"],"返回填充后达到指定长度的字符串":["127.32"],"从当前字符串的末尾":["127.32"],"右侧":["127.32"],"开始填充":["127.32"],"two":["127.33"],"对象用来表示一个通用的":["127.34"],"固定长度的原始二进制数据缓冲区":["127.34"],"类似于":["127.34"],"arraybuffer":["127.34"],"将指定位置上的数组元素与给定的值相与":["127.35"],"并返回与操作前该元素的值":["127.35"],"compareexchange":["127.35"],"如果数组中指定的元素与给定的值相等":["127.35"],"则将其更新为新的值":["127.35"],"并返回该元素原先的值":["127.35"],"object1":["127.36"],"property1":["127.36"],"descriptors1":["127.36"],"like":["127.37","214.2"],"移除对ecmascript在带标签的模版字符串中转义序列的语法限制":["127.38"],"非法转义序列在":["127.38"],"cooked":["127.38"],"所以断言也被称为":["127.39"],"非消耗性匹配":["127.39"],"非获取匹配":["127.39"],"正则表达式的断言一共有":["127.39"],"种形式":["127.39"],"零宽正向肯定断言":["127.39"],"²³¹¼½¾":["127.40"],"㉛㉜㉝":["127.40"],"ⅰⅱⅲⅳⅴⅵⅶⅷⅸⅹⅺⅻ":["127.40"],"01":["127.42","141.3"],"当promise的状态变更":["127.44"],"不管是变成":["127.44"],"不过它会首先使用映射函数映射每个元素":["127.45"],"然后将结果压缩成一个新数组":["127.45"],"这样效率会更高":["127.45"],"arr1":["127.45"],"但是在es10之后":["127.46"],"我们可以实现这个功能":["127.46"],"如果我们要去掉开头的空格":["127.46"],"可以使用":["127.46","175.10"],"或者它的别名":["127.46"],"同样的":["127.46"],"如果我们要去掉结尾的空格":["127.46"],"我们可以使用":["127.46"],"方法把键值对列表转换为一个对象":["127.47"],"它是":["127.47"],"entries":["127.47"],"tostring":["127.48"],"不同的是它不会包含":["127.48"],"的字符串":["127.48"],"regexp":["127.49","248.1"],"st":["127.49"],"得到的字符串是去掉空白符号的":["127.50"],"但是从es10开始会保留这些空格":["127.50"],"后面必须带异常参数":["127.51"],"bigint":["127.52"],"可以表示任意大的整数":["127.52"],"可以用在一个整数字面量后面加":["127.52"],"的方式定义一个":["127.52"],"10n":["127.52"],"或者调用函数":["127.52"],"属性包含类似于全局对象":["127.53"],"在浏览器中":["127.54"],"语句只能在声明了":["127.54"],"的标签中使用":["127.54"],"xvalue":["127.55"],"requestanimationframe":["127.55","168.18"],"bind":["127.55"],"event":["128.0","151.13","173.13","195.4","206.1","286.46"],"loop":["128.0","148.5","167.3","173.13","179.36","286.49"],"浏览器叫做":["128.0"],"vs":["129.0","205.0","219.12"],"即下标":["129.1"],"遍历对象返回的对象的key值":["129.1"],"遍历数组返回的数组的下标":["129.1"],"index索引为字符串型数字":["129.3"],"不能直接进行几何运算":["129.3"],"获取的是":["129.4"],"键名":["129.4"],"一个数据结构只要部署了symbol":["129.4"],"iterator属性":["129.4"],"就被视为具有iterator接口":["129.4"],"而object":["129.7"],"方法和json":["129.7"],"方法都指明与for":["129.7"],"in使用相同的枚举顺序":["129.7"],"因此它们的枚举顺序目前也不明晰":["129.7"],"特性":["130.0"],"任意的函数以及":["130.2"],"symbol":["130.2","132.3","132.4","173.25","173.68","173.69","173.70","184.8","228.2","231.4","251.2"],"作为对象属性值时":["130.2"],"tojson":["130.4"],"该函数返回什么值":["130.4"],"将会正常序列化":["130.5"],"nan":["130.6"],"infinity":["130.6"],"关于基本类型的序列化":["130.7"],"其他类型的对象":["130.8"],"对象之间相互引用":["130.9"],"形成无限循环":["130.9"],"执行此方法":["130.9"],"会抛出错误":["130.9"],"loopobj":["130.9"],"即便":["130.10"],"replacer":["130.10"],"参数中强制指定包含了它们":["130.10"],"第二个参数和第三个参数":["130.11"],"键":["130.12"],"和值":["130.12"],"则在字符串化时每一级别会比上一级别缩进多这个数字值的空格":["130.13"],"手写":["131.0"],"newarr":["131.2","131.4","286.15"],"创建一个空对象":["131.7"],"targetobj":["131.7"],"mycall":["131.8"],"typeof":["131.8","131.9","131.10","132.2","132.3","132.4","173.29","173.98","184.31","204.3","206.15","209.8","218.5","236.1","283.7","286.16"],"myapply":["131.9"],"存放callback":["132.1"],"callbacks":["132.1"],"catch":["132.1","217.7"],"可以不是数组":["132.2","132.3"],"但必须要具有":["132.2","132.3"],"iterator":["132.2","132.3","132.4"],"接口":["132.2","132.3","132.4","185.1"],"iterable":["132.4"],"当所有页面都监听同一频道的消息时":["133.1"],"其中某一个页面通过它发送的消息就会被其他所有页面收到":["133.1"],"它的api和用法都非常简单":["133.1"],"下面的方式就可以创建一个标识为alienzhou的频道":["133.1"],"bc":["133.1"],"中的核心技术之一":["133.2"],"由于本文重点不在":["133.2"],"因此如果想进一步了解":["133.2"],"可以阅读我之前的文章":["133.2"],"pwa学习与实践":["133.2"],"让你的webapp离线可用":["133.2"],"需要在页面注册":["133.2"],"页面逻辑":["133.2"],"serviceworker":["133.2"],"sw":["133.2"],"然后在各个页面内":["133.3"],"通过监听storage事件即可收到通知":["133.3"],"storage":["133.3"],"ctc":["133.3","133.5"],"来拉取最新的数据":["133.4"],"思路如下":["133.4"],"让":["133.4"],"支持两种消息":["133.4"],"一种是":["133.4"],"收到后会将该数据保存下来":["133.4"],"另一种是":["133.4"],"收到该消息后会将保存的数据通过postmessage传给注册它的页面":["133.4"],"也就是让页面通过":["133.4"],"来主动获取":["133.4"],"同步":["133.4"],"最新消息":["133.4"],"具体实现如下":["133.4"],"我们会在页面中启动一个":["133.4"],"openstore":["133.5"],"storename":["133.5"],"aleinzhou":["133.5"],"don":["133.5","206.8"],"open":["133.5","241.1","241.6","241.10"],"db":["133.5"],"onsuccess":["133.5"],"result":["133.5","173.2","174.8","174.20","174.60","286.12","286.30","286.31"],"win":["133.6"],"sample":["133.6","133.7"],"然后":["133.6","175.22","181.0"],"当我们需要发送消息的时候":["133.6"],"作为消息的发起方":["133.6"],"一个页面需要同时通知它打开的页面与打开它的页面":["133.6"],"过滤掉已经关闭的窗口":["133.6"],"closed":["133.6"],"因此可以在每个页面中嵌入一个":["133.7"],"bridge":["133.7"],"而这些":["133.7"],"由于使用的是一个":["133.7"],"因此属于同源页面":["133.7"],"其通信方式可以复用上面第一部分提到的各种方式":["133.7"],"页面与":["133.7"],"channe":["133.9"],"导致浏览器的url不会发生任何变化而完成了请求":["134.1"],"网页不会重载":["134.2"],"如单纯的hash网址改变网页不会变化":["134.2"],"本身是用来做页面跳转定位的":["134.3"],"这里的":["134.3"],"abc就是hash":["134.3"],"散列值是不会随请求发送到服务器端的":["134.3"],"所以改变hash":["134.3"],"不会重新加载页面":["134.3"],"对象的当前状态":["134.4"],"即未设置":["134.4"],"back":["134.4","152.8"],"forward":["134.4","152.8"],"go":["134.4"],"这三个方法用于在历史之中移动":["134.4"],"移动到上一个网址":["134.4"],"等同于点击浏览器的后退键":["134.4"],"对于第一个访问的网址":["134.4"],"该方法无效果":["134.4"],"移动到下一个网址":["134.4"],"等同于点击浏览器的前进键":["134.4"],"对于最后一个访问的网址":["134.4"],"接受一个整数作为参数":["134.4"],"以当前网址为基准":["134.4"],"移动到参数指定的网址":["134.4"],"如果参数超过实际存在的网址范围":["134.4"],"如果不指定参数":["134.4"],"默认参数为0":["134.4"],"相当于刷新当前页面":["134.4"],"计算机硬件没有原子钟":["135.0"],"cpu":["135.0","149.4","154.8","177.13"],"计时器做的":["135.0"],"和解码":["136.0"],"unescape":["136.1"],"escape":["136.2"],"函数用于js对字符串进行编码":["136.2"],"encodeuri":["136.3","136.4"],"用于整个url编码":["136.4"],"encodeuricomponent":["136.5"],"而不用于对整个url进行编码":["136.6"],"pro":["136.7"],"pp":["136.8"],"paramurl":["136.8"],"such":["137.0"],"directory":["137.0"],"stores":["137.0"],"attributes":["137.0"],"disk":["137.0"],"locations":["137.0"],"metadata":["137.0"],"times":["137.0","217.7"],"last":["137.0","241.8"],"modification":["137.0"],"对硬链接来说":["137.1"],"unlink":["137.2"],"其实是将inode的链接数减1":["137.2"],"对于前文的硬链接":["137.2"],"但硬链接只能链接文件":["137.3"],"但是硬链接不行":["137.4"],"文件备份是一种好的办法":["137.5"],"但拷贝文件会带来磁盘空间的消耗":["137.5"],"硬链接能不占用磁盘空间实现文件备份":["137.5"],"利用软链接在桌面创建快捷方式":["137.6"],"可以迅速打开并编辑文件":["137.6"],"灵活切换程序版本":["137.6"],"对于机器上同时存在多个版本的程序":["137.6"],"yum":["138.2"],"版本信息":["138.4"],"相关目录":["138.5"],"systemctl":["138.8","138.9"],"重启":["138.10","178.2"],"更改":["138.14"],"kill":["138.15","177.13"],"最终配置":["138.16"],"nginx":["138.18","138.19"],"客户端地址":["138.21"],"已经过验证的用户名":["138.21"],"deeruby":["138.22","138.31"],"区别":["138.23"],"图中静态资源所在目录为":["138.23"],"访问":["138.26"],"实际工作中":["138.27"],"解决跨域一般为后端配置":["138.27"],"sso":["138.31"],"证书配置":["138.31"],"certificate":["138.31"],"flag":["138.33","206.1","206.8","215.2"],"正则":["138.33"],"跳转后的内容":["138.33"],"rewrite支持的flag标记":["138.33"],"invalid":["138.34"],"referer":["138.34"],"值为1":["138.34"],"对不允许的规则返回403":["138.34"],"home":["138.35","138.38","178.7"],"expires":["138.37"],"pc":["138.38"],"分配":["138.39"],"这样每个访客固定访问一个后端服务":["138.39"],"可有效解决动态网页存在的":["138.39"],"共享问题":["138.39"],"fair":["138.39"],"10m":["138.40"],"每个":["138.40","178.5","179.11"],"只能发起3个连接":["138.40"],"请求频率限制":["138.40"],"api请求":["138.40"],"gzip":["138.42"],"之间的服务器":["139.1"],"为了从原始服务器取得内容":["139.1"],"客户端向代理发送一个请求并指定目标":["139.1"],"并将从服务器上得到的结果返回给网络上请求连接的客户端":["139.2"],"此时代理服务器对外就表现为一个服务器":["139.2"],"减轻每台服务器的压力":["139.3"],"多台服务器":["139.3"],"集群":["139.3"],"可以根据配置对不同的请求做不同转发":["139.4"],"这是动态分离的基础":["139.4"],"静态请求对应的静态资源可以直接放在nginx":["139.4"],"上做缓冲":["139.4"],"每个文件就是一个单独的模块":["140.0"],"并且它遵循的是":["140.0"],"commonjs":["140.0","179.26"],"规范":["140.0"],"也就是使用":["140.0"],"的方式导入模块":["140.0"],"的方式导出模块":["140.0"],"模块的运行机制也很简单":["140.0"],"其实就是在每一个模块外层包裹了一层函数":["140.0"],"有了函数的包裹就可以实现代码间的作用域隔离":["140.0"],"你可能会说":["140.0"],"我在写代码的时候并没有包裹函数呀":["140.0"],"是的的确如此":["140.0"],"这一层函数是":["140.0"],"自动实现的":["140.0"],"可以来测试一下":["140.0"],"新建一个":["140.0"],"在第一行打印一个并不存在的变量":["140.0"],"比如打印":["140.0"],"的时候依次传入参数":["140.2"],"最后传入的是要执行的字符串":["140.2"],"比如这里传入参数":["140.2"],"要执行的字符串":["140.2"],"是一个独立的模块":["140.3"],"并不在":["140.3"],"所以会直接报错":["140.3"],"extname":["140.4"],"获取扩展名":["140.4"],"父级路劲":["140.4"],"join":["140.4","154.20","178.8","179.33"],"拼接路径":["140.4"],"当前文件夹的绝对路径":["140.4"],"定义导入类":["140.5"],"参数为模块路径":["140.5"],"中获取到模块的绝对路径":["140.5"],"方便使用":["140.5","195.4"],"加载模块":["140.5"],"这里读取模块内容使用":["140.5"],"来抽象":["140.5"],"trymoduleload":["140.5"],"来加载模块内容":["140.5"],"稍后实现":["140.5"],"的返回值应该是模块的内容":["140.5"],"也就是":["140.5","145.5"],"获取当前要加载的绝对路径":["140.5"],"abspathname":["140.5"],"创建模块":["140.5"],"新建module实例":["140.5"],"加载当前模块":["140.5"],"返回exports对象":["140.5"],"的实现很简单":["140.5"],"就是给模块创建一个":["140.5"],"执行的时候将内容加入到":["140.5"],"就是模块的绝对路径":["140.5"],"定义模块":["140.5"],"添加文件id标识和exports属性":["140.5"],"读取到的文件内容会放在exports中":["140.5"],"模块是运行在一个函数中":["140.5"],"这里给":["140.5"],"导入相关模块":["140.6"],"抽离通过module":["140.7"],"缓存模块":["140.9"],"利用trymoduleload":["140.11"],"将拿到的字符串使用runinthiscontext运行字符串":["140.14"],"让字符串执行并将this改编成exports":["140.15"],"判断变量":["141.2"],"函数的一些类型":["141.2"],"lookup":["141.4"],"底层系统工具进行":["141.4"],"将域名":["141.4"],"runoob":["141.4"],"解析为第一条找到的记录":["141.4"],"ipv4":["141.4"],"aaaa":["141.4"],"ipv6":["141.4"],"系统主机名":["141.6"],"系统内核版本的字符串":["141.6"],"os":["141.6","154.8","154.10","154.17"],"主要处理绝对路径":["141.7"],"提供上述":["141.8"],"的方法":["141.8"],"不过总是以":["141.8"],"win32":["141.8"],"兼容的方式交互":["141.8"],"resolve参数解析为绝对路径":["141.8"],"包如何调试":["142.11"],"需要立即解决的":["142.27"],"什么是软链":["143.2"],"然后再想要使用该包的项目里使用这个软链":["143.5"],"tips":["143.5"],"serve":["144.1","166.8"],"这条命令":["144.1"],"那":["144.1"],"为什么":["144.1","200.6"],"不直接执行vue":["144.1"],"serve而要执行npm":["144.1"],"呢":["144.1","173.22","195.3","195.4"],"直接执行vue":["144.1"],"因为操作系统中没有存在vue":["144.1"],"bin中":["144.2"],"必须输入完整文件名":["144.3"],"中默认的可执行文件":["144.4"],"中可执行文件":["144.5"],"xxx的时候":["144.6"],"会先在当前目录的":["144.6"],"业务依赖":["145.2"],"devdependencies":["145.2"],"但是为了整个发布过程的自动化":["145.3"],"尽量使用":["145.3"],"指令来自动更新version":["145.3"],"prepatch":["145.5"],"版本号变为":["145.5"],"解析也是需要时间的":["146.1"],"格式的浏览器尽量使用":["146.2"],"格式":["146.2"],"属性的属性值preload能够让你在你的html页面中":["146.3"],"元素内部书写一些声明式的资源获取请求":["146.3"],"可以指明哪些资源是在页面加载完成后即刻需要的":["146.3"],"可以使用以下代码开启预渲染":["146.4"],"该技术可以用于首屏优化":["146.5"],"通常是可视区域":["146.6"],"但也可以是即将进入可视区域":["146.6"],"加载":["146.7"],"由于浏览器对于单个域名有并发请求上限":["146.7"],"属性来决定是否执行懒加载":["147.0"],"但是实测中发现该属性在edge浏览器中并不起作用":["147.0"],"所以需要通过脚本的方式去实现":["147.0"],"简单来说":["147.0","173.79"],"还没有出现在用户可见范围内的图像资源不加载":["147.0"],"从窗口的":["147.1"],"顶部":["147.1"],"左部":["147.1"],"开始计算":["147.1"],"坐标变量为":["147.1"],"clientx":["147.1"],"clinety":["147.1"],"作为内建":["147.2"],"domrect":["147.2"],"类的对象":["147.2"],"主要的":["147.2"],"另外一种是屏幕的大小":["147.3"],"固定值":["147.3"],"第一种":["147.3"],"获取当前窗口实际大小":["147.3"],"使用window对象":["147.3"],"isintersecting":["147.5"],"是一个boolean值":["147.5"],"表示被观察的节点是否与文档视窗交叉":["147.5"],"即有没有出现在可见窗口中":["147.5"],"说明":["147.5"],"所监听对象的具体祖先元素":["147.5"],"如果未传入值或值为":["147.5"],"则默认使用顶级文档的视窗":["147.5"],"disconnect":["147.5"],"使":["147.5"],"对象停止监听工作":["147.5"],"开始监听一个目标元素":["147.5"],"unobserve":["147.5"],"停止监听特定目标元素":["147.5"],"用法示例":["147.5"],"测试文本1":["147.5"],"测试文本2":["147.5"],"测试文本3":["147.5"],"浏览器会把任务放到队列中不执行":["148.0"],"而是准备解析和编译js而防止阻塞js":["148.0"],"之后网站上的任务才会因为用户交互驱动事件处理器":["148.0"],"js动画以及分析收集的后台活动等js活动而触发":["148.0"],"worker这种情况例外":["148.0"],"什么是主线程":["148.0"],"浏览器绝大多的任务都发生在":["148.0"],"主线程":["148.0"],"其主线程名称的由来也主要是因为":["148.0"],"几乎所有js都在主线程运行":["148.0"],"主线程每次":["148.0"],"只能处理一个任务":["148.0"],"当任务耗时超过特定时间":["148.0"],"50ms":["148.0"],"就会被归类为":["148.0"],"长耗时":["148.0"],"如果发生长耗时时存在用户交互":["148.0"],"或者关键渲染更新时":["148.0"],"浏览器就会延后再处理用户交互":["148.0"],"这会直接导致用户交互或者渲染出现延迟":["148.0"],"task":["148.0","148.3","148.5","173.52","195.4"],"performance":["148.0"],"profiler":["148.0"],"blocking":["148.0","148.4","179.44"],"portion":["148.0"],"savesettings":["148.1","148.2","148.4"],"critical":["148.1"],"validateform":["148.1","148.4"],"其他的任务可能优先级别调整的会更高":["148.2"],"一种让步于主线程的方式是配合用了settimeout的promise":["148.2"],"yieldtomain":["148.2"],"尽管这个例子在返回promise中通过setimeout来调用resolve":["148.2"],"但此时并不是新开一个任务让promise执行后续代码":["148.2"],"而是通过settimeout调用":["148.2"],"因为promise的回调属于微任务":["148.2"],"因此不会让步于主线程":["148.2"],"让步于用户输入":["148.3"],"scheduling":["148.3"],"如果有用户输入在等待":["148.3"],"则让步":["148.3"],"shift":["148.3","148.5","180.0","206.2"],"queue":["148.3","256.1","256.6"],"savesetting":["148.3"],"执行过程中":["148.3"],"也是该函数的默认参数":["148.4"],"适用于优先级别最高的任务":["148.4"],"拿下面的代码来举例":["148.4"],"在三处分别都是最高优先级别":["148.4"],"其他的另外两个任务优先级别都是最低":["148.4"],"high":["148.4"],"priority":["148.4","206.2"],"scheduler":["148.4","206.15"],"updateui":["148.5"],"sendanalytics":["148.5"],"off":["148.5","206.8"],"可以把寄存器看成一个":["149.4"],"和内存之间的一个缓存":["149.4"],"二者行为是相反的":["150.0"],"又叫延迟加载":["150.1"],"按需加载":["150.1","150.15"],"当我们打开一个网页":["150.1"],"device":["150.2"],"initial":["150.2"],"图片懒加载":["150.2"],"如何加载图片":["150.4"],"该函数返回rect对象":["150.5"],"如果rect":["150.5"],"bottom为负数":["150.5"],"最初打开页面":["150.6"],"当需要时可以立刻显示出来":["150.7"],"目的":["150.7","175.10"],"看完一张图片":["150.7"],"再看下一张时":["150.7"],"通过css":["150.9"],"当使用到已经预加载好的图片时":["150.10"],"会直接使用缓存好的图片资源":["150.10"],"而不需要向服务器发送请求":["150.10"],"通过javascript":["150.11"],"创建一个":["150.12","232.3"],"延迟加载":["150.15"],"提前加载":["150.15"],"的性能一定程度上影响了用户留存率":["151.1"],"doubleclick":["151.1"],"开发者提出了一种":["151.2"],"rail":["151.2"],"页面初始访问速度":["151.3"],"交互响应速度":["151.3"],"标记浏览器渲染任何在视觉上不同于导航前屏幕内容之内容的时间点":["151.4"],"fcp":["151.4","152.11","152.18","152.25"],"这个对象表示出现在当前浏览上下文的":["151.5"],"类型":["151.5","184.20","184.21","189.0","248.1","258.3"],"比如获取某个资源所需要的重定向次数":["151.5"],"redirectcount":["151.5","152.8"],"表示在到达这个页面之前重定向了多少次":["151.5"],"domcomplete":["151.7"],"html文档完全解析完毕的时间节点":["151.7"],"domcontentloaded事件触发的结束时间":["151.7"],"domcontentloadedeventstart":["151.7"],"domcontentloaded事件触发的结开始时间":["151.7"],"dominteractive":["151.7"],"返回当前网页dom结构结束解析":["151.7"],"开始加载内嵌资源":["151.7"],"如js":["151.7"],"即document":["151.7"],"performancenavigationtiming":["151.9"],"us":["151.9"],"2timing少以下字段":["151.10"],"domloading":["151.10"],"指浏览器和web服务器建立tcp":["151.12"],"ip连接所用的时间":["151.12"],"ssl连接耗时":["151.12"],"secureconnectionstart":["151.12"],"只在":["151.12"],"下有效":["151.12"],"属于tcp连接耗时的一部分":["151.12"],"指安全连接握手耗时":["151.12"],"网路请求耗时":["151.12"],"responsestart":["151.12","152.9"],"requeststart":["151.12"],"指开始发送请求到服务器返回第一个字节所需要的时间":["151.12"],"数据传输耗时":["151.12"],"什么样的时间才算是首屏加载完成":["151.13"],"lighthouse":["151.13"],"中使用的是":["151.13"],"渲染过程中记录的":["151.13"],"trace":["151.13"],"可利用":["151.13"],"使感知等待时间减少了":["152.2"],"从而将搜索引擎流量和注册量提高了":["152.2"],"通过将平均页面加载时间减少":["152.2"],"基于会话的转换增加":["152.3"],"秒以内得到响应时":["152.5"],"会感觉系统的响应很快":["152.5"],"当用户在":["152.5"],"contentful":["152.6"],"从页面开始加载到页面内容的任何部分呈现在屏幕上的时间":["152.6"],"关注的焦点是内容":["152.6"],"这个度量可以知道用户什么时候收到有用的信息":["152.6"],"文本":["152.6"],"图像等":["152.6"],"fmp":["152.6"],"首次有效绘制":["152.6"],"meaningful":["152.6"],"表示页面的":["152.6"],"主要内容":["152.6"],"开始出现在屏幕上的时间点":["152.6"],"年":["152.7"],"日提出了新的使用者体验量化方式":["152.7"],"推出":["152.7"],"如果有重定向的话":["152.8"],"页面通过几次重定向跳转而来":["152.8"],"navigatenext":["152.8"],"正常进入的页面":["152.8"],"非刷新":["152.8"],"非重定向等":["152.8"],"reload":["152.8"],"刷新的页面":["152.8"],"通过浏览器的前进后退按钮进入的页面":["152.8"],"历史记录":["152.8"],"非以上方式进入的页面":["152.8"],"核心时间相关":["152.8"],"timing":["152.8","152.12","179.9"],"在同一个浏览器上下文中":["152.8"],"前一个网页":["152.8"],"与当前页面不一定同域":["152.8"],"unload":["152.8"],"的时间戳":["152.8"],"如果无前一个网页":["152.8"],"重定向耗时":["152.9"],"redirectend":["152.9"],"getentries":["152.10"],"获取特定名称的时间数据":["152.11"],"比如面试过程非常喜欢问的":["152.11"],"方法返回当前网页自从":["152.12"],"measure":["152.13"],"手动测量性能":["152.13"],"这块具体的代码示例":["152.13"],"面板":["152.14"],"咱们别怕":["152.15"],"一点点带大家分析":["152.15"],"从上到下分别为":["152.15"],"个区域":["152.15"],"上面红框从左到右":["152.16"],"咱们把鼠标放上去可以看到几个英文单词":["152.16"],"1fps":["152.17"],"meter":["152.17"],"sec":["152.17"],"米":["152.17"],"如上图所示":["152.17"],"绿色竖线越高":["152.17"],"越高":["152.17"],"文档完全加载并解析之后触发":["152.18"],"无需等待样式":["152.18"],"子":["152.18","181.0"],"结束":["152.18"],"作为明显的对比":["152.18"],"load":["152.18","217.2"],"事件是当个页面完全被加载时才触发":["152.18"],"首屏绘制":["152.18"],"页面刚开始渲染的时间":["152.18"],"contentfulpaint":["152.18"],"首屏内容绘制":["152.18"],"首次绘制任何文本":["152.18"],"图像":["152.18"],"非空白":["152.18"],"浏览器解析":["152.20"],"finish":["152.20"],"网络请求完成":["152.20"],"receive":["152.20"],"请求的响应数据到达事件":["152.20"],"如果响应数据很大":["152.20"],"拆包":["152.20"],"可能会多次触发该事件":["152.20"],"响应头报文到达时触发":["152.20"],"发送网络请求时触发":["152.20"],"这里有两列时间数据":["152.21"],"一是":["152.21"],"表示事件调用顺序列表":["152.22"],"wx20220107":["152.22","152.24"],"方式应用":["152.24"],"sp":["152.25"],"指无障碍设计":["152.26"],"最佳实践":["152.27"],"离线应用":["152.29"],"pwa":["152.29"],"运用现代的":["152.29"],"taobao":["152.30"],"结果":["152.30"],"error01":["152.30"],"有小伙伴也遇到相同问题":["152.30"],"lighthouse09":["152.30"],"我们可以看到解决方案":["152.30"],"其实就是将一个原本需要全部列表项的渲染的长列表":["153.1"],"gpu":["153.2"],"资源":["153.2"],"导致卡顿":["153.2"],"因为涉及到的变量很多":["153.4"],"实现起来还是有点繁琐":["153.4"],"flushsync":["153.5"],"fixedsizelist":["153.5"],"containerheight":["153.5"],"itemheight":["153.5","153.6"],"itemcount":["153.5","153.6"],"children":["153.5","153.6","153.7","176.4","214.3","216.2","218.5","219.4","231.2","232.2","236.4","236.7","240.1","241.9","252.4"],"语义不好":["153.5","153.6","153.7","153.11"],"赋值给":["153.5","153.6","153.7","153.11"],"component":["153.5","153.6","153.7","153.11","195.7","196.9","206.1","209.3","209.11","214.1","216.2","216.3","216.6","218.5","218.8","219.10","230.1","235.4","236.7"],"contentheight":["153.6","153.7"],"内容高度":["153.6","153.7"],"scrolltop":["153.6","153.7","153.11","156.3","286.59"],"setscrolltop":["153.7","153.11","156.3"],"三种让":["153.8"],"定位到正确位置的方案":["153.8"],"可自行切换":["153.8"],"感受":["153.8"],"的不同":["153.8"],"一个将":["153.8"],"getitemheight":["153.10"],"组件会通过这个函数":["153.10"],"来拿到不同列表项的高度":["153.10"],"来计算出":["153.10"],"offsets":["153.10"],"setoffsets":["153.11"],"genoffsets":["153.11"],"滚动高度":["153.11"],"setheight":["153.12"],"itemref":["153.12"],"getboundingclientrect":["153.12"],"越来越多的项目使用webpack5来构建项目了":["154.0"],"的总打包耗时以及每个":["154.1"],"的打包耗时":["154.1"],"从而让我们对打包时间较长的部分进行针对性优化":["154.1"],"通过以下命令安装插件":["154.1"],"添加或删除模块":["154.2"],"而无需重新加载整个页面":["154.2"],"基本配置":["154.2"],"其他省略":["154.2"],"devserver":["154.2"],"库":["154.3"],"过程中扮演什么角色":["154.3"],"的过程中":["154.3"],"开发者工具我知道浏览器是通过":["154.3"],"websocket":["154.3"],"进行通信的":["154.3"],"中并没有发现新模块代码":["154.3"],"打包后的新模块又是通过什么方式发送到浏览器端的呢":["154.3"],"为什么新的模块不通过":["154.3"],"随消息一起发送到浏览器端呢":["154.3"],"浏览器拿到最新的模块代码":["154.3"],"又是怎么将老的模块替换成新的模块":["154.3"],"在替换的过程中怎样处理模块之间的依赖关系":["154.3"],"eslintwebpackplugin":["154.4","154.5","154.10","154.17"],"htmlwebpackplugin":["154.4","154.5","154.10","154.17"],"编译结果进行缓存":["154.5"],"filesystem":["154.6"],"来缓存生成的":["154.6"],"模块和":["154.6"],"fullhash":["154.7"],"webpack4":["154.7","177.9"],"每次修改任何一个文件":["154.7"],"所有文件名的":["154.7"],"至都将改变":["154.7"],"所以一旦修改了任何一个文件":["154.7"],"整个项目的文件缓存都将失效":["154.7"],"chunkhash":["154.7"],"根据不同的入口文件":["154.7"],"进行依赖文件解析":["154.7"],"构建对应的":["154.7"],"chunk":["154.7"],"生成对应的哈希值":["154.7"],"我们":["154.7"],"我们启动进程的数量就是我们":["154.8"],"的核数":["154.8"],"如何获取":["154.8"],"因为每个电脑都不一样":["154.8"],"nodejs核心模块":["154.8"],"直接使用":["154.8"],"cpu核数":["154.8","154.16"],"threads":["154.8","154.16"],"cpus":["154.8","154.16"],"或者引用第三方工具函数库或组件库":["154.9"],"如果没有特殊处理的话我们打包时会引入整个库":["154.9"],"但是实际上可能我们可能只用上极小部分的功能":["154.9"],"minicssextractplugin":["154.10","154.17"],"mini":["154.10","154.17"],"extract":["154.10","154.17","193.8"],"cssminimizerplugin":["154.10","154.17"],"minimizer":["154.10","154.17"],"新建文件":["154.11"],"内容无关紧要":["154.11"],"主要观察打包输出的结果":["154.11"],"onclick":["154.13","156.14","207.7"],"实现按需加载":["154.13"],"即使只被引用了一次":["154.13"],"也会代码分割":["154.13"],"iconfont":["154.14"],"eslintrc":["154.15"],"获取处理样式的loaders":["154.16"],"getstyleloaders":["154.16"],"preprocessor":["154.16"],"postcssoptions":["154.16"],"preset":["154.16","205.4"],"能解决大多数样式兼容性问题":["154.16"],"生产模式需要输出":["154.16"],"兼容性好一点":["154.17"],"配置如下":["154.17"],"terserplugin":["154.17"],"terser":["154.17"],"imageminimizerplugin":["154.17"],"一旦遇到低版本浏览器会直接报错":["154.18"],"所以我们想要将":["154.18"],"兼容性问题彻底解决":["154.18"],"是专门用来做":["154.18"],"以及以上":["154.18"],"polyfill":["154.18"],"翻译过来叫做垫片":["154.18"],"补丁":["154.18"],"就是用社区上提供的一段代码":["154.18"],"让我们在不兼容某些新特性的浏览器上":["154.18"],"使用该新特性":["154.18"],"手动全部引用":["154.18"],"配置externals的方法有多种":["154.19"],"具体查看webpack官网externals":["154.19"],"cdn":["154.19"],"引入":["154.19"],"lodash":["154.20"],"niall":["154.20"],"august":["154.20"],"append":["154.20","175.6"],"green":["154.20"],"业务代码":["155.0"],"这是项目的基础":["155.0"],"一般业务没有变更的情况下":["155.0"],"开启代码压缩":["155.1"],"分包":["155.2"],"删除无用代码":["155.3"],"本地图片替换成cdn图片":["155.4"],"wxml结构精简":["155.5"],"wxml的内容基本以原始文本的形式存在于打包后的代码中":["155.5"],"对于代码量很大的项目来说":["155.6"],"替换成更短的路径也能省不少空间":["155.6"],"组件越多":["155.6"],"代码目录层级越深":["155.6"],"原子css":["155.7"],"原子css的基本原则":["155.7"],"但之前为了阅读的友好":["155.8"],"命名仍然有些长":["155.8"],"可以采用短命名替换":["155.8"],"通过编译手段进一步降低代码的体积":["155.8"],"目前来说pc端支持的不是特别好":["155.9"],"需要升级到一定版本之后才行":["155.9"],"特别是企业微信坑很多":["155.9"],"本质上是一个":["156.1"],"而这个函数主要就是":["156.1"],"逻辑复用":["156.1"],"我们首先要知道一件事":["156.1"],"的驱动条件是什么":["156.1"],"的修改":["156.1"],"usestate":["156.1","156.10","156.19","205.2","286.38"],"usereducer":["156.1"],"的使用是无状态组件更新的条件":["156.1"],"从而驱动自定义hooks":["156.1"],"通用模式":["156.1"],"自定义hooks的名称是以use开头":["156.1"],"我们设计为":["156.1"],"usexxx":["156.1"],"参数一":["156.1"],"参数二":["156.1"],"简单的小例子":["156.1"],"usepow":["156.1"],"不要相互去影响":["156.2"],"那么此时用":["156.2"],"是最佳的解决方案":["156.2"],"这里要尤其注意一点":["156.2"],"只要父组件的状态更新":["156.2"],"无论有没有对自组件进行操作":["156.2"],"子组件都会进行更新":["156.2"],"就是为了防止这点而出现的":["156.2"],"在讲":["156.2"],"之前":["156.2"],"我们先说说":["156.2"],"memo":["156.2"],"的作用是":["156.2"],"结合了purecomponent纯组件和":["156.2"],"componentshouldupdate功能":["156.2"],"会对传入的props进行一次对比":["156.2"],"然后根据第二个函数返回值来进一步判断哪些props需要更新":["156.2"],"具体使用会在下文讲到":["156.2"],"的理念上差不多":["156.2"],"都是判断是否满足当前的限定条件来决定是否执行":["156.2"],"scrollref":["156.3"],"setclientheight":["156.3"],"有可能会导致拿到的是旧值":["156.4"],"并且如果他们更新会带来整个组件重新执行":["156.4"],"这种情况下":["156.4"],"我们使用useref将会是一个非常不错的选择":["156.4"],"redux":["156.4","178.7","205.19"],"的源码中":["156.4"],"在hooks推出后":["156.4"],"我们可以进行简单的封装":["156.5"],"这样做的好处是":["156.5"],"可以随时确保获取的是最新值":["156.5"],"并且也可以解决闭包问题":["156.5"],"容易出现潜在的的性能隐患":["156.6"],"可以避免":["156.6"],"这里的性能隐患是指":["156.6"],"每次重渲染":["156.6"],"都会执行实例化":["156.6"],"subject":["156.6","288.2"],"即便这个实例立刻就被扔掉了":["156.6"],"factory":["156.6"],"可以避免性能隐患":["156.6"],"button":["156.7","156.11","156.18","190.2","205.1","205.6"],"mobile":["156.7","156.10","156.11","156.18"],"components":["156.7","156.18","195.8","230.1","236.1","256.4"],"useeffect":["156.8","156.20","156.21","205.2","208.7"],"的第二个参数":["156.8"],"来确保所传入的函数为最新的状态":["156.9"],"所以可以结合上述讲的uselatest结合使用":["156.9"],"想要弄成响应式":["156.12"],"就必须监听到值的变化":["156.12"],"在做出更改":["156.12"],"我们对这个数进行操作的时候":["156.12"],"cb":["156.13","258.5"],"receiver":["156.13","251.2"],"reflect":["156.13","247.1"],"bugscount":["156.14"],"fontweight":["156.14"],"bold":["156.14"],"基本使用":["156.14"],"margintop":["156.14"],"对数字进行操作":["156.14"],"justifycontent":["156.14"],"primary":["156.14"],"加1":["156.14"],"marginleft":["156.14"],"减1":["156.14"],"handler":["156.15","214.2"],"useeffectwithtarget":["156.16"],"一开搞错了":["156.16"],"以为这个是类似于":["156.16"],"usecreation":["156.16"],"deps":["156.17","208.16","209.4","255.0"],"useeffecttarget":["156.17"],"fc":["156.18","156.24"],"mouseenter":["156.19"],"mouseleave":["156.19"],"在返回布尔值就行了":["156.19"],"uselatest":["156.20","156.21"],"详细代码":["156.21"],"跟之前一样我们先来想想这个钩子需要什么":["156.22"],"我们要做倒计时的钩子首先需要一个目标时间":["156.22"],"interface":["156.23","184.26","184.33","214.1","217.0"],"targetdate":["156.23","156.24"],"interval":["156.23"],"onend":["156.23"],"formattedres":["156.23","156.24"],"days":["156.23"],"hours":["156.23"],"seconds":["156.23"],"milliseconds":["156.23"],"简单的做下总结":["156.26"],"一个优秀的hooks一定会具备":["156.26"],"usememo":["156.26"],"usecallback":["156.26"],"setstate异步更新":["157.0"],"先来看下面的例子":["157.0"],"如果每次调用setstate都进行一次更新":["157.1"],"那么意味着render函数会被频繁调用":["157.1"],"也可以在生命周期函数中获取":["157.2"],"componentdidupdate":["157.2","178.2","178.3"],"prevprops":["157.2"],"prevstate":["157.2","208.17"],"snapshot":["157.2"],"个异步请求需要发送":["158.1","164.1"],"但是由于某些原因":["158.1","164.1"],"要求我们必须将同一时刻的并发请求数量控制在":["158.1","164.1"],"urls":["158.2","158.4","164.2","164.4"],"集合和并发返回之后的":["158.2","164.2"],"results":["158.2","158.3","164.2","164.3"],"集合":["158.2","164.2"],"下面就开始演示这个思路是如何开始的":["158.2","164.2"],"首先按照每次只能并发":["158.2","164.2"],"下一个请求的下标":["158.3","164.3"],"可以看到":["158.5","164.5"],"的需求":["159.0"],"我们的服务器每隔":["159.0"],"5秒":["159.0"],"客户端不停地调用服务端接口以获得最新的数据":["159.1"],"下图是一个简单的轮询过程":["159.1"],"截屏2022":["159.1"],"now":["159.2","260.1"],"timestamp":["159.2","159.9","159.13","283.4"],"每隔5秒生成一个新的事件":["159.2"],"setinterval":["159.2","159.5","173.52"],"createserver":["159.2","159.5"],"resp":["159.2","159.5","159.13"],"urlparsed":["159.2","159.5"],"实现简单":["159.3"],"而它的缺点也很明显":["159.3"],"无用的请求多":["159.3"],"我们知道了轮询有两个重大的缺陷":["159.4"],"一个是无用请求过多":["159.4"],"另外一个是数据实时性差":["159.4"],"为了解决这两个问题":["159.4"],"某些聪明的程序员就发明了另外一个方案":["159.4"],"subscriber":["159.5"],"write":["159.5","159.13"],"end":["159.5","161.0","195.8","241.6","241.9"],"重置subscribers":["159.5"],"clear":["159.5","176.2"],"取消请求的超时回调":["159.5"],"timer":["159.5","179.27","179.50"],"cleartimeout":["159.5","168.24","176.2"],"重置timers":["159.5"],"5秒生成一个事件":["159.5"],"所以避免了客户端大量的重复请求":["159.6"],"再者客户端在收到服务端的返回后":["159.6"],"马上发送下一个请求":["159.6"],"现在是不是我就不知道了":["159.7"],"用最简单的话来介绍websocket就是":["159.8"],"客户端和服务器之间建立一个持久的长连接":["159.8"],"这个连接是双工的":["159.8"],"推送给所有连接着的socket":["159.9"],"后面所有的消息都是通过这个通道进行通信":["159.10"],"无需再次建立连接":["159.10"],"消息实时性高":["159.10"],"由于客户端和服务端的连接是一直建立的":["159.10"],"实时性要求很高的而且需要双工通信":["159.11"],"sse":["159.12"],"是一个":["159.12"],"基于http协议的服务端向客户端推送数据的技术":["159.12"],"origin":["159.13"],"eventproducer":["159.13"],"连接数少":["159.14"],"客户端和服务端只有一个持久的http连接":["159.14"],"例如股票行情推送软件":["159.15"],"meta":["160.0","168.3","286.47"],"async2":["161.0"],"防止通过":["162.0"],"来操作":["162.0"],"避免沙箱逃逸":["162.0"],"下面聊一聊":["162.0"],"为何这样设计":["162.0"],"以及中间会遇到什么问题":["162.0"],"如何禁止开发者操作":["162.0"],"在页面中":["162.0"],"对象来获取":["162.0"],"进行增删改查的":["162.0"],"操作":["162.0","173.52"],"转化为如何阻止开发者获取":["162.0"],"传统思路":["162.0"],"简单粗暴点":["162.0"],"直接修改":["162.0"],"的值":["162.0","223.2"],"让开发者无法获取":["162.0"],"可以访问到的变量":["162.1"],"必须都来自ctx对象":["162.1"],"执行上下文对象":["162.1"],"func":["162.1","204.3"],"variable":["162.1"],"has":["162.2","162.3","206.5","206.8","215.2","235.4"],"来拦截":["162.2"],"代码块中的任意变量的访问":["162.2"],"设置一个白名单":["162.2"],"在白名单内的变量可以正常走作用域链的访问方式":["162.2"],"不在白名单内的变量":["162.2"],"会继续判断是否存":["162.2"],"对象中":["162.2"],"存在则正常访问":["162.2"],"不存在则直接报错":["162.2"],"替代eval":["162.2"],"prop":["162.3"],"可以拦截":["162.3"],"代码块中任意属性的访问":["162.3"],"includes":["162.3","195.4","245.2"],"如果属性存在于共享的全局状态中":["162.3"],"则让其沿着原型链在外层查找":["162.3"],"如果没有该属性":["162.3"],"直接报错":["162.3"],"hasownproperty":["162.3"],"属性存在":["162.3"],"返回sandboxglobal中的值":["162.3"],"构造一个":["162.3"],"来包裹需要执行的代码":["162.3"],"代码块的一个函数实例":["162.3"],"withedyourcode":["162.3"],"sandbox":["162.3"],"计算结果将使用":["163.0"],"打印":["163.0"],"现在功能很简单":["163.0"],"setvalue":["163.0"],"用于模拟计算器上的数字输入":["163.0"],"其中的":["163.0"],"模拟计算器上的显示屏":["163.0"],"还有两个方法":["163.0"],"用于对应计算器中的加号按钮与减号按钮":["163.0"],"为计算器程序添加插件系统":["163.0"],"建立插件系统第一步就是要建立一个":["163.0"],"插件注册":["163.0"],"其他开发人员可以利用其注册插件":["163.0"],"这个方法工作很简单":["163.0"],"获取外部插件":["163.0"],"抓取其":["163.0"],"并将它作为一个新的方法":["163.0"],"附加到计算器上":["163.0"],"这里有一个插件的例子":["163.0"],"它给计算器增加":["163.0"],"平方":["163.0"],"solve":["165.1"],"认证首先的方式有好几种":["166.0"],"客户端输入账号密码登录成功":["166.1"],"服务端返回":["166.1"],"一般里面包含用户的一些基本信息":["166.1"],"不要让用户隐私信息入内":["166.1"],"客户端获取到":["166.1"],"是用来操作和获取数据的":["166.2"],"仅仅只用来刷新":["166.2"],"使用了":["166.2"],"后的认证流程":["166.2"],"在用户登录成功后":["166.2"],"后台返回一个":["166.2"],"usertype":["166.3"],"单独配置":["166.4"],"jsonwebtoken":["166.5"],"errors":["166.5","166.6"],"constants":["166.5","166.6"],"dayjs":["166.6"],"invalidtoken":["166.6"],"重新返回新的":["166.7"],"refreshtoken":["166.7","166.9"],"refreshtokencon":["166.7"],"handle401":["166.8"],"loading":["166.8","181.0"],"useglobalstore":["166.8"],"changeisloading":["166.8"],"请求基地址":["166.8"],"utils":["166.9"],"用js":["166.9"],"cookie存储到cookie中":["166.9"],"锁":["166.9"],"originrequest":["166.9"],"有一个接口其请求路径为":["167.0"],"query有一个id参数支持传一个或者多个id":["167.0"],"且":["167.1"],"短时间内":["167.1"],"只发出了一次请求":["167.1"],"资源懒加载":["167.2"],"是多久":["167.3"],"其实这里就是考察到了event":["167.3"],"这里用string类型作为key":["167.4"],"resolves":["167.4"],"不存在则创建":["167.4"],"因为可能有重复的id":["167.4"],"所以这里value为数组":["167.4"],"存在则加入":["167.4"],"因为是对象":["167.4"],"map里存的引用":["167.4"],"所以这里不需要重新执行set":["167.4"],"requestidlecallback":["168.0","168.9","168.28"],"这使开发者能够在主事件循环上执行后台和低优先级工作":["168.2"],"你希望执行一个动画":["168.6"],"equiv":["168.7"],"ua":["168.7"],"compatible":["168.7"],"要搞清楚requestanimationframe和requestidlecallback是宏任务还是微任务就必须要搞清楚下面几个问题":["168.10"],"比如settimeout":["168.11"],"setintervel的回调":["168.11"],"也可以将同一轮循环中的所有同步代码看作是一个宏任务":["168.11"],"执行它":["168.11","206.8"],"执行微任务队列里的所有微任务":["168.11"],"浏览器判断是否更新渲染屏幕":["168.11"],"只是他们的执行时机不同而已":["168.13"],"也有人说它们既不是宏任务也不是微任务":["168.13"],"其实我们不必纠结这个":["168.13"],"我分析用户画像":["168.15"],"animation":["168.17"],"you":["168.19","206.1"],"want":["168.19","206.1"],"animate":["168.19"],"需要移动的物体元素":["168.19"],"是有返回值的":["168.20"],"scope":["168.22","228.1"],"的效果":["168.23"],"但注意需要释放":["168.23"],"返回的":["168.23"],"表示定时器的编号":["168.24"],"这个值可以传递给":["168.24"],"来取消该定时器":["168.24"],"用法":["168.25"],"用于动画帧渲染时候":["168.25"],"93115234375":["168.26"],"预期是":["168.26"],"0ms":["168.26"],"大于":["168.26","222.11"],"水平有限难免有纰漏":["168.27"],"和微任务":["168.28"],"原图片":["169.2"],"添加水印之后生成了":["169.2"],"水印标记":["169.3"],"节点的":["169.3"],"背景图片":["169.3"],"展示":["169.3"],"节点设置":["169.3"],"pointer":["169.3"],"实现":["169.3","173.98","195.4"],"点击穿透":["169.3"],"节点通过":["169.3"],"insertbefore":["169.3"],"插入到":["169.3"],"标签的前一个位置":["169.3"],"再将":["169.3"],"标签移动到":["169.3"],"节点节中":["169.3"],"这样就保证了新创建的":["169.3"],"节点的位置一定是在原本":["169.3"],"挂载的位置":["169.3"],"效果和代码如下":["169.3"],"globalwatermark":["169.4"],"获取":["169.4","175.22","178.5"],"的结果":["169.4"],"getdataurl":["169.4"],"16px":["169.4"],"normal":["169.4"],"fillstyle":["169.4"],"textalign":["169.4"],"textbaseline":["169.4"],"请勿外传":["169.4"],"获取画布上下文":["169.4"],"middle":["169.4","180.2","206.8"],"filltext":["169.4"],"为其添加drop":["170.2"],"shadow投影":["170.2"],"发现无法正确的在半圆内部显示投影":["170.2"],"card":["170.2","170.8","170.14","286.13"],"700rpx":["170.2"],"250rpx":["170.2"],"当页面背景是图片或者非纯色的时候":["170.3"],"gradient渐变":["170.4"],"gradient":["170.4","170.12"],"0rpx":["170.5"],"pink":["170.5","170.12"],"skyblue":["170.5","170.8"],"等价于background":["170.5"],"xboxyan":["170.6"],"实现优惠券的技巧这篇文章在讲mask遮罩时":["170.6"],"有说到是因为两层背景相互叠加":["170.6"],"导致整块背景都成了不透明的":["170.6"],"那么是不是同样适用到这个渐变上呢":["170.6"],"试试看":["170.6"],"修改background":["170.6"],"position为对应位置":["170.6"],"当优惠券背景是渐变色的时候":["170.7"],"transparent":["170.8","170.12"],"20rpx":["170.8","170.11","170.12"],"21rpx":["170.8"],"在这里插入图片描述":["170.8","170.11","206.15"],"修改mask遮罩的第二个色值占据的百分比以及色值":["170.8"],"看看效果如何":["170.8"],"我们可以发现":["170.8"],"当第二个色值占据的大小":["170.8"],"前一个时候":["170.8"],"会展示一个透明色的内圆角":["170.8"],"mask遮罩遮住的是透明区域":["170.8"],"所以不透明的部分不需要关心":["170.8"],"那么后一个颜色的色值你可以随意设置":["170.8"],"现在":["170.8"],"我们可以根据2":["170.8"],"2节生成的内圆角做一些变动":["170.8"],"看看能不能得到我们想要的效果":["170.8"],"遮罩一":["170.8"],"002":["170.8"],"ff6810":["170.8","170.11"],"实现矩形四边1":["170.10"],"按照左上":["170.11"],"左下":["170.11"],"右上":["170.11"],"右下的位置":["170.11"],"添上4个圆角":["170.11"],"并调整background":["170.11"],"radial":["170.12"],"circle":["170.12"],"repeat":["170.12"],"因为mask会裁剪掉drop":["170.14"],"所以要把mask渐变写到器伪元素上":["170.14"],"由于mask是显示非透明部分":["170.14"],"所以要为元素设置背景色":["170.14"],"不能为transparent":["170.14"],"即与页面的背景色一致":["170.14"],"005":["170.14"],"banner":["170.15"],"vip":["170.15"],"剩余":["170.15"],"元":["170.15"],"row":["170.15"],"btm":["170.15"],"column":["170.15","241.4"],"已获得奖项":["170.15"],"888个":["170.15"],"已出售":["170.15"],"1008个":["170.15"],"已买入":["170.15"],"999个":["170.15"],"样式2":["170.15"],"coupon":["170.15"],"direction属性决定主轴的方向":["171.0"],"wrap属性定义":["171.0"],"如果一条轴线排不下":["171.0"],"如何换行":["171.0"],"flow属性是flex":["171.0"],"direction属性和flex":["171.0"],"wrap属性的简写形式":["171.0"],"默认值为row":["171.0"],"content属性定义了项目在主轴上的对齐方式":["171.0"],"items属性定义项目在交叉轴上如何对齐":["171.0"],"content属性定义了多根轴线的对齐方式":["171.0"],"如果项目只有一根轴线":["171.0"],"该属性不起作用":["171.0"],"项目":["171.0"],"子元素":["171.0"],"也有一些属性":["171.0"],"order":["171.0"],"grow":["171.0"],"shrink":["171.0"],"basis":["171.0"],"order属性定义项目的排列顺序":["171.0"],"数值越小":["171.0"],"排列越靠前":["171.0"],"默认为0":["171.0"],"grow属性定义项目的放大比例":["171.0"],"即如果存在剩余空间":["171.0"],"也不放大":["171.0"],"shrink属性定义了项目的缩小比例":["171.0"],"默认为1":["171.0"],"即如果空间不足":["171.0"],"该项目将缩小":["171.0"],"basis属性定义了在分配多余空间之前":["171.0"],"项目占据的主轴空间":["171.0"],"flex属性是flex":["171.0"],"basis的简写":["171.0"],"默认值为0":["171.0"],"后两个属性可选":["171.0"],"属性允许单个项目有与其他项目不一样的对齐方式":["171.0"],"可覆盖":["171.0"],"默认值为":["171.0"],"表示继承父元素的align":["171.0"],"items属性":["171.0"],"如果没有父元素":["171.0"],"则等同于stretch":["171.0"],"分析比较":["171.0"],"visibility":["171.0"],"优劣和适用场景":["171.0"],"结构":["171.0"],"会让元素完全从渲染树中消失":["171.0"],"渲染的时候不占据任何空间":["171.0"],"不能点击":["171.0"],"不会让元素从渲染树消失":["171.0"],"渲染元素继续占据空间":["171.0"],"只是内容不可见":["171.0"],"可以点击":["171.0"],"继承":["171.0","185.1"],"none和opacity":["171.0"],"是非继承属性":["171.0"],"子孙节点消失由于元素从渲染树消失造成":["171.0"],"通过修改子孙节点属性无法显示":["171.0"],"是继承属性":["171.0"],"子孙节点消失由于继承了hidden":["171.0"],"通过设置visibility":["171.0"],"可以让子孙节点显式":["171.0"],"性能":["171.0"],"displaynone":["171.0"],"修改元素会造成文档回流":["171.0"],"读屏器不会读取display":["171.0"],"none元素内容":["171.0"],"性能消耗较大":["171.0"],"修改元素只会造成本元素的重绘":["171.0"],"性能消耗较少读屏器读取visibility":["171.0"],"hidden元素内容":["171.0"],"修改元素会造成重绘":["171.0"],"性能消耗较少":["171.0"],"档的处理":["172.0"],"通常用于a":["172.0"],"link元素":["172.0"],"属性表示网页的标题":["172.0"],"元素则表示层次明确的页面内容标题":["172.0"],"对页面信息的抓取也有很大的影响":["172.0"],"是标明重点内容":["172.0"],"有语气加强的含义":["172.0"],"使用阅读设备阅读网络时":["172.0"],"strong会重读":["172.0"],"是展示强调内容":["172.0"],"italic":["172.0"],"斜体":["172.0"],"是早期的斜体元素":["172.0"],"表示内容展示为斜体":["172.0"],"emphasize":["172.0"],"强调":["172.0"],"表示强调的文本":["172.0"],"什么是严格模式与混杂模式":["172.0"],"是以浏览器支持的最高标准运行":["172.0"],"混杂模式":["172.0"],"页面以宽松向下兼容的方式显示":["172.0"],"模拟老式浏览器的行为":["172.0"],"前端页面有哪三层构成":["172.0"],"分别是什么":["172.0"],"构成":["172.0"],"结构层":["172.0"],"表示层":["172.0"],"行为层":["172.0"],"structural":["172.0"],"结构层类似于盖房子需要打地基以及房子的悬梁框架":["172.0"],"它是由html超文本标记语言来创建的":["172.0"],"也就是页面中的各种标签":["172.0"],"在结构层中保存了用户可以看到的所有内容":["172.0"],"一段文字":["172.0"],"一张图片":["172.0"],"一段视频等等":["172.0"],"表示层是由css负责创建":["172.0"],"它的作用是如何显示有关内容":["172.0"],"学名":["172.0"],"层叠样式表":["172.0"],"也就相当于装修房子":["172.0"],"看你要什么风格的":["172.0"],"田园的":["172.0"],"中式的":["172.0"],"地中海的":["172.0"],"总之css都能办妥":["172.0"],"hello":["173.1","173.85","173.94"],"参考答案":["173.1","173.10","173.15","173.19","173.21","173.23","173.26","173.33","173.34","173.40","173.54","173.65","173.66","173.67","173.73","173.75","173.76","173.80","173.84","173.90"],"unique":["173.2"],"利用对象属性名的唯一性来保证不重复":["173.2"],"03":["173.5"],"04":["173.5"],"06":["173.5"],"bindevent":["173.7"],"更简洁的语法":["173.8","173.23"],"testfunc":["173.9"],"子类":["173.9"],"student":["173.9"],"gender":["173.9"],"score":["173.9"],"盗用构造函数":["173.9"],"改变":["173.9"],"构造函数的原型对象":["173.9"],"teststufunc":["173.9"],"运算符创建一个用户定义的对象类型的实例或具有构造函数的内置对象的实例":["173.10","173.76"],"区别在于传参的方式不一样":["173.11"],"中任务会分为同步任务和异步任务":["173.12"],"如果是同步任务":["173.12"],"则会在主线程":["173.12"],"并通过回调函数返回到上层调用":["173.13"],"如果是":["173.13","223.2"],"就从":["173.13"],"线程池":["173.13"],"中拿出一个线程来处理这个事件":["173.13"],"并指定回调函数":["173.13"],"然后继续循环队列中的其他事件":["173.13"],"当线程中的":["173.13"],"任务完成以后":["173.13"],"就执行指定的回调函数":["173.13"],"并把这个完成的事件放到事件队列的尾部":["173.13"],"等待事件循环":["173.13"],"当主线程再次循环到该事件时":["173.13"],"就直接处理并返回给上层调用":["173.13"],"这个过程就叫":["173.13"],"事件循环":["173.13"],"无论是":["173.13"],"一个柯里化的函数首先会接受一些参数":["173.14"],"接受了这些参数之后":["173.14"],"该函数并不会立即求值":["173.14"],"而是继续返回另外一个函数":["173.14"],"刚才传入的参数在函数形成的闭包中被保存起来":["173.14"],"待到函数被真正需要求值的时候":["173.14"],"之前传入的所有参数都会被一次性用于求值":["173.14"],"不是":["173.15"],"对象会如何处理":["173.15"],"promisearray":["173.15"],"方法是":["173.15"],"的指向规律有如下几条":["173.16"],"在函数体中":["173.16"],"非显式或隐式地简单调用函数时":["173.16"],"在严格模式下":["173.16"],"原型链继承":["173.17","179.23"],"重点":["173.17"],"让新实例的原型等于父类的实例":["173.17"],"实例可继承的属性有":["173.17"],"实例的构造函数的属性":["173.17"],"父类构造函数属性":["173.17"],"父类原型的属性":["173.17"],"新实例不会继承父类实例的属性":["173.17"],"缺点":["173.17","254.4"],"我们需要对应的书写一个事件处理程序":["173.18"],"来应对事件发生时的具体行为":["173.18"],"这个事件处理程序我们也称之为事件监听器":["173.18"],"当事件绑定好后":["173.18"],"程序就会对事件进行监听":["173.18"],"有什么作用":["173.19"],"一个函数和对其周围状态":["173.19"],"lexical":["173.19"],"添加到页面上的事件处理程序数量将直接关系到页面整体的运行性能":["173.20"],"导致这一问题的原因是多方面的":["173.20"],"定义的变量":["173.21"],"没有块的概念":["173.21"],"可以跨块访问":["173.21"],"不能跨函数访问":["173.21"],"立即执行函数":["173.22"],"es6":["173.22","173.45","173.56","173.63","173.90","173.92","179.26","179.31"],"普通函数可以有匿名函数":["173.24"],"也可以有具体名函数":["173.24"],"但是箭头函数都是匿名函数":["173.24"],"箭头函数不能用于构造函数":["173.24"],"不能使用":["173.24"],"基本数据类型":["173.25"],"一共有":["173.25"],"的全称为":["173.26"],"里面":["173.27","254.10"],"作用域一共有":["173.27"],"就会得到一个":["173.28"],"会自动将声明是没有进行初始化的变量设为":["173.28"],"undifined":["173.28"],"值表示空":["173.28"],"不能通过":["173.28"],"来自动赋值":["173.28"],"也就是说必须要我们自己手动来给某个变量赋值为":["173.28"],"那么为什么":["173.28"],"使用的就是":["173.30"],"回调函数":["173.30"],"但是回调函数会产生回调地狱":["173.30"],"hell":["173.30"],"之后":["173.30","258.5"],"所有外部文件":["173.31"],"的引用都放在相同的地方":["173.31"],"可是":["173.31"],"在文档的":["173.31"],"元素中包含所有":["173.31"],"意味着必须等到全部":["173.31"],"的异步机制由事件循环和任务队列构成":["173.32"],"本身是单线程语言":["173.32"],"所谓异步依赖于浏览器或者操作系统等完成":["173.32"],"19年":["173.33","173.34","173.35","173.40"],"每个对象都有一个":["173.33"],"proto":["173.33","179.11","179.12"],"作用域是在运行时代码中的某些特定部分中变量":["173.34"],"函数和对象的可访问性":["173.34"],"美团":["173.35","173.40"],"继承方式":["173.36"],"简单类型的值被称为原始值":["173.37"],"是因为它们是":["173.37"],"不可细化":["173.37"],"数字是数字":["173.37"],"字符是字符":["173.37"],"布尔值是":["173.37"],"进行判断":["173.39"],"memory":["173.42"],"leak":["173.42"],"是指程序中己动态分配的堆内存由于某种原因程序未释放或无法释放":["173.42"],"造成系统内存的浪费":["173.42"],"导致程序运行速度减慢甚至系统崩溃等严重后果":["173.42"],"新增内容众多":["173.43"],"这里列举出一些关键的以及平时常用的新增内容":["173.43"],"箭头函数":["173.43"],"字符串模板":["173.43"],"对象是一些对象值的集合":["173.44"],"并且其中的每个对象值都只能出现一次":["173.44"],"的集合中是唯一的":["173.44"],"它和":["173.44"],"会新增":["173.45"],"child1":["173.46","174.28"],"currying":["173.47"],"是把接受多个参数的函数变换成接受一个单一参数":["173.47"],"最初函数的第一个参数":["173.47"],"的函数":["173.47","173.98"],"并且返回接受余下的参数而且返回结果的新函数的技术":["173.47"],"举个例子":["173.47"],"就是把原本":["173.47"],"我们在平时开发的时候":["173.48"],"会有很多场景会频繁触发事件":["173.48"],"比如说搜索框实时发请求":["173.48"],"onmousemove":["173.48"],"闭包":["173.49"],"好未来":["173.49"],"原型和原型链":["173.50"],"是指用来操作数据":["173.51"],"解决程序问题的一组方法":["173.51"],"对于同一个问题":["173.51"],"使用不同的算法":["173.51"],"也许最终得到的结果是一样的":["173.51"],"但在过程中消耗的资源和时间却会有很大的区别":["173.51"],"主要还是从算法所占用的":["173.51"],"时间":["173.51","181.0"],"setimmediate":["173.52"],"整体代码":["173.52"],"渲染等":["173.52"],"process":["173.52"],"nexttick":["173.52","179.55"],"闭包的好处":["173.53"],"的区别":["173.54","173.62","176.3","179.7","184.4","249.0","251.0"],"中只存在两种作用域":["173.55"],"全局作用域和函数作用域":["173.55"],"我们将作用域定义为一套规则":["173.55"],"这套规则用来管理引擎如何在当前作用域以及嵌套子作用域中根据标识符名称进行变量":["173.55"],"回调函数和事件":["173.56"],"更合理且更强大":["173.56"],"它最早由社区提出并实现":["173.56"],"将其写进了语言标准":["173.56"],"统一了用法":["173.56"],"并原生提供了":["173.56"],"请求接口地址":["173.57"],"设置的请求体":["173.57"],"succ":["173.57"],"请求成功后的回调":["173.57"],"最后一个元素是最大或最小的元素":["173.58"],"这时候最后一个元素已经是最大或最小的了":["173.58"],"所以下一次冒泡的时候最后一个元素不需要参与比较":["173.58"],"bsort":["173.58"],"方法会接收一个参数":["173.59"],"这个参数是数值类型":["173.59"],"是要处理扁平化数组的深度":["173.59"],"生成后的新数组是独立存在的":["173.59"],"不会对原数组产生影响":["173.59"],"方法的语法如下":["173.59"],"newarray":["173.59"],"depth":["173.59","275.2"],"底层的实现方式":["173.62"],"然后说了一下和":["173.62"],"es5":["173.63"],"使得我们可以多次使用同样的数据":["173.64"],"而不用担心数据之间会起冲突":["173.64"],"就是在拷贝数据的时候":["173.64"],"将数据的所有":["173.64"],"引用结构":["173.64"],"都拷贝一份":["173.64"],"简单的说就是":["173.64"],"在内存中存在两个数据结构完全相同又相互独立的数据":["173.64"],"将引用型类型进行复制":["173.64"],"而不是只复制其引用关系":["173.64"],"分析下怎么做":["173.64"],"的作用":["173.65"],"是一个修饰符":["173.65"],"原始类型":["173.66"],"有哪些":["173.66"],"至于为什么会返回":["173.67"],"instanceof":["173.68"],"是用来判断":["173.68"],"是否为":["173.68"],"的实例":["173.68"],"表达式为":["173.68"],"其右侧跟一个一元表达式":["173.69"],"并返回这个表达式的数据类型":["173.69"],"返回的结果用该类型的字符串":["173.69"],"全小写字母":["173.69"],"形式表示":["173.69"],"包括以下":["173.69"],"又分为两大类型":["173.70"],"两大类型":["173.70"],"基本类型":["173.70","173.81","179.25"],"如何得到一个变量的类型":["173.71"],"什么是作用域":["173.72"],"闭包是指有权访问另外一个函数作用域中的变量的函数":["173.73"],"因为闭包引用着另一个函数的变量":["173.73"],"导致另一个函数已经不使用了也无法销毁":["173.73"],"垃圾收集器会按照固定的时间间隔周期性的执行":["173.74"],"常见的垃圾回收方式":["173.74"],"标记清除":["173.74"],"引用计数方式":["173.74"],"当访问一个变量时":["173.75"],"编译器在执行这段代码时":["173.75"],"对一个构造函数实例化后":["173.77"],"它的原型链指向什么":["173.77"],"编译所有代码时":["173.78"],"所有使用":["173.78"],"代表相同":["173.79"],"代表严格相同":["173.79"],"数据类型和值都相等":["173.79"],"方法比较的是什么":["173.80"],"ecmascript":["173.81"],"规范中":["173.81"],"共定义了":["173.81"],"种数据类型":["173.81"],"则":["173.82"],"的指向往往会让开发人员抓狂":["173.82"],"错误案例":["173.82"],"指向会指向":["173.82"],"一个箭头函数后":["173.83"],"race":["173.84"],"请说下这两者的区别":["173.84"],"greet":["173.85","173.94"],"说一下普通函数和箭头函数的区别":["173.88"],"的知识点":["173.90"],"相比于":["173.92","179.57"],"转换函数":["173.93"],"提供了诸如":["173.93"],"parseint":["173.93","286.33"],"这些转换函数":["173.93"],"相同输入得到相同输出":["173.94"],"我们先来看一个不纯的反面典型":["173.94"],"greeting":["173.94","184.11"],"使用自执行函数来编写模块化":["173.95"],"在一个单独的函数作用域中执行代码":["173.95"],"避免变量冲突":["173.95"],"amd":["173.95"],"使用requirejs":["173.95"],"源码吗":["173.96"],"说一下":["173.97"],"会直接调用":["173.98"],"会创建一个新函数":["173.98"],"当这个新函数被调用时":["173.98"],"的第一个参数将作为它运行时的":["173.98"],"之后的一序列参数将会在传递的实参前传入作为它的参数":["173.98"],"call2":["173.98"],"没传参数或者为":["173.98"],"是默认是":["173.98"],"首先要获取调用":["173.98"],"可以获取":["173.98"],"tihs":["173.99"],"nums":["174.2","174.6","174.58","174.62"],"twonumadd":["174.4"],"findthree":["174.8"],"先将数组从小到大排序":["174.8"],"输出从大到小的排序":["174.10"],"找到第一个不重复字符的下标":["174.14"],"findonestr":["174.16"],"使用map存储每个字符出现的次数":["174.16"],"打印出该字符串中":["174.18"],"字符串列表":["174.20"],"最终的结果":["174.20"],"外层循环用控制":["174.21","174.22"],"排序进行多少轮":["174.21","174.22"],"定义index存储最小值的下标":["174.22"],"从第":["174.23"],"个元素开始遍历序列":["174.23"],"当list":["174.24"],"1时":["174.24"],"退出递归":["174.24"],"将给定的列表分为两半":["174.25"],"num":["174.25","174.48","284.84","286.33"],"floor":["174.25","287.6"],"转化成树形结构":["174.27"],"parentid":["174.28","174.40"],"child2":["174.29","174.40"],"从第一个节点开始":["174.31","174.35"],"rangetree":["174.37"],"是否为某二叉查找树的前序遍历结果":["174.42"],"前序遍历":["174.44"],"第一个值为根节点":["174.44"],"找到数组中":["174.44"],"第一个比根节点大的节点":["174.44"],"即为右子树的节点":["174.44"],"找到和为":["174.47"],"二叉树":["174.48"],"目标值":["174.48"],"栈":["174.48"],"其中第":["174.50"],"fee":["174.52"],"手续费":["174.52"],"buystock":["174.52"],"min为当前的最小值":["174.52"],"即买入点":["174.52"],"当前项等于前两项之和":["174.54"],"k":["174.60","178.8","291.6"],"window存储当前窗口中数据的下标":["174.60"],"result存储窗口中的最大值":["174.60"],"表示第二项和第三项的最长递增子序列都为2":["174.64"],"dp":["174.64"],"fill":["174.64"],"双层for循环":["174.64"],"每一项都和之前的所有项一一进行比较":["174.64"],"计算出该项的最长递增子序列个数":["174.64"],"存储到dp中":["174.64"],"请求是一个":["175.0"],"幂等":["175.0"],"一般":["175.0"],"请求用于对服务器资源不会产生影响的场景":["175.0"],"比如说请求一个网页的资源":["175.0"],"预检请求":["175.1"],"状态码为":["175.1"],"浏览器能够处理的内容类型":["175.2"],"表示消息发送的时间":["175.3"],"url转码":["175.4"],"multipart":["175.4"],"该种方式也是一个常见的":["175.4"],"提交方式":["175.4"],"通常表单上传文件时使用该种方式":["175.4"],"服务器消息主体是序列化后的":["175.4"],"字符串":["175.4"],"该种方式主要用来提交":["175.4"],"格式的数据":["175.4"],"http状态码304是多好还是少好":["175.4"],"为什么会有304":["175.4"],"服务器为了提高网站访问速度":["175.4"],"对之前访问的部分页面指定缓存机制":["175.4"],"当客户端在此对这些页面进行请求":["175.4"],"服务器会根据缓存内容判断页面与之前是否相同":["175.4"],"若相同便直接返回304":["175.4"],"此时客户端调用缓存内容":["175.4"],"不必进行二次下载":["175.4"],"状态码304不应该认为是一种错误":["175.4"],"而是对客户端":["175.4"],"有缓存情况下":["175.4"],"服务端的一种响应":["175.4"],"搜索引擎蜘蛛会更加青睐内容源更新频繁的网站":["175.4"],"通过特定时间内对网站抓取返回的状态码来调节对该网站的抓取频次":["175.4"],"readystate":["175.5","286.39"],"请求未建立":["175.5"],"创建了xhr对象":["175.5"],"但是还没调用open":["175.5"],"服务器连接已建立":["175.5"],"请求已接收":["175.5"],"send之后":["175.5"],"服务器已经接收了请求":["175.5"],"请求处理中":["175.5"],"请求已完成":["175.5"],"且响应已就绪":["175.5"],"4状态码等同于onload事件":["175.5"],"创建formdata对象":["175.6"],"只有formdata才可以上传文件":["175.6"],"将图片添加到formdata对象中":["175.6"],"fd":["175.6"],"参数名":["175.6"],"发送ajax请求":["175.6"],"文件上传请求方法一定是post":["175.6"],"且请求参数为":["175.6"],"formdata对象":["175.6"],"自定义文件上传按钮思路":["175.7"],"隐藏file表单":["175.7"],"axios取消请求":["175.8"],"canceltoken":["175.8"],"工厂方法创建":["175.8"],"cancel":["175.8"],"axios":["175.8","204.4","286.44"],"options请求方法的":["175.9"],"主要用途":["175.9"],"有两个":["175.9"],"获取服务器支持的所有http请求方法":["175.9"],"用来检查访问权限":["175.9"],"在进行":["175.9"],"跨域资源共享时":["175.9"],"对于复杂请求":["175.9"],"就是使用":["175.9"],"方法发送":["175.9"],"嗅探":["175.9"],"请求":["175.9","179.48","179.51"],"以判断是否有对指定资源的访问权限":["175.9"],"之间有哪些区别":["175.9"],"连接方面":["175.9"],"默认使用非持久连接":["175.9"],"默认使用持久连接":["175.9"],"通过使用持久连接来使多个":["175.9"],"请求复用同一个":["175.9"],"如果请求的资源在缓存里并且没有失效":["175.10"],"那么就直接使用":["175.10"],"否则向服务器发起新的请求":["175.10"],"dns解析":["175.10"],"下一步首先需要获取的是输入的":["175.10"],"中的域名的":["175.10"],"地址":["175.10"],"首先会":["175.10"],"判断本地是否有该域名的":["175.10"],"地址的缓存":["175.10"],"如果有则使用":["175.10"],"如果没有则向本地":["175.10"],"服务器发起请求":["175.10"],"本地":["175.10"],"服务器也会先检查是否存在缓存":["175.10"],"没有就会先向根域名服务器发起请求":["175.10"],"获得负责的顶级域名服务器的地址后":["175.10"],"再向顶级域名服务器请求":["175.10"],"然后获得负责的权威域名服务器的地址后":["175.10"],"再向权威域名服务器发起请求":["175.10"],"最终获得域名的":["175.10"],"地址后":["175.10"],"服务器再将这个":["175.10"],"地址返回给请求的用户":["175.10"],"用户向本地":["175.10"],"服务器发起请求属于递归请求":["175.10"],"服务器向各级域名服务器发起请求属于迭代请求":["175.10"],"获取mac地址":["175.10"],"选说":["175.10"],"当浏览器得到":["175.10"],"数据传输还需要知道目的主机":["175.10"],"mac":["175.10"],"因为应用层下发数据给传输层":["175.10"],"协议会指定源端口号和目的端口号":["175.10"],"然后下发给网络层":["175.10"],"网络层会将本机地址作为源地址":["175.10"],"获取的":["175.10"],"地址作为目的地址":["175.10"],"然后将下发给数据链路层":["175.10"],"数据链路层的发送需要加入通信双方的":["175.10"],"本机的":["175.10"],"地址作为源":["175.10"],"地址需要分情况处理":["175.10"],"通过将":["175.10"],"地址与本机的子网掩码相与":["175.10"],"可以判断是否与请求主机在同一个子网里":["175.10"],"如果在同一个子网里":["175.10"],"apr":["175.10"],"协议获取到目的主机的":["175.10"],"如果不在一个子网里":["175.10"],"那么请求应该转发给网关":["175.10"],"由它代为转发":["175.10"],"此时同样可以通过":["175.10"],"arp":["175.10"],"协议来获取网关的":["175.10"],"此时目的主机的":["175.10"],"地址应该为网关的地址":["175.10"],"tcp三次握手":["175.10"],"确认客户端与服务器的接收与发送能力":["175.10"],"下面是":["175.10"],"建立连接的三次握手的过程":["175.10"],"首先客户端向服务器发送一个":["175.10"],"syn":["175.10","179.48"],"连接请求报文段和一个随机序号":["175.10"],"服务端接收到请求后向服务器端发送一个":["175.10"],"ack报文段":["175.10"],"确认连接请求":["175.10"],"并且也向客户端发送一个随机序号":["175.10"],"客户端接收服务器的确认应答后":["175.10"],"进入连接建立的状态":["175.10"],"同时向服务器也发送一个ack":["175.10"],"确认报文段":["175.10"],"服务器端接收到确认后":["175.10"],"也进入连接建立状态":["175.10"],"此时双方的连接就建立起来了":["175.10"],"https握手":["175.10"],"如果使用的是":["175.10"],"在通信前还存在":["175.10"],"的一个四次握手的过程":["175.10"],"首先由客户端向服务器端发送使用的协议的版本号":["175.10"],"一个随机数和可以使用的加密方法":["175.10"],"服务器端收到后":["175.10"],"确认加密的方法":["175.10"],"也向客户端发送一个随机数和自己的数字证书":["175.10"],"数字证书的作用":["175.11"],"现在的方法也不一定是安全的":["175.11"],"篡改了":["175.12"],"这个时候就能最":["175.12"],"程度保证通信的安全了":["175.12"],"http状态码分别代表什么意思":["175.12"],"类别":["175.12"],"原因":["175.12"],"1xx":["175.12"],"informational":["175.12"],"信息性状态码":["175.12"],"接受的请求正在处理":["175.12"],"2xx":["175.12"],"成功状态码":["175.12"],"请求正常处理完毕":["175.12"],"3xx":["175.12"],"redirection":["175.12"],"重定向状态码":["175.12"],"需要进行附加操作一完成请求":["175.12"],"4xx":["175.12"],"客户端错误状态码":["175.12"],"服务器无法处理请求":["175.12"],"5xx":["175.12"],"服务器错误状态码":["175.12"],"服务器处理请求出错":["175.12"],"ok":["175.12"],"表示从客户端发来的请求在服务器端被正确处理":["175.12"],"请求已经被实现":["175.12"],"而且有一个新的资源已经依据请求的需要而建立":["175.12"],"通常是在post请求":["175.12"],"或者是某些put请求之后创建了内容":["175.12"],"进行的返回的响应":["175.12"],"accepted":["175.12"],"请求服务器已接受":["175.12"],"但是尚未处理":["175.12"],"不保证完成请求":["175.12"],"适合异步任务或者说需要处理时间比较长的请求":["175.12"],"避免http链接一直占用":["175.12"],"表示请求成功":["175.12"],"但响应报文不含实体的主体部分":["175.12"],"但是与":["175.12"],"响应不同在于要求请求方重置内容":["175.12"],"partial":["175.12"],"进行的是范围请求":["175.12"],"表示服务器已经成功处理了部分get请求":["175.12"],"响应头中会包含获取的内容范围":["175.12"],"常用于分段下载":["175.12"],"重定向":["175.12","202.7"],"moved":["175.12"],"permanently":["175.12"],"永久性重定向":["175.12"],"表示资源已被分配了新的":["175.12"],"found":["175.12"],"临时性重定向":["175.12"],"表示资源临时被分配了新的":["175.12"],"支持搜索引擎优化":["175.12"],"other":["175.12","206.9"],"表示资源存在着另一个":["175.12"],"应使用":["175.12"],"方法获取资源":["175.12"],"modified":["175.12"],"自从上次请求后":["175.12"],"请求的网页内容未修改过":["175.12"],"服务器返回此响应时":["175.12"],"不会返回网页内容":["175.12"],"协商缓存":["175.12"],"temporary":["175.12"],"redirect":["175.12"],"临时重定向":["175.12"],"和302含义类似":["175.12"],"但是期望客户端保持请求方法不变向新的地址发出请求":["175.12"],"客户端错误":["175.12"],"bad":["175.12"],"请求报文存在语法错误":["175.12"],"传参格式不正确":["175.12"],"unauthorized":["175.12"],"表示发送的请求需要有通过":["175.12"],"认证的认证信息":["175.12"],"没有权限":["175.12"],"forbidden":["175.12"],"表示对请求资源的访问被服务器拒绝":["175.12"],"表示在服务器上没有找到请求的资源":["175.12"],"modifed":["175.13"],"since":["175.13","236.4"],"这就意味着服务器会对文件检查新鲜度":["175.13"],"返回结果可能是":["175.13"],"也有可能是":["175.13"],"用户按":["175.13"],"浏览器不仅会对本地文件过期":["175.13"],"而且不会带上":["175.13"],"cookie就出现了":["175.14"],"cookie的大小只有4kb":["175.14"],"它是一种纯文本文件":["175.14"],"每次发起http请求都会携带cookie":["175.14"],"这时候localstorage就派上用场了":["175.15"],"localstorage的优点":["175.15"],"在大小方面":["175.15"],"localstorage和sessionstorage都不能被爬虫爬取":["175.16"],"sessionstorage区别":["175.16"],"其实最开始是服务器端用于记录用户状态的一种方式":["175.16"],"由服务器设置":["175.16"],"在客户端存储":["175.16"],"然后每次发起同源请求时":["175.16"],"发送给服务器端":["175.16"],"最多能存储":["175.16"],"整个cors过程都是浏览器完成的":["175.17"],"标签src属性":["175.18"],"2中的api":["175.19"],"且是为数不多可以跨域操作的window属性之一":["175.19"],"它可用于解决以下方面的问题":["175.19"],"页面和其打开的新窗口的数据传递":["175.19"],"两次跨域":["175.20"],"实现原理":["175.20"],"正向代理":["175.21"],"客户端想获得一个服务器的数据":["175.21"],"但是因为种种原因无法直接获取":["175.21"],"于是客户端设置了一个代理服务器":["175.21"],"并且指定目标服务器":["175.21"],"之后代理服务器向目标服务器转交请求并将获得的内容发送给客户端":["175.21"],"这样本质上起到了对真实服务器隐藏真实客户端的目的":["175.21"],"实现正向代理需要修改客户端":["175.21"],"比如修改浏览器配置":["175.21"],"服务器为了能够将工作负载分不到多个服务器来提高网站性能":["175.21"],"负载均衡":["175.21"],"等目的":["175.21"],"当其受到请求后":["175.21"],"会首先根据转发规则来确定请求应该被转发到哪个服务器上":["175.21"],"然后将请求转发到对应的真实服务器上":["175.21"],"这样本质上起到了对客户端隐藏真实服务器的作用":["175.21"],"一般使用反向代理后":["175.21"],"需要通过修改":["175.21"],"让域名解析到代理服务器":["175.21"],"成":["175.22"],"个":["175.22"],"伪造的":["175.22"],"公钥":["175.22"],"发给客户端":["175.22"],"客户端收到伪造的公钥后":["175.22"],"成加密hash值发给服务器":["175.22"],"获得加密hash值":["175.22"],"的私钥解密获得真秘钥":["175.22"],"成假的加密hash值":["175.22"],"发给服务器":["175.22"],"服务器":["175.22"],"私钥解密获得假密钥":["175.22"],"然后加密数据传输给客户端":["175.22"],"浏览器是如何进行界面渲染的":["175.22"],"不同的渲染引擎的具体做法稍有差异":["175.22"],"但是大体流程都是差不多的":["175.22"],"下面以":["175.22"],"chrome渲染引擎":["175.22"],"渲染流程来说明":["175.22"],"件并进":["175.22"],"项目时为什么要在列表组件中写":["176.1"],"timeout":["176.2","217.7","283.4","283.12"],"创建一个标记用来存放定时器的返回值":["176.2"],"每当用户输入的时候把前一个":["176.2"],"掉":["176.2","177.13"],"然后又创建一个新的":["176.2"],"这样就能保证输入字符后的":["176.2"],"对象允许你存储任何类型的唯一值":["176.3"],"无论是原始值或者是对象引用":["176.3"],"deeptraversal":["176.4"],"nodes":["176.4"],"childrens":["176.4"],"的继承机制完全不同":["176.6"],"实质上是先创建父类的实例对象":["176.6"],"所以必须先调用父类的":["176.6"],"然后再用子类的构造函数修改":["176.6"],"如何通过同步的方式实现异步":["176.7"],"优点":["176.9","176.12"],"generator":["176.11"],"三次握手和四次挥手的理解":["176.14"],"等待服务器确认接收":["176.15"],"三次握手之所以是三次是保证client和server均让对方知道自己的接收和发送能力没问题而保证的最小次数":["176.16"],"第一次client":["176.16"],"什么时候是同步的":["176.17"],"什么时候是异步的":["176.17"],"val":["176.18","283.10","285.8","286.2"],"componentdidmount":["176.18","178.2"],"web技术":["177.0"],"移动设备":["177.0"],"的快速发展":["177.0"],"现在比较流行的混合方案主要有三种":["177.1"],"主要是在ui渲染机制上的不同":["177.1"],"jsbridge":["177.1","177.3"],"完成":["177.1"],"native":["177.1","177.2","177.3","186.3"],"的双向通讯":["177.1"],"并":["177.1"],"中内置的一款基于":["177.2"],"webkit内核":["177.2"],"的浏览器":["177.2"],"跨语言通讯方案":["177.3"],"便是我们常听到的":["177.3"],"通知":["177.3"],"api注入":["177.3"],"直接在":["177.3"],"上下文中挂载数据或者方法":["177.3"],"两部分共同来完成":["177.4"],"负责实现url拦截与解析":["177.4"],"环境信息的注入":["177.4"],"拓展功能的映射":["177.4"],"版本更新等功能":["177.4"],"javascirpt":["177.4"],"便会涉及到本地离线代码的更新问题":["177.5"],"因此需要建立一套云端下发包的机制":["177.5"],"由客户端下载云端最新代码包":["177.5"],"zip包":["177.5"],"并解压替换本地代码":["177.5"],"增量更新":["177.5"],"由于下发包是一个下载的过程":["177.5"],"因此包的体积越小":["177.5"],"下载速度越快":["177.5"],"流量损耗越低":["177.5"],"只打包改变的文件":["177.5"],"客户端下载后覆盖式替换":["177.5"],"能大大减小每次更新包的体积":["177.5"],"条件分发":["177.5"],"实质上":["177.6"],"仅仅提供了":["177.6"],"打包功能":["177.6"],"和一套":["177.6"],"文件处理机制":["177.6"],"然后通过生态中的各种":["177.6"],"对代码进行预编译和打包":["177.6"],"具有高度的可拓展性":["177.6"],"能更好的发挥社区生态的力量":["177.6"],"会从该文件开始进行分析与编译":["177.6"],"出口路径":["177.6"],"打包后创建":["177.6"],"的文件路径以及文件名":["177.6"],"模块":["177.6"],"中任何文件都可以作为一个模块":["177.6"],"会根据配置的不同的":["177.6"],"传入的字符串进行按需修改":["177.7"],"例如一个最简单的":["177.7"],"htmlsource":["177.7"],"返回处理后的代码字符串":["177.7"],"文件中的所有注释":["177.7"],"实际的":["177.7"],"上提供的":["177.8"],"可以对事件进行监听":["177.8"],"执行相应的操作":["177.8"],"compilation":["177.8"],"是监听每次编译循环":["177.8"],"每次文件变化":["177.8"],"都会生成新的":["177.8"],"对象并触发该事件":["177.8"],"注册插件":["177.8"],"已内置":["177.9"],"便会进行":["177.9"],"摇树优化":["177.9"],"shaking":["177.9"],"这是一种形象比喻":["177.9"],"我们把打包后的代码比喻成一棵树":["177.9"],"这里其实表示的就是":["177.9"],"通过工具":["177.9"],"摇":["177.9"],"我们打包后的":["177.9"],"将没有使用到的无用代码":["177.9"],"下来":["177.9"],"消除那些被":["177.9"],"循环":["177.10","178.6"],"循环通常是编码性能的关键点":["177.10"],"代码的性能问题会再循环中被指数倍放大":["177.10"],"尽可能":["177.10"],"减少循环次数":["177.10"],"减少遍历的数据量":["177.10"],"完成目的后马上结束循环":["177.10"],"避免在循环中执行大量的运算":["177.10"],"避免重复计算":["177.10"],"相同的执行结果应该使用缓存":["177.10"],"倒序循环":["177.10"],"会略微提升性能":["177.10"],"尽量避免使用":["177.10"],"因为它会枚举原型对象":["177.10"],"耗时大于普通循环":["177.10"],"条件流程性能":["177.10"],"也可以头部引入":["177.11"],"甚至内联":["177.11"],"减少请求":["177.11"],"合并请求":["177.11"],"正确设置":["177.11"],"减少文件体积":["177.11"],"删除多余代码":["177.11"],"避免阻塞首页渲染":["177.12"],"preconnect":["177.12"],"preload":["177.12"],"等浏览器提供的资源提示":["177.12"],"加快文件传输":["177.12"],"谨慎控制好":["177.12"],"web字体":["177.12"],"进程模式":["177.13"],"启动时会在内存中常驻一个":["177.13"],"主进程":["177.13","179.35"],"功能":["177.13"],"读取配置文件":["177.13"],"绑定":["177.13"],"启动":["177.13"],"维护":["177.13"],"进程":["177.13"],"编译脚本":["177.13"],"打开日志":["177.13"],"进程会开启配置数量的":["177.13"],"比如根据":["177.13"],"核数等":["177.13"],"监听连接":["177.13"],"不会新开进程或线程":["177.13"],"节约了创建与销毁进程的成本":["177.13"],"检查网络":["177.13"],"存储":["177.13"],"把新连接加入到轮询队列中":["177.13"],"异步处理":["177.13"],"能有效利用":["177.13"],"多核":["177.13"],"并避免了线程切换和锁等待":["177.13"],"热部署模式":["177.13"],"当我们修改配置热重启后":["177.13"],"进程会以新的配置新创建":["177.13"],"新连接会全部交给新进程处理":["177.13"],"老的":["177.13"],"进程会在处理完之前的连接后被":["177.13"],"逐步全替换成新配置的":["177.13"],"官网下载":["177.13"],"配置文件路径":["177.13"],"环境依赖一直是一个很头疼的难题":["177.14"],"比如你想运行":["177.14"],"应用":["177.14"],"那至少环境得安装":["177.14"],"吧":["177.14"],"而且不同版本":["177.14"],"不同系统都会影响运行":["177.14"],"解决的办法":["177.14"],"就是我们的包装包中直接包含运行环境的安装":["177.14"],"让同一份环境可以快速复制到任意一台物理机上":["177.14"],"资源利用率与隔离":["177.14"],"通过硬件模拟":["177.14"],"并包含一套完整的操作系统":["177.14"],"应用可以独立运行在虚拟机中":["177.14"],"与外界隔离":["177.14"],"并且可以在同一台物理机上":["177.14"],"开启多个不同的虚拟机启动服务":["177.14"],"即一台服务器":["177.14"],"提供多套服务":["177.14"],"且资源完全相互隔离":["177.14"],"互不影响":["177.14"],"不仅能更好提高资源利用率率":["177.14"],"也是现如今最流行的前端框架":["178.0"],"如需要":["178.1"],"则操作":["178.1"],"节点更新":["178.1"],"要了解":["178.1"],"我们首先来看为什么需要它":["178.1"],"问题":["178.1"],"随着应用变得越来越庞大":["178.1"],"整个更新渲染的过程开始变得吃力":["178.1"],"大量的组件渲染会导致主进程长时间被占用":["178.1"],"导致一些动画或高频操作出现卡顿和掉帧的情况":["178.1"],"而关键点":["178.1"],"便是":["178.1"],"同步阻塞":["178.1"],"在之前的调度算法中":["178.1"],"需要实例化每个类组件":["178.1"],"生成一颗组件树":["178.1"],"同步递归":["178.1"],"的方式进行遍历渲染":["178.1"],"而这个过程最大的问题就是无法":["178.1"],"暂停和恢复":["178.1"],"解决同步阻塞的方法":["178.1"],"通常有两种":["178.1"],"reconciliation":["178.2"],"两个阶段":["178.2"],"对应的生命周期如下":["178.2"],"shouldcomponentupdate":["178.2","209.14"],"componentwillunmount":["178.2"],"阶段进行了任务分割":["178.2"],"涉及到":["178.2"],"暂停":["178.2"],"因此可能会导致":["178.2"],"处于事务流中":["178.3"],"表示进程正在执行一些操作":["178.3"],"中用于修改状态":["178.3"],"更新视图":["178.3"],"它具有以下特点":["178.3"],"异步与同步":["178.3"],"并不是单纯的异步或同步":["178.3"],"这其实与调用时的环境相关":["178.3"],"合成事件":["178.3"],"生命周期钩子":["178.3"],"除":["178.3"],"newprops":["178.4","222.6","236.6"],"tayde":["178.4"],"提取状态":["178.4"],"将被包裹组件中的":["178.4"],"依赖外层":["178.4"],"例如用于转换受控组件":["178.4"],"withonchange":["178.4"],"onchangename":["178.4"],"setstate":["178.4","206.1"],"dongdong":["178.4"],"中的数据无法被直接修改":["178.5"],"严格控制修改的执行":["178.5"],"纯函数":["178.5"],"规定只能通过一个纯函数":["178.5"],"reducer":["178.5"],"来描述修改":["178.5"],"大致的数据结构如下所示":["178.5"],"理念实现":["178.5"],"全局":["178.5"],"单例":["178.5"],"应用下只有一个":["178.5"],"它具有以下方法供使用":["178.5"],"getstate":["178.5"],"dispatch":["178.5"],"触发":["178.5","179.2","196.12","223.2"],"更新":["178.5","181.0","207.17","241.3"],"subscribe":["178.5"],"订阅数据变更":["178.5"],"注册监听器":["178.5"],"最为轻量":["178.6"],"而且改造成本小":["178.6"],"不会影响原来的组件层次结构和传说中的嵌套地狱":["178.6"],"类定义更为复杂":["178.6"],"不同的生命周期会使逻辑变得分散且混乱":["178.6"],"不易维护和管理":["178.6"],"时刻需要关注":["178.6"],"的指向问题":["178.6"],"代码复用代价高":["178.6"],"高阶组件的使用经常会使整个组件树变得臃肿":["178.6"],"状态与ui隔离":["178.6"],"正是由于":["178.6"],"的特性":["178.6"],"状态逻辑会变成更小的粒度":["178.6"],"并且极容易被抽象成一个自定义":["178.6"],"组件中的状态和":["178.6"],"变得更为清晰和隔离":["178.6"],"避免在":["178.6","195.7"],"条件判断":["178.6"],"嵌套函数":["178.6"],"中调用":["178.6"],"保证调用顺序的稳定":["178.6"],"只有":["178.6"],"函数定义组件":["178.6"],"可以调用":["178.6"],"类组件":["178.6"],"普通函数":["178.6"],"等框架":["178.7"],"结构大概如下":["178.7"],"开发流程":["178.7"],"此处以":["178.7"],"koa":["178.7"],"在同个项目中":["178.7"],"搭建":["178.7"],"前后端部分":["178.7"],"常规结构":["178.7"],"路由监听":["178.7"],"页面访问":["178.7"],"如果中间也提供":["178.7"],"层":["178.7"],"返回数据":["178.7"],"通过访问":["178.7"],"url匹配":["178.7"],"优势":["178.8"],"完全独立":["178.8"],"与外部解耦":["178.8"],"高度可复用":["178.8"],"在任意上下文":["178.8"],"任意时间线上":["178.8"],"都可执行并且保证结果稳定":["178.8"],"可测试性极强":["178.8"],"条件":["178.8"],"不修改参数":["178.8"],"不依赖":["178.8"],"不修改任何函数外部的数据":["178.8"],"完全可控":["178.8"],"参数一样":["178.8"],"返回值一定一样":["178.8"],"例如函数不能包含":["178.8"],"rando":["178.8"],"等这种不可控因素":["178.8"],"引用透明":["178.8"],"我们常用到的许多":["178.8"],"或者工具函数":["178.8"],"它们都具有着纯函数的特点":["178.8"],"split":["178.8","284.84"],"函数复合":["178.8"],"将多个函数进行组合后调用":["178.8"],"可以实现将一个个函数单元进行组合":["178.8"],"达成最后的目标":["178.8"],"扁平化嵌套":["178.8"],"我们一定能想到组合函数最简单的操作就是":["178.8"],"包裹":["178.8"],"因为在":["178.8","181.0"],"函数也可以当做参数":["178.8"],"布局模型":["179.1"],"可通过":["179.1","179.2"],"sizing":["179.1"],"进行设置":["179.1"],"触发条件":["179.2","179.3"],"fixed":["179.2"],"在三维空间中":["179.3"],"z轴":["179.3"],"高出普通元素一等":["179.3"],"块级元素":["179.4"],"选择器优先级":["179.5"],"去除浮动影响":["179.6"],"防止父级高度塌陷":["179.6"],"功能较多":["179.7"],"可以定义":["179.7"],"rss":["179.7"],"css预处理器的原理":["179.8"],"是将类":["179.8"],"间隔":["179.9"],"曲线":["179.9"],"delay":["179.9","206.15","217.7"],"延迟":["179.9"],"常用钩子":["179.9"],"并不是重点的考察领域":["179.10"],"对象中都包含一个":["179.11"],"非标准":["179.11"],"的属性指向它爹":["179.11"],"该对象的原型":["179.11"],"可":["179.11"],"进行访问":["179.11"],"来":["179.11"],"指向了创建该对象的构造函数的原型":["179.12"],"将对象连接起来组成了原型链":["179.12"],"vo":["179.13"],"作用域链":["179.13"],"词法作用域":["179.13"],"指向":["179.13","179.28","246.3"],"它的类型":["179.13"],"是执行上下文中的一部分":["179.14"],"作用域其实可理解为该上下文中声明的":["179.15"],"变量和声明的作用范围":["179.15"],"可分为":["179.15"],"块级作用域":["179.15","179.29"],"函数作用域":["179.15"],"我们可以在执行上下文中访问到父级甚至全局的变量":["179.16"],"这便是作用域链的功劳":["179.16"],"作用域链可以理解为一组对象列表":["179.16"],"静态作用域":["179.17"],"它的定义可以理解为":["179.17"],"父函数被销毁":["179.17"],"返回出的子函数的":["179.17"],"引入方式":["179.18"],"以赋值的形式拷贝引用对象":["179.19"],"仍指向同一个地址":["179.19"],"修改时原对象也会受到影响":["179.19"],"新生成一个对象":["179.20"],"链接到原型":["179.20"],"能在实例的":["179.21"],"原型对象链":["179.21"],"中找到该构造函数的":["179.21"],"代码的复用":["179.22"],"当你发现任何代码开始写第二遍时":["179.22"],"继承通常指的便是":["179.23"],"也就是通过指定原型":["179.23"],"并可以通过原型链继承原型上的属性或者方法":["179.23"],"最优化":["179.23"],"圣杯模式":["179.23"],"中在使用运算符号或者对比符时":["179.24"],"会自带隐式转换":["179.24"],"规则如下":["179.24"],"一律转换成数值后计算":["179.24"],"本质原因是":["179.25"],"的万物皆对象的理论":["179.25"],"因此要真正完美判断时":["179.25"],"我们需要区分对待":["179.25"],"在浏览器中使用":["179.26"],"的模块化支持":["179.26"],"immediate":["179.27","258.8"],"因此就需要一个机制来让我们可以在函数体内部获取当前的运行环境":["179.28"],"这便是":["179.28"],"因此要明白":["179.28"],"其实就是要搞清楚":["179.28"],"声明":["179.29"],"不存在变量提升":["179.29"],"暂时性死区":["179.29"],"不允许重复声明":["179.29"],"声明常量":["179.29"],"无法修改":["179.29"],"解构赋值":["179.29"],"syntax":["179.30"],"babylon":["179.31"],"然后再返回一个新的函数的技术":["179.32"],"称为函数的柯里化":["179.32"],"通常可用于在不侵入函数的前提下":["179.32"],"为函数":["179.32"],"过滤":["179.33"],"有一项返回":["179.33"],"则整体为":["179.33"],"every":["179.33"],"通过指定连接符生成字符串":["179.33"],"pop":["179.33","180.0","228.1"],"末尾推入和弹出":["179.33"],"共享的中间介质":["179.34"],"因此比较常用的有以下方法":["179.34"],"通过父页面":["179.34"],"用户界面":["179.35"],"事件循环是指":["179.36"],"执行一个宏任务":["179.36"],"三次握手":["179.37"],"发送请求":["179.37"],"分析":["179.37"],"即重绘与回流":["179.38"],"repaint":["179.38"],"当元素样式的改变不影响布局时":["179.38"],"浏览器将使用重绘对元素进行更新":["179.38"],"此时由于只需要ui层面的重新像素绘制":["179.38"],"损耗较少":["179.38"],"将动画效果应用到":["179.39"],"属性为":["179.39"],"短暂性存储":["179.40"],"持久性储存":["179.40"],"短暂性的时候":["179.40"],"我们只需要将数据存在内存中":["179.40"],"多线程环境":["179.41"],"可以新建并将部分任务分配到":["179.41"],"线程并行运行":["179.41"],"两个线程可":["179.41"],"独立运行":["179.41"],"互不干扰":["179.41"],"老生代空间":["179.42"],"用于存活较短的对象":["179.42"],"又分成两个空间":["179.42"],"空间":["179.42"],"全局变量":["179.43"],"无法被回收":["179.43"],"定时器":["179.43"],"线头阻塞":["179.44"],"导致请求之间互相影响":["179.44"],"改进":["179.44"],"长连接":["179.44"],"默认":["179.44"],"keep":["179.44","181.0","236.7"],"复用":["179.44"],"字段指定对应的虚拟站点":["179.44"],"断点续传":["179.44"],"身份认证":["179.44"],"并返回数据":["179.45"],"已创建":["179.45"],"持久化的协议":["179.47"],"基于":["179.47"],"服务端可以":["179.47"],"主动":["179.47"],"客户端发送":["179.48"],"同步序列编号":["179.48"],"客户端":["179.49"],"fin":["179.49"],"服务端":["179.49"],"6个阶段":["179.50"],"执行到期的":["179.50"],"jsonpcallback":["179.51"],"设置":["179.52"],"在下次":["179.53"],"更新循环结束之后执行延迟回调":["179.53"],"会将":["179.54"],"编译成":["179.54"],"beforemount":["179.54","181.0","220.4"],"模板编译":["179.54"],"挂载之前":["179.54"],"生成真实的":["179.54"],"并替换到":["179.54"],"mounted":["179.54","181.0","195.9","216.4"],"组件已挂载":["179.54"],"算法":["179.54"],"比对改变是否需要触发ui更新":["179.54"],"flushschedulequeue":["179.54"],"watcher":["179.54","256.6"],"对每个属性创建独立的监听器":["179.55"],"重写每个属性的":["179.55"],"definereactive":["179.55"],"收集依赖":["179.55"],"depend":["179.55"],"adddep":["179.55"],"派发更新":["179.55"],"notify":["179.55"],"queenwatcher":["179.55"],"newtree":["179.56"],"差异收集":["179.56"],"pathchs":["179.56"],"dfs":["179.56"],"oldnode":["179.56"],"newnode":["179.56"],"curpathchs":["179.56"],"当新旧节点的":["179.56"],"值完全一致时":["179.56"],"继续比对属性差异":["179.56"],"的优势":["179.57"],"mode":["179.58","205.14","206.14","226.1","228.0","241.6"],"状态中心":["179.59"],"mutations":["179.59"],"五大算法":["179.60"],"贪心算法":["179.60"],"inner":["179.61"],"小的放左边":["179.62"],"left数组":["179.62"],"大的放右边":["179.62"],"right数组":["179.62"],"递归继续排序":["179.62"],"初始在第一级":["179.63"],"到第一级有1种方法":["179.63"],"个节点":["179.64"],"且满足":["179.64"],"有n个硬币":["179.65"],"其中1个为假币":["179.65"],"假币重量较轻":["179.65"],"splice":["180.0","181.0"],"unshift":["180.0"],"reverse":["180.0","284.84","295.3"],"因为这些方法都会改变数组本身":["180.0"],"数组里的索引和长度是无法被监控的":["180.0"],"四":["180.0"],"vue中如何进行依赖收集的":["180.0"],"vue初始化的时候":["180.0"],"挂载之后会进行编译":["180.0"],"生成renderfunction":["180.0"],"当取值的时候":["180.0"],"就会搜集watcher":["180.0"],"放到dep里面":["180.0"],"当用户更改值的时候":["180.0"],"就会通知watcher":["180.0"],"去更新视图":["180.0"],"五":["180.0"],"如何理解vue中的模板编译原理":["180.0"],"这个问题的核心是如何将template转换成render函数":["180.0"],"将template模块转换成ast语法书":["180.0"],"parserhtml":["180.0"],"对静态语法做标记":["180.0"],"某些节点不改变":["180.0"],"重新生成代码":["180.0"],"codegen":["180.0","231.1","233.0"],"使用with语法包裹字符串":["180.0"],"六":["180.0"],"vue生命周期钩子是如何实现的":["180.0"],"vue的生命周期钩子是回调函数":["180.0"],"当创建组件实例的过程中会调用相应的钩子方法":["180.0"],"内部会对钩子进行处理":["180.0"],"将钩子函数维护成数组的形式":["180.0"],"七":["180.0"],"vue组件生命周期有哪些":["180.0"],"beforecreate":["180.0","181.0","220.1"],"替换子组件的内容":["180.1"],"在插件中可以使用vue":["180.2"],"无需依赖vue库":["180.2"],"二十九":["180.2"],"组件写name有啥好处":["180.2"],"增加name属性":["180.2"],"会在components属性中增加组件本身":["180.2"],"实现组件的递归调用":["180.2"],"可以表示组件的具体名称":["180.2"],"方便调试和查找对应的组件":["180.2"],"三十":["180.2"],"vue的修饰符有哪些":["180.2"],"stop":["180.2"],"prevent":["180.2"],"passive":["180.2"],"set的一个别名":["181.0"],"为了解决第二个问题":["181.0"],"谈谈你对":["181.0"],"生命周期的理解":["181.0"],"生命周期是什么":["181.0"],"实例有一个完整的生命周期":["181.0"],"也就是从开始创建":["181.0"],"初始化数据":["181.0"],"编译模版":["181.0"],"挂载":["181.0"],"渲染":["181.0","216.4","252.3"],"卸载等一系列过程":["181.0"],"我们称这是":["181.0"],"的生命周期":["181.0"],"各个生命周期的作用":["181.0"],"生命周期":["181.0","195.9"],"组件实例被创建之初":["181.0"],"组件的属性生效之前":["181.0"],"组件实例已经完全创建":["181.0"],"属性也绑定":["181.0"],"但真实":["181.0"],"还没有生成":["181.0"],"el":["181.0","222.6","236.4","286.65"],"还不可用":["181.0"],"在挂载开始之前被调用":["181.0"],"相关的":["181.0","245.3"],"函数首次被调用":["181.0"],"被新创建的":["181.0"],"并挂载到实例上去之后调用该钩子":["181.0"],"beforeupdate":["181.0"],"组件数据更新之前调用":["181.0"],"发生在虚拟":["181.0"],"打补丁之前":["181.0"],"组件数据更新之后":["181.0"],"activited":["181.0"],"专属":["181.0"],"组件被激活时调用":["181.0"],"deactivated":["181.0"],"组件被销毁时调用":["181.0"],"beforedestory":["181.0"],"组件销毁前调用":["181.0"],"destoryed":["181.0"],"组件销毁后调用":["181.0"],"生命周期示意图":["181.0"],"的父组件和子组件生命周期钩子函数执行顺序":["181.0"],"的父组件和子组件生命周期钩子函数执行顺序可以归类为以下":["181.0"],"部分":["181.0"],"加载渲染过程":["181.0"],"父":["181.0"],"子组件更新过程":["181.0"],"updated":["181.0","220.5","256.4"],"父组件更新过程":["181.0"],"销毁过程":["181.0"],"beforedestroy":["181.0"],"destroyed":["181.0"],"在哪个生命周期内调用异步请求":["181.0"],"可以在钩子函数":["181.0"],"中进行调用":["181.0"],"因为在这三个钩子函数中":["181.0"],"已经创建":["181.0"],"可以将服务端端返回的数据进行赋值":["181.0"],"但是本人推荐在":["181.0"],"钩子函数中调用异步请求":["181.0"],"钩子函数中调用异步请求有以下优点":["181.0"],"能更快获取到服务端数据":["181.0"],"减少页面":["181.0"],"不支持":["181.0","195.4"],"钩子函数":["181.0","220.4","220.5"],"所以放在":["181.0"],"中有助于一致性":["181.0"],"在什么阶段才能访问操作dom":["181.0"],"在钩子函数":["181.0"],"被调用前":["181.0"],"已经将编译好的模板挂载到页面上":["181.0"],"中可以访问操作":["181.0"],"具体的生命周期示意图可以参见如下":["181.0"],"理解了整个生命周期各个阶段的操作":["181.0"],"关于生命周期相关的面试题就难不倒你了":["181.0"],"父组件可以监听到子组件的生命周期吗":["181.0"],"比如有父组件":["181.0"],"和子组件":["181.0"],"如果父组件监听到子组件挂载":["181.0"],"就做一些逻辑处理":["181.0"],"可以通过以下写法实现":["181.0"],"dosomething":["181.0"],"以上需要手动通过":["181.0"],"触发父组件的事件":["181.0"],"更简单的方式可以在父组件引用子组件时通过":["181.0"],"hook":["181.0","205.15","208.16","208.17"],"来监听即可":["181.0"],"如下所示":["181.0"],"父组件监听到":["181.0"],"子组件触发":["181.0"],"以上输出顺序为":["181.0"],"方法不仅仅是可以监听":["181.0"],"其它的生命周期事件":["181.0"],"等都可以监听":["181.0"],"的了解":["181.0"],"内置的一个组件":["181.0"],"可以使被包含的组件保留状态":["181.0"],"避免重新渲染":["181.0"],"其有以下特性":["181.0"],"一般结合路由和动态组件一起使用":["181.0"],"用于缓存组件":["181.0"],"提供":["181.0"],"两者都支持字符串或正则表达式":["181.0"],"表示只有名称匹配的组件会被缓存":["181.0"],"表示任何名称匹配的组件都不会被缓存":["181.0"],"的优先级比":["181.0"],"对应两个钩子函数":["181.0"],"activated":["181.0"],"当组件被激活时":["181.0"],"触发钩子函数":["181.0"],"当组件被移除时":["181.0"],"组件中":["181.0"],"为什么是一个函数":["181.0"],"为什么组件中的":["181.0"],"必须是一个函数":["181.0"],"一个对象":["181.0"],"tuple":["182.0"],"集合类型限制就可以":["182.1"],"每个位置的类型":["182.2"],"examplefunc":["183.2"],"mystring":["183.4"],"示例如下":["183.5"],"如果是type的话":["183.5"],"就会是":["183.5"],"是一个强类型的":["184.1"],"杜绝手误导致的变量名写错":["184.3"],"readonly":["184.4"],"枚举和常量枚举的区别":["184.4"],"接口和类型别名的区别":["184.4"],"有什么区别":["184.6","209.15"],"动态的变量类型":["184.6"],"失去了类型检查的作用":["184.6"],"永不存在的值的类型":["184.6"],"indexable":["184.7"],"做声明吗":["184.7"],"可以":["184.7"],"函数声明":["184.7"],"等给类型做声明吗":["184.8"],"不确定一个联合类型的变量到底是哪个类型的时候":["184.10"],"我们只能访问此联合类型的所有类型里共有的属性或方法":["184.10"],"getlength":["184.10"],"something":["184.10","206.14"],"greeter":["184.11"],"enum":["184.12"],"都可以描述":["184.14"],"可以声明基本类型":["184.15"],"联合类型":["184.15"],"元组":["184.15"],"可以立即停止表达式的运行":["184.16"],"空值合并运算符":["184.16"],"modulea":["184.17"],"可以赋值给另一个类型":["184.18"],"我们就可以说类型":["184.18"],"双变和抗变的理解":["184.19"],"类型的情况就叫做协变":["184.20"],"也可以说是":["184.20"],"类型兼容":["184.20"],"因为函数y":["184.21"],"在调用的时候参数是按照y类型进行约束的":["184.21"],"但是用到的是函数x的x的属性和方法":["184.21"],"ts检查结果是类型安全的":["184.21"],"x父类型可以赋值给子类型":["184.22"],"非父子类型之间不会发生型变":["184.23"],"展开对象后面的属性会覆盖前面的属性":["184.24"],"是一个数组列表":["184.28"],"里面包含指定文件的相对或绝对路径":["184.28"],"用来指定待编译文件":["184.28"],"编译器在编译的时候只会编译包含在files中列出的文件":["184.28"],"是用来定义全局变量":["184.29"],"全局函数":["184.29"],"overwrite的作用":["184.32"],"的理解":["185.0"],"支持面向对象编程的概念":["185.1"],"如类":["185.1"],"泛型等":["185.1"],"超集":["185.1"],"类型推断":["185.3"],"中没有批注变量类型会自动推断变量的类型":["185.3"],"常规的动态类型":["185.4"],"编译器利用类型推断来推断类型":["185.5"],"的超集":["185.7"],"扩展了":["185.7"],"项目的配置文件":["186.1"],"设置要编译的文件的名称":["186.2"],"指定要包含在编译中的库文件":["186.3"],"allowjs":["186.3"],"允许编译":["186.3"],"checkjs":["186.3"],"报告":["186.3"],"文件中的错误":["186.3"],"preserve":["186.3"],"代码的生成":["186.3"],"declaration":["186.3","241.1","241.10"],"但是要尽量不使用":["188.0"],"因为使用any过多":["188.0"],"会导致":["188.0"],"失去":["188.0"],"的类型检查意义":["188.0"],"代表返回值":["189.0"],"是空":["189.0"],"demo1":["190.0","190.1"],"section":["190.2","190.4"],"higheraction":["190.2"],"变高":["190.2"],"通过父容器的ref遍历拿到dom引用":["190.2"],"for循环生成的不固定数量或者多种元素的场景":["190.3"],"ref将dom引用放到数组中":["190.4"],"demo4":["190.5"],"cellaction":["190.6"],"cell":["190.6"],"js中":["191.1","191.2","191.3"],"webpackbar":["191.2"],"然后在webpack":["191.2","191.3"],"这些其实网上都可以搜的到":["191.4"],"配置的":["192.4"],"从文件系统读入代码文件":["193.1"],"模块递归处理":["193.1"],"js和命令行传递的参数":["193.2"],"形成最终的配置":["193.2"],"解析配置":["193.2"],"配置项大体上可分为两类":["193.3"],"模块处理":["193.4"],"用于配置模块路径解析规则":["193.4"],"可用于帮助":["193.4"],"更精确":["193.4"],"高效地找到指定模块":["193.4"],"用于配置模块加载规则":["193.4"],"例如针对什么类型的资源需要使用哪些":["193.4"],"进行处理":["193.4"],"开发效率类":["193.5"],"用于配置持续监听文件变化":["193.5"],"持续构建":["193.5"],"也叫摇树优化":["193.6"],"是一种通过移除多于代码":["193.6"],"去引":["193.7"],"输出的":["193.7"],"件":["193.7"],"并自动引用css和js文件":["193.8"],"将js文件中引用的样式单独抽离成css文件":["193.8"],"defineplugin":["193.8"],"形成最后的配置结果":["193.9"],"上一步得到的参数初始化compiler对象":["193.9"],"注册所有配置的插件":["193.9"],"监听webpack构建生命周期的事件节点":["193.9"],"loader是文件加载器":["193.10"],"能够加载资源文件":["193.10"],"并对文件进行一些处理":["193.10"],"如编译":["193.10"],"压缩":["193.10"],"本质就是我们常说的":["194.1"],"是单线程的":["194.1"],"而在小程序中":["194.1"],"选择了":["194.1"],"通过宿主环境提供的setdata方法把数据从逻辑层传递到渲染层":["194.2"],"再经过对比前后差异":["194.2"],"把差异应用在原来的dom树上":["194.2"],"渲染出正确的视图":["194.2"],"重新开始":["194.4"],"用户首次打开或者小程序被微信主动销毁后再次打开的情况":["194.4"],"当小程序进入后台":["194.5"],"客户端会维持一段时间的运行状态":["194.5"],"超过一定时间后会被微信主动销毁":["194.5"],"开源项目":["195.0"],"目前项目内容包含了":["195.0"],"浏览器相关":["195.0"],"安全":["195.0"],"只需要在小程序端设计用户名":["195.1"],"利用这一点我们可以轻松的实现一套基于小程序的用户体系":["195.2"],"值得一提的是这种用户体系对用户的打扰最低":["195.2"],"可以实现静默登录":["195.2"],"具体步骤如下":["195.2"],"在同一开放平台下的所所有应用都是相同的":["195.3"],"建立的用户体系即可实现全平台数据的互通":["195.3"],"更方便的接入原有的功能":["195.3"],"那如何获取":["195.3"],"stat":["195.4"],"曝光埋点代码":["195.4"],"funciton":["195.4"],"dataset":["195.4"],"点击埋点":["195.4"],"这种思路不光适用于埋点":["195.4"],"也可以用来作全局异常处理":["195.4"],"请求的统一处理等场景":["195.4"],"分析接口":["195.4"],"对于特殊的一些业务":["195.4"],"我们可以采取":["195.4"],"接口埋点":["195.4"],"什么叫接口埋点呢":["195.4"],"很多情况下":["195.4"],"我们有的api并不是多处调用的":["195.4"],"只会在某一个特定的页面调用":["195.4"],"通过这个思路我们可以分析出":["195.4"],"该接口被请求":["195.4"],"则这个行为被触发了":["195.4"],"则完全可以通过服务端日志得出埋点数据":["195.4"],"但是这种方式局限性较大":["195.4"],"而且属于分析结果得出过程":["195.4"],"可能存在误差":["195.4"],"但可以作为一种思路了解一下":["195.4"],"微信自定义数据分析":["195.4"],"微信本身提供的数据分析能力":["195.4"],"微信本身提供了常规分析和自定义分析两种数据分析方式":["195.4"],"在小程序后台配置即可":["195.4"],"小程序数据助手":["195.4"],"这款小程序可以很方便的查看":["195.4"],"工程化":["195.4"],"工程化做什么":["195.4"],"目前的前端开发过程":["195.4"],"工程化是必不可少的一环":["195.4"],"那小程序工程化都需要做些什么呢":["195.4"],"先看下目前小程序开发当中存在哪些问题需要解决":["195.4"],"css预编译器":["195.4"],"作为一种主流的":["195.4"],"css解决方案":["195.4"],"不论是":["195.4"],"sass":["195.4"],"stylus":["195.4"],"都可以提升css效率":["195.4"],"不支持引入npm包":["195.4"],"这一条":["195.4"],"从微信公开课中听闻":["195.4"],"微信准备支持":["195.4"],"不支持es7等后续的js特性":["195.4"],"好用的async":["195.4"],"await等特性都无法使用":["195.4"],"不支持引入外部字体文件":["195.4"],"只支持base64":["195.4"],"没有":["195.4"],"等代码检查工具":["195.4"],"方案选型":["195.4"],"对于目前常用的工程化方案":["195.4"],"parcel等来看":["195.4"],"都常用与单页应用的打包和处理":["195.4"],"而小程序天生是":["195.4"],"多页应用":["195.4"],"并且存在一些特定的配置":["195.4"],"根据要解决的问题来看":["195.4"],"无非是文件的编译":["195.4"],"修改":["195.4"],"拷贝这些处理":["195.4"],"对于这些需求":["195.4"],"我们想到基于流的":["195.4"],"gulp":["195.4"],"非常的适合处理":["195.4"],"并且相对于webpack配置多页应用更加简单":["195.4"],"所以小程序工程化方案推荐使用":["195.4"],"具体开发思路":["195.4"],"实时编译":["195.4"],"文件至相应目录":["195.4"],"引入支持async":["195.4"],"await的运行时文件":["195.4"],"编译字体文件为base64":["195.4"],"并生成相应css文件":["195.4"],"依赖分析哪些地方引用了npm包":["195.4"],"将npm包打成一个文件":["195.4"],"拷贝至相应目录":["195.4"],"检查代码规范":["195.4"],"上述实现起来其实并不是很难":["195.4"],"但是这样的话就是一份纯粹的":["195.4"],"构建脚本和":["195.4"],"约定好的目录而已":["195.4"],"每次都有一个新的小程序都来拷贝这份脚本来处理吗":["195.4"],"显然不合适":["195.4"],"那如何真正的实现":["195.4"],"小程序工程化":["195.4"],"我们可能需要一个简单的脚手架":["195.4"],"脚手架需要支持的功能":["195.4"],"支持新建项目":["195.4"],"创建page":["195.4"],"创建component":["195.4"],"支持内置构建脚本":["195.4"],"支持发布小程序":["195.4"],"也可以想办法接入jenkins等工具做持续集成":["195.4"],"小程序持续集成后面会提":["195.4"],"小程序架构":["195.4"],"architecture":["195.4"],"微信小程序的框架包含两部分":["195.4"],"视图层":["195.4"],"service逻辑层":["195.4"],"层用来渲染页面结构":["195.4"],"appservice":["195.4"],"层用来逻辑处理":["195.4"],"数据请求":["195.4"],"接口调用":["195.4"],"它们在":["195.4"],"两个线程里":["195.4"],"视图层和逻辑层通过系统层的":["195.4"],"jsbridage":["195.4"],"进行通信":["195.4"],"逻辑层把数据变化通知到视图层":["195.4"],"触发视图层页面更新":["195.4"],"视图层把触发的事件通知到逻辑层进行业务处理":["195.4"],"补充":["195.4"],"视图层使用":["195.4"],"一个是我本地起的一个http2服务器":["195.5"],"测试中所有请求方法均使用":["195.5"],"wx":["195.5","195.8","202.18","265.2"],"wechatimg16":["195.6"],"如果服务器只支持":["195.6"],"在模拟器请求时发生了一个":["195.6"],"alpn":["195.6"],"协议的错误":["195.6"],"并且提醒使用适配":["195.6"],"wechatimg8":["195.6"],"当把服务器的":["195.6"],"allowhttp1":["195.6"],"设置为":["195.6"],"并在请求时处理相关相关请求参数后":["195.6"],"模拟器能正常访问接口":["195.6"],"并打印出对应的":["195.6"],"请求版本":["195.6"],"每次":["195.7"],"setdata":["195.7"],"的调用都是一次进程间通信过程":["195.7"],"通信开销与":["195.7"],"的数据量正相关":["195.7"],"会引发视图层页面内容的更新":["195.7"],"这一耗时操作一定时间中会阻塞用户交互":["195.7"],"是小程序开发使用最频繁":["195.7"],"也是最容易引发性能问题的":["195.7"],"避免不当使用":["195.7"],"在方法间共享数据":["195.7"],"可能增加":["195.7"],"传输的数据量":["195.7"],"应仅包括与页面渲染相关的数据":["195.7"],"传输大量数据":["195.7"],"通讯耗时与数据正相关":["195.7"],"页面更新延迟可能造成页面更新开销增加":["195.7"],"仅传输页面中发生变化的数据":["195.7"],"的特殊":["195.7"],"实现局部更新":["195.7"],"短时间内频繁调用":["195.7"],"操作卡顿":["195.7"],"交互延迟":["195.7"],"阻塞通信":["195.7"],"页面渲染延迟":["195.7"],"避免不必要的":["195.7"],"对连续的setdata调用进行合并":["195.7"],"在后台页面进行":["195.7"],"抢占前台页面的渲染资源":["195.7"],"页面切入后台后的":["195.7"],"延迟到页面重新展示时执行":["195.7"],"避免不当使用onpagescroll":["195.7"],"只在有必要的时候监听":["195.7"],"pagescroll":["195.7"],"不监听":["195.7"],"则不会派发":["195.7"],"onpagescroll":["195.7"],"中执行复杂逻辑":["195.7"],"中频繁调用":["195.7"],"避免滑动时频繁查询节点信息":["195.7"],"selectquery":["195.7"],"用以判断是否显示":["195.7"],"部分场景建议使用节点布局橡胶状态监听":["195.7"],"inersectionobserver":["195.7"],"替代":["195.7"],"使用自定义组件":["195.7","198.9"],"在需要频繁更新的场景下":["195.7"],"自定义组件的更新只在组件内部进行":["195.7"],"不受页面其他部分内容复杂性影响":["195.7"],"官方小程序技术能力规划":["195.7"],"自定义组件2":["195.7"],"小程序的几个页面间":["195.7"],"存在一些相同或是类似的区域":["195.7"],"这时候可以把这些区域逻辑封装成一个自定义组件":["195.7"],"代码就可以重用":["195.7"],"或者对于比较独立逻辑":["195.7"],"也可以把它封装成一个自定义组件":["195.7"],"也就是微信去年发布的自定义组件":["195.7"],"它让代码得到复用":["195.7"],"减少代码量":["195.7"],"更方便模块化":["195.7"],"优化代码架构组织":["195.7"],"也使得模块清晰":["195.7"],"后期更好地维护":["195.7"],"从而保证更好的性能":["195.7"],"但微信打算在原来的基础上推出的自定义组件":["195.7"],"它将拥有更高级的性能":["195.7"],"usingcomponents":["195.7"],"计划支持全局定义和通配符定义":["195.7"],"这意味着不用在每个页面反复定义":["195.7"],"可以批量导入目录下的所有自定义组件":["195.7"],"计划支持类似":["195.7"],"的功能":["195.7"],"它能使代码逻辑更清晰":["195.7"],"计划支持":["195.7"],"构造器插件":["195.7"],"在实例化一个自定义组件的时候":["195.7"],"允许你在构造器的这个阶段":["195.7"],"加入一些逻辑":["195.7"],"方便进行一些扩展":["195.7"],"甚至是可以扩展成":["195.7"],"的语法":["195.7"],"npm支持":["195.7"],"目前小程序开发的痛点是":["195.7"],"开源组件要手动复制到项目":["195.7"],"后续更新组件也需要手动操作":["195.7"],"不久的将来":["195.7"],"小程序将支持npm包管理":["195.7"],"有了这个之后":["195.7"],"想要引入一些开源的项目就变得很简单了":["195.7"],"只要在项目里面声明":["195.7"],"然后用简单的命令安装":["195.7"],"就可以使用了":["195.7"],"官方自定义组件":["195.7"],"微信小程序团队表示":["195.7"],"他们在考虑推出一些官方自定义组件":["195.7"],"为什么不内置到基础库里呢":["195.7"],"因为内置组件要提供给开发者":["195.7"],"这个组件一定是开发者很难实现或者是无法实现的一个能力":["195.7"],"所以他们更倾向于封装成自定义组件":["195.7"],"想基于这些内置组件里":["195.7"],"封装一些比较常见的":["195.7"],"交互逻辑比较复杂的组件给大家使用":["195.7"],"让大家更容易开发":["195.7"],"类似弹幕组件":["195.7"],"开发者就不用关注弹幕怎么飘":["195.7"],"可以节省开发者的开发成本":["195.7"],"他们也想给开发者提供一些规范和一些模板":["195.7"],"让开发者设计出好用的自定义组件":["195.7"],"更好地被大家去使用":["195.7"],"添加体验评分":["195.7"],"当小程序加载太慢时":["195.7"],"可能会导致用户的流失":["195.7"],"而小程序的开发者可能会面临着不知道如何定位问题或不知如何解决问题的困境":["195.7"],"为此":["195.7"],"小程序即将推出一个体验评分的功能":["195.7"],"这是为了帮助开发者可以检查出小程序有一些什么体验不好的地方":["195.7"],"attrs":["195.8","229.0"],"nimport":["195.8"],"homequotationview":["195.8"],"toplistapi":["195.8"],"nexport":["195.8"],"loadranklist":["195.8"],"ranklist":["195.8"],"datetime":["195.8"],"quotationitem":["195.8"],"navigateto":["195.8"],"toplistdetail":["195.8"],"自动维护了上下文环境":["195.9"],"然而在小程序中并没有类似的机制":["195.9"],"又因为":["195.9"],"执行环境中维护着一份实时的虚拟":["195.9"],"这与小程序的视图层完全对应":["195.9"],"我们思考":["195.9"],"在小程序组件节点上触发事件后":["195.9"],"只要找到虚拟":["195.9"],"上对应的节点":["195.9"],"触发对应的事件不就完成了么":["195.9"],"事件响应如果触发了数据更新":["195.9"],"其生命周期函数更新将自动触发":["195.9"],"在此函数上同步更新小程序数据":["195.9"],"数据同步也就实现了":["195.9"],"gethandle":["195.9"],"这个方法应该就是作者思路当中所说的":["195.9"],"找到对应节点":["195.9"],"然后找到handle":["195.9"],"lifecycle":["195.9"],"initmp":["195.9"],"方法中":["195.9"],"自己创建小程序的app":["195.9"],"实现生命周期相关方法":["195.9"],"callhook":["195.9"],"代理兼容小程序app":["195.9"],"page的生命周期":["195.9"],"官方文档生命周期中说到了":["195.9"],"同":["195.9"],"不同的是我们会在小程序":["195.9"],"onready":["195.9"],"再去触发":["195.9"],"这部分查看":["195.9"],"之后才会执行":["195.9"],"next":["195.9","204.3","206.2","206.9","208.5","221.8","283.7"],"回调最终是vue的":["195.9"],"mountcomponent":["195.9"],"可以在index":["195.9"],"js中看到":["195.9"],"这部分代码也就是解决了":["195.9"],"小程序生命周期中触发vue生命周期":["195.9"],"mptype":["195.9"],"生命周期函数":["195.9"],"监听页面初次渲染完成":["195.9"],"mp":["195.9"],"ready":["195.9"],"rootvuevm":["195.9"],"在小程序onshow时":["195.9"],"nexttick去第一次渲染数据":["195.9"],"参考上面提到的render":["195.9"],"监听页面显示":["195.9"],"onshow":["195.9","196.14"],"只有页面需要":["195.9"],"在mpvue":["195.9"],"loader生成template时":["195.9"],"比如点击事件":["195.9"],"会变成":["195.9"],"bindtap":["195.9"],"handleproxy":["195.9"],"事件绑定全都会使用":["195.9"],"这个方法":["195.9"],"可以查看上面mpvue":["195.9"],"loader回顾一下":["195.9"],"最终handleproxy调用的是event":["195.9"],"js中的":["195.9"],"跟vue":["196.1"],"js里面调用的":["196.2"],"切换到一个新的页面的时候":["196.3"],"指的是组件自身的一些函数":["196.4"],"onlaunch":["196.6","196.12"],"小程序初始化完成时触发":["196.6"],"全局只触发一次":["196.6"],"生命周期回调":["196.7","196.8"],"监听页面加载":["196.7","196.8"],"就是在":["196.9"],"构造器中定义的数据":["196.9"],"组件所在的页面被展示时执行":["196.10"],"hide":["196.10"],"全局只触发":["196.12"],"次":["196.12"],"载":["196.13"],"后触发onshow":["196.13"],"显示":["196.13"],"次显示":["196.13"],"一般的做法是输入账号密码":["197.1"],"或者输入手机号及短信验证码进行登录":["197.1"],"login":["197.2"],"读取用户数据":["197.4"],"由于小程序后台授权域名无法授权微信的域名":["197.4"],"所以需要自身后端调用微信服务器获取用户信息":["197.4"],"方法请求业务方服务器":["197.4"],"后端把":["197.4"],"我们还需要登录态是否过期":["197.6"],"通常的做法是在登录态":["197.6"],"流程如下所示":["197.7"],"小程序首次启动前":["198.2"],"微信会在小程序启动前为小程序准备好通用的运行环境":["198.2"],"围绕上图小程序的启动流程":["198.4"],"代码包的体积压缩可以通过勾选开发者工具中":["198.5"],"上传代码时":["198.5"],"压缩代码":["198.5"],"尽量减少不必要的https请求":["198.6"],"可使用":["198.6"],"getstoragesync":["198.6"],"及":["198.6"],"分包加载":["198.8"],"微信小程序为电商类小程序":["199.1"],"用户通过分享或扫描二维码进入商户小程序":["199.2"],"以电商小程序为例":["199.3"],"商品数量":["199.4"],"以及用户的openid传送到服务器":["199.4"],"服务器在接收到商品id":["199.4"],"openid后":["199.4"],"生成服务期订单数据":["199.4"],"同时经过一定的签名算法":["199.4"],"向微信支付发送请求":["199.4"],"小程序支付和以往的网页":["199.6"],"逻辑层采用":["200.1"],"jscore运行javascript代码":["200.1"],"由于渲染层与逻辑层分开":["200.1"],"一个小程序有多个界面":["200.1"],"所以渲染层对应存在多个webview":["200.1"],"这两个线程之间由native层进行统一处理":["200.1"],"无论是线程之间的通讯":["200.1"],"达到有必须要最先请求的":["200.2"],"接口响应":["200.2"],"在展示":["200.2"],"tab":["200.3"],"标签是通过":["200.4"],"小程序阻止开发者使用一些浏览器提供的比如跳转页面":["200.5"],"操作dom":["200.5"],"动态执行脚本的开放性接口":["200.5"],"如果这些东西一个一个地去禁用":["200.5"],"那么势必会进入一个糟糕的循环":["200.5"],"最多数量":["200.7"],"自适应":["200.8"],"rpx":["200.8"],"而是通过了一层编译":["200.9"],"这个编译的过程是在微信开发者工具端执行的":["200.10"],"设备信息":["200.11"],"这个部分用于获取一套基本设备信息":["200.11"],"可以看到其中在index":["200.12"],"wxss中写rpx单位的属性都变成了区间的样子":["200.12"],"哪三种":["200.13"],"wxss的文件会编译成js再执行":["200.14"],"像这种执行前就进行编译的手段就叫做预编译":["200.14"],"这种框架就是预编译框架":["200.14"],"美团开发的mpvue":["200.15"],"那么就可以修改patch流程不直接生成真实node":["200.15"],"而是触发setdata来更新视图层":["200.15"],"渲染层是没有开放任何操作dom的api给逻辑层的":["200.16"],"人员的分工非常仔细":["201.1"],"一般会有不同岗位角色的员工同时参与同一个小程序项目":["201.1"],"上传代码":["201.3"],"可以点击代码上传功能":["201.4"],"就可以登陆微信公众号的官网首页":["201.5"],"即可提交发布":["201.6"],"开发测试新需求":["201.8"],"测试完成后":["201.8"],"将本地分支合并到":["201.8"],"微信小程序拥有web网页和application共同的特征":["202.1"],"当页面过多时":["202.7"],"被保留页面会挤占微信分配给小程序的内存":["202.7"],"跳转到应用内的某个页面":["202.18"],"redirectto":["202.19"],"当前页面出栈":["202.19"],"开展业务":["203.1"],"截至目前":["203.1"],"小程序已经成为国内前端的一个重要业务":["203.1"],"逐渐成为移动":["203.2"],"web的":["203.2"],"个重要":["203.2"],"微信就有相关的":["203.2"],"程序基于浏览器内核重构的内置解析器":["203.3"],"系统权限":["203.3"],"程序能获得更多的系统权限":["203.3"],"用完即走":["203.5"],"使得小程序可以代替许多app":["203.5"],"及相关数据显示":["203.6"],"小程序的平均次日留存在13":["203.6"],"25日为止":["204.0"],"github上有着":["204.0"],"3k":["204.0"],"此外还在":["204.1"],"上添加了一些属性和方法":["204.1"],"方便用户使用":["204.1"],"所以我们主要看看":["204.1"],"这个函数":["204.1"],"这个也是axios可以创建多个实例的核心函数":["204.1"],"defaultconfig":["204.1"],"实例对象上的函数":["204.2"],"顾名思义是对拦截器的管理":["204.2"],"我们来看看它的源码":["204.2"],"实例化后保存当前实例的请求拦截器的堆栈":["204.2"],"handlers":["204.2"],"往堆栈中添加定义的拦截器":["204.2"],"fulfilled和rejected是拦截器传入的函数":["204.2"],"fulfilled":["204.2"],"这里需要注意一下":["204.2"],"默认值为false":["204.2"],"用于控制请求拦截器是否为同步执行":["204.2"],"synchronous":["204.2"],"runwhen":["204.2"],"移除拦截器":["204.2"],"eject":["204.2"],"adapters":["204.3"],"xhr":["204.3"],"executor":["204.3"],"must":["204.3","214.2"],"resolvepromise":["204.3"],"新建一个promise":["204.3"],"此时这个promise为pending状态":["204.3"],"既挂起":["204.3"],"等待resolve或reject":["204.3"],"promiseexecutor":["204.3"],"当promise别resolve后":["204.3"],"会遍历订阅列表":["204.3"],"执行取消请求函数":["204.3"],"批量取消函数是v0":["204.3"],"22之后新增的功能":["204.3"],"之前版本是不支持批量取消的":["204.3"],"listeners":["204.3"],"使用很简单":["204.4"],"在请求上添加配置即可":["204.4"],"xsrfcookiename":["204.4"],"体积小":["204.5"],"支持请求响应拦截":["204.5"],"支持取消请求":["204.5"],"返回自动转换json":["204.5"],"兼容性好":["204.5"],"处理":["204.6","254.16"],"对请求响应的自动转化":["204.6"],"的处理":["204.6"],"如何适配":["204.6"],"直接打印e":["205.1"],"react事件池":["205.1"],"v17以下在异步方法拿不到事件e":["205.1"],"必须先调用":["205.1"],"persist":["205.1"],"isshowtext":["205.2"],"setisshowtext":["205.2"],"onblur":["205.3","207.7"],"事件已在底层切换为原生的":["205.3"],"focusin":["205.3"],"focusout":["205.3"],"它们更接近":["205.3"],"这是因为在浏览器中无法直接使用":["205.4"],"所以要借助工具如":["205.4"],"语法转换为":["205.4"],"所以需要显式引入":["205.4"],"才能正常调用":["205.4"],"cleanup":["205.5","246.1"],"v17前":["205.5"],"组件被卸载时":["205.5"],"的清理函数都是同步运行的":["205.5"],"对于大型应用程序来说":["205.5"],"同步会减缓屏幕的过渡":["205.5"],"如切换标签":["205.5"],"v17后":["205.5"],"组件的返回值":["205.6"],"nothing":["205.6","206.12"],"was":["205.6","206.8","207.16"],"returned":["205.6","219.10"],"we":["205.6","206.0","206.1","206.8","206.9","206.16","215.2"],"无法适用于生产环境":["205.7"],"整体来说不如原生的":["205.7"],"调用栈":["205.7"],"删除了一些私有":["205.8"],"主要是":["205.8"],"启发式更新算法":["205.9"],"react16的":["205.9"],"v18":["205.10"],"的区别就是":["205.10"],"从同步不可中断更新变成了异步可中断更新":["205.10"],"v17可以通过一些试验性的api开启并发模式":["205.10"],"使用该":["205.11"],"会自动启用并发模式":["205.11"],"如果你升级到v18":["205.11"],"但没有使用":["205.11"],"代替":["205.11"],"原生事件处理函数中失效":["205.12"],"而v18则所有的更新都会自动进行批处理":["205.12"],"v17":["205.12"],"handlebatching":["205.12"],"re":["205.12","206.0","239.3"],"一次":["205.12"],"这就是批处理的作用":["205.12"],"setcount":["205.12"],"将组件渲染成":["205.13"],"形式作为响应返回":["205.13"],"客户端加载资源":["205.13"],"suspense":["205.14","216.2","216.3"],"降级方案":["205.14"],"本质上是用于一些不是很急迫的更新上":["205.14"],"用来进行并发控制":["205.14"],"在v18之前":["205.14"],"所有的更新任务都被视为急迫的任务":["205.14"],"而concurrent":["205.14"],"模式能将渲染中断":["205.14"],"可以让高优先级的任务先更新渲染":["205.14"],"的状态更新可以分为两类":["205.14"],"紧急更新":["205.14"],"ispending":["205.15"],"标志的":["205.15"],"来跟踪":["205.15"],"transition":["205.15","236.4"],"用于过渡期":["205.15"],"是产生一个新状态":["205.16"],"它是延时状态":["205.16"],"这个新的状态则叫":["205.16"],"deferredvalue":["205.16"],"所以使用":["205.16"],"可以推迟状态的渲染":["205.16"],"接受一个值":["205.16"],"并返回该值的新副本":["205.16"],"hydration":["205.17"],"的不匹配":["205.17"],"原理就是每个":["205.17"],"代表该组件在组件树中的层级结构":["205.17"],"这两个":["205.18"],"它通过强制的同步状态更新":["205.19"],"requesteventtime":["206.0"],"executioncontext":["206.0"],"rendercontext":["206.0"],"commitcontext":["206.0"],"nocontext":["206.0"],"inside":["206.0"],"so":["206.0","206.1","206.9","214.2","214.3","220.2","252.5"],"fine":["206.0"],"give":["206.1"],"same":["206.1","214.2","220.2","222.3"],"thread":["206.1"],"expiration":["206.1"],"whatever":["206.1"],"currently":["206.1"],"happens":["206.1"],"later":["206.1","283.4"],"will":["206.1"],"flush":["206.1","256.4","258.6"],"ideally":["206.1","206.12"],"treat":["206.1","206.8"],"they":["206.1","206.8"],"came":["206.1"],"an":["206.1","206.8","252.5"],"interleaved":["206.1","206.8"],"regardless":["206.1"],"fallback":["206.1","252.5"],"pickarbitrarylane":["206.2"],"inputdiscretelanes":["206.2"],"nolane":["206.2"],"inputcontinuouslanepriority":["206.2"],"lanes":["206.3","206.9"],"lane":["206.3"],"更新时间":["206.4"],"优先级":["206.4"],"updatequeue":["206.5"],"如果更新队列为空":["206.5"],"则表示fiber还未渲染":["206.5"],"直接退出":["206.5"],"occurs":["206.5"],"通过获取事件的优先级":["206.6"],"处理具有同样优先级的事件":["206.6"],"mark":["206.8","206.9"],"pending":["206.8"],"标记root有更新的":["206.8"],"markrootupdated":["206.8"],"workinprogressroot":["206.8"],"received":["206.8"],"unless":["206.8"],"deferrenderphaseupdatetonextbatch":["206.8"],"phase":["206.8"],"updates":["206.8"],"fiberroot":["206.9"],"currenttime":["206.9","206.15"],"existingcallbacknode":["206.9"],"callbacknode":["206.9"],"are":["206.9","206.16","228.2","256.4"],"being":["206.9","236.4"],"starved":["206.9"],"expired":["206.9"],"know":["206.9"],"those":["206.9"],"markstarvedlanesasexpired":["206.9"],"workloopconcurrent":["206.10"],"但是与同步任务不同的是异步任务是可以中断的":["206.10"],"这个可中断的关键字就在于":["206.10"],"shouldyield":["206.10"],"它本身返回值是一个":["206.10"],"getcurrenttime":["206.11","206.15"],"deadline":["206.11"],"alternate":["206.12","231.7"],"should":["206.12","214.2","216.3","236.7"],"rely":["206.12","236.4"],"but":["206.12"],"relying":["206.12"],"here":["206.12"],"means":["206.12","206.16","222.7"],"我们可以看到":["206.13"],"progress":["206.14"],"returnfiber":["206.14"],"completed":["206.14"],"threw":["206.14"],"flags":["206.14"],"incomplete":["206.14"],"noflags":["206.14"],"setcurrentdebugfiberindev":["206.14"],"enableprofilertimer":["206.14"],"profilemode":["206.14"],"nomode":["206.14"],"绑定事件":["206.14"],"更新props":["206.14"],"更新dom":["206.14"],"completework":["206.14"],"subtreerenderlanes":["206.14"],"startprofilertimer":["206.14"],"assuming":["206.14"],"didn":["206.14"],"stopprofilertimerifrunningandrecorddelta":["206.14"],"resetcurrentdebugfiberindev":["206.14"],"completing":["206.14"],"spawned":["206.14"],"schedulercallback":["206.15"],"schedulercallbackoptions":["206.15"],"prioritylevel":["206.15"],"reactprioritytoschedulerpriority":["206.15"],"我们几经周折找到了声明函数的地方":["206.15"],"packages":["206.15","254.11","283.10"],"unstable":["206.15"],"cycle":["206.16"],"remaining":["206.16"],"会根据当前任务优先级":["206.17"],"等一些列操作去创建":["206.17"],"workinprogress":["206.17"],"开发者正常给":["207.2"],"阻止冒泡和原生事件中的写法差不多":["207.3"],"当如上":["207.3"],"handleclick上":["207.3"],"父级元素的":["207.3"],"handlefatherclick":["207.3"],"初始化会注册不同的事件插件":["207.4"],"改成了":["207.5"],"容器上":["207.5"],"有一种事件插件机制":["207.6"],"simpleeventplugin":["207.7"],"onclickcapture":["207.7","207.8"],"onchange":["207.8"],"因为react":["207.10"],"重写了事件":["207.10"],"中给元素的事件并不是真正的事件处理函数":["207.10"],"的事件不是绑定在元素上的":["207.11"],"而是统一绑定在顶部容器上":["207.11"],"dispatchevent调用了invokeguardedcallback方法":["207.12"],"invokeguardedcallback":["207.12"],"事件使用驼峰命名":["207.13"],"而不是全部小写":["207.13"],"react事件和原生事件的执行顺序":["207.14"],"react事件和原生事件可以混用吗":["207.15"],"preventdefault":["207.16","286.46"],"clicked":["207.16"],"这里":["207.16"],"通过lastprops":["207.17"],"eventpluginhub负责管理react合成事件的callback":["207.18"],"它将callback存储在listenerbank中":["207.18"],"这里的事件执行利用了react的批处理机制":["207.19"],"在前一篇的":["207.19"],"react深入":["207.19"],"调用eventpluginhub的extractevents方法":["207.20"],"循环所有类型的eventplugin":["207.20"],"让函数组件也能做类组件的事":["208.1"],"第一种形态是防止开发者在函数组件外部调用":["208.2"],"所以第一种就是报错形态":["208.2"],"只要开发者调用了这个形态下的":["208.2"],"在复用":["208.3"],"过程中":["208.3"],"会产生复用":["208.3"],"状态和当前":["208.3"],"不一致的问题":["208.3"],"举一个例子":["208.3"],"本质上都是触发更新的函数都是":["208.4"],"dispatchaction":["208.4"],"setnumber":["208.4"],"本质就是":["208.4"],"首先需要看一下执行":["208.4"],"第一个待更新任务":["208.5"],"已经有带更新任务":["208.5"],"元素增删改":["208.7"],"执行一些生命周期等":["208.7"],"uselayouteffect":["208.7"],"也是副作用":["208.7"],"接下来以":["208.7"],"effect":["208.7","246.4"],"为例子":["208.7"],"看一下":["208.7"],"你的callback函数执行":["208.9"],"当你的useeffect里面的操作需要处理dom":["208.10"],"mountref":["208.13"],"updateref":["208.14"],"nextcreate":["208.16"],"updateworkinprogresshook":["208.17"],"memoizedstate":["208.17"],"父组件":["209.3"],"numbera":["209.3"],"第一个参数为一个函数":["209.4"],"函数的返回值作为缓存值":["209.4"],"如上":["209.4"],"create":["209.5","214.1","214.2","218.8"],"的返回值":["209.5","249.2"],"从而达到按条件渲染组件":["209.6"],"是否相等":["209.7","209.9"],"对于":["209.7"],"reactbaseclasses":["209.8"],"checkshouldcomponentupdate":["209.8"],"如果相等那么不更新组件":["209.9"],"判断新老":["209.9"],"可以根据传入的新的":["209.10"],"compare":["209.11"],"组件不渲染":["209.12"],"阶段执行是在":["209.13"],"当中":["209.13"],"中运行代码远快于浏览器的":["209.13"],"painting":["209.13"],"purecomponent来优化性能":["209.14"],"对于表单控件":["209.14"],"第一个参数就是缓存的内容":["209.15"],"然后针对这个":["210.0"],"对象进行一定的转换":["210.0"],"函数做":["210.1"],"转换":["210.1"],"把这些节点和指令转换成函数作为配置的属性参数传入":["210.1"],"创建根代码生成节点":["210.2"],"rootnode":["210.2","212.1","214.0","227.1","239.3"],"transformoptions":["210.2"],"构造基础的":["211.0"],"节点对象":["211.0"],"transform":["211.0","214.0","214.1","214.3","231.5"],"节点就是":["211.0"],"是多个节点":["212.1"],"返回一个":["212.1"],"fragement":["212.1"],"的代码生成节点":["212.1"],"并赋值给":["212.1"],"完成之后":["212.1"],"把转换":["212.1"],"节点的过程中创建的一些上下文数据赋值给":["212.1"],"节点对应的属性":["212.1"],"transformcontext":["212.1","214.0","214.2"],"helper":["212.1","231.1","231.2","252.6"],"过程一样":["213.0"],"阶段会创建一个上下文对象":["213.0"],"templatechildnode":["214.0"],"currentnode":["214.0","214.1"],"nodetransforms":["214.0"],"exitfns":["214.0"],"expressions":["214.1","214.2","215.2"],"have":["214.1"],"been":["214.1","214.3","235.4"],"processed":["214.1","214.2","214.3"],"merged":["214.1"],"posttransformelement":["214.1"],"nodetypes":["214.1","214.3","231.1"],"tagtype":["214.1","241.8"],"elementtypes":["214.1"],"iscomponent":["214.1"],"goal":["214.1"],"codegennode":["214.1","215.3"],"implementing":["214.1"],"vnodecall":["214.1"],"vnodetag":["214.1"],"resolvecomponenttype":["214.1"],"componentnode":["214.1"],"isdynamiccomponent":["214.1"],"isobject":["214.1","292.2","293.2"],"slot":["214.2"],"isstatic":["214.2"],"dependencies":["214.2"],"can":["214.2","220.2","239.3","255.0"],"shaken":["214.2"],"aliases":["214.2"],"parsed":["214.2"],"asparams":["214.2"],"values":["214.2"],"contain":["214.2","215.2","216.3"],"multiple":["214.2"],"asrawstatements":["214.2"],"localvars":["214.2"],"identifiers":["214.2"],"expressionnode":["214.2"],"validation":["214.2"],"logic":["214.2"],"validatebrowserexpression":["214.2"],"prefixidentifiers":["214.2","226.1","227.1"],"trim":["214.2"],"bindingmetadata":["214.2"],"rewriteidentifier":["214.2"],"raw":["214.2","221.1","248.1"],"hasown":["214.2"],"nodetransform":["214.3"],"perform":["214.3"],"already":["214.3","219.10","235.4","236.4"],"currentcontainer":["214.3"],"compoundexpressionnode":["214.3"],"如果配置了就会执行":["215.1"],"vnode":["215.2","216.2","216.3","216.4","216.5","216.6","218.11","219.1","222.2","222.5","222.6","230.2","234.5","234.6","252.4","254.5"],"isblock":["215.2"],"svg":["215.2"],"foreignobject":["215.2"],"getpatchflag":["215.2"],"returntype":["215.2"],"itself":["215.2"],"patch":["215.2","216.2","222.12","252.3"],"however":["215.2"],"still":["215.2"],"need":["215.2","216.2"],"even":["215.2"],"possible":["215.2"],"hoistable":["215.2"],"refers":["215.2"],"静态提升创建的节点":["215.3"],"由于直接引入了":["216.1"],"内部定义的":["216.1"],"组件对象":["216.1","252.3"],"组件可以直接使用":["216.1"],"keepalivecontext":["216.2"],"internal":["216.2"],"registered":["216.2"],"indicates":["216.2"],"side":["216.2"],"just":["216.2"],"keys":["216.2"],"feature":["216.2"],"prod":["216.2"],"parentsuspense":["216.2","218.8","222.6","232.4"],"move":["216.2"],"um":["216.2"],"unmount":["216.2","222.3"],"storagecontainer":["216.2"],"anchor":["216.2","222.4"],"issvg":["216.2","218.8","222.3","232.4"],"optimized":["216.2","218.8","222.3","236.4"],"exactly":["216.3"],"isvnode":["216.3","218.4","232.2"],"shapeflag":["216.3","218.4","219.4","232.2","236.4","236.7","252.4"],"shapeflags":["216.3","218.4","232.2","236.7"],"stateful":["216.3"],"getinnerchild":["216.3"],"comp":["216.3"],"无需":["216.4"],"递归渲染了":["216.4"],"cachedvnode":["216.4"],"不匹配当":["216.5"],"节点":["216.5","232.3","236.5"],"从缓存中删除那些":["216.5"],"sharedcontext":["216.6"],"deactivate":["216.6"],"instance":["216.6","218.8","219.3","219.7","221.3","222.4","235.4","236.2","252.4","252.6"],"只渲染第一个子元素节点":["216.7"],"组件通过缓存组件子树":["216.7"],"loadingcomponent":["217.0","217.4","217.5","217.7"],"函数执行的结果":["217.1"],"函数做的也是标准化":["217.1"],"函数来加载异步":["217.2"],"js模块":["217.2"],"函数内部主要是通过执行用户定义的":["217.2"],"会修改响应式对象":["217.3"],"工厂函数":["217.4"],"可以接受一个对象":["217.6"],"errorcomponent":["217.7"],"never":["217.7"],"suspensible":["217.7"],"useronerror":["217.7"],"concretecomponent":["217.7","219.3","221.1","235.4"],"resolvedcomp":["217.7"],"retries":["217.7"],"retry":["217.7"],"thisrequest":["217.7"],"加载器在首次渲染的时候发起一个加载异步组件的模块请求":["217.8"],"同时被宣传成注释节点或者":["217.8"],"本质上是用来描述":["218.2","218.11"],"patchflag":["218.4","218.5","222.7","231.2","236.7"],"dynamicprops":["218.4","218.5","231.2","232.2"],"fragment":["218.4","222.7","228.2","232.2"],"isblocknode":["218.4"],"skip":["218.4","232.2"],"normalizekey":["218.4","232.2"],"normalizeref":["218.4"],"scopeid":["218.4","226.1","227.1"],"currentscopeid":["218.4"],"创建组件的":["218.5"],"之间是有父子关系的":["218.5"],"第三个参数表示子节点的":["218.5"],"通过父子关系的建立":["218.5"],"组件内部的":["218.5"],"实际就构成了一颗":["218.5"],"和模版中的":["218.5"],"一一映射":["218.5"],"vnodetypes":["218.5"],"classcomponent":["218.5"],"dynamic":["218.5"],"vnodeprops":["218.5"],"unknown":["218.5","221.4","232.2"],"设置组件的实例":["218.7"],"compat":["218.8","219.10"],"before":["218.8","241.1","241.10","256.4"],"actually":["218.8"],"mounting":["218.8"],"compatmountinstance":["218.8"],"iscompatroot":["218.8"],"不仅仅是为了":["218.10"],"adopt":["219.3"],"appcontext":["219.3","221.1"],"emptyappcontext":["219.3"],"uid":["219.3","235.4"],"等属性":["219.4","222.4"],"然后分别对":["219.4"],"和插槽":["219.4"],"进行了初始化":["219.4"],"directives":["219.6","231.2"],"validatedirectivename":["219.6"],"compileroptions":["219.6","239.3"],"isruntimeonly":["219.6"],"sfc":["219.8"],"setupstatefulcomponent":["219.9"],"中对":["219.9"],"componentinternalinstance":["219.10","221.3","222.6"],"isssr":["219.10"],"skipoptions":["219.10"],"componentoptions":["219.10"],"convertlegacyrenderfn":["219.10"],"compatconfig":["219.10"],"validatecompatconfig":["219.10"],"normalization":["219.10"],"could":["219.10","222.7"],"体积更小":["219.13"],"compile":["219.14","239.3"],"组件的初始化流程主要包含创建组件实例和设置组件实例":["219.15"],"组件的实例用来维护组件的整个生命周期中的一些上下文数据":["219.15"],"函数替代了":["220.0"],"handling":["220.2"],"injected":["220.2"],"不同类型的钩子函数会被保存到组件实例的不同属性上":["220.3"],"createhook":["220.3"],"会在组件挂载之前执行":["220.4"],"会在组件更新之前执行":["220.5"],"unmounted":["220.6"],"钩子函数会在组件销毁之后执行":["220.6"],"组件的销毁整体逻辑":["220.6"],"清理组件实例上绑定的":["220.6"],"会从当前报错的组件的父组件实例开始":["220.7"],"尝试查找":["220.7"],"已注册的":["220.7"],"errorcaptured":["220.7"],"如果找到了":["220.7"],"asmixin":["221.1"],"normalizedpropsoptions":["221.1"],"propscache":["221.1"],"normalized":["221.1"],"needcastkeys":["221.1","221.3"],"还需要根据配置对父组件传递的":["221.2"],"数据做一些求值和验证":["221.2"],"如果没有定义":["221.3"],"判断这个":["221.3"],"是否为非事件派发相关":["221.3"],"若是":["221.3"],"则把它的值赋到":["221.3"],"对象中作为普通属性":["221.3"],"propsoptions":["221.3"],"hasattrschanged":["221.3"],"rawcastvalues":["221.3"],"propoptions":["221.4"],"isabsent":["221.4"],"shallowreactive":["221.5"],"然后遍历子节点":["221.7"],"递归":["221.7"],"组件副作用函数":["221.8"],"在更新组件的时候":["221.8"],"会判断是否有":["221.8"],"变成响应式的":["221.9"],"为什么使用":["221.9"],"对象类型的":["221.10"],"数据变化":["221.10"],"允许组件的使用者在外层传递":["221.11"],"组件内部就可以根据":["221.11"],"更新组件":["222.2"],"slotscopeids":["222.3","232.4"],"ishmrupdating":["222.3"],"dynamicchildren":["222.3","236.7"],"patching":["222.3"],"issamevnodetype":["222.3"],"getnexthostnode":["222.3"],"来决定是否更新":["222.4"],"invalidatejob":["222.4"],"子组件的副作用函数":["222.4"],"主动触发子组件的更新":["222.4"],"n1":["222.4","222.5"],"n2":["222.4"],"rendererelement":["222.4","222.6"],"renderernode":["222.4"],"以及":["222.5","236.2"],"更新子节点":["222.5"],"oldprops":["222.6","236.6"],"parentcomponent":["222.6","232.4"],"suspenseboundary":["222.6"],"fast":["222.7"],"patchflags":["222.7","236.6"],"keyed":["222.7"],"either":["222.7"],"fully":["222.7"],"mixed":["222.7"],"presence":["222.7"],"旧子节点的尾部索引":["222.9"],"如果相同":["222.10"],"如果索引":["222.11"],"尾部索引":["222.11"],"过程":["222.12","252.3"],"递归便利子节点的时候":["222.12"],"如果遇到组件的":["222.12"],"是一个函数":["223.0"],"getter":["223.1","225.4","259.2"],"也可以是一个对象":["223.1"],"首先会先标准化参数":["223.1"],"属性被访问过之后":["223.2"],"对计算属性本身进行依赖收集":["223.2"],"然后判断是否":["223.2"],"dirtry":["223.2"],"函数重置":["223.2"],"当我们直接设置":["223.2"],"对象的值":["223.2"],"会触发":["223.2","257.1","257.2"],"compunted":["223.2"],"函数内部定义的":["223.2"],"通常会依赖单个或者多个响应式对象的值":["224.0"],"计算属性也支持嵌套":["224.0"],"可以由其他计算属性的值计算的来":["224.0"],"因为也拥有了":["225.0"],"isref":["225.0"],"才会执行":["225.3"],"computedgetter":["225.4"],"debugoptions":["225.4"],"debuggeroptions":["225.4"],"computedref":["225.4"],"indent":["226.1","231.7"],"deindent":["226.1","227.1","231.7"],"newline":["226.1","231.7"],"hashelpers":["226.1"],"helpers":["226.1","228.1"],"usewithblock":["226.1"],"genscopeid":["226.1"],"issetupinlined":["226.1"],"preambles":["226.1"],"preamble":["226.1"],"generated":["226.1","228.2","252.5"],"createcodegencontext":["227.0"],"减少代码的缩进":["227.1"],"减一":["227.1"],"sourcemap":["227.1"],"optimizeimports":["227.1"],"runtimeglobalname":["227.1"],"runtimemodulename":["227.1"],"ssrruntimemodulename":["227.1"],"generate":["228.1"],"statements":["228.1"],"bundled":["228.1"],"sure":["228.2"],"these":["228.2"],"correctly":["228.2"],"exported":["228.2"],"codegencontext":["228.3"],"pure":["228.3","231.2","245.3","251.2"],"genassets":["230.1"],"resolvecomponent":["230.2"],"解析到注册的自定义组件对象了":["230.2"],"在后面创建组件":["230.2"],"当作参数传入":["230.2"],"生成资源声明代码之后就需要创建vnode":["230.2"],"树的表达式":["230.2","231.0"],"函数最终返回的是":["230.2"],"assert":["231.1","241.3","241.6"],"missing":["231.1","241.6"],"appropriate":["231.1"],"transforms":["231.1"],"生成数组形式的代码":["231.4"],"否则是一个对象":["231.4"],"递归执行":["231.4"],"gennode":["231.4"],"生成节点代码":["231.4"],"阶段已经做过静态提升":["231.5"],"前后需要添加代码缩进":["231.6"],"中间部分代码继续递归调用":["231.6"],"gennodelist":["231.6"],"consequent":["231.7"],"neednewline":["231.7"],"表示一个":["232.1"],"因为要考虑嵌套的情况":["232.1"],"needfullchildrennormalization":["232.2"],"最后一个参数":["232.3"],"表示是一个":["232.3"],"不会把自身当作一个动态":["232.3"],"收集到":["232.3","245.3"],"会拥有":["232.4"],"需要递归执行":["232.4"],"通过递归可以完成组件下所有动态节点的更新":["232.4"],"patchblockchildrenfn":["232.4"],"oldchildren":["232.4"],"newchildren":["232.4"],"fallbackcontainer":["232.4"],"首先创建了":["233.0"],"上下文":["233.0"],"负责维护整个代码生成阶段中的一些状态数据":["233.0"],"当前代码":["233.0"],"缩进":["233.0"],"attribute":["234.2"],"挂载父组件之前调用":["234.3"],"并且":["234.8"],"dirctives":["235.2"],"一个保存在":["235.3"],"replaced":["235.4"],"individual":["235.4"],"instead":["235.4"],"applied":["235.4"],"是通过":["236.0"],"withdirectives":["236.0"],"没有就看全局是否注册":["236.1"],"如果都没有":["236.1"],"非生产环境下会发出警告":["236.1"],"提示用户没有解析道该指令":["236.1"],"匹配过程中":["236.1"],"先根据":["236.1"],"匹配":["236.1"],"如果失败了":["236.1"],"把":["236.1","238.0","248.0"],"变成":["236.1"],"驼峰格式继续匹配":["236.1"],"首字母大写后继续匹配":["236.1"],"为了兼容自定义指令格式":["236.1"],"overload":["236.1"],"通过对":["236.2"],"拿到每一个指令对象":["236.2"],"指令对应的值":["236.2"],"修饰符":["236.2"],"modifiers":["236.2"],"构造了一个":["236.2"],"binding":["236.2","236.5"],"对象还绑定了":["236.2"],"vnodehook":["236.4","236.6"],"dirs":["236.4","236.5","236.7"],"hostcreateelement":["236.4"],"mount":["236.4"],"数组找到每一个指令对应的":["236.5"],"对象中根据":["236.5"],"找到指令定义的钩子函数":["236.5"],"如果定义了这个钩子函数就执行":["236.5"],"传入一些参数":["236.5"],"新旧":["236.5"],"which":["236.6"],"de":["236.6"],"full":["236.6"],"recurse":["236.6"],"togglerecurse":["236.6"],"onvnodebeforeupdate":["236.6"],"invokevnodehook":["236.6"],"invokedirectivehook":["236.6"],"unset":["236.7"],"setref":["236.7"],"提供给用户对普通":["237.0"],"元素进行底层操作的一种方式":["237.0"],"解析生成":["238.0"],"ast对象":["238.0"],"拥有两个参数":["239.2"],"待编译的模版字符串":["239.2"],"一些配置信息":["239.2"],"compiler":["239.3","252.5","252.6"],"exporting":["239.3"],"everything":["239.3"],"codegenresult":["239.3"],"是源代码语法结构的一种抽象表示":["239.4"],"以树状的形式表示编程语言的语法结构":["239.4"],"树上的每一个节点都表示源代码中的一种结构":["239.4"],"要编译的模版字符串":["239.5"],"编译的相关配置":["239.5"],"主要做了三件事":["239.5"],"创建解析上下文":["239.5"],"根节点":["240.0"],"的根节点":["240.1"],"表示是一个根节点类型":["240.1"],"就是前面解析的":["240.1"],"spec":["241.1","241.10"],"whatwg":["241.1","241.10"],"multipage":["241.1","241.10"],"parsing":["241.1","241.10"],"emiterror":["241.1","241.6","241.10"],"errorcodes":["241.1","241.6","241.10"],"eof":["241.1","241.10"],"markup":["241.1","241.10"],"parsecomment":["241.1","241.10"],"ignore":["241.1","241.10"],"limitation":["241.1","241.10"],"parseboguscomment":["241.1","241.10"],"cdata":["241.1","241.10"],"parsecdata":["241.1"],"主要分为四种情况":["241.2"],"运行到注释结束符到后面":["241.3"],"目的是用来前进代码的":["241.3"],"解析上下文":["241.3"],"parsercontext":["241.3","241.6","241.9"],"commentnode":["241.3"],"startswith":["241.3","241.6","241.10"],"getcursor":["241.3","241.6"],"offset":["241.4"],"等和代码位置相关的属性":["241.4"],"经过":["241.4"],"advanceby的":["241.4"],"textmodes":["241.6"],"interpolationnode":["241.6"],"close":["241.6"],"delimiters":["241.6","241.10"],"closeindex":["241.6"],"advanceby":["241.6"],"parsetextdata":["241.7"],"获取文本内容":["241.7"],"最终返回的值是一个描述文本节点的对象":["241.7"],"为2":["241.7"],"表示是一个文本节点":["241.7"],"表示文本内容":["241.7"],"loc":["241.7","241.9"],"表示代码的开头和结束位置信息":["241.7"],"wasinpre":["241.8"],"inpre":["241.8"],"wasinvpre":["241.8"],"invpre":["241.8","241.10"],"parsetag":["241.8"],"ispreboundary":["241.8"],"isselfclosing":["241.9"],"是否是一个闭合标签":["241.9"],"表示开头和结束的位置":["241.9"],"标签的子节点数组":["241.9"],"空":["241.9"],"elementnode":["241.9"],"parseinterpolation":["241.10"],"parseelement":["241.11"],"就得到整个模版":["241.12"],"并且标签类型的":["241.12"],"在后续解析的过程中":["242.1"],"会始终维护和更新这个解析上下文":["242.1"],"表示当前解析的状态":["242.1"],"创建完解析上下文之后":["242.1"],"开始解析子节点":["242.1"],"调用的情况下":["243.1"],"会一层层的往上找":["243.1"],"injectionkey":["243.1","243.2"],"利用了":["243.2"],"原型链的方式实现了":["243.2"],"层层查找祖先提供的一个":["243.2"],"对应的数据":["243.2"],"就是这样的机制":["243.2"],"导致了":["243.2"],"组件可以在中途覆盖":["243.2"],"父级提供的值":["243.2"],"如果查不着数据":["243.2"],"也没有传入默认值":["243.2"],"就在非生产环境发出警告":["243.2"],"提示用户找不到这个注入的数据":["243.2"],"只能把数据注入这个节点为根的后代组件":["243.6"],"任何地方可以引用":["243.7"],"只需要使用就行":["243.9"],"那个模块定义的":["243.10"],"同一个组件定义可以有多个组件实例":["243.12"],"仅仅为了一个模块定义数据":["243.13"],"导致代码耦合在一起":["243.14"],"对象直接指向父组件的":["243.15"],"当组件执行":["243.15"],"实现了对数据访问和修改的劫持":["244.0"],"弥补了":["244.0"],"当数据被访问":["245.0"],"对特殊的":["245.1"],"做了":["245.1"],"代理":["245.1"],"就会把当前激活副作用函数":["245.3"],"activeeffect":["245.3"],"作为依赖":["245.3"],"与target":["245.3"],"对应":["245.3"],"下的依赖集合":["245.3"],"arrayinstrumentations":["245.3"],"createarrayinstrumentations":["245.3"],"instrumentations":["245.3"],"都需要先执行":["246.1"],"reactiveeffect类的":["246.3"],"也就是说在执行副作用函数":["246.3"],"都需要清空依赖":["246.4"],"每次执行计算的时候采用了":["246.5"],"左移运算符":["246.5"],"中获取":["247.2"],"对应的依赖集合":["247.2"],"depsmap":["247.2"],"内部通过执行":["247.3"],"createreactiveeffect":["247.3"],"函数就是响应式的副作用函数":["247.4"],"当执行":["247.4"],"createreactiveobject":["248.0"],"函数执行":["248.0"],"变成一个响应式对象":["248.0"],"直接返回该响应式对象":["248.1"],"内部通过":["248.1"],"属性判断":["248.1"],"是否已经是响应式对象":["248.1"],"如果同一个原始数据多次执行":["248.1"],"返回相同的响应式对象":["248.1"],"原始对象的类型进一步进行限制":["248.1"],"会通过":["248.1"],"gettargettype":["248.1"],"函数判断":["248.1"],"设置对象属性会触发":["248.2"],"其次在于":["249.0"],"basehandlers":["249.0","251.0"],"collectionhandlers":["249.0","251.0"],"对于普通对象和数组类型数据的":["249.0"],"处理器对象":["249.0"],"函数传入的是":["249.0"],"deleteproperty":["249.1"],"这三个函数":["249.1"],"只读的响应式对象是不允许修改或删除属性的":["249.1"],"所以在非生产韩剧下":["249.1"],"函数实现都会发出警告":["249.1"],"createref":["250.0"],"函数的返回值":["250.0"],"unwrapref":["250.1"],"会把依赖保存在":["250.2"],"全局的":["250.2"],"targetmap":["250.2"],"函数内部可能需要多次判断和设置逻辑":["250.2"],"而把依赖保存到":["250.2"],"而是在":["250.3"],"setupresult":["250.3"],"处理的时候":["250.3"],"赋值给组件实例中的":["250.3"],"setupstate":["250.3"],"主要区别相当于":["251.0"],"的基础上进行拓展":["251.1"],"修改了":["251.1"],"isreadonly":["251.2"],"子组件插槽部分的":["252.1"],"createvnode":["252.2"],"函数的最后执行了":["252.2"],"createbasevnode":["252.2"],"确认了":["252.3"],"会影响后续的":["252.3"],"patch中":["252.3"],"根据":["252.3"],"的type":["252.3"],"决定后续执行的逻辑":["252.3"],"会运行":["252.3"],"processcomponent":["252.3"],"递归渲染子组件":["252.3"],"通过递归方式":["252.3"],"插槽对象还是保留在组件":["252.3"],"属性中":["252.3"],"函数去初始化插槽":["252.4"],"并传入":["252.4"],"由于组件":["252.4"],"facing":["252.5"],"guaranteed":["252.5"],"returning":["252.5"],"vnodearraychildren":["252.5"],"并返回值之前的渲染组件实例":["252.6"],"previnstance":["252.6"],"执行完毕之后":["252.6"],"把之前的":["252.6"],"设置成当前渲染组件":["252.6"],"保证了在组件中渲染具体插槽的内容":["252.6"],"渲染组件实例是父组件的实例":["252.6"],"保证了":["252.6"],"数据作用域来源是父组件":["252.6"],"wrap":["252.6"],"memoize":["252.6"],"函数中的插槽对象稍有不同":["252.7"],"withctx":["252.7"],"封装的插槽函数多了一个参数":["252.7"],"把父组件中编写的插槽内容保存到一个对象上":["252.8"],"并且把具体的渲染":["252.8"],"也可以作用于自定义指令":["253.0"],"作用于表单元素的时候":["253.0"],"会借助于指令的钩子函数在元素挂载后把数据赋值给表单元素":["253.0"],"数据发生变化之后":["253.0"],"vue2":["254.1","254.9"],"的源码是托管":["254.2"],"下":["254.2"],"根据功能才分了":["254.2"],"delete":["254.3"],"兼容性更低":["254.4"],"虽然保证了更新组件的最小化":["254.5"],"但是单个组件内部":["254.5"],"依然需要遍历整个":["254.5"],"优化":["254.6"],"compostion":["254.6"],"保证每一个":["254.7"],"如果被标记过的":["254.8"],"无论是否更新":["254.9"],"buffer":["254.10"],"即使存在动态的绑定":["254.10"],"的方式维护的":["254.11"],"根据功能不同的模块拆分到":["254.11"],"目录下的不同子目录中":["254.11"],"与平台无关的编译器核心代码实现":["254.13"],"包含编译器":["254.13"],"在浏览器端编译时":["254.14"],"在服务端编译时":["254.15"],"虚拟":["254.17"],"对原生":["254.18"],"runtime":["254.20"],"调试模版编译输出的工具":["254.21"],"调试":["254.22"],"服务端渲染的核心实现":["254.24"],"构建版本":["254.26"],"reactiveeffect":["255.0"],"创建的":["255.0"],"对象来实现对响应式数据变化的订阅":["255.0"],"更适合在数据变化之后执行某些逻辑":["255.0"],"计算属性用于一个数据依赖另外一些数据而来的场景":["255.0"],"active":["255.0"],"dep":["255.0"],"内部维护了一个异步任务队列":["256.1"],"其中的一些异步任务":["256.1"],"比如副作用渲染函数":["256.1"],"就是通过":["256.1"],"的方式添加到队列":["256.1"],"首次执行的时候":["256.2"],"ensures":["256.4"],"because":["256.4"],"遍历过程中":["256.5"],"还会检测循环更新":["256.5"],"activepreflushcbs执行完毕后":["256.5"],"清空":["256.5"],"preflushindex重置为":["256.5"],"中的任务在执行前会按照":["256.6"],"大小排序":["256.6"],"保证组件的数据更新优先于用户定义的":["256.6"],"postwachers":["256.6"],"回调函数的执行":["256.6"],"用户就可以在":["256.6"],"的回调函数中":["256.6"],"访问更新后的":["256.6"],"refs":["256.6"],"中的数据":["256.6"],"初始值":["256.8"],"如果再次添加相同的任务":["256.8"],"会自增":["256.8"],"大于了":["256.8"],"我们定义的":["256.8"],"限制":["256.8"],"就说明可能存在无限更新的情况":["256.8"],"的实现原理":["258.0"],"可以监听一个":["258.1"],"监听器自动执行某个回调函数":["258.2"],"拥有三个参数":["258.2"],"标准化主要是根据":["258.3"],"生成标准化后的":["258.3"],"开始处理":["258.5"],"是一个回调函数":["258.5"],"有三个参数":["258.5"],"newvalue":["258.5"],"的值影响":["258.6"],"有三种状态":["258.6"],"wachter":["258.7"],"wacher":["258.9"],"就会立刻直接":["258.9"],"执行后返回的函数":["258.10"],"可以通过调用":["258.10"],"内部设计很巧妙":["258.11"],"可以监听数据的变化":["258.11"],"一个副作用函数":["259.1"],"监听的是一个普通函数":["259.2"],"只要内部访问了":["259.2"],"响应式对象即可":["259.2"],"这个函数不需要返回响应式对象":["259.2"],"没有回调函数":["259.2"],"函数内部通过":["259.3"],"代码编辑器在过去的":["260.0"],"年里不断进化":["260.0"],"从我上大学敲":["260.0"],"代码开始":["260.0"],"就经历了":["260.0"],"myeclipse":["260.0"],"netbeans":["260.0"],"download":["260.1"],"就可以下载最新版了":["260.1"],"下载完成后":["260.1"],"双击安装包就可以安装了":["260.1"],"完成后打开":["260.1"],"就非常的时髦":["260.2"],"会给你滚动可选的列表形式展示出来":["260.2"],"的智能提示也更加":["260.2"],"智能化":["260.2"],"它会猜测你下一步的命令到底输入什么":["260.2"],"比如说我的工作目录下有一个":["260.2"],"那当我输入":["260.2"],"沉默王二":["260.2"],"的时候它会把":["260.2"],"快捷键可以打开":["260.3"],"的命令面板":["260.3"],"键入":["260.3"],"这波着实属于尝鲜了":["260.4"],"市面上应该还木有":["260.4"],"warp":["260.4"],"cn":["262.0"],"七牛云":["262.0"],"staticfile":["262.0"],"baomitu":["262.0"],"字节跳动":["262.0"],"chatgpt":["263.0"],"注册攻略来了":["263.0"],"前置条件":["263.1"],"注册好之后进行对应的充值":["263.2"],"signup":["263.3"],"目前好像就只有巴西和印度支持了":["263.4"],"我们去chatgpt网站去登陆":["263.5"],"chat":["263.5"],"说明你代理不行":["263.6"],"36533eb4":["263.6"],"fa66":["263.6"],"jsrun":["264.0"],"我们做前端的都知道":["265.0"],"重复的东西都可以封装成组件来复用":["265.0"],"而上面这种重复的劳作是我们最不想去做的":["265.0"],"但是因为设计图的精细可能有时候会有":["265.0"],"1px":["265.0"],"的差异就会让":["265.0"],"打回重新编写代码的情况":["265.0"],"久而久之就严重影响了开发效率":["265.0"],"我时常会有这么一种疑惑":["265.0"],"明明设计稿上都有":["265.0"],"样式了":["265.0"],"为什么还要我重新手写一遍呢":["265.0"],"那么有没有一种可能我们可以直接通过":["265.0"],"设计稿":["265.0"],"就自动生成代码呢":["265.0"],"有的":["265.0"],"通过我的调研过后发现":["265.0"],"发现确实":["265.0"],"在同类产品中更好的解决了我遇到的问题":["265.0"],"等主流":["265.1"],"开发框架代码输出":["265.1"],"而是用变量来代替进行动态渲染":["265.3"],"codefun":["265.3"],"使用微信的预览功能才可以看到效果":["265.4"],"会比较":["265.4"],"而是使用":["265.5"],"等属性来":["265.5"],"自适应屏幕百分比":["265.5"],"自动处理":["265.5"],"设计稿中的无用图层":["265.5"],"不可见元素":["265.5"],"错误的编组乃至不合理的文字排列":["265.5"],"全智能切图":["265.5"],"toolgg":["266.0"],"dummyimage":["269.0"],"net":["270.0"],"ruanyifeng":["271.1"],"终端":["275.0"],"下载地址":["275.1"],"设置默认终端":["275.1"],"安装完成后":["275.1"],"安装powerline":["275.2"],"首先安装pip":["275.2"],"如果有了跳过":["275.2"],"easy":["275.2"],"pip":["275.2"],"如果安装失败":["275.2"],"下载脚本并安装get":["275.2"],"py":["275.2"],"bootstrap":["275.2"],"pypa":["275.2"],"python3":["275.2"],"powerline":["275.2"],"安装powerfonts":["275.2"],"创建存放资源文件夹":["275.2"],"desktop":["275.2"],"opensource":["275.2"],"fonts":["275.2"],"folder":["275.2"],"如果git":["275.2"],"下载失败":["275.2"],"可以直接":["275.2"],"链接到":["275.2"],"直接下载zip然后解压":["275.2"],"再执行上面clone后面的操作":["275.2"],"下载的zip后":["275.2"],"文件名后面携带了分支":["275.2"],"下载的是":["275.2"],"需要cd到":["275.2"],"master中":["275.2"],"下面遇到git":["275.2"],"clone问题":["275.2"],"可以这么操作":["275.2"],"成功效果图":["275.2"],"设置iterm2字体":["275.2"],"安装好字体库之后":["275.2"],"我们来设置iterm2的字体":["275.2"],"具体的操作是iterm2":["275.2"],"preferences":["275.2"],"profiles":["275.2"],"在font区域选中change":["275.2"],"然后找到meslo":["275.2"],"lg字体":["275.2"],"有l":["275.2"],"s可选":["275.2"],"看个人喜好":["275.2"],"marktext号称下一代markdown编辑器":["276.0"],"是一款简单易用的开源编辑器":["276.0"],"支持linux":["276.0"],"macos和windows系统":["276.0"],"marktext在github上已经有":["276.0"],"9k":["276.0"],"star":["276.0"],"可见其是非常流行的":["276.0"],"它的主要特性如下":["276.0"],"和typora一样具有无缝的实时预览功能":["276.0"],"给您带来沉浸式写作体验":["276.0"],"支持多种不同风格的markdown语法及扩展":["276.0"],"鼠标点击弹出烟花波纹":["279.3"],"效果图":["279.3","279.6"],"html代码":["279.5"],"点击烟花效果":["279.6"],"自由组合":["279.6"],"count":["279.8"],"innerwidth":["279.8"],"innerheight":["279.8"],"clearrect":["279.8"],"underscore":["281.1"],"一个强大的":["281.2"],"轻量级的用来制作动画的javascript库":["281.2"],"animejs":["281.2"],"悬停效果":["281.2"],"可以应用于链接":["281.2"],"图片等等":["281.2"],"betterscroll":["281.3"],"ustbhuangyi":["281.3"],"better":["281.3"],"scroll":["281.3","286.38"],"valine":["282.1"],"edit":["282.2"],"ret":["283.1"],"isasync":["283.2"],"successor":["283.3"],"设置责任链":["283.3"],"调用debounce声明一下变量":["283.4"],"resullt":["283.4"],"初次由return函数调用":["283.4"],"后面自己递归调用":["283.4"],"提供了第二个参数manual":["283.6"],"允许你可以手动调用一个done函数来重置locking":["283.6"],"这个done函数会放在原函数参数列表的末尾":["283.6"],"manual":["283.6"],"每个中间件只有两个形参":["283.7"],"第一是传进来的参数":["283.7"],"第二个是调用下一个中间件的函数":["283.7"],"中间件的执行顺序是根据你注册中间件的顺序来去调用的":["283.7"],"一个函数":["283.8"],"只允许调用一次":["283.8"],"vuejs":["283.10"],"be1e42eb923a3fdf1ae90fb6cecb0be275e3694a":["283.10"],"shared":["283.10"],"ispromise":["283.10"],"存储当前执行的状态":["283.11"],"currentstate":["283.11"],"如果想忽略结尾边界上的调用":["283.12"],"trailing":["283.12"],"returns":["283.12","291.2"],"返回客户调用函数":["283.12"],"throttle":["283.12"],"gcdztspkxly1":["284.1"],"9a":["284.5"],"18位":["284.6"],"20位数字":["284.6"],"字母":["284.6","284.60","284.64"],"thunderx":["284.7"],"magnet":["284.9"],"路径":["284.11","284.14","284.15"],"hz":["284.16"],"如145":["284.17"],"格式必须为x":["284.21"],"视频格式可按需增删":["284.22"],"图片格式可按需增删":["284.23"],"mm":["284.24","284.25"],"ss":["284.24","284.25"],"支持负数":["284.27"],"不支持校验千分位分隔符":["284.28"],"覆盖对公":["284.29"],"u4e00":["284.30"],"za":["284.31","284.75","284.82"],"hj":["284.32"],"np":["284.32"],"京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领":["284.33","284.34"],"严谨":["284.35"],"根据工信部2019年最新公布的手机号段":["284.35"],"中国":["284.36","284.37"],"宽松":["284.36"],"只要是13":["284.36"],"天津":["284.40"],"重庆":["284.40"],"黑龙江":["284.40"],"吉林":["284.40"],"辽宁":["284.40"],"电话":["284.43"],"国内":["284.43"],"012":["284.46"],"eekkggddsspphh":["284.47"],"允许5":["284.48"],"16字节":["284.48"],"ufa0e":["284.49"],"ufa0f":["284.49","284.66"],"ufa11":["284.49","284.66"],"ufa13":["284.49","284.66"],"ufa14":["284.49","284.66"],"ufa1f":["284.49","284.66"],"uff1f":["284.53"],"uff01":["284.53"],"uff0c":["284.53"],"u3001":["284.53"],"uff1b":["284.53"],"1个小写字母":["284.59"],"1个数字":["284.59"],"1个特殊字符":["284.59"],"以字母开头":["284.64"],"ufa21":["284.66"],"f0":["284.69"],"中任意3项密码":["284.75"],"x21":["284.76"],"不包含协议":["284.83"],"average":["285.1"],"从大到小":["285.2"],"随机":["285.2"],"uniquearr":["285.4"],"uniques":["285.5"],"tagnames":["286.2"],"lv":["286.6"],"union":["286.8"],"身份证":["286.13"],"pwd":["286.13"],"密码以字母开头":["286.13"],"isarr":["286.14"],"isjson":["286.14"],"radix":["286.19"],"randomhexcolor":["286.22"],"elementisinfocus":["286.24"],"judgedevicetype":["286.25"],"webos":["286.25"],"copytext":["286.26"],"rgbtohex":["286.27"],"pid":["286.30"],"存放结果集":["286.31"],"itemmap":["286.31"],"可视容器高度":["286.33"],"也是滚动间隔距离":["286.33"],"容器要设置高度":["286.33"],"否则默认30px":["286.33"],"rollheight":["286.33"],"getcomputedstyle":["286.33"],"roll":["286.33"],"将传入的要滚动的数字拆分后初始化每一位数字的容器":["286.33"],"initdigitele":["286.33"],"numeles":["286.33"],"获取随机位置":["286.37"],"getpostion":["286.37"],"datalist":["286.38"],"setdatalist":["286.38"],"保存数据源":["286.38"],"setposition":["286.38"],"截取缓冲区":["286.38"],"视图区索引":["286.38"],"useref":["286.38"],"获取scroll元素":["286.38"],"获取元素用于容器高度":["286.38"],"complete":["286.39"],"页面已完全加载":["286.39"],"这样可以在document完全加载时监测到":["286.39"],"file2":["286.40"],"doc":["286.40"],"getfileextension":["286.40"],"单位为字节":["286.42"],"参数1":["286.43"],"存储文件切片信息的数组":["286.43"],"参数2":["286.43"],"上传时的文件名称":["286.43"],"concatformdata":["286.43"],"filechunks":["286.43"],"对每个":["286.44"],"formdata":["286.44"],"信息进行提交":["286.44"],"heightall":["286.48"],"idx":["286.49"],"description":["286.51","286.53"],"这只是一个描述":["286.51","286.53"],"里的一个配置":["286.52"],"excludeacceptalloption":["286.52"],"accept":["286.53"],"plain":["286.53"],"txt":["286.53"],"clickfunc":["286.54"],"caption":["286.55"],"tbody":["286.55"],"tfoot":["286.55"],"thead":["286.55"],"td":["286.55"],"article":["286.55"],"aside":["286.55"],"details":["286.55"],"embed":["286.55"],"figure":["286.55"],"figcaption":["286.55"],"为第一选择":["286.59"],"没有则用scrollleft":["286.59"],"随机十六进制颜色":["286.63"],"x0":["286.67"],"appendchild":["286.69"],"获取当前htmliframeelement的window对象":["286.69"],"sandboxglobal":["286.69"],"contentwindow":["286.69"],"firstpromise":["286.70"],"promisefunction":["286.70"],"创建一个临时的":["286.71"],"brand":["286.72"],"huawei":["286.72"],"mi":["286.72"],"vivo":["286.72"],"date1":["287.1"],"date2":["287.1"],"ceil":["287.1"],"参照日期":["287.2"],"day":["287.2","287.3","287.6"],"负数表示前几天":["287.2"],"正数表示后几天":["287.2"],"year":["287.3"],"getfullyear":["287.3"],"month":["287.3"],"getmonth":["287.3"],"getdate":["287.3"],"issameday":["287.5"],"isweekday":["287.7"],"fahrenheittocelsius":["287.8"],"fahrenheit":["287.8"],"beforecall":["288.3"],"aftercall":["288.3"],"将参数变为字符串":["288.5"],"作为缓存key":["288.5"],"base64tofile":["289.1"],"random":["291.1"],"fix":["291.2"],"保留几位小数":["291.2"],"按原数据返回":["291.2"],"千分位之后的结果":["291.2"],"tothousands":["291.2"],"languageformat":["291.5"],"intl":["291.5"],"numberformat":["291.5"],"sizes":["291.6"],"万":["291.6"],"isemptyobject":["292.1","293.1"],"cachearr":["294.1"],"unikey":["294.1"],"changecase":["295.1"],"tolittlecamel":["295.8"],"tobigcamel":["295.9"],"camelto":["295.10"],"appendquery":["296.1"],"tolowercase":["296.2"],"issafari":["296.2"],"getparameters":["296.3"],"decodeuri":["296.3"]},{"0":["10.8","11.6","11.7","20.7","22.24","23.46","25.8","53.11","53.12","55.1","55.4","55.5","56.5","64.16","81.3","86.1","88.2","97.22","106.37","107.1","111.4","114.29","114.32","123.0","127.2","127.24","131.1","131.2","131.3","131.4","131.5","131.6","132.3","132.4","133.5","133.6","134.4","138.28","138.39","151.5","152.30","153.5","153.6","153.7","153.12","154.12","156.18","156.23","170.2","170.8","170.14","173.4","173.38","173.58","174.21","174.22","174.25","174.52","174.60","179.4","204.3","206.15","212.1","214.1","214.3","215.2","228.1","230.1","236.6","241.6","252.3","279.7","283.12","284.6","284.25","284.38","284.41","284.44","284.83","286.33","286.55","291.2","291.4","295.1"],"1":["1.10","19.4","20.3","22.19","25.5","25.8","48.22","52.16","55.3","57.4","61.9","61.17","64.23","86.1","88.2","95.20","96.10","98.2","99.23","100.8","104.0","106.21","106.33","108.2","109.7","113.8","121.5","122.6","122.20","125.0","125.4","125.5","127.5","127.25","127.42","136.7","138.39","140.2","144.1","145.3","152.15","153.11","154.18","156.1","158.4","163.0","164.4","167.0","173.4","173.10","173.25","173.29","173.35","173.38","173.56","173.59","173.64","173.76","174.7","174.22","174.23","174.43","174.60","175.22","176.18","178.5","179.55","179.62","179.64","184.17","195.3","195.7","200.2","205.12","208.17","212.1","214.3","217.7","227.1","246.5","279.7","284.25","284.28","284.35","284.41","284.77","284.78","284.79","284.81","286.27","286.33","286.46","296.3"],"2":["7.0","7.12","19.8","23.27","23.78","29.1","31.1","35.4","37.3","41.0","43.9","44.5","44.6","45.6","45.8","52.14","52.16","64.8","64.23","65.35","70.0","71.21","81.5","87.3","91.0","97.35","99.5","99.10","99.17","99.23","106.25","106.30","106.33","108.2","119.3","119.10","125.0","125.6","127.5","127.25","127.52","137.5","145.3","151.3","152.20","153.12","154.13","154.18","156.1","163.0","167.0","168.13","173.5","173.17","173.21","173.38","173.46","173.52","173.59","173.64","173.69","173.93","173.98","173.99","174.3","174.7","174.28","174.43","174.56","175.22","176.4","177.10","179.44","179.55","179.63","184.3","184.15","200.2","200.4","215.2","222.2","236.1","241.1","241.10","256.4","260.2","284.38","284.41","284.65","284.69","286.33"],"3":["7.8","28.0","30.1","36.5","38.5","43.3","44.6","58.5","61.18","64.2","64.8","65.21","81.1","89.11","96.2","99.5","100.1","100.9","102.0","113.2","113.5","122.24","125.0","125.4","125.5","127.5","127.25","127.42","129.2","129.5","134.3","137.6","151.1","154.13","154.18","158.2","164.2","167.1","173.5","173.17","173.18","173.56","173.59","173.68","173.98","173.99","175.7","175.22","177.10","194.5","195.7","200.1","222.9","222.12","236.1","241.1","241.4","241.10","260.2","284.35","284.42","284.61","284.65","286.28","286.33","286.44","287.3"],"4":["7.8","7.13","7.14","22.24","23.46","23.47","23.78","23.90","43.14","44.6","64.3","65.36","69.10","96.14","100.9","101.3","102.0","104.0","106.20","113.4","114.29","119.10","122.0","125.0","127.5","134.3","152.6","154.11","154.13","154.18","166.1","168.11","173.24","173.43","173.59","173.61","173.99","175.22","177.10","178.7","241.3","284.20","286.33"],"5":["22.24","23.49","38.3","65.36","123.1","125.0","127.1","127.24","127.31","129.2","154.12","154.13","173.59","173.99","174.29","175.4","284.45","284.61","284.69","284.73","286.33","287.8"],"6":["22.18","22.19","38.3","38.4","114.32","123.1","125.0","127.1","127.45","173.59","174.3","195.7","286.6","286.33"],"7":["2.3","22.24","23.74","114.30","125.0","156.14","172.0","174.63","175.10","284.44"],"8":["2.2","2.3","22.18","23.78","106.4","127.24","127.45","171.0","172.0","175.10","175.13","195.4","265.0","284.47","286.38"],"9":["61.2","107.4","138.15","172.0","175.10","175.12","284.1","284.26","284.28","284.54","284.75","284.81","284.82","287.8"],"10":["2.3","11.7","61.17","96.10","96.12","127.3","127.8","127.33","172.0","173.99","175.12","202.7","265.0"],"11":["92.0","107.4","174.47","175.12"],"12":["127.24","175.12","287.3"],"13":["23.52","104.0","127.43","168.11","174.51","175.12"],"14":["46.4","87.34","181.0","284.36"],"15":["52.2","175.10","181.0","284.36"],"16":["61.2","104.0","106.25","175.21","181.0"],"17":["115.0"],"18":["173.9","173.82","205.0","284.45"],"19":["115.0","284.45"],"20":["96.12","127.3","127.33","158.4","158.5","164.4","164.5","200.12","284.45","286.28"],"23":["170.15"],"24":["127.7"],"25":["115.0","173.99"],"29":["22.16"],"30":["152.17","286.28"],"31":["284.46","286.28"],"32":["252.4","287.8"],"35":["100.3"],"39":["138.35"],"40":["173.49"],"41":["125.1"],"42":["22.18"],"44":["127.24"],"50":["91.0","148.0","152.17","156.11","170.11"],"51":["170.8"],"53":["127.52"],"55":["171.0"],"59":["170.15"],"60":["1.22","152.17","286.38"],"64":["89.11"],"67":["106.33"],"79":["100.3"],"80":["114.15","114.30","138.32","177.13"],"82":["22.18","22.19"],"85":["100.8"],"86":["284.35"],"97":["115.0"],"100":["20.7","29.2","106.34","106.37","123.0","170.5","170.8","173.9","177.14","195.8","286.55"],"101":["22.15"],"108":["95.16"],"123":["175.8"],"127":["23.50","138.28","138.39"],"128":["200.12","284.10"],"130":["127.24"],"200":["126.4"],"201":["29.3"],"203":["179.45"],"204":["175.1","179.45"],"206":["175.9"],"226":["195.4"],"227":["195.4"],"228":["195.4"],"229":["195.4"],"230":["195.4"],"240":["23.50","106.34"],"254":["23.50"],"255":["284.10"],"267":["195.4"],"282":["195.8"],"300":["123.1"],"301":["29.4","138.33"],"337":["123.1"],"360":["4.6"],"380":["152.3"],"402":["174.11"],"403":["29.5","89.5"],"404":["89.5"],"409":["175.12"],"444":["168.12"],"500":["89.5","175.12","176.2","286.38"],"501":["29.6","175.12"],"502":["29.6"],"503":["175.12"],"555":["168.12"],"639":["214.1"],"643":["214.1"],"750":["106.27"],"850":["152.2"],"888":["170.15"],"946":["195.8"],"960":["61.13"],"985":["195.8"],"1000":["96.12","149.2"],"1024":["67.3","141.6"],"1080":["61.17"],"1440":["61.13"],"1920":["61.13","61.17","61.18"],"1995":["173.28"],"2011":["127.1"],"2015":["127.1"],"2022":["141.2"],"2078":["218.5"],"3000":["126.6","126.8","154.2","177.13"],"3001":["87.21"],"3002":["138.29"],"4000":["126.6"],"4030":["241.8"],"5000":["159.9","159.13"],"8080":["136.4","159.9","177.13"],"9090":["138.39"],"10000":["166.8"],"13578":["284.46"],"16262":["127.1"],"60000":["98.12"],"65535":["23.64"],"123456":["291.5"],"155349":["152.22"],"3600000":["287.6"],"4306336":["0.1"],"9313935":["0.1"],"86091234":["284.43"],"更新":["0.0","177.5","206.4"],"输入一个":["0.0"],"url":["0.0","10.13","23.93","27.2","68.8","87.4","98.12","109.1","134.4","136.2","136.4","167.4","169.4","178.7"],"c443055":["0.0"],"性能优化":["0.0"],"webpack配置":["0.0"],"3920f84":["0.0"],"项目搭建":["0.0"],"37332f5":["0.0"],"ast":["0.0","62.11","177.7","179.31","241.12"],"面试题过程":["0.0"],"2a1a5e3":["0.0"],"埋点":["0.1"],"1b1be4e":["0.1"],"修改":["0.1","81.3","97.61"],"http":["0.1","1.10","1.11","19.11","23.87","23.90","24.5","28.1","50.1","67.3","68.8","74.6","95.43","95.46","126.3","126.6","136.2","136.4","138.26","138.34","138.38","141.8","152.8","160.0","175.5","175.10","177.13","178.7","195.4","279.7","281.3"],"目录结构":["0.1"],"374f7e5":["0.1"],"js":["0.1","19.14","20.10","21.2","22.13","57.7","61.9","61.12","62.12","62.18","71.22","74.5","74.8","75.7","76.1","76.2","81.5","83.1","83.4","84.4","86.2","87.17","87.39","87.43","93.1","95.3","95.8","95.29","95.31","95.32","96.2","97.17","97.19","97.23","97.53","97.61","98.7","98.10","99.9","99.19","99.23","101.3","102.3","106.28","108.1","111.2","113.7","125.3","133.4","138.4","138.5","138.16","140.3","142.24","143.10","154.19","162.0","162.2","166.4","168.23","171.0","173.97","175.13","181.0","184.29","195.4","205.13","208.4","254.11","282.1"],"网络":["0.1"],"html":["0.1","1.22","4.2","95.38","95.39","101.1","106.5","115.0","121.4","122.22","126.5","126.7","150.12","154.8","154.19","175.10","179.3","179.37","207.5","270.0","279.5"],"css":["0.1","7.7","61.10","61.14","81.1","95.26","95.40","95.42","96.5","97.14","97.18","106.31","115.0","120.0","154.7","154.8","170.4","170.5","171.0","175.10","175.22","179.8","193.8"],"js跨域":["0.1"],"410f001":["0.1"],"linux":["0.1","114.18","173.13"],"b7afb96":["0.1"],"node":["0.1","10.4","21.2","53.3","53.6","53.9","64.15","64.16","64.18","76.2","87.33","95.10","96.14","102.5","114.21","114.23","140.3","144.6","176.19","179.56","195.4","231.5"],"0669303":["0.1"],"d19e188":["0.1"],"20831b9":["0.1"],"vue面试题":["0.1"],"fec1599":["0.1"],"260806e":["0.1"],"软能力":["0.1","43.14"],"软能力更新":["0.1"],"c28c21d":["0.1"],"源码":["0.1","154.3"],"大幅度更新":["0.1"],"vue源码":["0.1"],"配图":["0.1"],"配代码":["0.1"],"d48d227":["0.1"],"uve":["0.1"],"指令源码解读":["0.1"],"881b39f":["0.1"],"provide":["0.1","181.0","243.4","243.15"],"inject":["0.1","181.0"],"5feb9b9":["0.1"],"component":["0.1","89.13","97.4","178.2","178.7","195.9","205.6","216.4","222.4","230.2","256.4"],"新增图片合并组建":["0.1"],"e5e5e52":["0.1"],"升级":["0.1","195.9"],"alan":["0.1"],"后端处理":["1.0"],"浏览器响应三个步骤":["1.0"],"memory":["1.1","1.4"],"cache":["1.1","23.91","66.4","68.10","178.7","179.44","219.6"],"内存缓存":["1.1"],"速度快":["1.1"],"但是":["1.1","1.5","50.7"],"并且缓存是持续性的":["1.2"],"当":["1.2","166.2","175.10","179.42","179.56","181.0"],"一旦我们关闭":["1.3"],"tab":["1.3","10.8","97.19","133.3"],"页面":["1.3","126.8"],"内存中的缓存也就被释放了":["1.3"],"当我们访问过页面以后":["1.3"],"比之":["1.4"],"在国内能够查到的资料很少":["1.5"],"也是因为":["1.5"],"在国内不够普及":["1.5"],"将会是日后的一个趋势":["1.5"],"那么只能发起请求来获取资源了":["1.6"],"并且缓存策略都是通过设置":["1.7"],"实现":["1.8","1.11","19.7"],"expires":["1.8","25.8","121.10","175.9","175.16","179.44"],"00":["1.9"],"gmt":["1.9"],"是":["1.9","67.0","71.6","173.68","175.12","178.5","258.3","258.6"],"出现于":["1.10"],"header":["1.11","19.9","19.13","106.41","106.51","126.5","138.29","166.6","175.9"],"会将":["1.12"],"的值发送给服务器":["1.12"],"询问服务器在该日期后资源是否有更新":["1.12"],"有更新的话就会将新的资源发送回来":["1.12"],"会将当前":["1.13"],"发送给服务器":["1.13"],"询问该资源":["1.13"],"etag":["1.14","27.9","179.44"],"值必须改变":["1.16"],"尽量便于计算":["1.16"],"不会特别耗":["1.16"],"cpu":["1.16","22.1","113.2"],"而重新获取资源":["1.17"],"某些文件修改非常频繁":["1.17"],"比如在下一秒的时间内进行修改":["1.17"],"比如":["1.18","5.9","22.13","27.5","33.1","37.3","39.2","40.4","44.2","44.7","44.9","46.2","46.4","80.4","84.3","106.33","106.36","127.37","140.5","172.0","174.8","245.1"],"nginx":["1.18","138.9","138.26","138.31"],"中的":["1.18","173.97","179.54","256.6"],"由":["1.18","111.2"],"no":["1.20","97.22","119.11","170.8","170.11"],"文件一般不缓存或者缓存时间很短":["1.21"],"一般来说":["1.21","44.4","121.9"],"现在都会使用工具来打包代码":["1.21"],"root":["1.22","53.10","53.12","95.22","97.19","106.18"],"index":["1.22","19.14","81.1","86.1","87.17","89.13","96.4","99.9","112.4","126.5","127.9","133.5","154.19","156.1","156.2","156.11","169.3","173.95","184.10","190.4","195.4","208.3","286.33"],"aqs":["2.2"],"chrome":["2.2","121.7","128.0","148.3","152.30"],"69i57j69i65j69i60j69i65j69i60l2":["2.2"],"560j0j1":["2.2"],"sourceid":["2.2"],"ie":["2.2","107.4","121.6","121.7","168.3","168.7","286.47"],"utf":["2.2"],"有个机制":["2.3"],"同一个域名同时最多只能建立":["2.3"],"个tcp":["2.3"],"连接":["2.3","175.9"],"如果在同一个域名下同时有":["2.3"],"个请求发生":["2.3"],"那么其中":["2.3"],"个请求会进入排队等待状态":["2.3"],"直至进行中的请求完成":["2.3"],"如果当前请求数量少于6个":["2.3"],"会直接建立tcp连接":["2.3"],"tcp三次握手建立连接":["2.3"],"http请求加上tcp头部":["2.3"],"包括源端口号":["2.3"],"目的程序端口号和用于校验数据完整性的序号":["2.3"],"向下传输":["2.3"],"网络层在数据包上加上ip头部":["2.3"],"包括源ip地址和目的ip地址":["2.3"],"负责各个页面的管理":["3.1"],"创建和销毁其他进程":["3.1"],"将渲染":["3.1"],"renderer":["3.1","219.10","227.1"],"进程得到的内存中的bitmap":["3.1"],"多进程充分利用多核优势":["3.2"],"方便使用沙盒模型隔离插件等进程":["3.2"],"renderobject":["3.4"],"树":["3.4","6.1","174.40","175.10","175.22"],"新版火狐的jaegermonkey引擎等":["3.5"],"js引擎线程负责解析javascript脚本":["3.5"],"运行代码":["3.5"],"需要浏览器另开线程协助":["3.6"],"当js引擎执行代码块如鼠标点击":["3.6"],"如果任务队列处于阻塞线程状态就会影响记计时的准确":["3.7"],"是浏览器新开一个http线程":["3.8"],"或layout":["4.2"],"engineer渲染引擎":["4.2"],"负责取得网页的内容":["4.2"],"xml":["4.2"],"图像等等":["4.2","4.4"],"整理讯息":["4.2","4.4"],"layout":["4.3","106.51","175.22"],"后来js引擎越来越独立":["4.5"],"搜狗浏览器等":["4.6"],"又称mshtml":["4.6"],"gecko内核":["4.6"],"observer":["5.0","5.9"],"function":["5.2","10.5","10.9","10.13","10.14","19.6","19.14","21.8","21.16","21.17","52.12","52.17","53.10","53.12","55.5","57.7","61.5","62.15","64.9","89.5","95.22","95.23","95.45","98.7","99.6","100.2","100.8","103.12","106.27","111.2","115.0","127.15","130.3","130.9","130.10","133.2","133.7","140.0","141.4","153.8","158.3","164.3","166.8","166.9","168.19","169.3","173.14","173.47","173.57","173.64","173.69","173.82","174.20","174.29","174.40","174.48","174.56","175.6","175.8","176.5","179.23","179.25","179.55","179.62","185.4","205.16","205.17","208.3","208.4","208.7","210.0","210.1","219.4","220.3","231.5","236.2","236.5","241.7","248.0","283.4","286.20","286.21","287.2","295.1"],"entries":["5.2","195.9"],"console":["5.2","9.1","10.5","10.8","19.6","19.14","21.10","62.5","64.16","64.17","87.26","96.10","96.12","99.8","103.15","125.0","125.6","127.12","127.16","127.26","127.28","127.31","127.36","127.46","133.2","133.3","140.0","141.3","141.4","154.18","156.1","159.9","162.0","162.2","162.3","173.6","173.41","173.59","173.98","173.99","175.5","176.2","176.13","176.18","195.4","285.4"],"log":["5.2","19.6","19.14","21.10","64.16","64.17","64.19","87.26","96.10","99.8","103.15","112.3","114.11","125.0","125.6","127.12","127.16","127.26","127.28","127.31","127.36","127.46","133.2","133.3","140.0","141.3","141.4","154.11","154.18","156.1","159.9","162.0","162.1","162.2","162.3","165.1","165.2","173.6","173.41","173.59","173.98","173.99","175.5","176.2","176.18","286.3"],"info":["5.2","98.13","99.7","119.8","127.7"],"什么时候可见的":["5.3"],"而监听元素的属性和子节点的变化":["5.5"],"我们可以用":["5.5"],"mutationobserver":["5.5","5.6","5.12","151.13","173.52"],"那么就可以通过":["5.6"],"width":["5.8","91.0","103.11","106.37","127.39","147.2","168.7","195.8"],"height":["5.8","91.0","106.16","106.22","106.24","106.37","122.6","147.2","195.8","286.38"],"被修改时会触发回调":["5.8"],"javascript":["5.8","58.5","97.20","130.4","130.5","130.7","130.8","133.4","133.7","136.2","140.5","143.4","143.5","143.9","172.0","173.13","173.66","173.67","175.13","179.39","184.2","284.6","284.11","284.14","284.15","284.17","284.24","284.25","284.27","284.59","286.44"],"const":["5.8","52.12","53.10","53.11","57.7","59.1","61.8","62.13","64.26","86.5","89.5","95.22","98.7","99.15","100.2","103.8","103.14","109.1","109.7","110.1","111.1","111.2","127.25","127.31","127.32","127.46","127.47","131.10","132.3","132.4","133.4","140.3","140.4","141.4","148.2","154.11","154.12","154.18","156.10","156.20","156.21","162.2","166.5","173.86","177.8","178.5","178.6","178.8","179.32","179.41","179.51","191.3","195.4","205.16","205.17","206.0","208.7","208.13","208.14","209.3","227.1","230.2","231.4","231.6","239.3","241.9","242.1","249.1","252.3","252.6","283.7","286.44","286.45","286.59","286.62","286.63","286.72","287.2","288.1","291.2"],"这样我们就可以在回调里把这些数据上报":["5.9"],"可以用":["5.9","175.10"],"mark":["5.9","286.55"],"方法记录某个时间点":["5.9"],"registered":["5.9"],"会在控制台打印一个过时的报告":["5.10"],"浏览器还会在一些情况下对网页行为做一些干预":["5.10"],"click":["5.11","173.7","190.4"],"mousedown":["5.11"],"keydown":["5.11","207.8"],"图片的懒加载":["5.12"],"监听元素属性和子节点变化":["5.12"],"继续解析后续的html":["6.1"],"这是因为下载和解析":["6.1"],"的工作是在预解析线程中进行的":["6.1"],"这就是":["6.1"],"不会阻塞":["6.1"],"解析的根本原因":["6.1"],"script":["6.1","65.18","66.3","72.3","74.7","77.2","86.3","121.0","152.20","161.0","175.10","195.7","286.9"],"会停止解析":["6.1"],"转而等待":["6.1"],"文件下载好":["6.1"],"并将全局代码解析执行完成后":["6.1"],"才能继续解析":["6.1"],"因为":["6.1","46.4","87.14","146.2","195.7"],"会修改当前的dom":["6.1"],"所以":["6.1","23.88","46.4","48.3","61.3","96.7","173.73"],"dom":["6.1","7.3","7.12","11.1","100.6","151.4","151.12","152.20","172.0","175.10","175.22","209.13","218.2","219.1","252.1","252.8","253.0","254.17"],"当进行了会影响布局树的操作后":["6.3"],"需要重新计算布局树":["6.3"],"会引发":["6.3"],"的本质就是重新根据分层信息计算了绘制指令":["6.4"],"当改动了可见样式后":["6.4"],"它影响的只是渲染流程的最后一个":["6.5"],"draw":["6.5","7.5"],"dom操作":["7.0"],"排版":["7.0"],"图层树的构建和更新等任务":["7.0"],"layer":["7.0","7.3","171.0"],"compositor":["7.0","7.2","7.3"],"图层合成器":["7.0"],"接收":["7.0"],"或者特定配置下":["7.1"],"进程可以兼作":["7.1"],"进程或者":["7.1"],"意味着没有独立的":["7.1"],"或者":["7.1","84.7","84.8","106.19","127.37","127.44","175.10","179.56","256.6"],"树来生成一颗图层树":["7.3"],"并以":["7.3"],"displaylist":["7.3"],"的形式记录每个图层的内容":["7.3"],"未来图层化决策应该会转移到":["7.3"],"负责":["7.4"],"所以这里的转换基本上可以认为是生成一棵同样的树":["7.4"],"再对逐个图层的进行拷贝":["7.4"],"需要为每个图层进行分块":["7.4"],"为每个分块分配":["7.4"],"的每个":["7.5"],"根据自身状态机的状态决定是否需要":["7.6"],"blink":["7.6","7.8","195.4"],"输出下一帧":["7.6"],"display":["7.6","90.0","103.2","106.21","179.2","286.55"],"则比较简单":["7.6"],"它持有一个":["7.6"],"frame":["7.6","152.20","168.17"],"触发然后交由合成器运行":["7.7"],"比如说传统的":["7.7"],"translation":["7.7"],"或者新的":["7.7"],"理论性能由高到低":["7.8"],"合成器本身触发并运行的动画":["7.8"],"触发":["7.8","175.7","179.54"],"合成器运行的动画":["7.8"],"无法由合成器运行的动画":["7.8"],"驱动的":["7.8"],"动画":["7.8","152.6"],"长久以来":["7.8"],"合成器找到这些图层在当前可见区域的分块":["7.9"],"合成器检查这些分块是否需要光栅化":["7.9"],"如果需要":["7.9"],"生成一个对应的光栅化任务并分配所需要的":["7.9"],"resource":["7.9"],"消息后":["7.10"],"更新合成器内部的状态机":["7.10"],"开始准备输出":["7.10"],"在这个过程中的一个重要动作就是":["7.10"],"animate":["7.10"],"合成器会检查当前是否有正在运行的动画":["7.10"],"然后运行这些动画":["7.10"],"并根据动画运行的结果改变关联图层的对应属性":["7.10"],"比如惯性滚动动画改变图层的":["7.10"],"scroll":["7.10"],"offset":["7.10"],"transform":["7.10","64.15","64.16","153.8","171.0","179.4"],"动画改变图层的":["7.10"],"一般也是不超过":["7.11"],"耗时主要取决于当前可见区域内的可见分块的数量":["7.11"],"gpu":["7.11","171.0"],"部分的耗时比较长":["7.11"],"耗时主要取决于当前可见区域内的可见分块的总面积":["7.11"],"也就是绘制的总面积":["7.11"],"一旦":["7.11"],"检查网页的合成器动画":["7.12"],"包括网页的惯性滚动":["7.12"],"各种图层的淡入":["7.12"],"淡出等动画":["7.12"],"在动画过程中":["7.12"],"是否同时存在大量的网络加载和":["7.12"],"操作":["7.12","87.18"],"commit":["7.13","69.6","71.19","97.41","97.45","116.1","181.0"],"的请求":["7.13"],"合成器在":["7.13"],"过程中根据":["7.13"],"生成自身的图层树":["7.13"],"在":["7.13","12.0","25.8","48.27","61.3","65.21","69.3","81.1","87.14","97.11","97.61","98.8","104.0","106.28","128.0","175.9","175.10","178.1","195.4","195.7","205.10","207.11","250.0","275.1"],"的过程中保持阻塞状态":["7.13"],"完成后再继续运行":["7.13"],"合成器实际上有两棵图层树":["7.13"],"新提交的":["7.13"],"生成的是":["7.13"],"毫秒上下":["7.14"],"rasterize":["7.14"],"的耗时范围变化极大":["7.14"],"取决于网页内容的复杂程度和新":["7.14"],"在当前可见区域内网页内容发生变化的总面积":["7.14"],"另外图片解码也发生在这个阶段":["7.14"],"而图片解码也是光栅化耗时最多的一个环节":["7.14"],"光栅化的耗时从几毫秒到几百毫秒都有可能":["7.14"],"图片在第一次被光栅化时被解码":["7.14"],"一直在可见区域内的图片不会被反复重解码":["7.14"],"active":["7.14","223.2"],"是服务器发送到web浏览器上的一小块数据":["8.2"],"一般大小限制在4kb以内":["8.2"],"个性化":["8.3"],"不加密则不安全":["8.4"],"addeventlistener":["8.5","98.9","99.8","133.7","173.7"],"没有设置的话":["8.7"],"默认是关闭浏览器后失效":["8.7"],"localstorage和sessionstorage":["8.8"],"如果使用cookie保存过多数据会带来性能问题":["8.9"],"源生的cookie接口不友好":["8.10"],"不可以跨域调用":["8.11"],"限制比较多":["8.11"],"但是用来识别用户登录来说":["8.11"],"session":["8.12","166.0","175.16","195.6"],"和sessionstroage":["8.12"],"仅在客户端中保存":["8.14"],"存储的数据也会被删除":["8.15"],"作用域":["8.15","173.27"],"谁拥有数据的访问权":["8.15"],"在同一个浏览器内":["8.15"],"同源文档之间共享":["8.15"],"detail":["9.1"],"importer":["9.1"],"p":["10.1","114.14","122.2","154.12","156.2","171.0","172.0","178.8","179.23","195.4"],"选项卡":["10.2"],"nodecolors":["10.4"],"prop":["10.4","286.69"],"window":["10.4","10.9","48.1","96.2","98.11","98.13","101.5","106.27","133.7","134.3","147.5","151.6","156.15","195.4","286.59","286.61"],"getcomputedstyle":["10.4"],"null":["10.4","89.5","98.7","99.13","111.4","125.9","130.6","131.6","134.4","156.17","162.0","173.37","176.5","204.3","205.1","206.4","209.9","216.6","221.4","236.5","252.3","252.5","252.6","286.70","291.6"],"getpropertyvalue":["10.4"],"thisisaborderproperty":["10.4"],"indexof":["10.4","89.13","195.4","245.3"],"notborderzero":["10.4"],"replace":["10.4","127.21","173.29","295.1","295.6","296.3"],"0px":["10.4"],"true":["10.4","19.3","65.30","95.13","95.22","95.25","96.5","97.19","97.26","97.57","99.8","102.5","103.11","127.36","127.41","130.3","133.6","154.2","154.5","154.16","156.18","159.5","173.37","173.39","173.68","178.6","178.7","184.28","205.2","206.10","206.16","214.3","219.3","220.7","221.1","222.3","223.2","231.4","239.3","249.0","256.2","283.6"],"colorconditionsmet":["10.4"],"if":["10.4","10.9","16.0","19.14","52.16","53.10","53.11","62.18","64.15","64.16","89.5","95.45","95.46","98.7","99.13","101.5","103.12","103.17","108.3","109.7","125.9","141.4","147.4","156.3","156.23","159.2","159.5","168.19","173.1","173.2","173.85","174.8","174.37","174.60","175.9","179.27","179.62","204.2","208.4","209.3","210.2","212.1","214.0","216.6","218.4","218.5","218.8","221.3","222.4","222.6","231.2","231.7","236.4","239.3","241.3","241.8","252.3","252.5","252.6","256.8","283.1","283.4","283.6","283.9","286.14","286.15","286.28","286.30","286.46","286.69","287.3","288.3","290.1","291.1","291.6","294.1","295.8","295.10","296.1","296.2"],"else":["10.4","10.7","89.5","95.46","99.12","112.1","132.4","159.5","179.56","206.15","214.0","217.7","222.7","226.1","236.4","236.6","243.1","251.2","252.3","256.8","288.4"],"in":["10.5","52.12","106.11","106.27","107.4","127.29","129.7","148.3","148.4","156.15","206.12","216.3","218.5","219.10","221.3","222.6","235.4","241.1","241.10","288.5"],"document":["10.5","127.28","175.6","179.51","286.1","286.56","286.57","286.68","286.71","296.2"],"a":["10.5","10.10","11.2","19.10","50.17","52.4","57.6","64.13","64.17","99.11","108.4","111.3","112.2","117.2","125.7","127.3","127.8","127.50","129.2","140.2","148.3","158.2","164.2","172.0","173.26","173.69","173.82","173.85","174.12","179.55","184.12","185.1","195.4","195.9","206.14","207.12","212.1","219.6","226.1","228.1","235.4","236.2","256.4","284.7","284.15","284.19","284.47","284.71","286.8","286.13","296.2"],"table":["10.5","106.21","106.41","172.0","179.2"],"appendchild":["10.7","127.28","169.4"],"insertbefore":["10.7"],"nextsibling":["10.7"],"reloadstylesheet":["10.7"],"stylesheet":["10.7","279.9"],"element":["10.7","89.5","97.35","156.17","209.4","212.1","228.2","232.4","236.7","252.3","286.57"],"ownernode":["10.7"],"len":["10.8","132.3","132.4"],"length":["10.8","27.11","53.3","53.6","53.9","55.2","55.3","55.4","131.2","131.3","131.4","131.5","131.6","132.3","132.4","133.6","154.10","154.17","173.2","173.58","173.98","174.8","174.22","174.23","174.37","174.60","176.4","179.56","179.62","184.10","204.3","212.1","214.3","215.2","232.4","241.7","283.7","285.5","286.6","286.12","286.49","291.1"],"group":["10.8"],"htmlform":["10.8"],"not":["10.9","89.5","132.2","132.3","140.0","195.4","206.14","219.10"],"have":["10.9","206.8","216.2","256.4"],"it":["10.9","206.8","212.1","228.1"],"already":["10.9","204.3","206.8","252.6"],"var":["10.9","10.13","10.14","19.11","53.12","64.17","68.11","99.10","106.27","113.6","114.11","125.2","127.5","127.6","127.8","127.10","136.2","136.4","162.2","173.4","173.86","179.23","195.4","204.1","286.28"],"bgrins":["10.10"],"devtools":["10.10","96.2"],"snippets":["10.10"],"adds":["10.10","236.2"],"responseend":["10.11"],"requeststart":["10.11","99.14"],"connection":["10.11","159.9"],"connectend":["10.11"],"connectstart":["10.11"],"responsestart":["10.11"],"domain":["10.11","107.4","109.1","126.5","175.12"],"lookup":["10.11"],"domainlookupend":["10.11","151.7","152.9"],"domainlookupstart":["10.11","151.7"],"tagnames":["10.12"],"for":["10.12","22.24","55.5","56.5","67.8","98.11","99.15","110.2","111.4","113.6","114.6","127.29","128.0","129.5","130.10","131.1","131.3","131.4","131.5","131.6","132.2","137.0","167.4","173.58","174.4","174.52","174.64","195.9","204.3","205.8","206.1","206.8","216.3","221.3","222.6","245.3","279.8","286.55"],"val":["10.12","104.0","106.9","156.13","285.7"],"of":["10.12","106.11","114.29","123.1","148.2","195.9","219.6","236.6","286.31"],"location":["10.13","138.26","177.13","195.4","286.64"],"search":["10.13"],"slice":["10.13","55.1","174.25","241.3","241.6"],"使用了匿名函数":["10.14"],"避免了创建新的全局对象":["10.14"],"use":["10.14","95.45","95.46","97.50","154.16","166.8","169.3","173.1","206.1"],"strict":["10.14","173.1"],"getiframe":["10.14"],"el":["10.14","169.4","216.4","218.4","232.2","286.24","286.59","286.66"],"标签":["11.1","72.5","106.5","115.0","175.10"],"标签设置了多种状态下的样式":["11.2"],"你还需要滚动页面才能找到元素":["11.3"],"元素是如何通过":["11.4"],"更改的":["11.4"],"你就可以使用这个功能":["11.4"],"来查看页面中添加了多少的事件":["11.5"],"这时候你就可以使用这个功能":["11.6"],"图片":["11.6","22.8","22.9","22.22","23.8","23.9","23.20","23.51","23.52","23.58","47.2","47.10","48.19","50.10","50.14","57.3","65.21","106.31","106.45","106.49","114.2","114.13","121.8","139.1","139.2","154.16","193.10","194.2","197.7","201.4","201.6"],"我们可以通过":["11.6","104.0","152.11"],"各种逻辑":["11.7"],"如果你只是想移动你当前选中的元素":["12.0"],"当你想看看页面的某一部分在":["13.0"],"直接":["14.1"],"来隐藏元素":["15.0"],"nextnode":["16.0"],"ctrl":["17.0"],"f":["17.0","127.41","173.4","195.4","205.12","241.9","284.3","284.4"],"快捷方式":["17.0"],"你可以使用对应的查询方式来查找信息":["17.0"],"中计算出来的一个数组":["18.0"],"然后你想对这些数据做一些额外的操作比如我们刚刚说的":["18.0"],"copy":["18.0","113.7","115.0"],"在不影响它原来值的情况下":["18.0"],"知道什么是事件代理嘛":["19.1"],"遇到注册的冒泡事件会触发":["19.2"],"事件触发一般来说会按照上面的顺序进行":["19.2"],"但是也有特例":["19.2"],"如果给一个":["19.2"],"和":["19.3","27.1","41.2","44.9","87.20","96.1","97.13","97.40","102.0","102.1","104.0","106.6","109.6","113.7","136.3","136.5","152.8","154.7","168.24","173.37","173.51","173.81","175.21","184.13","197.4","209.12","249.2","251.1"],"作用一样":["19.3"],"once":["19.3"],"值为":["19.3"],"表示该回调只会调用一次":["19.3"],"li":["19.4","106.41","172.0"],"其实主要是用来防止":["19.5"],"csrf":["19.5","175.21","179.52"],"攻击的":["19.5"],"简单点说":["19.5"],"攻击是利用用户的登录态发起恶意请求":["19.5"],"data":["19.6","89.12","97.13","98.13","103.17","108.1","127.6","127.18","133.5","150.2","159.13","167.4","174.29","178.7","179.55","195.9"],"使用简单且兼容性不错":["19.6"],"但是只限于":["19.6"],"来实现":["19.7","104.0"],"浏览器会自动进行":["19.7"],"通信":["19.7"],"head":["19.8","150.10","175.4","279.1","279.10"],"post":["19.8","27.1","87.20","110.2","175.5","204.2"],"content":["19.8","23.93","25.1","121.5","140.5","168.3","175.9","179.1","210.0","231.7","241.1","241.10","242.1","286.47"],"res":["19.9","25.3","53.12","103.15","107.3","109.1","110.1","132.4","156.23","166.3","167.1","167.4","173.61","173.99"],"next":["19.9","25.3","89.6","110.1","166.5","166.6","166.7","179.29","214.3","219.3"],"access":["19.9","109.4","114.11","126.4","126.5","159.2","159.5","219.6"],"control":["19.9","23.91","121.9","126.4","159.2","159.5","179.44"],"allow":["19.9","65.30","126.4","159.2","159.5"],"origin":["19.9","117.1","126.4","159.2","159.5","170.6"],"test":["19.10","19.11","64.7","74.9","81.3","83.1","84.3","84.4","98.11","99.9","137.2","154.16","241.7","241.9","286.28"],"com":["19.11","21.1","67.8","68.1","94.9","99.9","138.26","266.0","269.0","271.1","281.4"],"接收消息端":["19.11"],"分别有什么优缺点":["19.12"],"4k":["19.13"],"5m":["19.13"],"无限":["19.13"],"与服务端通信":["19.13"],"每次都会携带在":["19.13"],"中":["19.13","21.2","32.2","48.17","48.27","52.7","64.12","69.3","71.16","80.3","95.5","95.8","104.0","106.28","156.6","166.1","169.4","175.9","218.11","256.1"],"对于请求性能影响":["19.13"],"不参与":["19.13"],"navigator":["19.14","195.4"],"serviceworker":["19.14"],"register":["19.14"],"sw":["19.14"],"then":["19.14","98.7","104.0","110.1","165.2","167.1","167.4","173.52","173.61","214.2","217.7","256.2","283.10"],"registration":["19.14","68.8"],"多个执行上下文将被依次压入一个栈结构":["20.2"],"这个栈结构称作调用栈":["20.2"],"执行上下文中包含三部分":["20.2"],"变量环境":["20.2"],"执行结果":["20.3"],"undefined":["20.3","95.23","99.10","127.38","154.4","154.5","168.19","173.16","173.37","173.69","179.25","214.1","223.2","236.1","236.7","243.2","250.1"],"变量提升是指js会将var变量声明和function函数声明提升至代码开头的行为":["20.3"],"js中存在三种执行上下文":["20.4"],"全局执行上下文":["20.4","21.15","179.13"],"因此被称作函数调用栈":["20.5"],"简称调用栈":["20.5"],"不同类型的作用域访问范围不同":["20.6"],"es6以前":["20.6"],"let":["20.7","22.24","53.12","55.4","56.5","58.3","89.5","95.22","97.22","98.7","99.13","103.7","125.0","125.3","132.3","132.4","140.2","153.5","153.6","153.7","168.19","173.3","173.41","174.4","174.12","174.24","174.52","175.5","175.6","179.55","179.57","182.1","184.7","184.8","184.21","185.5","195.9","206.2","206.8","208.3","221.1","231.3","236.7","241.3","243.1","252.3","252.5","283.8","286.33","286.39","286.42","286.48","286.63","295.2","296.1"],"i":["20.7","22.24","55.3","55.4","55.5","56.5","69.2","74.5","74.8","75.5","76.1","83.3","83.5","95.20","97.3","97.6","97.9","97.12","97.15","106.41","111.4","122.5","131.1","131.2","131.3","131.4","131.5","131.6","133.3","144.1","149.2","153.11","173.58","173.99","174.12","174.21","174.44","174.50","174.52","174.64","179.50","195.4","214.3","215.2","231.3","241.1","241.9","241.10","285.13","291.6"],"单独一个块":["20.7"],"es6中添加了let和const关键词来支持块状作用域":["20.7"],"块状作用域中的变量只能在块内访问":["20.7"],"从词法环境栈顶开始":["20.8"],"从栈顶到栈底":["20.8"],"而outer的生成则是在编译阶段随着上下文的创建而创建":["20.9"],"与词法作用域相对的还有一个动态作用域":["20.9"],"两者在访问顺序上其实都是先内部后外部":["20.9"],"区别在于词法作用域是在编译阶段确定的":["20.9"],"动态作用域是在执行阶段确定的":["20.9"],"我们举个例子":["20.9"],"这些变量的集合就称作闭包":["20.10"],"如果外部函数是foo":["20.10"],"就称作foo函数的闭包":["20.10"],"println":["20.12"],"static":["20.12","138.23","154.4","154.5","154.17","178.2","178.7"],"main":["20.12","68.11","106.51","148.3","148.5","154.5","154.17","154.20"],"string":["20.12","21.15","64.22","64.23","88.2","103.8","103.13","104.0","110.2","127.13","173.81","176.5","181.0","182.1","182.2","184.7","184.10","184.11","184.20","214.1","217.7","222.4","231.6","241.3","242.1"],"args":["20.12","100.3","108.3","131.7","154.12","191.1","220.2","226.1","252.6","283.6","283.11","286.70","288.3"],"new":["20.12","62.6","95.45","95.46","96.2","97.61","103.8","103.12","103.17","110.2","115.0","127.16","127.18","131.8","131.9","131.10","133.1","133.4","141.2","156.23","173.4","173.85","175.5","177.8","179.55","181.0","191.2","204.1","206.8","219.3","248.1","283.4","283.5","283.12","285.11","285.12","286.3","286.69","294.1","295.4"],"因为在对象内部的方法中使用对象内部的属性是一个非常普遍的需求":["20.12"],"但是js的作用域机制并不支持这一点":["20.12"],"基于这个需求":["20.12"],"js又搞出来另外一套this机制":["20.12"],"this和作用域基本上没关系":["20.12"],"属于两套独立的系统":["20.12"],"有了this之后":["20.12"],"baidu":["21.1","23.87"],"其核心功能主要是让开发者编写的javascript代码编译成cpu易于理解的二进制指令":["21.2"],"unit的编码方式传给扫描器":["21.3"],"scanner":["21.3"],"因为utf":["21.3"],"16不能在单个代码单元中编码每个unicodes字符":["21.3"],"scanner实际上操作的是unicodes字符而不是utf":["21.3"],"16代码单元":["21.3"],"scanner会进行词法分析":["21.3"],"词法分析会将代码转换成tokens":["21.3"],"这与堆栈机器相反":["21.4"],"以生成比以前使用":["21.5"],"crankshaft":["21.5"],"是源代码语法结构的一种抽象表示":["21.6"],"它以树状的形式表现编程语言的语法结构":["21.6"],"树上的每个节点都表示源代码中的一种结构":["21.6"],"之所以说语法是":["21.6"],"是一个不可分割的最小单元":["21.7"],"语法分析":["21.7"],"语法分析会将词法分析出来的":["21.7"],"转化成有语法含义的抽象语法树结构":["21.7"],"同时":["21.7"],"用于跟踪其关联代码的执行进度所需的任何实现特定状态":["21.8"],"code":["21.8","64.2","64.16","66.3","173.95","177.11","195.2","197.4","206.1","214.2","228.1"],"evaluation":["21.8"],"用于判断代码是处于执行":["21.8"],"暂停还是恢复":["21.8"],"如果这个执行上下文正在评估一个函数对象的代码":["21.8"],"那么这个组件的值就是那个函数对象":["21.8"],"如果上下文正在评估script标签或者module的代码":["21.8"],"他在编译阶段便创建一个":["21.9"],"global对象":["21.9"],"小伙子你很会撒谎嘛":["21.10"],"它用于存储代码执行期间创建的所有执行上下文":["21.11"],"当javascript引擎进行编译时":["21.11"],"第二个阶段是执行阶段":["21.12"],"在这个阶段":["21.13","41.2"],"variableenvironment":["21.14"],"组件":["21.14","115.0","156.2","217.8"],"在这个时候它们的值都相同":["21.14"],"执行上下文的":["21.14"],"词法环境分为两种类型":["21.15"],"全局环境":["21.15"],"他没有外部环境的引用或者说为null":["21.15"],"在浏览器的环境下拥有一个全局对象window和关联的方法和属性":["21.15"],"math":["21.15","52.18","127.33","153.5","153.6","153.7","156.1","174.24","285.13"],"函数环境记录":["21.16"],"也是一个声明性环境记录":["21.16"],"包含了全局下var":["21.17"],"generator":["21.17","179.29"],"async声明的标识符":["21.17"],"还有其他内置对象":["21.17"],"如math":["21.17"],"date":["21.17","25.8","112.4","125.9","130.5","141.2","283.4","283.12"],"用全局对象":["21.17"],"如window":["21.17"],"作为绑定对象":["21.17"],"所以在全局下用var":["21.17"],"作用域链就是通过作用域一层一层的往上找":["21.18"],"直到查找到顶层":["21.18"],"全局作用域":["21.18","173.27"],"作用域是在javascript源代码编译成机器码和字节码之前":["21.19"],"运算器":["22.1"],"控制器":["22.1","22.3"],"输出设备":["22.1"],"控制输入设备":["22.3"],"控制存储器":["22.4"],"把数据送到运算器":["22.4"],"控制器控制运算器做数据的运算":["22.5"],"控制器控制存储器将结果返回给输出设备":["22.6"],"cpu中比较重要的两个部件是运算器和控制器":["22.7"],"控制器中最重要的部件是cu":["22.9"],"举例":["22.10","93.2","93.4"],"将指令地址放入mdr":["22.11"],"存储器里专门存数据的地方":["22.11"],"第四步mdr里的数据返回到ir里面":["22.11"],"ir是存放指令的地方":["22.11"],"我们把刚才从存储体里拿的指令放在这里":["22.11"],"然后":["22.11","46.5","48.10","51.0","111.2","133.4"],"加载什么呢":["22.12"],"加载地址000000010000上的数据到第二个0000":["22.12"],"寄存器的位置":["22.12"],"接下来":["22.12","23.52"],"我们看看如果是汇编语言怎么表示":["22.12"],"编译的速度可能会比较慢":["22.13"],"一种是解释性的":["22.13"],"接下来4":["22.14"],"3这个小节会解释为什么0":["22.14"],"有些同学觉得可以用parseint":["22.15"],"例如":["22.16","25.5","97.53","104.0","127.51","173.23","179.28","184.6"],"将十进制数":["22.16"],"转换成二进制数":["22.16"],"乘2取整":["22.17"],"顺序排列":["22.17"],"法":["22.17","196.12"],"整数位为1":["22.19"],"去掉整数位得0":["22.19"],"首先":["22.20","37.1","65.13","96.3","173.20","184.17"],"符号位用0表示":["22.21"],"如果是负数符号为用1表示":["22.21"],"同理":["22.21"],"上面是十进制的科学计数法":["22.22"],"从中我们需要了解几个概念":["22.22"],"j代表阶码":["22.23"],"这里需要注意的是":["22.23","23.28"],"o设备的演变":["22.25"],"output":["22.26","154.4","154.5","154.17","154.20","192.1","192.2","192.3","286.55"],"简称i":["22.26"],"o总线来跟cpu打交道":["22.27"],"一旦某个i":["22.27"],"o设备完成任务":["22.27"],"就会以中断请求的方式":["22.27"],"cpu不需要帮它安排任务":["22.28"],"具有独立功能的计算机系统":["23.1"],"通过通信设备与线路连接起来":["23.1"],"由功能完善的软件实现资源共享和信息传递的系统":["23.1"],"这些内容主要是为了学习后面具体的协议":["23.2"],"速率":["23.3"],"速率就是数据传输":["23.3"],"带宽":["23.4"],"在计算机网络中":["23.4","23.12"],"吞吐量":["23.5"],"假如第一秒有0辆":["23.6"],"第二秒有10辆":["23.6"],"但是最多不能超过100辆":["23.6"],"时延是指数据":["23.7"],"报文":["23.7"],"要经过很多的路由器":["23.10"],"但分组在进入路由器后要先在输入队列中排队等待处理":["23.10"],"路由器或主机在收到数据包时":["23.11"],"要花费一定时间进行处理":["23.11"],"rtt":["23.12","48.6"],"是指传播时延乘以带宽":["23.13"],"每一层的具体内容会在后面介绍":["23.14"],"这里只需要有一个初步的印象":["23.14"],"如下图所示":["23.14"],"对于物理层":["23.16"],"有人会说":["23.16"],"10v":["23.17"],"15v表示二进制的0":["23.17"],"首先计算机网卡传输出来的数据是电信号":["23.18"],"光纤传输的是光脉冲信号":["23.18"],"物理层设备中继器":["23.19"],"中继器可以对信号进行再生和还原":["23.20"],"网络层是个大boss":["23.22"],"负责给数据链路层这个小秘书下达任务":["23.22"],"让小秘把5份文件给b公司":["23.22"],"数据链路层的主要功能":["23.23"],"数据链路层并不是无脑转发boss的信息":["23.24"],"比如文件里有裁掉这个秘书的信息":["23.25"],"秘书都要原原本本的传输":["23.25"],"快递包上写着5个文件":["23.26"],"秘书一看只有3个文件":["23.26"],"会造成传输出错":["23.28"],"其规定了访问控制方法":["23.29"],"传输控制协议":["23.29"],"每个网卡都具有唯一的mac":["23.30"],"地址":["23.30","175.12"],"当在同一个局域网中":["23.30"],"主机a需要给主机b发送消息时":["23.30"],"以太网的特点":["23.31"],"以太网的拓扑结构":["23.32"],"以太网的总线型拓扑比较普遍":["23.34"],"随着总线型以太网上的站点数目增多":["23.34"],"计算机传出的数据":["23.35"],"经过网卡":["23.35"],"无线局域网wlan是利用无线电波":["23.36"],"激光和红外线等无线通信技术来构建的局域网":["23.36"],"cd协议":["23.37"],"因为这个协议是以太网所使用的":["23.37"],"链路层的设备":["23.38"],"并不会向所有接口转发此帧":["23.39"],"而是先检查此帧的目的mac地址":["23.39"],"然后再确定将该帧转发到哪一个口":["23.39"],"如果站点发出一个广播信号":["23.40"],"所有能接收到这个信号的设备范围称为广播域":["23.40"],"也就是说":["23.40","129.4","152.12"],"广播域可以跨网段":["23.40"],"概念走一走":["23.41"],"网络层概念":["23.42"],"网络层主要任务是将分组":["23.42"],"学习网络层需要了解的概念":["23.43"],"时":["23.44","106.22","181.0","205.11"],"首先将数据划分成若干个等长的分组":["23.44"],"然后将这些分组一个接一个地发往里与h1相联的路由a":["23.44"],"当a接到分组后":["23.44"],"数据报是通过网络传输的数据的基本单元":["23.45"],"包含一个报头":["23.45"],"8比特":["23.46"],"比特是版本号":["23.46"],"版本有ipv4":["23.46"],"标识是在同一数据的分片时相同":["23.48"],"标志占3位":["23.48"],"但只有两位有意义":["23.48"],"第一个位叫mf":["23.48"],"e类":["23.50"],"其中127":["23.50"],"168网段":["23.51"],"都是私有ip地址":["23.51"],"它是怎么跟外网交互数据的呢":["23.51"],"这里就引出来一个知识点叫网络地址转换nat":["23.51"],"即便一个小型企业内部":["23.52"],"为了部门之间的职能的需要":["23.52"],"配置那些电脑可以互相访问":["23.52"],"哪些不能互相访问":["23.52"],"就需要通过划分子网的方法来实现":["23.52"],"我们看看子网划分":["23.52"],"如上图右侧":["23.52"],"我们将145":["23.52"],"arp协议":["23.53"],"因为在网卡上有":["23.54"],"问题在于":["23.54"],"别人的mac地址是多少":["23.54"],"arp协议就是来帮你找mac地址的":["23.54"],"接着我们说一下arp协议的过程":["23.54"],"比较官方的介绍":["23.54"],"看不懂可以略过":["23.54"],"动态主机配置协议":["23.55"],"是一个局域网的网络协议":["23.55"],"icmp协议是一个网络层协议":["23.57"],"为什么我们需要icmp协议呢":["23.57"],"我们举一个例子":["23.58"],"物理层是傻瓜层":["23.59"],"传输比特流":["23.59"],"我们把物理层的比特流还原成数据链路层的数据帧":["23.59"],"然后把数据链路层的数据报脱去":["23.59"],"成为网络层数据包":["23.59"],"交给路由器":["23.59"],"比如你的qq跟你异地女友的qq视频聊天":["23.60"],"这就是不同计算机之间":["23.60"],"端口号可以用来标识同一个主机上通信的不同应用程序":["23.61"],"就是哪个应用程序在使用这个端口":["23.61"],"udp协议":["23.62"],"udp是面向报文的":["23.63"],"适合一次性传输少量数据的网络应用":["23.63"],"什么意思呢":["23.63"],"如下图":["23.63"],"udp这层":["23.63"],"把应用层的全部内容作为自己的数据报部分":["23.63"],"源端口号可以没有":["23.64"],"因为不希望收到对方的回应":["23.64"],"可以写全0":["23.64"],"四次分手":["23.65"],"针对的都是连接":["23.65"],"每一条tcp连接只能有两个端点":["23.65"],"每一条tcp连接是点对点的":["23.65"],"也就是说tcp是不同计算机之间的进程的通信":["23.65"],"tcp提供可靠交付的服务":["23.65"],"本字段表示本报文段所发送数据的第一个字节的序号":["23.66"],"确认号是指期望收到对方下一个报文段的第一个数据字节的序号":["23.66"],"弱确认好位n":["23.66"],"psh":["23.67"],"置1时请求的数据段在接收方得到后就可直接送到应用程序":["23.67"],"而不必等到缓冲区满时才传送":["23.67"],"根据上面我们了解到的控制位信息":["23.68"],"建立连接需要把syn置为1":["23.68"],"seq指的是序号":["23.68"],"是随机产生的":["23.68"],"然后服务器收到该数据包后":["23.68"],"没有新的数据要传送":["23.69"],"并要求释放链接":["23.69"],"客户端等着服务器返回确认":["23.69"],"服务器收到客户端的请求断开链接的报文之后":["23.69"],"返回确认信息":["23.69"],"ack":["23.69","175.10"],"v":["23.69","49.2","65.10","65.11","68.6","98.7","113.5","119.11","127.41","145.3","178.8","195.9","245.1","285.10"],"为什么连接的时候是三次握手":["23.70"],"关闭的时候却是四次握手":["23.70"],"关闭连接时":["23.70"],"双方便开始通信":["23.71"],"通信结束后释放连接":["23.71"],"此时":["23.71","25.2","154.2","179.38"],"如果那个失效的连接请求抵达了服务端":["23.71"],"这样更加会浪费服务器资源":["23.72"],"攻击者就对服务器发送大量的这种tcp连接":["23.72"],"由于每一个连接都无法完成三次握手":["23.72"],"所以就在服务器上":["23.72"],"这些tcp连接会因为挂起状态而消耗cpu和内存":["23.72"],"最后服务器可能死机":["23.72"],"通过伪首部的传输层协议号来检查传输层协议是否选对了":["23.73"],"需要注意的是":["23.73","41.1"],"伪首部实际上是不存在的":["23.73"],"只是用来验证tcp报文是否出错":["23.73"],"建议网上找一个动画教程来理解":["23.75"],"文字效果不是很好":["23.75"],"tcp":["23.75","23.77","26.1","50.14","51.5","114.29","114.30","175.9"],"tcp的拥塞控制":["23.76"],"但是出发点不同":["23.77"],"流量控制是为了让接收方能来得及接收":["23.77"],"而拥塞控制是为了降低整个网络的拥塞程度":["23.77"],"加倍":["23.78"],"因此之后发送方能够发送的报文段数量为":["23.78"],"如果收到三个重复确认":["23.79"],"那么可以知道下一个报文段丢失":["23.79"],"此时执行快重传":["23.79"],"立即重传下一个报文段":["23.79"],"例如收到三个":["23.79"],"应用层对应用程序的通信提供服务":["23.81"],"区分是发送报文还是接收报文":["23.81"],"服务器模型":["23.82"],"也就是c":["23.82"],"而tcp连接有两种工作方式":["23.83"],"短连接方式":["23.83"],"收到响应后":["23.84"],"再断开":["23.84"],"如此循环":["23.84"],"这种方式主要有两个缺点":["23.84"],"直到没有数据传输或异常断开":["23.85"],"在空闲期间":["23.85"],"什么是dns说白了就是将域名转化为ip":["23.86"],"比如www":["23.86"],"www":["23.87","26.1","99.9","141.4","195.5","279.7","281.3","281.5"],"手机等":["23.88"],"不论用何种技术使其彼此通信":["23.88"],"都叫互联网":["23.88"],"互联网有广域网":["23.88"],"城域网及局域网之分":["23.88"],"国际标准的互联网写法是internet":["23.88"],"字母i一定要小写":["23.88"],"因特网internet":["23.88"],"这些资源通过超文本传输协议":["23.89"],"版本":["23.90","87.1","114.32","246.0"],"version":["23.90","76.3","86.1","100.1","142.13"],"报文所使用的http版本":["23.90"],"其格式":["23.90"],"主要版本号":["23.90"],"次要版本号":["23.90"],"状态码":["23.90"],"status":["23.90","113.6","119.6"],"transfer":["23.91"],"encoding":["23.91","175.2"],"告知接收端为了保证报文的可靠传输":["23.91"],"对报文采用了什么编码方式":["23.91"],"用于随报文传送缓存指示":["23.91"],"age":["23.92","25.8","125.1","173.82","173.98","184.20"],"从最初创建开始":["23.92"],"响应持续时间":["23.92"],"上去":["23.93"],"base":["23.93","97.32","98.12","121.0","166.8","228.2"],"http报文可以承载很多类型的数字数据":["23.94"],"同源策略":["24.1"],"是浏览器对":["24.1"],"携带数据较小":["24.3"],"后来也用过iframe":["24.3"],"但只有主域相同才行":["24.3"],"src":["24.4","24.5","73.0","87.43","95.40","113.7","115.0","127.28","147.5","150.2","150.12","154.17","154.20","169.3","208.4","289.1"],"属性中的链":["24.4"],"接却可以访问跨域的":["24.4"],"设置":["24.5","113.5"],"的":["24.5","61.10","62.11","71.7","86.8","87.25","96.1","96.6","98.12","106.25","107.2","114.15","134.3","140.0","162.0","193.7","204.6","205.5","209.9","209.13","218.2","232.3","258.3"],"属性":["24.5","61.0","61.14","173.33","173.39","175.10","195.9"],"并设置请求地址":["24.5"],"localhost":["24.5","68.8","85.5","126.6","136.2","136.4","177.13"],"答":["24.6"],"如果你有了解过":["25.1"],"inline":["25.2","106.21","106.43","179.2","219.10","229.0"],"juejin":["25.3"],"cn":["25.3","69.13","126.8","147.5","281.4"],"1714893870865303":["25.3"],"contentdispositioninline":["25.3"],"async":["25.3","95.22","100.2","103.13","109.1","115.0","148.2","158.3","164.3","166.5","166.6","166.9","175.10","216.3","217.7","286.26","286.45"],"req":["25.3","159.9","159.13","178.7"],"你":["25.4"],"哥":["25.4"],"真修复了":["25.4"],"要不你让客户清一下缓存":["25.4"],"public":["25.5","109.6","110.2"],"表明响应可以被任何对象":["25.5"],"包括":["25.5"],"发送请求的客户端":["25.5"],"代理服务器":["25.5","177.13"],"等等":["25.5","204.5"],"即使是通常不可缓存的内容":["25.5"],"该响应没有max":["25.5"],"age指令或expires消息头":["25.5"],"该响应对应的请求方法是":["25.5"],"凡是通过":["25.6"],"cdn":["25.6","279.9"],"引入的第三方库":["25.6"],"均建议携带版本信息":["25.6"],"这样也可以强缓存":["25.6"],"为啥我存进":["25.7"],"cookie":["25.7","48.6","126.2","166.0","166.1","175.21"],"的值取不到":["25.7"],"存活周期":["25.8"],"max":["25.8","52.18","92.0","123.0","127.23","127.33","171.0","216.3","291.3"],"number":["25.8","61.18","64.3","64.23","88.2","99.6","104.0","156.1","156.18","156.24","173.26","173.81","179.25","182.2","184.10","206.15","208.3","214.1","217.0","256.4","286.33","291.4"],"失效之前需要经过的秒数":["25.8"],"或":["25.8","57.6","74.1","78.0","97.22","97.54","98.4","106.21","121.0","152.18","171.0","173.37","179.39","184.16","234.2"],"直接失效":["25.8"],"此属性的优先级高于":["25.8"],"mvc":["25.9"],"项目就是通过给":["25.9"],"一个":["25.9","166.2"],"jseesionid":["25.9"],"的值作为识别":["25.9"],"判断你是否出于当前会话":["25.9"],"是一个客户端和服务器端请求和应答的标准":["26.1"],"用于从":["26.1"],"加密传输协议":["26.2"],"可防止数据在传输过程中被窃取":["26.2"],"改变":["26.2","181.0"],"确保数据的完整性":["26.2"],"当然这种安全性并非绝对的":["26.2"],"对于更深入的":["26.2"],"web":["26.2","87.15","122.0","173.31","195.7","203.1","214.1"],"安全问题":["26.2"],"协议的工作原理":["26.3"],"则要求":["26.4"],"服务器建立":["26.4"],"ssl":["26.4"],"信息是明文传输":["26.5"],"https则是具有安全性的ssl加密传输协议":["26.5"],"这其中值得一说的就是请求方法了":["27.1"],"请求方法分为很多种":["27.1"],"最常用的也就是":["27.1"],"了":["27.1","41.0","104.0"],"虽然请求方法有很多":["27.1"],"但是更多的是传达一个语义":["27.1"],"而不是说":["27.1"],"安全一点点":["27.2"],"因为get":["27.2"],"请求都包含在":["27.2"],"接下来我们就来学习一部分的常用首部":["27.3"],"浏览器想要优先使用的连接类型":["27.5"],"keep":["27.5","179.54","180.0","180.2","228.2"],"expect":["27.7"],"期待服务端的指定行为":["27.7"],"from":["27.7","81.2","89.13","96.4","97.5","97.8","100.8","112.4","133.3","141.8","154.18","156.5","156.9"],"请求方邮箱地址":["27.7"],"host":["27.7","68.11","114.11","138.29","195.4"],"服务器的域名":["27.7"],"资源在代理缓存中存在的时间":["27.9"],"内容使用的语言":["27.11"],"request":["27.11","72.0","72.2","72.5","126.4","138.21","158.3","164.3","166.6","166.8","167.4","173.57"],"协议进行了加密":["27.12"],"协议位于传输层之上":["27.12"],"这种加密方式固然很好":["27.13"],"私钥只有分发公钥的一方才知道":["27.14"],"这种加密方式就可以完美解决对称加密存在的问题":["27.14"],"通过服务端证书的公钥去加密这个随机值并发送给服务端":["27.15"],"如果服务端需要验证客户端证书的话会附带证书":["27.15"],"服务端收到加密过的随机值并使用私钥解密获得第三个随机值":["27.15"],"这时候两端都拥有了三个随机值":["27.15"],"可以通过这三个随机值按照之前约定的加密方式生成密钥":["27.15"],"是一种脱胎换骨的改变":["28.1"],"协议是应用层协议":["28.1"],"都是建立在传输层之上的":["28.1"],"我们也都知道传输层上面不只有":["28.1"],"连接迁移":["28.2"],"常见的有":["29.2","166.0"],"客户继续发送请求":["29.2"],"请求所希望的响应头或数据体将随此响应返回":["29.3"],"已创建":["29.3"],"请求成功并且服务器创建了新的资源":["29.3"],"服务器可执行多种操作":["29.4"],"永久移动":["29.4"],"请求的网页已永久移动到新位置":["29.4"],"请求要求身份验证":["29.5"],"禁止":["29.5"],"服务器拒绝请求":["29.5"],"尚未实施":["29.6"],"服务器服务器不具备完成请求的功能":["29.6"],"并为每个已发送的数据包启动一个超时定时器":["30.1"],"如在定时器超时之前收到了对方发来的应答信息":["30.1"],"围棋复盘":["31.1"],"jpeg":["31.1","286.51"],"用人话来说":["31.1"],"就是在复盘的过程中":["31.1"],"为人谋而不忠乎":["31.2"],"与朋友交而不信乎":["31.2"],"才能减少在现实中的失败":["31.3"],"如前文中描述的故障复盘":["31.3"],"我们更要时时复盘那些成功案例":["31.4"],"从中找出能够让我们走向成功的主要原因":["31.4"],"工程师思维":["31.5"],"09":["31.5","141.2","159.1","159.4","159.12"],"png":["31.5","39.3","39.7","64.12","64.19","67.16","101.3","102.5","123.1","152.22","152.24","154.20","155.8","156.0","180.1","263.2","286.51"],"在一个具体的领域中":["31.5"],"这些知识和智慧就是这个领域当中的经验":["31.5"],"而知识和智慧可以传承":["31.5"],"无论对于个人还是组织":["31.5"],"都是一笔无形的财富":["31.5"],"做对了还是做错了":["31.7"],"如果重来一遍":["31.7"],"有无更好的做法":["31.7"],"好处是自己是当事人":["31.7"],"体验了切肤之痛之后":["31.7"],"复盘的目的无非有二":["31.8"],"学习成功者如何成功":["31.8"],"我们要尽可能地还原出每个人在事件中的所思所想和行动":["31.9"],"当然":["31.9"],"聪明的你肯定想到了":["31.9"],"毕竟有些事情只能一个人在心里慢慢复盘":["31.10"],"但是多人复盘却能够避免盲区":["31.10"],"浪费了大量的时间":["31.11"],"此时人们对事件的记忆还比较清晰":["31.12"],"复盘效果最好":["31.12"],"找到驱动整个事件的":["31.14"],"底层逻辑":["31.14"],"如果抱着追责的心态去复盘":["31.15"],"那复盘的过程就成了走过场":["31.15"],"复盘场也就变成了修罗场":["31.15"],"那怕你想出来的内容再华丽":["31.16"],"说出来的再浮夸":["31.16"],"也是没有意义的":["31.16"],"因为你只想不做":["31.16"],"都只是一个事件":["31.17"],"如果是事件":["31.17"],"那么都可以拿来复盘":["31.17"],"尤其":["31.17"],"归零":["31.18"],"这其实就是一种复盘":["31.18"],"第二":["31.18"],"根据折腾时候给出的思路":["32.1"],"尝试找到比较相似的解决方案":["32.1"],"再次进行折腾":["32.1"],"如果还搞不定":["32.1"],"那就询问下群里大佬":["32.1"],"向群友求助":["32.1"],"小伙伴们":["32.1"],"有使用过框架":["32.1"],"怎么了":["32.2"],"下次你可以一次性把问题发出来":["32.2"],"我看到就会回你的":["32.2"],"是这样的":["32.2"],"在框架":["32.2"],"的问题":["32.2","39.1","203.2"],"不知道怎么搞":["32.2"],"弄了好久没弄出来":["32.2"],"还是没用过":["32.2"],"又看到一堆现成解决方案":["32.2"],"向帮助你的人":["32.3"],"付费":["32.3"],"是一个高尚的行为":["32.3"],"即便回答你的人不是为了钱":["32.3"],"中间件":["33.1"],"编程语言":["33.1"],"网络协议等技术工具依据之前设计方":["33.1"],"案组织起来形成一套软件系统方案":["33.1"],"在我看来软件系统就像是一种技术组织":["33.1"],"即技":["33.1"],"术组件":["33.1"],"技术手段依据某种逻辑被组织起来了":["33.1"],"这些技术工具被确定了职责":["33.1"],"有了明":["33.1"],"确分工":["33.1"],"并以实现业务功能为目标集合在了一起":["33.1"],"我们打造运营页面搭建系统来降低技术实现的复杂性":["33.2"],"因为我们要在不同端实现相同的需求的增长":["33.2"],"帮助研发团队开发出用户愿意使用的产品和功能":["33.3"],"业界和团队":["33.5"],"根据自身对业务的理解":["34.1"],"一个产品的好坏并不是企业说的算":["34.2"],"指的是通过构思":["35.0"],"发音和语境":["35.1"],"客户希望的是什么样的结果":["35.2"],"系统增加什么价值":["35.2"],"真正的需求是什么":["35.3"],"应该尽早制作出最小可行性产品":["35.5"],"与项目关联的风险":["36.1"],"交付关键框图":["36.2"],"以图形的方式说明将要构建的项目":["36.2"],"完成项目获得的收入":["36.3"],"收入":["36.3","43.7"],"新":["36.4"],"不要为了获得项目而屈服":["36.5"],"严密控制关键的因素":["36.5"],"巧的是":["37.0"],"这种惯性产生的原理和本章将要讨论的工程思维":["37.0"],"如出一辙":["37.0"],"那么":["37.0","44.3"],"什么是飞轮思维":["37.0"],"或者飞轮效应":["37.0"],"一句话概括下来":["37.0"],"就是":["37.0","64.8","173.37","206.13"],"万事开头难":["37.0"],"我们都知道":["37.0","61.3"],"汽车在发动的时候需要消耗巨大的能力":["37.0"],"而一旦引擎启动之后":["37.0"],"亚马逊飞轮":["37.1"],"更廉价的商品":["37.1"],"更多的用户流量":["37.1"],"更多的卖家":["37.1"],"更大的销售渠道":["37.1"],"更多的盈利":["37.1"],"回到第一步":["37.1"],"接着":["37.1"],"再让我们检查一下飞轮中每一步之间的逻辑":["37.1"],"更廉价的商品必然会吸引大量的用户进入":["37.1"],"为了解决亚马逊的":["37.2"],"商业模式":["37.2"],"问题":["37.2","177.9"],"亚马逊的领导者需要找到四到六个解决问题的关键商业构件":["37.2"],"并且要确保这些构件在逻辑上形成一条互为因果链条":["37.2"],"这才组成":["37.2"],"亚马逊":["37.2"],"的商业飞轮":["37.2"],"如果是个人成长的问题":["37.2"],"那么我们就要找到个人成长过程中的关键构件":["37.2"],"然后组成飞轮":["37.2"],"这个例子我会在后文中详细展开":["37.2"],"三个注意点":["37.2"],"组成飞轮的构件非常关键":["37.2"],"有三个要点需要注意":["37.2"],"其一":["37.2","44.5"],"在个人成长的例子中":["37.3"],"我":["37.3"],"能肩负的需求难度必然是可以无限增加的":["37.3"],"当然现实里肯定不行":["37.3"],"如果不这样做":["37.3"],"飞轮的威力就会受到限制":["37.3"],"推动飞轮时不要忽视环境的因素":["37.3"],"在描述飞轮思维的文章里":["37.3"],"我们经常能够看到":["37.3"],"长坡厚雪":["37.3"],"推雪球的说法":["37.3"],"实际上这个描述并不正确":["37.3"],"如果这个雪坡道是一个又高又远的上坡":["37.3"],"那么不管你怎么推动飞轮":["37.3"],"此外":["37.4","152.3","204.6","205.5"],"在推动飞轮时":["37.4"],"双方都需要交换极其关键的信息":["38.0"],"市场及新产品开发部门建立合作关系":["38.1"],"我的竞争对手有什么相关的产品":["38.2"],"是否需要与其他系统有交互或者集成":["38.3"],"需要系统的问题是否需要通知":["38.3"],"现在有什么新的契机":["38.4"],"人们认为的":["38.4"],"足够好":["38.4"],"的是什么":["38.4"],"杰出":["38.4"],"是什么":["38.4"],"你的产品如何帮助客户服务他们的客户":["38.5"],"客户的销售模式":["38.5"],"要记下战略思路":["38.6"],"轻则会带来惊吓":["39.1"],"重则可能会让我们的财产甚至生命安全遭到损失":["39.1"],"如此":["39.1"],"在面对不可预期的结果的时候":["39.1"],"我们在行动时就得格外谨慎":["39.1"],"尤其是当我们要做出非此即彼的关键选择时更是如此":["39.1"],"人生在紧要处的几次关键选择":["39.1"],"就应该如此":["39.1"],"而宏观来看":["39.1"],"整个人类的历史更是一部和风险对抗的斗争史":["39.1"],"我把这种结果不可预期的问题称为":["39.1"],"从已知出发走向未知":["39.1"],"处理这类问题时":["39.1"],"后来切库我们换了一个新的dba同学":["39.2"],"还是dba切库这个例子":["39.3"],"一刀切100个分片和切1个分片":["39.3"],"其实就是一个等价问题":["39.3"],"因为二者带来的结果从质上看是一样的":["39.3"],"如果试验通过":["39.4"],"那么继续增大试验规模":["39.4"],"如果试验失败":["39.4"],"则要有退出机制":["39.4"],"换言之":["39.4"],"我们要发布一个支付安全性检测的模块":["39.6"],"这个模块会拦截看上去有安全风险的用户支付请求":["39.6"],"在研发测试阶段":["39.6"],"也就是业界所说的蓝绿发布":["39.7"],"有没有价值":["39.8"],"二":["39.8"],"可不可持续":["39.8"],"一般可以用一个很小的金额做一次测试转账":["39.10"],"如果要学习摄影":["39.11"],"经过前期的调研后":["39.11"],"你会发现器材在前期并不是关键因素":["39.11"],"家长可以想办法压低灰度的成本":["39.12"],"实际操作时":["39.13"],"实施测试的一方会先给对方提一个不足挂齿的要求":["39.13"],"都可以使用灰度思维来处理":["39.14"],"在做一件事情时":["39.14"],"还需要考察文化适应性和系统设计":["40.0"],"我是今天的面试官":["40.1"],"今天我们面试时长大概40分钟":["40.1"],"来第一秒有什么想法":["40.3"],"有什么顾虑":["40.3"],"最近的公司职责和涉及的业务":["40.3"],"面试官可以深入追问跟这个项目相关的问题":["40.4"],"在无智能语法提示的编辑器上写":["40.5"],"如":["40.5","64.11","99.14","119.10","122.7","163.0","167.2","178.7","191.0","203.3","284.43"],"sublime":["40.5"],"我们采用敏捷开发":["40.6"],"每周或每两周一个sprite":["40.6"],"站会上通过tb看板对开发流程进行可视化管理":["40.6"],"周为每周周会":["40.6"],"周会分为这么几块内容":["40.6"],"为电商而定制":["41.0"],"硬编码的逻辑俯拾即是":["41.0"],"这应该是新人看到这个模块时的第一感受":["41.0"],"再这样下去这个支付模块就要变成":["41.0"],"巨婴":["41.0"],"忍无可忍之下":["41.0"],"架构师们决定把整个支付模块从电商系统里搬出来":["41.0"],"让他演变成一个独立的支付系统":["41.0"],"值得一提的是":["41.0","41.9"],"新建系统并不意味着老支付模块完全没有用了":["41.0"],"新系统的设计经验都来自于老支付模块":["41.0"],"于是":["41.0"],"到了第2年的时候":["41.0"],"这会给我们看似重复的旅行带来很多惊喜":["41.1"],"甚至惊吓":["41.1"],"和新的体验":["41.1"],"会促使我们重新审视这件事的内涵和外延":["41.1"],"启发我们寻找新的思路和方法":["41.1"],"而这个过程所要用到的时间":["41.1"],"虽然这里我只写了短短三句话":["41.1"],"但实际却因事情的复杂度的不同而变化":["41.1"],"可以是三小时":["41.1"],"三天":["41.1"],"三年":["41.1"],"甚至三十年":["41.1"],"哪怕只是短短的三小时":["41.1"],"如果你在三小时里反复尝试了三千次":["41.1"],"那就不是一蹴而就":["41.1"],"而是渐进式的":["41.1"],"check":["41.2","66.3","216.3","254.23"],"检查":["41.2","102.5"],"action":["41.2","73.0"],"处理":["41.2"],"plan":["41.2"],"也即事前计划阶段":["41.2"],"我们一般需要回答具体做什么":["41.2"],"怎么判断变更成功":["41.3"],"出现问题的应对策略是什么":["41.3"],"在什么时间实施变更":["41.3"],"d":["41.3","41.4","41.5","69.3","81.6","92.0","97.11","97.51","102.1","114.12","114.14","122.7","127.24","154.1","186.3","195.4","284.2","284.16","284.20","284.35","284.44","284.80"],"按照计划中的执行步骤执行变更":["41.3"],"然后在网上发布":["41.4"],"具体发布在哪里等等":["41.4"],"实际写这10篇文章并发布":["41.4"],"对于每篇独立的文字章":["41.4"],"我也会有每篇文章的pdca循环":["41.4"],"能够达到xxx":["41.5"],"投入资源":["41.5"],"系统设计":["41.5"],"估算工作量":["41.5"],"编码":["41.5"],"直接关系到后面dca几个阶段的正确":["41.6"],"我们常说":["41.6"],"做正确的事情":["41.6"],"让下属知道自己要干什么":["41.7"],"在检查阶段做好检查":["41.7"],"也就是我们常说的追结果":["41.7"],"让下属直到你对结果的要求":["41.7"],"观察对手情况变化":["41.8"],"观察自身情况变化":["41.8"],"获得观察数据":["41.8"],"观察过程的要求是足够快":["41.8"],"即便观察到的信息不完整也没关系":["41.8"],"只要足够快":["41.8"],"即便是不完整的信息也可以在下次观察时补充完整":["41.8"],"调整阶段":["41.8"],"根据观察的结果":["41.8"],"对自己已经掌握的知识进行调整":["41.8"],"产出后续的行动计划":["41.8"],"这一步非常关键":["41.8"],"需要我们借助观察结果调整和观察结果相冲突的历史知识":["41.8"],"knowledge":["41.8"],"对结果和知识匹配的情况进行加深":["41.8"],"这一步的要求同样也是要快":["41.8"],"因为在战场上":["41.8"],"如果你能先于你的敌人发现信息和知识的差异":["41.8"],"迭代思维":["41.9"],"这些思维工具并不是孤立出现的":["41.9"],"一个经验丰富的工程师往往能够联合好几种思维工具":["41.9"],"可以从实践两个迭代工具":["41.10"],"pdca循环和ooda循环开始":["41.10"],"前者适用于确定的环境和稳定的流程性事务":["41.10"],"工程师的日常中几乎充满着这样的情况":["41.10"],"你一定要学会pdca循环":["41.10"],"架构师的职责":["42.0"],"架构要平衡":["42.0"],"确保合适的项目治理和监管":["42.1"],"包括标准":["42.1"],"介绍新兴技术和核心技术":["42.2"],"collectively":["43.1"],"exhaustive的缩写":["43.1"],"第一条是完整性":["43.2"],"少年":["43.3"],"幼儿":["43.3"],"年龄维度":["43.3"],"这个范围决定了问题的边界":["43.5"],"在找切入点的时候":["43.6"],"一定要记得以终为始":["43.6"],"这个时候要反复思考":["43.6"],"以终为始":["43.7"],"从营销的角度来看":["43.7"],"你可能还要按职业":["43.7"],"确定我们当前思考的问题范围是全球":["43.9"],"我们的切入点可以是":["43.11"],"穷举问题的所有无重复无遗漏的集合":["43.12"],"会有很多描述性语言":["43.13"],"或者切入点":["43.13"],"沟通协作":["43.14"],"信息同步":["43.14"],"对上对下":["43.14"],"对产品":["43.14"],"对测试":["43.14"],"对开发":["43.14"],"最好的防错方式":["44.0"],"奖金没了不说":["44.1"],"绩效估计也够呛":["44.1"],"又比如":["44.1"],"你买了一套自组装的家具":["44.1"],"装到最后才发现自己把一个零件装反了":["44.1"],"这又导致最后一个零件死活都装不进去":["44.1"],"在捶胸顿足了五分钟之后":["44.1"],"你决定全部推倒重来":["44.1"],"再比如":["44.1"],"汽车自动驾驶算法设计存在缺陷":["44.1"],"大都来自客户的咨询":["44.2"],"怒骂":["44.2"],"由于我们系统的代码量非常大":["44.2"],"所以很少有线上故障是通过直接读代码的方式发现的":["44.2"],"例子中的这个故障的发现过程也不例外":["44.2"],"当时的情况是":["44.2"],"有一个融资者发现查询出的交易列表和预期不符":["44.2"],"于是向我们咨询":["44.2"],"希望我们排查一下":["44.2"],"接到这样的咨询":["44.2"],"我的第一反应是这个问题可能会比较严重":["44.2"],"当时我脑袋":["44.2"],"砰":["44.2"],"地一下就":["44.2"],"炸":["44.2"],"开了":["44.2"],"要知道":["44.2"],"如果我们查询出的交易列表不正确":["44.2"],"那么融资者在融资时可能会多融资或者少融资":["44.2"],"具体多少取决于交易列表是多了还是少了":["44.2"],"对一分钱都不能错的金融科技公司来说":["44.2"],"这是一个非常非常严重的问题":["44.2"],"这意味着资损":["44.2"],"资金损失":["44.2"],"发生了":["44.2"],"毕竟身经百战":["44.2"],"很快冷静下来之后":["44.2"],"我当即丢下了手头的事情":["44.2"],"开始排查这个问题":["44.2"],"导致查询出的交易列表不正确的原因有很多":["44.2"],"数据源不正确":["44.2"],"数据过滤逻辑不正确":["44.2"],"白名单配置不正确等等":["44.2"],"我只能用排除法对所有可能的问题逐个排除":["44.2"],"遗憾的是":["44.2"],"总有一些没有明显线索的问题":["44.2"],"这些问题是无法被直接排除":["44.2"],"这个时候我就只能尝试在开发环境试跑":["44.2"],"希望可以复现问题":["44.2"],"为了复现这个问题":["44.2"],"我在开发环境还原了生产的数据状况":["44.2"],"只是这一招在当时并没能定位问题":["44.2"],"到最后":["44.2"],"我只能使出杀手锏":["44.2"],"走读代码":["44.2"],"为了避免独自一人读代码陷入思维盲区":["44.2"],"我甚至把同事拉进了这滩浑水":["44.2"],"在一行行地看过所有的代码之后":["44.2"],"我们终于把怀疑目标锁定到前文中计算白名单列表的交集函数上来":["44.2"],"什么叫把对错误的避免":["44.3"],"产品里呢":["44.3"],"这里不得不提起一个大家都用过的臭名昭著的设计":["44.3"],"直接上图":["44.3"],"usb":["44.3"],"用过的人都知":["44.3"],"usb接口是长方形的":["44.3"],"有两个方向可以尝试插入":["44.3"],"所以有两种使用方法":["44.3"],"正确的和错误的":["44.3"],"非常容易插错":["44.3"],"运气好的时候":["44.3"],"一次就可以成功":["44.3"],"但是在运气不好的时候":["44.3"],"你就得插两次甚至三次":["44.3"],"其实在设计的之初":["44.3"],"yoke":["44.4"],"实现防呆设计":["44.4"],"防错设计":["44.4"],"有如下具体的要求":["44.4"],"也无法":["44.5"],"装错":["44.5"],"苹果手机的闹铃":["44.5"],"这是某一次我的苹果手机在闹铃响起时的截图":["44.5"],"如下":["44.5","87.6"],"苹果闹钟":["44.5"],"会发现看似简单按钮排布":["44.5"],"却充满了防错设计的玄机":["44.5"],"稍后提醒":["44.5"],"按钮颜色显眼位置居中体形巨大":["44.5"],"就怕一个睡醒的人按错":["44.5"],"其二":["44.5"],"服务":["44.6","218.10"],"功能":["44.6"],"模块":["44.6","87.13","97.22","111.3"],"函数":["44.6","64.9","148.2","148.3","176.2","204.1","219.4","223.0","245.0","250.2","258.1","258.9"],"在产品设计阶段":["44.7"],"所以我们希望即便在事前出了问题":["44.8"],"在事中也不会危及系统的运行":["44.8"],"根因思维":["44.9"],"复盘思维":["44.9"],"中的问题处理方法":["44.9"],"本文就不再赘述了":["44.9"],"本文第二小节问题交集函数的例子":["44.9"],"其实就是一次事后的问题处理":["44.9"],"顺带一提":["44.9"],"沟通":["44.10"],"执行等可能存在预期和实际不符的场景":["44.10"],"想象力能力":["45.0"],"这是即使面对对手也要一起追求某个目标的意愿":["45.2"],"语境":["45.3"],"多听取他们的意见":["45.4"],"便于模型的搭建":["45.4"],"解决方案的背景":["45.5"],"什么项目":["45.5"],"客户":["45.5"],"需求":["45.5"],"使用信息等":["45.5"],"也要":["45.6"],"为公司下一个项目的重构建立可能性":["45.6"],"如何为下级员工介绍目前的状况":["45.6"],"在寻找导师的时候要确定自己向从指导关系中学到什么":["45.7"],"判断一个工程师成熟与否的方法之一":["46.1"],"就是看他在遇到问题时":["46.1"],"是流于表面":["46.1"],"根因思维要求我们在因果链上从问题出发溯流而上":["46.2"],"找到引起问题的根本原因":["46.2"],"如下图的因果链":["46.2"],"因为a所以b":["46.2"],"因为b所以c":["46.2"],"因为c所以d":["46.2"],"而我们看到的只是d的表象":["46.2"],"但是真正引起问题的原因却是a":["46.2"],"为什么超负荷呢":["46.3"],"因为轴承的润滑不够":["46.3"],"第三问":["46.3"],"为什么润滑不够":["46.3"],"因为润滑泵吸不上油来":["46.3"],"第四问":["46.3"],"为什么吸不上油来":["46.3"],"因为油泵轴磨损":["46.3"],"松动了":["46.3"],"第五问":["46.3"],"为什么磨损了呢":["46.3"],"因为没有安装过滤器":["46.3"],"混进了铁屑等杂质":["46.3"],"问到这里":["46.3"],"机器停转的根因终于大白于天下":["46.3"],"jpg":["46.4","61.11","61.16","99.7","150.2","154.3","263.6","286.51"],"在线性问题里":["46.4"],"的关系链是单一而和稳定的":["46.4"],"是在相同情况下可以反复验证的":["46.4"],"也即":["46.4"],"可复现的":["46.4"],"所以这种问题总是可以被我们总结和归纳成一般性知识和智慧的":["46.4"],"开篇故事中":["46.4"],"因为在因果链上思考的时候":["46.5"],"我们使用的思维方式是纵向模式":["46.5"],"在纵向模式下":["46.5"],"我们会把我们的精力集中在具体的问题上":["46.5"],"我们会思考很得深入":["46.5"],"直至找到根因":["46.5"],"你不摸爬滚打个三五年":["46.6"],"不对业务":["46.6"],"对系统":["46.6"],"找到根因并从根本上解决问题":["46.7"],"除了由果索因外":["46.7"],"我们还需要切换到横向思考模式":["46.7"],"7层结构":["47.2"],"所有能和用户交互产生网络流量的程序":["47.3"],"数据格式变换":["47.4"],"编码格式之间的转换":["47.4"],"建立一个session":["47.5"],"建立同步":["47.5"],"是计算机与计算机之间的通信":["47.6"],"因此是点对点的通信":["47.6"],"功能一":["47.6","47.7","47.9"],"可靠传输与不可靠传输":["47.6"],"即存不存在确认机制":["47.6"],"路由选择":["47.7"],"通过路由选择算法":["47.7"],"选择合适的路由器路径进行传输":["47.7"],"定义帧的开始和结束":["47.8"],"功能二":["47.8"],"差错控制":["47.8"],"帧错":["47.8"],"都转发":["47.9"],"定义接口特性":["47.9"],"物理上":["47.9"],"udp":["48.0","50.1","50.5","50.34"],"反着来":["48.0"],"这个序号表示数据接收端期望接收的下一个字节的编号是多少":["48.1"],"同时也表示上一个序号的数据已经收到":["48.1"],"size":["48.1","61.6","103.17","286.42","286.55"],"窗口大小":["48.1"],"表示还能接收多少字节的数据":["48.1"],"用于流量控制":["48.1"],"标识符":["48.1","62.2"],"urg":["48.1"],"并且与建立断开连接时的握手息息相关":["48.2"],"是一个全双工的协议":["48.3"],"请求发送后":["48.4","50.11","175.12"],"则会发送一个应答":["48.5","50.12","175.12"],"的方式":["48.6","216.7","256.2"],"客户端和服务端存储相同的":["48.6"],"下次握手时发出":["48.6"],"达到减少":["48.6"],"的目的":["48.6"],"常考面试题":["48.6"],"是全双工的":["48.7"],"认为数据发送完成":["48.8","50.15"],"包":["48.9","50.16","175.10"],"并进入":["48.9","50.16","175.10"],"close":["48.9","50.16","175.10"],"最大段生存期":["48.11","175.10"],"指报文段在网络中生存的时间":["48.11","175.10"],"超时会被抛弃":["48.11","175.10"],"时间":["48.11","175.10"],"若该时间段内没有":["48.11"],"的重发请求的话":["48.11"],"协议也就是超时重传机制":["48.12"],"通过确认和超时机制保证了数据的正确送达":["48.12"],"向":["48.14","111.2"],"即使报文正常的传输到对端":["48.15"],"也可能出现在传输过程中报文出错的问题":["48.15"],"这时候":["48.16","225.0"],"b":["48.16","64.13","64.17","89.5","89.6","99.11","106.41","127.3","136.7","158.2","164.2","173.3","173.69","174.6","174.12","195.4","195.9","222.11","228.1","286.8","286.27","295.1"],"端收到相同序号的报文会丢弃该报文并重传应答":["48.16"],"就太浪费资源了":["48.18"],"通过累计确认":["48.18"],"可以在收到多个报文以后统一回复一个应答报文":["48.18"],"报文中的":["48.18"],"发送端窗口包含已发送但未收到应答的数据和可以发送但是未发送的数据":["48.19"],"发送端窗口是由接收窗口剩余大小决定的":["48.19"],"在该情况下":["48.20"],"发送端会停止发送数据":["48.20"],"而前者是作用于网络":["48.21"],"防止过多的数据拥塞网络":["48.21"],"而不是一蹴而就直接拉满带宽":["48.22"],"慢开始算法步骤具体如下":["48.22"],"这样能够避免指数级增长导致网络拥塞":["48.23"],"慢慢将大小调整到最佳值":["48.23"],"接收端只会回复最后一个顺序正确的报文序号":["48.24"],"将阈值设为当前拥塞窗口的一半":["48.25"],"将阈值设为当前拥塞窗口":["48.26"],"发送方先记下三个重复":["48.27"],"滑动窗口解决了数据的丢包":["48.28"],"同步序列编号":["49.1"],"synchronize":["49.1"],"sequence":["49.1"],"numbers":["49.1"],"第二次握手":["49.1","175.12"],"服务器收到syn包并确认客户的syn":["49.1"],"并且带上自己的序列号seq":["49.2"],"服务端就进入了close":["49.2"],"关闭等待":["49.2"],"tcp服务器通知高层的应用进程":["49.2"],"客户端向服务器的方向就释放了":["49.2"],"这时候处于半关闭状态":["49.2"],"即客户端已经没有数据要发送了":["49.2"],"但是服务器若发送数据":["49.2"],"提供了单播":["50.0"],"多播":["50.0"],"广播的功能":["50.0","50.5"],"ftp":["50.1","50.31"],"icmp":["50.1"],"smtp":["50.1"],"是一种无连接的协议":["50.2"],"在osi模型中":["50.2"],"并且也只是数据报文的搬运工":["50.4"],"不会对数据报文进行任何拆分和拼接操作":["50.4","51.1"],"具体来说就是":["50.4","51.1"],"在发送端":["50.4","51.1"],"发送方的udp对应用程序交下来的报文":["50.6"],"在添加首部后就向下交付ip层":["50.6"],"并且也不会备份数据":["50.7","51.2"],"发送数据也不会关心对方是否已经正确接收到数据了":["50.7","51.2"],"再者网络环境时好时坏":["50.7","51.2"],"两个十六位的端口号":["50.8"],"分别为源端口":["50.8"],"可选字段":["50.8"],"希望完整且按顺序查看网页":["50.9"],"而不丢失任何内容":["50.9"],"当你下载文件时":["50.9"],"希望获得的是完整的文件":["50.9"],"established":["50.13","175.12"],"状态":["50.13","50.18","175.10","175.12","179.48"],"服务端收到这个应答后也进入":["50.13","175.12"],"进入":["50.18","115.0","179.48"],"time":["50.18","138.21","152.21","156.23","170.15","175.10","206.0","286.55"],"wait":["50.18","175.10","179.49","283.5"],"建立连接的方法是":["50.20"],"不支持多播和广播传输方式":["50.21"],"tcp为了保证报文传输的可靠":["50.23"],"就给每个包一个序号":["50.23"],"缓解拥塞":["50.24"],"用来临时存放双向通信的数据":["50.25"],"可靠传输":["50.28"],"使用流量控制和拥塞控制":["50.28"],"连接对象个数":["50.28"],"支持一对一":["50.28"],"即时通信":["50.29"],"面向数据报方式":["50.29"],"网络数据大多为短消息":["50.29"],"file":["50.31","64.21","64.22","100.1","100.3","119.9","122.21","175.6","286.42","286.54"],"文件传输协议":["50.31"],"用于文件传输":["50.31"],"应用于无盘设备":["50.32"],"ntp":["50.32"],"network":["50.32"],"protocol":["50.33","151.13","286.64"],"回绕协议":["50.33"],"用于查错及测量应答时间":["50.33"],"虽然":["50.34","173.30"],"需要保证数据不丢失且有序到达":["51.3"],"因此":["51.3","173.13"],"的头部开销小":["51.3"],"同样支持一对多":["51.4"],"多对多":["51.4"],"简单的多":["51.6"],"给定一个整数数组":["52.1"],"nums":["52.1"],"target":["52.2","62.6","95.25","98.9","122.8","125.8","127.18","156.17","173.1","173.85","181.0","218.4","232.2","286.69"],"第一层循环遍历的值记为":["52.4"],"第二层循环时遍历的值记为":["52.4"],"大家记住一个结论":["52.5"],"几乎所有的求和问题":["52.5"],"都可以转化为求差问题":["52.5"],"这道题就是一个典型的例子":["52.5"],"通过把求和问题转化为求差问题":["52.5"],"事情会变得更加简单":["52.5"],"我们可以在遍历数组的过程中":["52.5"],"增加一个":["52.5"],"来记录已经遍历过的数字及其对应的索引值":["52.5"],"然后每遍历到一个新数字的时候":["52.5"],"都回到":["52.5"],"这里我用对象来模拟":["52.6"],"map":["52.6","89.13","99.1","100.5","103.12","127.37","130.12","156.1","156.2","174.4","174.16","179.29","186.3","284.84","285.10","285.12","285.14","286.43","288.2"],"的能力":["52.6"],"diffs":["52.6"],"缓存数组长度":["52.6"],"使":["52.7"],"m":["52.8"],"各指向两个数组生效部分的尾部":["52.10"],"如果我们从前往后填补":["52.11"],"就没法直接往对应的坑位赋值了":["52.11"],"会产生值覆盖":["52.11"],"从后往前填补":["52.11"],"我们填的都是没有内容的坑":["52.11"],"place":["52.12"],"instead":["52.12","97.50","219.6"],"merge":["52.12","65.27","116.4","174.25","204.6","218.5"],"初始化两个指针的指向":["52.12"],"但是思路却完全不同":["52.13"],"真题描述":["52.13"],"给你一个包含":["52.13"],"n":["52.13","84.4","159.13","241.9","252.6"],"它也可以帮我们降低问题的复杂度":["52.15"],"双指针法用在涉及求和":["52.15"],"比大小类的数组题目里时":["52.15"],"大前提往往是":["52.15"],"该数组必须有序":["52.15"],"否则双指针根本无法帮助我们缩小定位的范围":["52.15"],"压根没有意义":["52.15"],"左指针":["52.16"],"j":["52.16","174.64","195.4","214.3"],"右指针k":["52.16"],"k":["52.16","130.10","174.58","175.16","195.4"],"如果遇到重复的数字":["52.16"],"则跳过":["52.16"],"low":["52.17","123.0","206.15"],"high":["52.17","142.27"],"return":["52.17","53.10","53.11","55.2","61.5","61.7","62.15","64.13","89.5","89.6","95.23","96.5","99.13","109.7","115.0","125.9","127.4","127.10","127.18","130.3","130.9","132.1","140.2","153.11","154.10","154.12","154.17","156.1","156.7","156.13","156.23","174.12","174.24","174.37","176.4","179.61","179.62","184.10","189.0","205.1","206.5","209.8","214.0","220.2","221.4","222.7","236.7","241.8","250.1","252.5","252.6","283.3","283.6","285.2","285.3","286.6","286.46","286.70","292.2","293.2","295.2","295.9"],"min":["52.18","123.0","174.52","291.3"],"treenodelist":["53.2","53.5","53.8"],"funcnode":["53.2","53.5","53.8"],"r":["53.2","53.5","53.8","74.6","114.11","195.4","241.9"],"while":["53.3","53.6","53.9","57.4","283.7","286.12"],"广度优先遍历":["53.10"],"q":["53.10","53.11"],"使用广度优先遍历":["53.11"],"maxdepth":["53.12"],"栈":["54.1"],"二分查找":["54.2"],"搜索":["54.2"],"通过中间下标":["55.1"],"进行分割数组":["55.1"],"left":["55.1","55.2","104.0","106.37","170.5","170.11","171.0","185.4","214.2","286.37"],"right":["55.1","55.2","104.0","170.8","170.12","171.0","174.25","195.9","206.8","214.2","219.3"],"存放基准前后的数组":["55.2"],"取基准":["55.2"],"this":["55.3","55.4","55.5","57.7","64.18","67.8","99.12","108.3","109.1","112.2","114.27","127.53","131.8","131.9","157.0","173.11","173.24","173.83","176.2","178.2","179.27","179.58","205.6","206.9","214.1","218.5","245.3","283.1","283.2","286.7","288.4"],"o":["56.1","58.1","68.1","129.6","171.0","179.50"],"表示":["56.1","58.1","127.27"],"代码写的就越好":["56.2"],"相当于占用了":["56.4"],"个空间单元":["56.4"],"输入":["57.2","127.9","275.2"],"aba":["57.2"],"输出":["57.2","177.6"],"另一个指向尾部":["57.3"],"如果两个指针所指的字符恰好相等":["57.3"],"那么这两个字符就符合了回文字符串对对称性的要求":["57.3"],"跳过它们往下走即可":["57.3"],"如果两个指针所指的字符串不等":["57.3"],"比如这样":["57.3"],"当左右指针均满足对称时":["57.4"],"一起向中间前进":["57.4"],"字符串只包含字母":["57.6"],"z":["57.6","127.10","195.7","241.1","241.9","241.10","284.31","284.33","284.34","284.57","284.58","284.68","284.75","286.13"],"可以表示任何一个字母":["57.6"],"中相同长度的字符串里":["57.7"],"是否存在一个能够与这个正则相匹配":["57.7"],"构造函数":["57.7"],"worddictionary":["57.7"],"初始化一个对象字面量":["57.7"],"承担":["57.7"],"的角色":["57.7"],"words":["57.7"],"添加字符串的方法":["57.7"],"则还是":["58.4"],"重复第二":["59.1"],"三步":["59.1"],"直到队列为空":["59.1"],"但其实行内代码只要求内联代码以反引号串开始":["60.0"],"以同样长度的反引号串结束":["60.0"],"所以用多个反引号也是可以的":["60.0"],"围栏式代码块":["60.0"],"fenced":["60.0","115.0"],"blocks":["60.0","148.3","214.1"],"如果你使用了至少三个连续的反引号":["60.0"],"并且添加了换行":["60.0"],"就会变成围栏式代码块":["60.0"],"pre":["60.0","64.21","64.22","69.7","87.20","97.41","173.99","241.8"],"通过":["61.0","98.7","99.7","111.2","154.6","176.6","179.11","179.34","193.2","195.7","207.13","231.0","236.0","248.1","254.5","256.2"],"根据屏幕大小":["61.0"],"对图表进行整体的等比缩放":["61.0"],"代码量少":["61.0"],"适配简单":["61.0"],"一次处理后不需要在各个图表中再去单独适配":["61.0"],"因为是根据":["61.0"],"稿等比缩放":["61.0"],"当大屏跟":["61.0"],"当屏幕的尺寸比例刚好是":["61.2"],"1080px":["61.3"],"100vw":["61.3","61.5"],"100vh":["61.3","61.6"],"1920px1080px":["61.3"],"转为":["61.5"],"vw":["61.5"],"的函数":["61.5","179.11"],"vh":["61.5"],"px2font":["61.6"],"font":["61.6","106.14","115.0","286.55"],"px转vw":["61.7"],"export":["61.7","95.22","95.23","97.4","97.22","100.8","111.4","153.12","154.12","156.1","166.9","169.3","173.43","178.4","179.26","195.7","208.3","210.0","219.4","223.2","236.2","236.5","239.5","248.0","249.1","286.20","286.21"],"px2vw":["61.7"],"px":["61.7","61.13","286.37"],"as":["61.8","95.23","97.26","114.24","173.85","205.6","206.3","218.4","222.7","228.1","232.2","236.7","245.3","252.6"],"echarts":["61.8"],"elementresizedetectormaker":["61.8"],"handler":["61.8","191.1"],"datautil":["61.9"],"里面":["61.9","206.11"],"在需要的时候调用":["61.9"],"其原理是计算出当前屏幕宽度和默认设计宽度的比值":["61.9"],"将原始的尺寸乘以该值":["61.9"],"另外":["61.9"],"其它":["61.9"],"的配置项":["61.9"],"比如间距":["61.9"],"定位":["61.9"],"边距也可以用该函数":["61.9"],"demo":["61.11","104.0","106.50","114.8","114.9","114.13","209.4"],"当屏幕的尺寸比例小于":["61.11","61.16"],"如果我们拿到的设计稿宽高为":["61.13"],"而我们的屏幕大小是":["61.13"],"是使用":["61.14"],"wh":["61.15"],"rem01":["61.16"],"的大小":["61.17"],"拿":["61.17"],"的标准屏幕大小为例":["61.17"],"将屏幕分为":["61.17"],"份":["61.17"],"先计算":["61.17"],"widthofdesignlayout":["61.18"],"设计布局的宽度":["61.18"],"对于pc仪表盘":["61.18"],"一般是":["61.18"],"unitprecision":["61.18"],"允许":["61.18"],"单位增长到的十进制数字":["61.18"],"selectorblacklist":["61.18"],"ignore":["61.18","62.17","214.2","239.3"],"hairlines":["61.18"],"array":["61.18","62.14","64.9","89.13","115.0","148.2","173.39","173.70","174.40","178.8","206.3","236.4","245.3","252.3","256.1","283.1","283.10","285.8","285.10"],"要忽略并保留为":["61.18"],"的选择器":["61.18"],"配置的时间":["61.19"],"全网echarts案例资源大总结和echarts的高效使用技巧":["61.19"],"注意":["62.1","134.4"],"因为我们要写babel插件":["62.1"],"所以我们选择":["62.1"],"body":["62.3","99.13","109.1","127.28","173.31"],"属性代表程序体":["62.3"],"它是可以独立执行的单位":["62.4"],"log就是一个调用表达式":["62.5"],"变量名":["62.7"],"属性名":["62.7","122.11"],"stringliteral有一个属性value":["62.8"],"end":["62.9","241.1","241.10"],"loc":["62.9","62.17","214.3","227.1"],"start和end代表该节点在源码中的开始和结束下标":["62.9"],"并调用visitor函数修改ast":["62.10"],"我们可以新建一个js文件":["62.10"],"其中导出一个方法":["62.10"],"remove":["62.12","110.2","179.54"],"删除当前节点":["62.12"],"callexpression":["62.12","231.3"],"isproduction":["62.13"],"process":["62.13","152.30","166.8"],"env":["62.13","62.14","76.3","152.30","154.10","154.17","166.8"],"tostring":["62.14","62.15","89.12","162.3","173.29","286.14","286.16"],"call":["62.14","62.15","112.2","140.5","162.3","173.29","173.85","206.9","231.1","283.7","286.14","288.2"],"opts":["62.14"],"commentwords":["62.15"],"isfunction":["62.15","64.14","221.1"],"arg":["62.15"],"object":["62.15","89.5","99.6","123.1","134.4","140.0","156.13","162.0","162.3","173.25","173.69","195.9","228.1","244.0","248.0","249.1","285.5","286.15","286.16"],"prototype":["62.15","127.4","162.3","173.29","173.33","178.8","179.21","286.16"],"判断是否有前缀注释":["62.15"],"hasleadingcomments":["62.15","62.18"],"leadingcomments":["62.15"],"测试2":["62.16"],"测试3":["62.16"],"reserve":["62.16"],"traverse":["62.17","64.16","64.24","177.7"],"ts":["62.17","64.20","87.43","97.44","112.4","156.1","184.20","184.21","184.27","184.31","185.5","185.6","186.3","219.4","223.2","236.2","236.5","239.5","240.1","241.7","249.1","256.5"],"trailingcomments":["62.17"],"parentnode":["62.18"],"parrotjs":["62.20"],"babelrc":["62.21"],"plugins":["62.21","64.13","64.15","64.16","95.32","96.6","101.3","154.10","154.17","191.2","275.2"],"解题方法通常是":["63.0"],"第一步":["63.0","64.19","64.23","126.4"],"找出语句中的主语":["63.0"],"谓语":["63.0"],"宾语":["63.0"],"第二步":["63.0","64.19"],"找出语句中的形容词":["63.0"],"动词":["63.0"],"标点符号等进行分析":["63.0"],"如果将其程序化":["63.0"],"我们按照上面的方法可以先将其进行拆分成这样":["63.0"],"该小节分为两个部分":["64.0"],"形成一个新的表现形式":["64.2"],"generation":["64.2"],"代码生成":["64.2"],"将上一步处理好的内容":["64.2"],"转化为新的代码":["64.2"],"如图所示":["64.2"],"subtract":["64.3"],"进行词法分析后得到":["64.3"],"type":["64.3","67.3","73.0","169.3","173.93","177.10","178.5","195.4","218.8","231.7","236.6","241.4","286.9"],"paren":["64.3","64.8"],"value":["64.3","64.11","64.16","89.13","95.23","101.5","130.12","173.98","181.0","195.9","214.2","236.4","258.3","286.28"],"name":["64.3","64.11","64.16","68.3","73.0","86.1","96.5","96.12","97.2","97.4","97.35","97.39","99.10","99.14","114.24","116.3","118.2","122.19","125.0","125.1","125.3","140.1","142.5","152.30","154.17","156.2","168.7","169.3","173.98","175.12","179.9","179.55","181.0","184.7","184.8","184.20","191.2","195.4","207.12","216.3","289.1"],"在案例中我们是想将":["64.4"],"lisp":["64.4"],"https":["64.4","64.14","147.5","195.5","279.9","284.22","284.23"],"en":["64.4","64.14","150.10","279.1","279.7"],"wikipedia":["64.4","64.14"],"org":["64.4","64.14","73.0","115.0","120.2","281.1","286.28"],"wiki":["64.4","64.14"],"programming":["64.4"],"language":["64.4"],"语言转化为":["64.4"],"c":["64.4","129.2","129.5","136.7","147.5","154.12","158.2","164.2","173.42","179.23","195.4"],"语言":["64.4","177.5"],"因此需要构建一个新的ast":["64.4"],"这个创建的过程就":["64.4"],"需要遍历这个":["64.4"],"的节点":["64.4","216.5"],"其实就是将生成的新ast树再转回代码的过程":["64.5"],"大部分的代码生成器主要过程是":["64.5"],"continue":["64.7","221.3","241.1","241.10"],"闭括号做同样的操作":["64.7"],"空格检查":["64.7"],"我们关心空格在分隔字符上是否存在":["64.7"],"但是在token中他是无意义的":["64.7"],"whitespace":["64.7"],"s":["64.7","106.34","138.34","138.40","148.3","148.5","154.16","173.29","177.13","195.4","214.2","215.2","256.4","279.8","284.59","285.11","288.2"],"这里处理调用语句":["64.8"],"这里以一个例子解释":["64.8"],"add":["64.8","65.12","71.5","71.25","81.1","81.6","94.5","95.12","95.15","95.24","110.2","126.5","154.1","159.5","178.5","179.32","185.4","288.1"],"这样的代码":["64.8"],"而接下来的node其实就是那个":["64.8"],"接下来实现":["64.9"],"遍历数组":["64.9"],"在遍历数组的同时会调用traversenode来遍历节点":["64.9"],"traversearray":["64.9"],"identifier":["64.10","64.11","64.18","64.24"],"arguments":["64.10","127.13","127.37","131.7","173.98","176.2","231.3","288.4","291.1"],"如果是识别就直接返回值":["64.11"],"在新ast中":["64.11"],"add就是那个identifier节点":["64.11"],"如果是数字就直接返回值":["64.11"],"numberliteral":["64.11"],"如果是文本就给值加个双引号":["64.11"],"stringliteral":["64.11"],"容错处理":["64.11"],"在线":["64.12"],"转换器":["64.12"],"查看":["64.12","72.5","98.7","162.0"],"函数名节点":["64.12"],"image":["64.12","64.19","68.8","89.3","89.13","102.5","107.2","109.6","112.4","113.4","113.6","123.1","155.8","286.51"],"接下来再看看目标函数的":["64.12"],"和原函数的":["64.12"],"做个比较":["64.12"],"现在我们已经有了思路":["64.12"],"转换箭头函数插件":["64.13"],"sourcecode":["64.13","64.15"],"sum":["64.13","127.50","154.13","154.18","174.48","174.52"],"targetsource":["64.13","64.15","64.16"],"findparent":["64.14"],"parent":["64.14","106.44","137.0","216.2","223.2","226.1","232.4","252.5"],"isarrowfunctionexpress":["64.14"],"isprogram":["64.14"],"要求父节点是函数且不是箭头函数":["64.14"],"找不到就返回根节点":["64.14"],"提升函数环境":["64.14"],"解决this作用域问题":["64.14"],"箭头函数转换为普通函数":["64.14"],"这里需要引入作用域":["64.14"],"scope":["64.14","64.18","177.9","179.17","215.2","219.3"],"computer":["64.14"],"science":["64.14"],"的概念":["64.14","175.16"],"大家都知道javascript":["64.14"],"拥有词法作用域":["64.14"],"23lexical":["64.14"],"scoping":["64.14"],"vs":["64.14","195.7"],"dynamic":["64.14","214.1"],"用来生成或者判断节点的ast语法树的节点":["64.15"],"pathlib":["64.15"],"path":["64.15","64.16","64.18","64.21","64.22","64.24","95.21","97.4","100.3","140.4","152.30","154.12","154.20","167.4","192.1","192.2","192.3","195.4"],"日志":["64.15"],"logplugin":["64.15"],"visitor":["64.15","64.16","64.21","64.22"],"state":["64.15","64.16","64.21","64.22","157.0","181.0"],"ismemberexpression":["64.15"],"找到console":["64.15"],"使用插件":["64.15","64.16"],"autoimportlogplugin":["64.16"],"用来保证此模块内一定会引入一个日志的模块":["64.16"],"program":["64.16"],"loggerid":["64.16"],"遍历子节点":["64.16"],"importdeclaration":["64.16"],"说明导入过了":["64.16"],"导入的变量名":["64.16"],"如果loggerid没有值":["64.16"],"说明源代码中还没有导入此模块":["64.16"],"需要我们手动插入一个import语句":["64.16"],"这一步比较简单":["64.16"],"直接通过":["64.16"],"name属性":["64.16"],"获取导入的变量名再赋值即可":["64.16"],"如果源代码中已经有logger模块引入了":["64.16"],"直接用就可以":["64.16"],"如果没有就引用一下logger":["64.16"],"取出导入的变量名赋值给loggerid":["64.16"],"前置小知识学完我们开干吧":["64.17"],"eslint中的一个比较简单的校验规则":["64.17"],"noconsole":["64.17"],"也就是代码中不允许打印console":["64.17"],"今天就撸它了":["64.17"],"以儆效尤":["64.17"],"源代码":["64.17"],"基于此规则":["64.17"],"校验肯定不能通过了":["64.17"],"ref":["64.18","181.0","190.0","190.4","214.2","221.3","222.3","258.3"],"is":["64.18","65.29","114.27","132.2","132.3","140.0","141.2","148.0","212.1","218.5","219.6","219.10","251.2"],"binding":["64.18","169.4","214.2","228.1","229.0"],"这里是该作用域下的一个引用":["64.18"],"scopetwo":["64.18"],"这里是上级作用域下的一个引用":["64.18"],"与":["64.18","97.57","104.0","133.4","173.44","177.8","178.0","179.40","179.62","185.0","205.4"],"作用域和":["64.18"],"作用域之间的关系就称为":["64.18"],"它的大致结构如下":["64.18"],"kind":["64.18","104.0"],"我们先来看看不做按需加载的情况下的打包结果":["64.19"],"可以看到":["64.19","104.0","140.5","239.2"],"已经快有500kb的大小了":["64.19"],"解决思路":["64.19"],"将源代码变成这样":["64.19"],"整体方案":["64.19"],"在插件中拿到我们在插件调用时传递的参数":["64.19"],"获取":["64.19","195.2"],"节点":["64.19","179.64","222.2"],"找出引入模块是":["64.19"],"的语句":["64.19"],"项目中做ts文件的类型检测大致有以下几种途径":["64.20"],"使用":["64.20","87.24","97.20","97.38","97.59","99.23","143.3","162.0","177.10","177.13","178.5","178.7","178.8","195.4","202.4","248.1","254.14"],"loader":["64.20","154.10","154.17","177.8","217.2"],"numericliteral":["64.21"],"tscheckplugin":["64.21","64.22"],"遍历前":["64.21"],"set":["64.21","64.22","86.2","138.29","156.13","179.29","215.2","219.3","251.1","256.8","285.4","285.11","285.12"],"errors":["64.21","64.22"],"variabledeclarator":["64.21"],"tsstringkeyword":["64.22"],"stringtypeannotation":["64.22"],"assignmentexpression":["64.22","214.2"],"整体思路":["64.23"],"先获取实参类型数组":["64.23"],"它会试图在多处调用":["64.24"],"visitorone":["64.25"],"class":["64.26","95.36","99.8","106.51","109.6","110.2","150.2","173.43","176.6","178.2","178.7","195.7","195.9","223.2"],"constructorvisitor":["64.26"],"deploy":["65.1","68.10"],"重复的代码更改":["65.1"],"这些重复的过程非常的繁琐":["65.1"],"但是对保证代码持续更新迭代来说又非常的重要":["65.1"],"yml":["65.4","65.33"],"文件内容的执行者":["65.4"],"请确保shared":["65.6"],"runner选项被enable了即可":["65.6"],"gitlab":["65.8","65.10","65.11","67.9","68.3","68.5"],"runner":["65.8","65.11","67.10"],"brew":["65.9"],"restart":["65.10","68.3","68.6"],"always":["65.10","68.3","68.6","215.2"],"users":["65.10","65.11","275.2"],"docker":["65.11","68.4","68.12","68.13","114.31"],"run":["65.11","68.13","69.9","97.2","114.28","148.2","179.54","179.55"],"rm":["65.11","67.7"],"shared":["65.11","127.34","133.9","206.5","254.2"],"config":["65.11","68.3","69.10","86.2","89.5","95.7","97.11","97.17","97.39","97.52","97.58","98.13","99.7","101.3","127.6","154.12","166.8","166.9"],"etc":["65.11","67.3","138.31","177.13"],"git":["65.12","65.27","69.4","69.10","71.3","71.6","71.12","71.22","71.25","87.4","97.4","119.5","195.0"],"yml文件":["65.13"],"blue":["65.15"],"yellow":["65.15","65.16"],"student2":["65.16"],"ci":["65.17","68.9","78.1"],"master":["65.18","65.36","67.10","201.8"],"tags":["65.18","65.36","67.10"],"yehanli":["65.18","65.36"],"echo":["65.18","65.35","66.3","76.3"],"job":["65.19","66.3","68.10","256.1","256.6","258.9"],"或者单个流水线任务中的script执行之前执行某些script":["65.20"],"setting":["65.21","109.1"],"cd":["65.21","67.6","94.3","97.2","115.0","195.4"],"variables中定义的变量":["65.21"],"比如字节某内部工具e":["65.22"],"的镜像":["65.22","114.21"],"另外一个任务还是会被继续执行":["65.23"],"以下为自定义的stages":["65.23"],"first":["65.23","295.5","295.7"],"stage":["65.23","66.3","127.2"],"second":["65.23"],"key":["65.25","73.0","97.26","99.12","111.2","127.18","156.2","156.18","195.6","195.9","222.6","247.2","248.1"],"2为最大值":["65.26"],"when可设置在特定失败原因的情况下执行":["65.26"],"push时触发":["65.27","99.12"],"适用于所有分支":["65.27"],"requests":["65.27","107.4"],"mr被创建时触发":["65.27"],"workflow":["65.28"],"配置中展示如何使用":["65.28"],"语句至少需要触发一个":["65.29"],"在各个流水线任务的外层进行配置":["65.29"],"variables":["65.29","215.2"],"feature":["65.29","221.1","235.4"],"或者之前fail的任务有配置了":["65.30"],"failure":["65.30"],"只有在之前的流水线任务有至少一次的fail之下才执行当前任务":["65.30"],"conatins":["65.32"],"unknown":["65.32","166.9","220.2","250.1","252.3"],"keys":["65.32","167.4","215.2","221.1","285.5"],"文件中按照如下写法即可引入不同的yml文件":["65.33"],"下面让我们来配合运行示例看一看文件配置是如何生效的":["65.34"],"job1":["65.35","65.36"],"完成":["65.35","65.36"],"设置当前任务的stage":["65.35"],"自定义任务2":["65.35"],"job2":["65.35"],"beforemr":["65.36"],"阶段":["65.36"],"only":["65.36","219.6","235.4","236.1","243.1","252.6","255.0"],"的script之前执行":["65.36"],"npm":["65.36","74.5","74.7","74.8","76.1","76.3","77.3","77.4","77.5","78.1","81.6","81.7","85.0","85.6","87.2","87.23","87.24","95.3","96.3","97.41","102.1","142.10","142.29","145.6"],"最多失败重试次数为3次":["65.36"],"retry":["65.36"],"与gitlab可直接适配":["66.1"],"实时构建日志十分清晰":["66.1"],"一天之内多次合并提交代码":["66.2"],"第一个阶段的第一个事情":["66.3"],"开始build":["66.3"],"the":["66.3","73.0","112.2","113.6","114.27","206.0","206.9","212.1","215.2","219.6","219.10","232.4"],"ruby":["66.3","286.55"],"打包":["66.4"],"在第二阶段直接用":["66.4"],"但是要通过缓存":["66.4"],"cicd":["67.0"],"在这次提交合并入主分支前进行一系列测试":["67.1"],"构建等流程":["67.1"],"假设现在有个应用的代码存储在":["67.1"],"不需要使用第三方工具":["67.2"],"所以我们使用gitlab":["67.2"],"ci以及gitlab":["67.2"],"runner来完成我们的前端自动化构建部署":["67.2"],"实现原理":["67.2","126.8"],"前端发布流程基于gitlab":["67.2"],"processes":["67.3"],"error":["67.3","68.11","89.5","98.11","99.6","104.0","107.4","112.3","131.10","173.57","217.7"],"warn":["67.3","217.7","218.5","221.4","243.1"],"pid":["67.3","147.5"],"events":["67.3"],"connections":["67.3"],"include":["67.3","97.35","186.2","216.3"],"mime":["67.3"],"types":["67.3"],"application":["67.3","286.53"],"octet":["67.3"],"stream":["67.3","103.7"],"format":["67.3","291.5"],"remote":["67.3","71.17"],"addr":["67.3"],"cd配置中填写需要发布到服务器的相关信息":["67.4"],"cd中的variables变量配置":["67.5"],"执行":["67.6","69.10","205.13","219.15","221.7","249.0"],"stop":["67.7","177.13"],"输入您的gitlab实例url":["67.8"],"gitlab中的ci":["67.8"],"cd中的runner里面有":["67.8"],"token":["67.8","73.0","166.3","204.4"],"dev环境构建":["67.10"],"dev":["67.10","69.10","94.6","94.7","97.2","126.5","217.7","218.5","218.8","236.6","243.1","252.5","255.0"],"build":["67.10","68.10","96.14","102.5","219.6"],"yarn":["67.10","81.6"],"eye":["67.10"],"artifacts":["67.10"],"目标cicd服务器ip地址":["67.11"],"并且访问路径按需为相对路径":["67.12"],"或者绝对路径":["67.12"],"提交代码":["67.13"],"cd流水线中能看到自己的刚刚触发的ci":["67.14"],"大功告成":["67.17"],"妈妈再也不用担心我发布线上代码耗费时间和出错了":["67.17"],"自动化构建发布":["67.17"],"sh":["68.1","95.10"],"下载完成后":["68.1"],"可以":["68.1","176.3","184.8"],"安装":["68.2","68.5","96.3"],"volume":["68.3"],"home":["68.3","68.6","97.4","138.22","138.23","142.4"],"用户默认密码":["68.4"],"exec":["68.4","76.3","127.20","195.4","241.3","241.9"],"它只是在容器内运行的一个服务":["68.7"],"我们需要让它与":["68.7"],"关联起来":["68.7"],"interactive":["68.8"],"executor":["68.8"],"alpine":["68.8","114.21"],"latest":["68.8","113.6","114.12"],"缓存":["68.10","179.44","179.46","179.54"],"paths":["68.10"],"modules":["68.10","70.0","80.3","97.23","102.5","144.6","176.19","184.29","195.4"],"dist":["68.10","87.39","87.42","95.26","154.17","192.3"],"镜像":["68.12","113.4"],"文件写入以下内容":["68.12"],"t":["68.13","138.18","138.19","148.1","206.3","206.12","214.2","220.3","223.2","236.2","241.9","248.0"],"appimages":["68.13"],"commitlint":["69.0","69.10","95.15","95.20","97.57"],"eslintrc":["69.3"],"extend中添加":["69.3"],"有很多的":["69.4"],"提交的代码规范":["69.5"],"提交的信息规范":["69.6"],"提交的代码影响":["69.7"],"lint":["69.8","97.40","97.43"],"staged":["69.8","97.40"],"本地暂存代码检查工具":["69.8"],"初始化":["69.9","177.6"],"会在根目录创建":["69.9"],"文件夹":["69.9","112.4"],"npx":["69.9"],"package":["69.10","76.3","78.0","87.12","87.13","87.22","97.61","102.5","195.4","195.9"],"json":["69.10","74.9","78.0","81.3","86.8","87.5","87.6","87.12","87.20","87.21","87.27","87.28","88.1","95.4","95.5","97.61","102.5","140.5","142.26","159.2","159.13","195.8","273.1"],"中添加":["69.10"],"指令":["69.10"],"编写commit指令":["69.10"],"init":["69.10","71.24","86.2","86.7","95.3","95.46","195.7"],"save":["69.10","89.13"],"exact":["69.10","104.0"],"初始化命令行的选项信息":["69.10"],"不然没有选项":["69.10"],"自定义提交规范":["69.10"],"input":["69.12","178.4","181.0","207.8","286.72"],"jestjs":["69.13"],"docs":["69.13","97.47","115.0","142.3"],"命令":["70.0","82.0"],"所以也不能解决":["70.0"],"修改cmd文件":["70.0"],"在目录":["70.0"],"bin":["70.0","86.7","144.6"],"下打开":["70.0"],"ng":["70.0"],"cmd":["70.0","113.7","140.0"],"ngc":["70.0"],"文件":["70.0","87.13","89.5","97.19","97.61","101.3","112.4","175.10"],"添加":["70.0","97.52","113.7"],"但是因为最终部署在github":["70.0"],"pages":["70.0","178.7"],"没有办法直接修改":["70.0"],"所以适合团队内":["71.1"],"组织内协作或个人开发":["71.1"],"引用方时常需要修改共享代码":["71.2"],"你需要选择一种方案":["71.3"],"解决团队维护难题":["71.3"],"如果一个大项目是一个大":["71.3"],"仓库":["71.3","72.5","113.4","181.0"],"需要统一编译":["71.3"],"有2个概念":["71.4"],"主项目":["71.4"],"仓库b的地址":["71.5"],"对应":["71.6","179.9"],"父子关系的信息保存在主项目的":["71.8"],"仓库也是个普通的":["71.12"],"md主项目的readme文件":["71.13"],"b文件夹":["71.13"],"submodule":["71.14","71.18","71.20"],"的commit":["71.14"],"id也会更新":["71.14"],"的更新":["71.15"],"所有git操作就当作一个普通的":["71.16"],"submodule文件夹相对路径":["71.17"],"相当于是把主项目记录的":["71.18"],"的分支处于主项目里指定的":["71.19"],"id":["71.19","96.10","98.6","98.9","106.13","147.5","166.3","166.7","168.20","168.23","174.33","179.5","199.4","259.3","282.2","286.31"],"主项目仓库并进入主项目文件夹":["71.21"],"这时候submodule的文件夹都是空的":["71.21","71.23"],"主项目仓库":["71.23"],"update":["71.24","110.1","110.3","111.1","111.3","148.4","156.11","178.2","180.0","216.2","219.3","220.6","256.4"],"或者部署合并后的代码到生产环境":["72.0"],"可以在你的代码仓库发生某个事件时运行一个工作流":["72.0"],"举个例子":["72.0","173.14","185.1"],"当有人给你的代码仓库新建了一个":["72.0"],"issue":["72.0","72.2","87.8"],"你可以跑一个工作流自动的添加合适的标签":["72.0"],"当你的仓库触发某个事件的时候":["72.1"],"工作流就会运行":["72.1"],"当然也可以手动触发":["72.1"],"新建一个":["72.2"],"脚本":["72.3","133.2"],"要么是一个动作":["72.3"],"它会执行一个复杂但是需要频繁重复的作业":["72.4"],"使用动作可以减少重复代码":["72.4"],"你的新":["72.5"],"工作流文件就会被安装在你的仓库":["72.5"],"当有人提交代码的时候":["72.5"],"工作流就会自动执行":["72.5"],"关于一个任务的执行历史":["72.5"],"查看工作流活动":["72.5"],"章节":["72.5","195.7"],"理解工作流文件":["72.5"],"为了帮助你理解":["72.5"],"语法":["72.5","134.4"],"这节会解释例子中的每行代码":["72.5"],"可选":["72.5"],"工作流的名字":["72.5"],"会出现在":["72.5"],"仓库的":["72.5"],"选项栏里":["72.5"],"指定工作流的触发事件":["72.5"],"这个例子里":["72.5"],"使用是":["72.5"],"事件":["72.5","134.3","147.5","181.0"],"当有人提交了一个代码修改或者合并了一个":["72.5"],"pull":["72.5"],"工作流就会触发":["72.5"],"提交到每个分支都会被触发":["72.5"],"如果你想在指定分支":["72.5"],"路径":["72.5"],"工作流语法":["72.5"],"将运行在":["72.5"],"分支代码更新后":["73.0"],"自动同步当前代码到":["73.0"],"上":["73.0","81.0","173.16","195.7"],"关于":["73.0"],"的介绍":["73.0"],"可以参考阮一峰老师的":["73.0"],"入门教程":["73.0"],"为了实现":["73.0"],"的同步":["73.0"],"我们需要借助一个":["73.0"],"还好业界已经有现成的实现了":["73.0"],"这里我采用的是":["73.0"],"hub":["73.0"],"mirror":["73.0"],"我们可以看到使用的示例代码":["73.0"],"steps":["73.0"],"organization":["73.0"],"repos":["73.0"],"to":["73.0","100.3","112.2","113.6","141.8","148.1","148.2","171.0","205.6","206.0","214.2","218.5","222.7","228.1","236.2","245.3","252.3"],"uses":["73.0","112.2"],"yikun":["73.0"],"with":["73.0","115.0","137.0","148.0","148.5","206.8","220.2","231.2","235.4","286.69"],"kunpengcompute":["73.0"],"dst":["73.0"],"secrets":["73.0"],"private":["73.0","81.3","110.2","255.0"],"account":["73.0","245.3"],"命令都是跨平台兼容的":["74.0"],"甚至各种常见的文件系统操作也是不兼容的":["74.0"],"可能有部分同学处理过":["74.0"],"跨平台兼容的问题":["74.0"],"比如粗暴的为两种平台各写一份":["74.0"],"del":["74.1"],"cli":["74.1","74.2"],"用来删除文件和目录":["74.1"],"实现类似于":["74.1"],"cpr":["74.2","74.3"],"make":["74.2","74.3","214.2","218.5"],"dir":["74.2","74.3"],"引用变量":["74.4"],"serve":["74.6","96.14"],"server":["74.6","89.5","99.23","126.4","138.32","138.39","139.4","159.9","159.13","175.3","177.12","177.13","219.10","227.1","254.2"],"脚本和":["74.7"],"使用环境变量也是比较常见的":["74.7"],"scripts":["74.9","83.1","86.8","96.14"],"eslint":["74.10","86.9","89.13","97.21","97.31","97.40"],"stylelint":["74.10","97.34","97.37"],"mocha":["74.10"],"opn":["74.10"],"的各种姿势":["75.0"],"在我们运行测试之前确保我们的代码都通过代码检查会是比较不错的实践":["75.1"],"这也是让多个":["75.1"],"在严格串行的情况下":["75.2"],"我们必须要确保代码中没有编码规范问题才能运行测试":["75.2"],"而不管结果的收集":["75.3"],"加上":["75.3","171.0"],"all":["75.4","95.13","206.1","206.14"],"xxx2":["75.6"],"xxx3":["75.6"],"并行执行":["75.7"],"脚本替代复杂的":["76.0"],"到项目依赖中":["76.1"],"require":["76.3","113.8","125.2","125.7","126.4","154.20","179.26","191.2","191.3"],"chalk":["76.3","96.5"],"里面积累的命令越来越多时":["77.0"],"自身提供了自动完成工具":["77.1"],"能不能在补全":["77.2"],"的时候列出这个命令是干啥的":["77.2"],"uninstall":["77.4"],"或者您希望确保对依赖项进行全新安装":["78.0"],"在以下情况下会明显更快":["78.0"],"有一个":["78.0"],"lock":["78.0","97.28"],"shrinkwrap":["78.0"],"钩子脚本":["79.0"],"这种特性在某些操作前需要做检查":["79.0"],"某些操作后需要做清理的情况下非常有用":["79.0"],"举例来说":["79.0"],"运行":["79.0"],"的配置信息":["80.1"],"其中":["80.1","114.29","133.2","152.18"],"我们最熟悉的就是安装时候的源信息":["80.1"],"文件的话":["80.2"],"会判断":["80.2"],"如果没有缓存资源":["80.3"],"那么会先将":["80.3"],"文件中":["80.4","195.7"],"如果我们在依赖的版本号前增加":["80.4"],"标志的话":["80.4"],"改造模板":["81.1"],"可根据个人习惯改造":["81.1"],"删除样式文件":["81.1"],"app":["81.1","97.8","113.7","141.8","153.12","154.13","177.5","178.7","181.0","200.7","203.1"],"assets":["81.1","95.40","95.42","169.3","193.8"],"目录创建":["81.1"],"styles":["81.1","195.8"],"目录用于存放样式":["81.1"],"import":["81.2","81.5","89.13","96.4","97.7","97.22","98.7","100.8","112.4","156.5","156.8","173.43","179.26","206.3"],"defineconfig":["81.2"],"react":["81.2","89.6","89.13","95.7","95.9","205.8","205.16","207.16","286.37"],"vitejs":["81.2"],"plugin":["81.2","95.7","95.9","96.3","97.31","154.8","177.9"],"开源协议":["81.3"],"默认":["81.3"],"isc":["81.3"],"关于开源协议可以自行了解":["81.3"],"部分配置":["81.3"],"xz":["81.3"],"button":["81.3","122.21"],"false":["81.3","97.26","100.3","133.5","133.6","156.7","173.7","173.37","173.68","178.6","206.10","209.9","214.3","216.2","218.5","231.4","241.8","243.2","250.1","256.2"],"true改为false":["81.3"],"login":["81.4","114.17","142.1","195.2","195.3","195.6"],"命令进行登录":["81.4"],"根据命令行提示输入用户名":["81.4"],"密码":["81.4","195.1"],"邮箱":["81.4"],"邮箱验证码":["81.4"],"使用方式":["81.5"],"推荐":["81.6"],"先下载依赖":["81.6"],"install":["81.6","87.23","96.3","96.9","97.2","97.41","102.1"],"or":["81.6","87.42","106.6","127.35","142.5","214.2","215.2","228.1","235.4"],"首先更新包版本":["81.7"],"里面讲到的环境变量特性能让我们在":["82.0"],"中直接调用依赖包里的可执行文件":["82.0"],"更强大的是":["82.0"],"grep":["82.1","138.2","138.6"],"对象中新增一条命令即可":["83.1"],"jsonlint":["83.2"],"不全支持":["83.2"],"onchange":["83.3","175.6","178.4","207.7"],"两个子命令":["83.4"],"里面的":["83.5"],"传递参数和添加注释":["84.0"],"添加注释":["84.2"],"我们想要给":["84.3"],"命令添加注释":["84.3"],"具体做法如下":["84.4"],"运行所有代码检查和单元测试":["84.4"],"在运行":["84.5"],"能看到执行的命令":["84.6"],"silent":["84.7"],"或者更简单的":["84.7"],"verbose":["84.8"],"sudo":["85.1"],"local":["85.2","85.3","138.21","214.2"],"lib":["85.2","85.3","96.5"],"publish":["85.7","85.8","195.4"],"hello":["86.1","127.22","127.46","154.11"],"description":["86.1"],"entry":["86.1","137.0","154.10","154.17","154.20"],"point":["86.1"],"author":["86.2"],"email":["86.2"],"命令的简写":["86.3"],"当我们运行":["86.3"],"xxx":["86.3","87.17","87.23","119.2","138.35","177.13","178.8","250.3"],"在新项目或者任何现有项目中添加":["86.4"],"str":["86.5","127.46","127.49","141.3","184.12","185.5","290.1","295.4"],"依赖":["86.6","281.2"],"执行如下命令将":["86.6"],"在命令行提示中选择":["86.7"],"answer":["86.7"],"questions":["86.7","88.2"],"about":["86.7"],"许多脚手架在搭建项目时也会自动帮我们自动初始化好":["87.0"],"描述":["87.1","163.0"],"其他人可以通过该名称使用":["87.2"],"major":["87.3","88.2"],"通常在涉及重大功能更新":["87.3"],"产生了破坏性变更时会更新此版本号":["87.3"],"代表次版本号":["87.3"],"让别人能快速了解该项目":["87.5"],"github":["87.7","87.8","97.60","260.1","272.0"],"链接":["87.7","175.10"],"修改和再发布等行为":["87.9"],"常见的开源许可证有":["87.9"],"license":["87.12"],"readme":["87.12"],"和main":["87.12"],"字段里指定的文件":["87.12"],"就认为它是":["87.13"],"如果不想修改文件后缀":["87.13"],"就可以在":["87.13"],"字段里指定的是项目的入口文件":["87.14"],"browser":["87.14","208.9","228.3","229.0","239.3"],"环境中都可以使用":["87.15"],"如果只想在":["87.15"],"像":["87.16"],"webpack":["87.16","154.8","154.12","177.9","179.8"],"rollup":["87.16","102.0"],"等构建工具会感知这些字段":["87.16"],"并会根据环境以及不同的模块规范来进行不同的入口文件查找":["87.16"],"mjs":["87.17"],"这样的配置在使用":["87.17"],"不用手动执行":["87.18"],"link":["87.18","121.0","146.4","296.2"],"字段接收一个数组":["87.18"],"来执行项目构建":["87.20"],"除了指定基础命令":["87.20"],"还可以配合":["87.20"],"完成命令的前置和后续操作":["87.20"],"或则":["87.23"],"等":["87.24","106.18","173.48","173.52","173.69","175.21","193.10","203.3"],"就应该被列在":["87.25"],"比如我们使用":["87.26"],"colors":["87.26","106.30","275.2"],"这个包来对":["87.26"],"peerdependencies":["87.27","145.2"],"在执行":["87.28","220.4","220.5"],"及其依赖树下某个依赖的版本号":["87.29"],"仓库上":["87.31"],"比如在安装依赖时指定了":["87.32"],"registry":["87.32"],"为":["87.32","100.7","106.21","106.25","115.0","173.64","206.10","241.4"],"windows":["87.35","173.13"],"上会出现异常":["87.35"],"体系上运行":["87.36"],"指定":["87.38","97.35"],"typescript":["87.38"],"定义为":["87.39"],"global":["87.39","97.35","116.3","195.4"],"vue":["87.40","96.0","96.4","97.0","97.5","97.8","97.32","97.40","100.4","114.13","144.3","180.0","219.6","254.11"],"autoprefixer":["87.41"],"等工具会使用该配置对代码进行转换":["87.41"],"antd":["87.42","95.42"],"jsx":["87.43","97.44","102.4","207.13"],"current":["88.2","156.3","156.15","206.1","206.8","214.3","286.38"],"minor":["88.2"],"patch":["88.2","107.4","175.4","220.4","220.5","222.10"],"split":["88.2","174.16","228.1","286.19","295.3","296.3"],"nextmajor":["88.2"],"nextminor":["88.2"],"nextpatch":["88.2"],"资源可见权限":["89.1"],"数据权限":["89.1"],"对于页面上的数据操作":["89.1"],"同一个人同一个页面不同的数据可能存在不同的数据操作权限":["89.1"],"采用":["89.2"],"树结构":["89.2"],"还是会分为这两块内容":["89.4"],"这里对于权限是使用多接口查询权限":["89.4"],"初始登录查询页面权限":["89.4"],"点击业务页面":["89.4"],"查询对应业务页面的资源code":["89.4"],"permission":["89.5","137.0"],"find":["89.5","127.24","195.4"],"trigger":["89.5","247.4","250.2"],"triggerexception":["89.5"],"修改app":["89.5"],"加载路由":["89.5"],"dva":["89.5"],"onerror":["89.5","239.3"],"err":["89.5","99.7","104.0","141.4"],"preventdefault":["89.5"],"authroutes":["89.5"],"ergodicroutes":["89.5"],"authkey":["89.5"],"foreach":["89.5","89.13","103.7","132.1","133.6","174.16","204.2","245.3","279.8","286.15","286.33","286.65"],"assign":["89.5","99.12","179.19"],"customerergodicroutes":["89.5"],"menuautarray":["89.5"],"localstorage":["89.5","126.2","177.12"],"getitem":["89.5"],"组件累加当前页面的code":["89.6"],"用来发送请求返回对应的权限code":["89.6"],"codearray":["89.6"],"concat":["89.6","179.56"],"line":["89.6","171.0"],"varsresetauthorityforpage":["89.6"],"reducers":["89.6"],"修改pageheaderwrapper文件":["89.6"],"因为所有的业务页面都是这个组件的子节点":["89.6"],"purecomponent":["89.6"],"formattedmessage":["89.6"],"umi":["89.6"],"locale":["89.6"],"所以具有不同的数据操作权限":["89.7"],"对于批量操作则需要判断选择的数据是否都具有操作权限":["89.7"],"而对于某一个用户":["89.8"],"他可以查看所有的商品":["89.8"],"但对于某些品牌他可以":["89.8"],"审核等":["89.9"],"这个属性是资权限的接口返回的":["89.9"],"前端在调这个接口时将这个属性记录下来":["89.9"],"或者保存到对应的控件中":["89.9"],"这个字段代表当前用户对于这条业务数据的权限类型":["89.10"],"如当":["89.10"],"某一条数据的permissiontype":["89.11"],"这时这三个按钮的状态怎么判断呢":["89.11"],"permissiontype":["89.11"],"getauthority":["89.13"],"hasauthoritycodearray":["89.13"],"codeauthorityobject":["89.13"],"item":["89.13","132.1","153.5","153.6","153.7","153.8","156.1","156.2","174.16","178.5","190.4","286.15","286.31"],"debugger":["89.13"],"png修改authorizedbutton代码":["89.13"],"增加数据权限判断":["89.13"],"disable":["89.13","220.2"],"eqeqeq":["89.13"],"border":["90.0","106.31","122.6","170.2","195.9","286.55"],"none":["90.0"],"block":["90.0","106.2","106.19","106.20","106.21","106.40","179.2","228.2"],"list":["90.0","99.15","119.4","127.5","127.10","137.0","138.2","156.1","156.2","159.5","178.5","190.2","206.14"],"style":["90.0","95.40","95.42","97.47","103.11","121.0","153.12","156.11","169.4","175.22","195.7","195.8","195.9","286.37"],"position":["91.0","106.21","106.23","169.4","170.2","170.6","171.0","179.3"],"top":["91.0","106.31","115.0","171.0","286.37"],"direction":["92.0"],"column":["92.0","100.2","227.1"],"w":["92.0","127.40","284.52","286.13","295.1"],"wrap":["92.0","140.13"],"iphone":["92.0","286.25","286.58"],"x":["92.0","106.36","127.10","160.0","168.3","170.6","178.8","195.8","241.1","279.8","284.84","286.47","286.59"],"xr":["92.0"],"xs":["92.0"],"查询部分字典数据集合":["93.1"],"结构如下":["93.1"],"数据结构基本按照页面功能结构":["93.2"],"是使用qp":["93.3"],"返回的订单列表当中":["93.4"],"在数据库当中":["93.4"],"资源权限":["93.8"],"现在几乎每个人都会有自己的博客":["94.0"],"vitepress":["94.6"],"started":["94.8"],"md":["94.8"],"vite":["94.10","97.11","97.17","102.1"],"press":["94.10"],"blog":["94.10"],"我只是把我选择的写下来了":["95.1"],"许多技术栈都可以替换":["95.1"],"这里给个例子":["95.6"],"recommendations":["95.8"],"bradlc":["95.8"],"exports":["95.9","95.13","95.32","101.3","140.0","154.10","154.15","154.17","154.20"],"extends":["95.9","99.8","110.2","154.15","173.43","178.2","178.7","184.18","195.7","220.3","236.2","248.0"],"recommended":["95.9"],"singlequote":["95.13","97.26"],"trailingcomma":["95.13"],"subject":["95.16"],"empty":["95.16","222.6"],"never":["95.16","221.3"],"case":["95.16","97.35","177.10","206.15","214.2","216.2","222.3"],"lower":["95.16","97.35"],"为了团队协作和减少开发负担":["95.17"],"husky":["95.18","97.40","97.42","97.59"],"simple":["95.19","231.1","231.7"],"edit":["95.20"],"我们执行以下":["95.20"],"如果出现以下截图":["95.20"],"那我们就配置成功了":["95.20"],"tsconfig":["95.20","102.5"],"我们使用":["95.20"],"typscript":["95.20"],"做runtime的类型检查":["95.20"],"所以需要配置检查规则":["95.20"],"replacement":["95.21"],"clientrouting":["95.22"],"any":["95.23","103.15","156.7","156.11","156.17","166.8","166.9","169.4","206.5","217.7","220.3","223.2","250.1","252.6","283.10"],"globalcontextprovider":["95.23"],"props":["95.23","156.11","209.10","215.2","216.3","219.10"],"children":["95.23","137.0","174.33","179.56","181.0","206.14","209.4","214.1","215.2","285.14"],"provider":["95.23","181.0"],"apiurl":["95.25"],"changeorigin":["95.25"],"pathrewrite":["95.25"],"reset":["95.26","122.21","286.55"],"prefix":["95.28"],"theme":["95.28","96.5","106.36"],"如果开发以pc优先":["95.28"],"则自定义以下screens":["95.28"],"否则使用默认screens即可":["95.28"],"screens":["95.28"],"module":["95.29","95.32","96.1","101.3","140.9","140.11","154.10","154.15","154.17","154.20","193.1","239.3"],"响应式":["95.30"],"div":["95.31","106.31","150.2","156.2","156.11","172.0","178.4","195.9","205.1"],"tailwindcss":["95.32"],"nesting":["95.32"],"minko":["95.33"],"fe":["95.33"],"postcss":["95.33","154.10","154.17"],"pxtoviewport":["95.33","95.35"],"但有可能真的会遇到这种需求":["95.34"],"lg":["95.36"],"text":["95.36","106.2","106.22","106.44","115.0","133.3","171.0","195.4","222.3","231.1","236.4","286.26"],"convertunitonend":["95.37"],"处理后":["95.37"],"把":["95.37","211.0","248.1"],"resolve":["95.40","154.17","173.65","176.13","192.1","192.2","192.3","217.7","230.2","294.1"],"dirname":["95.40","140.0","154.17","192.1","192.2","192.3"],"light":["95.40","275.2"],"utf8":["95.40"],"读取css变量名":["95.40"],"usesetstate":["95.42"],"useisomorphiclayouteffect":["95.42"],"ahooks":["95.42"],"cssvarsmap":["95.42"],"vars":["95.42"],"meta":["95.42","121.1","150.10"],"glob":["95.42"],"i18next":["95.43"],"middleware":["95.43","95.46"],"serveri18next":["95.45"],"geti18next":["95.45"],"i18nextmiddleware":["95.45","95.46"],"languagedetector":["95.45","95.46"],"await":["95.46","109.1","148.2","148.5","166.3","178.7","283.2","286.54"],"default":["95.46","97.4","97.22","113.6","153.12","156.1","166.9","169.3","178.4","195.7","208.3","252.5"],"resources":["95.46","195.4"],"它带来的能力是ssr":["95.47"],"i18nextprovider":["95.47"],"以及":["95.47","115.0"],"国际化已经可以使用":["95.48"],"enabledparsers":["95.49"],"enabledframeworks":["95.49"],"vuex":["96.0","96.2","181.0","195.7"],"主要特点是基于浏览器":["96.1"],"native":["96.1","181.0","205.8"],"来开发":["96.1"],"省略打包这个步骤":["96.1"],"因为需要什么资源直接在浏览器里引入即可":["96.1"],"webpack的差别":["96.1"],"从底层原理上来说":["96.1"],"vite是基于esbuild预构建依赖":["96.1"],"而esbuild是采用go语言编写":["96.1"],"因为go语言的操作是纳秒级别":["96.1"],"而js是以毫秒计数":["96.1"],"所以vite比用js编写的打包器快10":["96.1"],"100倍":["96.1"],"从启动方式来说":["96.1"],"vite在启动的时候不用打包":["96.1"],"所以不用分析模块与模块之间的依赖关系":["96.1"],"不用进行编译":["96.1"],"就是一种按需编译的方式":["96.1"],"和ui框架的那种按需导入类似":["96.1"],"当浏览器请求某个模块的时候根据需要对模块内容进行编译":["96.1"],"再按需动态编译可以缩减编译时间":["96.1"],"接下来启动服务":["96.2"],"就可以看到所配置的页面了":["96.2"],"并且点击还能够跳转到对应的页面":["96.2"],"集成vuex":["96.2"],"是一个专为":["96.2","181.0"],"应用程序开发的状态管理模式":["96.2","181.0"],"它采用集中式存储管理应用的所有组件的状态":["96.2"],"并以相应的规则保证状态以一种可预测的方式发生变化":["96.2"],"也集成到":["96.2"],"的官方调试工具":["96.2"],"extension":["96.2"],"opens":["96.2"],"mount":["96.3","169.3","208.2"],"如果为了减小项目的包体积":["96.3"],"那么只需要引入对应的功能组件即可":["96.3"],"babel":["96.3","177.7"],"component插件":["96.3"],"如下所示":["96.3","173.81","195.9"],"以下是两种不同的引入方式":["96.4"],"全局引入":["96.4"],"createapp":["96.4","97.8","218.9"],"elementplus":["96.4"],"plus":["96.5"],"esmodule":["96.5"],"ensurestylefile":["96.5"],"resolvestyle":["96.5"],"resolvecomponent":["96.5"],"在生产中服务时的基本公共路径":["96.5"],"这也将会创建一个包含已配置好的":["96.6"],"配置文件":["96.6","97.2","97.19"],"配置":["96.6","97.19","154.11"],"来移除生产环境下没有使用到的样式声明":["96.6"],"在您的":["96.6"],"在页面需要使用大量数据进行渲染生成前":["96.7"],"后端开发人员的接口也许并没有写完":["96.7"],"作为前端的我们也就没有办法获取数据":["96.7"],"es6的引入方式":["96.10"],"上面的代码被称为数据模板":["96.11"],"用于告诉mock":["96.11"],"js生成什么样的数据":["96.11"],"其中数据模板中的每个属性由三部分构成":["96.11"],"products":["96.12"],"手机":["96.12"],"price":["96.12"],"生成日期":["96.13"],"中设置环境变量":["96.14"],"修改dev构建脚本的命令":["96.14"],"development":["96.14"],"preview":["96.14"],"官方路由管理器":["97.1"],"pinia":["97.1"],"值得你喜欢的":["97.1"],"store":["97.1","133.5","181.0","205.19"],"tdesign":["97.1"],"这一指令将会安装并执行":["97.2"],"它是一个基本模板快速启动项目工具":["97.2"],"初始化项目":["97.2"],"在项目被创建后":["97.2"],"通过以下步骤安装依赖并启动开发服务器":["97.2"],"打开项目":["97.2"],"your":["97.2","219.6"],"project":["97.2"],"安装依赖":["97.2","97.41"],"启动项目":["97.2"],"基础配置":["97.2"],"方便后期维护":["97.4"],"减少":["97.4"],"合并代码冲突可能性":["97.4"],"仓库模块":["97.7"],"仓库配置文件":["97.7"],"definestore":["97.7"],"对应的配置文件":["97.11"],"后置拦截器":["97.13"],"获取到响应时的拦截":["97.13"],"response":["97.13","126.4","151.2"],"根据你的项目实际情况来对":["97.13"],"做处理":["97.13"],"这里对":["97.13"],"不做任何处理":["97.13"],"直接返回":["97.13","248.1"],"集成":["97.14","97.23","97.40"],"预处理器":["97.14","102.1"],"less":["97.16","102.1","154.16"],"即可":["97.16","115.0","179.25"],"配置文件中新增css":["97.17"],"下面是新的语法":["97.18"],"深度选择器":["97.18"],"selector":["97.18"],"插槽选择器":["97.18"],"主要用于统一不同":["97.19"],"ide":["97.19"],"编辑器的编码风格":["97.19"],"在项目根目录下添加":["97.19"],"表示是最顶层的":["97.19"],"表示所有文件适用":["97.19"],"缩进风格":["97.19"],"space":["97.19","127.40","171.0"],"airbnb":["97.20","97.32"],"风格指南":["97.20"],"配置需要下载插件":["97.21","97.25","97.34"],"prettier":["97.22","97.24","97.44"],"rules":["97.22","97.39","154.16","175.22"],"禁止使用多余的包":["97.22"],"extraneous":["97.22"],"dependencies":["97.22"],"确保在导入路径内一致使用文件扩展名":["97.22"],"extensions":["97.22","140.5","195.4"],"确保导入指向可以解析的文件":["97.22"],"unresolved":["97.22"],"首选默认导出导入":["97.22"],"首选默认导出":["97.22"],"prefer":["97.22"],"要求使用":["97.22"],"prettierrc":["97.23"],"而使用空格":["97.26"],"usetabs":["97.26"],"行尾需要有分号":["97.26"],"semi":["97.26"],"使用单引号":["97.26"],"对象的":["97.26"],"仅在必要时用引号":["97.26"],"quoteprops":["97.26"],"在项目根目录添加一个":["97.27"],"pnpm":["97.28"],"风格指南校验":["97.30"],"其规则之一是":["97.30"],"代码结束后面要加分号":["97.30"],"而在":["97.30"],"配置文件中加了":["97.30"],"代码结束后面不加分号":["97.30"],"vue3":["97.32","215.1","254.5"],"essential":["97.32"],"standard":["97.33"],"官方推荐规则":["97.33"],"mixin":["97.35","235.4"],"规则名的大小写":["97.35"],"指定缩进":["97.35"],"indentation":["97.35"],"severity":["97.35"],"warning":["97.35","206.1"],"禁止未知的伪类选择器":["97.35"],"pseudo":["97.35"],"ignorepseudoclasses":["97.35"],"禁止未知的伪元素选择器":["97.35"],"内容如下":["97.36"],"旧的不需打包的样式库":["97.36"],"v14":["97.37"],"指定关键帧名称的模式":["97.39"],"keyframes":["97.39","179.9"],"pattern":["97.39","148.0"],"sass":["97.40","102.1","154.14","154.16"],"在项目中已集成":["97.40"],"包含很多":["97.41"],"hook":["97.41","115.0","208.4","208.7","208.13","208.14"],"钩子":["97.41","179.54"],"常用有":["97.41"],"msg":["97.41","107.1"],"一般结合":["97.42"],"tsx":["97.44","156.1","156.2","156.4","156.5","156.8","208.3","208.7"],"write":["97.44","159.2","205.6"],"文件触发命令为":["97.45"],"在后期维护和":["97.46"],"bug":["97.46","173.67"],"处理时会变得有据可查":["97.46"],"项目开发周期内还可以根据规范的提交信息快速生成开发日志":["97.46"],"从而方便我们追踪项目和把控进度":["97.46"],"社区最流行":["97.46"],"fix":["97.47","97.50"],"修复问题":["97.47"],"文档变更":["97.47"],"代码格式":["97.47"],"不影响功能":["97.47"],"例如空格":["97.47"],"分号等格式修正":["97.47"],"refactor":["97.47"],"代码重构":["97.47"],"perf":["97.47"],"的详细描述":["97.48"],"当前代码与上一个版本有突破性改变":["97.49"],"nor":["97.50"],"breaks":["97.50"],"onhashchange":["97.50"],"which":["97.50","206.8"],"was":["97.50","214.0"],"removed":["97.50","214.0"],"compile":["97.50","219.10"],"配置文件之中":["97.53"],"配置模板":["97.53"],"cz":["97.54","97.56"],"g":["97.55","127.49","195.4","215.2","236.4","286.27","295.1"],"useemoji":["97.57"],"方式二":["97.57"],"配合":["97.57","154.3"],"conventional":["97.59"],"命令在":["97.59"],"常见的":["97.60"],"工具有":["97.60"],"repository":["97.61","113.4"],"新创建的":["97.61"],"配置文件中要用到":["97.61"],"两个地方需保持一致":["97.61"],"打开":["97.61"],"新增":["97.61"],"homepage":["97.61","178.7"],"字段":["97.61"],"表示该应用发布后的根目录":["97.61"],"参见官方文档":["97.61"],"用户在产品里":["98.1"],"主要做什么操作":["98.1"],"停留多久":["98.1"],"访问几次":["98.1"],"用户点击率占比如何":["98.1"],"会不会出现某些功能设计对于用户而言是无效的":["98.1"],"用户在核心使用流程上是否顺畅":["98.1"],"用户每次访问网站中的一个页面就被记录为":["98.2"],"个":["98.2","106.33","196.13"],"多次访问同一个页面":["98.2"],"全局错误":["98.3"],"即未被捕获的错误":["98.3"],"局部错误":["98.3"],"所谓的":["98.4"],"白屏时间":["98.4"],"其实指的就是创建这个空白页面到浏览器开始渲染非空白内容的时间":["98.4"],"比如页面背景发生变化等":["98.4"],"首次内容绘制":["98.4","151.4"],"contentful":["98.4","151.4"],"fcp":["98.4"],"当用户看见一些":["98.4"],"内容":["98.4","193.1"],"元素被绘制在页面上的时间点":["98.4"],"和白屏是不一样":["98.4"],"它可以是":["98.4"],"文本":["98.4"],"而一开始也不可能设计得全面":["98.5"],"在初始化":["98.6"],"的时候是需要接入方提供的当前应用的":["98.6"],"那这个":["98.6","106.4"],"传统技术发送统计数据的一些问题":["98.7"],"可以直接通过":["98.7"],"传送门":["98.7"],"由于文章篇幅有限不在额外解释":["98.7"],"sdk":["98.7","98.11","98.13","203.2"],"核心代码":["98.7"],"这里我们只考虑极简情况":["98.7"],"设计好的":["98.7"],"代码内容比较简单":["98.7"],"直接上代码":["98.7"],"easyagentsdk":["98.7"],"实例对象":["98.7"],"queue":["98.7"],"任务队列":["98.7"],"cosnt":["98.7"],"noop":["98.7"],"vitals":["98.7"],"页面性能指标":["98.7"],"reportwebvitals":["98.7"],"onperfentry":["98.7"],"instanceof":["98.7","125.9","173.85","217.7"],"pageshow":["98.8"],"pagehide":["98.8"],"两个事件":["98.8"],"中可以上报与":["98.8"],"相关的数据":["98.8"],"e":["98.9","99.12","103.17","127.24","127.28","129.6","133.7","195.4","205.2","215.2","236.4"],"classname":["98.9","169.4","205.1","286.66"],"outerhtml":["98.9"],"istarget":["98.9"],"然后进行错误数据上报":["98.10"],"大致如下":["98.10"],"create":["98.12","148.2","166.8","208.7","219.6","228.2"],"baseurl":["98.12","166.8"],"timeout":["98.12","166.8","175.12","206.15","217.0"],"instance":["98.13","166.8","173.85","204.1","209.8"],"errorreport":["98.13"],"错误信息":["99.0"],"性能数据":["99.0"],"用户行为":["99.0"],"加载资源":["99.0"],"个性化指标等":["99.0"],"也不能把":["99.1"],"还是不能还原错误":["99.2"],"要是能把用户的操作都录制下来":["99.2"],"然后通过回放来还原错误就好了":["99.2"],"监控平台通过":["99.2"],"接口调用":["99.3"],"资源加载":["99.3"],"页面路由变化":["99.3"],"代码报错等信息":["99.3"],"这三板斧":["99.3"],"when":["99.5","107.4","218.5","219.6"],"出现的时间段":["99.5"],"如时间戳":["99.5"],"who":["99.5"],"发生错误的脚本url":["99.6"],"lineno":["99.6"],"发生错误的行号":["99.6"],"colno":["99.6"],"发生错误的列号":["99.6","100.2"],"error对象":["99.6"],"捕获到的错误信息是":["99.6"],"不能捕获到":["99.7"],"errorhander":["99.7"],"来捕获异常":["99.7"],"errorhandler":["99.7"],"vm":["99.7","179.55"],"进来啦":["99.7"],"控制台打印":["99.7"],"l":["99.8","119.10","129.6","195.4"],"不能render函数的错误":["99.8"],"捕获到异常":["99.8"],"如https":["99.9"],"加载的https":["99.9"],"上报xhr接口数据":["99.10"],"reportdata":["99.10","108.3"],"执行原始的send方法":["99.10"],"重写指定的方法":["99.10"],"param":["99.10","166.9","174.40","283.10","287.4"],"source":["99.10","193.7","227.1","241.7","241.9","258.2"],"重写的对象":["99.10"],"重写的属性":["99.10"],"fn":["99.10","130.3","140.5","156.20","156.21","173.82","179.28","179.33","204.2","256.8","283.8"],"拦截的函数":["99.10"],"original":["99.10"],"wrapped":["99.10","228.1"],"拦截fetch请求示例":["99.10"],"fetchreplace":["99.10"],"超出则删除第一条":["99.11"],"shift":["99.11","179.33","283.7"],"按照时间排序":["99.11"],"sort":["99.11","115.0","174.12","179.33","285.2","285.5"],"genkey":["99.12"],"catch":["99.12","104.0","112.3","127.28","175.8","283.10"],"locationreplace":["99.12"],"tolowercase":["99.13"],"classnames":["99.13"],"有效内容主体":["99.14"],"entrytype":["99.14","151.9"],"返回":["99.14"],"fetchstart":["99.14","152.8"],"表示浏览器即将开始获取资源之前的时间":["99.14"],"代表启动性能条目的资源的类型":["99.14"],"中所指定":["99.14"],"返回资源":["99.14"],"nexthopprotocol":["99.14"],"代表用于获取资源的网络协议":["99.14"],"redirectend":["99.14","152.8"],"表示收到上一次重定向响应的发送最后一个字节时的时间":["99.14"],"redirectstart":["99.14","152.8","152.9"],"表示上一次重定向开始的时间":["99.14"],"表示浏览器开始向服务器请求资源之前的时间":["99.14"],"entryhandler":["99.15"],"内存大小的限制":["99.16"],"totaljsheapsize":["99.16"],"表示总内存的大小":["99.16"],"对象":["99.17","115.0","127.34","173.56","173.65","177.6","184.14","209.4","234.0","248.1","252.2","258.3"],"每当dom变化时触发该事件":["99.17"],"判断监听的dom是否在首屏内":["99.17"],"如果在首屏内":["99.17"],"将该dom放到指定的数组中":["99.17"],"发布":["99.18","115.0"],"对外导出init事件":["99.19"],"切片编程":["99.20"],"重写接口请求":["99.20"],"创建用户行为类":["99.21"],"一般而言":["99.22"],"上报域名都不是当前域名":["99.22"],"上报的接口请求会构成跨域":["99.22"],"后台demo功能介绍":["99.23"],"express":["99.23"],"开启静态服务器":["99.23"],"模拟线上环境":["99.23"],"用于实现定位源码的功能":["99.23"],"从0到1搭建前端监控平台":["100.0"],"面试必备的亮点项目":["100.0"],"已开源":["100.0"],"没有看过的小伙伴":["100.0"],"建议先了解下":["100.0"],"最终效果":["100.0"],"在监控后台":["100.0"],"对应的":["100.1","209.4"],"sourcemap标准版本":["100.1"],"最新的为3":["100.1"],"回调函数":["100.2"],"返回对应的源码":["100.2"],"findcodebysourcemap":["100.2"],"callback":["100.2","103.9","127.18","168.18","206.4","283.9"],"loadsourcemap":["100.2"],"functionname":["100.3","226.1"],"foo":["100.3","162.1","162.2","173.98"],"filename":["100.3","140.0","140.4","140.5","154.4","154.5","154.17","154.20","286.43"],"linenumber":["100.3"],"columnnumber":["100.3"],"isnative":["100.3"],"iseval":["100.3"],"bar":["100.3","173.98","184.33"],"文件中的":["100.4"],"codeerr":["100.4"],"方法":["100.4","104.0","108.3","109.6","115.0"],"codeerr的源码为":["100.4"],"将":["100.5","109.7","147.0","154.4","154.5","177.7","205.14"],"文件放到指定的地址":["100.5"],"统一存储":["100.5"],"中的所有变更":["100.6"],"emit":["100.6","103.9","103.10","103.15","111.2"],"event":["100.6","111.2","152.20","181.0","206.16","215.2","221.3","255.0"],"ischeckout":["100.6"],"基于":["100.7","177.1","195.4"],"svelte":["100.7"],"模板实现":["100.7"],"提供了回放的":["100.7"],"gui":["100.7"],"工具":["100.7"],"支持暂停":["100.7"],"倍速播放":["100.7"],"拖拽时间轴等功能":["100.7"],"内部调用了":["100.7"],"的提供的":["100.7"],"see":["100.8"],"内部使用":["100.8"],"pako":["100.8"],"base64":["100.8","193.7"],"相结合的压缩方式":["100.8"],"压缩比为":["100.8"],"以上":["100.8"],"原来":["100.8"],"2m":["100.8"],"压缩代码示例":["100.8"],"压缩":["100.8","177.11"],"zip":["100.8"],"rrweb":["100.9"],"设置10s重新制作快照的频率":["100.9"],"每次重置录屏时":["100.9"],"判断":["100.9"],"是否为":["100.9","173.69"],"即这段时间内是否发生报错":["100.9"],"有的话将这次的录屏信息上报":["100.9"],"并重置录屏信息和":["100.9"],"作为下次录屏使用":["100.9"],"px2rem":["101.2"],"qq图片20220927110819":["101.3"],"overridebrowserslist":["101.3"],"android":["101.3","195.4","195.7","286.58"],"ios":["101.3","104.0","195.4","195.7"],"scale":["101.4"],"calcrate":["101.5"],"当前宽高比":["101.5"],"currentrate":["101.5"],"innerwidth":["101.5","286.11"],"innerheight":["101.5","286.11"],"表示更宽":["101.5"],"提高项目性能":["102.0"],"压缩文件":["102.0"],"代码分割":["102.0"],"优化开发体验":["102.0"],"热更新":["102.0","193.8"],"跨域问题":["102.0"],"构建工具减轻了我们的心智负担":["102.0"],"让我们不用关心我们写的代码如何在浏览器运行":["102.0"],"只需要关心代码怎么写就可以了":["102.0"],"市面上主流的构建工具有":["102.0"],"esbuild":["102.0"],"parcel":["102.0"],"以及最近刚出的":["102.0"],"turbopack":["102.0"],"但目前最流行的依然是":["102.0"],"相较于":["102.0"],"的优势":["102.0"],"当项目体积越来越庞大时":["102.0"],"构建工具需要处理的代码量也呈指数级增长":["102.0"],"包含数千个模块的项目也是相当普遍":["102.0"],"类似":["102.0","115.0","195.7"],"的构建工具就会遇到性能瓶颈":["102.0"],"通常需要几分钟项目才能启动起来":["102.0"],"即使使用热更新":["102.0"],"hmr":["102.0","236.6"],"也可能需几秒":["102.0"],"甚至十几秒页面才能更新":["102.0"],"不知道大家目前的项目怎么样":["102.0"],"反正我们公司稍微大一点的":["102.0"],"vue2":["102.0","220.0","254.4"],"项目是真的慢":["102.0"],"等的捉急":["102.0"],"这种情况已经很大程度影响到了我们的开发效率和摸鱼时间":["102.0"],"同时提供了对":["102.1"],"scss":["102.1","154.14"],"styl":["102.1","154.14"],"stylus":["102.1"],"文件的内置支持":["102.1"],"仅需安装相应的预处理器就可以了":["102.1"],"and":["102.1","106.6","206.9","206.14","214.2","221.3","226.1"],"我们可以通过添加后缀的方式":["102.2"],"修改文件的引入方式":["102.2"],"默认的引入方式等同于添加":["102.2"],"后缀":["102.2"],"帮助我们更好地利用":["102.3"],"treeshaking":["102.3"],"compileroptions":["102.5"],"skiplibcheck":["102.5"],"是否跳过":["102.5"],"这样":["102.5"],"的报错信息就会在命令行和页面上显示出来":["102.5"],"不修正就无法继续往下开发了":["102.5"],"如果要在类型检查不通过时阻止生产环境打包":["102.5"],"直接在":["102.5"],"命令中添加一个指令即可":["102.5"],"了解音视频基础":["103.0"],"能搭建简单的node服务":["103.0"],"docker配置":["103.0"],"vue框架的使用":["103.0"],"环境搭建及要求":["103.0"],"例如麦克风":["103.1"],"摄像机":["103.1"],"capture":["103.2"],"microphone":["103.2"],"可以从enumeratedevices中获取":["103.3"],"deviceid":["103.3","104.0"],"constraindomstring":["103.3","103.4"],"摄像头前后置模式":["103.3"],"是否开启回声消除":["103.4"],"echocancellation":["103.4"],"组id":["103.4"],"用一个设备的输入输出的组id是同一个":["103.4"],"groupid":["103.4"],"webp":["103.5"],"这里是由clienta发起b来接受a的视频数据":["103.5"],"上图总结可以为a创建本地视频流":["103.5"],"并把offer发送给socket服务":["103.7"],"localstream":["103.7"],"mediastream":["103.7"],"gettracks":["103.7"],"track":["103.7"],"creatoruserid":["103.8","103.15"],"peerconnect":["103.8"],"rtcpeerconnection":["103.8"],"ice":["103.10"],"sdp":["103.10","103.15"],"setproperty":["103.11"],"400px":["103.11"],"aspect":["103.11"],"ratio":["103.11"],"getuserlist":["103.12"],"roomuser":["103.12"],"get":["103.12","127.18","152.30","173.87","175.4","175.8","195.4","204.2","214.1","245.0"],"initpeer":["103.13"],"intoroom":["103.14"],"其他代码":["103.14"],"offer":["103.15"],"setlocaldescription":["103.15"],"socket":["103.15","179.47"],"那么在socket服务中我们怎么只给对应的人进行事件广播":["103.15"],"不对其他人进行广播":["103.15"],"我们可以用找到这个人userid对应的socketid":["103.15"],"进而只给这一个人广播事件":["103.15"],"首先获取io对应的namespace":["103.15"],"方法提示用户去选择和授权捕获展示的内容或部分内容":["103.16"],"如一个窗口":["103.16"],"mimetype":["103.17"],"video":["103.17","286.55"],"webm":["103.17"],"ondataavailable":["103.17"],"push":["103.17","110.3","111.1","167.4","173.98","179.47","195.9","214.0","230.2","235.4","286.2"],"enumeratedevices":["104.0"],"获取到所有的设备":["104.0"],"然后筛选出":["104.0"],"videoinput":["104.0"],"类型的设备":["104.0"],"最后通过不同的设备":["104.0"],"来实现切换摄像头":["104.0"],"获取所有视频输入设备":["104.0"],"getdevices":["104.0"],"devices":["104.0"],"videodevices":["104.0"],"device":["104.0","106.25","168.7"],"切换设备":["104.0"],"handledevicechange":["104.0"],"这里我们把获取到的设备列表信息打印看看":["104.0"],"我们可以看到每个设备都有一个":["104.0"],"我们就是通过这个":["104.0"],"来切换设备的":["104.0"],"获得了多个摄像头设备":["104.0"],"我这里是一个笔记本自带的摄像头和一个":["104.0"],"obs":["104.0"],"虚拟摄像头":["104.0"],"包括最近":["104.0"],"macos":["104.0"],"更新到":["104.0"],"ventura":["104.0"],"后的":["104.0","106.32"],"连续互通摄像头":["104.0"],"都可以获取到":["104.0"],"这样我们就可以在视频的时候":["104.0"],"就可以通过拍摄更清晰的手机后置来拍摄了":["104.0"],"虚拟摄像头更有意思":["104.0"],"中开启虚拟摄像头后":["104.0"],"可以播放一个视频":["104.0"],"然后进行视频会议":["104.0"],"这样你甚至可以提前录制好一个端坐的视频":["104.0"],"简直是上网课必备":["104.0"],"我之前试过播放特朗普的视频":["104.0"],"然后微信视频":["104.0"],"对面看到的确实是特朗普在演讲":["104.0"],"所以说这方面很有安全隐患":["104.0"],"所以大家在网上和别人视频的时候":["104.0"],"还是需要注意下":["104.0"],"对方可能不是真的":["104.0"],"跑题了":["104.0"],"说完了切换摄像头":["104.0"],"我们再来看看如何在支持切换前后置摄像头的设备上如何切换前后摄像头":["104.0"],"我们可以通过指定":["104.0"],"facingmode":["104.0"],"有":["104.0"],"个值":["104.0"],"分别是":["104.0","113.3","113.4"],"user":["104.0","116.3","138.38","166.7","175.8","206.15"],"environment":["104.0","173.19"],"分别对应前后摄像头和左右摄像头":["104.0"],"当需要强制使用前置摄像头时":["104.0"],"可以使用":["104.0","184.15"],"关键字":["104.0"],"强制切换前后摄像头时":["104.0"],"当摄像头不支持时":["104.0"],"会报一个":["104.0"],"overconstrainederror":["104.0"],"无法满足要求的错误":["104.0"],"切换前后摄像头":["104.0"],"switchcamera":["104.0"],"开启默认摄像头":["104.0"],"会报一个overconstrainederror":["104.0"],"也可以这样当前后摄像头不支持切换时":["104.0"],"会继续使用当前摄像头":["104.0"],"好处是不会报错":["104.0"],"elmessage":["104.0"],"success":["104.0","179.51"],"切换成功":["104.0"],"你的设备不支持切换前后摄像头":["104.0"],"切换前置摄像头":["104.0"],"通过这个简单的拍照小应用":["104.0"],"相信我们已经知道了通过摄像头获取媒体流的大概流程以及一些常用的":["104.0"],"通过屏幕共享获取获取媒体流":["104.0"],"实现录制等操作":["104.0"],"在视频会议中":["104.0"],"我们经常会使用到屏幕共享":["104.0"],"已经我们经常会有录制屏幕等需求":["104.0"],"市面上还有那么多需要付费的软件":["104.0"],"我们通过":["104.0"],"配合一些相关":["104.0"],"自己实现一个不是更好吗":["104.0"],"既省钱又学到了知识":["104.0"],"那么我们如何通过屏幕共享获取媒体流并实现录制呢":["104.0"],"下面通过一个小":["104.0"],"来简单实现一下":["104.0"],"getdisplaymedia":["104.0"],"来获取屏幕共享的媒体流":["104.0"],"align":["106.2","106.22","106.44","286.55"],"center":["106.2","106.41","106.44"],"声明块如果需要作用到对应的":["106.2"],"就是这样的语句":["106.3"],"里包含了以下":["106.3"],"namespace":["106.3"],"平时写样式文件都没写":["106.4"],"规则":["106.4","154.15","179.2"],"文件到底是用的什么字符编码的呢":["106.4"],"某个样式表文件到底用的是什么字符编码":["106.4"],"除了能导入":["106.5"],"外":["106.5"],"还能导入别的资源":["106.5"],"声明都能作用到的时候":["106.7"],"那最后谁应该起作用呢":["106.7"],"层叠性说的大概就是这个":["106.7"],"针对不同源的样式":["106.7"],"将按照如下的顺序进行层叠":["106.7"],"对于基础选择器以及一些常用伪类必须掌握":["106.8"],"attr":["106.9"],"指定属性的元素":["106.9"],"普通兄弟选择器":["106.10"],"输入必填的表单元素":["106.11"],"valid":["106.11"],"输入合法的表单元素":["106.11"],"invalid":["106.11","218.5","241.1"],"输入非法的表单元素":["106.11"],"range":["106.11","175.9"],"输入范围以内的表单元素":["106.11"],"out":["106.11","206.1"],"输入范围以外的表单元素":["106.11"],"checked":["106.11","181.0"],"选项选中的表单元素":["106.11"],"optional":["106.11","221.4"],"after":["106.12","171.0","219.3","223.2","255.0"],"00100":["106.13"],"选择器":["106.13"],"00010":["106.13"],"类选择器":["106.13"],"伪类选择器":["106.13"],"属性选择器":["106.13"],"的文件大小就会无限增大":["106.14"],"属性很多":["106.14"],"但并不是所有的属性默认都是能继承父元素对应属性的":["106.14"],"那哪些属性存在默认继承的行为呢":["106.14"],"一定是那些不会影响到页面布局的属性":["106.14"],"可以分为如下几类":["106.14"],"字体相关":["106.14"],"family":["106.14"],"又叫文档流":["106.15"],"文档流就像水一样":["106.15"],"能够自适应所在的容器":["106.15"],"一般它有如下几个特性":["106.15"],"块级元素默认会占满整行":["106.15"],"10px":["106.16"],"1px":["106.16","170.15"],"solid":["106.16","195.9"],"eee":["106.16"],"标准盒模型认为":["106.16"],"盒子的实际尺寸":["106.16"],"设置的宽":["106.16"],"高":["106.16"],"是浮动还是定位":["106.17"],"兄弟元素或者子元素以及一些别的因素":["106.17"],"从上图中可以看到视觉格式化模型涉及到的内容很多":["106.17"],"flex":["106.18","106.19","106.21","106.23","179.4"],"grid":["106.18","106.21"],"flow":["106.18"],"建立":["106.19"],"bfc":["106.19","106.20","106.48"],"ifc":["106.19"],"大概有这":["106.20"],"类":["106.20","107.2","173.43"],"absolute":["106.21","106.23","106.37","179.4"],"fixed":["106.21","106.23","179.39"],"定义成块级的非块级元素":["106.21"],"cell":["106.21"],"caption":["106.21","106.41"],"应用场景":["106.21"],"自适应两栏布局":["106.21"],"应用原理":["106.21"],"的区域不会和浮动区域重叠":["106.21"],"高度由":["106.22"],"计算规则来确定":["106.22"],"同个":["106.22"],"下的多个":["106.22"],"高度可能会不同":["106.22"],"当内联级盒子的总宽度少于包含它们的":["106.22"],"其水平渲染规则由":["106.22"],"属性值来决定":["106.22"],"当一个内联盒子超过父元素的宽度时":["106.22"],"它会被分割成多盒子":["106.22"],"文档根元素":["106.23"],"声明":["106.23"],"relative":["106.23","141.8","169.4","170.2","170.15","171.0"],"且":["106.23","181.0"],"值不为":["106.23"],"auto":["106.23","170.2","170.15","179.4"],"的元素":["106.23"],"sticky":["106.23"],"容器的子元素":["106.23"],"或默认的":["106.24"],"颜色":["106.24","106.30","122.0"],"用于指定":["106.24"],"background":["106.24","106.37","170.2","171.0","195.8","195.9","286.37"],"retina":["106.25"],"屏幕下":["106.25"],"它就有":["106.25"],"所以屏幕尺寸一致的情况下":["106.25"],"屏幕分辨率越高":["106.25"],"显示效果就越细腻":["106.25"],"讲到这里":["106.25"],"还有一些相关的概念需要理清下":["106.25"],"设备像素":["106.25"],"pixels":["106.25"],"16px":["106.26"],"当给子元素指定":["106.26"],"2em":["106.26"],"的时候":["106.26","127.12","246.3","249.0"],"经过计算后它的字体大小会是":["106.26"],"32px":["106.26"],"在其他属性中使用是相对于自身的字体大小":["106.26"],"是多少":["106.27"],"doc":["106.27"],"win":["106.27"],"docel":["106.27"],"documentelement":["106.27","286.10","286.48","286.56","286.68"],"resizeevt":["106.27"],"orientationchange":["106.27"],"resize":["106.27","173.48"],"psdwidth":["106.27"],"设计图宽度":["106.27"],"recalc":["106.27"],"clientwidth":["106.27"],"根据":["106.29","175.22","247.2"],"颜色草案":["106.29"],"因为它们来源于":["106.30"],"显卡所显示的颜色集合而被称为":["106.30"],"视频图形阵列色彩":["106.30"],"增加了":["106.30"],"看懂了它你大概就知道该如何用":["106.31"],"写三角形了":["106.31"],"color":["106.31","106.32","195.8","195.9","275.2"],"ffc107":["106.31"],"值":["106.32","127.53","174.8","208.17"],"比如一个带不透明度为":["106.33"],"的红色可以这样写":["106.33"],"ff0000aa":["106.33"],"使用十六进制符号表示颜色的时候":["106.33"],"都是用":["106.33"],"个十六进制表示一个颜色":["106.33"],"如果这":["106.33"],"个字符相同":["106.33"],"还可以缩减成只写":["106.33"],"红色":["106.33"],"f00":["106.33","195.9"],"带":["106.33"],"为绿色":["106.34"],"为蓝色":["106.34"],"是指色彩的纯度":["106.34"],"越高色彩越纯":["106.34"],"低则逐渐变灰":["106.34"],"取":["106.34"],"的数值":["106.34"],"为灰色":["106.34"],"print":["106.35"],"都支持哪些设备类型":["106.35"],"适用于所有设备":["106.35"],"适用于在打印预览模式下在屏幕上查看的分页材料和文档":["106.35"],"则只能在它及它的子元素下才可以使用":["106.36"],"自定义属性必须通过":["106.36"],"的格式申明":["106.36"],"000":["106.37","152.3","284.16"],"webkit":["106.37","171.0"],"scaley":["106.37"],"因为浮动元素会脱离正常的文档流":["106.38"],"并不会占据文档流的位置":["106.38"],"所以如果一个父元素下面都是浮动元素":["106.38"],"个子元素":["106.39"],"child":["106.39","156.10"],"且它们都是左浮动的":["106.39"],"这个时候":["106.39","115.0"],"如果没有设置高度的话":["106.39"],"因为浮动造成了高度坍塌":["106.39"],"both":["106.40"],"这种写法的核心原理就是通过":["106.40"],"u":["106.41","184.32"],"dl":["106.41","172.0"],"dt":["106.41","172.0"],"dd":["106.41","130.3","172.0"],"ol":["106.41","172.0"],"ul":["106.41","172.0"],"fieldset":["106.41"],"form":["106.41","172.0"],"label":["106.41","122.22"],"legend":["106.41"],"tbody":["106.41"],"tfoot":["106.41"],"thead":["106.41"],"tr":["106.41","120.2"],"th":["106.41","147.5"],"td":["106.41","122.10"],"article":["106.41"],"aside":["106.41"],"canvas":["106.41"],"details":["106.41","123.1"],"embed":["106.41"],"figure":["106.41"],"figcaption":["106.41"],"footer":["106.41"],"单行文本超出省略":["106.42"],"多行文本超出省略":["106.42"],"单行的文本":["106.43"],"且父级元素上需要这样设置样式":["106.44"],"margin":["106.45","170.2","170.15","195.9","286.55"],"writing":["106.46"],"mode":["106.46","228.3","239.3","241.7"],"方案看后让我惊呼":["106.46"],"还有这种操作":["106.46"],"学到了学到了":["106.46"],"float":["106.48","179.2"],"overflow":["106.48","170.15","195.8"],"圣杯布局":["106.49"],"方法二":["106.49"],"方法一":["106.50"],"业务":["107.1"],"通过适配器模式可以让当前":["107.2"],"不改变的情况下正常使用另一个":["107.2"],"在以":["107.2"],"为基础的语言中有两种实现方式":["107.2"],"一种是通过组合的方式":["107.2"],"适配器类内部包含原对象的实例":["107.2"],"一种是通过类继承":["107.2"],"适配器类继承原":["107.2"],"可以看下":["107.2"],"uml":["107.2"],"类图":["107.2"],"20220213124112500":["107.2"],"左边的":["107.2"],"内部拥有":["107.2"],"adaptee":["107.2"],"的实例":["107.2","173.69","181.0","207.16"],"右边的":["107.2"],"类直接继承":["107.2"],"适配器会将":["107.2"],"我们只需要通过这个钩子将接口返回的数据进行包装即可":["107.3"],"seems":["107.4"],"on":["107.4","109.6","111.2","118.2","138.22","138.42","159.9","181.0","195.4"],"cross":["107.4"],"used":["107.4","243.1"],"区别在于它们的意图不同":["107.5"],"super":["108.2","127.55","157.0"],"调用父类构造函数":["108.2"],"调用父类方法":["108.2"],"加珍珠":["108.2"],"添加椰果":["108.2"],"withcoconut":["108.2"],"加椰果":["108.2"],"让我们测试一下":["108.2"],"增加路由字段":["108.3"],"上报数据":["108.3"],"typeof":["108.3","156.13","183.4","187.0","252.3","286.15","286.61","288.4"],"再具体点":["108.4"],"代理模式的话":["108.4"],"对象之间的依赖关系已经写死了":["108.4"],"原始对象":["108.4"],"新增代理对象":["108.4"],"a1":["108.4"],"generateshareimage":["109.1"],"generateconfig":["109.1"],"try":["109.1","166.3","195.4","206.16","207.12","286.54"],"getdata":["109.1"],"solve":["109.4"],"20220108105835662":["109.6"],"原对象":["109.6"],"realsubject":["109.6"],"对象都继承了":["109.6"],"这个接口":["109.6"],"客户端":["109.6"],"client":["109.6"],"调用":["109.6"],"doaction":["109.6"],"先经过代理对象":["109.6"],"然后由":["109.6"],"做一些额外的操作":["109.6"],"最终再委托给":["109.6"],"进行执行":["109.6"],"看一个":["109.6"],"java":["109.6","173.28"],"的示例":["109.6"],"interface":["109.6","110.2","112.2","156.19","184.20"],"void":["109.6","110.2","156.17","156.19","156.20","156.21","166.6","166.7","255.0"],"displayimage":["109.6"],"system":["109.6","175.12"],"realimage":["109.6"],"getnewparams":["109.7"],"params":["109.7","283.7"],"加入":["109.7"],"newparams":["109.7"],"address":["110.1","125.3","141.4"],"arraylist":["110.2"],"提取":["110.2"],"的公共部分":["110.2"],"abstract":["110.2"],"detach":["110.2"],"notifyobserver":["110.2"],"具体的公众号":["110.2"],"提供写文章和得到文章":["110.2"],"windliang":["110.2"],"writepost":["110.2"],"observers":["110.3","111.1"],"注册观察者":["110.3","111.1"],"提供了不同的方法供我们调用":["111.1"],"20220130170413954":["111.2"],"发布订阅模式的话":["111.2"],"引入一个中间平台进行注册和通知":["111.2"],"相当于从":["111.2"],"中解耦出来":["111.2"],"20220130171806687":["111.2"],"观察者通过":["111.2"],"eventbus":["111.2","181.0"],"注册事件":["111.2"],"发射事件":["111.2"],"来向观察者更新":["111.2"],"接下来实现一个简单的":["111.2"],"observersmap":["111.2"],"listen":["111.2","138.32","177.13"],"openmoneypop":["112.1"],"waitreward":["112.1"],"opensharemoneypop":["112.1"],"thirdstrategy":["112.2"],"classes":["112.2"],"that":["112.2","206.12","214.1","219.6"],"implement":["112.2"],"concrete":["112.2"],"strategy":["112.2"],"should":["112.2","206.1","219.6"],"implements":["112.2"],"styletype":["112.3"],"modulename":["112.3"],"主接口异常":["112.3"],"让我们看一下相应的源码":["112.4"],"首先是":["112.4"],"会定义很多校验规则":["112.4"],"类型":["112.4","184.6"],"类型等等":["112.4"],"相当于很多策略":["112.4"],"20220106090411041":["112.4"],"然后是上边截图中的":["112.4"],"将这些策略导出":["112.4"],"method":["112.4","122.19"],"而容器化则成为中间的必要桥梁":["113.0"],"本节我们就来探索一下":["113.0"],"的神秘世界":["113.0"],"从零到一掌握":["113.0"],"结果":["113.1"],"住了一段时间":["113.1"],"心血来潮想搬到海边去":["113.1"],"这时候按以往的办法":["113.1"],"我只能去海边":["113.1"],"再次搬石头":["113.1"],"容器可以将代码与配置文件和相关依赖库进行打包":["113.2"],"从而确保在任何环境下的运行都是一致的":["113.2"],"高资源利用率":["113.2"],"容器提供进程级的隔离":["113.2"],"因此可以更加精细地设置":["113.2"],"和内存的使用率":["113.2"],"进而更好地利用服务器的计算资源":["113.2"],"快速扩展":["113.2"],"每个容器都可作为单独的进程予以运行":["113.2"],"并且可以共享底层操作系统的系统资源":["113.2"],"这样一来可以加快容器的启动和停止效率":["113.2"],"区别与联系":["113.2"],"虚拟机虽然可以隔离出很多":["113.2"],"子电脑":["113.2"],"容器是完全使用沙箱机制":["113.3"],"相互之间不会有任何接口":["113.3"],"技术的":["113.3"],"三大核心概念":["113.3","113.4"],"是应用容器引擎":["113.4"],"容器":["113.4"],"container":["113.4","150.2","190.0","195.9","222.5","232.4","286.34"],"配置镜像加速":["113.5"],"engine":["113.5"],"写入配置":["113.5"],"using":["113.6","219.6"],"tag":["113.6","133.5","206.4","286.60"],"pulling":["113.6"],"library":["113.6"],"8559a31e96f4":["113.6"],"complete":["113.6"],"8d69e59170f7":["113.6"],"3f9f1ec1d262":["113.6"],"d1f5ff4f210d":["113.6"],"1e22bfa8652e":["113.6"],"digest":["113.6"],"sha256":["113.6"],"21f32f6c08406306d822a0e6e8b7dc81f53f336570e852e25fbe1e3e3d0d0133":["113.6"],"downloaded":["113.6"],"newer":["113.6"],"io":["113.6"],"如果你出现这样的异常":["113.6"],"请确认":["113.6"],"实例是否正常运行":["113.6"],"cannot":["113.6","173.1","173.85"],"connect":["113.6"],"daemon":["113.6"],"at":["113.6","140.0","206.1","214.1"],"unix":["113.6"],"sock":["113.6"],"压缩包会解压":["113.7"],"可以访问网络上的文件":["113.7"],"会自动下载":["113.7"],"dest":["113.7"],"文件到容器中的":["113.7"],"目录下":["113.7"],"功能和":["113.7"],"一样":["113.7","173.28"],"只是复制":["113.7"],"不会解压或者下载文件":["113.7"],"启动容器后执行的命令":["113.7"],"不一样":["113.7"],"是在构建镜像是要运行的命令":["113.7"],"过程中整理的":["113.8"],"请尽量遵循如下准则":["113.8"],"使应用部署更加轻量":["114.0"],"的运行环境服务器":["114.3"],"的守护进程":["114.3"],"desktop下载":["114.5"],"mac":["114.6"],"因此可以很方便的使用":["114.6"],"给项目起个名字":["114.8"],"叫做docker":["114.8"],"vue根目录下执行":["114.9"],"默认会启动":["114.10"],"控制台拉取":["114.10"],"koi8":["114.11"],"指定该镜像是基于":["114.12"],"出现上面的信息":["114.13"],"端口":["114.15"],"这样外网就能通过本机的":["114.15"],"也可以使用curl":["114.16"],"之后输入我们的账号密码":["114.17"],"进行登录":["114.17"],"推送镜像之前":["114.17"],"需要打一个":["114.17"],"内核的特性":["114.18"],"它由以下":["114.19"],"组成":["114.19"],"加入拉取一个":["114.21"],"会使用当前目录的":["114.22"],"dockerfile":["114.22"],"应用构建的":["114.23"],"的各个指令可参考":["114.23"],"在多阶段构建时会用到":["114.24"],"chown":["114.25"],"的文件系统":["114.26"],"它会在当前镜像的顶层新增一层":["114.26"],"preferred":["114.27"],"minutes":["114.29","156.24"],"ago":["114.29"],"up":["114.29","148.0"],"498e7d74fb4f":["114.30"],"如果是":["114.32"],"v1":["114.32","119.10","195.4"],"则需要通过":["114.32"],"lazy":["115.0"],"全新":["115.0"],"ssr":["115.0","156.16","219.10","227.1"],"架构":["115.0"],"suspense":["115.0","214.1","218.4","228.2","232.2"],"reactjs":["115.0"],"06":["115.0"],"版本号分析可能出现的问题":["115.0"],"版本即将突破100":["115.0"],"这个问题不容忽视":["115.0"],"发布了":["115.0"],"个令人激动的瞬间":["115.0"],"同时也在推特上发起了":["115.0"],"100coolwebmoments":["115.0"],"活动":["115.0"],"将是最后一个默认支持未删减的":["115.0"],"字符串的版本":["115.0"],"推荐大家用新的":["115.0"],"hints":["115.0"],"字符串":["115.0","179.24"],"有风险也有机遇":["115.0"],"shadowrealm":["115.0"],"statge3":["115.0"],"是一个新的":["115.0"],"提案":["115.0"],"目前已进入":["115.0"],"它允许一个":["115.0"],"运行时创建多个高度隔离的":["115.0"],"运行环境":["115.0"],"realm":["115.0"],"每个":["115.0"],"具有独立的全局对象和内建对象":["115.0"],"实例都有自己独立的运行环境":["115.0"],"它提供了两种方法让我们来执行运行环境中的代码":["115.0"],"evaluate":["115.0","152.20"],"同步执行代码字符串":["115.0"],"eval":["115.0","173.27","173.98","179.13"],"importvalue":["115.0"],"返回一个":["115.0"],"promise":["115.0","166.6","166.7","166.9","173.30","173.52","173.65","176.12","179.29","217.2","256.2","283.10","294.1"],"异步执行代码字符串":["115.0"],"sr":["115.0"],"assert":["115.0","241.7","241.9"],"ab":["115.0"],"abcd":["115.0"],"04":["115.0"],"2ality":["115.0"],"sha":["115.0"],"smpnjn":["115.0"],"futu":["115.0"],"change":["115.0","181.0","205.11","207.8","283.11"],"by":["115.0","219.10","220.2"],"提案进入":["115.0"],"stage3":["115.0"],"目前已经处于":["115.0"],"该提案为数组新增了四个非破坏性":["115.0"],"不改变原数组":["115.0"],"tosorted":["115.0"],"的非破坏性版本":["115.0"],"toreversed":["115.0"],"reverse":["115.0","179.33"],"对数组的某个元素赋值操作的非破坏性版本":["115.0"],"tospliced":["115.0"],"splice":["115.0"],"新增比":["115.0"],"更安全的":["115.0"],"fencedframe":["115.0"],"frames":["115.0"],"是一项":["115.0"],"隐私沙盒":["115.0"],"它建议顶级站点应该对数据进行分区":["115.0"],"从":["115.0","184.32","186.3"],"版本开始对":["115.0"],"提供支持":["115.0"],"它是一个新的":["115.0"],"使用方式和":["115.0"],"从对比上来看":["115.0"],"还是要更灵活的":["115.0"],"是无法取代":["115.0"],"但是当我们需要在同一页面上显示来自不同顶级分区的数据时":["115.0"],"建议使用":["115.0"],"作为更私有的嵌入框架":["115.0"],"如果嵌入的网页是受信任的":["115.0"],"还是用":["115.0"],"wicg":["115.0"],"privac":["115.0"],"priority":["115.0","206.1","206.9","206.15","256.4"],"可控制网页资源加载优先级":["115.0"],"正式发布了":["115.0"],"用于指定页面资源的加载优先级":["115.0"],"即":["115.0","151.2"],"fetchpriority":["115.0"],"帮助浏览器根据优先级优化加载顺序":["115.0"],"从而优化页面加载体验":["115.0"],"当浏览器开始解析网页":["115.0"],"并开始下载图片":["115.0"],"等资源的时候":["115.0"],"浏览器会为每个资源分配一个代表资源下载优先级的":["115.0"],"标志":["115.0"],"而默认的资源下载顺序就取决于这个优先级标志":["115.0"],"另外浏览器还给我们提供了一些诸如":["115.0"],"defer":["115.0","148.1","175.10"],"preload":["115.0"],"等主动干预资源下载优先级的能力":["115.0"],"但是有些场景还是满足不了":["115.0"],"比如网页首屏有多张轮播图":["115.0"],"我们只希望提高第一张图片下载的优先级":["115.0"],"资源默认有相同的优先级":["115.0"],"但是并不是所有":["115.0"],"资源都是一样重要的":["115.0"],"就派上用场了":["115.0"],"如何控制web资源加载的优先级":["115.0"],"计划支持":["115.0"],"useevent":["115.0"],"随后夭折":["115.0"],"的核心开发者":["115.0"],"dan":["115.0"],"增加了一项新的提案":["115.0"],"目的是为了解决下面这个场景":["115.0"],"chat":["115.0"],"settext":["115.0"],"usestate":["115.0","178.6"],"每次":["115.0"],"变化都会产生新的函数引用":["115.0"],"onclick":["115.0","127.55","207.2","207.5","207.6"],"usecallback":["115.0"],"sendmessage":["115.0"],"sendbutton":["115.0"],"当我们使用":["115.0"],"包裹事件处理函数时":["115.0"],"每次状态发生变化":["115.0"],"都会产生一个新的引用":["115.0"],"永远是同一个函数引用":["115.0"],"回退":["116.1"],"的同时保留修改内容":["116.1"],"列出repository配置":["116.2"],"tool":["116.4","219.6"],"vimdiff":["116.4"],"从远程仓库中抓取本地仓库中没有的更新":["117.1"],"fetch":["117.1","178.7"],"如git":["117.1"],"使用fetch只是将远端数据拉到本地仓库":["117.1"],"并不自动合并到当前工作分支":["117.1"],"只能人工合并":["117.1"],"如果设置了某个分支关联到远程仓库的某个分支的话":["117.1"],"将被":["117.2"],"忽略":["117.2","130.2"],"忽略所有":["117.2"],"结尾的文件":["117.2","154.16"],"branch":["118.2"],"查看第一个储藏做了哪些改动":["118.3"],"并不是改动详情":["118.3"],"num":["118.4"],"此时新分支应用的stash代码进了暂存区":["118.6"],"提交工作区中指定文件到暂存区":["119.3"],"可以使用stashing和分支来处理":["119.4"],"隐藏当前变更":["119.4"],"以便能够切换分支":["119.4"],"stash":["119.4"],"查看当前所有的储藏":["119.4"],"应用最新的储藏":["119.4"],"并将已改名文件提交到暂存区":["119.5"],"将所有已经使用git管理过的文件暂存后一并提交":["119.8"],"使用特定的搜索模式列出符合条件的标签":["119.10"],"例如只对1":["119.10"],"2系列的版本感兴趣":["119.10"],"创建一个含附注类型的标签":["119.10"],"需要加":["119.10"],"a参数":["119.10"],"显示本地仓库的所有分支":["119.11"],"查看各个分支最后一个提交对象的信息":["119.11"],"查看哪些分支已经合并到当前分支":["119.11"],"merged":["119.11"],"查看当前哪些分支还没有合并到当前分支":["119.11"],"不同的":["120.0"],"渲染模式":["120.0"],"会影响浏览器对":["120.0"],"代码甚至":["120.0"],"不基于":["120.1"],"w3":["120.2"],"html4":["120.2"],"transitional":["120.2","120.3","279.7"],"过渡":["120.2","120.3"],"的过渡":["120.4"],"没有":["120.4"],"那么许多旧网站必然受到影响":["120.5"],"标准的盒模型":["120.6"],"title":["121.0","134.4"],"之一表示的任何元数据":["121.0"],"是不是感觉看起来很抽象":["121.0"],"以头条和taobao的":["121.2"],"某些搜索引擎在遇到这些关键字时":["121.3"],"中自动生成":["121.4"],"的代码片段时":["121.4"],"会自动生成":["121.4"],"可以为":["121.5"],"它是用来是做ie浏览器适配的":["121.7"],"edge":["121.7","168.3","168.7","286.47"],"告诉浏览器":["121.7"],"以当前浏览器支持的最新版本来渲染":["121.7"],"ie9就以ie9版本来渲染":["121.7"],"开发人员按照":["122.0"],"标准制作网页":["122.0"],"他们可以很容易了解彼此的编码":["122.0"],"遵守标准的web页面可以使得搜索引擎更容易访问并收入网页":["122.0"],"也可以更容易转换为其他格式":["122.0"],"并更易于访问程序代码":["122.0"],"如javascript和dom":["122.0"],"web标准的三大组成部分":["122.0"],"结构用于对网页元素的整理和分类":["122.0"],"主要包括xml和html两部分":["122.0"],"比如一只没毛的鸟":["122.0"],"结构最重要":["122.0"],"表现用于设置网页元素的板式":["122.0"],"h1":["122.1"],"h6":["122.1","172.0"],"我是一个段落标签":["122.2"],"是单标签":["122.3"],"br":["122.4"],"efg":["122.4"],"加粗":["122.5"],"优先考虑strong":["122.5"],"语义更加强烈":["122.5"],"em":["122.5"],"图片高度":["122.6"],"src是img标签的必须属性":["122.6"],"用于指定图像文件的路径和文件名":["122.6"],"注意盘符路径的斜杠":["122.7"],"href":["122.8","279.9"],"跳转目标":["122.8"],"目标窗口的弹出方式":["122.8"],"快捷加注释":["122.9"],"常用特殊字符":["122.9"],"单元格内容":["122.10"],"表格属性":["122.11"],"属性值":["122.11"],"两大部分":["122.12"],"thead标签":["122.12"],"表格的头部区域":["122.12"],"所有组成的区域":["122.12"],"目标单元格":["122.13"],"写合并代码":["122.13"],"跨行":["122.13"],"最上侧单元格为目标单元格":["122.13"],"整齐":["122.14"],"整洁":["122.14"],"列表项2":["122.15","122.16"],"列表项1":["122.16"],"名词解释1":["122.17"],"名词解释2":["122.17"],"收集用户资料":["122.18"],"此时就需要表单":["122.18"],"url地址":["122.19"],"提交方式":["122.19"],"表单域名称":["122.19"],"定义提交按钮":["122.21"],"提交按钮会把表单数据发送到服务器":["122.21"],"定义重置按钮":["122.21"],"重置按钮会清除表单中所有数据":["122.21"],"定义可点击的按钮":["122.21"],"通常用于通过javascript启动脚本":["122.21"],"文件域":["122.21"],"定义输入字段和":["122.21"],"浏览":["122.21"],"转到或选择对应的表单元素上":["122.22"],"来增加用户体验":["122.22"],"选项1":["122.23"],"textarea":["122.24","181.0"],"rows":["122.24"],"circle":["123.1","286.37"],"cup":["123.1"],"coffee":["123.1"],"uzi08fh85fvfb0ycz9de":["123.1"],"gif":["123.1","150.2","190.1","190.5","284.23","286.51"],"summary":["123.1","286.55"],"并且用于创建":["123.1"],"可折叠的内容":["123.1"],"并且无需使用任何javascript":["123.1"],"这是创建":["123.1"],"下拉列表":["123.1"],"的语义方法":["123.1"],"执行js":["124.0"],"都在其中运行":["124.0"],"如果使用同步的方式":["124.0"],"就极有可能导致主线程产生阻塞":["124.0"],"浅拷贝得到的对象修改后对原始对象的影响":["125.0"],"对象赋值":["125.0"],"obj1":["125.0","125.2","125.3","125.7"],"浪里行舟":["125.0"],"arr":["125.0","125.4","174.12","174.16","179.62","182.1","195.9","285.1","285.2","285.3"],"obj2":["125.0","127.43"],"阿浪":["125.0"],"person":["125.1"],"kobe":["125.1","125.3"],"lodash":["125.2","125.7"],"username":["125.4","125.5"],"duncan":["125.6"],"deepcopy":["125.8"],"object1":["125.8"],"objectn":["125.8"],"第一个参数为true":["125.8"],"就是深拷贝":["125.8"],"weakmap":["125.9","130.8"],"如果是null或者undefined我就不进行拷贝操作":["125.9"],"即便两个不同的域名指向同一个ip地址":["126.2"],"也非同源":["126.2"],"url的组成":["126.2"],"同源策略限制内容有":["126.2"],"indexeddb":["126.2"],"连接建立好了之后":["126.3"],"之间的双向通信就与":["126.3"],"无关了":["126.3"],"原生websocket":["126.3"],"api使用起来不太方便":["126.3"],"createserver":["126.4","159.13"],"直接和浏览器直接交互":["126.4"],"需要设置cors":["126.4"],"的首部字段":["126.4"],"writehead":["126.4"],"修改cookie里域名":["126.5"],"htm":["126.5"],"当用webpack":["126.5"],"server等中间件代理接口访问nignx时":["126.5"],"此时无浏览器参与":["126.5"],"故没有同源限制":["126.5"],"下面的跨域配置可不启用":["126.5"],"都是":["126.6"],"而c":["126.6"],"html是":["126.6"],"html收到hash值后":["126.7"],"再把hash值传递给b":["126.7"],"最后b":["126.7"],"html将结果放到a":["126.7"],"html的hash值中":["126.7"],"同样的":["126.7"],"html和b":["126.7"],"html是同域的":["126.7"],"两个页面都通过js强制设置document":["126.8"],"domain为基础主域":["126.8"],"就实现了同域":["126.8"],"我们看个例子":["126.8"],"zf1":["126.8"],"json以及在对象属性上更完整的反射":["127.1"],"2011年6月":["127.1"],"ecmascript标5":["127.1"],"1版形式上完全一致于国际标准iso":["127.1"],"iec":["127.1"],"2015年6月":["127.1"],"ecmascript":["127.1"],"es2015":["127.1"],"第":["127.1","176.18"],"这5个阶段如下":["127.2"],"strawperson":["127.2"],"只要是tc39成员或者贡献者":["127.2"],"都可以提交想法":["127.2"],"则会有":["127.3"],"因为这三个关键字创建是不一样的":["127.3"],"区别如下":["127.3"],"information":["127.4"],"我们写函数一般是":["127.5"],"my":["127.7"],"y":["127.10","127.43","147.2","170.6","214.2","279.8","284.21"],"bird":["127.11"],"peet":["127.11"],"someobject":["127.11"],"构造函数内部的代码是立即执行的":["127.12"],"finifsh":["127.12"],"typedarray":["127.13","127.37"],"对象等等":["127.13"],"每个从":["127.14"],"返回的symbol值都是唯一的":["127.14"],"一个symbol值能作为对象属性的标识符":["127.14"],"这是该数据类型仅有的目的":["127.14"],"例子如下":["127.14","127.46","127.47","127.48","127.50"],"它允许你定义一个包含自有迭代算法的函数":["127.15"],"同时它可以自动维护自己的状态":["127.15"],"生成器函数使用":["127.15"],"语法编写":["127.15"],"最初调用时":["127.15"],"生成器函数不执行任何代码":["127.15"],"而是返回一种称为generator的迭代器":["127.15"],"通过调用生成器的下一个方法消耗值时":["127.15"],"generator函数将执行":["127.15"],"直到遇到yield关键字":["127.15"],"可以根据需要多次调用该函数":["127.15"],"并且每次都返回一个新的generator":["127.15"],"对象是一组键":["127.17"],"值对的集合":["127.17"],"其中的键是弱引用的":["127.17"],"其键必须是对象":["127.17"],"而值可以是任意的":["127.17"],"跟":["127.17"],"的区别与":["127.17"],"weakset":["127.17","130.8"],"的区别相似":["127.17"],"具体代码如下":["127.17"],"wm1":["127.17"],"symbol":["127.21","130.3","132.2"],"修饰符":["127.22"],"最大安全数值":["127.23"],"parseint":["127.23","159.2","159.5","284.84"],"返回转换值的整数部分":["127.23"],"parsefloat":["127.23"],"返回转换值的浮点数部分":["127.23"],"isfinite":["127.23"],"是否为有限数值":["127.23"],"返回第一个符合条件的成员":["127.24"],"array1":["127.25"],"代码如下":["127.26","127.30","196.10"],"2f804":["127.27"],"createelement":["127.28","179.51","286.1","286.9","286.71","296.2"],"img":["127.28","147.5","150.2"],"there":["127.28"],"has":["127.28","204.3","256.8","286.69"],"been":["127.28","204.3","206.5"],"循环枚举原型链中的属性":["127.29"],"循环还会枚举原型链中的属性":["127.30"],"str1":["127.31","127.32"],"breaded":["127.32"],"函数调用":["127.33"],"它们都可以用来在共享内存":["127.34"],"exchange":["127.35"],"将数组中指定的元素更新为给定的值":["127.35"],"并返回该元素更新前的值":["127.35"],"load":["127.35"],"返回数组中指定元素的值":["127.35"],"将指定位置上的数组元素与给定的值相或":["127.35"],"writable":["127.36"],"nodelist":["127.37"],"当中仍然会体现出来":["127.38"],"它们将以":["127.38"],"元素的形式存在于":["127.38"],"zero":["127.39"],"positive":["127.39"],"lookahead":["127.39"],"零宽正向否定断言":["127.39"],"negative":["127.39"],"匹配所有空格":["127.40"],"white":["127.40","171.0"],"匹配各种文字的所有字母":["127.40"],"等同于":["127.40"],"版的":["127.40"],"alphabetic":["127.40"],"0085":["127.41"],"baz":["127.43","184.33"],"fulfilled":["127.44"],"最终都会执行":["127.44"],"world":["127.46"],"的反函数":["127.47"],"desc":["127.48"],"test1test2":["127.49"],"match":["127.49","241.3","241.9"],"如果是原生函数则返回你控制台看到的效果":["127.50"],"es10之前":["127.51"],"在以往的版本中":["127.52"],"我们有以下的弊端":["127.52"],"大于2的53次方的整数":["127.52"],"无法保持精度":["127.52"],"超过2的1024次方的数值":["127.52"],"但是在es10之后":["127.54"],"我们有动态":["127.54"],"它不需要依赖":["127.54"],"的script标签":["127.54"],"clicked":["127.55"],"constructor":["127.55","131.7","173.39","173.43","173.68","179.11","184.11"],"的源码中":["128.0"],"它开启一个不会结束的":["128.0"],"循环不仅可以遍历数字键名":["129.1"],"还会遍历原型上的值和手动添加的其他键":["129.1"],"特别情况下":["129.1"],"遍历顺序有可能不是按照实际数组的内部顺序":["129.3"],"使用for":["129.3"],"就可以用for":["129.4"],"of循环遍历它的成员":["129.4"],"of循环内部调用的是数据结构的symbol":["129.4"],"iterator方法":["129.4"],"h":["129.6","195.4","204.2"],"语句遍历可迭代对象定义要迭代的数据":["129.7"],"内建的可迭代对象定义要迭代的数据为键值":["129.7"],"这个可迭代对象可以自己更改":["129.7"],"不过如非必要最好不要这么做":["129.7"],"一般用于遍历对象自身的和继承的可枚举属性":["129.7"],"以及对象从构造函数原型中继承的属性":["129.7"],"常用于遍历数组":["129.8"],"对跳过":["130.2"],"它们进行序列化":["130.2"],"序列化结果就是什么值":["130.4"],"并且忽略其他属性的值":["130.4"],"的值":["130.5","173.28","173.65","173.94"],"格式的数值及":["130.6"],"都会被当做":["130.6"],"字符串的包装对象在序列化过程中会自动转换成对应的原始值":["130.7"],"仅会序列化可枚举的属性":["130.8"],"对象之间形成循环引用":["130.9"],"形成闭环":["130.9"],"封装一个深拷贝的函数":["130.9"],"deepclone":["130.9","173.64"],"函数类似就是数组方法":["130.12"],"最多10个空格":["130.13"],"newarr":["131.1","131.3"],"防止稀疏数组":["131.2"],"throw":["131.8","131.9","173.1","173.85","217.7","286.69"],"typeerror":["131.8","131.9","131.10","132.2","132.3","173.1","173.85"],"settimeout":["132.1","165.2","167.4","168.24","205.1","205.12"],"reso":["132.1"],"reason":["132.1","204.3"],"iterable":["132.2","132.3"],"count":["132.3","132.4","154.18","156.18","156.24","158.3","164.3"],"broadcastchannel":["133.1"],"alienzhou":["133.1"],"各个页面可以通过onmessage来监听被广播的消息":["133.1"],"onmessage":["133.1"],"注册成功":["133.2"],"js是对应的":["133.2"],"本身并不自动具备":["133.2"],"广播通信":["133.2"],"的功能":["133.2","178.6"],"需要我们添加些代码":["133.2"],"将其改造成消息中转站":["133.2"],"parse":["133.3","140.5"],"newvalue":["133.3"],"receive":["133.3"],"启动方式非常简单":["133.4"],"构造函数的第二个参数是":["133.4"],"名称":["133.4","163.0"],"也可以留空":["133.4"],"sharedworker":["133.4"],"util":["133.4","141.3"],"ctc":["133.4"],"在该":["133.4"],"中支持":["133.4"],"onupgradeneeded":["133.5"],"srcelement":["133.5"],"oldversion":["133.5"],"objectstorenames":["133.5"],"contains":["133.5"],"createobjectstore":["133.5"],"keypath":["133.5"],"createindex":["133.5"],"unique":["133.5"],"存储数据":["133.5"],"savedata":["133.5"],"mydata":["133.6"],"fromopenner":["133.6"],"postmessage":["133.6","179.34"],"通信非常简单":["133.7"],"首先需要在页面中监听":["133.7"],"发来的消息":["133.7"],"做相应的业务处理":["133.7"],"业务页面代码":["133.7"],"message":["133.7","157.0","181.0","184.11","191.1","206.16"],"do":["133.7","206.1"],"something":["133.7","181.0"],"storageevent":["133.9"],"共享存储模式":["133.9"],"从而破坏了用户浏览体验":["134.1"],"同时本次浏览的页面内容在用户下次使用url访问时将无法重新呈现":["134.1"],"因此我们的路由主要是":["134.2"],"通过监听事件":["134.2"],"并利用js实现动态改变网页内容":["134.2"],"监听":["134.3","147.5","151.13"],"hashchange":["134.3"],"当散列值改变时":["134.3"],"可以通过":["134.3","177.6"],"hash":["134.3","154.16","175.10","192.4"],"来获取和设置hash值":["134.3"],"hash值的变化会直接反应到浏览器地址栏":["134.3"],"相当于history":["134.4"],"刷新当前页面":["134.4"],"移动到以前访问过的页面时":["134.4"],"页面通常是从浏览器缓存之中加载":["134.4"],"而不是重新要求服务器发送新的网页":["134.4"],"pushstate":["134.4"],"该方法用于在历史中添加一条记录":["134.4"],"方法不会触发页面刷新":["134.4"],"只是导致":["134.4"],"对象发生变化":["134.4"],"地址栏会有变化":["134.4"],"该方法接受三个参数":["134.4"],"依次为":["134.4"],"是一个对象":["134.4","181.0"],"方法可以将该对象内容传递到新页面中":["134.4"],"如果不需要这个对象":["134.4"],"此处可以填":["134.4"],"指标题":["134.4"],"几乎没有浏览器支持该参数":["134.4"],"传一个空字符串比较安全":["134.4"],"新的网址":["134.4"],"必须与当前页面处在同一个域":["134.4"],"无法做到精确计时":["135.0"],"操作系统的计时函数本身就有少量偏差":["135.0"],"由于js":["135.0"],"的计时器最终调用的是操作系统的函数":["135.0"],"也就携带了这些偏差":["135.0"],"不能直接用于url编码":["136.1"],"它的真正作用是返回一个字符的unicode编码值":["136.1"],"这些在encodeuri":["136.6"],"中不被编码的符号":["136.6"],"张三":["136.7","173.9"],"aaa":["136.7"],"aa":["136.8"],"well":["137.0"],"owner":["137.0"],"inodes":["137.0"],"their":["137.0","206.9"],"assigned":["137.0"],"names":["137.0"],"includes":["137.0","219.6","235.4","245.3","286.69"],"an":["137.0","148.2","205.6","206.12","212.1","218.5","228.1"],"itself":["137.0"],"its":["137.0","215.2","216.3","256.4"],"意思就是":["137.0"],"inode是类unix文件系统中用来描述文件系统对象":["137.0"],"比如文件或文件夹":["137.0"],"的一种数据结构":["137.0"],"文件重命名或文件移动不会改变链接指向":["137.1"],"删除":["137.2"],"hard":["137.2"],"因为硬链接是共用一个inode":["137.4"],"文件共享":["137.5"],"多人共同维护同一份文件时":["137.5"],"可以通过硬链接的方式":["137.5"],"可以通过更改软链接的指向":["137.6"],"从而迅速切换程序版本":["137.6"],"这里提到了python版本的切换可以这么做":["137.6"],"动态库版本管理":["137.6"],"yum":["138.3"],"ef":["138.6"],"enable":["138.8"],"可用":["138.9"],"重载":["138.10"],"systemctl":["138.11","138.12","138.13"],"配置后需执行":["138.14"],"文件默认配置":["138.20"],"通用日志格式的本地时间":["138.21"],"alias":["138.22"],"autoindex":["138.22"],"开启静态资源目录":["138.22"],"可访问文件根目录":["138.24"],"deeruby":["138.26"],"proxy":["138.26","177.13","219.3","219.6","248.1","251.0","286.69"],"pass":["138.26","177.13"],"cors":["138.27"],"详见笔者":["138.27"],"其含义为用户访问":["138.29"],"underline":["138.29"],"full":["138.31"],"chain":["138.31"],"pem":["138.31"],"文件路径":["138.31"],"permanent":["138.33"],"永久重定向":["138.33"],"redirect":["138.33"],"允许没有":["138.34"],"字段的请求访问资源":["138.34"],"blocked":["138.34"],"允许非":["138.34"],"开头的请求访问资源":["138.34"],"options":["138.36","154.10","154.17","156.19","175.4","177.8","217.1","219.6","221.1","225.4","229.0","241.8","241.9","296.1"],"这四种请求":["138.36"],"使用其余请求返回403":["138.36"],"7d":["138.37"],"agent":["138.38"],"根据页面大小和加载时间长短智能地进行负载均衡":["138.39"],"响应时间短的优先分配":["138.39"],"remtoe":["138.40"],"1m":["138.40"],"rate":["138.40"],"10r":["138.40"],"原始服务器":["139.1"],"然后代理向原始服务器转交请求并将获得的内容返回给客户端":["139.1"],"特点":["139.2","173.56","176.11"],"代理服务器和源站则处于同一个局域网内":["139.2"],"完成工作任务":["139.3"],"从而提高了数据的吞吐量":["139.3"],"更好的做法是放在相应的缓冲服务器上":["139.4"],"动态请求由相应的后端服务器处理":["139.4"],"基本代码示例":["139.4"],"中是没有":["140.0"],"执行该文件":["140.0"],"会发现报错信息如下":["140.0"],"请使用系统默认":["140.0"],"执行命令":["140.0"],"referenceerror":["140.0"],"defined":["140.0"],"yd":["140.1"],"fun":["140.2"],"引入vm模块":["140.3"],"不需要安装":["140.3"],"自建模块":["140.3"],"注意使用的时候不要在结尾添加":["140.4"],"当前文件所在文件夹的路径":["140.4"],"当前文件的绝对路径":["140.4"],"挂载静态属性":["140.5"],"wrapper":["140.5"],"里面定义一下这个函数的字符串":["140.5"],"是一个数组":["140.5"],"数组的第一个元素就是函数的参数部分":["140.5"],"其中有":["140.5"],"都是模块中常用的全局变量":["140.5"],"注意这里传入的":["140.5"],"参数是定义的require":["140.5"],"第二个参数就是函数的结束部分":["140.5"],"两部分都是字符串":["140.5"],"使用的时候将他们包裹在模块的字符串外部就可以了":["140.5"],"用于针对不同的模块扩展名使用不同的加载方式":["140.5"],"加载方式肯定是不同的":["140.5"],"来运行":["140.5"],"runinthiscontext":["140.5"],"传入的是":["140.5"],"定义时候":["140.5"],"存储的是模块的绝对路径":["140.5"],"读取到的":["140.5"],"是一个字符串":["140.5"],"来包裹一下就相当于在这个模块外部又包裹了一个函数":["140.5"],"也就实现了私有作用域":["140.5"],"来执行":["140.5"],"第一个参数改变运行的":["140.5"],"传入":["140.5"],"后面的参数就是函数外面包裹参数":["140.5"],"创建一个require方法":["140.6"],"load方法":["140.7"],"resolvefilename":["140.8"],"extensions使用读取文件":["140.12"],"的工具模块":["141.1"],"date2":["141.2"],"格式化字符串util":["141.3"],"arg1":["141.3","168.22","173.11","173.14","173.47"],"hostname":["141.4"],"famliy":["141.4"],"绑定的ip地址为":["141.4"],"系统所有内存变量为":["141.6"],"单位m":["141.6"],"系统空余内存变量为":["141.6"],"相对路径":["141.7"],"join参数拼接为一个路径":["141.8"],"j1":["141.8"],"join":["141.8","167.4","195.9"],"用于将绝对路径转为相对路径":["141.8"],"返回从":["141.8"],"到":["141.8","195.3"],"的相对路径":["141.8"],"基于当前工作目录":["141.8"],"star":["142.7"],"unstar":["142.8"],"stars":["142.9"],"你得在本地登录":["142.12"],"登录完成后":["142.12"],"版本号":["142.13","163.0"],"unpublish":["142.14","142.15"],"deprecate":["142.17","142.18","142.20"],"outdated":["142.22","142.23"],"中的所有包":["142.24"],"audit":["142.25"],"需要尽快解决":["142.27"],"ping":["142.28"],"主要是平时开发时":["143.1"],"有npm包需要在本地调试好了再发布":["143.1"],"简单说就是为开发的模块":["143.2"],"先在对应npm包的文件创建一个全局的链接":["143.4"],"注意这里的packagename一定要对应你的npm包package":["143.5"],"json里的name字段值":["143.5"],"用完了如何去除软链呢":["143.6"],"先在使用npm包的项目的文件目录下解除特定的链接":["143.7"],"再在npm包所在的文件目录下去除全局链接":["143.8"],"强制解除创建的某个特定全局链接":["143.9"],"查看所有创建的全局链接名称":["143.10"],"service这一条指令":["144.1"],"那既然vue":["144.1"],"service这条指令不存在操作系统中":["144.1"],"为什么执行npm":["144.1"],"也就是相当于执行了vue":["144.1"],"为什么这样它就能成功":["144.1"],"而且不报指令不存在的错误":["144.1"],"我们在安装依赖的时候":["144.1"],"是通过npm":["144.1"],"有三个vue":["144.2"],"当我们不添加后缀名时":["144.4"],"自动根据":["144.4"],"可以跨平台":["144.5"],"开发依赖":["145.2"],"版本的第一个预发布版本":["145.5"],"preminor":["145.5"],"tag操作":["145.6"],"如果git工作区还有未提交的修改":["145.6"],"version将会执行失败":["145.6"],"可以通过预解析的方式来预先获得域名所对应的":["146.1"],"ip":["146.1","175.12"],"格式具有更好的图像数据压缩算法":["146.2"],"对于这种即刻需要的资源":["146.3"],"你可能希望在页面加载的生命周期的早期阶段就开始获取":["146.3"],"rel":["146.4","179.7"],"对于某些耗时逻辑并不需要在首屏就使用的":["146.5"],"内需要加载的东西":["146.6"],"对于图片来说":["146.6"],"可以考虑使用多个":["146.7"],"具体来说":["147.0"],"通过判断":["147.0"],"标签所处的坐标是否出现在了网页视口":["147.0"],"相对于文档document":["147.1"],"从文档根的":["147.1"],"开始":["147.1","195.7"],"pagex":["147.1"],"矩形原点相对于窗口的":["147.2"],"坐标":["147.2","170.6"],"矩形的":["147.2"],"现代浏览器":["147.3"],"老版浏览器":["147.3"],"窗口内高度":["147.3"],"除去了菜单栏":["147.3"],"工具栏等等":["147.3"],"isinview":["147.4"],"elem":["147.4"],"测试文本4":["147.5"],"测试文本5":["147.5"],"20221103130952810":["147.5"],"三":["147.5"],"动手实践":["147.5"],"第一种方式":["147.5"],"onscroll":["147.5","156.3","173.48"],"在回调中判断图片是否出现在窗口可视范围":["147.5"],"使用节流优化监听事件":["147.5"],"tse4":["147.5"],"mm":["147.5"],"bing":["147.5"],"net":["147.5","264.0"],"oip":["147.5"],"nrlafygdcttchmiwn7gxrwhaek":["147.5"],"imgdet":["147.5"],"greater":["148.0"],"than":["148.0"],"milliseconds":["148.0","156.24"],"depicted":["148.0"],"red":["148.0","165.1","165.2","195.9"],"diagonal":["148.0"],"stripes":["148.0"],"谷歌性能剖析中的长耗时如图所示":["148.0"],"一般会在任务角上用红色三角形标出来":["148.0"],"其中被阻塞的任务部分用红色细斜条纹标出来":["148.0"],"如上图所示":["148.0"],"优化":["148.0"],"意味着将单个长耗时任务拆解成几个耗时相对短的小任务":["148.0"],"可以查看下图":["148.0"],"single":["148.0","212.1","286.33"],"versus":["148.0"],"same":["148.0"],"broken":["148.0"],"into":["148.0","212.1","214.1"],"shorter":["148.0"],"showspinner":["148.1","148.4"],"updateui":["148.1"],"isn":["148.1"],"的函数中":["148.2"],"可以在每次":["148.2"],"后让步于主线程":["148.2"],"functions":["148.2"],"tasks":["148.2"],"validateform":["148.2"],"会逐个循环队列中的任务":["148.3"],"如果循环时":["148.3"],"结果返回真":["148.3"],"就会调用":["148.3"],"这样就能处理用户输入的事件":["148.3"],"反之":["148.3"],"就会走到队列继续执行下一个":["148.3"],"直到队列执行完":["148.3"],"depiction":["148.3"],"running":["148.3"],"performance":["148.3"],"profiler":["148.3"],"resulting":["148.3"],"thread":["148.3","148.5"],"until":["148.3","206.1"],"returns":["148.3","166.9","205.6","206.9","283.10","287.2"],"show":["148.4","156.10"],"spinner":["148.4"],"database":["148.4"],"savetodatabase":["148.4"],"yield":["148.5","179.29"],"scheduler":["148.5","220.2"],"api":["148.5","152.29","205.14","221.1","235.4"],"own":["148.5"],"yielding":["148.5"],"mechanism":["148.5"],"程序访问寄存器的速度永远快于访问内存":["149.4"],"对于值为数组的变量":["149.4"],"其在寄存器中的值是数组在内存中的地址":["149.4"],"所以更改或访问其他数据需要访问内存":["149.4"],"一个是延迟加载":["150.0"],"优先展示的首屏图片就先加载":["150.1"],"而其他的图片":["150.1"],"等到需要去展示的时候再去请求图片资源":["150.1"],"loading":["150.2","152.6","217.8"],"alt":["150.2","172.0"],"用img的data":["150.4"],"top大于页面高度":["150.5"],"或者rect":["150.5"],"right为负数":["150.5"],"left大于页面宽度":["150.5"],"只显示前两张图片":["150.6"],"后面三张图片还没有出现在当前页面":["150.6"],"会有一段空白的加载时间":["150.7"],"如果网络不是很好":["150.7"],"加载的时间就会比较久":["150.7"],"预加载可以让用户无需等待":["150.7"],"lang":["150.10","195.8","279.1","279.6"],"属性的值指定为预加载图片的":["150.12"],"doctype":["150.12","279.2","279.4","279.5","279.6","279.10"],"不需要也提前加载":["150.15"],"目的":["150.15"],"研究表明":["151.1"],"如果一个移动端页面加载时长超过":["151.1"],"模型来衡量应用性能":["151.2"],"animation":["151.2","152.20","171.0","179.9"],"页面稳定性":["151.3"],"页面出错率":["151.3"],"标记的是浏览器渲染来自":["151.4"],"第一位内容的时间点":["151.4"],"表示是如何导航到这个页面的":["151.5"],"当前页面是通过点击链接":["151.5"],"书签和表单提交":["151.5"],"或者脚本操作":["151.5"],"或者在url中直接输入地址":["151.5"],"type值为0":["151.5"],"readystate变为interactive的时间":["151.7"],"domloading":["151.7"],"返回当前网页dom结构开始解析时":["151.7"],"readystate变为loading时的时间戳":["151.7"],"返回查询dns结束时间":["151.7"],"则这个值等于fetchstart":["151.7"],"返回查询dns开始时间":["151.7"],"performancenavigationtiming属性":["151.8"],"performanceentry":["151.9"],"starttime":["151.9","287.5"],"属性之间的差值":["151.9"],"encodedbodysize":["151.9"],"返回编码前字节大小":["151.9"],"navigationstart":["151.10","152.8"],"performancetiming":["151.10"],"中每个属性记录时间戳":["151.10"],"timing各字段渲染顺序":["151.11"],"指服务器端返回第一个字节到最后一个字节所需要的时间":["151.12"],"dom解析耗时":["151.12"],"domcontentloadedeventend":["151.12"],"指页面请求完成":["151.12"],"后":["151.12","166.1"],"到整个":["151.12"],"解析完所用的时间":["151.12"],"页面的复杂度决定了":["151.12"],"解析耗时":["151.12"],"资源加载耗时":["151.12"],"指":["151.12"],"解析完成后到页面完全加载完所用的时间":["151.12"],"拿到页面布局节点数目":["151.13"],"思想是":["151.13"],"获取到当页面具有最大布局变化的时间点":["151.13"],"aegis":["151.13"],"的方法":["151.13"],"利用":["151.13","168.23"],"接口":["151.13","185.3"],"毫秒":["152.2"],"cook":["152.2"],"发现他们能够将转化率提高":["152.2"],"平均年收入增加近":["152.3"],"美元":["152.3"],"秒之间得到响应时":["152.5"],"会感觉系统的响应速度还可以":["152.5"],"这项指标因页面逻辑而异":["152.6"],"因此上不存在任何规范":["152.6"],"只是记录了加载体验的最开始":["152.6"],"如果页面显示的是启动图片或者":["152.6"],"这个时刻对用用户而言没有意义":["152.6"],"lcp":["152.6","152.18","152.25"],"largest":["152.6","152.18"],"指标代表的是":["152.6"],"视窗最大可见图片或者文本块的渲染时间":["152.6"],"可以帮助我们捕获更多的首次渲染之后的加载性能":["152.6"],"但这项指标过于复杂":["152.6"],"而且很难解释":["152.6"],"也经常出错":["152.6"],"是简化这个学习的曲线":["152.7"],"大家只要观注":["152.7"],"指标表现即可":["152.7"],"则与":["152.8"],"值相等":["152.8"],"1441112691935":["152.8"],"与当前页面同域":["152.8"],"或者前一个网页与当前页面不同域":["152.8"],"则值为":["152.8"],"unloadeventstart":["152.8"],"相对应":["152.8"],"返回前一个网页":["152.8"],"事件绑定的回调函数执行完毕的时间戳":["152.8"],"unloadeventend":["152.8"],"第一个":["152.8"],"重定向发生时的时间":["152.8"],"有跳转且是同域名内的重定向才算":["152.8"],"否则值为":["152.8"],"最后一个":["152.8"],"重定向完成时的时间":["152.8"],"有跳转且是同域名内部的重定向才算":["152.8"],"浏览器准备好使用":["152.8"],"dns":["152.9","175.12"],"查询耗时":["152.9"],"获取所有资源请求的时间数据":["152.10"],"首屏时间如何计算呢":["152.11"],"到当前时间之间的":["152.12"],"微秒数":["152.12"],"毫秒的千分之一":["152.12"],"它的精度可以达到":["152.12"],"建议大家可以直接访问这里去查看":["152.13"],"咱们如果想":["152.13"],"自定义":["152.13"],"哈哈":["152.14"],"大家别慌":["152.14"],"工具条":["152.15"],"包含录制":["152.15"],"刷新页面分析":["152.15"],"记录浏览器运行中的某一个时间段的表现":["152.16"],"reload":["152.16","177.13"],"page":["152.16","178.7","195.7"],"红色表示长时间帧":["152.17"],"可能出现卡顿掉帧":["152.17"],"不同帧的体验":["152.17"],"帧率能够达到":["152.17"],"的动画将会相当流畅":["152.17"],"让人倍感舒适":["152.17"],"帧率在":["152.17"],"svg":["152.18","214.1"],"的时间点":["152.18"],"fmp":["152.18"],"meaningfulpaint":["152.18"],"首屏有意义的内容绘制":["152.18"],"这个":["152.18"],"有意义":["152.18"],"没有权威的规定":["152.18"],"本质上是通过一种算法来猜测某个时间点可能是":["152.18"],"有的理解为是最大元素绘制的时间":["152.18"],"即同":["152.18"],"是同一条虚线":["152.18"],"scripting":["152.20"],"animationframefired":["152.20"],"一个定义好的动画帧发生并开始回调处理时触发":["152.20"],"cancel":["152.20"],"取消一个动画帧时触发":["152.20"],"gc":["152.20","179.42"],"垃圾回收时触发":["152.20"],"domcontentloaded":["152.20"],"当页面中的":["152.20"],"内容加载并解析完毕时触发":["152.20"],"self":["152.21","241.8"],"代表任务":["152.21"],"自身执行":["152.21"],"中的内容":["152.23"],"是按顺序记录的事件日志":["152.23"],"数据比较多":["152.23"],"常见的优化级别中一般用不到它":["152.23"],"我们选择":["152.24"],"generate":["152.24","214.2","228.3"],"report":["152.24"],"开始分析吧":["152.24"],"先来看看结果":["152.24"],"tti":["152.25"],"也称为网站可达性":["152.26"],"实际应用中":["152.27"],"是一种利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名":["152.28"],"以及传统的渐进式增强策略来创建跨平台":["152.29"],"应用程序":["152.29"],"需要在":["152.30"],"powershell":["152.30"],"命令下执行":["152.30"],"改为只渲染可视区域内的列表项":["153.1"],"即使渲染好了":["153.2"],"大量的节点也持续占用内存":["153.2"],"我们需要的必要信息有":["153.4"],"容器高度":["153.4","286.38"],"contentheight":["153.5"],"内容高度":["153.5"],"scrolltop":["153.5","286.10","286.56"],"setscrolltop":["153.5","153.6"],"滚动高度":["153.5","153.6","153.7"],"继续需要渲染的":["153.5","153.6","153.7"],"索引有哪些":["153.5","153.6","153.7"],"startidx":["153.5","153.6","153.7","153.11"],"floor":["153.5","153.6","153.7","174.24","285.13","286.22"],"endidx":["153.6","153.7"],"往下推到正确位置的空元素":["153.8"],"fixedsizelist2":["153.8"],"方案":["153.8"],"fixedsizelist3":["153.8"],"绝对定位方案":["153.8"],"数组":["153.10","240.1"],"是每个列表项的底边到顶部的距离":["153.10"],"的作用是在滚动到特定位置时":["153.10"],"计算出需要渲染的列表项有哪些":["153.10"],"所有":["153.11"],"items":["153.11"],"的位置":["153.11"],"offsets":["153.11"],"找":["153.11"],"backgroundcolor":["153.12","195.9"],"burlywood":["153.12"],"cadetblue":["153.12"],"今天给大家带来最前沿的webpack5配置":["154.0"],"让我们代码在编译":["154.0"],"build就能看到各个部分的打包耗时":["154.1"],"截屏2022":["154.1","159.4","159.8","159.12"],"07":["154.1","173.5"],"启动服务器域名":["154.2"],"port":["154.2","159.9"],"启动服务器端口号":["154.2"],"open":["154.2","175.5","179.34","195.4","228.2","241.9","275.2"],"是否自动打开浏览器":["154.2"],"hot":["154.2"],"开启hmr功能":["154.2"],"只能用于开发环境":["154.2"],"生产环境不需要了":["154.2"],"当模块的热替换过程中":["154.3"],"如果替换模块失败":["154.3"],"有什么回退机制吗":["154.3"],"带着上面的问题":["154.3"],"于是决定深入到":["154.3"],"寻找":["154.3"],"底层的奥秘":["154.3"],"db9c5bb9bf55457cfd3406f7b7584455":["154.3"],"工作流程图解":["154.3"],"上图是webpack":["154.3"],"进行应用开发的模块热更新流程图":["154.3"],"上图底部红色框内是服务端":["154.3"],"而上面的橙色框是浏览器端":["154.3"],"绿色的方框是":["154.3"],"代码控制的区域":["154.3"],"蓝色方框是":["154.3"],"洋红色的方框是文件系统":["154.3"],"文件修改后的变化就发生在这":["154.3"],"而青色的方框是应用本身":["154.3"],"上图显示了我们修改代码到模块热更新完成的一个周期":["154.3"],"通过深绿色的阿拉伯数字符号已经将":["154.3"],"开发模式没有输出":["154.4","154.5"],"不需要指定输出目录":["154.4","154.5"],"文件输出到":["154.4","154.5"],"目录中":["154.4","154.5"],"clean":["154.4","154.5","154.16"],"不需要清空输出结果":["154.5"],"chunk":["154.6","154.16","177.6"],"改善构建速度":["154.6"],"简单来说":["154.6"],"是同一个引入":["154.7"],"会共享一个":["154.7"],"contenthash":["154.7"],"根据文件内容生成":["154.7"],"只有文件内容变化了":["154.7"],"值才会变化":["154.7"],"所有文件":["154.7"],"值是独享且不同的":["154.7"],"cpu核数":["154.7","154.10","154.17"],"eslintwebpackplugin":["154.8"],"htmlwebpackplugin":["154.8"],"minicssextractplugin":["154.8"],"mini":["154.8"],"extract":["154.8"],"cssminimizerplugin":["154.8"],"minimizer":["154.8"],"terserplugin":["154.8","154.10"],"这样将整个库都打包进来":["154.9"],"体积就太大了":["154.9"],"terser":["154.10"],"threads":["154.10","154.17"],"cpus":["154.10","154.17"],"获取处理样式的loaders":["154.10","154.17"],"getstyleloaders":["154.10","154.17"],"preprocessor":["154.10","154.17"],"postcssoptions":["154.10","154.17"],"preset":["154.10","154.17"],"能解决大多数样式兼容性问题":["154.10","154.17"],"filter":["154.10","154.17","159.13","170.14","170.15","230.2","285.9"],"boolean":["154.10","154.17","156.7","156.18","179.25","182.2","210.1","217.0","222.4","222.6","231.4","236.1","252.5","252.6","255.0","285.6","285.9"],"reduce":["154.12","178.8"],"修改配置文件":["154.12"],"alert":["154.13"],"继承":["154.15"],"入口文件打包输出资源命名方式":["154.16","154.17"],"chunkfilename":["154.16"],"动态导入输出资源命名方式":["154.16"],"assetmodulefilename":["154.16"],"media":["154.16"],"ext":["154.16"],"字体等资源命名方式":["154.16"],"注意用hash":["154.16"],"oneof":["154.16"],"用来匹配":["154.16"],"数组里面":["154.16"],"执行顺序是从右到左":["154.16"],"ac":["154.16"],"ss":["154.16"],"preloadwebpackplugin":["154.17"],"生产模式需要输出":["154.17"],"引入资源":["154.18"],"webpack才会对其打包":["154.18"],"result1":["154.18"],"result2":["154.18"],"而不是把它打包":["154.19"],"这样就剥离了那些不需要改动的依赖模块":["154.19"],"换句话":["154.19"],"js的作用就是将":["154.20"],"的背景颜色设置为":["154.20"],"但是在ui":["154.20"],"js中需要用到jquery的":["154.20"],"和lodash的":["154.20"],"这种情况下":["154.20"],"虽然webpack可以打包index":["154.20"],"但是这个ui":["154.20"],"js却并不能发挥它的作用":["154.20"],"控制台会报以下错误":["154.20"],"36a075b6df1b4290aa19d6a0c88e0b12":["154.20"],"解决方法":["154.20"],"为webpack提供预置依赖":["154.20"],"很难减少":["155.0"],"公共代码":["155.0"],"如第三方公共库":["155.0"],"这一步没啥成本":["155.1"],"这是最有效的手段":["155.2"],"包括无用样式":["155.3"],"除了本地必须的图片":["155.4"],"其结构越复杂":["155.5"],"最终生成的代码越大":["155.5"],"最终的效果越明显":["155.6"],"实现步骤如下":["155.6"],"将组件挪动到根目录下":["155.6"],"决定了其基础库的大小是固定的":["155.7"],"即使同样的css规则被使用了很多次":["155.7"],"而不影响到业务功能":["155.8"],"压缩前":["155.8"],"压缩后":["155.8"],"不知道还有什么奇怪的问题":["155.9"],"由于分包异步化是提前声明的":["155.9"],"并不能动态的控制开关":["155.9"],"我们先写一个简单的小例子来了解下":["156.1"],"pow":["156.1"],"的第二个参数是一个数组":["156.2"],"通过这个数组来判定是否更新回掉函数":["156.2"],"这种方式可以运用在":["156.2"],"元素":["156.2","179.2","181.0"],"上下文中":["156.2"],"尤其是利用在数组上":["156.2"],"先看一个例子":["156.2"],"从上面我们看出":["156.2"],"只有在":["156.2"],"发生变化的时候才会进行渲染":["156.2"],"从而减少了不必要的开销":["156.2"],"总结一下":["156.2"],"scrollheight":["156.3"],"setscrollheight":["156.3"],"用大量的usememo重做了provide等核心模块":["156.4"],"其中就是运用useref来缓存数据":["156.4"],"并且所运用的":["156.4"],"没有一个是绑定在dom元素上的":["156.4"],"都是做数据缓存用的":["156.4"],"可以简单的来看一下":["156.4"],"接下来我们来看看如何封装一个":["156.6"],"首先我们要明白以下三点":["156.6"],"第一点":["156.6"],"先确定参数":["156.6"],"的参数与":["156.6"],"的一致":["156.6"],"第一个参数是函数":["156.6"],"第二个参数参数是可变的数组":["156.6"],"第二点":["156.6"],"我们的值要保存在":["156.6"],"这样可以将值缓存":["156.6"],"从而减少无关的刷新":["156.6"],"第三点":["156.6"],"更新值的判断":["156.6"],"怎么通过第二个参数来判断是否更新":["156.6"],"fc":["156.7","156.11"],"setflag":["156.7","156.18","178.6","205.12"],"getnowdata":["156.7"],"useeffect":["156.9","178.6","286.38"],"components":["156.10","156.11","181.0","216.2","216.3"],"首次渲染":["156.10"],"padding":["156.11","170.15","171.0","286.55"],"要进行相应的":["156.12"],"拦截":["156.12"],"这时就需要":["156.12"],"es6":["156.12","173.25","173.30","173.34","173.80","177.7","177.11"],"的一个知识点":["156.12"],"设置为7":["156.14"],"对字符串进行操作":["156.14"],"设置为小杜杜":["156.14"],"domesy":["156.14"],"targetelement":["156.15"],"的优化作用":["156.16"],"其实不是":["156.16"],"这么做的目的是为了支持":["156.16"],"effect":["156.17","206.8","206.14","219.3","256.4","258.10"],"hasinitref":["156.17"],"一开始设置初始化":["156.17"],"elementref":["156.17"],"存储具体的值":["156.17"],"depsref":["156.17"],"存储传递的deps":["156.17"],"unmountref":["156.17"],"setcount":["156.18","156.24"],"flag":["156.18","178.6","214.1"],"onenter":["156.19"],"onleave":["156.19"],"delay":["156.21","168.22","206.8","217.0"],"targetdate":["156.22"],"控制时间变化的秒数":["156.22"],"calctime":["156.23"],"valueof":["156.23"],"gettime":["156.23","283.4","283.12"],"计算差值":["156.23"],"days":["156.24"],"hours":["156.24"],"seconds":["156.24"],"countdown":["156.24"],"等api优化":["156.26"],"制作自定义hooks遇到传递过来的值":["156.26"],"优先考虑使用":["156.26"],"界面重新渲染":["157.1"],"这样效率是很低的":["157.1"],"setstate一定是异步的吗":["157.2"],"react18版本之前":["157.2"],"其实可以分成两种情况":["157.2"],"在组件生命周期或react合成事件中":["157.2"],"setstate是异步的":["157.2"],"在settimeout或者原生dom事件中":["157.2"],"setstate是同步的":["157.2"],"验证一":["157.2"],"个以内":["158.1","164.1"],"并且还要尽可能快速的拿到响应结果":["158.1","164.1"],"其实这个场景在一些大厂的面试题中也有过提及":["158.1","164.1"],"个请求的要求":["158.2","164.2"],"这里就对应":["158.2","164.2"],"当其中有一个请求完之后就会再从":["158.2","164.2"],"当前请求完成的数量":["158.3","164.3"],"发送请求":["158.3","164.3","175.12"],"个请求都请求完成":["158.5","164.5"],"results":["158.5","164.5"],"里面也是按顺序打印出了结果":["158.5","164.5"],"然后再看看请求时请求数量是否每次都是":["158.5","164.5"],"会产生一个新的事件":["159.0"],"每个事件都有一个id字段以及timestamp字段":["159.0"],"id和timestamp字段都是该事件生成的时间戳":["159.0"],"03":["159.1","159.4","159.12","287.4"],"下午12":["159.1"],"setheader":["159.2","159.5"],"pathname":["159.2","159.5"],"每次客户端都带上它最后拿到的事件时间戳来获取新的事件":["159.2"],"query":["159.2","159.5","167.4","205.16"],"判断客户端是否拿到最新事件":["159.2"],"将所有没发送过给这个客户端的事件一次性发送出去":["159.2"],"因为客户端不知道服务端什么时候有数据更新":["159.3"],"所以它只能不停地询问服务端":["159.3"],"下面是一个简单的长轮询示意图":["159.4"],"发送服务端现存事件":["159.5"],"subscribe":["159.5","195.4","204.3"],"新建的连接挂起来":["159.5"],"30s超时":["159.5"],"这就保证了更好的数据实时性":["159.6"],"不过长轮询也不是完美的":["159.6"],"服务端资源大量消耗":["159.6"],"有兴趣的读者可以自行验证一下":["159.7"],"客户端和服务端都可以实时地给对方发送消息":["159.8"],"下面是websocket的图示":["159.8"],"每5秒生成一个新的事件":["159.9","159.13"],"setinterval":["159.9","159.13","168.24","168.26","179.50","195.4","286.39"],"启动socket服务器":["159.9"],"wss":["159.9"],"connected":["159.9"],"首次连接":["159.9"],"推送现存事件":["159.9"],"所以当数据更新的时候可以马上推送给客户端":["159.10"],"双工通信":["159.10"],"服务端和客户端都可以随时给对方发送消息":["159.10"],"这对于本文的其它三种方案都是很难做到的":["159.10"],"的系统例如im软件等":["159.11"],"下面是一个简单的sse图示":["159.12"],"tolocaletimestring":["159.13"],"后面的两个":["159.13"],"n一定要有":["159.13"],"可以理解为服务端先客户端推送信息的特殊格式":["159.13"],"stringify":["159.13","195.8"],"因此性能也是很好的":["159.14"],"数据实时性高":["159.14"],"它比长轮询更加实时":["159.14"],"equiv":["160.0","168.3","286.47"],"ua":["160.0","168.3","286.47"],"将document设置为null":["162.0"],"设置无效":["162.0"],"打印结果还是document":["162.0"],"删除document":["162.0"],"delete":["162.0","173.98","175.4"],"删除无效":["162.0"],"好吧":["162.0"],"修改不了也删除不了":["162.0"],"getownpropertydescriptor":["162.0"],"会发现":["162.0"],"configurable":["162.0"],"属性为":["162.0"],"f1":["162.1"],"沙箱示例":["162.1","162.2"],"运行代码比eval更为好一些":["162.2"],"函数的参数提供了清晰的接口来运行代码":["162.2"],"function与eval的区别":["162.2"],"foo1":["162.2","173.5"],"执行上下文对象":["162.2"],"func":["162.2","207.12"],"variable":["162.2"],"maybeavailablesandbox":["162.3"],"ctx":["162.3","166.5","166.6","219.7","226.1","236.7","250.3"],"要执行的代码":["162.3"],"history":["162.3","179.58"],"abc":["162.3"],"traped":["162.3"],"sharedglobal作为与外部执行环境共享的全局对象":["162.3"],"code中获取的history为最外层作用域的history":["162.3"],"sharedglobal":["162.3"],"globalproxy":["162.3"],"在许多插件系统中":["163.0"],"插件通常由两部分组成":["163.0"],"需要执行的代码":["163.0"],"元数据":["163.0"],"依赖关系等":["163.0"],"在我们的插件中":["163.0"],"函数包含了":["163.0"],"函数名称为":["163.0"],"当插件注册后":["163.0"],"函数作为方法直接附加到我们的betacalc对象上":["163.0"],"使它能够访问betacalc的this":["163.0"],"现在betacalc有了一个新的":["163.0"],"可以直接调用":["163.0"],"这个系统有很多不错的地方":["163.0"],"它是一个简单的":["163.0"],"可以传递到函数中":["163.0"],"意味着插件可以通过npm下载":["163.0"],"存储到本地的":["166.1"],"localstorge":["166.1"],"以后每次请求的时候":["166.1"],"都将在":["166.1"],"平时发送请求的时候都是携带":["166.2"],"过期时":["166.2"],"这时前端便携带":["166.2"],"发送一个请求到服务端":["166.2"],"请求新的":["166.2"],"获取用户信息":["166.3"],"中包含":["166.3"],"password":["166.3"],"refreshtoken":["166.4"],"dayjs":["166.5"],"invalidrefreshtoken":["166.5"],"refreshauth":["166.5"],"auth":["166.6"],"authorization":["166.6"],"context":["166.7","179.27","204.1","210.2","213.0","231.4","231.6","241.7"],"user中包含了payload的信息":["166.7"],"请求拦截器":["166.8"],"interceptors":["166.8"],"token配置请求头":["166.8"],"缓冲":["166.9"],"处理401":["166.9"],"刷新token并处理之前的请求":["166.9"],"目的在于实现用户无感知刷新":["166.9"],"之前的请求的配置":["166.9"],"实际效果图":["166.10"],"一个文章列表的中":["167.2"],"这个短时间就是指同一个周期内":["167.3"],"然后就变成了":["167.3"],"合并同一个周期内的请求":["167.3"],"cleartimeout":["167.4","168.23"],"这里将把请求发出去":["167.4"],"需要重置状态":["167.4"],"所以将现有的保存下来":["167.4"],"resolvesmap":["167.4"],"执行resolve":["167.4"],"而不会影响延迟关键事件":["168.2"],"compatible":["168.3","286.47"],"并且要求浏览器在下次重绘之前调用指定的回调函数更新动画":["168.6"],"viewport":["168.7"],"是是宏任务还是微任务":["168.9"],"浏览器在每一轮event":["168.10","168.13"],"loop事件循环中都会去渲染屏幕吗":["168.10"],"如果需要重新绘制":["168.11"],"则执行步骤4":["168.11"],"如果不需要重新绘制":["168.11"],"则流程回到步骤1":["168.11"],"这样不断循环":["168.11"],"触发resize":["168.11"],"scroll事件":["168.11"],"输出结果":["168.12"],"requestidlecallback":["168.12"],"我们所要做的就是知道他们的执行时机就好":["168.13"],"区别":["168.14","172.0"],"觉得大部分的用户更多的是喜欢短频快的节奏文章":["168.15"],"如果没有使用过可以":["168.16"],"使用跳转地址settimeout":["168.16"],"在动画帧请求做件事情":["168.17"],"start":["168.19"],"step":["168.19"],"timestamp":["168.19"],"整数":["168.20"],"请求":["168.20"],"相信大部分的开发者都使用过这个api吧":["168.21"],"arg2":["168.22","173.11","173.14","173.47"],"清空定时器":["168.23"],"这里有意思的点是":["168.24"],"优化动画渲染场景中":["168.25"],"用于延迟执行某个动作的场景中":["168.25"],"返回值":["168.25"],"正整数":["168.25"],"用于后续":["168.25"],"cancelanimationframe":["168.25"],"1ms":["168.26"],"有很多因素会导致settimeout的回调函数执行比设定的预期值更久":["168.26"],"首先是浏览器之间的差异":["168.26"],"在浏览器中":["168.26"],"的每调用一次定时器的最小间隔是4ms":["168.26"],"这通常是由于函数嵌套导致":["168.26"],"嵌套层级达到一定深度":["168.26"],"欢迎纠错":["168.27"],"宏任务的执行时机总结":["168.28"],"新图片":["169.2"],"后续在前端页面进行展示是后端接口不返回原图片":["169.2"],"而是返回带有水印的图片即可":["169.2"],"directives":["169.3","214.1","230.1"],"installdirective":["169.3"],"directive":["169.3","230.2","236.1"],"waterbgimg":["169.3"],"water":["169.3"],"bg":["169.3"],"设置水印":["169.4"],"setwatermark":["169.4"],"htmlelement":["169.4"],"parentelement":["169.4"],"获取对应的":["169.4"],"画布相关的":["169.4"],"创建":["169.4","177.6","179.13","179.41"],"父元素":["169.4"],"方便自定义展示结果":["169.4"],"setattribute":["169.4"],"将对应图片的父容器作为定位元素":["169.4"],"将图片元素移动到":["169.4"],"mounted":["169.4","180.0","220.4"],"onload":["169.4"],"bind":["169.4","204.1","283.7"],"实现效果":["170.0"],"实现内凹圆角":["170.1"],"20rpx":["170.2","195.9"],"radius":["170.2"],"无法正确的显示":["170.3"],"函数创建一个图像":["170.4"],"该图像由从原点辐射的两种或多种颜色之间的渐进过渡组成":["170.4"],"它的形状可以是圆形或椭圆形":["170.4"],"函数的结果是":["170.4"],"gradient数据类型的对象":["170.4"],"在这里插入图片描述":["170.5"],"起始点位于left":["170.5"],"透明色占据20rpx":["170.5"],"pink占据20rpx":["170.5"],"skyblue从20rpx到100":["170.5"],"size宽度为50":["170.6"],"高度不变":["170.6"],"repeat不重叠":["170.6"],"先将颜色分开试试":["170.6"],"看看效果如何":["170.6"],"属性为每一个背景图片设置初始位置":["170.6"],"这个位置是相对于由":["170.6"],"定义的位置图层的":["170.6"],"对于两个值的语法":["170.6"],"一个定义":["170.6"],"另一个定义":["170.6"],"其他的请看相关文档":["170.6"],"这里就不赘述了":["170.6"],"处理起来不方便":["170.7"],"repeat":["170.8","170.11"],"遮罩二":["170.8"],"4的内圆角":["170.10"],"假设我们要实现这样的一个效果":["170.10"],"pink":["170.11"],"skyblue":["170.12"],"实现一个内凹圆角边框":["170.13"],"drop":["170.14","170.15"],"2rpx":["170.14","195.9"],"cou":["170.15"],"即将过期":["170.15"],"苏苏":["170.15"],"700rpx":["170.15"],"360rpx":["170.15"],"20px":["170.15","171.0"],"30rpx":["170.15"],"hidden":["170.15","195.8"],"sizing":["170.15"],"shadow":["170.15"],"2px":["170.15"],"rgba":["170.15"],"fff":["170.15","171.0"],"如何用":["171.0"],"实现多行文本溢出省略效果":["171.0"],"考虑兼容性":["171.0"],"实现方式":["171.0"],"单行":["171.0"],"ellipsis":["171.0"],"多行":["171.0"],"orient":["171.0"],"vertical":["171.0","286.55"],"clamp":["171.0"],"行数":["171.0"],"兼容":["171.0","179.47"],"40px":["171.0"],"bottom":["171.0"],"linear":["171.0"],"gradient":["171.0"],"transparent":["171.0"],"moz":["171.0"],"使用split":["171.0"],"正则表达式将单词与单个文字切割出来存入words":["171.0"],"判断scrollheight与clientheight":["171.0"],"超出的话就从words中pop一个出来":["171.0"],"居中为什么要使用":["171.0"],"为什么不使用":["171.0"],"marginleft":["171.0"],"阿里":["171.0"],"属于合成属性":["171.0"],"composite":["171.0"],"property":["171.0","219.6"],"对合成属性进行":["171.0"],"transition":["171.0","216.4","218.4","228.2","232.2"],"动画将会创建一个合成层":["171.0"],"这使得被动画元素在一个独立的层中进行动画":["171.0"],"通常情况下":["171.0"],"浏览器会将一个层的内容先绘制进一个位图中":["171.0"],"然后再作为纹理":["171.0"],"texture":["171.0"],"上传到":["171.0"],"只要该层的内容不发生改变":["171.0"],"就没必要进行重绘":["171.0"],"repaint":["171.0"],"浏览器会通过重新复合":["171.0"],"recomposite":["171.0"],"来形成一个新的帧":["171.0"],"left属于布局属性":["171.0"],"该属性的变化会导致重排":["171.0"],"reflow":["171.0","179.38"],"relayout":["171.0"],"所谓重排即指对这些节点以及受这些节点影响的其它节点":["171.0"],"behaviorlayer":["172.0"],"行为层表示网页内容跟用户之间产生交互性":["172.0"],"简单来说就是用户操作了网页":["172.0"],"网页给用户一个反馈":["172.0"],"这是":["172.0"],"主宰的领域":["172.0"],"iframe的作用以及优缺点":["172.0"],"iframe也称作嵌入式框架":["172.0"],"嵌入式框架和框架网页类似":["172.0"],"它可以把一个网页的框架和内容嵌入到现有的网页中":["172.0"],"优点":["172.0","176.10"],"可以用来处理加载缓慢的内容":["172.0"],"广告":["172.0"],"缺点":["172.0","173.46"],"iframe会阻塞主页面的onload事件":["172.0"],"iframe和主页面共享连接池":["172.0"],"而浏览器对相同域的连接有限制":["172.0"],"所以会影响页面的并行加载":["172.0"],"但是可以通过js动态给ifame添加src属性值来解决这个问题":["172.0"],"当然也可以解决iframe会阻塞主页面的onload事件的问题":["172.0"],"会产生很多页面":["172.0"],"不易管理":["172.0"],"浏览器的后退按钮没有作用":["172.0"],"无法被一些搜索引擎识别":["172.0"],"img上":["172.0"],"alternate":["172.0"],"切换的意思":["172.0"],"如果无法显示图像":["172.0"],"浏览器将显示alt指定的内容":["172.0"],"当鼠标移动到元素上时显示title的内容":["172.0"],"一般当鼠标滑动到元素身上的时候显示":["172.0"],"是img标签特有的属性":["172.0"],"是图片内容的等价描述":["172.0"],"用于图片无法加载时显示":["172.0"],"这样用户还能看到关于丢失了什么东西的一些信息":["172.0"],"相对来说比较友好":["172.0"],"h5和html5区别":["172.0"],"h5是一个产品名词":["172.0"],"包含了最新的html5":["172.0"],"css3":["172.0"],"es6等新技术来制作的应用":["172.0"],"html5是一个技术名词":["172.0"],"指的就是第五代html":["172.0"],"行内元素和块级元素分别有哪些":["172.0"],"有何区别":["172.0"],"怎样转换":["172.0"],"常见的块级元素":["172.0"],"h2":["172.0"],"h3":["172.0"],"h4":["172.0"],"h5":["172.0"],"常见的行级元素":["172.0"],"span":["172.0","282.2"],"be":["173.1","206.1","214.1","215.2","216.3","219.3","219.6","223.2","232.4","243.1","256.4"],"invoked":["173.1"],"without":["173.1"],"参考答案":["173.5","173.22","173.35","173.53","173.62","173.63","173.77","173.88","173.89","173.96"],"foo2":["173.5"],"bar1":["173.5"],"bar2":["173.5"],"clickevent":["173.7"],"detachevent":["173.7"],"removeeventlistener":["173.7"],"只有一个形参就不需要用括号括起来":["173.8","173.23"],"如果函数体只有一行":["173.8","173.23"],"就不需要放到一个块中":["173.8","173.23"],"如果":["173.8","173.68","249.0"],"测试":["173.9","173.98"],"zhangsan":["173.9"],"男":["173.9"],"关键字会进行如下的操作":["173.10","173.76"],"步骤":["173.10","173.76"],"创建一个空的简单":["173.10","173.76"],"obj":["173.11","173.82","179.20","179.28","222.6","292.1","292.2","293.1","293.2"],"调用一个函数":["173.11"],"具有一个指定的":["173.11"],"也就是":["173.12"],"引擎线程":["173.12"],"上进行执行":["173.12"],"形成一个执行栈":["173.12"],"但是一旦遇到异步任务":["173.12"],"平台还是":["173.13"],"平台":["173.13"],"内部都是通过":["173.13"],"来完成异步":["173.13"],"操作的":["173.13"],"而":["173.13","178.1","178.3","179.7","181.0","265.2","265.4"],"libuv":["173.13"],"针对不同平台的差异性实现了统一调用":["173.13"],"的单线程仅仅是指":["173.13"],"运行在单线程中":["173.13"],"而并非":["173.13"],"就是把原本":["173.14"],"变成":["173.14","173.47"],"对象上的静态方法":["173.15"],"该方法的作用是将多个":["173.15"],"对象实例包装":["173.15"],"生成并返回一个新的":["173.15"],"实例":["173.15","236.2"],"函数内的":["173.16"],"会被绑定到":["173.16"],"在非严格模式下则会被绑定到全局对象":["173.16"],"新实例无法向父类构造函数传参":["173.17"],"继承单一":["173.17"],"所有新实例都会共享父类实例的属性":["173.17"],"原型上的属性是共享的":["173.17"],"一个实例修改了原型属性":["173.17"],"另一个实例的原型属性也会被修改":["173.17"],"借用构造函数继承":["173.17"],"当用户触发事件时":["173.18"],"就会执行对应的事件处理程序":["173.18"],"关于事件监听":["173.18"],"w3c":["173.18","179.1"],"规范中定义了":["173.18"],"词法环境":["173.19"],"的引用捆绑在一起":["173.19"],"或者说函数被引用包围":["173.19"],"每个函数都是对象":["173.20"],"都会占用内存":["173.20"],"内存中的对象越多":["173.20"],"性能就越差":["173.20"],"其次":["173.20"],"有变量提升":["173.21"],"只能在块作用域里访问":["173.21"],"不能跨块访问":["173.21"],"也不能跨函数访问":["173.21"],"原生支持块级作用域":["173.22"],"普通函数可以用于构造函数":["173.24"],"以此创建对象实例":["173.24"],"箭头函数中":["173.24"],"的指向不同":["173.24"],"在普通函数中":["173.24"],"类型是在":["173.25"],"里面新添加的基本数据类型":["173.25"],"就只有":["173.25"],"基本数据类型的值又被称之为原始值或简单值":["173.25"],"而引用数据类型的值又被称之为复杂值或引用值":["173.25"],"两者的区别在于":["173.25"],"原始值是表示":["173.25"],"表示非数":["173.26"],"或者说不是一个数":["173.26"],"局部作用域":["173.27"],"函数作用域以及":["173.27"],"要设置两个表示":["173.28"],"的值呢":["173.28"],"这其实是历史原因":["173.28"],"年":["173.28"],"诞生时":["173.28"],"最初像":["173.28"],"只设置了":["173.28"],"作为表示":["173.28"],"推出了":["173.30"],"解决方案来解决回调地狱的问题":["173.30"],"不过":["173.30","260.1"],"作为":["173.30","181.0","195.7","248.1"],"代码都被下载":["173.31"],"解析和执行完成以后":["173.31"],"才能开始呈现页面的内容":["173.31"],"浏览器在遇到":["173.31"],"标签时才开始呈现内容":["173.31"],"对于那些需要很多":["173.31"],"代码的页面来说":["173.31"],"这无疑会导致浏览器在呈现页面时出现明显的延迟":["173.31"],"而延迟期间的浏览器窗口中将是一片空白":["173.31"],"为了避免这个问题":["173.31"],"现在":["173.31"],"主线程拥有一个执行栈以及一个任务队列":["173.32"],"主线程会依次执行代码":["173.32"],"当遇到函数时":["173.32"],"会先将函数入栈":["173.32"],"该属性指向自己的原型对象":["173.33"],"每个构造函数都有一个":["173.33"],"换句话说":["173.34"],"作用域决定了代码区块中变量和其他资源的可见性":["173.34"],"之前":["173.34","260.2"],"闭包的应用场景":["173.35"],"美团":["173.36","173.45"],"19年":["173.36","173.45"],"通过对象的":["173.39"],"浅拷贝":["173.40"],"只是拷贝了基本类型的数据":["173.40"],"而引用类型数据":["173.40"],"复制后也是会发生引用":["173.40"],"我们把这种拷贝叫做浅拷贝":["173.40"],"是一种高级语言":["173.42"],"它不像":["173.42"],"语言那样要手动申请内存":["173.42"],"然后手动释放":["173.42"],"在声明变量的时候自动会分配内存":["173.42"],"支持模块化":["173.43"],"对象的区别有两点":["173.44"],"相比":["173.44"],"只能是":["173.44"],"对象的集合":["173.44"],"无法继承":["173.46"],"的原型对象":["173.46"],"并没有真正的实现继承":["173.46"],"部分继承":["173.46"],"借用原型链实现继承":["173.46"],"有些时候":["173.48"],"探讨了":["173.49"],"字节":["173.50"],"空间":["173.51"],"两个维度去考量":["173.51"],"时间维度":["173.51"],"是指执行当前算法所消耗的时间":["173.51"],"我们通常用":["173.51"],"来描述":["173.51"],"回调":["173.52"],"html5":["173.52","175.16","286.55"],"新特性":["173.52"],"当某个宏任务执行完后":["173.52"],"会查看是否有微任务队列":["173.52"],"如果有":["173.52","221.8"],"先执行微任务队列中的所有任务":["173.52"],"如果没有":["173.52"],"会读取宏任务队列中排在最前的任务":["173.52"],"执行宏任务的过程中":["173.52"],"遇到微任务":["173.52"],"依次加入微任务队列":["173.52"],"栈空后":["173.52"],"再次读取微任务队列里的任务":["173.52"],"依次类推":["173.52"],"定义的变量":["173.54"],"没有块的概念":["173.54"],"可以跨块访问":["173.54"],"变量名或者函数名":["173.55"],"查找":["173.55"],"什么是作用域链":["173.55"],"当访问一个变量时":["173.55"],"编译器在执行这段代码时":["173.55"],"会首先从当前的作用域中查找是否有这个标识符":["173.55","173.75"],"如果没有找到":["173.55","173.75"],"就会去父作用域查找":["173.55","173.75"],"对象的状态不受外界影响":["173.56"],"种状态":["173.56"],"请求失败后的回调":["173.57"],"maxcount":["173.57"],"设置请求的数量":["173.57"],"外层":["173.58"],"循环控制冒泡的次数":["173.58"],"指定要提取嵌套数组结构的深度":["173.59"],"默认值为":["173.59"],"示例如下":["173.59"],"apply":["173.60","176.2","179.27","283.1","283.2","288.4"],"两者的区别总结如下":["173.62"],"代理原理":["173.62"],"defineproperty的原理是通过将数据属性转变为存取器属性的方式实现的属性读写代理":["173.62"],"分别实现继承":["173.63"],"如果是使用":["173.63"],"首先假设深拷贝这个方法已经完成":["173.64"],"要拷贝一个数据":["173.64"],"我们肯定要去遍历它的属性":["173.64"],"如果这个对象的属性仍是对象":["173.64"],"继续使用这个方法":["173.64"],"如此往复":["173.64"],"o1":["173.64"],"定义的函数会默认的返回一个":["173.65"],"中的基础数据类型":["173.66"],"一共有":["173.66"],"这实际上是来源于":["173.67"],"从第一个版本开始时的一个":["173.67"],"则返回":["173.68"],"否则返回":["173.68"],"在这里需要特别注意的是":["173.68"],"检测的是原型":["173.68"],"当一个函数":["173.68"],"是用来判断":["173.69"],"表达式为":["173.69"],"引用类型object":["173.70"],"指函数封装实现":["173.71"],"闭包":["173.72"],"闭包使用过多":["173.73"],"会占用较多的内存":["173.73"],"这也是一个副作用":["173.73"],"内存泄漏":["173.73"],"标记清除方式":["173.74"],"工作原理":["173.74"],"当变量进入环境时":["173.74"],"将这个变量标记为":["173.74"],"进入环境":["173.74"],"当变量离开环境时":["173.74"],"则将其标记为":["173.74"],"指向该构造函数实例化出来对象的原型对象":["173.77"],"的变量声明都被提升到它们的函数":["173.78"],"局部作用域的顶部":["173.78"],"如果在函数内部声明的话":["173.78"],"或者提升到它们的全局作用域的顶部":["173.78"],"如果在函数外部声明的话":["173.78"],"当进行双等号比较时候":["173.79"],"先检查两个操作数数据类型":["173.79"],"如果相同":["173.79"],"则进行":["173.79"],"方法是":["173.80"],"引用类型":["173.81"],"两大类":["173.81"],"getage":["173.82"],"指向什么":["173.83"],"方法参数是一个":["173.84"],"的数组":["173.84"],"只有当所有的":["173.84"],"你可以看到明明common":["173.87"],"js里面改变了count":["173.87"],"但是输出的结果还是原来的":["173.87"],"这是因为count是一个原始类型的值":["173.87"],"会被缓存":["173.87"],"除非写成一个函数":["173.87"],"才能得到内部变动的值":["173.87"],"将common":["173.87"],"js里面的module":["173.87"],"改写成":["173.87"],"什么关系":["173.89"],"表达式会造成异步函数停止执行并且等待":["173.89"],"这种题目是开放题":["173.90"],"可以简单列举一下":["173.90"],"吗":["173.91","181.0"],"接收的是实参还是形参":["173.91"],"es5":["173.92","177.11"],"有什么变化":["173.92"],"通过这些转换函数可以进行数据类型的转换":["173.93"],"强制类型转换":["173.93"],"还可使用强制类型转换":["173.93"],"casting":["173.93"],"处理转换值的类型":["173.93"],"上面的代码中":["173.94"],"是不是永远返回":["173.94"],"显然不是":["173.94"],"假如我们修改":["173.94"],"就会影响":["173.94"],"函数的输出":["173.94"],"即函数":["173.94"],"来编写模块化":["173.95"],"依赖必须提前声明好":["173.95"],"define":["173.95"],"就是index":["173.95"],"开放题":["173.96"],"但是需要注意的是":["173.96"],"浏览器环境":["173.98"],"undefinde":["173.98"],"node环境":["173.98"],"cur":["173.99"],"和一个目标值":["174.2"],"使用map将遍历过的数字存起来":["174.4"],"空间换时间":["174.4"],"中是否存在三个元素a":["174.6"],"跳过重复的arr":["174.8"],"跳过第二个1":["174.8"],"versionsort":["174.12"],"所有字符的排列组合":["174.18"],"当前的字符串":["174.20"],"temp":["174.20"],"当前固定的字符":["174.20"],"stringgroup":["174.20"],"内层循环用于每一轮的数据比较":["174.21"],"找到中间节点":["174.24"],"mid":["174.24"],"child2":["174.28"],"listtotree":["174.29"],"使用对象重新存储数据":["174.29"],"遍历其子节点":["174.31"],"遍历子树":["174.33"],"非递归版本":["174.33"],"依次遍历其所有的兄弟节点":["174.35"],"查找节点":["174.40"],"二叉查找树特点是所有的左节点比父节点的值小":["174.42"],"break":["174.44","177.10","206.15","231.1"],"当前路径的和":["174.48"],"result":["174.48","283.12"],"存储所有的结果":["174.48"],"findpath":["174.48"],"个元素代表了第":["174.50"],"用数组将已经计算过的值存起来":["174.56"],"fib":["174.56"],"使用dp数组":["174.56"],"有一个大小为":["174.58"],"找到其中一组最长递增子序列的值":["174.62"],"当前项依次和之前的每一项进行比较":["174.64"],"累加出当前项的最长递增子序列":["174.64"],"不是一个":["175.0"],"一般用于对服务器资源会产生影响的情景":["175.0"],"比如注册用户这一类的操作":["175.0"],"幂等是指一个请求方法执行多次和仅执行一次的效果完全相同":["175.0"],"是否缓存":["175.0"],"因为两者应用场景不同":["175.0"],"浏览器一般会对":["175.0"],"作用":["175.1","175.12"],"作用1":["175.1"],"浏览器能够显示的字符集":["175.2"],"时间的描述格式由rfc822定义":["175.3"],"若网站在一定时间内一直处于304的状态":["175.4"],"那么蜘蛛可能会降低对网站的抓取次数":["175.4"],"相反":["175.4","209.12"],"若网站变化的频率非常之快":["175.4"],"每次抓取都能获取新内容":["175.4"],"那么日积月累":["175.4"],"的回访率也会提高":["175.4"],"产生较多304状态码的原因":["175.4"],"页面更新周期长或不更新":["175.4"],"纯静态页面或强制生成静态html":["175.4"],"304状态码出现过多会造成以下问题":["175.4"],"网站快照停止":["175.4"],"收录减少":["175.4"],"权重下降":["175.4"],"常见的http请求方法":["175.4"],"向服务器获取数据":["175.4"],"发送数据给服务器":["175.4"],"通常会造成服务器资源的新增修改":["175.4"],"put":["175.4"],"用于全量修改目标资源":["175.4"],"看接口":["175.4"],"也可以用于添加":["175.4"],"用于对资源进行部分修改":["175.4"],"用于删除指定的资源":["175.4"],"获取报文首部":["175.4"],"与get相比":["175.4"],"不返回报文主体部分":["175.4"],"使用场景是比如下载一个大文件前":["175.4"],"先获取其大小再决定是否要下载":["175.4"],"以此可以节约宽带资源":["175.4"],"实例化ajax对象":["175.5"],"xmlhttprequest":["175.5","195.4"],"设置请求方法和地址":["175.5"],"file类型表单自带一个选择文件点击按钮":["175.6"],"当用户选择文件之后就会触发onchange事件":["175.6"],"queryselector":["175.6"],"iptfile":["175.6"],"file表单":["175.6"],"获取用户选择的文件":["175.6"],"给自定义按钮添加一个点击事件":["175.7"],"点击按钮的时候":["175.7"],"thrown":["175.8"],"以此来避免使用非持久连接时每次需要建立连接的时延":["175.9"],"资源请求方面":["175.9"],"存在一些浪费带宽的现象":["175.9"],"例如客户端只是需要某个对象的一部分":["175.9"],"而服务器却将整个对象送过来了":["175.9"],"并且不支持断点续传功能":["175.9"],"则在请求头引入了":["175.9"],"头域":["175.9"],"它允许只请求资源的某个部分":["175.9"],"即返回码是":["175.9"],"partial":["175.9"],"这样就方便了开发者自由的选择以便于充分利用带宽和连接":["175.9"],"缓存方面":["175.9"],"中主要使用":["175.9"],"里的":["175.9"],"modified":["175.9","179.44"],"since":["175.9","206.1","206.8","219.6"],"来做为缓存判断的标准":["175.9"],"则引入了更多的缓存控制策略":["175.9"],"客户端收到后":["175.10"],"首先检查数字证书是否有效":["175.10"],"如果有效":["175.10"],"则再生成一个随机数":["175.10"],"并使用证书中的公钥对随机数加密":["175.10"],"然后发送给服务器端":["175.10"],"并且还会提供一个前面所有内容的":["175.10"],"值供服务器端检验":["175.10"],"服务器端接收后":["175.10"],"使用自己的私钥对数据解密":["175.10"],"同时向客户端发送一个前面所有内容的":["175.10"],"值供客户端检验":["175.10"],"这个时候双方都有了三个随机数":["175.10"],"按照之前所约定的加密方法":["175.10"],"使用这三个随机数生成一把秘钥":["175.10"],"以后双方通信前":["175.10"],"就使用这个秘钥对数据进行加密后再传输":["175.10"],"发送http请求":["175.10"],"服务器处理请求":["175.10"],"返回http报文":["175.10"],"响应":["175.10"],"页面渲染":["175.10"],"浏览器首先会根据":["175.10"],"建":["175.10"],"根据解析到的":["175.10"],"文件构":["175.10"],"cssom":["175.10"],"如果遇到":["175.10"],"则判端是否含有":["175.10"],"要不然":["175.10"],"的加载和执行会造成页面的渲染的阻塞":["175.10"],"树和":["175.10"],"树建立好后":["175.10"],"根据它们来构建渲染树":["175.10"],"渲染树构建好后":["175.10"],"会根据渲染树来进行布局":["175.10"],"布局完成后":["175.10"],"最后使用浏览器的":["175.10"],"ui":["175.10","205.14"],"接口对页面进行绘制":["175.10"],"这个时候整个页面就显示出来了":["175.10"],"tcp四次挥手":["175.10"],"最后一步是":["175.10"],"断开连接的四次挥手过程":["175.10"],"若客户端认为数据发送完成":["175.10"],"则它需要向服务端发送连接释放请求":["175.10"],"服务端收到连接释放请求后":["175.10"],"会告诉应用层要释放":["175.10"],"然后会发送":["175.10"],"此时表明客户端到服务端的连接已经释放":["175.10"],"不再接收客户端发的数据了":["175.10"],"但是因为":["175.10"],"连接是双向的":["175.10"],"所以服务端仍旧可以发送数据给客户端":["175.10"],"服务端如果此时还有没发完的数据会继续发送":["175.10"],"完毕后会向客户端发送连接释放请求":["175.10"],"然后服务端便进入":["175.10"],"last":["175.10","179.44","283.4"],"客户端收到释放请求后":["175.10"],"向服务端发送确认应答":["175.10"],"此时客户端进入":["175.10"],"该状态会持续":["175.10"],"2msl":["175.10"],"若该时间段内没有服务端的重发请求的话":["175.10"],"就进入":["175.10"],"closed":["175.10"],"当服务端收到确认应答后":["175.10"],"也便进入":["175.10"],"页面有多张图片":["175.10"],"http是怎样的加载表现":["175.10"],"下":["175.10"],"浏览器对一个域名下最大tcp连接数为6":["175.10"],"所以会请求多次":["175.10"],"多域名部署":["175.10"],"解决":["175.10"],"因为没有办法确定得到的公钥就一定是安全的公钥":["175.11"],"可能存在一个中间人":["175.11"],"客户端请求超时":["175.12"],"confict":["175.12"],"请求的资源可能引起冲突":["175.12"],"服务器错误":["175.12"],"internal":["175.12","223.2","255.0"],"sever":["175.12"],"表示服务器端在执行请求时发生了错误":["175.12"],"implemented":["175.12"],"表示服务器不支持当前请求所需要的某个功能":["175.12"],"service":["175.12"],"unavailable":["175.12"],"表明服务器暂时处于超负载或正在停机维护":["175.12"],"无法处理请求":["175.12"],"同样是重定向":["175.12"],"302的区别":["175.12"],"302是http1":["175.12"],"0的协议状态码":["175.12"],"在http1":["175.12"],"1版本的时候为了细化302状态码":["175.12"],"出来了两个303和307":["175.12"],"303明确表示客户端应当采":["175.12"],"法获取资源":["175.12"],"他会把post请求变为get请求进":["175.12"],"307会遵照浏览器标准":["175.12"],"不会从post变为get":["175.12"],"协议是什么":["175.12"],"概念":["175.12"],"域名系统":["175.12"],"的缩写":["175.12"],"提供的是一种主机名到":["175.12"],"地址的转换服务":["175.12"],"就是我们常说的域名系统":["175.12"],"它是一个由分层的":["175.12"],"服务器组成的分布式数据库":["175.12"],"是定义了主机如何查询这个分布式数据库的方式的应用层协议":["175.12"],"能够使人更方便的访问互联网":["175.12"],"而不用去记住能够被机器直接读取的ip数串":["175.12"],"将域名解析为ip地址":["175.12"],"客户端向dns服务器":["175.12"],"dns服务器有自己的ip地址":["175.12"],"发送域名查询请求":["175.12"],"dns服务器告知客户机web服务器的":["175.12"],"dns完整的查询过程":["175.12"],"dns服务器解析域名的过程":["175.12"],"首先会在":["175.12"],"浏览器的缓存":["175.12"],"中查找对应的ip地址":["175.12"],"如果查找到直接返回":["175.12"],"若找不到继续下一步":["175.12"],"将请求发送给":["175.12"],"本地dns服务器":["175.12"],"在本地域名服务器缓存中查询":["175.12"],"如果查找到":["175.12"],"就直接将查找结果返回":["175.12"],"本地dns服务器向":["175.12"],"根域名服务器":["175.12"],"根域名服务器会返回一个所查询域的顶级域名服务器地址":["175.12"],"顶级域名服务器":["175.12"],"接受请求的服务器查询自己的缓存":["175.12"],"如果有记录":["175.12"],"就返回查询结果":["175.12"],"如果没有就返回相关的下一级的权威域名服务器的地址":["175.12"],"权威域名服务器":["175.12"],"域名服务器返回对应的结果":["175.12"],"本地dns服务器将返回结果保存在缓存中":["175.12"],"便于下次使用":["175.12"],"本地dns服务器将返回结果返回给浏览器":["175.12"],"简述一下tcp的三次握手":["175.12"],"第一次握手":["175.12"],"客户端向服务端发送连接请求报文段":["175.12"],"该报文段中包含自身的数据通讯初始序号":["175.12"],"客户端便进入":["175.12"],"syn":["175.12"],"sent":["175.12"],"服务端收到连接请求报文段后":["175.12"],"如果同意连接":["175.12"],"该应答中也会包含自身的数据通讯初始序号":["175.12"],"发送完成后便进入":["175.12"],"received":["175.12"],"第三次握手":["175.12"],"当客户端收到连接同意的应答后":["175.12"],"还要向服务端发送一个确认报文":["175.12"],"客户端发完这个报文段后便进入":["175.12"],"此时连接建立成功":["175.12"],"相当于之前从来没有请求过":["175.13"],"返回结果是":["175.13"],"地址栏回车":["175.13"],"浏览器发起请求":["175.13"],"按照正常流程":["175.13"],"本地检查是否过期":["175.13"],"然后服务器检查新鲜度":["175.13"],"最后返回内容":["175.13"],"浏览器渲染过程中遇到":["175.13"],"文件如何处理":["175.13"],"的加载":["175.13"],"cookie的特性":["175.14"],"cookie一旦创建成功":["175.14"],"名称就无法修改":["175.14"],"cookie是无法跨域名的":["175.14"],"也就是说a域名和b域名下的cookie是无法共享的":["175.14"],"localstorage的大小一般为5mb":["175.15"],"可以储存更多的信息":["175.15"],"localstorage是持久储存":["175.15"],"数据":["175.16"],"它的生存时间由":["175.16"],"属性指定":["175.16"],"并且":["175.16"],"只能被同源的页面访问共享":["175.16"],"提供的一种浏览器本地存储的方法":["175.16"],"它借鉴了服务器端":["175.16"],"无需用户参与":["175.17"],"发送带有callback参数的get请求":["175.18"],"服务端将接口返回数据拼凑到callback函数中":["175.18"],"返回给浏览器":["175.18"],"浏览器解析执行":["175.18"],"多窗口之间消息传递":["175.19"],"页面与嵌套的iframe消息传递":["175.19"],"上面三个场景的跨域数据传递":["175.19"],"用法":["175.19"],"同源策略是浏览器需要遵循的标准":["175.20"],"而如果是服务器向服务器请求就无需遵循同源策略":["175.20"],"这时浏览器无法察觉到真正服务器的存在":["175.21"],"当然也就不需要修改配置了":["175.21"],"前端安全了解吗":["175.21"],"说一下":["175.21"],"xss":["175.21"],"以及怎么规避":["175.21"],"跨域脚本攻击":["175.21"],"攻击指的是跨站脚本攻击":["175.21"],"是一种代码注入攻击":["175.21"],"攻击者通过在网站注入恶意脚本":["175.21"],"使之在用户的浏览器上运行":["175.21"],"从而盗取用户的信息如":["175.21"],"的本质是因为网站没有对恶意代码进行过滤":["175.21"],"解析":["175.22"],"生成一棵":["175.22"],"tree":["175.22"],"的同时也会解析":["175.22"],"成样式规则":["175.22"],"树和样式规则":["175.22"],"生成一棵渲染树":["175.22"],"render":["175.22","215.3","219.6","226.1","250.3","256.4"],"进行布局":["175.22"],"重排":["175.22"],"即为每个节点分配":["175.22"],"个在屏幕上应显示的确切坐标位置":["175.22"],"进":["175.22"],"其作用是什么":["176.1"],"是给每一个":["176.1"],"interval":["176.2"],"间隔内如果还有字符输入的话":["176.2"],"就不会执行":["176.2"],"sayhi":["176.2"],"防抖成功":["176.2"],"成员都是对象":["176.3"],"成员都是弱引用":["176.3"],"可以被垃圾回收机制回收":["176.3"],"用来保存":["176.3"],"深度优先遍历的非递归写法":["176.4"],"stack":["176.4","178.1"],"同来存放将来要访问的节点":["176.4"],"的继承时通过原型或构造函数机制来实现":["176.6"],"关键字定义类":["176.6"],"里面有构造方法":["176.6"],"类之间通过":["176.6"],"解决了同步的问题":["176.9"],"只要有一个任务耗时很长":["176.9"],"后面的任务都必须排队":["176.9"],"代码清晰":["176.12"],"不用像":["176.12"],"reject":["176.13","204.3","217.7","294.1"],"服务器确认接收syn包并确认客户的syn":["176.15"],"并发送回来一个syn":["176.15"],"只能server判断出client具备发送能力":["176.16"],"第二次":["176.16"],"控制的事件处理程序":["176.17"],"以及生命周期函数调用":["176.17"],"次":["176.18"],"查询":["176.19"],"在各家大厂中":["177.0"],"技术已经成为一种最主流最不可取代的架构方案之一":["177.0"],"进行页面的渲染":["177.1"],"优势":["177.1"],"简单易用":["177.1"],"架构门槛":["177.1"],"成本较低":["177.1"],"适用性与灵活性极强":["177.1"],"劣势":["177.1"],"性能局限":["177.1"],"在复杂页面中":["177.1"],"主要由两部分组成":["177.2"],"webcore":["177.2"],"排版引擎":["177.2"],"jscore":["177.2","195.4"],"延迟较低":["177.3"],"在安卓4":["177.3"],"1以下具有安全性问题":["177.3"],"风险较高":["177.3"],"webviewurl":["177.3"],"scheme":["177.3"],"跳转拦截":["177.3"],"兼容性好":["177.3"],"但延迟较高":["177.3"],"且有长度限制":["177.3"],"webview":["177.3"],"负责实现功能协议的拼装":["177.4"],"协议的发送":["177.4"],"参数的传递":["177.4"],"回调等一系列基础功能":["177.4"],"接入方式":["177.4"],"在线h5":["177.4"],"直接将项目部署于线上服务器":["177.4"],"云平台下发更新包时":["177.5"],"可以配合客户端设置一系列的条件与规则":["177.5"],"从而实现代码的条件更新":["177.5"],"单":["177.5"],"地区":["177.5"],"例如一个只有中国地区才能更新的版本":["177.5"],"按":["177.5"],"例如只有中文版本会更新":["177.5"],"进行加载和打包":["177.6"],"代码块":["177.6"],"可以根据配置":["177.6"],"将所有模块代码合并成一个或多个代码块":["177.6"],"以便按需加载":["177.6"],"提高性能":["177.6"],"模块加载器":["177.6"],"进行各种文件类型的加载与转换":["177.6"],"拓展插件":["177.6"],"相应的事件钩子":["177.6"],"介入到打包过程中的任意环节":["177.6"],"从而对代码按需修改":["177.6"],"工作流程":["177.6"],"加载":["177.6"],"编译":["177.6","239.1"],"读取配置文件":["177.6"],"按命令":["177.6"],"配置参数":["177.6"],"compiler":["177.6","215.2","219.6","254.2"],"不会这么简单":["177.7"],"通常是需要将代码进行分析":["177.7"],"构建":["177.7"],"抽象语法树":["177.7"],"遍历进行定向的修改后":["177.7"],"再重新生成新的代码字符串":["177.7"],"如我们常用的":["177.7"],"会执行以下步骤":["177.7"],"babylon":["177.7"],"es7":["177.7","179.31"],"代码解析成":["177.7","179.31"],"进行遍历转译":["177.7"],"事件流机制":["177.8"],"就像工厂中的一条产品流水线":["177.8"],"原材料经过":["177.8"],"的一道道处理":["177.8"],"最后输出结果":["177.8"],"通过链式调用":["177.8"],"按顺序串起一个个":["177.8"],"通过事件流机制":["177.8"],"让":["177.8"],"可以插入到整个生产过程中的每个步骤中":["177.8"],"事件流编程范式的核心是基础类":["177.8"],"tapable":["177.8"],"是一种":["177.8"],"观察者模式":["177.8"],"的实现事件的订阅与广播":["177.8"],"引用了但未被使用":["177.9"],"的模块代码":["177.9"],"原理":["177.9"],"由于是在编译时优化":["177.9"],"因此最基本的前提就是语法的静态分析":["177.9"],"es6的模块机制":["177.9"],"提供了这种可能性":["177.9"],"不需要运行时":["177.9"],"便可进行代码字面上的静态分析":["177.9"],"确定相应的依赖关系":["177.9"],"具有":["177.9"],"副作用":["177.9"],"的函数无法被":["177.9"],"在引用一些第三方库":["177.9"],"需要去观察其引入的代码量是不是符合预期":["177.9"],"尽量写纯函数":["177.9"],"减少函数的副作用":["177.9"],"可使用":["177.9"],"deep":["177.9"],"可以进行作用域分析":["177.9"],"shaking":["177.11","254.3"],"uglifyjs":["177.11"],"spliting":["177.11"],"混淆":["177.11"],"压缩代码":["177.11"],"开启":["177.11"],"gzip":["177.11"],"多份编译文件按条件引入":["177.11"],"针对现代浏览器直接给":["177.11"],"只针对低端浏览器引用编译后的":["177.11"],"一个大字体包足够让你功亏一篑":["177.12"],"控制字体包的加载时机":["177.12"],"如果使用的字体有限":["177.12"],"那尽可能只将使用的文字单独打包":["177.12"],"能有效减少体积":["177.12"],"合理利用":["177.12"],"worker":["177.12"],"等存储方式进行":["177.12"],"数据与资源缓存":["177.12"],"conf":["177.13"],"终端输入":["177.13"],"访问":["177.13","221.10"],"就能看到":["177.13"],"welcome":["177.13"],"停止服务":["177.13"],"热重启服务":["177.13"],"配置代理":["177.13"],"在配置文件中配置即可完成":["177.13"],"xx":["177.13"],"常用场景":["177.13"],"代理":["177.13"],"其实":["177.13"],"可以算一层":["177.13"],"将客户端的请求处理一层后":["177.13"],"再转发到业务服务器":["177.13"],"这里可以分成两种类型":["177.13"],"其实实质就是":["177.13"],"请求的转发":["177.13"],"非常合适":["177.13"],"高效":["177.13"],"正向代理":["177.13"],"即用户通过访问这层正向代理服务器":["177.13"],"再由代理服务器去到原始服务器请求内容后":["177.13"],"再返回给用户":["177.13"],"例如我们常使用的":["177.13"],"vpn":["177.13"],"就是一种常见的正向代理模式":["177.13"],"降低成本":["177.14"],"而且也有利于服务的稳定性":["177.14"],"传统虚拟机的缺点":["177.14"],"资源占用大":["177.14"],"由于虚拟机是模拟出一套":["177.14"],"完整系统":["177.14"],"包含众多系统级别的文件和库":["177.14"],"运行也需要占用一部分资源":["177.14"],"单单启动一个空的虚拟机":["177.14"],"可能就要占用":["177.14"],"mb":["177.14"],"的内存了":["177.14"],"启动缓慢":["177.14"],"同样是由于完整系统":["177.14"],"在启动过程中就需要运行各种系统应用和步骤":["177.14"],"也就是跟我们平时启动电脑一样的耗时":["177.14"],"冗余步骤多":["177.14"],"系统有许多内置的系统操作":["177.14"],"例如用户登录":["177.14"],"系统检查等等":["177.14"],"有些场景其实我们要的只是一个隔离的环境":["177.14"],"其实也就是说":["177.14"],"也是很多大厂面试必备":["178.0"],"任务分割":["178.1"],"便是为了实现任务分割而诞生的":["178.1"],"简述":["178.1"],"v16":["178.1","205.5"],"将调度算法进行了重构":["178.1"],"将之前的":["178.1"],"reconciler":["178.1","208.4"],"重构成新版的":["178.1"],"变成了具有链表和指针的":["178.1"],"单链表树遍历算法":["178.1"],"通过指针映射":["178.1"],"每个单元都记录着遍历当下的上一步与下一步":["178.1"],"从而使遍历变得可以被暂停和重启":["178.1"],"这里我理解为是一种":["178.1"],"任务分割调度算法":["178.1"],"主要是":["178.1"],"将原先同步更新渲染的任务分割成一个个独立的":["178.1"],"小任务单位":["178.1"],"根据不同的优先级":["178.1"],"将小任务分散到浏览器的空闲时间执行":["178.1"],"中的生命周期函数在一次更新渲染循环中被":["178.2"],"多次调用":["178.2"],"的情况":["178.2"],"产生一些意外错误":["178.2"],"新版的建议生命周期如下":["178.2"],"初始化和":["178.2"],"时被调用":["178.2"],"静态函数":["178.2"],"无法使用":["178.2"],"nextprops":["178.2"],"prevstate":["178.2"],"判断是否需要更新组件":["178.2"],"可以用于组件性能优化":["178.2"],"原因":["178.3","195.9"],"因为在":["178.3"],"的实现中":["178.3"],"有一个判断":["178.3"],"当更新策略正在事务流的执行中时":["178.3"],"该组件更新会被推入":["178.3"],"dirtycomponents":["178.3"],"队列中等待执行":["178.3"],"否则":["178.3"],"开始执行":["178.3"],"batchedupdates":["178.3"],"队列更新":["178.3"],"在生命周期钩子调用中":["178.3"],"更新策略都处于更新之前":["178.3"],"组件仍处于事务流中":["178.3"],"是在更新之后":["178.3"],"此时组件已经不在事务流中了":["178.3"],"因此则会同步执行":["178.3"],"在合成事件中":["178.3"],"使用姿势如下":["178.4"],"这样就能非常快速的将一个":["178.4"],"组件转化成受控组件":["178.4"],"nameinput":["178.4"],"包裹组件":["178.4"],"可以为被包裹元素进行一层包装":["178.4"],"withmask":["178.4"],"createstore":["178.5"],"initstore":["178.5"],"它作为一个行为载体":["178.5"],"用于映射相应的":["178.5"],"并且它可以成为数据的载体":["178.5"],"将数据从应用传递至":["178.5"],"唯一的数据源":["178.5"],"一个普通的":["178.5"],"不能在":["178.6"],"中使用":["178.6"],"会报错提示":["178.6"],"类组件不会被替换或废弃":["178.6"],"不需要强制改造类组件":["178.6"],"两种方式能并存":["178.6"],"重要钩子":["178.6"],"状态钩子":["178.6"],"用于定义组件的":["178.6"],"其到类定义中":["178.6"],"只接受一个参数":["178.6"],"初始状态":["178.6"],"返回的是组件名和更改该组件对应的函数":["178.6"],"修改状态":["178.6"],"上面的代码映射到类定义中":["178.6"],"前端页面路由":["178.7"],"matchpath":["178.7"],"库提供的一个匹配方法":["178.7"],"matchpage":["178.7"],"通过页面路由的配置进行":["178.7"],"数据获取":["178.7"],"通常可以在页面路由中增加":["178.7"],"相关的静态配置":["178.7"],"用于抽象逻辑":["178.7"],"可以保证服务端逻辑的通用性":["178.7"],"ssrconfig":["178.7"],"请求获取数据":["178.7"],"获取数据通常有两种情况":["178.7"],"中间层也使用":["178.7"],"获取数据":["178.7"],"则此时":["178.7"],"方法可前后端共享":["178.7"],"嵌套地狱":["178.8"],"可读性低":["178.8"],"当函数复杂后":["178.8"],"容易让人一脸懵逼":["178.8"],"理想的做法":["178.8"],"结果传递":["178.8"],"如果想实现上面的方式":["178.8"],"那也就是":["178.8"],"函数要实现的便是":["178.8"],"执行结果在各个函数之间的执行传递":["178.8"],"这时我们就能想到一个原生提供的数组方法":["178.8"],"它可以按数组的顺序依次执行":["178.8"],"传递执行结果":["178.8"],"所以我们就能够实现一个方法":["178.8"],"pipe":["178.8"],"用于函数组合":["178.8"],"fs":["178.8"],"将函数组合成数组":["178.8"],"进行组合":["178.8"],"初始参数":["178.8"],"实现一个":["178.8"],"驼峰命名":["178.8"],"根据计算宽高的区域可分为":["179.1"],"标准盒模型":["179.1"],"ovevflow":["179.2"],"visible":["179.2"],"根层叠上下文":["179.3"],"行内样式":["179.5"],"通过增加尾元素清除浮动":["179.6"],"定义":["179.7"],"等作用":["179.7"],"语言通过":["179.8"],"transitionend":["179.9"],"动画名称":["179.9"],"但这其实是由于现在国内业界对":["179.10"],"新建一个对象":["179.11"],"通过构造函数和":["179.11"],"创建出来的对象":["179.11"],"便是实例":["179.11"],"实例通过":["179.11"],"指向原型":["179.11"],"指向构造函数":["179.11"],"说了一大堆":["179.11"],"大家可能有点懵逼":["179.11"],"这里来举个栗子":["179.11"],"是一个用来":["179.12"],"实现继承和共享属性":["179.12"],"的有限的对象链":["179.12"],"属性查找机制":["179.12"],"当查找对象的属性时":["179.12"],"函数执行上下文":["179.13"],"代码执行过程":["179.13"],"可以抽象为一种":["179.14"],"数据作用域":["179.14"],"其实也可以理解为就是一个简单的对象":["179.14"],"特性":["179.15"],"声明提前":["179.15"],"一个声明在函数体内都是可见的":["179.15"],"函数优先于变量":["179.15"],"非匿名自执行函数":["179.15"],"包含":["179.16","186.1"],"父级和自身的变量对象":["179.16"],"因此我们便能通过作用域链访问到父级里声明的变量或者函数":["179.16"],"由两部分组成":["179.16"],"中仍然保留着父级的单变量对象和作用域链":["179.17"],"因此可以继续访问到父级的变量对象":["179.17"],"这样的函数称为闭包":["179.17"],"静态":["179.18"],"引入":["179.18","218.11"],"展开运算符":["179.19"],"深拷贝":["179.19"],"proto":["179.20"],"属性所指向的":["179.21"],"原型对象":["179.21"],"就要开始考虑如何复用":["179.22"],"一般有以下的方式":["179.22"],"inherit":["179.23","286.55"],"运算顺序是从左到右":["179.24"],"直接使用":["179.25"],"分类":["179.26"],"函数的运行环境":["179.28"],"说人话就是":["179.28"],"谁调用了函数":["179.28"],"便是":["179.28"],"extend":["179.29","204.6","221.1","242.1"],"类声明与继承":["179.29"],"新的数据结构":["179.29"],"异步解决方案":["179.29"],"的使用与实现":["179.29"],"暂停代码":["179.29"],"是将代码逐字母解析成":["179.30"],"树状对象":["179.30"],"的形式":["179.30"],"这是语言之间的转换":["179.30"],"预置通用参数":["179.32"],"供多次重复调用":["179.32"],"改变原数组":["179.33"],"返回数组长度":["179.33"],"返回原数组最后一项":["179.33"],"unshift":["179.33"],"头部推入和弹出":["179.33"],"返回原数组第一项":["179.33"],"排序与反转":["179.33"],"和子页面":["179.34"],"异步下":["179.34"],"内核":["179.35","195.4"],"渲染引擎":["179.35"],"然后执行清空微任务列表":["179.36"],"循环再执行宏任务":["179.36"],"再清微任务列表":["179.36"],"微任务":["179.36"],"设置请求报文":["179.37"],"头":["179.37"],"主体":["179.37"],"服务器返回请求的文件":["179.37"],"浏览器渲染":["179.37"],"回流":["179.38"],"当元素的尺寸":["179.38"],"结构或触发某些属性时":["179.38"],"浏览器会重新渲染页面":["179.38"],"称为回流":["179.38"],"浏览器需要重新经过计算":["179.38"],"的元素上":["179.39"],"避免频繁操作样式":["179.39"],"只在运行时可用":["179.40"],"持久性存储":["179.40"],"可以分为":["179.40"],"浏览器端":["179.40"],"可通过自带的":["179.41"],"消息机制":["179.41"],"相互通信":["179.41"],"基本用法":["179.41"],"scavenge":["179.42"],"gc算法":["179.42"],"空间被占满时":["179.42"],"启动":["179.42"],"算法":["179.42"],"存活的对象从":["179.42"],"未被正确关闭":["179.43"],"导致所引用的外部变量无法被释放":["179.43"],"事件监听":["179.43"],"没有正确销毁":["179.43"],"状态管理":["179.44"],"多路复用":["179.44"],"二进制分帧层":["179.44"],"应用层和传输层之间":["179.44"],"首部压缩":["179.44"],"服务端推送":["179.44"],"已接受":["179.45"],"成为":["179.45"],"但未授权":["179.45"],"请求长度受限":["179.46"],"会被历史保存记录":["179.46"],"flash":["179.47"],"长轮询":["179.47"],"send":["179.48"],"等待确认":["179.48"],"队列回调":["179.50"],"执行上轮循环残流的":["179.50"],"httponly":["179.52"],"转义页面上的输入内容和输出内容":["179.52"],"可用于获取更新后的":["179.53"],"before":["179.54","206.8"],"beforeupdate":["179.54","180.0"],"notify":["179.54"],"通知所有依赖项更新ui":["179.54"],"updated":["179.54","236.6"],"组件已更新":["179.54"],"actived":["179.54"],"deactivated":["179.54","180.0"],"alive":["179.54","180.0","222.4","228.2"],"不销毁":["179.54"],"组件激活与失活":["179.54"],"destroy":["179.54"],"beforedestroy":["179.54","180.0"],"销毁开始":["179.54"],"销毁自身且递归销毁子组件以及事件监听":["179.54"],"删除节点":["179.54"],"teardown":["179.54"],"flushschedulequeue":["179.55"],"updatecomponent":["179.55"],"大家可以先看下面的数据相应的代码实现后":["179.55"],"理解后就比较容易看懂上面的简单脉络了":["179.55"],"数据响应性":["179.55"],"初始化观察者":["179.55"],"简单表示用于数据更新后的操作":["179.55"],"patchs":["179.55"],"changeprops":["179.56"],"递归进入下一层级的比较":["179.56"],"diffchildrens":["179.56"],"修改了后":["179.56"],"表示已经是全新节点":["179.56"],"无需再比":["179.56"],"replacenode":["179.56"],"构建出整颗差异树":["179.56"],"属性对比实现":["179.56"],"oldprops":["179.56"],"数组变化也能监听到":["179.57"],"不需要深度遍历监听":["179.57"],"跳转":["179.58"],"更改状态":["179.59"],"actions":["179.59"],"异步更改状态":["179.59"],"局部最优解法":["179.60"],"分治算法":["179.60"],"选择排序":["179.61"],"遍历自身以后的元素":["179.61"],"最小的元素跟自己调换位置":["179.61"],"selectsort":["179.61"],"quicksort":["179.62"],"到第二级也只有一种方法":["179.63"],"第三级":["179.63"],"二叉查找树":["179.64"],"是一种特殊的二叉树":["179.64"],"能有效地提高查找效率":["179.64"],"小值在左":["179.64"],"大值在右":["179.64"],"你有一把天平":["179.65"],"请问":["179.65"],"至少需要称多少次能保证一定找到假币":["179.65"],"在实例初始化之后":["180.0"],"数据观测observer":["180.0"],"和event":["180.0"],"watcher事件配置之前被调用":["180.0"],"created":["180.0","220.1"],"实例已经创建完成":["180.0"],"在这一步":["180.0"],"以下配置被完成":["180.0"],"数据观测":["180.0"],"属性和方法的运算":["180.0"],"watch":["180.0"],"event时间回调":["180.0"],"el尚未生成":["180.0"],"beforemount":["180.0","220.1"],"在挂载之前被调用":["180.0"],"render尚未被调用":["180.0"],"el被新创建的vm":["180.0"],"el替换":["180.0"],"并挂载到实例上去之后调用":["180.0"],"数据更新时":["180.0"],"被调用":["180.0"],"发生在虚拟dom重新渲染和打补丁之前":["180.0"],"由于数据更改导致的虚拟dom重新渲染和打补丁":["180.0"],"在这之后调用":["180.0"],"实例销毁之前调用":["180.0"],"destroyed":["180.0"],"实例销毁之后调用":["180.0"],"调用后vue实例的所有东西都会被解绑":["180.0"],"所有的事件监听会被移除":["180.0"],"子实例被销毁":["180.0"],"该钩子在服务端渲染期间不被调用":["180.0"],"activated":["180.0"],"八":["180.0"],"mixin的使用场景和原理":["180.0"],"vue的mixin的作用就是抽离公共的业务逻辑":["180.0"],"原理类似对象的继承":["180.0"],"在模板编译的时候":["180.1"],"处理组件中的子节点和slot标签":["180.1"],"三十一":["180.2"],"如何理解自定义指令":["180.2"],"在生成ast语法树时":["180.2"],"遇到指令会给当前元素添加directives属性":["180.2"],"通过gendirectives生成指令代码":["180.2"],"在patch前":["180.2"],"将指令的钩子提取到cbs中":["180.2"],"在patch过程中调用对应的钩子":["180.2"],"当执行cbs对应的钩子时":["180.2"],"调用对应指令定义方法":["180.2"],"三十二":["180.2"],"alive平时在哪里使用":["180.2"],"原理是什么":["180.2"],"使用keep":["180.2"],"alive包裹动态组件时":["180.2"],"会对组件进行缓存":["180.2"],"避免组件重新创建":["180.2"],"使用有两个场景":["180.2"],"一个是动态组件":["180.2"],"一个是router":["180.2"],"view":["180.2","195.7"],"实例里":["181.0"],"可以直接是一个对象":["181.0"],"子组件":["181.0"],"childname":["181.0"],"router":["181.0"],"template":["181.0","195.9"],"因为组件是用来复用的":["181.0"],"里对象是引用关系":["181.0"],"如果组件中":["181.0"],"那么这样作用域没有隔离":["181.0"],"子组件中的":["181.0"],"属性值会相互影响":["181.0"],"选项是一个函数":["181.0"],"那么每个实例可以维护一份被返回对象的独立的拷贝":["181.0"],"组件实例之间的":["181.0"],"属性值不会互相影响":["181.0"],"是不会被复用的":["181.0"],"因此不存在引用对象的问题":["181.0"],"model":["181.0"],"的原理":["181.0"],"我们在":["181.0"],"项目中主要使用":["181.0"],"指令在表单":["181.0"],"select":["181.0","236.4"],"等元素上创建双向数据绑定":["181.0"],"我们知道":["181.0"],"本质上不过是语法糖":["181.0"],"在内部为不同的输入元素使用不同的属性并抛出不同的事件":["181.0"],"元素使用":["181.0"],"属性和":["181.0"],"checkbox":["181.0","205.17"],"radio":["181.0"],"字段将":["181.0"],"并将":["181.0"],"作为事件":["181.0"],"以":["181.0"],"表单元素为例":["181.0"],"相当于":["181.0"],"如果在自定义组件中":["181.0"],"默认会利用名为":["181.0"],"和名为":["181.0"],"的事件":["181.0"],"父组件":["181.0"],"modelchild":["181.0"],"methods":["181.0","245.3"],"test1":["181.0"],"小红":["181.0"],"组件间通信有哪几种方式":["181.0"],"组件间通信是面试常考的知识点之一":["181.0"],"这题有点类似于开放题":["181.0"],"你回答出越多方法当然越加分":["181.0"],"表明你对":["181.0"],"掌握的越熟练":["181.0"],"组件间通信只要指以下":["181.0"],"类通信":["181.0"],"父子组件通信":["181.0"],"隔代组件通信":["181.0"],"兄弟组件通信":["181.0"],"下面我们分别介绍每种通信方式且会说明此种方法可适用于哪类组件间通信":["181.0"],"适用":["181.0"],"这种方法是":["181.0"],"组件的基础":["181.0"],"相信大部分同学耳闻能详":["181.0"],"所以此处就不举例展开介绍":["181.0"],"如果在普通的":["181.0"],"元素上使用":["181.0"],"引用指向的就是":["181.0"],"如果用在子组件上":["181.0"],"引用就指向组件实例":["181.0"],"访问父":["181.0"],"子实例":["181.0"],"适用于":["181.0"],"父子":["181.0"],"隔代":["181.0"],"这种方法通过一个空的":["181.0"],"实例作为中央事件总线":["181.0"],"事件中心":["181.0"],"用它来触发事件和监听事件":["181.0"],"从而实现任何组件间的通信":["181.0"],"包括父子":["181.0"],"兄弟组件":["181.0"],"attrs":["181.0","226.1"],"listeners":["181.0"],"包含了父作用域中不被":["181.0"],"所识别":["181.0"],"且获取":["181.0"],"的特性绑定":["181.0"],"除外":["181.0"],"当一个组件没有声明任何":["181.0"],"这里会包含所有父作用域的绑定":["181.0"],"并且可以通过":["181.0"],"传入内部组件":["181.0"],"通常配合":["181.0"],"inheritattrs":["181.0"],"选项一起使用":["181.0"],"包含了父作用域中的":["181.0"],"不含":["181.0"],"修饰器的":["181.0"],"事件监听器":["181.0"],"它可以通过":["181.0"],"祖先组件中通过":["181.0"],"来提供变量":["181.0"],"然后在子孙组件中通过":["181.0"],"来注入变量":["181.0"],"主要解决了跨级组件间的通信问题":["181.0"],"不过它的使用场景":["181.0"],"主要是子组件获取上级组件的状态":["181.0"],"跨级组件间建立了一种主动提供与依赖注入的关系":["181.0"],"每一个":["181.0"],"应用的核心就是":["181.0"],"基本上就是一个容器":["181.0"],"它包含着你的应用中大部分的状态":["181.0"],"的状态存储是响应式的":["181.0"],"组件从":["181.0"],"中读取状态的时候":["181.0"],"若":["181.0"],"中的状态发生变化":["181.0"],"那么相应的组件也会相应地得到高效更新":["181.0"],"中的状态的唯一途径就是显式地提交":["181.0"],"mutation":["181.0"],"这样使得我们可以方便地跟踪每一个状态的变化":["181.0"],"你使用过":["181.0"],"的区别":["182.0","183.0","187.0"],"type可以通过":["183.4"],"操作符来定义":["183.4"],"覆盖":["183.5"],"的效果":["183.5"],"始终只有最后一个type生效":["183.5"],"超集":["184.1"],"支持es6语法":["184.1"],"相对于":["184.2"],"类型的作用是什么":["184.5"],"类型是那些总是会抛出异常或根本就不会有返回值的函数表达式或箭头函数表达式的返回值类型":["184.6"],"任何类型的值都可以赋给":["184.6"],"say":["184.7"],"viod":["184.7"],"有什么差异":["184.9"],"noimplicitthis":["184.9"],"当左侧操作数为":["184.16"],"编译器会尝试定位需要导入的模块文件":["184.17"],"兼容类型":["184.18"],"也就是说两者在结构上是一致的":["184.18"],"而不一定非得通过":["184.18"],"的方式继承而来":["184.18"],"这种特性就叫做逆变":["184.21"],"函数的参数有逆变的性质":["184.21"],"子类型可以赋值给父类型":["184.22"],"既逆变又协变":["184.22"],"叫做":["184.22"],"只要类型不一样就会报错":["184.23"],"仅包含对象自身的可枚举属性":["184.24"],"那么这个文件声明的类型就会变成全局声明":["184.25"],"或者同名的":["184.26"],"库包":["184.27"],"选择安装":["184.27"],"指定编译某些文件":["184.28"],"或者指定排除某些文件":["184.28"],"compileonsave":["184.28"],"让ide在保存文件的时候根据tsconfig":["184.28"],"全局命名空间":["184.29"],"protected":["184.30"],"readonly":["184.30","249.2","251.2"],"修饰符的理解":["184.30"],"关键字的作用":["184.31"],"中排除出可分配给":["184.32"],"u的元素":["184.32"],"不得不说另外一个概念":["185.1"],"子集":["185.1"],"怎么理解这两个呢":["185.1"],"如果一个集合":["185.1"],"类型擦除":["185.3"],"在编译过程中批注的内容和接口会在运行时利用工具擦除":["185.3"],"等数据格式":["185.6"],"对象的类型就是用接口来描述的":["185.6"],"的语法":["185.7"],"可处理已有的":["185.7"],"设置需要进行编译的文件":["186.2"],"生成相应的":["186.3"],"sourcemap":["186.3","193.5"],"outfile":["186.3"],"将输出文件合并为一个文件":["186.3"],"outdir":["186.3"],"指定输出目录":["186.3"],"rootdir":["186.3"],"用来控制输出目录结构":["186.3"],"removecomments":["186.3"],"删除编译后的所有的注释":["186.3"],"noemit":["186.3"],"不生成输出文件":["186.3"],"importhelpers":["186.3"],"代表我们不知道他是什么类型":["188.0"],"但是他有类型":["188.0"],"无法直接使用":["188.0"],"要使用":["188.0"],"只要不写":["189.0"],"语句都可以":["189.0"],"或者不返回东西":["189.0"],"demo2":["190.2"],"listref":["190.2"],"demo3":["190.3"],"setrefaction":["190.4"],"higheraction":["190.4"],"对比下没有添加特效的":["191.0"],"percentage":["191.1"],"precentage":["191.1"],"表示编译的百分比":["191.1"],"message就是webpack打包时想告诉我们的消息":["191.1"],"args就是一些其他消息":["191.1"],"friendlyerrorswebpackplugin":["191.3"],"但是这也是我使用webpack必走的一条路":["191.4"],"所以记录下来":["191.4"],"转译":["193.1"],"并将结果转换为":["193.1"],"得到entry入口":["193.2"],"读取入口文件内容":["193.2"],"流程类":["193.3"],"externals":["193.4"],"用于声明外部资源":["193.4"],"会直接忽略这部分资源":["193.4"],"跳过这些资源的解析":["193.4"],"打包操作":["193.4"],"后处理":["193.4"],"optimization":["193.4","229.0"],"用于控制如何优化产物包体积":["193.4"],"内置":["193.4"],"dead":["193.4"],"devtool":["193.5"],"用于配置产物":["193.5"],"生成规则":["193.5"],"devserver":["193.5"],"来优化打包体积的":["193.6"],"生产环境默认开启":["193.6"],"但是能在":["193.7"],"件很":["193.7"],"的情况下以":["193.7"],"式把":["193.7"],"件内容注":["193.7"],"到代码中去":["193.7"],"编译时配置全局变量":["193.8"],"这对开发模式和发布模式的构建允许不同的行为非常有用":["193.8"],"hotmodulereplacementplugin":["193.8"],"optimize":["193.8"],"做出相应的反应":["193.9"],"执行对象的run方法开始执行编译":["193.9"],"确定入口":["193.9"],"从配置的entry入口":["193.9"],"开始解析文件构建ast语法树":["193.9"],"找出依赖":["193.9"],"最终一起打包到指定的文件中":["193.10"],"plugin赋予了webpack各种灵活的功能":["193.10"],"如打包优化":["193.10"],"hybrid":["194.1"],"的渲染方式":["194.1"],"将视图层和逻辑层是分开的":["194.1"],"双线程同时运行":["194.1"],"当视图存在交互的时候":["194.2"],"例如用户点击你界面上某个按钮":["194.2"],"这类反馈应该通知给开发者的逻辑层":["194.2"],"需要将对应的处理状态呈现给用户":["194.2"],"此时小程序需要重新加载启动":["194.4"],"短时间内收到系统两次以上内存警告":["194.5"],"也会对小程序进行销毁":["194.5"],"框架":["195.0","200.13"],"数据结构":["195.0"],"算法等内容":["195.0"],"无论是基础还是进阶":["195.0"],"亦或是源码解读":["195.0"],"你都能在本图谱中得到满意的答案":["195.0"],"小程序客户端通过":["195.2"],"wx":["195.2","195.3","195.6"],"有以下两种方式":["195.3"],"如果户关注了某个相同主体公众号":["195.3"],"或曾经在某个相同主体app":["195.3"],"公众号上进行过微信登录授权":["195.3"],"可以直接获取":["195.3"],"渲染":["195.4","196.13"],"中使用自带":["195.4"],"wkwebview":["195.4"],"使用腾讯的":["195.4"],"x5":["195.4"],"逻辑层使用在":["195.4"],"中使用自带的":["195.4"],"中使用腾讯的":["195.4"],"开发工具使用":["195.4"],"nw":["195.4"],"同时提供了视图层和逻辑层的运行环境":["195.4"],"mac下":["195.4"],"beautify":["195.4"],"对微信开发工具":["195.4"],"02":["195.4","284.46"],"1808080代码批量格式化":["195.4"],"applications":["195.4"],"wechatwebdevtools":["195.4"],"contents":["195.4"],"中找到":["195.4"],"useragent":["195.4"],"game":["195.4"],"getnewweixinjsbridge":["195.4"],"invoke":["195.4"],"triggersubscribeevent":["195.4"],"triggeronevent":["195.4"],"weixinjsbridge":["195.4"],"weixinjsbridgemap":["195.4"],"globalbridge":["195.4"],"devtoolsconfig":["195.4"],"online":["195.4"],"autotest":["195.4"],"clear":["195.4","260.2"],"1e4":["195.4"],"responsetype":["195.4"],"calibration":["195.4"],"网上支持http2的服务器":["195.5"],"snel":["195.5"],"wechatimg15":["195.6"],"授权获取用户信息流程":["195.6"],"有有效期":["195.6"],"有效期并没有被告知开发者":["195.6"],"只知道用户越频繁使用小程序":["195.6"],"有效期越长":["195.6"],"在调用":["195.6"],"时会直接更新":["195.6"],"导致旧":["195.6"],"失效":["195.6"],"小程序内先调用":["195.6"],"也会同时给出一份优化的指引建议":["195.7"],"原生组件同层渲染":["195.7"],"小程序在最初的技术选型时":["195.7"],"引入了原生组件的概念":["195.7"],"因为原生组件可以使小程序的能力更加丰富":["195.7"],"比如地图":["195.7"],"音视频的能力":["195.7"],"但是原生组件是由客户端原生渲染的":["195.7"],"导致了原生组件的层级是最高的":["195.7"],"开发者很容易遇到打开调试的问题":["195.7"],"发现视频组件挡在了":["195.7"],"vconsole":["195.7"],"为了解决这个问题":["195.7"],"当时微信做了一个过渡的方案":["195.7"],"cover":["195.7","214.2"],"view可以覆盖在原生组件之上":["195.7"],"这一套方案解决了大部分的需求场景":["195.7"],"比如说视频组件上很多的按钮":["195.7"],"标题甚至还有动画的弹幕":["195.7"],"这些都是用":["195.7"],"去实现的":["195.7"],"但它还是没有完全解决原生组件的开发体验问题":["195.7"],"有一些限制":["195.7"],"无法与其他组件混在一起渲染":["195.7"],"没有完整的触摸事件":["195.7"],"对样式的表现有差异":["195.7"],"对样式的支持度不够高":["195.7"],"因此微信决定将用同层渲染取代":["195.7"],"它能像普通组件一样使用":["195.7"],"原生组件的层级不再是最高":["195.7"],"而是和其他的非原生组件在同一层级渲染":["195.7"],"可完全由":["195.7"],"控制":["195.7"],"可完全支持触摸事件":["195.7"],"微信表示":["195.7"],"同层渲染在":["195.7"],"平台小程序上已经开始内测":["195.7"],"会很快开放给开发者":["195.7"],"平台已经取得突破性进展":["195.7"],"目前正在做一轮封装的工作":["195.7"],"开放指日可待":["195.7"],"wepy":["195.7","200.14"],"mpvue":["195.7"],"数据流管理":["195.7"],"相比传统的小程序框架":["195.7"],"这个一直是我们作为资深开发者比较期望去解决的":["195.7"],"开发中":["195.7"],"随着":["195.7"],"flux":["195.7"],"redux":["195.7"],"等多个数据流工具出现":["195.7"],"我们也期望在业务复杂的小程序中使用":["195.7"],"默认支持":["195.7"],"在脚手架生成项目的时候可以内置":["195.7"],"的移植版本":["195.7"],"当然支持":["195.7"],"同样在脚手架生成项目的时候可以内置":["195.7"],"组件化":["195.7"],"如果你和我们一样":["195.7"],"经历了从无到有的小程序业务开发":["195.7"],"建议阅读":["195.7"],"小程序的组件化开发":["195.7"],"进行官方语法的组件库开发":["195.7"],"从基础库":["195.7"],"官方提供了组件化解决方案":["195.7"],"实现了单文件组件":["195.7"],"最大的差别是文件后缀":["195.7"],"wpy":["195.7"],"只是写法上会有差异":["195.7"],"具体可以查看":["195.7"],"主流框架使用案例":["195.7"],"学习起来有一定成本":["195.7"],"不过也会很快适应":["195.7"],"支持单文件组件":["195.7"],"都在一个":["195.7"],"的写法类似":["195.7"],"所以对":["195.7"],"开发熟悉的同学会比较适应":["195.7"],"工程化":["195.7"],"所有的小程序开发依赖官方提供的开发者工具":["195.7"],"开发者工具简单直观":["195.7"],"对调试小程序很有帮助":["195.7"],"现在也支持腾讯云":["195.7"],"目前我们还没有使用":["195.7"],"但是对新的一些开发者还是有帮助的":["195.7"],"可以申请测试报告查看小程序在真实的移动设备上运行性能和运行效果":["195.7"],"但是它本身没有类似前端工程化中的概念和工具":["195.7"],"内置了构建":["195.7"],"命令初始化项目":["195.7"],"onshow":["195.8","196.6","196.7"],"f2f4fa":["195.8"],"最后index":["195.9"],"js就负责各种初始化和mount":["195.9"],"class和style为什么暂不支持组件":["195.9"],"目前的组件是使用小程序的":["195.9"],"标签实现的":["195.9"],"给组件指定的class和style是挂载在template标签上":["195.9"],"而template":["195.9"],"标签不支持":["195.9"],"及":["195.9"],"解决方案":["195.9"],"在自定义组件上绑定class或style到一个props属性上":["195.9"],"组件componenta":["195.9"],"pclass":["195.9"],"pageb":["195.9"],"cuscomponentaclass":["195.9"],"但是这样会有问题就是style加上scoped之后":["195.9"],"编译模板生成的代码是下面这样的":["195.9"],"8f1d914e":["195.9"],"所以想要这些组件的class生效就不能使用scoped的style":["195.9"],"改成下面这样":["195.9"],"最好自己给a":["195.9"],"class和b":["195.9"],"class加前缀以防其他的文件引用这些样式":["195.9"],"在定义组件上绑定style属性到一个props属性上":["195.9"],"p组件componenta":["195.9"],"pstyle":["195.9"],"cuscomponentastyle":["195.9"],"也可以通过定义styleobject":["195.9"],"然后通过工具函数转化为stylestring":["195.9"],"bstyle":["195.9"],"当然自定义组件确定只会改变某个css样式":["195.9"],"通过pros传入单个样式的值":["195.9"],"然后通过":["195.9"],"style绑定肯定没问题":["195.9"],"分包加载":["195.9"],"json修改":["195.9"],"react框架一样":["196.1"],"微信小程序框架也存在生命周期":["196.1"],"通过app":["196.2"],"就会调用的生命周期函数":["196.3"],"这些函数在特殊的时间点或遇到一些特殊的框架事件时被自动触发":["196.4"],"小程序启动":["196.6"],"或从后台进入前台显示时触发":["196.6"],"发送请求获取数据":["196.7"],"监听页面显示":["196.7"],"attached":["196.8","196.9","223.2","255.0"],"此时不能调用":["196.9"],"setdata":["196.9"],"在组件完全初始化完毕":["196.9"],"进入页面节点树后":["196.9"],"组件所在的页面被隐藏时执行":["196.10"],"程序初始化完成后":["196.12"],"触发onshow":["196.12"],"会触发onready":["196.13"],"元素和样式":["196.13"],"onread":["196.14"],"进入下一个页面":["196.14"],"服务端校验用户信息通过之后":["197.1"],"下发一个代表登录态的":["197.1"],"方法会生成code":["197.2"],"将code作为参数传递给微信服务器指定接口":["197.2"],"appid":["197.4"],"appsecret":["197.4"],"一起发送到微信服务器":["197.4"],"临时令牌":["197.6"],"中保存有效期数据":["197.6"],"该有效期数据应该在服务端校验登录态时和约定的时间":["197.6"],"如运行中的线程和一些基础库的初始化":["198.2"],"然后才开始进入启动状态":["198.2"],"展示一个固定的启动界面":["198.2"],"我们可以从加载":["198.4"],"选项":["198.5"],"及时清理无用的代码和资源文件":["198.5"],"减少资源包中的图片等资源的数量和大小":["198.5"],"setstoragesync":["198.6"],"方法将数据存储在本地":["198.6"],"可以在前置页面将一些有用的字段带到当前页":["198.6"],"进行首次渲染":["198.6"],"首屏体验":["198.8"],"提供了非常完善":["199.1"],"用户选择购买":["199.2"],"完成选购流程":["199.2"],"支付流程图如下所示":["199.3"],"获取预付单信息":["199.4"],"prepay":["199.4"],"同时将获取的数据再次进行相应规则的签名":["199.4"],"向小程序端响应必要的信息":["199.4"],"小程序端在获取对应的参数后":["199.4"],"调用wx":["199.4"],"requestpayment":["199.4"],"app微信支付大同小异":["199.6"],"数据的传递":["200.1"],"网络请求都由native层做转发":["200.1"],"这里的webview是什么呢":["200.1"],"可以想象webview是一个嵌入式的浏览器":["200.1"],"是嵌入在原生应用中的":["200.1"],"小程序页面":["200.2"],"因为小程序是双线程架构":["200.2"],"nav":["200.3","286.55"],"还有一个每个页面都在使用的":["200.3"],"渲染层中编译后的":["200.4"],"exparser":["200.4"],"自定义组件标记":["200.4"],"会通过":["200.4","219.4","256.1"],"因为javascript实在是太灵活了":["200.5"],"浏览器的接口也太丰富了":["200.5"],"很容易就遗漏一些危险的接口":["200.5"],"而且就算是禁用掉了所有感觉到危险的接口":["200.5"],"也势必防不住浏览器内核的下次更新":["200.5"],"指不定又会出现一些漏洞":["200.5"],"多页面应用":["200.6"],"因为小程序是多页面架构设计":["200.7"],"为了更好的让交互和原生":["200.7"],"我们接下来就带大家编译一个wxss看一下":["200.9"],"那么这个编译工具在哪呢":["200.10"],"我们来找一下":["200.10"],"包含设备高度":["200.11"],"设备宽度":["200.11"],"taro就是这样的框架":["200.14"],"预编译框架的核心思想就是dsl":["200.14"],"可以想象一下":["200.15"],"如果把vue的template编译成wxml就变为了小程序的视图层":["200.15"],"逻辑层是没有办法通过操作dom来改变视图的":["200.16"],"所以我们看到了半编译半运行时框架通过半编译":["200.16"],"为此":["201.1"],"小程序平台设计了不同的权限管理使得项目管理者可以更加高效管理整个团队的协同工作":["201.1"],"提交审核":["201.3"],"开发管理":["201.5"],"分支":["201.8"],"拉取":["201.8"],"我们的页面都不是孤立存在的":["202.1"],"而是通过和其他页面进行交互":["202.1"],"redirectto":["202.3","202.18"],"用于保留当前页面":["202.4"],"跳转到应用内的某个页面":["202.4"],"或是达到微信所限制的":["202.7"],"跳转到":["202.10"],"关闭所有页面":["202.14"],"navigateback":["202.18","202.19"],"可以返回到原页":["202.18"],"和手机":["203.1"],"有着同等的重要性":["203.1"],"解决了移动":["203.2"],"能":["203.2"],"不":["203.2"],"络通信状态":["203.3"],"数据缓存能":["203.3"],"或是做app的整体嫁接":["203.5"],"左右":["203.6"],"但是双周留存骤降到仅有1":["203.6"],"的start":["204.0"],"而它的源码也不多":["204.0"],"所以很值得一看":["204.0"],"阅读源码不仅能学习到新的知识点也能发现自己的不足":["204.0"],"创建一个axios实例":["204.1"],"调用bind函数将axios原型的request函数上下文绑定到context上":["204.1"],"并返回一个实例":["204.1"],"拦截器的遍历":["204.2"],"utils":["204.2","204.6"],"foreachhandler":["204.2"],"源码很简单":["204.2"],"提供":["204.2"],"堆栈来储存拦截器":["204.2"],"同时在原型上增加了3个函数对这个堆栈的增删以及遍历":["204.2"],"实例的":["204.2"],"对象只在":["204.2"],"函数中使用":["204.2"],"而这个函数是":["204.2"],"请求的源函数":["204.2"],"你调用的请求函数像":["204.2"],"等本质都是调用":["204.2"],"这个函数":["204.2"],"而拦截器的的处理也是在这个函数中":["204.2"],"我们回到":["204.2"],"listenersi":["204.3"],"这段代码应该是对旧版本的兼容":["204.3"],"onfulfilled":["204.3"],"unsubscribe":["204.3"],"执行executor函数":["204.3"],"把取消请求的权限提供给使用者":["204.3"],"cancellation":["204.3"],"requested":["204.3"],"是要用作":["204.4"],"令牌的值的cookie的名称":["204.4"],"支持node":["204.5"],"优点很多":["204.5"],"当然也有缺点":["204.5"],"端和一些对js使用的小技巧等":["204.6"],"工具函数也值得一看":["204.6"],"变化":["205.0"],"异步方式获取事件e":["205.1"],"settimeout打印e":["205.1"],"handleshowtext":["205.2"],"mouseevent":["205.2"],"stoppropagation":["205.2"],"v16无效":["205.2"],"nativeevent":["205.2"],"stopimmediatepropagation":["205.2"],"阻止监听同一事件的其他事件监听器被调用":["205.2"],"现有行为":["205.3"],"有时还会提供额外的信息":["205.3"],"blur":["205.3"],"focus":["205.3","207.8"],"创建元素是比较频繁的操作":["205.4"],"本身也存在一些问题":["205.4"],"无法做到性能优化":["205.4"],"具体可见官方优化的":["205.4"],"动机":["205.4"],"v17之后":["205.4"],"官方进行合作":["205.4"],"直接通过将":["205.4"],"runtime":["205.4","214.1","219.6"],"对":["205.4"],"语法进行了新的转换而不依赖":["205.4"],"因此v17使用":["205.4"],"副作用清理函数是":["205.5"],"异步执行":["205.5"],"如果要卸载组件":["205.5"],"则清理会在屏幕更新后运行":["205.5"],"v17":["205.5","207.11"],"将在运行任何新副作用之前执行所有副作用的清理函数":["205.5"],"针对所有组件":["205.5"],"只对组件内的副作用保证这种顺序":["205.5"],"forgot":["205.6"],"so":["205.6","214.1","256.4"],"surfaces":["205.6"],"不同于常规压缩后的":["205.7"],"它们可以通过":["205.7"],"expirationtimes":["205.9"],"模型只能区分是否":["205.9"],"而v18则全面开启并发模式":["205.10"],"并发模式可帮助应用保持响应":["205.10"],"并根据用户的设备性能和网速进行适当的调整":["205.10"],"该模式通过使渲染可中断来修复阻塞渲染限制":["205.10"],"concurrent":["205.10"],"控制台会打印错误日志要提醒你使用react":["205.11"],"该警告也意味此项变更没有造成breaking":["205.11"],"而可以并存":["205.11"],"当然尽量是不建议":["205.11"],"render两次":["205.12"],"hydrate":["205.13"],"并生成页面最终内容":["205.13"],"上述流程是串行执行的":["205.13"],"v18前的":["205.13"],"比如点击按钮":["205.14"],"搜索框打字是需要立即响应的行为":["205.14"],"如果没有立即响应给用户的体验就是感觉卡顿延迟":["205.14"],"非紧急更新":["205.14"],"从一个视图过渡到另一个视图":["205.14"],"一些延迟可以接受的更新操作":["205.14"],"不需要立即响应":["205.14"],"允许将更新标记为非紧急事件处理":["205.14"],"执行返回一个数组":["205.15"],"数组有两个状态值":["205.15"],"指处于过渡状态":["205.15"],"正在加载中":["205.15"],"starttransition":["205.15"],"通过回调函数将状态更新包装起来告诉":["205.15"],"react这是一个过渡任务":["205.15"],"该副本将推迟到紧急更新之后":["205.16"],"如果当前渲染是一个紧急更新的结果":["205.16"],"比如用户输入":["205.16"],"将返回之前的值":["205.16"],"然后在紧急渲染完成后渲染新的值":["205.16"],"typeahead":["205.16"],"使得外部":["205.19"],"库使用":["205.20"],"它允许":["205.20"],"read":["206.0","282.2"],"actual":["206.0"],"react事件正在执行":["206.0"],"正在计算":["206.0"],"正在提交":["206.0"],"0b0000000":["206.0"],"batchedcontext":["206.0"],"0b0000001":["206.0"],"exists":["206.1"],"can":["206.1","223.2","243.1","256.4"],"roll":["206.1"],"existing":["206.1","218.5"],"might":["206.1"],"accidentally":["206.1"],"rely":["206.1"],"pickarbitrarylane":["206.1"],"algorithm":["206.1"],"assigning":["206.1"],"stable":["206.1"],"updates":["206.1","214.1"],"within":["206.1"],"inputs":["206.1"],"must":["206.1","214.1"],"example":["206.1"],"renderlanes":["206.1"],"inputcontinuouslanes":["206.2"],"defaultlanepriority":["206.2"],"defaultlanes":["206.2"],"lanemap":["206.3"],"immediatepriority":["206.3","206.15"],"immediateschedulerpriority":["206.3"],"userblockingpriority":["206.3","206.15"],"userblockingschedulerpriority":["206.3"],"normalpriority":["206.3"],"normalschedulerpriority":["206.3"],"updatestate":["206.4"],"payload":["206.4"],"需要更新的内容":["206.4"],"更新完后的回调":["206.4"],"unmounted":["206.5","256.4"],"sharedqueue":["206.5"],"pending":["206.5"],"创建更新对象并与":["206.6"],"fiber":["206.6","206.17","209.5"],"调度":["206.7"],"were":["206.8"],"backwards":["206.8"],"compat":["206.8","221.1","221.3","230.2","236.1","252.6"],"reasons":["206.8"],"executioncontext":["206.8"],"rendercontext":["206.8"],"nocontext":["206.8"],"workinprogressrootupdatedlanes":["206.8"],"mergelanes":["206.8"],"workinprogressrootexitstatus":["206.8"],"rootsuspendedwithdelay":["206.8"],"suspended":["206.8"],"means":["206.8"],"definitely":["206.8"],"won":["206.8"],"finish":["206.8"],"now":["206.8","283.4","283.12"],"marking":["206.8"],"incoming":["206.8"],"interrupting":["206.8"],"switching":["206.8"],"todo":["206.8"],"determine":["206.9","232.4"],"nextlanes":["206.9"],"getnextlanes":["206.9"],"workinprogressroot":["206.9"],"workinprogressrootrenderlanes":["206.9"],"nolanes":["206.9"],"level":["206.9"],"computed":["206.9","225.3","255.0"],"during":["206.9","256.4"],"newcallbackpriority":["206.9"],"returnnextlanespriority":["206.9"],"则可以中断":["206.10"],"packages":["206.10"],"为浏览器处理每一帧结束":["206.11"],"时间戳":["206.11"],"所以这里表示的是":["206.11"],"在浏览器每一帧空闲的时候":["206.11"],"才会去处理此任务":["206.11"],"如果当前任务在浏览器执行的":["206.11"],"某一帧":["206.11"],"则会":["206.11"],"we":["206.12"],"don":["206.12","214.2"],"need":["206.12"],"additional":["206.12"],"field":["206.12"],"work":["206.12"],"progress":["206.12"],"originbeginwork":["206.13"],"得实际执行":["206.13"],"workinprogress":["206.14"],"resetchildlanes":["206.14"],"append":["206.14"],"effects":["206.14","247.2"],"parents":["206.14"],"failed":["206.14"],"subtree":["206.14","219.3"],"onto":["206.14"],"completion":["206.14"],"order":["206.14"],"affects":["206.14"],"side":["206.14","214.2"],"把已收集到的副作用":["206.14"],"合并到父级effect":["206.14"],"lists中":["206.14"],"firsteffect":["206.14"],"lasteffect":["206.14"],"switch":["206.15","222.3"],"immediate":["206.15"],"blocking":["206.15"],"idlepriority":["206.15"],"idle":["206.15"],"lowpriority":["206.15"],"beginning":["206.16"],"更新当前帧结束时间":["206.16"],"deadline":["206.16"],"hastimeremaining":["206.16"],"hasmorework":["206.16"],"链表树":["206.17"],"在协调阶段":["206.17"],"会根据浏览器每一帧去做比较":["206.17"],"对于不同的浏览器":["207.1"],"对事件存在不同的兼容性":["207.1"],"绑定的事件比如":["207.2"],"将不再执行":["207.3"],"但是底层原理完全不同":["207.3"],"接下来会讲到其功能实现":["207.3"],"阻止默认行为":["207.3"],"阻止默认行为和原生的事件也有一些区别":["207.3"],"原生事件":["207.3"],"第二个就是在一次渲染过程中":["207.4"],"对事件标签中事件的收集":["207.4"],"这样更利于一个":["207.5"],"下存在多个应用":["207.5"],"微前端":["207.5"],"绑定事件并不是一次性绑定所有事件":["207.5"],"比如发现了":["207.5"],"比如上述":["207.6"],"changeeventplugin":["207.7"],"onchangecapture":["207.7"],"首先对于不同的事件":["207.9"],"所以导致":["207.10"],"方法在":["207.10"],"之前是绑定在":["207.11"],"你传递一个函数作为事件处理程序":["207.13"],"可以混用吗":["207.14"],"react事件和原生事件最好不要混用":["207.15"],"是一个合成的事件":["207.16"],"根据w3c规范":["207.16"],"定义了这个合成事件":["207.16"],"所以你不需要担心跨浏览器的兼容性问题":["207.16"],"事件处理程序将传递":["207.16"],"syntheticevent":["207.16"],"这是一个跨浏览器原生事件包装器":["207.16"],"nextprops判断是否新增":["207.17"],"删除事件分别调用事件注册":["207.17"],"卸载方法":["207.17"],"另外还存储了负责合成事件的plugin":["207.18"],"eventpluginhub的putlistener方法是向存储容器中增加一个listener":["207.18"],"setstate的执行机制中已经分析过":["207.19"],"这里不再多加分析":["207.19"],"用来处理不同事件的工具方法":["207.20"],"在每个eventplugin中根据不同的事件类型":["207.20"],"有自己的状态":["208.1"],"可以处理一些副作用":["208.1"],"就会抛出异常":["208.2"],"hooksdispatcheronmount":["208.2"],"第二种形态是函数组件初始化":["208.2"],"shownumber":["208.3"],"本质上做了些什么":["208.4"],"reactfiberhooks":["208.4"],"mountstate":["208.4"],"initialstate":["208.4"],"mountworkinprogresshook":["208.4","208.7","208.16"],"currentlyrenderingfiber":["208.5"],"说明当前fiber正在发生调和渲染更新":["208.5"],"那么不需要更新":["208.5"],"是如何处理":["208.7"],"副作用的":["208.7"],"mounteffect":["208.7"],"deps":["208.7","208.17","223.2"],"nextdeps":["208.7","208.16"],"但是不会block":["208.9"],"并且会改变页面的样式":["208.10"],"章节详细介绍过":["208.12"],"useref":["208.12"],"initialvalue":["208.13","208.14"],"prevdeps":["208.17"],"之前保存的":["208.17"],"替换成新的状态":["209.1"],"得到新的":["209.1"],"第一种就是从父组件直接隔断子组件的渲染":["209.2"],"经典的就是":["209.2"],"numberb":["209.3"],"controllcomponentrender":["209.3"],"通过此函数判断":["209.3"],"中把":["209.4"],"并把它绑定在函数组件对应的":["209.5"],"对象上":["209.5"],"优化性能的作用":["209.6"],"如果组件中不期望每次":["209.6"],"会浅比较":["209.7"],"是否发生改变":["209.7"],"再决定是否渲染组件":["209.7"],"shouldcomponentupdate":["209.8","209.12"],"有不是对象":["209.9"],"或者为":["209.9"],"那么直接返回":["209.9"],"可作为一种容器化的控制渲染方案":["209.11"],"可以对比":["209.11"],"组件重新渲染":["209.12"],"更何况":["209.13"],"还提供了":["209.13"],"diff":["209.13","236.6"],"算法等手段":["209.13"],"去复用真实":["209.13"],"最好办法单独抽离组件":["209.14"],"独自管理自己的数据层":["209.14"],"这样可以让":["209.14"],"需要执行第一个函数":["209.15"],"prefixidentifiers":["210.1","239.3"],"transformpreset":["210.1"],"createtransformcontext":["210.2"],"traversenode":["210.2"],"hoiststatic":["210.2"],"语法分析的阶段":["211.0"],"节点做了一层转换":["211.0"],"构造出":["211.0"],"语义化更强":["211.0"],"turn":["212.1"],"issingleelementroot":["212.1"],"上下文对象":["213.0"],"维护了":["213.0"],"onexit":["214.0"],"nodetransformsi":["214.0"],"isarray":["214.0","252.3","283.1","285.8"],"vnodeprops":["214.1"],"vnodepatchflag":["214.1"],"vnodedynamicprops":["214.1"],"dynamicprops":["214.1"],"dynamicpropnames":["214.1"],"shoulduseblock":["214.1"],"may":["214.1","232.4"],"plain":["214.1","252.3"],"elements":["214.1"],"teleport":["214.1","228.2","252.3"],"foreignobject":["214.1","236.4","236.6"],"forced":["214.1"],"inside":["214.1","243.1"],"proper":["214.1"],"issvg":["214.1","222.4","222.6"],"technically":["214.1"],"specific":["214.1"],"but":["214.1","221.4"],"isassignmentlval":["214.2"],"isupdatearg":["214.2"],"updateexpression":["214.2"],"argument":["214.2"],"isdestructureassignment":["214.2"],"isindestructureassignment":["214.2"],"parentstack":["214.2"],"bindingtypes":["214.2"],"setup":["214.2","243.1"],"reactive":["214.2","245.3","249.2","251.2"],"maybe":["214.2"],"assignments":["214.2"],"sense":["214.2"],"non":["214.2"],"assignment":["214.2"],"assumes":["214.2"],"more":["214.2"],"efficiency":["214.2"],"helperstring":["214.2"],"unref":["214.2"],"bit":["214.2"],"tricky":["214.2"],"where":["214.2"],"replicate":["214.2"],"hand":["214.2"],"hastext":["214.3"],"istext":["214.3"],"createcompoundexpression":["214.3"],"做静态提升":["215.1"],"静态提升是":["215.1"],"injected":["215.2"],"handlers":["215.2"],"therefore":["215.2"],"sure":["215.2","218.5"],"generatedpropstype":["215.2"],"getgeneratedpropsconstanttype":["215.2"],"childtype":["215.2"],"放在的":["215.3"],"无需注册":["216.1"],"会创建":["216.1"],"类型的":["216.1"],"vnode":["216.1","216.7","219.10","221.8","222.7","222.12"],"movetype":["216.2","216.6"],"enter":["216.2","226.1"],"changed":["216.2"],"slotscopeids":["216.2","218.4","222.4","232.2"],"queuepostrendereffect":["216.2"],"isdeactivated":["216.2"],"invokearrayfns":["216.2","216.6"],"vnodehook":["216.2","236.7"],"onvnodemounted":["216.2"],"invokevnodehook":["216.2"],"devtoolscomponentadded":["216.2"],"leave":["216.2","216.6"],"da":["216.2","216.6"],"onvnodeunmounted":["216.2"],"concretecomponent":["216.3","236.1"],"based":["216.3"],"loaded":["216.3"],"inner":["216.3"],"available":["216.3","235.4"],"getcomponentname":["216.3"],"isasyncwrapper":["216.3","236.7","252.5"],"componentoptions":["216.3","221.1","235.4"],"asyncresolved":["216.3"],"exclude":["216.3"],"matches":["216.3"],"recursively":["216.4"],"匹配":["216.5"],"如果从缓存中移除掉的组件不是当前激活组件":["216.5"],"需要执行":["216.5"],"unmount":["216.5","220.6"],"卸载它们":["216.5"],"如果是当前激活组件":["216.5"],"不直接卸载":["216.5"],"但是需要把":["216.5"],"storagecontainer":["216.6"],"parentsuspense":["216.6","222.4"],"让内部的子组件在切换的时候":["216.7"],"errorcomponent":["217.0","217.4","217.6"],"suspensible":["217.0"],"如果传递的":["217.1"],"是一个函数":["217.1"],"那么返回一个对象":["217.1"],"工厂函数":["217.2"],"来发送请求":["217.2"],"会返回一个":["217.2"],"来触发异步组件的重新渲染":["217.3"],"当异步组件重新渲染后":["217.3"],"加载异步组件时要使用的组件":["217.4","217.5"],"加载失败的时候要使用的组件":["217.4"],"userretry":["217.7"],"userfail":["217.7"],"comp":["217.7"],"当异步组件加载成功之后":["217.8"],"sscontent":["218.4","232.2"],"ssfallback":["218.4","232.2"],"dirs":["218.4","232.2"],"anchor":["218.4","222.5","232.2"],"targetanchor":["218.4","232.2"],"staticcount":["218.4","232.2"],"dynamicchildren":["218.4","232.2","232.3"],"appcontext":["218.4","232.2","235.3"],"isblocknode":["218.5"],"creating":["218.5"],"comment":["218.5","241.1","241.3","241.10"],"isvnode":["218.5"],"receiving":["218.5"],"happens":["218.5"],"cases":["218.5"],"like":["218.5"],"refs":["218.5"],"设置并运行带有副作用的渲染函数":["218.7"],"componentinternalinstance":["218.8","222.4","236.5","252.6"],"createcomponentinstance":["218.8"],"hmrid":["218.8","236.6"],"registerhmr":["218.8"],"pushwarningcontext":["218.8"],"是为了支持":["218.10"],"跨平台渲染":["218.10"],"可以描述不同类型的节点":["218.11"],"可以把渲染过程抽象化":["218.11"],"从而使得":["218.11"],"组件的抽象能力得到提升":["218.11"],"生成":["219.1"],"immediately":["219.3"],"will":["219.3","256.4"],"synchronously":["219.3"],"creation":["219.3","223.2","255.0"],"effectscope":["219.3"],"detached":["219.3"],"exposed":["219.3"],"如果要设置的是一个有状态组件":["219.4"],"setupstatefulcomponent":["219.4"],"则要进一步设置有状态组件的实例":["219.4"],"supported":["219.6"],"you":["219.6"],"are":["219.6","221.3","222.7","235.4"],"passed":["219.6","221.3"],"via":["219.6"],"做代理":["219.7"],"的时候做了一些额外处理":["219.8"],"fly":["219.10"],"compilation":["219.10"],"done":["219.10"],"resolvemergedoptions":["219.10"],"运行时不用编译":["219.13"],"组件实例设置过程包括创建上下文代理":["219.15"],"onbeforemount":["220.1"],"onmounted":["220.1"],"properly":["220.2"],"deduped":["220.2"],"stands":["220.2"],"wrappedhook":["220.2"],"isunmounted":["220.2"],"lifecycle":["220.3"],"lifecyclehooks":["220.3"],"钩子函数会在组件挂载之后执行":["220.4"],"挂载组件之前":["220.4"],"钩子函数会在组件更新之后执行":["220.5"],"更新组件之前":["220.5"],"会检测组件实例是否有已注册的":["220.5"],"副作用函数":["220.6"],"和注册的副作用渲染函数":["220.6"],"并且调用":["220.6"],"销毁子树":["220.6"],"遍历执行判断":["220.7"],"钩子函数是否返回值是":["220.7"],"若是":["220.7"],"则说明这个错误已经得到正确的处理":["220.7"],"结束遍历":["220.7"],"组件的生命周期包括":["220.8"],"hasextends":["221.1"],"extendprops":["221.1"],"然后把结果":["221.2"],"赋值到组件的实例上":["221.2"],"过程就是":["221.2"],"reserved":["221.3"],"down":["221.3"],"isreservedprop":["221.3"],"startswith":["221.3","241.9"],"onhook":["221.3"],"softassertcompatenabled":["221.3"],"deprecationtypes":["221.3"],"hooks":["221.3"],"missing":["221.4","241.1","241.10"],"api变成响应式":["221.5"],"数据的更新":["221.6"],"遇到组件节点":["221.7"],"代表新的组件":["221.8"],"会执行":["221.8"],"updatecomponentprerender":["221.8"],"shallowreactive":["221.9"],"而不是":["221.9"],"也会触发子组件的重新渲染":["221.10"],"子组件的渲染过程中":["221.10"],"实现各种功能":["221.11"],"由于编写":["221.11"],"patchflag":["222.3"],"patchflags":["222.3"],"bail":["222.3"],"shapeflag":["222.3","222.4"],"processtext":["222.3"],"parentcomponent":["222.4","222.5"],"suspenseboundary":["222.4"],"optimized":["222.4"],"shapeflags":["222.4","236.4","252.3"],"kept":["222.4"],"n2":["222.5"],"rendererelement":["222.5"],"renderernode":["222.5"],"guaranteed":["222.7"],"arrays":["222.7"],"patchkeyedchildren":["222.7"],"vnodearraychildren":["222.7","236.4"],"unkeyed":["222.7"],"patchunkeyedchildren":["222.7"],"e1":["222.9","222.11"],"新子节点的尾部索引":["222.9"],"更新节点":["222.10"],"并且小于":["222.11"],"e2":["222.11"],"直接挂载新子树丛索引":["222.11"],"会进行一些判断":["222.12"],"在满足某些条件的时候会触发子组件的更新":["222.12"],"就会默认是":["223.0"],"getter":["223.0","258.1"],"拿到计算属性对应的":["223.1"],"函数和":["223.1"],"setter函数":["223.1"],"dep":["223.2"],"computedrefimpl":["223.2","255.0"],"计算属性的核心就是":["224.0"],"延时计算和缓存":["224.0"],"当依赖发生变化":["224.0"],"仅仅标记计算属性内部的":["224.0"],"首先执行":["225.0"],"trackrefvalue":["225.0"],"对计算属性本身进行依赖收集":["225.0"],"activeeffect":["225.0"],"writablecomputedoptions":["225.4"],"writablecomputedref":["225.4"],"getteroroptions":["225.4"],"sub":["226.1"],"returned":["226.1"],"separately":["226.1"],"preamblecontext":["226.1"],"genmodulepreamble":["226.1"],"genfunctionpreamble":["226.1"],"ssrrender":["226.1"],"ists":["227.1","230.2"],"inssr":["227.1"],"codegenoptions":["227.1"],"codegencontext":["227.1","230.2","231.4","231.6"],"的值是":["228.0","249.0"],"calling":["228.1"],"leads":["228.1"],"being":["228.1"],"incurring":["228.1"],"keepalive":["228.2"],"basetransition":["228.2"],"openblock":["228.2"],"createblock":["228.2"],"helper":["228.3","230.2"],"scopeid":["228.3","232.2"],"genscopeid":["228.3"],"bindingmetadata":["229.0"],"temps":["230.1"],"newline":["230.1","230.2"],"resolver":["230.2"],"gentext":["231.1"],"expression":["231.1","231.7"],"genexpression":["231.1"],"interpolation":["231.1"],"geninterpolation":["231.1"],"isblock":["231.2"],"disabletracking":["231.2"],"iscomponent":["231.2"],"codegennode":["231.4","231.6"],"templatechildnode":["231.4","231.6"],"multilines":["231.4"],"comma":["231.4"],"nodes":["231.6","240.1"],"nodetypes":["231.7"],"needsparens":["231.7"],"issimpleidentifier":["231.7"],"表示当前的":["232.1"],"就是往当前的":["232.1"],"添加一个新的":["232.1"],"normalizeref":["232.2"],"currentscopeid":["232.2"],"currentblock":["232.3"],"如何执行":["232.3"],"收集动态子节点":["232.3"],"保留到当前的":["232.3"],"中方便后续":["232.3"],"oldvnode":["232.4"],"newvnode":["232.4"],"以及提供一下修改上下文数据的辅助函数":["233.0"],"接着生成一些预设代码":["233.0"],"比如引入辅助函数":["233.0"],"生成静态提升相关代码":["233.0"],"最后生成与渲染函数相关的代码":["233.0"],"比如生成渲染函数的名称和参数":["233.0"],"事件侦听器被应用之前调用":["234.2"],"之前调用":["234.5"],"及其子元素的":["234.6"],"父组件已经卸载掉时候调用":["234.8"],"进行注册":["235.1"],"either":["235.4"],"mixins":["235.4"],"builds":["235.4"],"supporting":["235.4"],"函数包裹进行实现的":["236.0"],"resolvedirective":["236.0"],"warnmissing":["236.1"],"maybeselfreference":["236.1"],"implementation":["236.1"],"filters":["236.1"],"目的是":["236.2"],"知道元素的生命周期都运行了哪些和指令相关的钩子函数":["236.2"],"运行钩子函数的时候":["236.2"],"可以往钩子函数传递一些指令的相关参数":["236.2"],"rendered":["236.4"],"hostsetelementtext":["236.4"],"mountchildren":["236.4"],"这就是为什么执行":["236.5"],"钩子函数的时候可以拿到这些参数":["236.5"],"prevvnode":["236.5"],"ishmrupdating":["236.6"],"force":["236.6"],"arechildrensvg":["236.6"],"patchblockchildren":["236.6"],"traversestaticchildren":["236.6"],"patchchildren":["236.6"],"presence":["236.6"],"keepalivecontext":["236.7"],"deactivate":["236.7"],"shouldinvokedirs":["236.7"],"shouldinvokevnodehook":["236.7"],"onvnodebeforeunmount":["236.7"],"定义一个指令":["237.0"],"无非就是在合适的钩子函数中编写一些相关的处理逻辑":["237.0"],"指令定义完成后":["237.0"],"整个解析过程是一个自顶向下的分析过程":["238.0"],"也就是从代码开始根据当前解析的上下文":["238.0"],"通过分析词法来分析当前的代码":["238.0"],"并找到对应的解析处理逻辑":["238.0"],"内部通过":["239.2"],"basecompile":["239.2"],"函数完成编译工作":["239.2"],"defaultonerror":["239.3"],"ismodulemode":["239.3"],"istanbul":["239.3"],"createcompilererror":["239.3"],"是树状结构":["239.4"],"对于树中的每个节点":["239.4"],"type字段描述节点类型":["239.4"],"解析子节点":["239.5"],"创建ast":["239.5"],"根节点":["239.5"],"子节点解析完毕":["240.0"],"子节点":["240.1"],"根节点还添加了其他的属性":["240.1"],"incorrectly":["241.1","241.10"],"opened":["241.1","241.10"],"advanceby":["241.1","241.9","241.10"],"注释节点的解析":["241.2"],"regular":["241.3"],"处理把代码前进到注释结束符的后面":["241.4"],"表述注释部分代码处理完毕可以继续解析":["241.4"],"parsecomment":["241.4"],"返回值是一个描述注释节点的对象":["241.4"],"rawcontentlength":["241.6"],"rawcontent":["241.6"],"pretrimcontent":["241.6"],"startoffset":["241.6"],"advancepositionwithmutation":["241.6"],"endoffset":["241.6"],"parsercontext":["241.7","242.1"],"textmodes":["241.7"],"textnode":["241.7"],"isvpreboundary":["241.8"],"isselfclosing":["241.8"],"isvoidtag":["241.8"],"closing":["241.8"],"getcursor":["241.9"],"ns":["241.9"],"getnamespace":["241.9"],"parsecdata":["241.10"],"最终返回的值就是一个元素节点的":["241.11"],"rawoptions":["242.1"],"parseroptions":["242.1"],"currentinstance":["243.1"],"defaultvalue":["243.2"],"treatdefaultasfactory":["243.2"],"不是这颗树上的组件不可能访问到该数据":["243.6"],"导出的数据":["243.7"],"从而引用":["243.10"],"可以根据不同组件上下文方式":["243.12"],"想要根据不同的情况提供不同的数据":["243.13"],"因为祖先组件不需要知道哪些后代组件使用它提供的数据":["243.14"],"函数提供数据":["243.15"],"会使用父级的":["243.15"],"对象作为原型对象创建自己的":["243.15"],"defineproperty":["244.0"],"的不足":["244.0"],"raw":["245.1"],"返回原始对象":["245.1"],"lastindexof":["245.2","245.3"],"instrument":["245.3"],"identity":["245.3"],"sensitive":["245.3"],"possible":["245.3"],"values":["245.3"],"清除依赖":["246.1"],"然后在副作用函数执行的过程重新收集依赖":["246.1"],"effect函数的深度":["246.2"],"实际执行的就是":["246.3"],"收集的依赖也从":["246.3"],"添加依赖的过程":["246.4"],"优化后":["246.4"],"effecttrackdepth":["246.5"],"并且在赋值":["246.5"],"的时候做了运算":["246.5"],"劫持了数据对象":["247.0"],"所以当响应式对象的属性值更新的时候":["247.0"],"求值":["247.1"],"创建运行的":["247.2"],"集合":["247.2"],"函数创建一个新的":["247.3"],"过程派发通知的时候":["247.4"],"都是不可变成响应式对象":["248.1"],"劫持":["248.1"],"变成响应式":["248.1"],"创建的":["248.1"],"实例称做响应式对象":["248.1"],"如果是集合类型数据":["248.1"],"如果是非集合类型数据":["248.1"],"把原始对象":["248.1"],"删除对象属性会触发":["248.2"],"deleteproperty":["248.2"],"readonlyhandlers":["249.0"],"isreadonly是":["249.0"],"并且传递的参数":["249.0"],"提示用户对象是只读的":["249.1"],"proxyhandler":["249.1"],"createref":["250.1"],"属性中省去了一系列判断和设置":["250.2"],"优化了性能":["250.2"],"实现的派发通知的部分由原先的":["250.2"],"变成了":["250.2"],"triggerrefvalue":["250.2"],"因为初始化的过程中会创建渲染上下文代理":["250.3"],"所以在":["250.3"],"函数中访问":["250.3"],"就相当于":["250.3"],"对于普通对象和数组类型数据的":["251.0"],"处理器对象":["251.0"],"函数的实现":["251.1"],"reactiveflags":["251.2"],"函数来创建":["252.2"],"并且最后一个":["252.2"],"normalize":["252.3"],"满足了":["252.4"],"可以把操场对象保留到":["252.4"],"slots":["252.4"],"对象中":["252.4"],"后续的程序就可以从":["252.4"],"noslotted":["252.5"],"currentrenderinginstance":["252.5"],"isce":["252.5"],"createvnode":["252.5"],"isnonscopedslot":["252.6"],"normalized":["252.6"],"contextualrenderfn":["252.6"],"slotprops":["252.7"],"这样函数可以在内容获取数据":["252.7"],"作用域插槽和普通插槽一样":["252.7"],"也是通过":["252.7"],"的代码用函数的方式":["252.8"],"在更新元素之前":["253.0"],"把数据再次赋值给表单元素":["253.0"],"这就是数据变化引起":["253.0"],"变化的过程":["253.0"],"表单元素还会侦听相关事件":["253.0"],"做了哪些优化":["254.1"],"core":["254.2","254.20"],"platforms":["254.2"],"sfc":["254.2"],"引入tree":["254.3"],"可以将无用模块":["254.3"],"剪辑":["254.3"],"使用的":["254.4"],"编译阶段":["254.5"],"对静态模版的分析":["254.5"],"更好的逻辑代码拆分":["254.6"],"fearure":["254.7"],"就不会在重新对比":["254.8"],"都会重新创建":["254.9"],"dom节点然后渲染":["254.9"],"cachehandles":["254.9"],"会通过模版插值潜入进去":["254.10"],"这样会比通过虚拟":["254.10"],"dmo":["254.10"],"源码通过编译":["254.11"],"会构建出不同版本的":["254.11"],"它们的应用场景各不相同":["254.11"],"基础编译流程":["254.13"],"解析模版":["254.13"],"所使用的":["254.15"],"单文件组件":["254.16"],"在源码目录中":["254.21"],"可配置兼容":["254.26"],"allowrecurse":["255.0"],"deferstop":["255.0"],"onstop":["255.0"],"ontrack":["255.0"],"debuggerevent":["255.0"],"并不是只要执行":["256.1"],"这个任务就会添加到队列中":["256.1"],"会把":["256.2"],"isflushpending设置为":["256.2"],"smaller":["256.4"],"可能在":["256.5"],"执行过程中再次添加":["256.5"],"所以需要递归执行":["256.5"],"直到":["256.5"],"为空":["256.5"],"在执行过程中":["256.6"],"还会再次向":["256.6"],"pendingpreflushcbs":["256.6"],"pendingpostflushcbs":["256.6"],"中再次添加一些新的":["256.6"],"为了保证新添加的":["256.6"],"后执行":["256.6"],"countmap":["256.8"],"schedulerjob":["256.8"],"ontrack回调函数":["257.1"],"但是必须返回一个响应式对象":["258.1"],"表示监听的数据源":["258.2"],"cb":["258.2"],"创建一个访问":["258.3"],"的每一个子属性":["258.4"],"新值":["258.5"],"oldvalue":["258.5","258.9"],"老值":["258.5"],"oninvalidate":["258.5"],"注册的无效回调函数":["258.5"],"如果cb":["258.5"],"存在":["258.5"],"决定":["258.6"],"watcher":["258.6"],"回调函数执行时机":["258.6"],"内部都会":["258.7"],"首次执行":["258.8"],"函数求":["258.8"],"旧值":["258.8"],"来停止对数据的监听":["258.10"],"内部会执行":["258.10"],"内部创建了":["258.11"],"副作用函数内部可以访问响应式对象":["259.1"],"在副作用函数内部":["259.2"],"响应式对象发生变化":["259.2"],"会再次执行这个副作用函数":["259.2"],"立即执行":["259.2"],"在创建好":["259.2"],"preformasyncoperation":["259.3"],"执行某些异步操作":["259.3"],"并且访问了":["259.3"],"eclipse":["260.0"],"到如今称王称霸的":["260.0"],"intellij":["260.0"],"idea":["260.0"],"但终端工具":["260.0"],"基本上和上个世纪七八十年代差不多":["260.0"],"那本期给大家推荐的这款终端":["260.0"],"绝对会让你大开眼界":["260.0"],"界面还是非常清爽的":["260.1"],"支持":["260.1"],"账户登录":["260.1"],"如果你在登录的过程中因为某些原因无法完成跳转":["260.1"],"提示在后面":["260.2"],"智能记忆":["260.2"],"会记录上一次执行的命令":["260.2"],"在顶部会有一个提示的按钮":["260.2"],"当你点击的时候":["260.2"],"它会自动滚动到上一个命令执行的位置":["260.2"],"点击":["260.2"],"之后":["260.2"],"区域选择":["260.2"],"sett":["260.3"],"关键字就可以打开配置页":["260.3"],"比如说在":["260.3"],"appearance":["260.3"],"选项卡里可以设置":["260.3"],"终端的普及安利文章":["260.4"],"我这期应该属于大姑娘坐花轿":["260.4"],"头一回":["260.4"],"devdocs":["261.1"],"bytedance":["262.0"],"但这些":["262.0"],"并不全":["262.0"],"很多":["262.0"],"上的包":["262.0"],"在这些":["262.0"],"上是找不到的":["262.0"],"前几天":["263.0"],"不能明确说":["263.1"],"懂得都懂":["263.1"],"接码费用一次为":["263.2"],"页面进行相应的注册":["263.3"],"这里同样需要你能访问google且":["263.3"],"之前我选的印尼":["263.4"],"是可以收到码的":["263.4"],"openai":["263.5"],"40bb":["263.6"],"b165":["263.6"],"ad8b6d401d2g":["263.6"],"接不到码":["263.6"],"是一款":["265.0"],"设计稿智能生成源代码的工具":["265.0"],"可以将":["265.0"],"sketch":["265.0"],"photoshop":["265.0"],"figma":["265.0"],"的设计稿智能转换为前端源代码":["265.0"],"小时工作量":["265.0"],"分钟完成":["265.0"],"是它的":["265.0"],"slogan":["265.0"],"它可以精准还原设计稿":["265.0"],"不再需要反复":["265.0"],"我觉得在使用":["265.0"],"后可以极大地程度减少工作流的复杂度":["265.0"],"让我们的工作流变成以下这样":["265.0"],"支持微信小程序代码输出":["265.1"],"当你选择小程序代码输出时":["265.1"],"像素单位会新增一个":["265.1"],"rpx":["265.1"],"等遍历输出列表":["265.2"],"codefun":["265.2"],"支持批量数据绑定功能":["265.3"],"我们可以把任何在页面中看到的元素进行数据绑定和命名修改":["265.3"],"就拿上面的循环列表举例吧":["265.3"],"在我们一开始识别的":["265.3"],"繁琐":["265.4"],"自动分离背景图层":["265.5"],"图标元素":["265.5"],"一些思考与建议":["265.5"],"前端开发不仅仅是一个切图的工具人":["265.5"],"如果你一直局限于视图的表现的时候":["265.5"],"你的前端水平也就是":["265.5"],"curd":["265.5"],"工程师的水平了":["265.5"],"我们前端更多的要深入一些":["265.5"],"iloveimg":["267.1"],"slot":["270.0"],"epic":["274.0"],"一个好看的终端":["275.0"],"bin目录下会多出一个zsh的文件":["275.1"],"mac系统默认使用bash作为终端":["275.1"],"安装配色方案":["275.2"],"altercation":["275.2"],"solarized":["275.2"],"iterm2":["275.2"],"在打开的finder窗口中":["275.2"],"双击solarized":["275.2"],"dark":["275.2"],"itermcolors和solarized":["275.2"],"itermcolors即可安装明暗两种配色":["275.2"],"再次进入iterm2":["275.2"],"presets中根据个人喜好选择这两种配色中的一种即可":["275.2"],"安装主题":["275.2"],"下载agnoster主题":["275.2"],"执行脚本安装":["275.2"],"fcamblor":["275.2"],"agnoster":["275.2"],"执行上面的命令会将主题拷贝到oh":["275.2"],"zsh的themes中":["275.2"],"拷贝完成后":["275.2"],"执行命令打开zshrc配置文件":["275.2"],"将zsh":["275.2"],"theme后面的字段改为agnoster":["275.2"],"zshrc":["275.2"],"修改完成后按一下esc调出vi命令":["275.2"],"wq保存并退出vi模式":["275.2"],"此时command":["275.2"],"q或source配置文件后":["275.2"],"iterm2变了模样":["275.2"],"安装高亮插件":["275.2"],"这是oh":["275.2"],"zsh的一个插件":["275.2"],"安装方式与theme大同小异":["275.2"],"custom":["275.2"],"syntax":["275.2"],"highlighting":["275.2"],"vi":["275.2"],"这时我们再次打开zshrc文件进行编辑":["275.2"],"找到plugins":["275.2"],"此时plugins中应该已经有了git":["275.2"],"我们需要把高亮插件也加上":["275.2"],"支持导出为html和pdf":["276.0"],"支持三种写作模式":["276.0"],"源码模式":["276.0"],"打字机模式":["276.0"],"专注模式":["276.0"],"支持多种主题":["276.0"],"三种浅色模式":["276.0"],"三种深色模式":["276.0"],"支持图片文件上传":["276.0"],"支持上传到sm":["276.0"],"ms图床和github":["276.0"],"下面是一张marktext的使用效果图":["276.0"],"还是挺炫酷的":["276.0"],"gaoding":["277.0"],"dbyun":["278.0"],"代码":["279.2","279.4","279.6"],"xhtml":["279.7"],"xa":["279.8"],"ya":["279.8"],"fillrect":["279.8"],"jsdelivr":["279.9"],"cloud":["280.1"],"underscorejs":["281.1"],"ramda":["281.1"],"ianlunn":["281.2"],"wow":["281.2"],"滚动展示动画":["281.2"],"的优化版":["281.3"],"使移动端滑动体验更加流畅":["281.3"],"mescroll":["281.3"],"移动端上拉刷新下拉加载":["281.3"],"将作为查询条件":["282.2"],"leancloud":["282.2"],"setnextsuccessor":["283.3"],"记录在wait时间内上一次执行return函数的时间间隔":["283.4"],"时间间隔小于wait":["283.4"],"继续递归调用":["283.4"],"locking":["283.6"],"ware":["283.7"],"处理异步任务中间件":["283.10"],"异步任务":["283.10"],"清空当前的状态":["283.11"],"previous":["283.12"],"延时执行函数":["283.12"],"later":["283.12"],"首次执行时":["283.12"],"如果设定了开始边界不执行选项":["283.12"],"将上次执行时间设定为当前时间":["283.12"],"ht":["284.3","284.4"],"hj":["284.5","284.33","284.34"],"npqrtuwxy":["284.5"],"9a":["284.6","284.83"],"ed2k":["284.8"],"xt":["284.9"],"用于判断考卷分数":["284.17"],"swf":["284.22"],"avi":["284.22"],"01":["284.24"],"z0":["284.26","284.75","284.82"],"千分位分隔符":["284.27"],"私账户":["284.29"],"参考微信支付":["284.29"],"u9fa5":["284.30"],"hjk":["284.32"],"np":["284.33","284.34"],"最宽松":["284.37"],"只要是1开头即可":["284.37"],"内蒙古":["284.40"],"河北":["284.40"],"新疆":["284.40"],"甘肃":["284.40"],"0341":["284.43"],"ee":["284.47"],"允许字母数字下划线组合":["284.48"],"ufa21":["284.49"],"ufa23":["284.49","284.66"],"ufa24":["284.49","284.66"],"ufa27":["284.49","284.66"],"ufa29":["284.49","284.66"],"ud840":["284.49","284.66"],"ud868":["284.49","284.66"],"uff1a":["284.53"],"u201c":["284.53"],"u201d":["284.53"],"u2018":["284.53"],"za":["284.55","284.56","284.67","284.68","284.72","284.74","286.13"],"下划线":["284.60","284.64"],"减号":["284.60","284.64"],"fa":["284.63"],"f0":["284.63"],"数字":["284.64"],"ud86a":["284.66"],"x2f":["284.76"],"x3a":["284.76"],"lastdigit":["284.84"],"every":["285.6","285.7"],"把所有标签名转为小写":["286.2"],"添加到数组中":["286.2"],"tagname":["286.2"],"touchsupported":["286.4"],"ontouchstart":["286.4"],"getselectedtext":["286.5"],"getboundingclienrect":["286.11"],"random":["286.12","286.22"],"长度在6":["286.13"],"18之间":["286.13"],"只能包含字母":["286.13"],"数字和下划线":["286.13"],"postal":["286.13"],"邮政编码":["286.13"],"qq":["286.13"],"qq号":["286.13"],"克隆数组":["286.14"],"chars":["286.19"],"abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz":["286.19"],"uuid":["286.19"],"istabactive":["286.23"],"ipad":["286.25"],"ipod":["286.25"],"9xx":["286.28"],"身份证号码是否合法":["286.28"],"queryselectorall":["286.33"],"遍历生成每一位数字的滚动队列":["286.33"],"如滚动到7":["286.33"],"则生成内容为0":["286.33"],"7的7个div":["286.33"],"用于滚动动画":["286.33"],"numele":["286.33"],"curnum":["286.33"],"targetnum":["286.33"],"numberarr":["286.33"],"digitscroll":["286.34"],"ceil":["286.37"],"色块组件":["286.37"],"usememo":["286.37"],"用usememo缓存":["286.37"],"计算出来的随机位置和色值":["286.37"],"用于移动视图区域":["286.38"],"形成滑动效果":["286.38"],"scrollinfo":["286.38"],"buffercount":["286.38"],"缓冲区个数":["286.38"],"itemheight":["286.38"],"每一个item高度":["286.38"],"rendercount":["286.38"],"渲染区个数":["286.38"],"offsetheight":["286.38"],"statecheck":["286.39"],"returs":["286.40"],"创建数组":["286.42"],"存储文件的所有切片":["286.42"],"方法会遍历切片数组":["286.43"],"filechunks中的元素map":["286.43"],"filechunks中的元素":["286.43"],"数组中有多少个切片":["286.43"],"创建几个":["286.43"],"mergefilechunks":["286.45"],"切片切割":["286.46"],"clientheight":["286.48","286.68"],"无需检查":["286.49"],"增加":["286.49"],"accept":["286.51"],"这个值如果是":["286.52"],"false则显示下图中的这个选项按钮":["286.52"],"并且能看看到":["286.52"],"vnd":["286.53"],"openxmlformats":["286.53"],"officedocument":["286.53"],"spreadsheetml":["286.53"],"sheet":["286.53"],"xlsx":["286.53"],"myfiles":["286.54"],"hgroup":["286.55"],"menu":["286.55"],"section":["286.55"],"audio":["286.55"],"baseline":["286.55"],"role":["286.55"],"older":["286.55"],"browsers":["286.55"],"webos":["286.58"],"amp":["286.60"],"lt":["286.60"],"gt":["286.60"],"randomhexcolorcode":["286.63"],"y0":["286.67"],"x1":["286.67"],"y1":["286.67"],"可以拦截":["286.69"],"代码块中任意属性的访问":["286.69"],"黑名单中的变量禁止访问":["286.69"],"将文本追加到元素中":["286.71"],"144条数据":["286.72"],"abs":["287.1"],"返回天数":["287.2"],"getnextdate":["287.2"],"month3":["287.3"],"start3monthday":["287.3"],"endtime":["287.5"],"hour":["287.6"],"minute":["287.6"],"getday":["287.7"],"numbertemp":["291.2"],"decimals":["291.4"],"currency":["291.5"],"亿":["291.6"],"万亿":["291.6"],"reflect":["292.1","293.1"],"promise特性":["294.1"],"如果resolve出去的是一个promise":["294.1"],"则会替代外层promise":["294.1"],"word":["295.1"],"substring":["295.1"],"isobject":["295.2"],"rest":["295.5","295.7"],"safari":["296.2"]},{"0":["6.1","14.1","23.51","23.52","55.2","58.5","61.7","70.0","89.5","95.42","96.5","98.7","106.33","106.39","106.41","108.2","111.2","127.15","127.31","127.55","133.4","133.7","138.26","140.5","148.1","161.0","167.0","168.7","168.25","170.6","173.3","173.28","173.85","173.98","174.4","174.20","174.48","178.4","179.62","195.4","195.9","205.12","208.3","227.1","230.2","231.4","236.5","241.7","241.9","245.3","283.4","284.28","284.45","284.54","284.80","284.84","285.7","285.9","286.11","286.12","286.14","286.42","287.3","287.7"],"1":["1.9","10.13","11.6","20.9","20.10","22.14","23.14","32.2","40.1","44.4","48.1","48.27","49.1","52.12","53.11","56.5","61.13","65.17","65.33","67.10","76.3","80.4","87.27","89.4","89.9","89.11","95.46","96.1","97.22","97.61","100.3","106.23","106.25","114.32","121.7","122.15","122.16","122.17","125.2","125.7","127.2","127.15","131.10","136.2","136.4","137.0","138.26","140.5","147.5","153.12","156.18","162.3","168.7","173.6","173.28","174.21","174.52","174.63","176.13","179.65","182.2","195.9","204.0","204.3","206.15","214.2","219.6","252.5","284.52","284.84","285.7","285.9","285.14","286.15","286.38","286.55"],"2":["19.4","22.15","23.14","32.2","38.1","40.5","45.7","49.2","57.2","61.13","61.17","64.7","64.17","71.23","71.24","89.10","89.11","89.12","92.0","95.13","95.30","96.1","97.61","99.22","100.4","102.2","102.4","102.5","113.8","114.30","114.32","119.4","120.0","127.2","127.26","127.31","136.8","137.0","138.39","144.6","150.2","151.5","152.15","153.5","153.6","153.7","154.2","154.14","155.6","162.3","168.10","168.25","170.3","173.4","173.35","173.54","174.24","174.54","177.6","184.10","184.17","195.2","195.3","195.5","195.8","195.9","200.3","200.7","218.10","219.6","221.3","241.8","279.8","284.5","284.24","284.25","284.30","284.45","285.9","286.46","291.1"],"3":["7.0","7.10","23.27","23.52","29.1","37.3","48.27","50.31","64.7","64.18","65.35","67.8","79.0","80.4","81.4","87.3","99.17","100.5","100.7","107.2","136.8","137.0","145.3","151.4","154.14","158.5","164.5","166.2","167.0","173.4","173.6","173.21","173.46","174.28","174.54","177.6","179.63","184.15","195.8","195.9","200.5","222.7","231.6","241.3","284.16"],"4":["7.9","36.5","38.5","43.3","43.11","52.14","62.11","64.8","99.5","113.5","127.9","137.0","140.2","154.14","166.2","167.1","173.6","173.38","174.43","177.6","195.9","222.12","260.2","284.35","284.65","285.6"],"5":["23.90","43.14","106.37","107.2","113.4","113.5","127.5","127.10","137.0","138.40","152.6","168.11","173.38","173.43","173.57","174.3","174.59","178.7","195.9","263.2","284.35"],"6":["61.13","80.4","114.30","115.0","127.5","127.10","137.0","173.13","173.43","173.66","175.4","178.4","284.59","284.65","286.28","287.7"],"7":["7.11","38.3","38.4","52.5","67.10","87.34","101.3","102.4","123.1","127.5","127.10","137.0","152.2","173.99","284.73"],"8":["38.3","38.4","97.19","101.3","123.1","150.10","150.12","154.16","173.99","279.1","279.6","279.10","284.46"],"9":["2.3","52.2","64.7","103.11","115.0","130.9","171.0","173.99","174.51","284.32","284.41","284.63","284.77","284.78","284.79","286.6"],"10":["48.27","101.3","102.0","127.24","127.26","152.2","154.16","171.0","174.11","263.2","284.44","286.33","287.8"],"11":["2.3","46.2","52.5","154.1","171.0","172.0","173.99","284.44"],"12":["2.3","65.32","96.1","108.2","113.6","141.3","171.0","173.99","284.39"],"13":["46.3","113.6","127.24"],"14":["113.6","159.12","175.12","286.28"],"15":["113.6","115.0","174.51","175.12","284.2","284.6"],"16":["7.11","87.34","103.11","113.6","175.10","175.12","284.36","286.27","286.28"],"17":["113.6","175.10","181.0","284.36","286.28"],"18":["81.3","113.6","173.98","175.10","175.22","181.0","284.36"],"19":["175.10","181.0"],"20":["41.0","115.0","122.24","127.8","141.4","156.24"],"21":["23.52","260.0"],"22":["64.7","184.10"],"23":["141.4"],"24":["156.23","286.27"],"25":["123.0"],"26":["284.46"],"29":["114.32"],"30":["115.0","127.3","140.0"],"31":["101.3","159.4"],"33":["64.7"],"36":["159.1"],"37":["127.17"],"39":["286.60"],"45":["170.5"],"46":["141.4"],"50":["123.0","156.7","287.8"],"51":["170.6"],"60":["281.2"],"62":["22.18","22.19"],"65":["67.3","170.15"],"75":["123.0","140.0"],"79":["284.35","291.5"],"80":["26.2","113.6","114.14","123.0","141.4"],"86":["195.4"],"90":["175.10"],"100":["61.7","102.0","106.33","106.41","125.3","152.12","169.4","170.6","170.12","170.15","178.4"],"102":["115.0"],"104":["141.4"],"123":["291.5"],"127":["138.26"],"150":["284.17"],"168":["23.50","23.51"],"192":["23.51","61.17"],"200":["106.27","159.13","166.3","175.10"],"202":["29.3"],"205":["179.45"],"206":["179.45"],"241":["195.4"],"242":["195.4"],"243":["195.4"],"244":["195.4"],"253":["195.4"],"254":["195.4"],"255":["6.1","106.33","151.5","195.4"],"256":["195.4"],"257":["195.4"],"299":["195.4"],"302":["29.4","138.33"],"304":["1.12"],"317":["195.4"],"375":["95.33"],"404":["29.5"],"405":["29.5"],"443":["26.2","179.44","195.5"],"456":["291.5"],"500":["103.17","286.37"],"640":["106.27"],"689":["140.0"],"700":["140.0"],"789":["291.5"],"832":["100.3"],"900":["61.13"],"920":["61.13"],"1000":["153.12"],"1024":["127.52","154.16"],"1135":["195.8"],"1745":["252.6"],"1995":["115.0"],"2015":["271.1"],"2018":["115.0"],"2022":["147.5"],"2468":["284.46"],"3000":["24.5","114.14","126.7"],"3001":["96.5"],"3002":["138.26"],"3009":["175.5"],"4000":["126.7"],"4873":["85.5"],"8080":["136.2","138.39","159.2","159.5"],"9114":["115.0"],"10000":["286.38"],"13578":["284.39"],"13579":["284.46"],"30000":["159.5"],"60000":["287.6"],"161425":["152.24"],"3600000":["156.23"],"3827403":["0.1"],"86400000":["156.23","287.1"],"2401345934":["94.9"],"新增2022前端更新事件":["0.0"],"04d7161":["0.0"],"新增浏览器的事件循环":["0.0"],"9498f35":["0.0"],"新增面试题":["0.0"],"595efab":["0.0"],"doctype":["0.0","154.13"],"f8f2275":["0.0"],"38b85fd":["0.1"],"新增算法常见面试题":["0.1"],"3eee594":["0.1"],"新增修改版本的插件":["0.1"],"d4c1f1e":["0.1"],"新增node":["0.1"],"6806fce":["0.1"],"修复build":["0.1"],"dbdeee8":["0.1"],"引入自己的组件库":["0.1"],"增加提交代码规范配置":["0.1"],"175edd4":["0.1"],"展示vite":["0.1"],"8e72f44":["0.1"],"组件库新增":["0.1"],"backtop":["0.1"],"组件":["0.1","181.0","200.1"],"ba9afe7":["0.1"],"pages":["0.1","96.6","195.9"],"补充":["0.1"],"git":["0.1","86.1","95.19","97.54","97.56","118.6"],"知识":["0.1"],"bcba8c8":["0.1"],"测试":["0.1","41.5","97.47","167.4"],"build":["0.1","65.18","68.8","81.2","81.3","97.47","195.8","195.9","201.8"],"f062175":["0.1"],"规整工程化结构":["0.1"],"de23e05":["0.1"],"框架改造":["0.1"],"97327a9":["0.1"],"软能力提升":["0.1"],"71f0873":["0.1"],"软能力提示":["0.1"],"aba2696":["0.1"],"删除":["0.1","220.6"],"webopack":["0.1"],"568c179":["0.1"],"算法题补充":["0.1"],"1ca7bd4":["0.1"],"所有页面增加":["0.1"],"标签":["0.1"],"1a0c1a5":["0.1"],"项目结构拆分":["0.1"],"修改主题变量":["0.1"],"63d4299":["0.1"],"v8内容":["0.1"],"2c4754e":["0.1"],"录制视频组件文档":["0.1"],"ef27794":["0.1"],"圆圆组件":["0.1"],"500a41d":["0.1"],"浏览器缓存可以帮助我们在第一和第三步骤中优化性能":["1.0"],"比如说直接使用缓存而不发起请求":["1.0"],"存储空间限制大":["1.1"],"时效性":["1.1"],"短":["1.1"],"会随着进程而释放":["1.1"],"没有命中缓存的时候":["1.2"],"我们需要去调用":["1.2"],"fetch":["1.2","127.44","162.3","173.57","289.1"],"函数获取数据":["1.2"],"再次刷新页面":["1.3"],"可以发现很多数据都来自于内存缓存":["1.3"],"那么既然内存缓存这么高效":["1.3"],"我们是不是能让数据都存放在内存中呢":["1.3"],"先说结论":["1.3","195.7"],"胜在容量和存储时效性上":["1.4"],"在所有浏览器缓存中":["1.4"],"这里推荐阅读":["1.5"],"is":["1.5","113.6","127.4","127.6","127.7","159.2","159.5","206.5","206.15","214.3","218.4","228.1","232.2","252.3"],"tougher":["1.5"],"than":["1.5"],"i":["1.5","52.6","52.12","55.2","58.3","58.5","111.2","115.0","127.4","127.7","132.3","132.4","158.3","164.3","173.85","174.4","174.29","179.61","230.2","231.4","236.5","236.6","245.3","283.11","286.14","286.19"],"http":["1.7","1.9","2.2","23.89","67.10","74.3","95.24","102.5","126.7","134.4","191.3"],"和":["1.8","7.14","19.10","19.13","21.14","48.27","64.4","69.3","72.0","87.14","98.13","113.4","120.4","122.0","140.2","152.20","152.24","153.11","173.17","173.31","184.26","195.3","207.3","207.6","207.16","209.10","243.4"],"cache":["1.8","140.9","206.1","216.3","226.1"],"的产物":["1.9"],"表示资源会在":["1.9"],"优先级高于":["1.10"],"expires":["1.10","1.22"],"该属性值表示资源会在":["1.10"],"last":["1.11","1.18","48.10","101.3","175.12"],"modified":["1.11","1.17","1.18","27.7"],"否则返回":["1.12","173.69"],"状态码":["1.12"],"但是":["1.12","7.1","51.2","154.2","172.0","173.28","184.6"],"是否变动":["1.13"],"有变动的话就将新的资源发送回来":["1.13"],"并且":["1.13"],"优先级比":["1.13"],"有什么区别":["1.14"],"这样子利用摘要算法生成":["1.16"],"md5":["1.16"],"sha128":["1.16"],"比如1s内修改了n次":["1.17"],"if":["1.17","10.5","10.11","27.7","53.2","53.5","53.8","53.12","57.4","57.7","61.8","62.14","64.26","68.13","89.13","95.22","98.9","100.6","100.8","104.0","106.27","109.1","111.2","130.10","131.1","131.2","131.3","131.4","131.5","131.6","131.11","138.36","153.11","154.14","156.6","159.13","166.8","166.9","173.22","173.64","173.98","174.20","174.52","174.56","175.6","175.8","179.55","206.12","208.17","227.1","232.2","236.1","236.2","241.9","249.1","250.1","255.0","256.5","256.6","283.12","286.10","286.56","291.2"],"与":["1.18","96.5","127.34","173.80","186.3"],"content":["1.18","25.3","64.10","97.35","98.4","121.4","126.4","160.0","175.5","179.4","286.55"],"使浏览器每次都请求服务器":["1.20"],"然后配合":["1.20"],"那么我们就可以对文件名进行哈希处理":["1.21"],"只有当代码修改后才会生成新的文件名":["1.21"],"基于此":["1.21"],"htm":["1.22","195.7"],"30s":["1.22"],"只使用协商缓存":["1.22"],"no":["1.22","89.5","97.39","170.6","216.2","222.7","241.1","241.10"],"如果是":["2.2","107.2"],"会判断是否带有前缀":["2.2"],"就是":["2.2","166.1"],"如果没有带前缀":["2.2"],"会自动帮忙拼接前缀":["2.2"],"处理完成信息开始下一步":["2.2"],"开始导航":["2.2"],"交给网络进程":["2.2"],"网络进程":["2.2"],"准备发起":["2.2"],"继续向下传输到底层":["2.3"],"底层通过物理网络传输给目的服务器主机":["2.3"],"目的服务器主机网络层接收到数据包":["2.3"],"解析出ip头部":["2.3"],"识别出数据部分":["2.3"],"将解开的数据包向上传输到传输层":["2.3"],"目的服务器主机传输层获取到数据包":["2.3"],"解析出tcp头部":["2.3"],"识别端口":["2.3"],"将解开的数据包向上传输到应用层":["2.3"],"应用层http解析请求头和请求体":["2.3"],"如果需要重定向":["2.3"],"http直接返回http响应数据的状态code301或者302":["2.3"],"同时在请求头的location字段中附上重定向地址":["2.3"],"浏览器会根据code和location进行重定向操作":["2.3"],"如果不是重定向":["2.3"],"首先服务器会根据":["2.3"],"请求头中的if":["2.3"],"none":["2.3","10.14","106.23","175.9","286.55"],"位图":["3.1"],"绘制到用户界面上":["3.1"],"网络资源的管理":["3.1"],"下载等":["3.1"],"第三方插件进程":["3.1"],"提高浏览器稳定性":["3.2"],"简单点理解":["3.2"],"如果浏览器是单进程":["3.2"],"布局和绘制等":["3.4"],"当界面需要重绘":["3.4"],"repaint":["3.4"],"js引擎一直等待着任务队列中任务的到来":["3.5"],"然后加以处理":["3.5"],"ajax异步请求等":["3.6"],"会将对应任务添加到事件触发线程中":["3.6"],"因此通过单独线程来计时并触发定时":["3.7"],"计时完毕后":["3.7"],"将检测到状态变更":["3.8"],"如ajax返回结果":["3.8"],"例如加入":["4.2"],"css":["4.2","61.12","97.1","97.16","97.36","106.21","150.10","154.2","154.4","154.5","169.4","179.7","195.8","279.9"],"等":["4.2","97.47","106.14","106.24","106.26","173.70","175.13","178.7","204.6"],"以及计算网页的显示方式":["4.2","4.4"],"然后会输出至显示器或打印机":["4.2"],"javascript":["4.2","5.9","7.14","20.9","24.1","52.15","56.3","56.4","58.4","118.6","120.0","130.6","138.36","140.2","143.7","146.1","150.5","154.3","173.10","173.34","173.76","175.4","185.0","218.2","284.29","284.43","284.48","284.60","284.64","286.9"],"interpreter":["4.2"],"engineer或rendering":["4.3"],"例如加入css等":["4.4"],"内核就倾向于只指渲染引擎":["4.5"],"netscape6及以上版本":["4.6"],"ff":["4.6","101.3"],"mozillasuite":["4.6"],"foreach":["5.2","62.17","64.9","95.42","95.46","104.0","129.4","167.4","204.6","216.2","221.1","283.2","283.11","286.72"],"item":["5.2","89.5","132.2","176.4","190.2","286.38"],"就可以用这个":["5.3"],"api":["5.3","7.7","152.7","152.11","159.2","175.5","177.14","195.4","254.18","281.3"],"可以监听对元素的属性的修改":["5.5"],"对它的子节点的增删改":["5.5"],"const":["5.5","21.7","53.12","55.3","56.4","61.9","62.12","64.17","96.2","96.4","97.7","103.6","127.14","127.29","127.30","127.54","132.2","150.5","154.7","154.14","156.4","156.5","156.9","156.19","166.7","169.3","173.43","174.12","174.40","177.10","179.11","205.15","206.3","206.12","210.0","218.5","236.1","236.2","236.5","241.7","256.8"],"监听这个变化":["5.6"],"然后重新加上":["5.6"],"new":["5.8","19.11","64.11","73.0","97.22","98.8","99.11","103.13","108.2","127.20","127.47","129.2","130.7","133.3","153.12","154.20","173.16","173.82","177.10","179.41","179.54","180.0","191.1","191.3","206.3","219.6","236.6","250.1","264.0","286.18","286.38","287.2","287.5"],"entries":["5.8","286.72"],"measure":["5.9"],"方法记录某个时间段":["5.9"],"button":["5.9","81.5","115.0","156.1","172.0","195.3","205.2"],"clicked":["5.9"],"from":["5.9","68.12","81.5","81.6","96.2","96.10","96.14","97.2","97.7","97.11","109.6","114.23","154.19","156.1","156.6","156.8","159.5","159.9","205.11","206.3"],"to":["5.9","10.10","88.2","109.4","148.3","195.9","216.1","216.3","217.7","221.3","241.6","241.9","243.1","243.2"],"intervention":["5.10"],"比如会把占用":["5.10"],"cpu":["5.10","181.0"],"input":["5.11","64.11","90.0","122.20","172.0","176.2","253.0"],"等事件":["5.11"],"比如可以用来做去不掉的水印":["5.12"],"resizeobserver":["5.12"],"监听元素大小变化":["5.12"],"树的生成必须暂停":["6.1"],"会阻塞html解析的根本原因":["6.1"],"style":["6.1","10.14","86.7","97.19","101.5","102.1","106.14","106.27","154.2","154.4","154.5","156.7","156.24","169.3","178.4","286.55","286.65","286.71"],"主线程会遍历得到的":["6.1"],"依次为树中的每个节点计算出它最终的样式":["6.1"],"称之为":["6.1"],"computed":["6.1"],"在这一过程中":["6.1"],"很多预设值会变成绝对值":["6.1"],"比如":["6.1","21.6","23.94","25.5","25.6","31.4","31.5","31.8","37.2","41.9","44.8","56.1","58.1","87.18","95.1","106.32","135.0","173.30","195.7"],"red":["6.1","106.36","170.8","170.15"],"会变成":["6.1"],"rgb":["6.1"],"相对单位会变成绝对单位":["6.1"],"em":["6.1"],"为了避免连续的多次操作导致布局树反复计算":["6.3"],"浏览器会合并这些操作":["6.3"],"就需要重新计算":["6.4"],"会引发":["6.4"],"阶段":["6.5","173.13"],"由于":["6.5","52.11","104.0","175.10"],"的输入":["7.0"],"负责图层树的管理":["7.0"],"图层的滚动":["7.0"],"旋转等矩阵变幻":["7.0"],"图层的分块":["7.0"],"光栅化":["7.0"],"纹理上传等任务":["7.0"],"跟":["7.1","7.14","97.48"],"display":["7.2","7.10","10.14","97.35","106.41","169.3","169.4","172.0"],"只输出":["7.3"],"树和":["7.3"],"节点的关键属性":["7.3"],"同时":["7.3"],"不再以图层作为单位":["7.3"],"而是以每个排版对象作为单位":["7.3"],"resource":["7.4"],"texture":["7.4"],"的封装":["7.4"],"然后安排光栅化任务":["7.4"],"当":["7.4","48.11","106.33","186.3","196.13","246.3","256.1"],"quad":["7.5"],"绘制指令转换一个":["7.5"],"多边形绘图指令":["7.5"],"的队列不断的进行取出和绘制":["7.6"],"输出的频率唯二地取决于":["7.6"],"的输入频率和自身绘制":["7.6"],"gl":["7.6"],"的耗时":["7.6"],"基本上可以认为":["7.6"],"animation":["7.7","170.15"],"如果它们触发的动画经由":["7.7"],"判断可以交由合成器运行":["7.7"],"浏览器渲染流水线的设计都主要是为了合成器动画的性能而优化":["7.8"],"甚至在某种程度上导致内核动画性能的下降":["7.8"],"比如说合成器的异步光栅化机制":["7.8"],"不过这两年":["7.8"],"随着对":["7.8"],"webapp":["7.8"],"渲染性能包括":["7.8"],"性能的重视":["7.8"],"并且随着主流移动设备的硬件性能持续提升":["7.8"],"合成器动画的性能也已经基本不成问题":["7.8"],"chrome":["7.8","101.3","104.0","152.23"],"的渲染流水线已经更多地针对内核动画的性能进行优化":["7.8"],"甚至会导致在某些特定状况下合成器动画性能的下降":["7.8"],"比方说倾向于为了维持图层树的稳定性":["7.8"],"减少变更":["7.8"],"而生成更多的图层":["7.8"],"不过总的说来":["7.8"],"目前":["7.8","115.0"],"放入任务队列里面":["7.9"],"renderer":["7.9","218.8"],"进程会预先创建一个或者多个":["7.9"],"worker":["7.9","99.14"],"线程":["7.9"],"的结果会发送回给":["7.10"],"线程告诉其是否有动画正在运行":["7.10"],"需要更新窗口":["7.10"],"如果":["7.10","87.42","111.4","134.4","166.2","173.23","173.69","208.4","232.3","245.1"],"线程确定合成器需要更新窗口":["7.10"],"则会发送一个":["7.10"],"draw":["7.10","7.13"],"消息请求合成器输出下一帧":["7.10"],"合成器按下面的过程产生新的":["7.10"],"并发送给":["7.10"],"部分的耗时大于":["7.11"],"动画就会出现掉帧":["7.11"],"总的来说影响合成器动画性能的最关键因素就是过度绘制系数":["7.11"],"overdraw":["7.11"],"可以理解为绘制的面积和可见区域面积的比例":["7.11"],"如果网页本身存在大量图层堆叠情况":["7.11"],"导致过度绘制系数过高":["7.11"],"就会严重影响合成器动画的性能":["7.11"],"经验显示":["7.11"],"网页图层结构是否保持稳定":["7.12"],"当网页处于任一滚动位置上时":["7.12"],"它的当前过度绘制系数是否合理":["7.12"],"如何判断网页的图层结构是否稳定":["7.12"],"一般而言":["7.12"],"如果是位于叶子节点的图层增加或者移除":["7.12"],"对整个图层结构影响并不大":["7.12"],"pending":["7.13","173.56"],"用于绘制":["7.13"],"的是":["7.13"],"active":["7.13","216.2"],"只有当":["7.13"],"树当前可见区域部分的分块全部完成":["7.13"],"rasterize":["7.13"],"后":["7.13","114.5","259.2"],"才会进入":["7.13"],"步骤":["7.13"],"的过程中":["7.13"],"的耗时类似":["7.14"],"主要取决于图层树的复杂程度":["7.14"],"一般耗时很短":["7.14"],"总的来说对非合成器动画性能影响最大的通常是":["7.14"],"要实现高性能的非合成器动画":["7.14"],"页端需要很小心地控制":["7.14"],"sessionstorage":["8.1"],"cookie是一个在服务器和客户端之间来回传送文本值的内置机制":["8.2"],"用户偏好设置":["8.3"],"使用js操作cookie比较复杂":["8.4"],"方法":["8.5","148.5","177.6"],"localstorage":["8.7","175.21"],"可以保存5mb的信息":["8.8"],"localstorage和sessionstorage":["8.9","8.10"],"cookie还是比stprage更好用的":["8.11"],"其他情况下":["8.11"],"可以使用storage":["8.11"],"的区别":["8.12","173.86","205.3"],"不参与和服务器的通信":["8.14"],"数据":["8.15","178.2"],"可以互相读取":["8.15"],"覆盖":["8.15"],"hgajpakhafplebkdljleajgbpdmplhie":["9.1"],"related":["9.1"],"运行":["9.1","200.2"],"打开搜索":["10.1"],"或者":["10.2","72.5","77.1","87.24","106.33","106.43","184.14","222.10","253.0"],"源代码选项卡":["10.2"],"count":["10.4","52.17","171.0"],"nodes":["10.4"],"push":["10.4","10.12","57.7","69.7","89.13","100.6","111.2","117.1","158.4","164.4","174.48","179.58","204.3","206.15","214.3","218.5","221.1","231.4","241.8","286.30"],"rgbtexttorgbarray":["10.4"],"rgbtext":["10.4"],"return":["10.4","53.2","53.5","53.8","61.8","64.19","98.7","99.8","100.8","104.0","106.27","107.3","110.2","111.2","127.12","127.50","130.10","153.8","154.7","154.8","156.10","156.15","156.24","162.2","165.2","166.8","173.2","173.8","173.23","173.57","173.82","174.20","174.56","175.6","178.1","178.5","179.23","179.29","179.32","205.2","205.4","205.17","206.4","206.9","207.3","208.14","210.1","218.5","227.1","283.8","283.12","285.5","285.11","285.12","286.7","286.11","286.40","287.5","291.1","291.2","295.8","295.10"],"s":["10.4","10.9","84.7","114.30","122.5","126.5","140.4","141.3","154.17","206.9","206.14","214.3","216.3","219.6","243.1","275.1"],"g":["10.4","95.40","125.2","125.7","142.11","142.23","154.16","154.17","284.18","296.3"],"match":["10.4","10.6","27.7","95.40","175.9"],"d":["10.4","41.8","67.7","68.13","69.2","74.2","74.5","74.8","76.1","83.3","87.24","97.24","110.1","127.22","130.3","252.3","260.1","284.1","284.5","284.17","284.24","284.27","284.43","284.81"],"use":["10.5","69.10","98.12","154.4","154.5","154.10","195.4","195.8","286.69"],"strict":["10.5","69.10","186.3","195.4"],"window":["10.5","10.6","10.10","48.22","98.8","106.25","106.28","127.17","131.8","131.9","133.9","156.17","168.17","173.16","173.82","195.9","275.2","286.5","286.11","286.68","296.4"],"font":["10.6","90.0","106.41","170.15","279.9"],"face":["10.6"],"join":["10.6","127.40","226.1","295.3"],"undefined":["10.6","21.17","109.7","162.0","162.3","173.81","175.6","176.5","189.0","208.7","208.16","227.1","286.59","296.2"],"exports":["10.6","69.10","95.29","97.53","154.11","154.12","179.26"],"module":["10.6","69.10","81.3","87.13","95.20","97.53","102.0","102.5","154.11","154.12","177.11","179.26","181.0","217.7"],"object":["10.6","10.10","95.42","95.46","97.13","109.4","112.4","125.9","129.5","130.8","173.1","173.2","173.64","173.81","173.99","179.11","179.25","179.55","195.4","195.8","196.2","209.9","219.3","219.10","231.1","243.1","283.11","286.72","292.2","293.2"],"blang":["10.6"],"uage":["10.6"],"self":["10.6","133.2","133.4","230.2","236.1"],"util":["10.6","99.7"],"type":["10.6","19.8","63.0","64.9","81.3","88.2","99.11","104.0","126.4","154.16","156.6","172.0","177.11","179.55","195.3","212.1","214.0","216.2","241.1","241.10"],"tostring":["10.6","127.55","173.99","179.24","179.25","286.22"],"call":["10.6","108.3","111.2","152.20","173.17","173.99","177.8","212.1","219.6","283.6","286.16","288.3"],"clone":["10.6","10.7","99.10","216.3","218.5"],"switch":["10.6","181.0","214.0","285.2"],"case":["10.6","148.3","181.0","206.9","214.0","232.4","236.4","241.9"],"in":["10.6","65.8","67.10","129.2","156.17","170.8","170.15","173.64","190.2","190.4","206.2","232.4","236.4","241.3","241.6","241.9","242.1","243.2","248.2","252.5","286.4"],"hasownproperty":["10.6","131.1","131.2","131.3","131.4","131.5","131.6","179.56","286.69"],"array":["10.6","111.2","112.4","153.12","179.25","218.4","222.7","286.38"],"slice":["10.6","131.10","173.99","179.33","214.2","221.3"],"languages":["10.6"],"extend":["10.6","204.1","219.10"],"insertbefore":["10.6"],"dfs":["10.6","53.12"],"clonenode":["10.7"],"false":["10.7","61.18","64.18","65.29","99.8","111.2","162.0","173.1","173.41","173.69","173.85","182.2","206.15","206.16","207.3","219.4","221.4","236.1","241.6","252.3","256.1","283.8","285.9","288.3"],"href":["10.7","146.4","296.2"],"addrandomtourl":["10.7"],"addeventlistener":["10.7","98.10","133.2","133.4","176.2","195.4","205.2"],"load":["10.7","10.11","22.12","151.2","195.4"],"name":["10.8","64.8","64.12","64.26","67.7","68.13","69.10","74.0","88.2","92.0","113.6","114.15","119.9","121.0","121.1","121.4","133.5","138.32","151.9","160.0","166.6","166.7","168.3","169.4","171.0","172.0","184.33","185.6","192.1","192.3","195.7","227.1","283.7","286.47"],"action":["10.8","72.3","72.4","72.5","181.0"],"log":["10.8","11.7","64.13","68.3","76.3","96.12","103.10","109.1","127.9","127.25","127.32","129.2","134.4","140.2","140.4","141.2","149.2","154.14","158.3","159.2","159.5","164.3","173.4","173.7","173.29","175.8","176.13","177.8","178.8","285.4","286.54"],"element":["10.8","127.24","150.5","154.19","209.1","209.3","236.6","241.11"],"nname":["10.8"],"dollarinuse":["10.9"],"document":["10.9","10.14","95.22","107.4","127.54","129.6","147.3","151.13","169.3","175.7","176.2","195.4","207.11","286.23","286.24","286.61"],"createelement":["10.9","10.14","169.3","286.33"],"script":["10.9","65.26","68.10","99.6","177.11"],"setattribute":["10.9","103.11","169.3"],"function":["10.10","20.9","20.10","61.8","64.10","64.19","97.13","99.9","108.3","125.0","127.17","127.28","127.38","133.1","133.4","152.20","168.23","168.26","171.0","173.70","173.87","179.29","179.32","205.4","205.15","216.2","239.5","240.1","248.1","256.5","256.6","285.5","286.40","286.45"],"event":["10.11","177.8","223.2"],"loadeventstart":["10.11","151.7"],"unload":["10.11"],"unloadeventend":["10.11"],"unloadeventstart":["10.11"],"domcontentloadedeventstart":["10.11"],"wasnpnnegotiated":["10.11"],"把所有标签名转为小写":["10.12"],"添加到数组中":["10.12"],"tab":["10.13","133.6"],"split":["10.13","89.5","174.12","291.2"],"map":["10.13","99.23","127.47","153.12","174.29","179.55","193.7","214.1","226.1","227.1","248.1","286.38","288.4"],"qs":["10.13"],"iframe":["10.14"],"body":["10.14","24.5","27.2","27.11","64.16","67.3","99.10","101.1","103.11","138.21","168.7","286.1","286.10","286.56"],"appendchild":["10.14","24.5","103.11","286.33"],"win":["10.14"],"可以查看任何":["11.1"],"但是如果手动去改变状态的话就有点麻烦":["11.2"],"这时候这个":["11.2","11.3"],"tips":["11.3"],"图片":["11.4","20.12","21.1","22.1","22.6","23.1","23.36","23.39","52.10","106.16","106.21","106.28","106.35","106.46","106.48","138.20","151.8","151.11","154.17","155.0","194.5","199.3","200.9","201.1","201.5","276.0"],"当我们给":["11.4"],"ul":["11.4"],"添加该断点以后":["11.4"],"一旦":["11.4"],"假如当你发现页面滚动起来有性能上的问题时":["11.5"],"来找到上一次查看过的":["11.6"],"console":["11.7","64.13","76.3","97.13","97.22","103.10","127.9","127.25","127.32","127.50","129.2","134.4","140.2","140.4","141.2","154.14","158.3","159.2","159.5","164.3","173.4","173.7","173.29","175.8","177.3","177.8","178.8","191.1","286.53","286.54"],"对于这段代码来说":["11.7"],"如果我只想看到":["11.7"],"dom":["12.0","13.0","81.3","115.0","126.2","129.6","169.4","173.20","175.13","176.3","178.2","179.37","205.11","216.7","236.4","252.4"],"结构中往上挪一点或者往下挪一点":["12.0"],"按一下":["15.0"],"options":["16.0","19.9","70.0","98.7","154.7","154.8","181.0","195.8","210.0","219.3","240.1","241.7","258.2"],"base":["16.0","95.26","96.5","97.20","174.24","181.0","195.9"],"config":["16.0","61.5","61.6","65.10","68.6","74.3","74.6","81.6","95.15","96.14","97.2","97.20","98.7","99.10","100.4","109.1","195.8","195.9","204.2","219.10"],"在":["17.0","27.15","61.6","97.57","99.7","111.4","144.1","173.37","173.45","181.0","205.6","207.13","258.9","275.2"],"面板中":["17.0"],"通过":["17.0","106.35","177.7","178.1","209.9","221.2","252.4"],"那就可以将它转换成一个全局变量":["18.0"],"只需要":["18.0"],"右击":["18.0"],"它":["18.0"],"body中的子节点同时注册冒泡和捕获事件":["19.2"],"事件触发会按照注册的顺序执行":["19.2"],"js":["19.2","20.12","21.7","21.8","24.4","25.6","61.6","62.11","69.13","70.0","84.3","87.16","87.18","95.47","96.14","98.8","99.7","100.9","102.0","107.2","122.0","126.5","126.6","126.7","127.54","138.14","143.8","151.3","152.12","152.18","152.20","167.0","168.26","173.52","173.68","177.1","179.18","179.35","179.41","196.10","200.2","231.1","281.4"],"以下会先打印冒泡然后是捕获":["19.2"],"调用后会移除监听":["19.3"],"passive":["19.3"],"表示永远不会调用":["19.3"],"preventdefault":["19.3","207.3"],"一般来说":["19.3","44.9"],"如果我们只希望事件只触发在目标上":["19.3"],"这时候可以使用":["19.3"],"没有同源策略的情况下":["19.5"],"a":["19.5","20.7","20.9","20.10","22.12","32.1","41.8","48.6","48.9","50.16","52.15","60.0","65.8","87.18","87.43","119.10","125.2","126.6","127.28","127.29","127.30","148.1","152.20","175.4","179.57","206.2","206.5","206.15","232.4","249.0","252.3","284.14","284.48","284.64","285.2","285.5","295.6"],"网站可以被任意其他来源的":["19.5"],"访问到内容":["19.5"],"如果你当前":["19.5"],"get":["19.6","19.9","64.21","64.22","99.10","103.14","103.15","106.22","151.7","162.0","166.4","175.10","177.10","216.2","216.3","256.8"],"请求":["19.6","175.10"],"在开发中可能会遇到多个":["19.6"],"请求的回调函数名是相同的":["19.6"],"这时候就需要自己封装一个":["19.6"],"以下是简单实现":["19.6"],"通信的关键是后端":["19.7"],"只要后端实现了":["19.7"],"的值仅限于下列三者之一":["19.8"],"text":["19.8","88.2","93.1","95.31","106.14","222.7","228.2","286.9","286.51"],"plain":["19.8","214.3","286.51"],"methods":["19.9","64.9","126.4"],"put":["19.9","133.5"],"post":["19.9","25.5","50.31","97.13","175.10","204.1","260.1"],"delete":["19.9","159.5","159.9","216.2"],"com":["19.10","23.86","23.87","86.2","100.3","103.8","134.3","147.5","195.5","263.5","267.1","268.1","272.0","277.0"],"b":["19.10","32.1","48.14","52.4","111.3","125.2","125.7","126.6","127.8","127.30","127.50","136.2","136.4","184.12","185.1","285.2","285.5","289.1","295.6"],"mc":["19.11"],"messagechannel":["19.11"],"什么是":["19.12"],"从上表可以看到":["19.13"],"已经不建议用于存储":["19.13"],"如果没有大量数据存储需求的话":["19.13"],"可以使用":["19.13","70.0"],"注册成功":["19.14"],"catch":["19.14","98.3","103.17","107.4","109.1","173.61","195.4","207.12","256.4"],"err":["19.14","127.51","283.10"],"servcie":["19.14"],"注册失败":["19.14"],"监听":["19.14","177.6","196.12"],"词法环境和this变量":["20.2"],"变量环境是一个对象":["20.2"],"保存var变量和function函数声明":["20.2"],"词法环境也是一个栈结构":["20.2"],"原理如下":["20.3"],"js代码执行分为编译阶段和执行阶段":["20.3"],"编译阶段中":["20.3"],"js引擎会创建上下文并读取var变量声明和function函数声明保存至变量环境":["20.3"],"在执行阶段":["20.3"],"js引擎会访问变量环境":["20.3"],"编译全局代码生成全局上下文":["20.4"],"全局上下文只有一份":["20.4"],"在执行上下文创建好后":["20.5"],"js引擎会将执行上下文压入栈中":["20.5"],"js只有两种作用域":["20.6"],"接下来举个例子看看块状作用域的原理":["20.7"],"var":["20.7","20.9","20.10","21.10","64.25","68.3","97.22","106.36","125.8","129.2","134.4","154.20","162.1","168.23","170.15","173.85","176.2","179.62","195.9","204.2"],"再到变量环境":["20.8"],"foo":["20.10","127.41","127.47","134.4","179.15"],"就可以通过this访问对象内部的属性":["20.12"],"this":["20.12","21.16","89.6","89.13","98.7","99.8","127.7","163.0","173.97","178.1","178.3","184.11","206.5","206.15","214.3","220.2","236.6","243.2","252.3","255.0","283.6","288.2","288.3","288.5"],"其过程如下图所示":["21.1"],"相信到这来":["21.1"],"在这里":["21.2"],"你可以把v8引擎当做一个虚拟机":["21.2"],"虚拟机通过模拟实际计算机的各种功能来实现代码的执行":["21.2"],"接下来对token进行解析":["21.3"],"但这并不是全部进行解析":["21.3"],"并不是所有的js代码都会一开始便执行的":["21.3"],"你可以理解为我们平常使用的路由懒加载":["21.3"],"这将会影响浏览器的运行效率":["21.3"],"于是v8实现了解析":["21.3"],"parser":["21.3","62.1","64.11","64.12","154.16","179.37"],"在堆栈机器中":["21.4"],"jit":["21.5"],"更优质的机器代码":["21.5"],"抽象":["21.6","43.13"],"的":["21.6","71.18","71.19","129.1","134.4","163.0","173.25","173.94","177.13","179.2","286.52"],"是因为这里的语法并不会表示出真实语法中出现的每个细节":["21.6"],"嵌套括号被隐含在树的结构中":["21.6"],"验证语法":["21.7"],"语法如果有错的话":["21.7"],"抛出语法错误":["21.7"],"举个":["21.7"],"则值为":["21.8"],"null":["21.8","53.2","53.5","53.8","97.39","109.1","127.10","127.20","133.4","156.18","173.73","173.81","186.3","206.9","208.7","208.16","219.6","220.3","236.2","255.0","279.8","283.4","283.10","283.12"],"realm":["21.8"],"每一个":["21.8"],"由一组固有对象":["21.8"],"一个ecmascript全局环境":["21.8"],"在该全局环境的作用域中加载的所有ecmascript代码以及其他相关的状态和资源组成":["21.8"],"在浏览器中它是window对象":["21.9"],"由var创建的变量和全局声明的函数都会被挂载到global对象上":["21.9"],"nickname":["21.10"],"它会创建一个全局执行上下文并将其推入当前执行栈中":["21.11"],"每当引擎发现函数调用时":["21.11"],"所有这些变量的赋值都完成了":["21.13"],"组件始终是":["21.14"],"lexical":["21.14","64.14"],"date等":["21.15"],"还有用户定义的全局变量":["21.15"],"例如var定义的变量和全局定义的函数":["21.15"],"并将this指向全局对象":["21.15"],"函数环境":["21.15"],"用户在函数定义的变量将储存在环境记录中":["21.15"],"对外部环境的引用可以是全局环境":["21.15"],"用于表示函数的顶级范围":["21.16"],"如果函数不是":["21.16"],"arrowfunction":["21.16"],"则提供":["21.16"],"声明的变量可以通过window":["21.17"],"变量名":["21.17"],"访问":["21.17"],"或window":["21.17"],"declarativerecord":["21.17"],"即声明式环境记录declarativeenvironmentrecord":["21.17"],"除了var":["21.17"],"可能找到":["21.18"],"也可能没找到":["21.18"],"但无论如何查找过程都将终止":["21.18"],"编译器需要依赖的一个作用对象":["21.19"],"用于查找当前环境所定义的变量等":["21.19"],"显示器":["22.1"],"我们来看二进制代码":["22.1"],"0000":["22.1"],"指令流向内存":["22.3"],"控制器分析指令之后":["22.4"],"并且将运算结果返回存储器":["22.5"],"我们先来看看运算器的主要作用":["22.7"],"如上图":["22.8"],"运算器里最重要的部件是alu":["22.8"],"控制单元":["22.9"],"取数指令执行过程":["22.10"],"分析指令":["22.11"],"执行指令的过程如下":["22.11"],"第五步":["22.11"],"ir将指令放入cu中":["22.11"],"来分析指令":["22.11"],"比如说分析出是一个取数指令":["22.11"],"接着就要执行指令了":["22.11"],"16意思是将存储体内的16号单元数据":["22.12"],"放到寄存器地址a中":["22.12"],"是将代码翻译一行成机器语言":["22.13"],"中间可能会先翻译为汇编代码或者字节码":["22.13"],"解释一行":["22.13"],"执行一行":["22.13"],"这个是不行的":["22.15"],"算法如下":["22.16"],"把给定的十进制数29除以2":["22.16"],"商为14":["22.16"],"具体做法是":["22.17"],"用2乘十进制小数":["22.17"],"什么是定点数呢":["22.20"],"纯小数表示举例如下":["22.21"],"那如果不是纯小数或者纯整数":["22.21"],"该怎么表示呢":["22.21"],"一个是尾数":["22.22"],"基数和阶码":["22.22"],"浮点数的加减运算":["22.23"],"并不是像我们上面介绍的那样简单":["22.23"],"我们可以发现":["22.24"],"数组的数据有时候在内存是连续存储的":["22.24"],"如果我们要取数据":["22.24"],"比如从内存取出a":["22.24"],"o":["22.26","74.3"],"指的是一切操作":["22.26"],"通过i":["22.27"],"o总线":["22.27"],"告诉cpu":["22.27"],"只需要简单的发出启动和停止类似的命令":["22.28"],"这里需要注意的是":["23.1","23.50"],"以及分析这些协议的报文时":["23.2"],"数据是指0和1":["23.3"],"网络带宽是指在单位时间":["23.4"],"吞吐量表示在单位时间内通过某个网络":["23.5"],"所以有第1秒0辆":["23.6"],"分组":["23.7"],"就是说我跟你说话":["23.8"],"如gif图所示":["23.9"],"在路由器确定了转发接口后":["23.10"],"例如分析数据包的首部":["23.11"],"往返时间也是一个重要的性能指标":["23.12"],"3层主要是是物理链路组成的":["23.14"],"这不就是网线吗":["23.16"],"比如家里连接路由器的网线":["23.16"],"用":["23.17","123.1","156.4","173.17"],"有光脉冲表示1":["23.18"],"无光脉冲表示0":["23.18"],"增加信号的传输距离":["23.20"],"需要注意的是":["23.20","106.35","133.6"],"小秘呢":["23.22"],"就找送快递物理层去做这个事":["23.22"],"但物理层是个傻子":["23.22"],"她要把文件编号封装一下":["23.24"],"帧的数据部分可能有跟帧首部完全一样的字符":["23.25"],"这时候就要采取一定的措施":["23.25"],"就会让傻子重新发送有没有送到的文件":["23.26"],"传输层tcp也有流量控制功能":["23.28"],"区别在于tcp是端到端的流量控制":["23.28"],"网络拓扑结构":["23.29"],"传输速率等":["23.29"],"主机a将以太网帧发出":["23.30"],"此时局域网中所有主机均可收到这个桢":["23.30"],"主机中的网卡接收到以太网桢后":["23.30"],"无连接":["23.31"],"跟以太网相关的拓扑结构有星型和总线型":["23.32"],"可靠性也会随之下降":["23.34"],"就会变为以太网的帧":["23.35"],"还会完成一些链路管理":["23.35"],"无线局域网我们只介绍一下典型的网络结构":["23.36"],"所以我们只需要记住一些特点就行了":["23.37"],"每一个站在发送数据之前以及发送数据时以及发送数据时都要检测一下总线上是否有其他计算机在发送数据":["23.37"],"或者是把它丢弃":["23.39"],"而冲突域只是发生的同一个网段":["23.40"],"举个例子":["23.40"],"公司里大家的电脑一般都是连接到交换机上":["23.40"],"因为交换机可以隔离冲突域":["23.40"],"看一看":["23.41"],"分组的概念是大多数计算机网络都不能连续地传送任意长的数据":["23.42"],"先放入缓冲区":["23.44"],"再按一定的路由算法确定该分组下一步将发注哪个结点":["23.44"],"如此一个结点一个结点传递":["23.44"],"header":["23.45","166.5"],"和数据本身":["23.45"],"ipv6":["23.46"],"首部长度":["23.46"],"单位是4b":["23.46"],"最小为5":["23.46"],"为什么是5呢":["23.46"],"ip分片":["23.47"],"mf":["23.48"],"1即表示后面":["23.48"],"还有分片":["23.48"],"ip地址分类":["23.49"],"255用于环回测试":["23.50"],"d类地址用于组播":["23.50"],"e类地址用于科研":["23.50"],"你发没发现":["23.50"],"为什么我们前端启动webpack测试环境的时候":["23.50"],"一般地址都是192":["23.50"],"是指0":["23.50"],"255的数字":["23.50"],"在公司和家里都是这个网段":["23.50"],"不是很奇怪吗":["23.50"],"你家里的网段怎么和公司一样呢":["23.50"],"其实是因为有一部分叫私有ip地址":["23.50"],"是不能拿到网络上跟别的计算机通信的":["23.50"],"如上图所示":["23.51"],"0这个网段划分了三个子网":["23.52"],"其中一个是145":["23.52"],"一个是145":["23.52"],"问题来了":["23.52"],"每台主机都会在自己的arp缓冲区中建立一个":["23.54"],"arp列表":["23.54"],"以表示ip地址和mac地址的映射关系":["23.54"],"当源主机需要将一个数据包要发送到目的主机时":["23.54"],"会首先检查自己":["23.54"],"指的是由服务器控制一段lp地址范围":["23.55"],"客户机登录服务器时就可以自动获得服务器分配的lp地址和子网掩码":["23.55"],"一个新搭建好的网络":["23.57"],"往往需要先进行一个简单的测试":["23.57"],"主机h2收到主机h1的一个udp包":["23.58"],"结果h2发现这个包里的端口没有被监听":["23.58"],"这时候就要判断一下这个数据包是什么类型的了":["23.59"],"如果它是路由器之间":["23.59"],"交换路由信息的分组":["23.59"],"就会把这个数据包交付给如上上图所示的":["23.59"],"路由选择处理机":["23.59"],"进行处理和计算":["23.59"],"进程间的通信":["23.60"],"这里简单说一下可靠传输协议tcp":["23.60"],"不可靠传输协议udp":["23.60"],"那为什么一个端口只能分配给一个应用程序":["23.61"],"不能是多个呢":["23.61"],"udp协议是参考模型中一种无连接的传输层协议":["23.62"],"在ip层也只是加了一个ip首部":["23.63"],"我们知道":["23.63"],"在以太网":["23.63"],"链路层上的数据如果超过1500字节":["23.63"],"就会分片":["23.63"],"所以网络层发现上面传输层给了太大的数据就会分片":["23.63"],"目的端口是一定要有的":["23.64"],"16位udp长度是指首部":["23.64"],"数据的长度":["23.64"],"无差错":["23.65"],"不丢失":["23.65"],"不重复":["23.65"],"按序到达":["23.65"],"总结一下就是":["23.65"],"则证明到需要n":["23.66"],"1为止所有的数据都已经正确收到":["23.66"],"如下图":["23.66"],"rst":["23.67"],"置1时重建连接":["23.67"],"如果接收到rst位时候":["23.67"],"会为该tcp连接分配缓存和变量":["23.68"],"缓存指的是一个字节流队列":["23.68"],"发送方和接收方都有这个队列":["23.68"],"而且如果双方需要互相通信":["23.68"],"这个时候":["23.69","96.7"],"客户端不能给服务器发送信息报文":["23.69"],"只能接收":["23.69"],"但是服务器要是还有信息要传给服务器":["23.69"],"仍然能传送":["23.69"],"这里的v是什么意思呢":["23.69"],"这就取决于服务器发送给客户端之前的一个包确认号是多少了":["23.69"],"当服务器也没有了可以传的信息之后":["23.69"],"服务器收到对方的fin报文时":["23.70"],"仅仅表示对方不再发送数据了但是还能接收数据":["23.70"],"由于只有两次握手":["23.71"],"服务端收到请求就会进入established状态":["23.71"],"等待发送数据或主动发送数据":["23.71"],"但此时的客户端早已进入closed状态":["23.71"],"序号":["23.72","23.73"],"isn":["23.72"],"为什么要随机":["23.72"],"增加安全性":["23.72"],"为了避免被第三方猜测到":["23.72"],"从而被第三方伪造的rst报文reset":["23.72"],"之前我们提到tcp是面向字节流的":["23.73"],"比如第一个字节就是序号1":["23.73"],"第二个字节就是序号2":["23.73"],"tcp的流量控制":["23.74"],"中采用滑动窗口来进行传输控制":["23.75"],"滑动窗口的大小意味着接收方还有多大的缓冲区可以用于接收数据":["23.75"],"发送方可以通过滑动窗口的大小来确定应该发送多少字节的数据":["23.75"],"这部分我也觉得文字部分太生硬了":["23.76"],"主要通过四个算法来进行拥塞控制":["23.77"],"慢开始":["23.77","179.44"],"拥塞避免":["23.77","179.44"],"快重传":["23.77"],"注意到慢开始每个轮次都将":["23.78"],"这样会让":["23.78"],"则":["23.79"],"m3":["23.79"],"丢失":["23.79"],"立即重传":["23.79"],"在这种情况下":["23.79"],"定义报文类型的语法":["23.81"],"比如某字段的意思":["23.81"],"s架构":["23.82"],"比如电子邮件":["23.82"],"short":["23.83"],"建立tcp连接需要3次":["23.84"],"握手":["23.84"],"拆除tcp连接需要4次":["23.84"],"通常会使用":["23.85"],"qq":["23.86"],"并将这个主机名传送给dns应用的客户端":["23.87"],"dns客户机端向dns服务器端发送一份查询报文":["23.87"],"而因特网是互联网中的一种":["23.88"],"它可不是仅有两台机器组成的网络":["23.88"],"而是由上千万台设备组成的网络":["23.88"],"该网络具备很大的规模":["23.88"],"因特网使用tcp":["23.88"],"ip协议让不同的设备可以彼此通信":["23.88"],"但使用tcp":["23.88"],"ip协议的网络并不一定是因特网":["23.88"],"一个局域网也可以使用tcp":["23.88"],"code":["23.90","64.13","64.15","166.3","167.0","193.2","193.4","195.6","236.6"],"状态码是三位数字":["23.90"],"描述了请求过程中所发生的情况":["23.90"],"每个状态码的第一位数字都用于描述状态的一般类别":["23.90"],"成功":["23.90"],"出错":["23.90"],"等等":["23.90"],"原因短语":["23.90"],"请求头部":["23.91","175.10"],"请求头部是只在请求报文中有意义的头部":["23.91"],"用于说明是谁或什么在发送请求":["23.91"],"请求源自何处":["23.91"],"或者客户端的喜好及能力":["23.91"],"host":["23.91","96.5","114.29","126.4","175.9","175.10"],"server":["23.92","74.3","95.45","96.5","113.6","138.34","159.11","181.0"],"服务器应用程序软件的名称和版本":["23.92"],"解析主体中的相对url时使用的基础url":["23.93"],"encoding":["23.93"],"对主体执行的任意编码方式":["23.93"],"也是存在些问题":["24.3"],"后来通过了解和学习发现使用代理和proxy代理配合起来使用比较方便":["24.3"],"脚本":["24.4","72.5","76.2"],"利用这个特性":["24.4"],"callback":["24.5","103.15","178.3","178.6","179.50","283.7"],"让":["24.5","217.1","258.10"],"生效":["24.5"],"jsonp":["24.5"],"access":["24.6","85.8"],"disposition":["25.1","25.3"],"消息体会以页面的一部分或者整个页面的形式展示":["25.2"],"setheader":["25.3"],"inline":["25.3","106.20","106.22","169.3","169.4","221.3","241.8"],"send":["25.3","148.4","195.4"],"啊":["25.4"],"客户说他不会清":["25.4"],"永远不要期望你的客户会进行":["25.4"],"private":["25.5","109.6","138.31","223.2"],"表明响应只能被单个用户缓存":["25.5"],"不能作为共享缓存":["25.5"],"即代理服务器不能缓存它":["25.5"],"私有缓存可以缓存响应内容":["25.5"],"对应用户的本地浏览器":["25.5"],"max":["25.5","95.28","153.5","153.6","153.7","279.8"],"age":["25.5","184.33"],"xx":["25.6","64.16"],"jquery":["25.6"],"min":["25.6","97.36","100.3","153.7"],"这破":["25.7"],"是不是坏了":["25.7"],"浏览器里看明明有值":["25.7"],"域名":["25.8","146.7"],"domain":["25.8"],"value":["25.8","61.8","63.0","69.10","73.0","86.5","88.2","99.13","113.7","123.0","127.18","127.36","162.0","169.4","173.1","173.93","179.33","179.56","195.4","217.7","221.3","248.1"],"指定":["25.8","87.13"],"只能在什么域下生成":["25.8"],"允许通配":["25.8"],"这个属性主要出于安全性":["25.8"],"路径":["25.8"],"path":["25.8","64.26","67.11","82.0","97.2","99.12","154.11","206.1","214.3","236.6"],"比":["25.8"],"而":["25.9","102.1","106.5","115.0","127.16","171.0","173.52","178.5"],"登录了":["25.9"],"却还":["25.9"],"这个现象":["25.9"],"如果服务端没有问题的话":["25.9"],"服务器传输超文本到本地浏览器的超文本传输协议":["26.1"],"是以安全为目标的":["26.1"],"此处暂且不表":["26.2"],"协议的默认端口为":["26.2"],"的默认端口为":["26.2"],"链接":["26.4","175.12"],"服务器接收到客户端的请求之后":["26.4"],"会将网站的证书":["26.4"],"http和https使用的是完全不同的连接方式":["26.5"],"用的端口也不一样":["26.5"],"能做的事情":["27.1"],"就不能做了":["27.1"],"如果你愿意":["27.1"],"都使用":["27.1"],"请求或者":["27.1"],"里":["27.2","103.16"],"当然你想写到":["27.2"],"里也是可以的":["27.2"],"alive":["27.5","214.1","216.2"],"date":["27.5","96.13","127.42","133.3","156.11","173.70","173.82","179.25","195.4","286.3"],"创建报文时间":["27.5"],"两端资源标记比较":["27.7"],"since":["27.7","214.3","220.2","256.4"],"资源标识":["27.9"],"location":["27.9","27.11","68.11","99.12","139.4","181.0","296.4"],"客户端重定向到某个":["27.9"],"长度":["27.11"],"应用层之下":["27.12"],"首次进行":["27.12"],"但是问题就在于如何让双方知道秘钥":["27.13"],"假设现在两端需要使用对称加密":["27.14"],"那么在这之前":["27.14"],"接下来的通信就可以通过该密钥来加密解密":["27.15"],"通过以上步骤可知":["27.15"],"握手阶段":["27.15"],"tcp":["28.1","48.6","67.3","152.8","152.9","175.12"],"协议":["28.1","50.4","51.1","115.0"],"还有另外一个强大的协议":["28.1"],"udp":["28.1","50.7","51.2","115.0"],"无队头阻塞":["28.2"],"表示成功":["29.1"],"这是临时响应":["29.2"],"这个临时响应是用来通知客户端它的部分请求已经被服务器接收":["29.2"],"且仍未被拒绝":["29.2"],"服务器已经接受请求":["29.3"],"但尚未处理":["29.3"],"临时移动":["29.4"],"服务器目前从不同位置的网页响应请求":["29.4"],"未找到":["29.5"],"服务器找不到请求的网页":["29.5"],"错误网关":["29.6"],"服务器作为网关或代理":["29.6"],"从上游服务器收到无效响应":["29.6"],"可能是对本包的应答":["30.1"],"也可以是对本包后续包的应答":["30.1"],"则释放该数据包占用的缓冲区":["30.1"],"棋手需要分析关键步骤":["31.1"],"此时他们需要会站在旁观者的视角提问":["31.1"],"我为什么要这样走":["31.1"],"有没有更好的走法":["31.1"],"传不习乎":["31.2"],"其实就是从线上故障中寻找原因和解法":["31.3"],"并且想方设法加强这个主要原因":["31.4"],"我们曾经处理过金额单位转换错误":["31.5"],"把100分当成100元":["31.5"],"引发的线上资损问题":["31.5"],"复盘下来我们才意识到":["31.5"],"原来有些国家货币的最小单位是元而不是分":["31.5"],"如日元":["31.5"],"可以做到尽可能的场景还原":["31.7"],"而且复盘过程相对私人化":["31.7"],"更能对症下药":["31.7"],"当然":["31.7","50.25","115.0"],"自我复盘的坏处也很明显":["31.7"],"学习失败者如何失败":["31.8"],"在人性使然下众人必然各执一词":["31.9"],"所以绝对的客观绝对不是一件简单的事情":["31.9"],"但是再难也得想办法去接近真相":["31.9"],"集思广益":["31.10"],"还不如不盘":["31.11"],"复盘之后":["31.11"],"对于日常生活来说":["31.12"],"每天复盘实在过于频繁":["31.12"],"要有一定的思考深度":["31.14"],"如果复盘只是简单的走个过场":["31.14"],"最可怕的是":["31.15"],"在对立情绪之下":["31.15"],"而没做之前":["31.16"],"你想的可能都是错的":["31.16"],"现在":["31.16","44.2"],"很多人":["31.16"],"很多成功的案例反倒更值得我们去复盘":["31.17"],"为什么":["31.17","48.6"],"因为成功会让我们忘乎所以":["31.17"],"以为自己无所不能":["31.17"],"军队在执行任务之后":["31.18"],"会写任务后的报告":["31.18"],"aar":["31.18"],"的吗":["32.1"],"我编译的时候它报":["32.1"],"的错误":["32.1"],"然后我尝试用":["32.1"],"c":["32.1","41.3","41.4","41.5","127.3","136.8","138.19","173.28","174.6","184.12","252.3"],"方法进行解决了":["32.1"],"又揉揉头":["32.2"],"这个问题百度也是有解决方案的":["32.2"],"大致瞅了下":["32.2"],"这几篇也是可以的":["32.2"],"你看下能不能直接告诉我怎么解决不":["32.2"],"我这里急着要解决啊":["32.2"],"我看这些文章来解决问题的话太耗时了":["32.2"],"赶不及啊":["32.2"],"皱眉":["32.2"],"瞅了下那几篇文章":["32.2"],"大致就是":["32.2"],"就可以解决了":["32.2"],"花钱买时间是一个常识":["32.3"],"如果你不能认同":["32.3"],"要么你钱包穷":["32.3"],"要么你思想穷":["32.3"],"给对方发工资的不是你或者你老板":["32.3"],"rpc":["33.1","178.7"],"框架或消息队列被用":["33.1"],"于内部系统之间的通信服务就如同信使一般":["33.1"],"而数据库则负责记录结果":["33.1"],"它更像是":["33.1"],"一名书记员":["33.1"],"组织人员":["33.1"],"为了能够实现利用软件系统解决业务问题的目标":["33.1"],"架构师还需要关注":["33.1"],"软件系统的构建过程":["33.1"],"他以实现软件系统为号召":["33.1"],"从公司组织中聚集一批软件工程":["33.1"],"我们开发各种通过":["33.2"],"dsl":["33.2"],"通过对业务的理解":["33.3"],"作为合理的方案选择":["33.5"],"提出专业的意见":["34.1"],"用户喜欢的产品才是好的产品":["34.2"],"将用户的想法概念化为可以实现的事物":["35.0"],"想与这个领域建立联系":["35.1"],"解决这些问题有什么新途径":["35.2"],"真正的客户是谁":["35.3"],"在构思过程中要倾听客户的诉求":["35.4"],"人们每天使用的20":["35.5"],"项目的潜在的相互依赖性":["36.1"],"风险":["36.2"],"项目估算":["36.3"],"改进":["36.4"],"开发估算反馈循环":["36.5"],"汽车在前进时依赖的其实是汽车自身重量带来的巨大惯性":["37.0"],"你没看错":["37.0"],"汽车飞轮":["37.0"],"如果你在高速上开过车":["37.0"],"你就会发现在车速很高的时候":["37.0"],"耗油量反而比走走停停的市区道路上少很多":["37.0"],"你甚至可以在空档的情况下滑行":["37.0"],"这时候车速也不会下降很多":["37.0"],"这就是飞轮系统的典型特点":["37.0"],"维持":["37.0"],"具备巨大动能的":["37.0"],"更多的用户流量必然会吸引更多的卖家前来入住":["37.1"],"而随着卖家数量的增加":["37.1"],"必然会让销售渠道增加":["37.1"],"销售量的增加":["37.1"],"则意味着平台自身的更多盈利":["37.1"],"有了盈利之后":["37.1"],"亚马逊就可以通过竞争和优惠让商品更加廉价":["37.1"],"然后廉价的商品必然会更加吸引用户":["37.1"],"到了这一步":["37.1"],"这个因果链就回到了原点":["37.1"],"廉价的商品将吸引更多的买家":["37.1"],"这样":["37.1","64.7","133.6"],"亚马逊的飞轮系统就设计好了":["37.1"],"为了保证方向和结果的正确":["37.2"],"必须确保这些部件是和我们的问题紧密相关而不冗余":["37.2"],"过多的或者和问题无关的部件会都掩盖问题的本质":["37.2"],"让大家分心":["37.2"],"这也是吉姆":["37.2"],"柯林斯在书中建议设计飞轮时只引入四到六个部件的原因":["37.2"],"其二":["37.2"],"为了保证整个系统不会出现短板":["37.2"],"必须确保这些部件必须具备理论上的无限增长能力":["37.2"],"飞轮系统的部件是开放的而不是封闭的":["37.2"],"亚马逊飞轮中的":["37.2"],"更多的用户量":["37.2"],"就是在理论上可以无限增长的":["37.2"],"恐怕飞轮也无法自发转动":["37.3"],"而你则变成了那个终日无休的西西佛":["37.3"],"设计飞轮时不但要考虑内部因素影响":["37.3"],"还得考虑环境因素的影响":["37.3"],"这一点我发现其他关于飞轮思维的文章鲜有提及":["37.3"],"回到":["37.3"],"成长飞轮":["37.3"],"的例子中":["37.3"],"如果我的第一年在一个矛盾存生":["37.3"],"同事之间关系紧张的环境中度过":["37.3"],"那么此时成长飞轮怎么样推恐怕都转不起来":["37.3"],"这就是我们常说的":["37.3"],"选择比努力更重要":["37.3"],"为了减少不确定性带来的风险":["37.4"],"通知的范围":["38.3"],"客户是否识别了面对的所有问题":["38.3"],"进入市场有没有保障":["38.4"],"如认证或者许可":["38.4"],"有没有必须的集成工作":["38.4"],"用户通常使用那些工具":["38.4"],"能不能实现用户的无缝进行":["38.4"],"你的产品能否帮助客户赚钱":["38.5"],"占领市场":["38.5"],"方便下一次类似的项目可以重用":["38.6"],"灰度思维":["39.1"],"就可以发挥作用":["39.1"],"工程师思维":["39.1","46.2","46.3"],"04":["39.1"],"png":["39.1","64.2","64.4","64.13","89.3","100.4","102.0","154.1","154.16","154.17","159.1","159.4","169.2","205.1","205.11","284.23"],"简单来说":["39.1"],"灰度思维要求我们遇事不要过早下结论":["39.1"],"应该先以最小的成本去试探一下":["39.1"],"在获得足够多的反馈和信息":["39.1"],"建立足够的自信之后":["39.1"],"再决定是否迈出更大的步子或者调转方向":["39.1"],"可以看到":["39.1","140.2","162.3"],"灰度不是0到1的非黑即白":["39.1"],"不是前面dba的一刀切":["39.1"],"而是是0":["39.1"],"那么我可能就会对他进行一个灰度测试":["39.2"],"先让他做一个简单的变更":["39.2"],"只是在量级上有差异":["39.3"],"而切1片就算真的出了问题":["39.3"],"其所造成的影响只占切100片造成的影响的1":["39.3"],"基本可以忽略不计":["39.3"],"要在一开始就为我们的灰度试验想好退路":["39.4"],"在dba切库的例子里":["39.4"],"我们的退路就是把上一步的操作回滚掉":["39.4"],"让系统回到之前的状态":["39.4"],"虽然我们已经对这个模块做了反复的测试":["39.6"],"但在模块上线之后":["39.6"],"具体来说":["39.7","175.10"],"蓝绿发布要求至少得有两个发布分组":["39.7"],"或者两个机房":["39.7"],"其中一个是蓝机房":["39.7"],"为了尽早完成对以上两点的验证":["39.8"],"精益创业的建议是快速搭建mvp":["39.8"],"最小可用产品":["39.8"],"确定账号正确之后":["39.10"],"不用一开始就够买价格昂贵的专业相机":["39.11"],"此时可以先用手机练习起来":["39.11"],"比如通过体验课":["39.12"],"如果对方接受了":["39.13"],"那么就给对方提一个更大的要求":["39.13"],"不妨让我们问问自己":["39.14"],"这个事情之前是不是没做过":["39.14"],"面试时间在30":["40.0"],"分为以下4块内容":["40.1"],"主要技术栈":["40.3"],"我擅长的技术":["40.3"],"项目介绍":["40.3"],"这个项目最大的挑战是什么":["40.4"],"系统设计方面的问题":["40.5"],"主要是让应聘者针对某个大系统提出自己的设计方案":["40.5"],"第一个为组员实战技能分享":["40.6"],"第二个为高阶知识点考核":["40.6"],"比如我们最近在做设计模式的培训":["40.6"],"最终都是希望能够赋能到实际的开发工作中":["40.6"],"提升开发效率和质量":["40.6"],"我们已经把所有的业务迁移到了新的支付系统上":["41.0"],"在这个支付系统里":["41.0"],"我们有收单模块":["41.0"],"收银支付模块":["41.0"],"账务模块":["41.0"],"会员模块等等":["41.0"],"随着规模的扩大":["41.0"],"我们团队的人数也翻了倍":["41.0"],"新系统建立起来之后":["41.0"],"支付系统已经有了一定的雏形":["41.0"],"和电商拆分之后":["41.0"],"团队的研发效率也得到了提升":["41.0"],"一蹴而就的事情一般都是一锤子买卖":["41.1"],"渐进式的事情则需要千锤百炼":["41.1"],"迭代思维的本质":["41.1"],"理解了上面的内容":["41.1"],"就不难理解迭代思维了":["41.1"],"所谓迭代思维就是一种快速试错的思维":["41.1"],"jpeg":["41.1"],"当我们要做一件事的时候":["41.1"],"我们可以从这个事情的最基础版本":["41.1"],"这里姑且称为1":["41.1"],"0版":["41.1"],"开始":["41.1","70.0","222.11"],"做完1":["41.1"],"0版之后":["41.1"],"我们要去收集和分析反馈":["41.1"],"具体怎么做以及做出什么结果":["41.2"],"或者做到什么程度":["41.2"],"这个阶段可以把计划做得足够详细":["41.2"],"这样在执行阶段就会很轻松":["41.2"],"也即事中执行阶段":["41.2"],"这个阶段主要按照计划进行实施":["41.2"],"实施过程最好能有记录":["41.2"],"检查执行结果是否符合预期":["41.3"],"比如变更时间是不是超了":["41.3"],"变更过程中是不是出现了不在计划里的问题":["41.3"],"如果不符合预期":["41.3"],"哪里出了问题":["41.3"],"检查文章发布之后的效果":["41.4"],"有多少朋友会阅读":["41.4"],"哪篇文章最受欢迎等等":["41.4"],"如果阅读量很少":["41.4"],"发布上线":["41.5"],"当然可能是分多次发布的":["41.5"],"检查建设是否符合预期":["41.5"],"能够支持xx业务吗":["41.5"],"而不只是把事情做对":["41.6"],"p阶段的计划产出":["41.6"],"基本就是在界定什么是正确的事情":["41.6"],"如果你是执行者":["41.7"],"应该重点抓d阶段和a阶段":["41.7"],"你就能抢占先机":["41.8"],"这一步结束之后":["41.8"],"你需要根据最新的知识产出一份计划行动列表":["41.8"],"决策阶段":["41.8"],"根据调整阶段产生的计划行动列表":["41.8"],"结合自己的实际情况":["41.8"],"选择一个":["41.8"],"或多个":["41.8"],"最优的计划执行":["41.8"],"同样的":["41.8"],"战场形势瞬息万变":["41.8"],"决策过程的要求还是要快":["41.8"],"执行阶段":["41.8"],"按照决策的结果进行执行":["41.8"],"执行后产生新的结果":["41.8"],"开始下一个ooda":["41.8"],"打出一套":["41.9"],"组合拳":["41.9"],"而后者则适用于不确定的对抗性环境":["41.10"],"当你发现自己身处一个瞬息万变的":["41.10"],"战场环境":["41.10"],"时":["41.10","61.2","86.3","98.4","174.64","175.13","184.16"],"ooda循环一定会对你有所帮助":["41.10"],"业务需求和技术需求":["42.0"],"某种意义上是开发人员与与销售人员沟通的桥梁":["42.0"],"指导方针":["42.1"],"审核":["42.1"],"架构小组讨论":["42.2"],"中文意思是":["43.1"],"相互独立":["43.1"],"说的是分解工作的过程中不要漏掉某项":["43.2"],"中国人":["43.3"],"外国人":["43.3"],"国籍维度":["43.3"],"这也让":["43.5"],"完全穷尽":["43.5"],"你当初要解决的":["43.6"],"问题":["43.6","178.3"],"或当初分析的":["43.6"],"目的":["43.6","150.1"],"年龄":["43.7"],"居住区域等要素进一步细分":["43.7"],"才有可能得出你想要的东西":["43.7"],"我们的切入点可以是":["43.9","43.10"],"上面所说的是1":["43.10"],"那么这个切入点是从":["43.13"],"职业态度":["43.14"],"心态个人定位":["43.14"],"个人调解":["43.14"],"个人发展":["43.14"],"切入点如何来确定":["43.14"],"当然不是随便来确定的":["43.14"],"就是一次做对":["44.0"],"在高速上出现误判":["44.1"],"导致汽车驾驶员车祸身亡":["44.1"],"对于驾驶员的家人来说":["44.1"],"事后补救形同于事无补":["44.1"],"那么":["44.1","61.13","102.0"],"既然事后修补的成本很高":["44.1"],"我们就会想":["44.1"],"我们能否在事前就避免错误的发生呢":["44.1"],"答案是肯定的":["44.1"],"按照事前":["44.1"],"因为当时我们实在是看不出来哪里还能有问题了":["44.2"],"但怀疑终归只是怀疑":["44.2"],"由于这个函数并没有打印任何日志":["44.2"],"所以我们无法通过查看线上日志的方式验证我的怀疑":["44.2"],"于是":["44.2"],"为了验证我的怀疑":["44.2"],"我在交集函数中补充了日志打印的代码":["44.2"],"做了一个紧急发布":["44.2"],"之后才通过日志验证了我的怀疑是正确的":["44.2"],"笔者注":["44.2"],"这里也有可能是我记错了":["44.2"],"第一次发布可能就是为了修复问题":["44.2"],"但是失败了":["44.2"],"所以才有了第二次发布":["44.2"],"不过这不影响这个例子想要表达的意义":["44.2"],"到了第二天":["44.2"],"我们又做了一次紧急发布":["44.2"],"修复了交集函数中的bug":["44.2"],"这才算是修复了问题":["44.2"],"让我们回到有问题的交集函数上":["44.2"],"不妨让我们再回顾一下这个函数":["44.2"],"看出问题了吗":["44.2"],"这段交集函数的最大问题在于":["44.2"],"运行时会改变银行供应商白名单当中的内容":["44.2"],"比如下面的代码示例":["44.2"],"usb接口已经考虑了防错设计":["44.3"],"在方向错误的情况下":["44.3"],"usb接口是无法插入的":["44.3"],"但是槽点在于":["44.3"],"这样的防错设计是以用户的亲自试错为代价的":["44.3"],"还记得每次用usb接口插入失败的沮丧心情吗":["44.3"],"换言之":["44.3"],"这样的防错设计是被动式的":["44.3"],"它把压力转嫁给了用户":["44.3"],"需要用户参与甚至需要用户付出一定的代价才能达到防错的目":["44.3"],"这样让人恼火的设计":["44.3"],"被网友们捶爆就不奇怪了":["44.3"],"比如在网上流传着这样的段子":["44.3"],"据说usb接口的发明者去世的时候":["44.3"],"棺材总共往墓穴里放了三次":["44.3"],"第一次":["44.3"],"棺材放了一半卡住了":["44.3"],"于是大家把棺材吊出来":["44.3"],"第二次放的时候转了180度":["44.3"],"具有即使有人为疏忽也不会发生错误的构造":["44.4"],"不需要注意力":["44.4"],"无脑":["44.4"],"停止":["44.5"],"按钮则放在底部不起眼的位置":["44.5"],"没睡醒的人很难按到这个按钮":["44.5"],"其三":["44.5"],"其他所有的物理按键全部等同于":["44.5"],"即便错按也不会因关掉闹铃而误事":["44.5"],"这样的设计":["44.5"],"其实就是对用户当前意识状态的测试":["44.5"],"无论是睡醒的人":["44.5"],"还是半迷半醒的人":["44.5"],"经过这样的测试之后":["44.5"],"按错的概率会降低很多":["44.5"],"从这个例子里可以看出":["44.5"],"防错设计的目的最终还是要服务于产品本身的目的":["44.5"],"文档":["44.6"],"相应的":["44.6"],"防错设计也应该在这四个层次展开":["44.6"],"如下表所示":["44.6"],"工作层次":["44.6"],"防错内容":["44.6"],"我们能够预判出可能的犯错问题":["44.7"],"此时就可以通过设计来避免问题的出现":["44.7"],"在api服务中":["44.8"],"我们会加上业务校验":["44.8"],"从事前防错到事后防错":["44.9"],"其实也是一个从已知走向未知的过程":["44.9"],"确定了引入防错设计的具体环节之后":["44.9"],"一般都是在事前":["44.9"],"事中":["44.9"],"下一步就是使用具体的防错方法了":["44.9"],"最后":["44.9"],"使用具体的防错方法":["44.9"],"常用的防错方法有以下五种":["44.9"],"防错思维就一定有用武之地":["44.10"],"防错思维可以和飞轮思维和迭代思维结合":["44.10"],"前者都是后者的基础":["45.0"],"作为架构师要与以下人建立合作关系":["45.2"],"协作和关系":["45.3"],"确定可信的建议者":["45.4"],"解决方案相关的历史":["45.5"],"有谁用过":["45.5"],"现在的效果如何":["45.5"],"解决方案的已知风险":["45.5"],"所考虑的被选方案":["45.5"],"从情况开始":["45.6"],"每个人都同意":["45.6"],"无可争辩的事实":["45.6"],"躲避组织中的刻薄鬼":["45.8"],"只看到第一层原因就急着下结论":["46.1"],"还是能够熟练地使用根因":["46.1"],"分析":["46.1"],"此时我们就说a是这个问题的根因":["46.2"],"jpg":["46.2","46.3","61.2","62.11","139.4","147.5","284.23"],"在前面的故事里":["46.2"],"我":["46.2","46.3","46.4"],"看到的是自己系统中的服务调用失败":["46.2"],"这其实就是表象d":["46.2"],"而数据库日志打满才是这个问题的根因":["46.2"],"油泵没有安装过滤装器":["46.3"],"那么对策就是检查所有机器的油泵":["46.3"],"为没安装过滤器油泵安装过滤器":["46.3"],"看完这个例子":["46.3"],"你可能会说这不就和前文中的故事里师傅问":["46.3"],"问题的方法是一样的吗":["46.3"],"没错":["46.3"],"虽然大野耐一和":["46.3"],"遇到的问题和所处的领域不尽相同":["46.3"],"但实际面对问题的分析方式却并无区别":["46.3"],"如何用好5":["46.3"],"然而":["46.3","173.51","181.0"],"用好5":["46.3"],"why分析法并不简单":["46.3"],"在分析时需要格外注意下面四点":["46.3"],"第一":["46.3"],"提问时抓住问题的主要矛盾":["46.3"],"遇到的宕机问题其实就是一个线性问题":["46.4"],"这个问题的因果关系非常明确":["46.4"],"以至于如果下次还出现同样的问题":["46.4"],"我可以在不登录服务器的情况下作出正确的判断":["46.4"],"而如果我把问题的排查思路写下来":["46.4"],"那么别人就可以照着我的文章学习排查的过程和解决方案":["46.4"],"事实上":["46.4"],"我们在工作中遇到的绝大多数技术问题":["46.4"],"都属于线性问题":["46.4"],"因为线性问题是稳定的":["46.4"],"所以为了解决这类问题":["46.4"],"我们可以在因果链上一路回溯而不用担心自己走错了路":["46.4"],"这一部非常关键":["46.5"],"我们应该把思维模式从纵向模式切换到横向模式":["46.5"],"横向思考模式":["46.5"],"要求我们脱离问题的具体细节":["46.5"],"而是退一步":["46.5"],"在更广的视角下横向思考":["46.5"],"这个思考要试图回答一个问题":["46.5"],"对组织":["46.6"],"人":["46.6"],"再由果推因":["46.7"],"把对具体性问题的解决推向对一般性问题的解决":["46.7"],"扩大问题的适用范围":["46.7"],"巧记":["47.2"],"物链网输会示用":["47.2"],"典型应用层服务":["47.3"],"文件传输":["47.3"],"使得不同主机之间即使在不同的编码格式上":["47.4"],"也能消息互通":["47.4"],"syn":["47.5"],"功能一":["47.5"],"建立":["47.5"],"功能二":["47.6","47.7","47.9"],"差错控制":["47.6"],"对发生的差错":["47.6"],"如何控制":["47.6"],"流量控制":["47.7","47.8","179.44"],"限制发送方速度":["47.7"],"功能三":["47.7","47.8"],"位错":["47.8"],"接口怎么接":["47.9"],"定义传输模式":["47.9"],"建立连接断开连接都需要先需要进行握手":["48.0"],"该字段为一表示本数据报的数据部分包含紧急信息":["48.1"],"是一个高优先级数据报文":["48.1"],"此时紧急指针有效":["48.1"],"紧急数据一定位于当前数据包数据部分的最前面":["48.1"],"紧急指针标明了紧急数据的尾部":["48.1"],"ack":["48.1","48.10","48.18","49.1","175.12","179.49"],"该字段为一表示确认号字段有效":["48.1"],"接下来就来详细描述下两种握手":["48.2"],"起初":["48.3"],"两端都为":["48.3"],"closed":["48.3","48.11","175.12"],"客户端便进入":["48.4","50.11"],"该应答中也会包含自身的数据通讯初始序号":["48.5","50.12"],"建立连接需要三次握手":["48.6"],"明明两次就可以建立起连接":["48.6"],"因为这是为了防止出现失效的连接请求报文段被服务端接收的情况":["48.6"],"从而产生错误":["48.6"],"可以想象如下场景":["48.6"],"客户端发送了一个连接请求":["48.6"],"在断开连接时两端都需要发送":["48.7"],"则它需要向服务端":["48.8","50.15"],"wait":["48.9","50.16","175.12"],"状态":["48.9","50.16","173.56","179.15","179.53"],"此时表明":["48.9","50.16"],"便进入":["48.10"],"就进入":["48.11","175.12"],"收到确认应答后":["48.11"],"也便进入":["48.11","175.12"],"这时候对端会抛弃该报文并等待":["48.15"],"直到":["48.16","158.2","164.2"],"端发送下一个序号的报文":["48.16"],"发送端拥有一个":["48.17"],"发送窗口":["48.17"],"标志位可以用来告诉发送端这个序号之前的数据已经全部接收到了":["48.18"],"下次请发送这个序号后的数据":["48.18"],"但是累计确认也有一个弊端":["48.18"],"接收方会把当前接收窗口的剩余大小写入应答报文":["48.19"],"发送端收到应答后根据该值和当前网络拥塞情况设置发送窗口的大小":["48.19"],"所以发送窗口的大小是不断变化的":["48.19"],"并启动":["48.20"],"persistent":["48.20"],"避免出现网络负载过大的情况":["48.21"],"连接初始设置拥塞窗口":["48.22"],"congestion":["48.22"],"在传输过程中可能定时器超时的情况":["48.23"],"这时候":["48.23"],"如果发送端收到三个重复的":["48.24"],"将拥塞窗口设为":["48.25"],"进入快恢复阶段":["48.26"],"重发对端需要的包":["48.26"],"的分段的最大序号":["48.27"],"假如我有一个分段数据是":["48.27"],"这十个序号的报文":["48.27"],"其中丢失了序号为":["48.27"],"顺序不对和流量控制问题":["48.28"],"同时也发送一个自己的syn包":["49.1"],"客户端依然要接受":["49.2"],"这个状态还要持续一段时间":["49.2"],"也就是整个close":["49.2"],"wait状态持续的时间":["49.2"],"客户端收到服务器的确认请求后":["49.2"],"客户端就进入fin":["49.2"],"终止等待2":["49.2"],"等待服务器发送连接释放报文":["49.2"],"tcp的三次握手保证了连接的可靠性":["50.0"],"udp是无连接的":["50.0"],"等都属于":["50.1"],"族内的协议":["50.1"],"ip模型是互联网的基础":["50.1"],"它是一系列网络协议的总称":["50.1"],"这些协议可以划分为四层":["50.1"],"分别为链路层":["50.1"],"在第四层":["50.2"],"传输层":["50.2"],"应用层将数据传递给传输层的":["50.4","51.1"],"不止支持一对一的传输方式":["50.5"],"同样支持一对多":["50.5"],"udp对应用层交下来的报文":["50.6"],"因为没有拥塞控制":["50.7","51.2"],"一直会以恒定的速度发送数据":["50.7"],"和目标端口":["50.8"],"整个数据报文的长度":["50.8"],"整个数据报文的检验和":["50.8"],"而不仅仅是文件的一部分":["50.9"],"因为如果数据丢失或乱序":["50.9"],"都不是你希望得到的结果":["50.9"],"如下图所示":["50.10"],"是全双工的":["50.14"],"发送连接释放请求":["50.17"],"然后":["50.17","96.3","133.7"],"该状态会持续":["50.18","175.12"],"2msl":["50.18","175.12"],"最大段生存期":["50.18","175.12"],"指报文段在网络中生存的时间":["50.18","175.12"],"三次握手":["50.20","179.44"],"同时序号也保证了传送到接收端实体的包的按序接收":["50.23"],"然后接收端实体对已成功收到的字节发回一个相应的确认":["50.23"],"一对多":["50.28"],"多对一和多对多交互通信":["50.28"],"只能是一对一通信":["50.28"],"传输方式":["50.28"],"拥有大量客户端":["50.29"],"对数据安全性无特殊要求":["50.29"],"pop3":["50.31"],"office":["50.31"],"version":["50.31","66.3","81.7","119.10"],"time":["50.32","67.3","96.2","99.11","106.41","175.12"],"snmp":["50.33"],"simple":["50.33","60.0","241.6"],"network":["50.33"],"management":["50.33"],"并没有":["50.34"],"协议只是数据报文的搬运工":["51.0"],"不保证有序且不丢失的传递到对端":["51.0"],"只有八字节":["51.3"],"相比":["51.3"],"的至少二十字节要少得多":["51.3"],"多对一的方式":["51.4"],"有很多缺点":["51.5"],"不需要建立连接":["51.6"],"不需要验证数据报文":["51.6"],"和一个目标值":["52.1"],"target":["52.1","95.20","156.19","173.9","174.2","174.23","193.4","245.1","249.0","249.1"],"因为":["52.2","61.13","108.4","156.16","175.10","181.0","205.14","246.5"],"若":["52.4"],"里去查询":["52.5"],"targetnum":["52.5"],"与该数的差值是否已经在前面的数字中出现过了":["52.5"],"若出现过":["52.5"],"那么答案已然显现":["52.5"],"我们就不必再往下走了":["52.5"],"我们以":["52.5"],"nums":["52.5","52.13","52.15"],"len":["52.6","53.10","173.98"],"length":["52.6","53.10","53.11","55.5","57.7","62.15","89.5","89.13","95.36","111.2","131.1","148.2","154.7","173.85","174.4","174.20","174.52","214.1","221.1","230.2","231.3","231.4","231.6","241.3","241.9","245.3","252.5","256.6","294.1"],"遍历数组":["52.6","129.7"],"for":["52.6","55.2","58.4","58.5","67.3","97.50","106.41","111.2","115.0","122.22","127.15","127.54","129.2","132.3","132.4","172.0","173.64","173.85","174.29","174.40","190.2","190.4","206.2","218.8","230.2","231.4","236.4","236.5","242.1","252.3","275.2","283.1","286.14","286.42","295.2"],"let":["52.6","52.12","53.10","55.2","55.5","58.5","61.8","61.9","64.9","64.10","64.11","64.19","89.13","99.10","99.11","99.12","100.2","100.8","100.9","103.6","111.2","127.11","127.15","133.4","156.3","173.43","173.64","174.29","174.33","174.37","174.44","179.15","206.12","221.4","225.4","227.1","230.2","231.4","236.5","241.7","241.9","242.1","245.3","286.72"],"成为一个有序数组":["52.7"],"说明":["52.7","122.6"],"初始化":["52.7","52.12","156.17","178.2"],"nums2":["52.8","52.11"],"每次只对指针所指的元素进行比较":["52.10"],"这样会省掉很多麻烦":["52.11"],"的有效部分和":["52.11"],"并不一定是一样长的":["52.11"],"尾部索引k":["52.12"],"j":["52.12","55.3","55.4","55.5","173.58","174.21","174.22","174.23","174.44","174.60","175.4","179.61"],"k":["52.12","95.46","173.64","179.55","179.56","184.32","295.2"],"个整数的数组":["52.13"],"判断":["52.13"],"因此这道题的第一步是将数组排序":["52.15"],"sort":["52.15","82.1"],"continue":["52.16","131.2","131.3","131.4","131.5","131.6","174.8"],"while":["52.16","53.10","53.11","131.11","148.2","174.12","176.4","206.8","231.3","286.33"],"三数之和小于0":["52.16"],"左指针前进":["52.16"],"求和":["52.18"],"sum":["52.18","288.5"],"pop":["53.3","53.6","53.9","118.4","176.4","241.8"],"res":["53.10","55.1","99.10","103.10","109.7","166.7","166.9","173.57","283.10","286.2","294.1"],"取出当前节点":["53.11"],"使用深度优先遍历":["53.12"],"l":["53.12","103.8","106.34","152.18","174.25","195.7","245.3"],"队列":["54.1"],"散列表":["54.1"],"哈希算法":["54.2"],"左边和右边的数组进行递归":["55.1"],"会得到有序的左数组":["55.1"],"和有序的右数组":["55.1"],"orderleft":["55.1"],"orderright":["55.1"],"存放结果的数组":["55.1"],"mid":["55.2"],"获取第二个元素":["55.3"],"temp":["55.3","127.8"],"indexmin":["55.4"],"arr":["56.4","100.8","173.98","174.37","178.8","221.1","245.3"],"true":["57.2","64.18","68.8","95.20","95.42","95.46","95.49","97.39","100.3","101.3","126.5","131.11","154.4","154.10","154.15","154.17","159.13","162.0","166.8","173.2","173.25","173.41","173.69","179.21","179.51","184.9","195.8","204.2","214.1","221.4","231.2","236.1","243.2","259.2"],"那么就意味着不对称发生了":["57.3"],"意味着这是一个可以":["57.3"],"删掉试试看":["57.3"],"的操作点":["57.3"],"我们可以分别对左指针字符和右指针字符尝试进行":["57.3"],"跳过":["57.3"],"看看区间在":["57.3"],"left":["57.3","64.22","97.35","106.16","106.21","106.31","122.11","174.8"],"尝试判断跳过左指针元素后字符串是否回文":["57.4"],"ispalindrome":["57.4"],"示例":["57.6"],"bad":["57.6"],"dad":["57.6"],"prototype":["57.7","111.2","127.20","131.7","173.1","173.68","179.20","204.1","204.3"],"addword":["57.7"],"word":["57.7","181.0"],"若该字符串对应长度的数组已经存在":["57.7"],"则只做添加":["57.7"],"bfs":["59.1"],"tree":["59.1","102.5","179.37","195.8","254.3","254.5"],"q":["59.1"],"如同行内代码":["60.0"],"不要求必须三个反引号":["60.0"],"只要至少三个并且前后相同就行":["60.0"],"所以当我们想在代码块中使用三个反引号时":["60.0"],"你可以使用四个反引号包裹":["60.0"],"表现为":["60.0"],"不使用反引号":["60.0"],"使用波浪号也是可以的":["60.0"],"但不能混用":["60.0"],"缩进式代码块":["60.0"],"indented":["60.0"],"缩进式代码块由空行隔开的数个":["60.0"],"缩进块":["60.0"],"组成":["60.0","175.10"],"是数个非空行":["60.0"],"每行缩进四个或多个空格":["60.0"],"举例一个缩进块":["60.0"],"block":["60.0","64.14","169.3","169.4","231.2","252.6","254.5","256.4","286.55"],"稿的比例不一样时":["61.0"],"会出现周边留白情况":["61.0"],"当缩放比例过大时候":["61.0"],"字体会有一点点模糊":["61.0"],"就一点点":["61.0"],"事件热区会偏移":["61.0"],"rem":["61.0"],"获得":["61.0"],"的基准值":["61.0","61.17"],"vwh02":["61.2"],"的屏幕分辨率下":["61.3"],"这样一来":["61.3","124.0","173.31"],"以一个宽":["61.3"],"300px":["61.3"],"100vh":["61.5","106.28"],"路径配置":["61.5","61.6"],"只需在":["61.5"],"vue":["61.5","61.6","68.11","95.1","96.14","97.3","97.4","97.33","97.41","97.44","102.1","144.1","144.5","178.0"],"里配置一下":["61.6"],"vw":["61.7"],"bind":["61.8","173.60"],"el":["61.8","169.3","216.3","232.4"],"binding":["61.8","226.1"],"chart":["61.8"],"getinstancebydom":["61.8"],"监听绑定的div大小变化":["61.8"],"更新":["61.8","99.8"],"编写":["61.9","102.0"],"工具函数":["61.9"],"echarts图表字体":["61.9"],"间距自适应":["61.9"],"export":["61.9","70.0","81.2","97.2","97.7","97.13","98.7","109.7","169.4","173.87","236.0","239.2","252.4","256.5","256.6"],"fitchartsize":["61.9"],"size":["61.9","61.18","106.14","106.41","138.22","170.15","228.1"],"defaltewidth":["61.9"],"页面上下留白":["61.11","61.16"],"左右占满并上下居中":["61.11","61.16"],"显示比例保持":["61.11"],"css部分":["61.12"],"除了设计稿的宽高是根据您自己的设计稿决定以外":["61.12"],"其他复制粘贴就完事":["61.12"],"root":["61.12","68.11","195.9"],"transform":["61.14","101.5","106.23","106.46","179.3"],"实现缩放效果的一个大屏自适应组件":["61.14"],"把所有元素的长":["61.17"],"宽":["61.17"],"位置":["61.17","179.38"],"字体大小等原来的":["61.17"],"px":["61.17","95.37","106.27"],"单位全部转换成":["61.17"],"minpixelvalue":["61.18"],"设置要替换的最小像素值":["61.18"],"mediaquery":["61.18"],"boolean":["61.18","112.4","154.8","156.6","156.19","156.21","173.81","173.93","176.5","182.1","207.16","216.2","222.5","223.2","248.1","250.1"],"允许在媒体查询中转换":["61.18"],"配置完成后":["61.18"],"页面内的":["61.18"],"就会被转换成":["61.18"],"了":["61.18","95.25"],"第二点":["61.18"],"动态的计算":["61.18"],"html根元素的font":["61.18"],"细节版":["61.19"],"scale":["61.19","168.7"],"方案参考":["61.19"],"babel":["62.1","62.20","64.20","179.31","193.2"],"表达式":["62.2"],"存放":["62.3"],"expression是表达式":["62.4"],"callexpression类型的ast有一个callee属性":["62.5"],"指向被调用的函数":["62.5"],"super":["62.6","99.8"],"我们这里的console":["62.6"],"log就是访问对象成员log":["62.6"],"参数名等各种声明和引用的名字":["62.7"],"表示字符串的值":["62.8"],"而loc属性是一个对象":["62.9"],"有line和column属性分别记录开始和结束的行列号":["62.9"],"leadingcomments":["62.9"],"innercomments":["62.9"],"返回一个对象":["62.10"],"对象存在一个visitor属性":["62.10"],"里面可以编写我们具体需要修改ast的逻辑":["62.10"],"opts":["62.12","64.19"],"获取callee的path":["62.12"],"node":["62.13","64.8","64.21","64.25","64.26","65.25","74.9","78.0","83.1","85.2","85.3","87.12","87.14","95.20","154.15","174.37","181.0","193.4","227.1","236.6"],"production":["62.13","62.14","181.0"],"exclude":["62.14"],"isproduction":["62.14"],"判断是否有后缀注释":["62.15"],"hastrailingcomments":["62.15"],"trailingcomments":["62.15"],"判断是否有关键字匹配":["62.15"],"默认no":["62.15"],"reserve":["62.15"],"且如果commentwords和默认值是相斥的":["62.15"],"isreservecomment":["62.15"],"测试4":["62.16"],"新建":["62.16","81.1","195.9"],"babelrc":["62.16"],"comment":["62.17","214.0","222.3","228.2","231.1"],"currentcommentline":["62.17"],"traverse":["62.18","64.12","179.31"],"ts":["62.18","81.1","81.6","95.45","95.46","104.0","183.5","236.0","239.2","248.1","249.0","250.2","251.0","252.4","256.6"],"ignore":["62.18"],"dist":["62.21","67.10","68.12","96.5","154.10","154.20","192.1","192.2","195.9"],"主语":["63.0"],"你":["63.0"],"是":["63.0","73.0","153.10","173.69"],"设计篇和原理篇":["64.0"],"不喜欢看字的就看图":["64.2"],"image":["64.2","64.4","64.13","113.3","169.2","170.4","173.70","193.7","205.1","205.11","263.4"],"接下来":["64.2"],"我们先看一个小demo":["64.2"],"将":["64.2","72.5","97.61","154.10"],"lisp":["64.2"],"https":["64.2","87.4","97.61","100.3","138.33","158.4","164.4","181.0"],"并读取其内容":["64.4"],"由此引出":["64.4"],"traversal":["64.4"],"遍历":["64.4","151.13"],"visitors":["64.4","282.2"],"访问器":["64.4"],"顾名思义这个过程就是":["64.4"],"遍历这个ast":["64.4"],"的所有节点":["64.4"],"这个过程使用":["64.4"],"深度优先原则":["64.4"],"大概执行顺序如下":["64.4"],"进入program":["64.4"],"最顶层开始":["64.4"],"不断的访问transformation生成的ast":["64.5"],"抽象语法树":["64.5"],"接下来检测数字":["64.7"],"这里解释下":["64.7"],"如果发现是数字我们如":["64.7"],"add":["64.7","69.9","87.43","159.9"],"我们是不希望被解析为2":["64.7"],"3这样的":["64.7"],"我们要遇到数字后继续向后匹配直到匹配失败":["64.7"],"这样我们就能截取到连续的数字了":["64.7"],"numbers":["64.7"],"类型的token":["64.8"],"callexpression":["64.8"],"params":["64.8","64.25","97.13"],"获取name后我们需要继续获取接下来调用语句中的参数":["64.8"],"直到我们遇到了":["64.8"],"这里会存在嵌套的现象如下":["64.8"],"subtract":["64.8"],"child":["64.9","72.5","178.1"],"traversenode":["64.9"],"判断访问器中是否有合适处理该节点的函数":["64.9"],"如果有就执行enter函数":["64.9"],"具体代码实现":["64.10"],"transformer":["64.10","64.11"],"将要被返回的新的ast":["64.10"],"newast":["64.10","64.11"],"这里相当于将在旧的ast上创建一个":["64.10"],"default":["64.11","81.2","95.16","97.2","98.7","169.4","177.10","181.0","195.9","204.4","206.2","206.15","217.7","241.6","243.1","252.3","252.6","256.4"],"throw":["64.11"],"typeerror":["64.11"],"最终按照上面的步骤实现":["64.11"],"compiler":["64.11","219.10","219.12","241.1","241.10"],"完成这个微型编译器":["64.11"],"注意这个过程的顺序":["64.11"],"tokens":["64.11"],"tokenizer":["64.11"],"生成tokens":["64.11"],"ast":["64.11","193.1","195.8","238.0","254.13"],"生成ast":["64.11"],"只需要将该节点的":["64.12"],"字段修改即可":["64.12"],"该例子比较简单":["64.12"],"直接上代码":["64.12","64.15"],"require":["64.12","64.17","125.8","127.9","140.3","140.4","154.11","154.12","177.8","195.9"],"接下来我们就来照着写一个类似的":["64.13"],"babel插件":["64.13"],"所谓的babel插件其实是一个对象":["64.13"],"对象里面有一个visitor属性":["64.13"],"它也是一个对象":["64.13"],"key为类型":["64.13"],"value为函数":["64.13"],"接受path作为参数":["64.13"],"也就是这样":["64.13"],"即代码块创建新的作用域会形成一个树状结构":["64.14"],"它与别的作用域之间相互隔离不受影响":["64.14"],"作用域":["64.14"],"同样如此":["64.14"],"我们得确保在改变代码的各个部分时不会破坏其他的部分":["64.14"],"的大致结构":["64.14"],"parentblock":["64.14"],"parentscope":["64.14"],"bindings":["64.14","236.5"],"这一步比较简单":["64.14"],"要想在作用域中加一个":["64.14"],"this变量":["64.14"],"其实就是对ast树中的":["64.14"],"新增一个节点即可":["64.14"],"还是先观察console部分的ast":["64.15"],"发现我们想要的方法名可以在节点的":["64.15"],"property":["64.15","184.10"],"属性中直接取到":["64.15"],"那就好办了呀":["64.15"],"stop":["64.16","138.12","258.10"],"找到了就跳出循环":["64.16"],"插入一个import语句":["64.16"],"先去看看要引入语句的ast":["64.16"],"然后生成一个对应的节点就好":["64.16"],"scope":["64.16","64.22","179.16","193.4","228.3","255.0"],"generateuid":["64.16"],"防止冲突":["64.16"],"unshift":["64.16","204.2"],"importdefaultspecifier":["64.16"],"identifier":["64.16"],"stringliteral":["64.16"],"这里要说明一下的是":["64.16"],"为了防止变量名之间的冲突":["64.16"],"我们通过使用":["64.16"],"生成一个新的变量名":["64.16"],"比如源代码中已经有别的命名叫":["64.16"],"思路":["64.17"],"遍历ats":["64.17"],"然后找出console节点":["64.17"],"如果有console就报错":["64.17"],"core":["64.17","64.19","99.7","200.15","214.1","254.19"],"babel核心模块":["64.17","64.19"],"pathlib":["64.17"],"sourcecode":["64.17"],"referenced":["64.18"],"references":["64.18"],"referencepaths":["64.18"],"constant":["64.18","92.0","228.1","241.6"],"constantviolations":["64.18"],"有了这些信息我们就可以查找一个变量的所有引用":["64.18"],"并且知道变量的类型是什么":["64.18"],"参数":["64.18","252.2"],"定义等等":["64.18"],"寻找到它所属的作用域":["64.18"],"或者得到它的标识符的拷贝":["64.18"],"甚至可以知道它是否是一个常量":["64.18"],"并查看是哪个路径让它不是一个常量":["64.18"],"知道了":["64.18"],"是否为常量在很多情况下都会很有用":["64.18"],"最大的用处就是代码压缩":["64.18"],"回到实战中":["64.18"],"可以通过":["64.18","102.1","172.0","173.77"],"scopable":["64.18"],"第三步":["64.19","209.9"],"进行批量替换旧节点":["64.19"],"在插件中拿到我们在插件调用时传递的参数libraryname":["64.19"],"types":["64.19","69.10","89.13","104.0","218.4","221.4","232.2"],"用来生成或者判断节点的ast语法树的节点":["64.19"],"visitor":["64.19"],"importdeclaration":["64.19"],"state":["64.19","99.8","166.7","171.0","176.17","178.2","178.3","190.2","190.4","209.14","241.9","286.37"],"librarydirectory":["64.19"],"lib":["64.19","81.2","117.2"],"获取选项中的支持的库的名称":["64.19"],"获取import节点":["64.19"],"loader结合":["64.20"],"fork":["64.20","94.10"],"idtype":["64.21"],"id":["64.21","73.0","103.11","115.0","118.2","137.0","166.6","172.0","206.15","228.3","230.2","239.3"],"typeannotation":["64.21"],"variable":["64.22"],"getbinding":["64.22"],"的类型数组":["64.23"],"第二步":["64.23","126.4"],"获取函数调用时传递的泛型类型数组":["64.23"],"binaryexpression":["64.24"],"不过若能把它们写进一个访问者的话会更好":["64.24"],"这样只会运行一次":["64.24"],"否则你会毫无必要的对同一棵树遍历多次":["64.24"],"如果你需要嵌套的访问者的内部状态":["64.25"],"就像这样":["64.25"],"examplestate":["64.25"],"此时便需要一种非人为手动的方法来帮助我们自动完成这些重复的工作":["65.1"],"这个自动完成工作的理念被称为ci":["65.1"],"cd":["65.1","65.19","67.17","114.8","143.4","143.5"],"告诉了gitlab":["65.4"],"直接使用":["65.6"],"install":["65.9","74.2","77.3","87.2","87.24","96.2","138.3","142.11","152.20"],"shared":["65.10"],"etc":["65.10","68.3","68.6"],"register":["65.11","206.8"],"non":["65.11","252.5"],"interactive":["65.11"],"executor":["65.11"],"commit":["65.12","65.28","69.8","69.9","71.9","72.2","97.59","118.2"],"m":["65.12","119.10"],"让我们先来熟悉下yaml的常见写法":["65.13"],"以及对比下它与json有什么不同":["65.13"],"转化为yaml为":["65.15","65.16"],"我是注释":["65.16"],"yml文件可以分为如下几个环节":["65.17"],"完成":["65.18"],"stage":["65.18","68.10"],"retry":["65.18","217.0"],"yml中定义的变量":["65.21"],"如下示例":["65.21"],"里面装了nvm管理器":["65.22"],"third":["65.23"],"fourth":["65.23"],"fifth":["65.23"],"job":["65.26","65.33"],"web":["65.27","122.7","193.4","203.2","205.8"],"手动在gitlab":["65.27"],"runner":["65.27","67.2","68.0","68.5"],"pipeline里面点击run":["65.27"],"ci":["65.28","67.9","67.17"],"always":["65.30","214.3"],"无论之前的stage的流水线的任务状态如何":["65.30"],"当前的任务都会触发":["65.30"],"never":["65.30","212.1","219.6"],"不运行当前任务":["65.30"],"manual":["65.30"],"流水线手动触发":["65.30"],"这个是因为公司的gitlab版本较旧":["65.32"],"gitlab":["65.32","67.1","68.2","68.4","97.60"],"include":["65.33","256.1"],"自定义任务3":["65.35"],"job3":["65.35"],"run":["65.36","67.7","77.5","79.0","83.4","84.4","255.0","258.5"],"job2":["65.36"],"docker":["65.36","114.9","114.15","114.26"],"t":["65.36","107.4","156.5","216.2","286.69"],"reactimages":["65.36"],"ps":["65.36","68.13"],"aq":["65.36","68.13"],"filter":["65.36","68.13","89.5","106.23","130.12","154.8","159.2","170.2","204.2","216.2","285.11","285.12"],"ui交互体验很好":["66.1"],"使用":["66.1","68.1","87.35","96.1","102.2","107.2","169.4","175.4","200.1","254.4","275.2","276.0"],"从存储库货生产环境中进行构建和自动化测试":["66.2"],"then":["66.3","68.13","99.10","127.12","132.1","132.3","154.18","173.38","173.57","173.65","176.12","206.1","217.2","294.1"],"some":["66.3","86.5","88.2","241.1","241.10"],"project":["66.3","195.7"],"files":["66.3"],"v":["66.3","97.35","114.16","130.10","142.10","156.18","167.4","179.55","179.56","190.2","190.4","283.2"],"rake":["66.3"],"第二阶段":["66.4"],"jar":["66.4"],"持续集成":["67.0"],"continuous":["67.0"],"上":["67.1"],"runner运行环境目前为docker":["67.2"],"保证项目之间的开发版本不会有冲突":["67.2"],"打包过后的前端包文件":["67.2"],"通过rsync同步到静态资源文件中":["67.2"],"local":["67.3","116.2","219.3"],"request":["67.3","98.12","166.5","175.8","204.1","254.7"],"status":["67.3","103.9","138.21"],"bytes":["67.3"],"sent":["67.3"],"referer":["67.3"],"agent":["67.3","175.10"],"x":["67.3","97.35","104.0","125.3","127.27","179.32","184.16","195.9","204.4","207.12","239.3","241.8","241.10","285.12"],"forwarded":["67.3"],"sendfile":["67.3"],"on":["67.3","103.15","111.3","159.5","206.2","216.4","283.7"],"nopush":["67.3"],"keepalive":["67.3","216.5","218.8"],"timeout":["67.3"],"gzip":["67.3","100.8"],"disable":["67.3","89.5","252.6","283.3"],"msie6":["67.3"],"用在":["67.5"],"rsa命令":["67.6"],"会生成id":["67.6"],"秘钥":["67.6"],"创建启动容器":["67.7"],"xxx":["67.8","87.20","87.24","179.25"],"输入您获得的令牌来注册token":["67.8"],"description":["67.8","68.8"],"hostname":["67.8","96.5","175.9"],"my":["67.8","119.10","127.4","154.19"],"expire":["67.10"],"week":["67.10"],"项目打包后的文件夹":["67.10"],"dev环境发布":["67.10"],"deploy":["67.10"],"alpine":["67.10"],"echo":["67.10"],"服务器上nginx指向的静态资源目录":["67.11"],"具体看项目需求":["67.12"],"上面的":["67.12"],"触发钩子执行自动化构建发布":["67.13"],"cd任务":["67.14"],"ls":["68.1","142.24"],"命令查看一下":["68.1"],"已经存在的话":["68.1"],"命令执行这个脚本":["68.1"],"logs":["68.3","108.1","195.9"],"it":["68.4","106.22","107.4","205.6","206.9","214.3","216.3","218.5","219.6","236.4","243.1","252.6"],"sh":["68.4"],"此时需要注册":["68.7"],"首先在":["68.7"],"token":["68.8","95.40","95.42","166.0","197.1"],"xxxxxx":["68.8"],"tag":["68.8","114.17","195.8","239.4"],"list":["68.8","153.12","174.37","206.5","286.55"],"untagged":["68.8"],"yml":["68.9"],"tags":["68.10"],"npm":["68.10","76.0","80.3","84.4","85.1","87.21","87.28","94.3","96.1","96.2","97.47","143.10","279.9"],"配置":["68.11","97.23"],"路由":["68.11"],"history模式":["68.11"],"nginx":["68.12","126.5","138.8"],"copy":["68.12","195.9","249.0"],"app":["68.13","95.22","96.4","97.5","177.0","195.9","200.6","205.4","276.0"],"container":["68.13","95.22","113.3","190.6"],"rm":["68.13","74.1"],"f":["68.13","125.2","125.7","145.6","168.26","173.68","179.23","284.47"],"fi":["68.13"],"lint":["69.0","84.4","97.45"],"解决":["69.3","156.2","178.3"],"hooks":["69.4","95.9","115.0","216.4"],"pre":["69.5","69.9"],"msg":["69.6","97.59","107.3"],"commitlint":["69.8"],"执行":["69.9","104.0","114.17","177.6","201.8","247.4"],"customizable":["69.10"],"变更":["69.10"],"这里采用自己定义的规范":["69.10"],"将会覆盖上面那个":["69.10"],"所以上面那个可以不用安装":["69.10"],"extends":["69.10","89.6","89.13","97.53","98.13","176.6","184.28","286.37"],"增加":["69.10"],"新增":["69.10","195.9"],"新的内容":["69.10"],"修复":["69.10","195.9"],"修复一个bug":["69.10"],"output":["69.12","106.41","154.10"],"gettin":["69.13"],"提交代码的测试运行":["69.13"],"的文件":["70.0"],"所以这种方法不行":["70.0"],"解决方案":["70.0"],"v8":["70.0","173.52"],"环境变量来全局设置":["70.0"],"来增加内存限制":["70.0"],"通常允许引用方开发者修改子模块代码":["71.1"],"不同的模块由不同团队维护":["71.3"],"放在同一个":["71.3"],"仓库有诸多难处":["71.3"],"例如多个团队的":["71.3"],"mr":["71.3"],"submodule":["71.4","71.13","71.22"],"即git":["71.5","71.25"],"clone时后面那串东西":["71.5","71.25"],"可以把仓库b当作仓库a的submodule":["71.5"],"仓库的完整代码":["71.6"],"如果你希望换个名字":["71.6"],"或者换个路径":["71.6"],"仓库":["71.7","71.12","87.1","113.3"],"其实不知道自己变成了":["71.7"],"它并不知道自己有多少个爸爸":["71.12"],"是个":["71.13"],"我们可以进入b文件夹cd":["71.13"],"所以":["71.14","102.0","106.16","106.39","115.0","173.37"],"你cd":["71.14"],"仓库就行":["71.16"],"你可以切换分支":["71.16"],"提交代码":["71.16"],"拉取更新等":["71.16"],"这个方法会自动拉取submodule的主分支":["71.17"],"通常叫master或main":["71.17"],"可能并不是拉":["71.19"],"master":["71.19"],"的仓库":["71.20"],"执行git":["71.21","71.23"],"init":["71.21","94.4","95.45","96.1","195.4"],"update":["71.22","214.2","216.4"],"合并第1":["71.24"],"另一仓库地址":["71.25"],"提供了":["72.0"],"linux":["72.0","74.10","113.4","177.14"],"windows":["72.0","135.0"],"macos":["72.0","115.0"],"虚拟机运行你的工作流":["72.0"],"当然你也可以自定义运行环境":["72.0"],"或者定义一个时间表":["72.1"],"一个仓库可以创建多个工作流":["72.1"],"每一个都执行不同的步骤":["72.1"],"或者推送一个":["72.2"],"步骤会顺序执行":["72.3"],"并彼此独立":["72.3"],"比如一个":["72.4"],"可以实现从":["72.4"],"工作流的所有任务分组在一起":["72.5"],"定义了一个名为":["72.5"],"的任务":["72.5"],"子键":["72.5"],"key":["72.5","113.7","129.2","129.5","138.31","179.55","190.2","190.4","197.4","216.2","216.3","227.1","236.4","242.1","249.1"],"会定义该任务的属性":["72.5"],"配置任务运行在最新的":["72.5"],"任务下的所有步骤分为一组":["72.5"],"嵌套的每一个条目都是一个独立的":["72.5"],"shell":["72.5","114.8"],"关键字指定了这个步骤运行":["72.5"],"动作的":["72.5"],"大版本":["72.5"],"这是一个可以检出仓库代码到运行器的动作":["72.5"],"它允许你运行脚本或者其他动作侵入你的代码":["72.5"],"其中有四个必填项":["73.0"],"表示需要被同步的源端账户名":["73.0"],"即我们":["73.0"],"的账户名":["73.0"],"因为我的":["73.0"],"所以这里我应该改成":["73.0"],"表示需要同步到的目的端账户名":["73.0"],"也是":["73.0"],"表示用于在目的端上传代码的私钥":["73.0"],"然后将其保存在":["73.0"],"中":["73.0","106.22","127.12","171.0","177.2","181.0","195.9","235.3","265.3"],"具体的操作步骤如下":["73.0"],"获取私钥":["73.0"],"cat":["73.0"],"ssh":["73.0"],"rsa":["73.0"],"复制私钥内容":["73.0"],"然后在要同步的":["73.0"],"仓库中":["73.0"],"选择":["73.0","195.7"],"setting":["73.0","214.3","236.4"],"repository":["73.0","86.1","113.3"],"secret":["73.0"],"填入":["73.0"],"内容":["73.0","138.40"],"命名为":["73.0"],"为复制的内容":["73.0"],"然后点击":["73.0"],"即可":["73.0"],"像下面这样":["74.0"],"json":["74.0","86.3","87.8","87.13","87.22","87.36","87.40","87.42","99.9","100.8","103.12","109.1","112.3","156.14","179.19","195.9"],"hello":["74.0","154.18","157.0","179.29","205.4"],"scripts":["74.0","81.3","97.52","102.5"],"bash":["74.0","77.1","152.30"],"rf":["74.1","76.3"],"的功能":["74.1","178.8"],"cpr":["74.1"],"serve":["74.3"],"port":["74.3","74.6","96.5","114.29","126.4","133.4"],"open":["74.6","195.3","231.2"],"opn":["74.6"],"localhost":["74.6","96.5","126.3","126.7"],"比如我们在运行测试时":["74.7"],"需要加上":["74.7","119.4"],"env":["74.9","83.1","92.0","154.8","154.15","181.0"],"等工具本身都是跨平台兼容的":["74.10"],"还是强烈建议有能力的同学能使用":["74.10"],"做开发":["74.10"],"在某些时候可能并不是我们想要的":["75.2"],"因为我们真正需要的是":["75.2"],"的额外好处是":["75.3"],"如果我们在任何子命令中启动了长时间运行的进程":["75.3"],"比如启用了":["75.3"],"用如下命令将":["75.4"],"此外":["76.1","123.1","147.2","163.0"],"green":["76.3"],"remove":["76.3","179.56"],"old":["76.3"],"coverage":["76.3"],"reports":["76.3"],"nyc":["76.3"],"重度命令行用户肯定会好奇":["77.0"],"能不能实现类似":["77.0"],"将其集成到":["77.1"],"有人已经帮我们解决了这个痛点":["77.2"],"还写成了":["77.2"],"zsh":["77.2"],"插件":["77.2","96.14"],"时候根据":["77.4"],"文件":["78.0","81.1","99.7","99.23","112.3","142.26","195.9","204.2"],"modules":["78.0","87.12","95.10","140.0","144.1","179.59","228.0"],"不存在或为空目录":["78.0"],"它会严格按照package":["78.1"],"lock":["78.1"],"test":["79.0","81.5","86.1","97.47","154.5","154.10","154.17","183.5","286.6","286.34"],"的时候":["79.0","111.4","138.29","173.5","173.9","206.11"],"分":["79.0"],"会在项目中查找是否有":["80.1"],"文件和":["80.2"],"中使用的依赖版本是否一致":["80.2"],"远程仓库中的包下载至本地":["80.3"],"然后会进行包的完整性校验":["80.3"],"意味着安装的时候会安装":["80.4"],"这样在我们后续有同样需求的时候就可以直接下载下来用了":["81.0"],"是不是灰常的的灵性":["81.0"],"不知道怎么发包的小伙伴可以跟着我从0到1的发布一个包":["81.0"],"所有样式都统一从这里导出":["81.1"],"src":["81.1","95.21","96.6","97.41","99.7","146.6","147.0","154.10","154.12","179.51","206.10"],"目录下新建":["81.1"],"components":["81.1","87.6","89.6","96.6","156.1","219.3","235.4"],"目录用于编写组件":["81.1"],"所有组件都统一从这里导出":["81.1"],"跟目录下新建":["81.1"],"类型文件":["81.1"],"改造":["81.1","81.6"],"resolve":["81.2","97.2","97.17","154.10","154.18","154.20","173.84","218.8","228.2","283.5"],"plugins":["81.2","95.29","96.3","154.8","154.20","191.3","281.3"],"dev":["81.3","94.5","102.5","195.7","223.2","231.6","236.2","241.1","241.10","249.1"],"vite":["81.3"],"tsc":["81.3"],"preview":["81.3"],"dependencies":["81.3"],"react":["81.3","81.6","87.5","95.49","156.5","156.6","156.8","156.9","159.2","159.5","159.9","205.10","205.11","206.10"],"登录完成后我们执行":["81.4"],"publish":["81.4"],"命令进行发布":["81.4"],"这里发包可能会出现":["81.4"],"xbutton":["81.5"],"xz":["81.5"],"import":["81.6","96.10","96.14","97.2","97.4","97.17","102.3","154.19","156.1","156.6","159.2","159.5","159.9","205.11","214.0"],"defineconfig":["81.6","97.2"],"vitejs":["81.6","96.14","97.2"],"patch":["81.7","216.1","216.5","232.3"],"还提供了":["82.0"],"之外的更多的变量":["82.0"],"比如当前正在执行的命令":["82.0"],"包的名称和版本号":["82.0"],"package":["82.1","86.3","87.42","142.3","142.4","142.7","142.8","142.14","142.15","142.17","142.18","142.20"],"拿到部分排序后的预定义环境变量":["82.1"],"cross":["83.1"],"watch":["83.2","154.3"],"模式":["83.2","181.0"],"all":["83.4","84.4","97.26","121.5","206.2","220.2"],"parallel":["83.4","84.4"],"参数是让":["83.5"],"onchange":["83.5","207.2","207.5"],"在启动时就运行一次":["83.5"],"命令比较短的时候复制粘贴的方法简单粗暴有效":["84.1"],"但是当":["84.1"],"命令变的很长之后":["84.1"],"难免后续会有人改了":["84.1"],"按如下方式添加":["84.3"],"运行所有代码检查和单元测试":["84.3"],"出现问题时你需要有能力去调试它":["84.5"],"命令执行的结果":["84.6"],"来控制":["84.7"],"这个日志级别的输出实例如下":["84.7"],"或者更简单的":["84.8"],"私服库":["85.0"],"address":["85.6"],"registry":["85.7"],"command":["86.1","195.4"],"keywords":["86.1"],"license":["86.1"],"mit":["86.1","87.9"],"上面的例子指定了描述":["86.1"],"和关键字":["86.1"],"两个字段":["86.1"],"基本问题问完之后":["86.1"],"会把":["86.1"],"wangshijun2010":["86.2"],"gmail":["86.2"],"基本步骤如下":["86.3"],"注意":["86.3","122.15","122.17","133.6","156.2"],"这是简化的流程":["86.3"],"从":["86.3","174.25"],"eslint":["86.4","87.43","89.5","97.41","97.44","283.3"],"添加为":["86.6"],"your":["86.7","116.3","127.28","282.2"],"回车后根目录下就有了":["86.7"],"eslintrc":["86.7"],"配置文件":["86.7","97.61","113.6"],"字段中新增命令":["86.8"],"命令":["86.9","97.41"],"里面有许许多多的配置":["87.0"],"与项目息息相关":["87.0"],"minor":["87.3"],"在引入了新功能":["87.3"],"但未产生破坏性变更":["87.3"],"依然向下兼容时会更新此版本号":["87.3"],"github":["87.4","104.0","270.0"],"component":["87.6","96.3","99.8","196.10","214.3","228.1","228.2","232.4","236.1","252.5","286.37"],"项目官网或文档首页":["87.7"],"页面的链接":["87.8"],"bsd":["87.9"],"minghhui":["87.10"],"忽略":["87.12"],"lockfile":["87.12"],"等文件":["87.12"],"json文件中":["87.13"],"字段为":["87.13"],"环境中都可以使用":["87.14"],"如果不设置":["87.14"],"端使用":["87.15"],"不允许在":["87.15"],"时会从不同的入口引入文件":["87.17"],"也支持使用":["87.17"],"browser":["87.17","227.1","231.6"],"字段定义":["87.17"],"环境中的入口":["87.17"],"数组里可以是文件夹名称或者通配符":["87.18"],"workspace":["87.18"],"prebuild":["87.20"],"执行之前的钩子":["87.20"],"postbuild":["87.20"],"在执行脚本时":["87.21"],"我们可以通过":["87.21"],"下":["87.25"],"表示":["87.25","241.4"],"如果你使用我":["87.25"],"那么你也需要安装":["87.25"],"并且至少是":["87.25"],"打印的信息进行着色来增强和区分提示":["87.26"],"但它并不是必需的":["87.26"],"所以可以将其加入到":["87.26"],"并且在运行时处理引入失败的逻辑":["87.26"],"colors":["87.27"],"pack":["87.28"],"打包生成":["87.28"],"tgz":["87.28"],"压缩包中":["87.28"],"将出现":["87.28"],"进行包的替换":["87.29"],"可以将":["87.31"],"taobao":["87.32"],"镜像源":["87.32"],"但发布时希望在公网发布":["87.32"],"版本或操作系统兼容性之类":["87.33"],"pnpm":["87.34","95.43"],"的类型定义的入口文件":["87.38"],"通过如下的配置":["87.40"],"当然你也可以使用":["87.41"],"browserslistrc":["87.41"],"less":["87.42","89.6","95.25","97.1","97.14","97.15","154.5","154.17","195.7"],"tsx":["87.43"],"fix":["87.43","91.0","97.41","97.44"],"的version":["88.1"],"dish":["88.2"],"message":["88.2","97.13","127.28","133.2","133.3","133.4","166.3","175.8"],"would":["88.2"],"you":["88.2","217.7","252.5"],"like":["88.2","206.1"],"cocktail":["88.2"],"select":["88.2","90.0","172.0"],"which":["88.2","148.0","148.3","215.2","228.1","232.4"],"part":["88.2"],"do":["88.2","205.17"],"want":["88.2","206.14"],"bump":["88.2"],"choices":["88.2"],"title":["88.2","150.10","168.7","282.2"],"权限纬度":["89.1"],"角色纬度":["89.1"],"大部分的情况为":["89.1"],"进行处理":["89.2","103.17"],"菜单权限":["89.4"],"菜单权限控制需要了解两个概念":["89.4"],"routerautarray":["89.5"],"没有path的情况下不需要走逻辑检查":["89.5"],"为":["89.5","243.12","256.1","259.2"],"不需要走逻辑检查":["89.5"],"为true的情况下不需要走逻辑检查":["89.5"],"indexof":["89.5","204.3","218.5","286.15"],"isneeddelete":["89.5"],"后台接口返回子节点的情况":["89.5"],"父节点需要溯源处理":["89.5"],"next":["89.5","96.2","97.10","110.3","111.1","196.14","206.4","206.5","206.12","283.3","286.49"],"line":["89.5","97.19","106.44","172.0","227.1","283.3","286.55"],"param":["89.5","97.13","109.6","283.7"],"reassign":["89.5"],"isneedsave":["89.5"],"link":["89.6","146.1"],"pageheader":["89.6"],"connect":["89.6","89.13","133.4","175.4"],"dva":["89.6","89.13"],"menucontext":["89.6"],"layouts":["89.6"],"spin":["89.6"],"antd":["89.6","156.1"],"gridcontent":["89.6"],"styles":["89.6"],"index":["89.6","94.8","95.45","95.46","96.6","97.35","129.2","153.8","154.13","170.15","175.10","190.2","204.3","241.3","286.37","286.38"],"class":["89.6","89.13","95.31","95.39","97.39","98.7","98.13","99.13","106.21","178.1","179.5","179.39","250.1","286.37"],"pageheaderwrapper":["89.6"],"componentdidmount":["89.6","178.6","286.37"],"dispatch":["89.6","89.13","178.7"],"props":["89.6","89.13","99.8","156.4","173.85","209.11","216.6","218.8","226.1","229.0","239.4","241.1","241.10"],"发送请求获取当前页面的权限code":["89.6"],"componentwillunmount":["89.6","178.6"],"resetauthorityforpage":["89.6"],"render":["89.6","95.22","209.6","217.3","218.11","236.6","252.5"],"children":["89.6","222.6","241.1","241.8","286.30","286.31"],"contentwidth":["89.6"],"wrapperclassname":["89.6"],"top":["89.6","90.0","97.35","169.4","175.5"],"loading":["89.6","109.6"],"然后显示是否可以批量操作":["89.7"],"但不能":["89.8"],"则前端需要控制到每一个商品后面的按钮的可用状态":["89.8"],"比如用户a对于某一条业务数据":["89.8"],"所以前端可以不用关于这个属性的每个枚举值代表的是什么含义":["89.9"],"只需根据接口的返回值赋值就好":["89.9"],"用兴趣的同学也可以参考一下acttype取值如下":["89.9"],"代表这个用户对于这条数据有":["89.10"],"我们可以分解为":["89.11"],"proptypes":["89.13"],"prop":["89.13","179.56","221.3"],"authorizedbutton":["89.13"],"static":["89.13","99.8","108.2","154.10","195.9","222.3","228.2"],"contexttypes":["89.13"],"ismobile":["89.13"],"bool":["89.13","178.6"],"componentwillmount":["89.13"],"extendcode":["89.13"],"扩展表格中的code还没有出现的情况":["89.13"],"codearray":["89.13"],"bottom":["90.0","92.0","97.35","106.31","170.15"],"family":["90.0","275.2"],"simsun":["90.0"],"宋体":["90.0"],"浮动":["91.0"],"主要针对pc端了":["91.0"],"float":["91.0","97.35","112.4"],"side":["91.0"],"清除浮动":["91.0"],"其实很多时候":["91.0"],"clear":["91.0","97.35"],"fix也被提取为单类使用":["91.0"],"pro":["92.0","136.2","136.4"],"max适配":["92.0"],"iphoneadaptive":["92.0"],"p":["92.0","106.22","110.2","129.6","190.6","241.1","241.10"],"n":["92.0","195.4","214.2","228.3","286.63"],"可以通过增加padding":["92.0"],"bottom来适配":["92.0"],"padding":["92.0","106.26","106.41","106.50","156.7","156.24","172.0","179.1"],"calc":["92.0"],"safe":["92.0"],"area":["92.0"],"inset":["92.0"],"兼容":["92.0"],"ios":["92.0","177.3"],"diccode1":["93.1"],"入库详情页面":["93.2"],"红色框字段":["93.2"],"querystring":["93.3"],"eq还是qp":["93.3"],"trade表会关联存储一个用户code":["93.4"],"通过关联user表code可以查询到用户名称":["93.4"],"在前端业务页面上面需要显示用户名称":["93.4"],"对于后端返回的错误信息前端如何处理":["93.7"],"数据权限":["93.8"],"那么我们今天也来尝试一下":["94.0"],"vuejs":["94.1"],"感兴趣的小伙伴可以直接":["94.10"],"中设置":["95.4"],"限制只能使用":["95.5"],"tailwindcss":["95.8","95.29"],"vunguyentuan":["95.8"],"prettier":["95.12","97.23","97.31","97.40"],"tabwidth":["95.13"],"endofline":["95.13"],"auto":["95.13"],"upper":["95.16"],"uppercase":["95.16"],"camel":["95.16","221.3"],"camelcase":["95.16"],"kebab":["95.16","221.3"],"pascal":["95.16"],"我们尽量选择自动添加":["95.17"],"我个人喜欢使用":["95.18"],"compileroptions":["95.20","184.28","195.8","219.10"],"baseurl":["95.20","98.7"],"esnext":["95.20"],"moduleresolution":["95.20"],"allowjs":["95.20"],"noemit":["95.20","102.5"],"dirname":["95.21","154.10","154.20"],"pagecontext":["95.22"],"getelementbyid":["95.22","176.2"],"ishydration":["95.22"],"首次渲染":["95.22"],"useglobalcontext":["95.23"],"globalcontext":["95.23"],"业务层面":["95.23"],"example":["95.23","134.4"],"create":["95.23","96.1","206.5","219.3","219.10"],"interface":["95.23","148.4","183.5","184.13","185.6"],"imodalstate":["95.23"],"antd5":["95.25"],"tailwindcss方案":["95.25"],"antd5采用cssinjs方案":["95.25"],"不再依赖less":["95.25"],"所以可以把以前关于less的配置都移除":["95.25"],"我们不需要使用预处理语言":["95.25"],"scss":["95.25"],"用css配合postcss插件即可":["95.25"],"之所以选择tailwind":["95.25"],"tailwind":["95.26"],"2xl":["95.28"],"1535px":["95.28"],"media":["95.28","104.0","106.3","154.17"],"width":["95.28","106.21","106.26","148.0","168.3","169.3","172.0","178.4","286.47"],"minko":["95.32"],"fe":["95.32"],"postcss":["95.32","154.7","154.8","195.7"],"pxtorem":["95.32"],"viewportwidth":["95.33"],"convertunitonend":["95.33"],"sourceunit":["95.33"],"此时我们可以这样做":["95.34"],"16px":["95.36"],"sm":["95.36"],"转成":["95.37"],"color":["95.38","106.24","106.36","156.11","191.2"],"getvarstoken":["95.40","95.42"],"cssvars":["95.40"],"varslist":["95.40"],"w":["95.40","284.68","284.75","295.9"],"raw":["95.42","102.2","219.6","251.2"],"eager":["95.42","95.46"],"keys":["95.42","95.46","173.2","179.55","209.9","236.6","283.11"],"cssfilename":["95.42"],"exec":["95.42","95.46","286.40"],"还是先把依赖装上":["95.43"],"resources":["95.45"],"resourcesorigin":["95.46"],"meta":["95.46","121.0","121.4","150.12","154.13","279.1","279.5","279.6","279.10"],"glob":["95.46"],"dir":["95.46","214.1"],"hook":["95.47","177.8"],"可以很方便的在组件中使用翻译了":["95.47"],"为了更方便看到国际化的结果":["95.48"],"i18next":["95.49"],"namespace":["95.49"],"router":["96.0"],"vite相关生态没有webpack完善":["96.1"],"vite可以作为开发的辅助":["96.1"],"二":["96.1"],"搭建项目":["96.1"],"根据vite官网介绍":["96.1"],"我们可以使用npm或yarn来初始化vite项目":["96.1"],"并且node":["96.1"],"js的版本需要":["96.1"],"创建项目":["96.1","195.7"],"npm方式":["96.1"],"latest":["96.1","118.2"],"项目名":["96.1"],"yarn方式":["96.1"],"yarn":["96.1","254.21"],"提供了诸如零配置的":["96.2"],"travel":["96.2"],"调试":["96.2"],"状态快照导入导出等高级调试功能":["96.2"],"安装vuex":["96.2"],"save":["96.2","96.3","241.9"],"安装完成之后":["96.2"],"需要先初始化vuex":["96.2"],"首先":["96.2"],"创建一个store":["96.2"],"ts文件":["96.2"],"添加如下代码":["96.2"],"createstore":["96.2","178.7"],"store":["96.2","97.8","127.35","178.7"],"修改":["96.3","97.41"],"babelrc的配置内容":["96.3"],"libraryname":["96.3"],"stylelibraryname":["96.3"],"theme":["96.3"],"chalk":["96.3"],"plus":["96.4"],"根":["96.5"],"相关的目录":["96.5"],"构建输出将放在其中":["96.5"],"如果目录存在":["96.5"],"它将在构建之前被删除":["96.5"],"outdir":["96.5"],"文件中":["96.6"],"选项指定所有的":["96.6"],"使得":["96.6","137.2","175.10","203.2"],"可以在生产构建中对未使用的样式进行摇树优化":["96.6"],"html":["96.6","97.50","106.2","106.22","106.26","126.6","126.8","134.4","151.12","154.12","154.13","175.13","175.21","177.4","195.7","195.8","265.3","279.3","281.3"],"前端工程师就需要自己按照接口文档模拟后端人员提供的数据":["96.7"],"以此进行页面的开发":["96.7"],"mockjs":["96.9"],"属性":["96.10","103.2","121.0","122.6","173.9","173.68","179.16"],"属性名":["96.11"],"生成规则":["96.11"],"属性值":["96.11","122.6","122.19"],"url":["96.12","97.13","126.4","127.44","158.3","159.13","164.3","175.9","181.0","286.13"],"拦截请求地址为url的ajax请求":["96.12"],"yyyy":["96.13"],"mm":["96.13"],"dd":["96.13","287.2"],"中添加":["96.14"],"vitemockserve":["96.14"],"适配桌面端的组件库":["97.1"],"预处理器":["97.1"],"axios":["97.1","97.12","103.14"],"位于项目根目录下":["97.2"],"项目启动时会自动读取":["97.2"],"本项目针对公共基础路径":["97.2"],"自定义路径别名":["97.2"],"服务器选项":["97.2"],"构建选项等做了如下基础配置":["97.2"],"plugin":["97.2","97.30","154.12","195.7","195.9"],"views":["97.4"],"homeview":["97.4"],"about":["97.4","179.34"],"pinia":["97.6","97.7"],"usecounterstore":["97.7"],"counter":["97.7","195.9"],"tdesign":["97.9"],"引入组件库全局样式资源":["97.10"],"添加上述插件":["97.11"],"autoimport":["97.11"],"导出常用函数":["97.13"],"string":["97.13","100.8","109.6","127.20","138.34","156.18","173.66","185.5","210.0","235.4","239.5","241.6","283.7","287.4","296.1"],"本项目使用":["97.14"],"命名规范推荐":["97.16"],"预处理器相关配置即可实现":["97.17"],"slotted":["97.18"],"全局选择器":["97.18"],"global":["97.18","173.16","179.13","184.29"],"indent":["97.19","106.14"],"控制换行类型":["97.19"],"lf":["97.19"],"cr":["97.19"],"crlf":["97.19"],"end":["97.19","127.15","159.2","179.33","206.14","214.2"],"of":["97.19","97.50","99.15","129.0","129.5","132.2","167.4","173.7","173.41","205.6","206.1","214.2","214.3","215.2","218.5","232.4","241.1","241.3","241.10","249.0","256.4"],"设置文件字符集为":["97.19"],"utf":["97.19","150.10","150.12","279.1","279.6","279.10"],"charset":["97.19","113.6","150.10","150.12","279.1","279.6","279.10"],"时必须安装的前置插件":["97.20"],"而不是":["97.22"],"error":["97.22","98.10","100.5","109.1","114.11","131.8","131.9","166.8","179.25","184.10","217.0","286.69"],"禁止使用":["97.22"],"以避免产生副作用":["97.22"],"禁止变量声明与外层作用域的变量同名":["97.22"],"shadow":["97.22","162.2","170.2"],"禁用":["97.22"],"禁止标识符中有悬空下划线":["97.22"],"underscore":["97.22"],"dangle":["97.22"],"禁止在可能与比较操作符相混淆的地方使用箭头函数":["97.22"],"confusing":["97.22"],"是一款强大的代码格式化工具":["97.23"],"formatter":["97.25"],"needed":["97.26","206.14","236.6"],"jsx":["97.26","98.13","159.2","159.5","159.9"],"不使用单引号":["97.26"],"而使用双引号":["97.26"],"jsxsinglequote":["97.26"],"末尾需要有逗号":["97.26"],"trailingcomma":["97.26"],"大括号内的首尾需要空格":["97.26"],"bracketspacing":["97.26"],"标签的反尖括号需要换行":["97.26"],"prettierignore":["97.27"],"yaml":["97.28"],"npmrc":["97.28"],"配置项":["97.30"],"从而冲突了":["97.30"],"解决两者冲突问题":["97.30"],"需要用到":["97.30"],"自动格式化代码":["97.32"],"visual":["97.32"],"studio":["97.32"],"recommended":["97.33","154.15"],"检验":["97.33"],"ignorepseudoelements":["97.35"],"deep":["97.35","258.4"],"properties":["97.35"],"position":["97.35","106.24","169.3","236.6"],"right":["97.35","106.16","106.31","122.11","170.11","174.8","185.4"],"z":["97.35","170.15","284.6","284.21","284.56","284.67","284.72","284.74","295.6"],"justify":["97.35","179.4"],"align":["97.35","106.14","106.41","122.11"],"items":["97.35"],"overflow":["97.35","169.3","169.4"],"y":["97.35","125.3","184.21"],"margin":["97.35","106.26","106.41","171.0","172.0"],"其他类型文件":["97.36"],"版本默认不支持":["97.37"],"依赖的模块":["97.38"],"禁止未知的伪类选择器":["97.39"],"selector":["97.39"],"pseudo":["97.39"],"unknown":["97.39","243.2","245.3"],"在编码时":["97.40"],"这些工具可以对代码进行实时校验":["97.40"],"在一定程度上能有效规范所写代码":["97.40"],"但有些人可能觉得这些限制很麻烦":["97.40"],"从而选择视":["97.40"],"提示":["97.40"],"而不见":["97.40"],"来触发":["97.41"],"文件触发命令":["97.41"],"ext":["97.41","154.17"],"来使用":["97.42"],"它可以让":["97.42"],"staged":["97.43"],"npx":["97.45"],"最知名":["97.46"],"最受认可的":["97.46"],"angular":["97.46"],"团队提交规范":["97.46"],"改善性能":["97.47"],"变更项目构建或外部依赖":["97.47"],"例如":["97.47","106.7","113.2","113.4","144.1","168.26","173.32","173.43","173.93","175.10","178.7"],"scopes":["97.47"],"webpack":["97.47","100.1","102.1","195.7","195.8","195.9"],"gulp":["97.47"],"可以分成多行":["97.48"],"以":["97.49","179.11","193.7"],"breaking":["97.49","148.0"],"change":["97.49","110.1","110.3","111.1","179.56","253.0"],"couple":["97.50"],"unit":["97.50","291.6"],"tests":["97.50"],"ie9":["97.50"],"older":["97.50","106.41"],"ies":["97.50"],"serialize":["97.50"],"uppercased":["97.50"],"but":["97.50","107.4","216.2","243.1"],"does":["97.50","220.2"],"cz":["97.51","97.55"],"指定使用的适配器":["97.52"],"home":["97.57"],"路径下创建配置文件":["97.57"],"配置模板":["97.57"],"集成":["97.57"],"conventional":["97.58"],"通用提交规范":["97.58"],"目录下创建":["97.59","97.61"],"actions":["97.60"],"username":["97.61"],"io":["97.61","103.15","126.3","175.12","261.1"],"demo":["97.61","106.42"],"上面代码中":["97.61"],"替换成你的":["97.61"],"用户名":["97.61"],"参见":["97.61"],"范例":["97.61"],"在项目根目录下创建":["97.61"],"目录":["97.61"],"workflows":["97.61"],"页面反馈是否正常友好":["98.1"],"可能有哪些潜在的用户的功能需要更新":["98.1"],"总的来说":["98.1"],"数据埋点":["98.1"],"核心是为了":["98.1"],"收集数据":["98.1"],"有了数据就可以为所欲为":["98.1"],"只有通过分析数据":["98.1"],"访问量就会累计":["98.2"],"页面浏览用户数":["98.2"],"uv":["98.2"],"unique":["98.2","286.7"],"即通过":["98.3"],"try":["98.3","100.9","166.5","166.6","166.9","173.61","256.4","283.10","286.53"],"promise":["98.3","166.5","166.8","179.36","283.5"],"svg":["98.4","154.16"],"首次出现":["98.4"],"canvas":["98.4"],"首次绘制等":["98.4"],"即当页面中绘制了第一个":["98.4"],"像素":["98.4"],"这个时间点称为":["98.4"],"首屏时间":["98.4"],"最大内容绘制":["98.4","152.18"],"largest":["98.4"],"只要保证核心功能":["98.5"],"那么在基于核心进行扩展即可":["98.5"],"从何而来":["98.6"],"随便生成吗":["98.6"],"一般来说需要经过如下步骤":["98.6"],"getcls":["98.7"],"getfid":["98.7"],"getfcp":["98.7"],"getlcp":["98.7"],"getttfb":["98.7"],"布局偏移量":["98.7"],"首次输入延迟时间":["98.7"],"首次内容渲染时间":["98.7"],"首次最大内容渲染时间":["98.7"],"首个字节到达时间":["98.7"],"timeonpage":["98.7"],"onpageshow":["98.7"],"onpageshide":["98.7"],"constructor":["98.7","99.8","109.6","173.33","176.6","178.1","178.2","223.2","255.0"],"页面性能相关的数据":["98.8"],"easyagentsdk":["98.8"],"appid":["98.8"],"sdk":["98.9","177.2"],"actionreport":["98.9"],"data":["98.9","98.11","100.8","107.1","109.7","133.1","133.2","133.4","134.4","147.0","147.5","148.4","167.0","174.48","175.19","179.57","226.1","229.0","282.2"],"其他必要传递的信息":["98.9"],"上报页面性能":["98.9"],"和页面性能相关的内容":["98.9"],"属于":["98.9"],"reason":["98.10"],"errorreport":["98.11"],"reject":["98.11","166.8"],"请求超时时间":["98.12"],"responsetype":["98.12"],"reqconf":["98.12"],"interceptors":["98.12"],"errorboundary":["98.13"],"错误边界相关的":["98.13"],"getderivedstatefromerror":["98.13","99.8"],"componentdidcatch":["98.13"],"钩子":["98.13"],"定义错误边界组件":["98.13"],"设计开发一个完整的监控sdk":["99.0"],"监控后台错误还原演示示例":["99.0"],"痛点":["99.0"],"某":["99.0"],"文件放到线上":["99.1"],"监控平台通过":["99.1"],"rrweb":["99.2"],"可以实现该功能":["99.2"],"最终效果":["99.2"],"解决了复现bug的痛点":["99.3"],"自研监控的优势":["99.3"],"为什么不直接用sentry私有化部署":["99.3"],"而选择自研前端监控":["99.3"],"这是优先要思考的问题":["99.3"],"sentry作为前端监控的行业标杆":["99.3"],"有很多可以借鉴的地方":["99.3"],"相比sentry":["99.3"],"自研监控平台的优势在于":["99.3"],"影响了多少用户":["99.5"],"包括报错事件数":["99.5"],"ip":["99.5","138.34","175.9","263.3"],"where":["99.5"],"出现的页面是哪些":["99.5"],"示例4":["99.6"],"资源错误":["99.6"],"error2":["99.7"],"errorhandler源码分析":["99.7"],"目录下":["99.7","195.9"],"有一个":["99.7"],"globalhandleerror":["99.7"],"获取全局配置":["99.7"],"判断是否设置处理函数":["99.7"],"默认undefined":["99.7"],"配置config":["99.7"],"errorhandler方法":["99.7"],"haserror":["99.8"],"使下一次渲染能够显示降级后的":["99.8"],"ui":["99.8"],"js的代码":["99.9"],"fn":["99.9","111.2","156.9","255.0"],"parse":["99.9","103.12","159.13","179.19"],"报错信息":["99.9"],"scripterror":["99.9"],"重写fetch方法":["99.10"],"originalfetch":["99.10"],"stime":["99.10"],"handlerdata":["99.10"],"clone克隆":["99.10"],"防止被标记已消费":["99.10"],"tempres":["99.10"],"etime":["99.10"],"添加一条页面跳转的行为":["99.11"],"从home页面跳转到about页面":["99.11"],"pushhash":["99.12"],"supportspushstate":["99.12"],"geturl":["99.12"],"通过重写":["99.12"],"lasthref":["99.12"],"前一个页面的路由":["99.12"],"classlist":["99.13","286.66"],"表示在浏览器接收到资源的最后一个字节之后或在传输连接关闭之前":["99.14"],"以先到者为准":["99.14"],"的时间":["99.14"],"responsestart":["99.14"],"表示浏览器从服务器接收到响应的第一个字节后的时间":["99.14"],"secureconnectionstart":["99.14"],"表示浏览器即将开始握手过程以保护当前连接之前的时间":["99.14"],"servertiming":["99.14"],"一个":["99.14","286.52"],"performanceservertiming":["99.14"],"数组":["99.14"],"包含服务器计时指标的performanceservertiming":["99.14"],"条目":["99.14"],"表示资源获取开始的时间":["99.14"],"该值等效于":["99.14"],"performanceentry":["99.14"],"transfersize":["99.14"],"代表所获取资源的大小":["99.14"],"该大小包括响应标头字段以及响应有效内容主体":["99.14"],"workerstart":["99.14"],"如果服务":["99.14"],"线程已经在运行":["99.14"],"则返回在分派":["99.14"],"fetchevent":["99.14"],"usedjsheapsize":["99.16"],"表示可使用的内存的大小":["99.16"],"通常":["99.16","178.7"],"记录下当前dom变化的时间点":["99.17"],"在mutationobserver的callback函数中":["99.17"],"通过防抖函数":["99.17"],"订阅":["99.18","177.8"],"设计模式":["99.18"],"配置了vue":["99.19"],"react项目的不同引入方式":["99.19"],"路由监听等功能":["99.20"],"stack用来存储用户行为":["99.21"],"当长度超过限制时":["99.21"],"体积小且不需要插入dom中":["99.22"],"中实现了":["99.23"],"reportdata":["99.23"],"错误上报":["99.23"],"getmap":["99.23"],"获取":["99.23","181.0","195.6"],"getrecordscreenid":["99.23"],"获取录屏信息":["99.23"],"geterrorlist":["99.23"],"通过报错信息列表":["100.0"],"可以查看具体报错的源码":["100.0"],"以及报错时的录屏回放":["100.0"],"效果演示":["100.0"],"video":["100.0","106.41"],"gif":["100.0","101.2","101.4","139.4","154.16","190.3","279.3"],"转换后的文件名":["100.1"],"sourceroot":["100.1"],"转换前的文件所在目录":["100.1"],"如果与转换前的文件在同一目录":["100.1"],"该项为空":["100.1"],"sources":["100.1","100.2"],"转换前的文件":["100.1"],"该项是一个数组":["100.1"],"表示可能存在多个文件合并":["100.1"],"用于获取服务器上":["100.2"],"的文件内容":["100.2"],"sourcedata":["100.2"],"await":["100.2","103.7","109.7","166.9","286.26","286.53","289.1"],"sourcescontent":["100.2"],"sourcemapconsumer实例表示一个已解析的源映射":["100.2"],"可以通过在生成的源中给它一个文件位置来查询有关原始文件位置的信息":["100.2"],"cdn":["100.3","254.11"],"somewherefast":["100.3"],"utils":["100.3","204.1"],"isconstructor":["100.3"],"errorhander中捕获到报错信息为":["100.4"],"当线上代码报错时":["100.5"],"利用":["100.5","170.8"],"stack":["100.5"],"是一个标识":["100.6"],"告诉你重新制作了快照":["100.6"],"等方法":["100.7"],"包括":["100.7","115.0","152.15","173.22","175.10"],"rebuilding":["100.7"],"两大特性":["100.7"],"用来序列化":["100.7"],"为增量快照":["100.7"],"判断数据是否需要转为json":["100.8"],"datajson":["100.8"],"typeof":["100.8","125.9","130.10","173.64","184.15","204.2","208.4","283.9","290.1","296.1"],"number":["100.8","130.7","156.20","156.21","173.29","173.42","173.93","176.5","179.33","182.1","184.20","185.4","241.6","285.5"],"stringify":["100.8","109.1","112.3","156.14","159.2"],"使用base64":["100.8"],"encode处理字符编码":["100.8"],"兼容中文":["100.8"],"str":["100.8","140.1","178.8","287.4","295.2"],"encode":["100.8"],"binarystring":["100.8"],"后台报错列表":["100.9"],"从本次报错报的data中取出":["100.9"],"来播放录屏":["100.9"],"录屏的代码示例":["100.9"],"handlescreen":["100.9"],"存储录屏信息":["100.9"],"events":["100.9"],"record":["100.9"],"emit":["100.9"],"ie":["101.3","160.0","179.1"],"versions":["101.3"],"所有主流浏览器最近10版本用":["101.3"],"grid":["101.3","106.19","106.23"],"else":["101.5","103.12","106.27","173.98","175.8","206.16","214.3","216.2","218.4","218.5","222.3","222.4","231.7","232.2","236.7","241.3","283.1","283.2","283.4","294.1"],"表示更高":["101.5"],"有没有办法进行优化呢":["102.0"],"很难":["102.0"],"先递归分析各模块依赖关系":["102.0"],"构建依赖图谱":["102.0"],"然后进行打包":["102.0"],"再启动本地服务器":["102.0"],"而且":["102.0","127.33"],"支持多种模块化规范":["102.0"],"commonjs":["102.0"],"它一开始就要统一模块化代码":["102.0"],"将所有的依赖全部处理一遍":["102.0"],"整个流程如下图":["102.0"],"vite1":["102.0"],"即使使用按需加载":["102.0"],"也有一系列工作需要做":["102.0"],"很难有优化空间":["102.0"],"为什么能解决这个问题呢":["102.0"],"底层语言":["102.0"],"预构建依赖":["102.0"],"go":["102.0"],"比用":["102.0"],"编写的打包器预构建依赖快":["102.0"],"倍":["102.0"],"感觉这块要比":["102.1"],"简单的多":["102.1"],"需要给不同类型的文件配置不同的":["102.1"],"loader":["102.1","140.0","154.2","154.5","154.7","154.8","195.7","195.9"],"去处理":["102.1"],"内部直接帮我们配置好了":["102.1"],"如果使用的是":["102.1"],"单文件组件":["102.1"],"lang":["102.1","150.12","154.13","279.2","279.4"],"将资源引入为字符串":["102.2"],"后缀可以将资源作为字符串引入":["102.2"],"这个字符串其实就是源文件信息":["102.2"],"导入整个对象":["102.3"],"生产环境构建":["102.5"],"尽管原生":["102.5"],"es":["102.5","154.18"],"现在得到了广泛支持":["102.5"],"但由于嵌套导入会导致额外的网络往返":["102.5"],"在生产环境中发布未打包的":["102.5"],"效率仍然非常低":["102.5"],"即使使用":["102.5"],"为了在生产环境中获得最佳的加载性能":["102.5"],"更好的利用":["102.5"],"shaking":["102.5"],"懒加载和":["102.5"],"chunk":["102.5","154.17"],"废话不多说":["103.0"],"现在开始搭建环境":["103.0"],"首先是需要开启socket服务":["103.0"],"采用的是fastify来进行搭建":["103.0"],"详情可以见文档地址":["103.0"],"耳机设备等":["103.1"],"直接在控制台执行api":["103.1"],"camera":["103.2"],"需要手动打开详情查看效果":["103.2"],"一般适用于手机":["103.3"],"facingmode":["103.3"],"延迟大小":["103.4"],"latency":["103.4"],"constraindouble":["103.4"],"是否开启降噪":["103.4"],"noisesuppression":["103.4"],"把视频流添加到peerconnection里面":["103.5"],"创建一个offer给b":["103.5"],"b收到offer以后":["103.5"],"myuserid":["103.6"],"ref":["103.6","156.18"],"addtrack":["103.7"],"offer":["103.7"],"createoffer":["103.7"],"iceservers":["103.8","103.13"],"urls":["103.8","103.13","158.1","164.1"],"stun":["103.8","103.13"],"google":["103.8","121.7","152.6"],"ok":["103.9","113.6","175.10"],"any":["103.10","156.1","156.19","169.3","206.1","215.2","226.1","243.2","245.3","248.1","252.3"],"广播消息是同理这里就不再赘述了":["103.10"],"setredisroom":["103.12"],"set":["103.12","127.18","127.37","162.0","220.2","221.1","241.6","246.1"],"peerconnect":["103.13"],"rtcpeerconnection":["103.13"],"setinterval":["103.14","152.20","173.13"],"ionamespace":["103.15"],"fastify":["103.15"],"发送offer给对应的人":["103.15"],"重新从reids获取用户列表":["103.15"],"getuserlist":["103.15"],"找到目标的userid的数据":["103.15"],"user":["103.15","114.25","166.6","175.10","252.6"],"找到对应的socketid":["103.15"],"sockets":["103.15"],"在一个":["103.16"],"mediastream":["103.16"],"500是每隔500ms进行一个保存数据":["103.17"],"start":["103.17","127.15","138.11","166.8","179.33","214.2"],"屏幕共享失败":["103.17"],"获取到了之后可以使用":["103.17"],"replaylocalrecord":["103.17"],"类似":["104.0","113.2","127.16","186.3"],"但是它只能获取屏幕共享的媒体流":["104.0"],"获取屏幕共享的媒体流":["104.0"],"sharescreen":["104.0"],"localstream":["104.0"],"playstream":["104.0"],"在视频标签中播放视频流":["104.0"],"queryselector":["104.0","127.54","175.7","286.57"],"函数后":["104.0"],"会弹出一个权限询问框":["104.0"],"询问是否允许获取屏幕共享的媒体流":["104.0"],"然后你就可以分享你的整个屏幕":["104.0"],"如果你又多个屏幕的话":["104.0"],"你可以选择其中一个进行分享":["104.0"],"然后你也可以选择只分享你屏幕上的某个应用的窗口":["104.0"],"不用担心你一边干嘛干嘛一边录制屏幕":["104.0"],"它只会捕捉你选择的应用窗口的内容":["104.0"],"非常":["104.0"],"nice":["104.0"],"你甚至可以在你浏览器打开的各种页面中":["104.0"],"选择一个你想要分享的网页":["104.0"],"当你页面各种切换时候":["104.0"],"你的屏幕共享也只会显示你选择的网页的内容":["104.0"],"共享前你可以随便选一个进行预览":["104.0"],"然后可以选择是否分享的时候包含页面中的音频":["104.0"],"这样你获取的媒体流就会包含音频轨道了":["104.0"],"这里我打开自己":["104.0"],"的网页":["104.0"],"然后点击屏幕共享":["104.0"],"可以看到共享的只有自己的":["104.0"],"页面了":["104.0"],"不用担心会有什么奇怪的东西乱入进来":["104.0"],"非常适合视频会议或者在线教育等场景":["104.0"],"说完获取屏幕媒体流":["104.0"],"接下来我们来看看如何通过媒体流进行录制":["104.0"],"完整的":["104.0"],"mime":["104.0"],"类型列表":["104.0"],"这里我们使用":["104.0"],"mediarecorder":["104.0"],"来进行录制":["104.0"],"它是一个用于录制媒体流的":["104.0"],"它可以将媒体流中的数据进行录制":["104.0"],"然后将录制的数据保存成一个文件":["104.0"],"的对":["104.0"],"mimetype":["104.0"],"参数的支持是有限的":["104.0"],"所以我们需要通过":["104.0"],"istypesupported":["104.0"],"来判断当前浏览器是否支持我们需要的":["104.0"],"支持的":["104.0"],"如下":["104.0","158.1","164.1"],"webm":["104.0"],"codecs":["104.0"],"vp8":["104.0"],"vp9":["104.0"],"h264":["104.0"],"matroska":["104.0"],"avc1":["104.0"],"为了验证上述的内容":["104.0"],"这里我把一些常用的":["104.0"],"列出来":["104.0"],"拼装后通过":["104.0"],"来判断是否支持":["104.0"],"最后放到下拉框中供用户根据自己的需求选择合适的":["104.0"],"获取支持的媒体类型":["104.0"],"getsupportedmimetypes":["104.0"],"常用的视频格式":["104.0"],"mp4":["104.0"],"ogg":["104.0"],"mov":["104.0"],"avi":["104.0"],"wmv":["104.0"],"flv":["104.0","284.22"],"mkv":["104.0"],"常用的视频编码":["104.0"],"av1":["104.0"],"h265":["104.0"],"支持的媒体类型":["104.0"],"supported":["104.0","239.3"],"issupported":["104.0"],"遍历判断所有的媒体类型":["104.0"],"codec":["104.0"],"touppercase":["104.0","295.1","295.5"],"variation":["104.0"],"可以看到这么多排列组合后":["104.0"],"筛选出的支持的":["104.0"],"元素":["106.2"],"那还需要加上":["106.2"],"选择器":["106.2"],"选择器和声明块组成了":["106.2"],"规则集":["106.2"],"告诉":["106.3","205.16"],"引擎必须考虑xml命名空间":["106.3"],"如果满足媒体查询的条件则条件规则组里的规则生效":["106.3"],"浏览器有一套识别顺序":["106.4"],"优先级由高到低":["106.4"],"文件开头的":["106.4"],"byte":["106.4"],"order":["106.4","236.4"],"mark":["106.4","106.41","115.0","127.40","169.3","219.6","252.5"],"字符值":["106.4"],"不过一般编辑器并不能看到文件头里的":["106.4"],"比如图片":["106.5"],"脚本和字体等":["106.5"],"操作符进行后续的操作":["106.6"],"如果支持自定义属性":["106.6"],"越往下优先级越高":["106.7"],"用户代理样式表中的声明":["106.7"],"浏览器的默认样式":["106.7"],"在没有设置其他样式时使用":["106.7"],"用户样式表中的常规声明":["106.7"],"下面列出了常用的选择器":["106.8"],"属性等于指定值的元素":["106.9"],"属性包含指定值的元素":["106.9"],"选项可选的表单元素":["106.11"],"enabled":["106.11"],"事件启用的表单元素":["106.11"],"disabled":["106.11"],"事件禁用的表单元素":["106.11"],"read":["106.11"],"only":["106.11","218.4","223.2","232.2","236.2"],"只读的表单元素":["106.11"],"write":["106.11"],"可读可写的表单元素":["106.11"],"blank":["106.11","179.34"],"输入为空的表单元素":["106.11"],"current":["106.11","156.17","179.62","205.5","241.9"],"在元素后插入内容":["106.12"],"00001":["106.13"],"元素选择器":["106.13"],"伪元素选择器":["106.13"],"00000":["106.13"],"通配选择器":["106.13"],"后代选择器":["106.13"],"weight":["106.14","138.39","170.15"],"文本相关":["106.14"],"decoration":["106.14"],"所以多个块级盒子之间是从上到下排列的":["106.15"],"内联元素默认会在一行里一列一列的排布":["106.15"],"当一行放不下的时候":["106.15"],"会自动切换到下一行继续按照列排布":["106.15"],"如何脱离文档流呢":["106.15"],"脱流文档流指节点脱流正常文档流后":["106.15"],"元素内容的宽度就为":["106.16"],"而实际的宽度则是":["106.16"],"有兴趣深入研究的可以结合上图看这个":["106.17"],"w3c":["106.17"],"的文档":["106.17"],"所以这里就简单介绍下盒子类型":["106.17"],"所有块级盒子都会参与":["106.18"],"bfc":["106.18"],"呈现垂直排列":["106.18"],"而所有行内级盒子都参会":["106.18"],"ifc":["106.18","106.20"],"呈现水平排列":["106.18"],"除此之外":["106.18"],"ffc":["106.19"],"gfc":["106.19"],"块级格式化上下文":["106.20"],"所以就可以把侧边栏固定宽度且左浮动":["106.21"],"而对右侧内容触发":["106.21"],"使得它的宽度自适应该行剩余宽度":["106.21"],"div":["106.21","115.0","153.8","156.7","156.10","156.24","205.2","286.33","286.37"],"layout":["106.21"],"aside":["106.21"],"main":["106.21","108.2","114.11","127.54","140.0","154.10","195.9"],"100px":["106.21"],"这些盒子分布在多个":["106.22"],"如果子元素未设置强制换行的情况下":["106.22"],"将不可被分割":["106.22"],"将会溢出父元素":["106.22"],"针对如上的":["106.22"],"你是不是可以分析下下面这段代码的":["106.22"],"环境是怎么样的呢":["106.22"],"can":["106.22","148.0","206.14","216.2","236.2","236.4","236.6","243.2","252.6","286.69"],"opacity":["106.23","179.3"],"属性值小于":["106.23"],"mix":["106.23"],"blend":["106.23"],"mode":["106.23","171.0","181.0","206.12","241.8"],"属性值不为":["106.23"],"normal":["106.23","206.15"],"以下任意属性值不为":["106.23"],"perspective":["106.23"],"坐标位置":["106.24"],"以屏幕的左上角为坐标原点定位元素的位置":["106.24"],"比如常见的":["106.24"],"设备屏幕的物理像素":["106.25"],"表示的是屏幕的横纵有多少像素点":["106.25"],"和屏幕分辨率是差不多的意思":["106.25"],"设备像素比":["106.25"],"dpr":["106.25"],"设备像素比表示":["106.25"],"个":["106.25","158.5","164.5"],"像素等于几个物理像素":["106.25"],"计算公式":["106.25"],"物理像素数":["106.25"],"逻辑像素数":["106.25"],"在浏览器中可以通过":["106.25"],"如":["106.26","181.0"],"height":["106.26","172.0","178.4","286.55"],"我们都知道每个浏览器都会给":["106.26"],"根元素":["106.26"],"fontsize":["106.27"],"100vw":["106.28"],"innerwidth":["106.28"],"innerheight":["106.28","147.3"],"中提到的颜色值类型":["106.29"],"大概可以把它们分为这几类":["106.29"],"orange":["106.30","170.12"],"关键字":["106.30","173.43"],"从一开始":["106.30"],"浏览器接受其它的颜色":["106.30"],"由于一些早期浏览器是":["106.30"],"x11":["106.30"],"应用程序":["106.30"],"这些颜色大多数是":["106.30"],"命名的颜色列表":["106.30"],"00bcd4":["106.31"],"e26b6b":["106.31"],"对于如下":["106.32"],"不透明度的红色":["106.33"],"f00a":["106.33"],"用函数表示的时候":["106.33"],"每个值的范围是":["106.33"],"所以红色是":["106.33"],"全色":["106.34"],"为暗":["106.34"],"为白":["106.34"],"不透明度":["106.34"],"主要用于屏幕":["106.35"],"speech":["106.35"],"主要用于语音合成器":["106.35"],"指定的":["106.35"],"资源尽管不匹配它的设备类型":["106.35"],"但是浏览器依然会加载它":["106.35"],"使用自定义属性的时候":["106.36"],"需要用":["106.36"],"函数":["106.36","200.4","216.1","218.11","221.7","245.2","247.3","252.7","256.6","258.8","258.10"],"origin":["106.37","119.11","126.5","173.9","175.19"],"那么这个父元素就无法被浮动元素所撑开":["106.38"],"这样一来父元素就丢失了高度":["106.38"],"这就是所谓的浮动造成的父元素高度坍塌问题":["106.38"],"的高度会是":["106.39"],"此时只要给":["106.39"],"伪元素为在父元素的最后一个子元素后面生成一个内容为空的块级元素":["106.40"],"然后通过":["106.40","259.3"],"将这个伪元素移动到所有它之前的浮动元素的后面":["106.40"],"画个图来理解一下":["106.40"],"hgroup":["106.41"],"menu":["106.41"],"nav":["106.41"],"ruby":["106.41"],"section":["106.41"],"summary":["106.41"],"audio":["106.41"],"border":["106.41","122.11","179.1"],"inherit":["106.41"],"vertical":["106.41"],"baseline":["106.41"],"html5":["106.41","181.0"],"role":["106.41"],"browsers":["106.41"],"查看以上这些方案的示例":["106.42"],"codepen":["106.42"],"有意思的是刚好前两天看到":["106.42"],"垂直居中":["106.44","179.4"],"方法一":["106.44","106.46"],"通过设置上下内间距一致达到垂直居中的效果":["106.44"],"single":["106.44"],"方法二":["106.45","106.46"],"absolute":["106.46","169.4"],"原理":["106.48"],"双飞翼布局":["106.49"],"方法三":["106.49"],"inner":["106.51"],"footer":["106.51"],"出错时候的提示":["107.1"],"total":["107.1","127.10","152.21"],"总数量":["107.1"],"specificoperation":["107.2"],"方法进行相应的处理包装为":["107.2"],"operation":["107.2","127.28"],"方法供":["107.2"],"client":["107.2","176.16"],"看一个简单的例子":["107.2"],"现实生活中":["107.2"],"iphone":["107.2","138.38"],"有两种耳机插口":["107.2"],"一种是":["107.2"],"lightning":["107.2"],"一种是传统的":["107.2"],"毫米接口":["107.2"],"插口的耳机想要插到传统的":["107.2"],"毫米接口的电脑上就需要适配器了":["107.2"],"lightning耳机":["107.2"],"public":["107.2","154.13","219.6","223.2","255.0"],"void":["107.2","108.2","166.5","184.21","217.0","223.2"],"插入lighting接口":["107.2"],"system":["107.2","108.2","110.2","112.2"],"out":["107.2","108.2","109.6","110.2","112.2","170.15","204.2","214.1","252.6","256.4"],"println":["107.2","108.2","109.6","110.2","112.2"],"native":["107.4","241.1","241.10"],"note":["107.4"],"condition":["107.4"],"won":["107.4"],"edge":["107.4","160.0"],"as":["107.4","148.0","166.9","188.0","205.4","218.8","222.4","222.6","252.3"],"doesn":["107.4","206.8"],"define":["107.4","127.55"],"documentmode":["107.4"],"also":["107.4","206.8","219.6"],"适配器模式是为了解决两个对象之间不匹配的问题":["107.5"],"参与页面渲染的数据":["108.1"],"printinfo":["108.2"],"价格":["108.2"],"加料":["108.2"],"args":["108.2","131.10","195.4","245.3","283.3"],"做一些事情":["108.3"],"然后回到原始页面增加":["108.3"],"的基础上再新增代理对象":["108.4"],"a2":["108.4"],"如果我们不想要":["108.4"],"新增的功能了":["108.4"],"我们并不能直接使用":["108.4"],"getexhibitiondomain":["109.1"],"picurl":["109.1"],"失败":["109.1"],"现在有了一个新需求":["109.1"],"我们需要将第一次请求中":["109.1"],"后端返回请求中的":["109.1"],"an":["109.4","206.9","232.4","243.1"],"final":["109.6"],"filename":["109.6","140.11","154.10","192.1","192.2","192.3","286.40","286.45","296.2"],"loadimagefromdisk":["109.6"],"loads":["109.6"],"disk":["109.6","195.7"],"displays":["109.6"],"async":["109.7","179.51","232.4","283.3","286.9","286.44"],"response":["109.7"],"此时页面里多了一个模块":["110.1"],"同样需要拿到地址后进行下一步操作":["110.1"],"我们只好去翻请求地址的代码把":["110.1"],"模块的调用补上":["110.1"],"getpost":["110.2"],"小明":["110.2"],"xiaoming":["110.2"],"implements":["110.2"],"sub":["110.2","127.35"],"override":["110.2","206.8"],"我收到了":["110.2"],"并且点了个赞":["110.2"],"小杨":["110.2"],"xiaoyang":["110.2"],"obervers":["110.3","111.1"],"trigger":["111.2","247.1"],"shift":["111.2","148.2","174.60"],"arguments":["111.2","131.10"],"fns":["111.2"],"自己的逻辑":["111.3"],"attach":["111.4"],"不为":["111.4"],"说明还没有调用过":["111.4"],"此时将当前事件保存起来":["111.4"],"的时候遍历之前保存的事件":["111.4"],"并且将":["111.4"],"置为":["111.4"],"表示已经调用过":["111.4"],"看一下效果":["111.4"],"poster":["112.1"],"openposterpop":["112.1"],"algorithm":["112.2"],"using":["112.2","217.7"],"called":["112.2","220.2","243.2","283.8"],"然后就是":["112.3"],"regexp":["112.4","125.9","127.20","173.70","179.25"],"integer":["112.4"],"enumvalidator":["112.4"],"enum":["112.4"],"pattern":["112.4"],"的基本原理与实践操作":["113.0"],"别再守着前端那一亩三分地":["113.0"],"是时候该开疆扩土了":["113.0"],"我们将会围绕下面几点展开":["113.0"],"重复盖房":["113.1"],"烦恼之际":["113.1"],"跑来一个魔法师教会我一种魔法":["113.1"],"这种魔法可以把我盖好的房子复制一份":["113.1"],"做成":["113.1"],"但占用空间更大":["113.2"],"启动更慢":["113.2"],"虚拟机软件可能还要花钱":["113.2"],"容器技术不需要虚拟出整个操作系统":["113.2"],"只需要虚拟一个小规模的环境":["113.2"],"沙箱":["113.2"],"运行空间":["113.2"],"虚拟机一般要几":["113.2"],"gb":["113.2"],"到":["113.2","222.11"],"几十":["113.2"],"的空间":["113.2"],"镜像":["113.3"],"容器":["113.3","177.14"],"技术使用":["113.4"],"内核和内核功能":["113.4"],"cgroups":["113.4"],"namespaces":["113.4"],"来分隔进程":["113.4"],"running":["113.6"],"镜像准备":["113.6"],"我们在根目录创建":["113.6"],"conf":["113.6","195.9"],"写入":["113.6"],"listen":["113.6","159.2","159.5"],"koi8":["113.6"],"r":["113.6","167.4","174.25"],"当使用":["113.7"],"运行容器的时候":["113.7"],"这个可以在命令行被覆盖":["113.7"],"entrypoint":["113.7","114.30"],"也是执行命令":["113.7"],"只是这个命令不会被命令行覆盖":["113.7"],"donnet":["113.7"],"myapp":["113.7"],"dll":["113.7"],"label":["113.7","115.0","172.0","205.17"],"为镜像添加元数据":["113.7"],"明确":["113.8"],"需要什么镜像":["113.8"],"步骤精简":["113.8"],"变化较少的":["113.8"],"可移植":["114.0"],"通过命令行与":["114.3"],"交互":["114.3"],"双击安装即可":["114.5"],"如果是个人服务器且为":["114.5"],"来进行安装":["114.6"],"然后一路回车":["114.8"],"运行命令":["114.8"],"镜像而构建的":["114.12"],"命令的意思是将项目根目录下":["114.12"],"表示构建成成功了":["114.13"],"参数说明":["114.13"],"参数给镜像命名":["114.13"],"端口访问了":["114.15"],"设置容器名":["114.15"],"大概有":["114.18"],"pid":["114.19","138.15"],"隔离进程":["114.19"],"net":["114.19","278.0","279.9"],"列出所有镜像":["114.21"],"至于":["114.22"],"的配置":["114.22"],"reference":["114.23"],"executable":["114.27"],"param1":["114.27"],"param2":["114.27"],"创建容器":["114.28"],"当停止容器时自动清楚容器":["114.29"],"可交互式":["114.29"],"赋予":["114.29","177.1"],"tty":["114.29"],"的方式":["114.29"],"为容器指定名称":["114.29"],"宿主机与容器端口映射":["114.29"],"方便容器对外提供服务":["114.29"],"基于该基础镜像创建容器":["114.29"],"此时在宿主机使用":["114.29"],"curl":["114.29"],"测试容器提供的服务是否正常":["114.29"],"lucid":["114.30"],"mirzakhani":["114.30"],"2ce10556dc8f":["114.30"],"redis":["114.30"],"months":["114.30"],"查看命令":["114.32"],"包裹事件处理函数":["115.0"],"可以让我们每次都能获取到最新的状态":["115.0"],"而且状态变更后不会产生新的函数引用":["115.0"],"rfc":["115.0"],"这个提案最终还是在":["115.0"],"月份夭折了":["115.0"],"因为它最大的问题是它相当于引入了一个新的概念":["115.0"],"会增加":["115.0"],"的使用理解成本":["115.0"],"你可能会从要不要使用":["115.0"],"的选择中增加一个要不要使用":["115.0"],"团队计划发布一个不同的":["115.0"],"范围更小的":["115.0"],"来取代这个":["115.0"],"浏览器最新私有预取代理方案":["115.0"],"lcp":["115.0"],"提升30":["115.0"],"为了实现更安全隐私的数据预取":["115.0"],"提出了一种新的数据预取方案":["115.0"],"prefetch":["115.0"],"proxy":["115.0","156.12"],"私有预取代理":["115.0"],"search":["115.0","181.0"],"已经实施了这项方案":["115.0"],"导航的":["115.0"],"预计有":["115.0"],"的提升":["115.0"],"此方案具有较好的安全性":["115.0"],"可防止代理抓包":["115.0"],"防止用户识别":["115.0"],"并且可以更好的和浏览器缓存进行结合":["115.0"],"最新的性能优化方案":["115.0"],"inert":["115.0"],"nightly":["115.0"],"目前均对":["115.0"],"属性提供了支持":["115.0"],"button2":["115.0"],"codemmhy":["115.0"],"am":["115.0","127.4","127.7"],"是一个全局的":["115.0"],"它可以告诉浏览器忽略元素的用户输入事件":["115.0"],"包括焦点事件和来自辅助技术的其他事件":["115.0"],"主要是下面两种用例":["115.0"],"元素是":["115.0"],"树的一部分":["115.0"],"但在屏幕外或隐藏":["115.0"],"但应该是非交互的":["115.0"],"主要是为了提升网页的可访问性":["115.0"],"比如对于视力障碍的人":["115.0"],"他不是依靠视觉来感知网页内容":["115.0"],"而是借助了一些其他的辅助技术":["115.0"],"再之前就有可能会和我们隐藏掉的内容进行一些意外的交互":["115.0"],"可以让我们能够从选项卡顺序和可访问性树中直接删除元素":["115.0"],"这就会避免上面的问题":["115.0"],"新增两个":["115.0"],"两个":["115.0"],"05":["115.0","127.31"],"浏览器支持直接运行":["115.0"],"python":["115.0"],"代码":["115.0","133.4","185.7","200.5"],"pycon":["115.0"],"us":["115.0"],"的主题演讲中":["115.0"],"anaconda":["115.0"],"ceo":["115.0"],"peter":["115.0"],"wang":["115.0"],"公布了一个相当令人兴奋的项目":["115.0"],"pyscript":["115.0"],"是一个":["115.0"],"框架":["115.0","120.3","195.7"],"可以为开发者提供了在标准":["115.0"],"中嵌入编写":["115.0"],"代码的能力":["115.0"],"调用":["115.0","152.20","173.5","177.6","179.25"],"函数库":["115.0"],"以及创建":["115.0"],"应用":["115.0"],"这意味着后续我们可以在浏览器直接运行":["115.0"],"标准化为":["115.0"],"ietf":["115.0"],"quic":["115.0"],"工作组成员":["115.0"],"robin":["115.0"],"在推特上宣布":["115.0"],"历时5年":["115.0"],"终于被标准化为":["115.0"],"这是":["115.0"],"超文本传输协议的第三个主要版本":["115.0"],"采用了谷歌多年探索的基于":["115.0"],"原名叫":["115.0"],"over":["115.0","148.2","206.14"],"年被":["115.0"],"批准更名为":["115.0"],"等主流浏览器均表示支持":["115.0"],"标准地址":["115.0"],"editor":["115.0"],"rfc9114":["115.0"],"wwdc":["115.0"],"webkit":["115.0","200.1"],"发布多项新能力":["115.0"],"在本届苹果全球开发者大会":["115.0"],"苹果宣布了":["115.0"],"beta":["115.0"],"版本的发行":["115.0"],"带来了诸多新的":["115.0"],"能力":["115.0"],"inspector":["115.0"],"extensions":["115.0","140.0"],"支持容器查询":["115.0"],"推送":["115.0"],"子网格布局":["115.0"],"flexbox":["115.0"],"可访问性":["115.0"],"动画效果改进":["115.0"],"哪些是前端开发者要关注的信息":["115.0"],"正式宣布退役":["115.0"],"岁的微软":["115.0"],"浏览器宣告退役":["115.0"],"6月15日晚":["115.0"],"浏览器在官网宣布":["115.0"],"微软正式结束对网页浏览软件":["115.0"],"internet":["115.0"],"explorer":["115.0"],"浏览器正式退役了":["115.0"],"发布于":["115.0"],"年夏天的":["115.0"],"最终在":["115.0"],"年的夏天":["115.0"],"结束了它的旅程":["115.0"],"微软官方声明":["115.0"],"正式支持":["115.0"],"file":["115.0","177.7","284.8","286.53"],"handling":["115.0"],"navigation":["115.0","151.9"],"版本正式支持了":["115.0"],"可以让已安装的":["115.0"],"pwa":["115.0"],"向操作系统注册文件处理程序":["115.0"],"注册后":["115.0"],"用户就可以单击文件然后使用已安装的":["115.0"],"打开它了":["115.0"],"这非常适合与文件交互的":["115.0"],"程序":["115.0"],"例如图像编辑器":["115.0"],"文本编辑器等":["115.0"],"想要让你的":["115.0"],"支持文件处理功能":["115.0"],"你需要更新一下":["115.0"],"cherry":["116.1"],"pick":["116.1"],"配置git命令输出为彩色的":["116.4"],"可以使用git":["117.1"],"pull来拉去远程分支的数据":["117.1"],"然后将远端分支自动合并到本地仓库中的当前分支":["117.1"],"将本地仓库某分支推送到远程仓库上":["117.1"],"branch":["117.1"],"但":["117.2"],"除外":["117.2"],"仅仅忽略项目根目录下的":["117.2"],"将全部未保存的代码添加到储藏":["118.1"],"num":["118.3","118.5"],"应用列表中的储藏":["118.4"],"删除stash":["118.5"],"apply":["119.4","127.10","173.17","177.6","283.12","288.5"],"如果想应用更早的储藏":["119.4"],"重新应用被暂存的变更":["119.4"],"index参数":["119.4"],"mv":["119.5"],"比较工作区中当前文件和暂存区之间的差异":["119.6"],"也就是修改之后还没有暂存的内容":["119.6"],"跳过add到暂存区的过程":["119.8"],"查看提交历史":["119.9"],"使用git":["119.10"],"show命令查看相应标签的版本信息":["119.10"],"并连同显示打标签时的提交对象":["119.10"],"show":["119.10","156.24"],"把远程分支合并到当前分支":["119.11"],"remote":["119.11"],"如git":["119.11"],"serverfix":["119.11"],"如果是单线的历史分支不存在任何需要解决的分歧":["119.11"],"只是简单的将head指针前移":["119.11"],"所以这种合并过程可以称为快进":["119.11"],"fast":["119.11","214.3","236.6"],"forward":["119.11"],"脚本的解析":["120.0"],"它必须声明在文档的第一行":["120.0"],"sgml":["120.1"],"所以不需要引用dtd":["120.1"],"framset":["120.3"],"混杂模式":["120.4"],"含过渡":["120.4"],"如果只存在混杂模式":["120.5"],"怪异模式下":["120.6"],"说白了就是为了传达信息":["121.0"],"先看看":["121.0"],"元素定义的元数据的类型":["121.0"],"如果设置了":["121.0"],"会用这些关键字对文档进行分类":["121.3"],"搜索引擎将索引此网页":["121.5"],"comp":["121.6"],"默认ie兼容模式":["121.6"],"如果当前ie浏览器安装了":["121.7"],"frame":["121.7"],"html页面中的a标签会自动启用dns提前解析来提升网站性能":["121.9"],"和缓存相关的设置":["121.10"],"大小等外观样式":["122.0"],"主要指css":["122.0"],"比如一只有毛的鸟":["122.0"],"行为是指网页模型的定义及交互的编写":["122.0"],"比如一只会飞的鸟":["122.0"],"html语法规范":["122.0"],"html标签通常成对出现":["122.0"],"称为双标签":["122.0"],"有极少个是单标签":["122.0"],"标签的关系可以分为":["122.0"],"包含关系":["122.0"],"并列关系":["122.0"],"包含":["122.0"],"标签进行定义的":["122.1"],"特点":["122.2","139.1"],"显示为":["122.4"],"倾斜":["122.5"],"优先em":["122.5"],"del":["122.5"],"图像的其他属性":["122.6"],"图片路径":["122.6"],"img":["122.7","172.0"],"logo":["122.7"],"文本或图像":["122.8"],"特殊字符":["122.9"],"描述":["122.9","122.11"],"center":["122.11"],"规定表格相对于周围元素的对齐方式":["122.11"],"内部必须拥有标签":["122.12"],"一般位于第一行":["122.12"],"tbody标签":["122.12"],"跨列":["122.13"],"最左侧单元格为目标单元格":["122.13"],"有序":["122.14"],"结果为":["122.15","122.16"],"表单的组成":["122.18"],"常见于注册页面":["122.18"],"各种表单元素控件":["122.19"],"输入表单元素":["122.20"],"按钮":["122.21"],"供文件上传":["122.21"],"hidden":["122.21","169.3","169.4"],"定义隐藏的输入字段":["122.21"],"文本框":["122.21"],"用户可以在里面输入任何文字":["122.21"],"sex":["122.22","172.0","286.28"],"男":["122.22","172.0"],"选项2":["122.23"],"cols":["122.24"],"文本内容":["122.24"],"high":["123.0","181.0"],"optimum":["123.0"],"不知道怎样在你的网站上嵌入文件":["123.1"],"不要找了":["123.1"],"吧":["123.1"],"允许我们嵌入各种文件":["123.1"],"如pdf":["123.1"],"图像":["123.1","151.4"],"视频":["123.1"],"音频":["123.1"],"abbr":["123.1"],"该元素允许我们向文档添加":["123.1"],"缩写":["123.1"],"当用户将鼠标悬停在":["123.1"],"上时":["123.1"],"将显示完整窗体":["123.1"],"屏幕阅读器":["123.1"],"还可以配置为在遇到":["123.1"],"时读出完整表格":["123.1"],"从而导致消息队列中的很多其他任务无法得到执行":["124.0"],"一方面会导致繁忙的主线程白白的消耗时间":["124.0"],"另一方面导致页面无法及时更新":["124.0"],"obj3":["125.0"],"这是个浅拷贝的方法":["125.0"],"sports":["125.1"],"basketball":["125.1"],"obj2":["125.1"],"kobe":["125.4","125.5"],"arr2":["125.4","174.12"],"arr3":["125.5"],"这也是利用json":["125.6"],"stringify将对象转成json字符串":["125.6"],"再用json":["125.6"],"parse把字符串解析成对象":["125.6"],"一去一来":["125.6"],"新的对象产生了":["125.6"],"而且对象会开辟新的栈":["125.6"],"实现深拷贝":["125.6"],"obj1":["125.8"],"可能是对象或者普通的值":["125.9"],"如果是函数的话是不需要深拷贝":["125.9"],"等存储性内容":["126.2"],"节点":["126.2","169.4","176.3","178.1","216.1","238.0"],"ajax":["126.2","175.4","179.47","181.0"],"请求发送后":["126.2"],"结果被浏览器拦截了":["126.2"],"我们使用":["126.3"],"socket":["126.3","175.12"],"它很好地封装了websocket接口":["126.3"],"提供了更简单":["126.3"],"灵活的接口":["126.3"],"也对不支持websocket的浏览器提供了向下兼容":["126.3"],"我们先来看个例子":["126.3"],"本地文件socket":["126.3"],"html向":["126.3"],"headers":["126.4","166.8"],"将请求转发给服务器":["126.4"],"proxyrequest":["126.4"],"method":["126.4"],"control":["126.5","127.40"],"allow":["126.5"],"当前端只跨域不带cookie时":["126.5"],"可为add":["126.5"],"credentials":["126.5"],"最后通过命令行":["126.5"],"reload":["126.5","151.5"],"启动nginx":["126.5"],"都是":["126.7"],"而c":["126.7"],"html是":["126.7"],"获取页面":["126.8"],"中a的值":["126.8"],"版":["127.1"],"最早被称作是":["127.1"],"es6":["127.1"],"添加了类和模块的语法":["127.1"],"其他特性包括迭代器":["127.1"],"python风格的生成器和生成器表达式":["127.1"],"箭头函数":["127.1"],"二进制数据":["127.1"],"静态类型数组":["127.1"],"集合":["127.1"],"maps":["127.1"],"proposal":["127.2"],"这个阶段确定一个正式的提案":["127.2"],"uncaught":["127.3","130.9"],"referenceerror":["127.3"],"newlist":["127.5"],"empty":["127.6","221.1"],"半径为":["127.9"],"的圆的面积是":["127.9"],"但是在es6里我们就方便很多":["127.11"],"实现了链式调用":["127.12"],"也就是说每次调用":["127.12"],"之后返回的都是一个":["127.12"],"并且是一个全新的":["127.12"],"原因也是因为状态不可变":["127.12"],"如果你在":["127.12"],"使用了":["127.12"],"上创建一个迭代循环":["127.13"],"调用自定义迭代钩子":["127.13"],"并为每个不同属性的值执行语句":["127.13","127.37"],"例子如下":["127.13","127.33","127.37","127.44"],"symbol1":["127.14"],"symbol2":["127.14"],"但每个generator只能迭代一次":["127.15"],"所以我们可以有以下例子":["127.15"],"makerangeiterator":["127.15"],"infinity":["127.15","127.52"],"step":["127.15"],"结构与":["127.16"],"但区别有以下两点":["127.16"],"对象中只能存放对象引用":["127.16"],"不能存放值":["127.16"],"对象都可以":["127.16"],"wm2":["127.17"],"wm3":["127.17"],"o1":["127.17"],"o2":["127.17","173.64"],"o3":["127.17"],"flags":["127.20"],"查看regexp构造函数的修饰符":["127.20"],"regex":["127.20"],"xyz":["127.20"],"isnan":["127.23","291.2"],"是否为nan":["127.23"],"isinteger":["127.23"],"是否为整数":["127.23"],"issafeinteger":["127.23"],"是否在数值安全范围内":["127.23"],"math":["127.23","156.7","156.23","286.12","286.38","286.63","286.67","291.3","291.4"],"trunc":["127.23"],"返回数值整数部分":["127.23"],"sign":["127.23"],"返回数值类型":["127.23"],"found":["127.24"],"findindex":["127.24","153.11"],"返回第一个符合条件的成员索引值":["127.24"],"islargenumber":["127.24"],"十六进制以":["127.27"],"xa9":["127.27"],"problem":["127.28"],"with":["127.28","214.3","226.1","241.1","241.10","252.5"],"然后再看看":["127.28"],"版的":["127.28"],"这样看起来是不是更清晰了":["127.28"],"myfetch":["127.28"],"代码如下":["127.29","127.38","127.42"],"object1":["127.29","127.30"],"somestring":["127.30"],"mushrooms":["127.32"],"但是以下的方式是不合法的":["127.33"],"仅仅包含逗号的函数参数定义或者函数调用会抛出":["127.33"],"syntaxerror":["127.33"],"当使用剩余参数的时候":["127.33"],"并不支持尾后逗号":["127.33"],"missing":["127.33"],"formal":["127.33"],"memory":["127.34"],"上创建视图":["127.34"],"并返回或操作前该元素的值":["127.35"],"将数组中指定的元素设置为给定的值":["127.35"],"并返回该值":["127.35"],"将指定位置上的数组元素与给定的值相减":["127.35"],"并返回相减前该元素的值":["127.35"],"浅拷贝一个对象":["127.36"],"和自定义的异步或者同步可迭代对象":["127.37"],"其会调用自定义迭代钩子":["127.37"],"配合迭代异步生成器":["127.37"],"之中":["127.38"],"零宽反向肯定断言":["127.39"],"decimal":["127.40"],"connector":["127.40"],"punctuation":["127.40"],"匹配各种文字的所有非字母的字符":["127.40"],"bar":["127.41","127.47","134.4"],"nbar":["127.41"],"es9引入了命名捕获组":["127.42"],"允许为每一个组匹配指定一个名字":["127.42"],"既便于阅读代码":["127.42"],"又便于引用":["127.42"],"re":["127.42","206.8","241.9"],"year":["127.42"],"month":["127.42"],"clonedobj":["127.43"],"克隆后的对象":["127.43"],"的回调":["127.44","173.13"],"深度为1":["127.45"],"test1":["127.49","158.5","164.5"],"test2":["127.49"],"trycode":["127.51"],"catchcode":["127.51"],"无法表示":["127.52"],"但是在es10引入":["127.52"],"之后":["127.52"],"这个问题便得到了解决":["127.52"],"以下操作符可以和":["127.52"],"所以在全局环境下":["127.53"],"所以我们有以下例子":["127.54"],"connectedcallback":["127.55"],"textcontent":["127.55"],"customelements":["127.55"],"循环":["128.0"],"每次循环从消息队列中取出第一个任务执行":["128.0"],"而其他线程只需要在合适的时候将任务加入到队列未尾即可":["128.0"],"过去把消息队列简单分为宏队列和微队列":["128.0"],"这种说法目前已无法满足复杂的浏览器环境":["128.0"],"循环会以看起来任意的顺序遍历键名":["129.1"],"in会遍历数组":["129.3"],"不同与":["129.4"],"它可以与":["129.4"],"break":["129.4","181.0","214.3","222.3"],"continue和return":["129.4"],"配合使用":["129.4"],"nodelist对象":["129.6"],"paras":["129.6"],"queryselectorall":["129.6"],"对于每个不同的属性":["129.7"],"语句都会被执行":["129.7"],"不建议使用for":["129.7"],"因为输出的顺序是不固定的":["129.7"],"如果迭代的对象的变量值是null或者undefined":["129.7"],"in不执行循环体":["129.7"],"ddd":["130.3"],"say":["130.4"],"不可枚举的属性默认会被忽略":["130.8"],"执行深拷贝":["130.9"],"抛出错误":["130.9"],"vm44":["130.9"],"等方法的回调函数":["130.12"],"如果是一个字符串":["130.13"],"防止稀疏数组":["131.1","131.3","131.4","131.5","131.6"],"proto":["131.7","131.11"],"mycall":["131.9"],"返回一个函数":["131.10"],"reje":["132.1"],"先出来的结果会被":["132.2"],"或":["132.2","147.3","173.25","173.82","177.9","178.7"],"出去":["132.2"],"一旦状态变化就不会再变":["132.2"],"的作用是将普通值或":["132.4"],"thenable":["132.4"],"对象转为":["132.4"],"e":["133.1","133.2","133.4","236.6","286.65"],"逻辑":["133.2","209.8"],"receive":["133.2"],"waituntil":["133.2"],"clients":["133.2"],"matchall":["133.2"],"在各个页面添加如上的代码":["133.3"],"即可监听到":["133.3"],"的变化":["133.3"],"当某个页面需要发送消息时":["133.3"],"只需要使用我们熟悉的setitem方法即可":["133.3"],"mydata":["133.3","133.7"],"st":["133.3"],"setitem":["133.3"],"形式的消息":["133.4"],"ports":["133.4"],"tx":["133.5"],"transaction":["133.5"],"readwrite":["133.5"],"objectstore":["133.5"],"查询":["133.5","152.8"],"读取数据":["133.5"],"query":["133.5","154.16"],"我这里先用":["133.6"],"closed属性过滤掉已经被关闭的":["133.6"],"窗口":["133.6"],"作为消息发送方的任务就完成了":["133.6"],"下面看看":["133.6"],"作为消息接收方":["133.6"],"它需要做什么":["133.6"],"此时":["133.6"],"一个收到消息的页面就不能那么自私了":["133.6"],"除了展示收到的消息":["133.6"],"它还需要将消息再传递给它所":["133.6"],"知道的人":["133.6"],"打开与被它打开的页面":["133.6"],"我这里通过判断消息来源":["133.6"],"避免将消息回传给发送方":["133.6"],"防止消息在两者间死循环的传递":["133.6"],"该方案会有些其他小问题":["133.6"],"实际中可以进一步优化":["133.6"],"当页面要与其他的同源或非同源页面通信时":["133.7"],"会先给":["133.7"],"发送消息":["133.7"],"frames":["133.7"],"postmessage":["133.7"],"其中为了简便此处将postmessage的第二个参数设为了":["133.7"],"你也可以设为":["133.7"],"indexeddb":["133.9"],"cookie":["133.9","177.10","179.40"],"口口相传模式":["133.9"],"使用路由可以很好地解决这个问题":["134.1"],"有两种实现方式":["134.2"],"hash模式":["134.2"],"触发hashchange事件的几种情况":["134.3"],"浏览器地址栏散列值的变化":["134.3"],"包括浏览器的前进":["134.3"],"后退":["134.3"],"会触发window":["134.3"],"hash值的变化":["134.3"],"从而触发onhashchange事件":["134.3"],"当浏览器地址栏中url包含哈希如":["134.3"],"www":["134.3","175.5","181.0"],"baidu":["134.3"],"不指定的话则为当前的路径":["134.4"],"如果设置了一个跨域网址":["134.4"],"则会报错":["134.4"],"参数设置了一个新的锚点值":["134.4"],"即":["134.4","173.10","173.76","181.0"],"hash":["134.4","154.17","181.0"],"并不会触发":["134.4"],"hashchange":["134.4"],"事件":["134.4","207.5","253.0"],"反过来":["134.4"],"的锚点值变了":["134.4"],"则会在":["134.4"],"对象创建一条浏览记录":["134.4"],"方法设置了一个跨域网址":["134.4"],"报错":["134.4","173.3"],"当前网址为":["134.4"],"mac":["135.0"],"就不一样":["135.0"],"谷歌源码中调用就是针对":["135.0"],"采用unicode字符集对指定的字符串除0":["136.1"],"255以外进行编码":["136.1"],"decodeuri":["136.3"],"张三":["136.4"],"decodeuricomponent":["136.5"],"在encodeuricomponent":["136.6"],"中统统会被编码":["136.6"],"encodeuricomponent":["136.7","178.8"],"3a":["136.7"],"应该使用encodeuricomponent":["136.8"],"它存储着文件的各种属性":["137.0"],"最近一次inode变动的时间":["137.0"],"最近一次访问的时间":["137.0"],"最近一次修改的时间等元信息":["137.0"],"以及权限信息等":["137.0"],"文件夹是一组inode":["137.0"],"包括自身的入口":["137.0"],"父节点的入口以及所有子节点":["137.0"],"其实":["137.0","195.7"],"inode包含的内容不止上面这些":["137.0"],"具体有":["137.0"],"文件的字节数":["137.0"],"文件的user":["137.0"],"文件的group":["137.0"],"文件的读":["137.0"],"写":["137.0"],"执行权限":["137.0"],"时间戳":["137.0"],"ctime":["137.0"],"inode上一次变动的时间":["137.0"],"mtime":["137.0"],"文件内容上一次变动的时间":["137.0"],"atime":["137.0"],"文件上一次打开的时间":["137.0"],"链接数":["137.0"],"即有多少个文件名指向这个inode":["137.0"],"而对软链接来说":["137.1"],"txt":["137.2","286.51"],"inode1":["137.2"],"而不同的文件系统有不同的inode":["137.4"],"在私人目录里创建硬链接":["137.5"],"每个人的修改都能同步到源文件":["137.5"],"但又避免某个人误删就丢掉了文件的问题":["137.5"],"不是很懂":["137.6"],"具体可以看这里":["137.6"],"总结":["137.6"],"rpm":["138.5"],"列出系统中当前运行的进程":["138.6"],"reboot":["138.9"],"重启服务器":["138.9"],"restart":["138.13"],"systemctl":["138.14"],"完整的原始的请求行":["138.21"],"下发给客户端的响应码":["138.21"],"exact":["138.22","236.6"],"off":["138.22","148.2","179.54"],"文件单位":["138.22"],"查找静态资源的路径为其填写路径拼接":["138.23"],"其含义为用户访问":["138.26"],"20分钟":["138.27"],"将其反向代理到":["138.29"],"临时重定向":["138.33"],"故上文配置表示将当前路径永久重定向到":["138.33"],"names":["138.34","221.3"],"允许指定域名":["138.34"],"访问资源":["138.34"],"正则匹配定义可访问资源的网址":["138.34"],"允许":["138.35"],"deny":["138.35"],"缓存7天":["138.37"],"mobile":["138.38","156.1"],"android":["138.38"],"ipod":["138.38","286.58"],"加权":["138.39"],"burst":["138.40"],"nodelay":["138.40"],"最大请求数为5":["138.40"],"且超过的请求不延迟":["138.40"],"含义":["138.40"],"代理服务器和客户端处于同一个局域网内":["139.1"],"客户端明确要访问的服务器地址":["139.1"],"客户端是无感知代理的存在的":["139.2"],"反向代理对外都是透明的":["139.2"],"负载均衡策略":["139.3"],"轮询":["139.3"],"默认":["139.3"],"所有静态请求都由nginx处理":["139.4"],"存放目录为html":["139.4"],"anonymous":["140.0"],"users":["140.0"],"choice":["140.0"],"desktop":["140.0"],"compile":["140.0"],"internal":["140.0"],"cjs":["140.0"],"eval":["140.2"],"实例化都可以用来执行":["140.2"],"yd":["140.3"],"fnstr":["140.5"],"把文件的结果放在exports属性上":["140.5"],"函数接收的是模块对象":["140.5"],"通过p":["140.5"],"ath":["140.5"],"extname":["140.5"],"来获取模块的后缀名":["140.5"],"然后使用":["140.5"],"来加载模块":["140.5"],"定义模块加载方法":["140.5"],"获取扩展名":["140.5"],"extension":["140.5"],"通过后缀加载当前模块":["140.5"],"extensionsextension":["140.5"],"至此":["140.5"],"加载机制基本就写完了":["140.5"],"加载模块的时候传入模块名称":["140.5"],"用于加载模块":["140.7"],"根据相对路径":["140.8"],"把读取到的js包裹一个函数":["140.13"],"01":["141.2"],"arg2":["141.3"],"arg3":["141.3","173.14","173.47"],"arg4":["141.3"],"str2":["141.3"],"lookupservice":["141.4"],"实现给定的ip地址和端口号":["141.4"],"解析为对应的域名":["141.4"],"service":["141.4"],"模块提供了一些基本系统操作函数":["141.5"],"r2":["141.8"],"rl":["141.8"],"isabsolute判断是否是绝对路径":["141.8"],"isabs1":["141.8"],"isabsolute":["141.8"],"isabs2":["141.8"],"adduser":["142.1"],"view":["142.5","200.1"],"发布自己开发的工具包":["142.12"],"然后当前目录执行npm":["142.13"],"moderate":["142.27"],"存在的问题":["142.29"],"发一版测一版":["143.1"],"待发布的npm包":["143.2"],"去除软链":["143.3"],"projects":["143.5"],"下边两步的顺序":["143.6"],"sudo":["143.9"],"来执行的":["144.1"],"安装这个依赖的时候":["144.1"],"就会node":["144.1"],"bin":["144.1"],"目录中创建":["144.1"],"好vue":["144.1"],"为名的几个可执行文件了":["144.1"],"cli":["144.2","144.3","195.7"],"pathext":["144.4"],"查找要执行的程序":["144.6"],"如果找到则运行":["144.6"],"没有找到则从全局的":["144.6"],"同伴依赖":["145.2"],"bundleddependencies":["145.2"],"显示设置版本号为":["145.3"],"可以加上":["145.6"],"force后缀来强制执行":["145.6"],"如果不想让npm":["145.6"],"能带来更小的图片体积":["146.2"],"而且拥有肉眼识别无差异的图像质量":["146.2"],"缺点就是兼容性并不好":["146.2"],"在浏览器的主渲染机制介入前就进行预加载":["146.3"],"这一机制使得资源可以更早的得到加载并可用":["146.3"],"且更不易阻塞页面的初步渲染":["146.3"],"prerender":["146.4"],"就可以使用懒执行":["146.5"],"先设置图片标签的":["146.6"],"并且对于":["146.7"],"标签的":["147.0"],"值替换为存放在":["147.0"],"pagey":["147.1"],"页面滚动到起点时":["147.1"],"clienty":["147.1"],"可以为负":["147.2"],"负值表示右下角作为起点":["147.2"],"正常是左上角作为起点":["147.2"],"还有派生":["147.2"],"derived":["147.2"],"documentelement":["147.3"],"clientheight":["147.3","169.3"],"getboundingclientrect":["147.4"],"rs":["147.5"],"qiuzcc":["147.5"],"typora":["147.5"],"images":["147.5"],"oss":["147.5"],"shenzhen":["147.5"],"aliyuncs":["147.5"],"202210141603798":["147.5"],"alt":["147.5"],"one":["148.0","206.8"],"large":["148.0"],"rectangle":["148.0"],"whereas":["148.0"],"chunked":["148.0"],"five":["148.0"],"smaller":["148.0"],"boxes":["148.0"],"are":["148.0","195.8","206.2","216.3","217.7","218.4","232.2","236.6"],"collectively":["148.0"],"在上图中能看到单个长任务和被拆分成了5个短任务":["148.0"],"为什么需要拆分任务非常重要":["148.0"],"因为拆分长任务后":["148.0"],"浏览器就有了更多的机会":["148.0"],"可以去处理优先级别更高的工作":["148.0"],"其中就包括用户交互行为":["148.0"],"depiction":["148.0"],"how":["148.0"],"facilitate":["148.0"],"separate":["148.1"],"task":["148.1","148.2","152.6","206.9","206.15"],"savetodatabase":["148.1","148.2"],"sendanalytics":["148.1","148.2","148.4"],"如果需执行的函数先后关系是很明确":["148.1"],"这个方法会非常有效":["148.1"],"然而并不是所有场景都能使用这个方法":["148.1"],"showspinner":["148.2"],"updateui":["148.2","148.4"],"loop":["148.2"],"the":["148.2","173.7","214.0","218.5","221.3","228.1","249.0","256.5"],"first":["148.2","206.1","206.5","241.1","241.10"],"yields":["148.3"],"这个任务队列中有5个任务":["148.3"],"但此时如果正在执行第二个任务而用户想打开某个菜单":["148.3"],"于是点击了这个菜单":["148.3"],"就会让步":["148.3"],"让主线程处理交互事件":["148.3"],"同时也会稍后执行后面剩余的任务":["148.3"],"用户输入后":["148.3"],"的返回值不一定总是":["148.3"],"这是因为操作系统需要时间来通知浏览器交互结束":["148.3"],"也就是说其他代码可能已经开始执行":["148.3"],"比如截图例子中的":["148.3"],"这个方法可能已经在执行了":["148.3"],"即便使用":["148.3"],"还是需要在每个方法限制任务中的方法数量":["148.3"],"analytics":["148.4"],"这和之前的代码大部分相似":["148.5"],"但我们也能看到上面代码并没有使用":["148.5"],"而是使用了":["148.5"],"three":["148.5"],"diagrams":["148.5"],"depicting":["148.5"],"without":["148.5","214.2"],"and":["148.5","175.4","218.8","219.3","228.1","236.6","241.6","252.3","252.6"],"continuation":["148.5"],"timeend":["149.2"],"aaaaa":["149.4"],"慢":["149.4"],"是因为":["149.4"],"另一个是提前加载":["150.0"],"更好的加载页面的首屏内容":["150.1"],"lazyload":["150.2"],"src属性存放真正需要显示的图片的路径":["150.4"],"则认为元素已不在页面的可视区域":["150.5"],"由于后面三张还没有出现":["150.6"],"获得直接预览的良好体验":["150.7"],"应用场景":["150.7"],"看漫画时":["150.7"],"如果我们看完":["150.7"],"预加载":["150.10"],"en":["150.12","154.13","279.2","279.6"],"head":["150.12","154.13","279.5","279.6"],"更好更快地加载页面首屏内容":["150.15"],"网页性能优化":["150.15"],"让用户无需等待":["150.15"],"秒":["151.1"],"用户就会放弃而离开":["151.1"],"bbc":["151.1"],"idle":["151.2","173.13","179.50"],"分别代表着":["151.2"],"如资源加载错误":["151.3"],"该内容可能是文本":["151.4"],"svg等":["151.4"],"fmp":["151.4"],"首次有效绘制":["151.4"],"点击刷新页面按钮或者通过location":["151.5"],"方法显示的页面":["151.5"],"页面通过历史记录和前进后退访问时":["151.5"],"任何其他方式":["151.5"],"performance":["151.6"],"fetchstart":["151.7"],"如果要使用":["151.7"],"请求方法获取新资源":["151.7"],"fetchstart返回的是浏览器发起请求到检测缓存前时间":["151.7"],"否则直接返回浏览器请求时间":["151.7"],"loadeventend":["151.7"],"返回onload完成时间":["151.7"],"当load事件尚未触发时":["151.7"],"它返回零":["151.7"],"返回onload开始时间":["151.7"],"返回":["151.9","162.2","286.43"],"initiatortype":["151.9"],"返回页面url":["151.9"],"所有的属性是基于":["151.10"],"首包时间":["151.12"],"指从页面请求到浏览器开始接收到数据所用的时间":["151.12"],"页面渲染耗时":["151.12"],"等于页面完全加载时间":["151.12"],"加载完成时间":["151.12"],"见下面指标":["151.12"],"页面完全加载时间":["151.12"],"白屏时间":["151.12"],"对象的节点变化":["151.13"],"检查这些变化的节点是否显示在首屏中":["151.13"],"若这些节点在首屏中":["151.13"],"那当前的时间点即为首屏渲染时间":["151.13"],"但是还有首屏内图片的加载时间需要考虑":["151.13"],"getentries":["151.13"],"将跳出率降低":["152.2"],"并将每个页面的页面数量增加":["152.2"],"结账页面加载速度减少":["152.3"],"基于会话的转换增加了":["152.3"],"会感觉系统的响应速度很慢":["152.5"],"但是还可以接受":["152.5"],"而当用户在超过":["152.5"],"没办法确定主要内容什么时候加载完":["152.6"],"长任务":["152.6"],"long":["152.6","179.47"],"当一个任务执行时间超过":["152.6"],"50ms":["152.6"],"时消耗到的任务":["152.6"],"阈值是从":["152.6"],"rail":["152.6"],"模型总结出来的结论":["152.6"],"这个是":["152.6","171.0"],"研究用户感知得出的结论":["152.6"],"类似用户的感知":["152.6"],"耐心的阈值":["152.6"],"超过这个阈值的任务":["152.6"],"集成了":["152.7"],"个指标的":["152.7"],"核心指标有":["152.7"],"请求抓取文档的时间":["152.8"],"这发生在检查本地缓存之前":["152.8"],"1441112692155":["152.8"],"dns":["152.8"],"域名查询开始的时间":["152.8"],"如果使用了本地缓存":["152.8"],"即无":["152.8"],"或持久连接":["152.8"],"domainlookupstart":["152.8","152.9"],"域名查询完成的时间":["152.8"],"domainlookupend":["152.8"],"开始建立连接的时间":["152.8"],"如果是持久连接":["152.8"],"注意如果在传输层发生了错误且重新建立连接":["152.8"],"则这里显示的是新建立的连接开始的时间":["152.8"],"connectstart":["152.8","152.9"],"链接耗时":["152.9"],"connectend":["152.9"],"这个函数返回一个按":["152.10"],"提供的":["152.11"],"万分之一秒":["152.12"],"那么我们可以通过两次调用":["152.12"],"最后计算出":["152.12"],"搜集性能数据指标":["152.13"],"做前端的":["152.13"],"性能监控系统":["152.13"],"那么这两个":["152.13"],"虽然这个也叫":["152.14"],"清除结果等一系列操作":["152.15"],"总览图":["152.15"],"高度概括随时间线的变动":["152.15"],"用于记录网页从最开始的加载到所有资源加载完成这个过程的性能表现":["152.16"],"点击之后":["152.16"],"页面会自动重新加载":["152.16"],"之间的动画":["152.17"],"因各人敏感程度不同":["152.17"],"舒适度因人而异":["152.17"],"以下的动画":["152.17"],"让人感觉到明显的卡顿和不适感":["152.17"],"帧率波动很大的动画":["152.17"],"亦会使人感觉到卡顿":["152.17"],"三者时间不一致":["152.18"],"比如首次渲染过后":["152.18"],"有可能出现":["152.18"],"阻塞":["152.18"],"这种情况下":["152.18"],"就会大于":["152.18"],"onload":["152.18","169.3"],"页面所有资源加载完成事件":["152.18"],"contentful":["152.18"],"页面上尺寸最大的元素绘制时间":["152.18"],"细心的同学可能已经发现了":["152.18"],"这里的指标就是对应我们前面提到的":["152.18"],"性能指标":["152.18"],"所以可以直接在":["152.18"],"was":["152.20","236.6"],"evaluated":["152.20"],"浏览器进入":["152.20"],"引擎时触发":["152.20"],"timer":["152.20","173.13"],"创建计时器":["152.20"],"settimeout":["152.20","157.2","159.5","161.0","173.13","179.27","283.4"],"所消耗的时间":["152.21"],"二是":["152.21"],"如果是比较大型的应用":["152.23"],"打开它可能会直接导致":["152.23"],"卡死":["152.23"],"一睹为快":["152.24"],"我们发现":["152.24"],"tbi":["152.25"],"cls":["152.25"],"是指所创建的网站对所有用户都可用":["152.26"],"可访问":["152.26"],"网站的安全问题":["152.27"],"lighthouse07":["152.28"],"这些应用无处不在":["152.29"],"功能丰富":["152.29"],"使其具有与原生应用相同的用户体验优势":["152.29"],"lighthouse08":["152.29"],"cmd":["152.30","173.95"],"有什么区别呢":["152.30"],"有点傻傻分不清":["152.30"],"总结一句话就是":["152.30"],"它将旧的":["152.30"],"但滚动效果还是要和渲染所有列表项的长列表一样":["153.1"],"列表项下的节点越多":["153.2"],"就越耗费性能":["153.2"],"我们会将计算出来的高度做成":["153.2"],"即可视区域高度":["153.4"],"containerheight":["153.4"],"endidx":["153.5","153.11"],"上下额外多渲染几个":["153.5","153.6","153.7"],"解决滚动时来不及加载元素出现短暂的空白区域的问题":["153.5","153.6","153.7"],"paddingcount":["153.5","153.6","153.7"],"处理越界情况":["153.6","153.7"],"classname":["153.8","169.3","205.2","286.37"],"backgroundcolor":["153.8","178.4"],"当然你也可以用高度数组":["153.10"],"但查找起来并没有优势":["153.10"],"你需要累加":["153.10"],"heights":["153.10"],"这里用了普通的查找":["153.11"],"更好的方式是二分查找":["153.11"],"pos":["153.11"],"上下扩展补充几个":["153.11"],"setlist":["153.12"],"fill":["153.12","171.0","286.38"],"listref":["153.12"],"heightsref":["153.12"],"运行时性能更好":["154.0"],"我们会从以下角度来进行优化":["154.0"],"06":["154.1","159.12"],"08":["154.1"],"缩小构建范围":["154.1"],"构建过程是默认全局查找":["154.1"],"这非常的耗时":["154.1"],"通过手动配置rules中的文件查找范围":["154.1"],"样式经过":["154.2"],"处理":["154.2"],"已经具备":["154.2"],"功能了":["154.2"],"还不行":["154.2"],"的整个过程标识了出来":["154.3"],"第一步":["154.3"],"模式下":["154.3"],"文件系统中某一个文件发生修改":["154.3"],"监听到文件变化":["154.3"],"根据配置文件对模块重新编译打包":["154.3"],"并将打包后的代码通过简单的":["154.3"],"对象保存在内存中":["154.3"],"第二步是":["154.3"],"之间的接口交互":["154.3"],"而在这一步":["154.3"],"主要是":["154.3"],"的中间件":["154.3"],"之间的交互":["154.3"],"不需要清空输出结果":["154.4"],"rules":["154.4","154.5","154.10","154.17"],"用来匹配":["154.4","154.5","154.10","154.17"],"结尾的文件":["154.4","154.5","154.10","154.17"],"数组里面":["154.4","154.5","154.10","154.17"],"执行顺序是从右到左":["154.4","154.5","154.10","154.17"],"oneof":["154.5","154.10","154.17"],"可以将构建过程的":["154.6"],"模板进行缓存":["154.6"],"threads":["154.7"],"os":["154.7"],"cpus":["154.7"],"获取处理样式的loaders":["154.7","154.8"],"getstyleloaders":["154.7","154.8"],"preprocessor":["154.7","154.8"],"minicssextractplugin":["154.7"],"postcssoptions":["154.7","154.8"],"preset":["154.8"],"能解决大多数样式兼容性问题":["154.8"],"是一个术语":["154.9"],"生产模式需要输出":["154.10"],"文件输出到":["154.10"],"目录中":["154.10","154.16"],"clean":["154.10","154.17"],"htmlwebpackplugin":["154.11","154.12"],"单入口":["154.11","154.12"],"entry":["154.11","154.12","286.72"],"多入口":["154.12"],"result2":["154.14"],"以下代码生产模式下会删除":["154.14"],"styl":["154.16","154.17"],"stylus":["154.16","154.17","195.8"],"jpe":["154.16","154.17"],"asset":["154.16","195.9"],"dataurlcondition":["154.16"],"maxsize":["154.16"],"小于10kb的图片会被base64处理":["154.16"],"generator":["154.16","177.7"],"将图片文件输出到":["154.16"],"imgs":["154.16"],"将图片文件命名":["154.16"],"hash值取8位":["154.16"],"使用之前的文件扩展名":["154.16"],"添加之前的query参数":["154.16"],"chunkfilename":["154.17"],"动态导入输出资源命名方式":["154.17"],"assetmodulefilename":["154.17"],"字体等资源命名方式":["154.17"],"注意用hash":["154.17"],"ac":["154.17"],"ss":["154.17"],"sass":["154.17","195.7"],"添加promise代码":["154.18"],"上面时手动全部引用的情况":["154.18"],"这样引入会将所有兼容性代码全部引入":["154.18"],"体积太大了":["154.18"],"我们只想引入":["154.18"],"手动按需引入":["154.18"],"下面展示的代码还可以正常运行":["154.19"],"hotmodulereplacementplugin":["154.20"],"bundleanalyzerplugin":["154.20"],"这里":["154.20"],"让provideplugin在打包一个文件时":["154.20"],"如果发现了该文件中使用到了":["154.20"],"那么就会向其中注入":["154.20"],"其实还有一种写法":["154.20"],"如果我们想在项目中随处使用":["154.20"],"那么我们可以这样写":["154.20"],"无用代码":["155.0"],"功能已废弃但未删除的代码":["155.0"],"但效果很明显":["155.1"],"将非必须存在于主包的代码拆分到相应的分包中":["155.2"],"废弃的代码及时删除":["155.3"],"如报错兜底":["155.4"],"通过精简wxml的结构":["155.5"],"可以有效降低代码包的大小":["155.5"],"这种情况下路劲最短":["155.6"],"组件重命名":["155.6"],"取一个更短的名字":["155.6"],"但其声明只有一次":["155.7"],"唯一的弊端是会导致wxml变大":["155.7"],"终极手段":["155.8"],"理想的方式代码包按需加载":["155.8"],"如果在不支持的版本上会直接报错":["155.9"],"因此综合考虑之后":["155.9"],"只能放弃这种方式":["155.9"],"fc":["156.1"],"flag":["156.1","156.19","216.2","282.2"],"setflag":["156.1"],"的好处":["156.2"],"可以减少不必要的循环和不必要的渲染":["156.2"],"可以减少子组件的渲染次数":["156.2"],"通过特地的依赖进行更新":["156.2"],"可以避免很多不必要的开销":["156.2"],"但要注意":["156.2"],"有时候在配合":["156.2"],"usestate":["156.2","156.26","159.5","159.9","208.3"],"拿不到最新的值":["156.2"],"这种情况可以考虑使用":["156.2"],"useref":["156.2","156.26","159.5","159.9"],"usecallback":["156.2"],"极其类似":["156.2"],"可以说是一模一样":["156.2"],"唯一不同的是":["156.2"],"返回的是函数运行的":["156.2"],"结果":["156.2"],"返回的是":["156.2"],"这个函数是父组件传递子组件的一个函数":["156.2"],"防止做无关的刷新":["156.2"],"其次":["156.2"],"这个组件必须配合":["156.2"],"可视区域高度":["156.3"],"滚动条滚动高度":["156.3"],"用userref":["156.4"],"来缓存":["156.4"],"merge之后的":["156.4"],"lastchildprops":["156.4"],"lastwrapperprops":["156.4"],"里的值":["156.6"],"明白了一上三点我们就可以自己实现一个":["156.6"],"dependencylist":["156.6"],"depsaresame":["156.6"],"olddeps":["156.6"],"deps":["156.6"],"random":["156.7","285.13","291.3"],"nowdata":["156.7"],"组件已卸载":["156.10"],"你好":["156.10"],"我是小杜杜":["156.10"],"时间":["156.11","175.12"],"now":["156.11","195.4","216.2"],"primary":["156.11"],"onclick":["156.11","205.1","205.2"],"更新时间":["156.11"],"效果如下":["156.11"],"在这里会用到":["156.12"],"proxy和reflect的点":["156.12"],"感兴趣的可以看看我的这篇文章":["156.12"],"花一个小时":["156.12"],"ret":["156.13"],"usereactive":["156.13"],"设置为domesy":["156.14"],"对布尔值进行操作":["156.14"],"切换状态":["156.14"],"对数组进行操作":["156.14"],"的类型是":["156.16"],"htmlelement":["156.16","169.3"],"存储对应的effect":["156.17"],"组件的初始化和更新都会执行":["156.17"],"targetelement":["156.17"],"第一遍赋值":["156.17"],"setkey":["156.18"],"click":["156.18","205.2","207.5"],"delay":["156.20","171.0","217.4"],"fnref":["156.20","156.21"],"interval默认为1s":["156.22"],"然后就是倒计时完成后所触发的函数":["156.22"],"parsems":["156.23"],"floor":["156.23","286.12"],"onend":["156.24"],"结束":["156.24"],"距离":["156.24"],"再考虑用":["156.26"],"可以直接使用":["156.26"],"world":["157.0","179.29","205.4"],"changetext":["157.0"],"最好的办法是获取多个更新":["157.1"],"之后进行批量处理":["157.1"],"在settimeout中的更新":["157.2"],"实现一个并发请求函数concurrencyrequest":["158.1","164.1"],"maxnum":["158.1","164.1"],"里面再取出一个进行请求":["158.2","164.2"],"这样依次类推":["158.2","164.2"],"里面的":["158.2","164.2"],"个请求都执行完才终止请求":["158.2","164.2"],"保存序号":["158.3","164.3"],"使result和urls相对应":["158.3","164.3"],"前端会以列表的形式展示目前服务端已产生的所有事件信息":["159.0"],"后面当服务器产生新的事件时":["159.0"],"前端会获取到":["159.0"],"00":["159.1"],"up":["159.2","159.5","206.14","252.6","260.2"],"上面的代码十分简单":["159.2"],"我们实现了一个":["159.2"],"前端每次都会带上上一次的时间戳来请求这个时间点后的最新事件":["159.2"],"接着再来看一下前端的实现":["159.2"],"如果服务端的数据更新并不频繁的话":["159.3"],"这些请求大多都是无用的":["159.3"],"无用的请求会导致服务端的带宽占用增加":["159.3"],"下午12":["159.4","159.12"],"02":["159.4","284.39"],"自动关闭连接":["159.5"],"客户端主动断开连接":["159.5"],"close":["159.5","159.9","175.12","179.49"],"上面的代码中每来一个新的连接我们都会将它挂起来":["159.5"],"保存在set里面":["159.5"],"然后当有新的事件产生时再将所有该客户端没有获取过的事件返回给它":["159.5"],"接着来看一下前端代码的实现":["159.5"],"longpolling":["159.5","159.9"],"useeffect":["159.5","159.9"],"服务端会一直hold住客户端的请求":["159.6"],"这部分请求会占用服务器的资源":["159.6"],"对于某些语言来说":["159.6"],"websocket":["159.7","162.3","175.22"],"09":["159.8"],"03":["159.8"],"上午11":["159.8"],"上面的代码中客户端连接服务端的时候":["159.9"],"服务端会记住客户端的时间戳":["159.9"],"当新事件产生的时候会给客户端推送所有的新事件":["159.9"],"下面是前端代码实现":["159.9"],"适用于服务端数据频繁更新的场景":["159.10"],"和长轮询不同":["159.10"],"服务端可以随时给客户端推送新的信息":["159.10"],"而客户端在拿到信息后不需要重新建立连接或者发送请求":["159.10"],"urlparsed":["159.13"],"pathname":["159.13"],"subscribe":["159.13"],"writehead":["159.13"],"发送现存事件":["159.13"],"因为服务端和客户端的连接是持久的":["159.14"],"所以有新消息的话可以直接推送到客户端":["159.14"],"compatible":["160.0"],"不可配置的":["162.0"],"ƒ":["162.0"],"enumerable":["162.0","173.1","173.85"],"决定了是否可以修改属性描述对象":["162.0"],"也就是说":["162.0","172.0","173.9","173.19","173.25","175.13"],"configurable为false时":["162.0"],"writable":["162.0"],"enumerable和configurable":["162.0"],"都不能被修改":["162.0"],"以及无法被删除":["162.0"],"此路不通":["162.0"],"推倒重来":["162.0"],"有点高大上的思路":["162.0"],"既然":["162.0"],"对象修改不了":["162.0"],"那如果环境中原本就没有":["162.0"],"定义全局变量foo":["162.1"],"foo1":["162.1"],"构造一个":["162.2"],"来包裹需要执行的代码":["162.2"],"代码块的一个函数实例":["162.2"],"withedyourcode":["162.2"],"对外层的window对象没有影响":["162.3"],"并没有打印":["162.3"],"沙箱中对window的所有操作":["162.3"],"都没有影响到外层的window":["162.3"],"实现了隔离的效果":["162.3"],"需求实现":["162.3"],"继续使用上述的":["162.3"],"标签来创建沙箱":["162.3"],"代码主要修改点":["162.3"],"设置":["162.3","172.0"],"blacklist":["162.3"],"黑名单":["162.3"],"添加":["162.3","173.68"],"xmlhttprequest":["162.3"],"来禁止开发者操作dom和调接口":["162.3"],"判断要访问的变量":["162.3"],"是否在当前环境的":["162.3"],"对象中":["162.3"],"不在的直接报错":["162.3"],"实现禁止通过三方库调接口":["162.3"],"设置黑名单":["162.3"],"黑名单中的变量禁止访问":["162.3"],"并作为es6模块导入":["163.0"],"可以实现简单的分发":["163.0"],"但现在系统还存在一些缺陷":["163.0"],"通过允许插件访问":["163.0"],"插件可以读":["163.0"],"写所有betacalc中的代码":["163.0"],"虽然这对于获取和设置":["163.0"],"currentvalue":["163.0"],"很有用":["163.0"],"但是也很危险":["163.0"],"如果一个插件要重新定义一个内部函数":["163.0"],"它可能会为":["163.0"],"和其它插件产生意想不到的结果":["163.0"],"这违反了开闭原则":["163.0"],"该原则规定":["163.0"],"软件中的对象":["163.0"],"类":["163.0"],"模块":["163.0"],"函数等等":["163.0"],"应该对于扩展是开放的":["163.0"],"但是对于修改是封闭的":["163.0"],"函数的工作原理会产生":["163.0"],"需要存储的":["166.0"],"authorization":["166.1","166.5","166.8"],"携带上":["166.1"],"缺点":["166.1","180.0"],"但是这种方法有一个缺点":["166.1"],"一经颁布":["166.1"],"回来":["166.2"],"客户端用新的":["166.2"],"替换原来过期的":["166.2"],"过期":["166.2"],"则需要用户重新登录":["166.2"],"getuserinfo":["166.3","195.3"],"用户登录成功":["166.3"],"result":["166.3","173.98","174.25","217.7"],"replace":["166.5","166.6","214.2","286.64","295.9"],"bearer":["166.5","166.6","166.8"],"user中包含了payload的信息":["166.6"],"verify":["166.6"],"响应拦截器":["166.8"],"refreshtokenapi":["166.9"],"对应的响应格式为":["167.0"],"获取每个展示文章点赞":["167.2"],"如何保证在一个周期内":["167.3"],"这里就可以用到":["167.3"],"防抖":["167.3"],"请求发出后就初始化":["167.4"],"以便用于下次请求":["167.4"],"模拟实现一个":["167.4"],"如动画和输入响应":["168.2"],"viewport":["168.3","171.0","286.47"],"device":["168.3","286.47"],"该方法需要传入一个回调函数作为参数":["168.6"],"initial":["168.7","286.47"],"raf":["168.7"],"requestanimationframe在哪个阶段执行":["168.10"],"建立媒体查询":["168.11"],"执行一个任务中如果生成了微任务":["168.11"],"则执行完任务该后就会执行所有的微任务":["168.11"],"然后再执行下一个任务":["168.11"],"建立css动画":["168.11"],"则执行完该任务后就会执行所有的微任务":["168.11"],"loop事件循环中不一定会去重新渲染屏幕":["168.13"],"会根据浏览器刷新率以及页面性能或是否后台运行等因素判断的":["168.13"],"浏览器的每一帧是比较固定的":["168.13"],"所以故尝试用最短时间挖掘简单的面试题":["168.15"],"但是我相信很多开发者是没有使用过":["168.16"],"requestanimationframe":["168.16"],"具体可以看科普文章":["168.17"],"elapsed":["168.19"],"这里使用":["168.19"],"是回调列表中唯一的标识":["168.20"],"是个非零值":["168.20"],"而且可以说相当熟悉":["168.21"],"timeoutid":["168.23"],"delayedalert":["168.23"],"共用一个编号池":["168.24"],"技术上":["168.24"],"cleartimeout":["168.25","179.27"],"调用周期":["168.25"],"或者是由于已经执行的setinterval的回调函数阻塞导致的":["168.26"],"cb":["168.26"],"最后希望帮忙点点赞":["168.27"],"微任务":["168.28"],"宏任务":["168.28"],"clientwidth":["169.3","286.48"],"parentelement":["169.3"],"方便自定义展示结果":["169.3"],"创建":["169.3","178.7","219.9","220.8","238.0"],"父元素":["169.3"],"relative":["169.3","195.9"],"部分":["169.4"],"mutationobserver":["169.4"],"优化":["169.4"],"以上提到的两种前端实现方案":["169.4"],"都存在一个问题很明显的问题":["169.4"],"那就是用于只要用户通过":["169.4"],"开发者调试工具":["169.4"],"来稍微操作一":["169.4"],"旧能够导致水印失效":["169.4"],"删除对应":["169.4"],"设置对应":["169.4"],"节点的":["169.4"],"样式":["169.4"],"接口提供对":["169.4"],"树监听的能力":["169.4"],"它能够监听":["169.4"],"树属性":["169.4"],"节点本身":["169.4"],"子节点等的变化":["169.4"],"于是优化的思路就是使用":["169.4"],"去监听外部对应":["169.4"],"节点的操作":["169.4"],"只要监听到了就重新渲染水印效果即可":["169.4"],"效果和代码":["169.4"],"在这里插入图片描述":["170.0"],"假设我们要实现这样的一个效果":["170.1","170.13"],"ff6810":["170.2"],"drop":["170.2"],"2px":["170.2"],"1px":["170.2"],"rgba":["170.2","178.4"],"这是一种特别的":["170.4"],"语法":["170.4"],"background":["170.4","275.2"],"transparent":["170.5"],"20rpx":["170.5"],"起始点位于center":["170.5"],"透明色占据20":["170.5"],"pink占据20":["170.5"],"skyblue从45":["170.5"],"skyblue":["170.6","170.11"],"repeat":["170.6"],"上述两个遮罩":["170.8"],"遮罩的形成与2":["170.8"],"2节一致":["170.8"],"这里不再赘述":["170.8"],"都可以形成内凹圆角":["170.8"],"参考":["170.8"],"xboxyan":["170.8"],"实现优惠券的技巧这篇文章":["170.8"],"composite设置重叠区域的展示":["170.8"],"设置source":["170.8"],"只显示重合的地方":["170.8"],"矩形四边分别有1":["170.10"],"linear":["170.15"],"35deg":["170.15"],"c1":["170.15"],"c2":["170.15"],"bgchange":["170.15"],"3s":["170.15"],"infinite":["170.15"],"ease":["170.15"],"alternate":["170.15","208.5"],"reverse":["170.15"],"keyframes":["170.15"],"hue":["170.15"],"rotate":["170.15"],"0deg":["170.15"],"50deg":["170.15"],"bold":["170.15"],"letter":["170.15"],"spacing":["170.15"],"2rpx":["170.15"],"45rpx":["170.15"],"进行css计算":["171.0"],"布局":["171.0"],"重绘过程":["171.0"],"浏览器需要为整个层进行重绘并重新上传到":["171.0"],"造成了极大的性能开销":["171.0"],"介绍下粘性布局":["171.0"],"sticky":["171.0"],"网易":["171.0"],"中的":["171.0","173.52","173.91","177.3","181.0","195.9","220.0"],"值是":["171.0"],"新增的":["171.0"],"设置了":["171.0"],"值后":["171.0"],"在屏幕范围":["171.0"],"时该元素的位置并不受到定位影响":["171.0"],"设置是top":["171.0"],"left等属性无效":["171.0"],"当该元素的位置将要移出偏移范围时":["171.0"],"定位又会变成fixed":["171.0"],"根据设置的left":["171.0"],"top等属性成固定位置的效果":["171.0"],"属性值有以下几个特点":["171.0"],"该元素并不脱离文档流":["171.0"],"仍然保留元素原本在文档流中的位置":["171.0"],"当元素在容器中被滚动超过指定的偏移值时":["171.0"],"元素在容器内固定在指定位置":["171.0"],"亦即如果你设置了top":["171.0"],"50px":["171.0"],"那么在sticky元素到达距离相对定位的元素顶部50px的位置时固定":["171.0"],"不再向上移动":["171.0"],"元素固定的相对偏移是相对于离它最近的具有滚动框的祖先元素":["171.0"],"如果祖先元素都不可以滚动":["171.0"],"那么是相对于viewport来计算元素的偏移量":["171.0"],"说出":["171.0"],"between":["171.0","206.1"],"around":["171.0"],"携程":["171.0"],"布局的内容":["171.0"],"其实就是一个边距的区别":["171.0"],"按水平布局来说":["171.0"],"是两端对齐":["171.0"],"在左右两侧没有边距":["171.0"],"是每个":["171.0"],"子项目左右方向的":["171.0"],"相等":["171.0"],"所以两个item中间的间距会比较大":["171.0"],"的属性分别有哪些":["171.0"],"哔哩哔哩":["171.0"],"过渡动画":["171.0"],"指定过渡的":["171.0"],"duration":["171.0"],"指定过渡所需的完成时间":["171.0"],"timing":["171.0"],"指定过渡函数":["171.0"],"指定过渡的延迟时间":["171.0"],"关键帧动画":["171.0"],"指定要绑定到选择器的关键帧的名称":["171.0"],"动画指定需要多少秒或毫秒完成":["171.0"],"设置动画将如何完成一个周期":["171.0"],"设置动画在启动前的延迟间隔":["171.0"],"iteration":["171.0"],"定义动画的播放次数":["171.0"],"指定是否应该轮流反向播放动画":["171.0"],"规定当动画不播放时":["171.0"],"当动画完成时":["171.0"],"或当动画有一个延迟未开始播放时":["171.0"],"要应用到元素的样式":["171.0"],"play":["171.0","173.46"],"指定动画是否正在运行或已暂停":["171.0"],"块级元素":["172.0"],"总是在新行上开始":["172.0"],"就是每个块级元素独占一行":["172.0"],"默认从上到下排列":["172.0"],"宽度缺少时是它的容器的100":["172.0"],"除非设置一个宽度":["172.0"],"高度":["172.0"],"行高以及外边距和内边距都是可以设置的":["172.0"],"块级元素可以容纳其它行级元素和块级元素":["172.0"],"行内元素":["172.0"],"和其它元素都会在一行显示":["172.0"],"高":["172.0"],"行高以及外边距和内边距可以设置":["172.0"],"宽度就是文字或者图片的宽度":["172.0"],"不能改变":["172.0"],"行级元素只能容纳文本或者其它行内元素":["172.0"],"使用行内元素需要注意的是":["172.0"],"行内元素设置宽度":["172.0"],"无效":["172.0"],"行内元素设置":["172.0"],"但是可以通过":["172.0"],"来设置":["172.0"],"只有左右有效":["172.0"],"上下无效":["172.0"],"属性对行内元素和块级元素进行切换":["172.0"],"主要看第":["172.0"],"三个值":["172.0"],"label的作用是什么":["172.0"],"是怎么用的":["172.0"],"元素不会向用户呈现任何特殊效果":["172.0"],"它为鼠标用户改进了可用性":["172.0"],"当我们在label元素内点击文本时就会触发此控件":["172.0"],"当用户选择该标签时":["172.0"],"浏览器就会自动将焦点转到和标签相关的表单控件上":["172.0"],"最常用label的地方就是表单中的性别单选框了":["172.0"],"当点击文字时也能够自动聚焦绑定的表单控件":["172.0"],"male":["172.0"],"radio":["172.0"],"female":["172.0"],"女":["172.0"],"defineproperty":["173.1","195.4"],"获取对象所有属性名的数组":["173.2"],"任意数组去重":["173.2"],"适配范围光":["173.2"],"参考答案":["173.3","173.36","173.41","173.45","173.50","173.71","173.72","173.83","173.91","173.92"],"报错的位置在":["173.3"],"foo3":["173.5"],"bar3":["173.5"],"解析":["173.5","254.16"],"这个完全是考察的异步的知识":["173.5"],"会执行同步代码":["173.5"],"打印出":["173.5"],"语句是函数体内唯一的语句":["173.8","173.23"],"就不需要":["173.8"],"在上面的例子中":["173.9"],"我们使用了组合继承的方式来实现继承":["173.9"],"可以看到无论是基类上面的属性和方法":["173.9"],"还是子类自己的属性和方法":["173.9"],"都得到了很好的实现":["173.9"],"但是在组合继承中存在效率问题":["173.9"],"比如在上面的代码中":["173.9"],"我们其实调用了两次":["173.9"],"产生了两组":["173.9"],"一组在原型上":["173.9"],"一组在实例上":["173.9"],"我们在执行":["173.9"],"我们是想要":["173.9"],"原型上面的方法":["173.9"],"属性是不需要的":["173.9"],"因为属性之后可以通过":["173.9"],"拿到":["173.9","195.6"],"但是当你":["173.9"],"会实例化一个":["173.9"],"对象出来":["173.9"],"这个对象上面":["173.9"],"属性和方法都有":["173.9"],"下面是一个圣杯模式的示例":["173.9"],"是子类":["173.9"],"是基类":["173.9"],"对象":["173.10","173.76","179.24","209.1","209.3","217.2","218.2","225.0","246.3","258.11"],"值和分别地提供的参数":["173.11"],"参数的列表":["173.11"],"argsarray":["173.11"],"则会将这些异步任务交给异步模块去处理":["173.12"],"然后主线程继续执行后面的同步代码":["173.12"],"当异步任务有了运行结果以后":["173.12"],"就会在任务队列里面放置一个事件":["173.12"],"这个任务队列由事件触发线程来进行管理":["173.12"],"是单线程":["173.13"],"的事件循环分为":["173.13"],"个阶段":["173.13"],"timers":["173.13"],"这个阶段执行":["173.13"],"callbacks":["173.13"],"处理一些上一轮循环中的少数未执行的":["173.13"],"回调":["173.13"],"prepare":["173.13","179.50"],"此方法在集合多个":["173.15"],"的返回结果时很有用":["173.15"],"返回值将会按照参数内的":["173.15"],"顺序排列":["173.15"],"而不是由调用":["173.15"],"一般使用":["173.16"],"将父类构造函数引入子类函数":["173.17"],"在子类函数中做了父类函数的自执行":["173.17"],"复制":["173.17"],"只继承了父类构造函数的属性":["173.17"],"个事件阶段":["173.18"],"依次是捕获阶段":["173.18"],"目标阶段":["173.18"],"冒泡阶段":["173.18"],"捕获":["173.18"],"这样的组合就是":["173.19"],"闭包":["173.19","179.43"],"closure":["173.19"],"必须事先指定所有事件处理程序而导致的":["173.20"],"访问次数":["173.20"],"会延迟整个页面的交互就绪时间":["173.20"],"对事件处理程序过多问题的解决方案就是事件委托":["173.20"],"无变量提升":["173.21"],"不可以重复声明":["173.21"],"用来定义常量":["173.21"],"使用时必须初始化":["173.21"],"即必须赋值":["173.21"],"块作用域由":["173.22"],"总是指向调用它的对象":["173.24"],"如果用作构造函数":["173.24"],"指向创建的对象实例":["173.24"],"箭头函数本身不创建":["173.24"],"也可以说箭头函数本身没有":["173.24"],"中可用的数据或信息的最底层形式或最简单形式":["173.25"],"简单类型的值被称为原始值":["173.25"],"是因为它们是":["173.25"],"不可细化":["173.25"],"数字是数字":["173.25"],"字符是字符":["173.25"],"布尔值是":["173.25"],"虽然":["173.26"],"这个是默认的代码运行环境":["173.27"],"一旦代码被载入":["173.27"],"引擎最先进入的就是这个环境":["173.27"],"根据":["173.28"],"语言的传统":["173.28"],"被设计成可以自动转为":["173.28"],"的设计者":["173.28"],"觉得这样做还不够":["173.28"],"主要有以下两个原因":["173.28"],"像在":["173.28"],"里一样":["173.28"],"被当成一个对象":["173.28"],"person":["173.29","185.6"],"中提供的一种新的异步编程解决方案":["173.30"],"但是它也有问题":["173.30"],"代码并没有因为新方法的出现而减少":["173.30"],"反而变得更加复杂":["173.30"],"同时理解难度也加大":["173.30"],"应用程序一般都全部":["173.31"],"引用放在":["173.31"],"元素中页面的内容后面":["173.31"],"在解析包含的":["173.31"],"代码之前":["173.31"],"页面的内容将完全呈现在浏览器中":["173.31"],"而用户也会因为浏览器窗口显示空白页面的时间缩短而感到打开页面的速度加快了":["173.31"],"有了":["173.31"],"函数运行完毕后再将该函数出栈":["173.32"],"直到所有代码执行完毕":["173.32"],"遇到异步操作":["173.32"],"该属性指向实例对象的原型对象":["173.33"],"原型对象里的":["173.33"],"没有块级作用域":["173.34"],"只有全局作用域和函数作用域":["173.34"],"匿名自执行函数":["173.35"],"这些值本身很简单":["173.37"],"不能够再进行拆分":["173.37"],"由于原始值的数据大小是固定的":["173.37"],"原始值的数据是存储于内存中的栈区里面的":["173.37"],"arg":["173.38","177.8","226.1"],"浅复制":["173.40"],"浅拷贝只复制指向某个对象的指针":["173.40"],"而不复制对象本身":["173.40"],"新旧对象还是共享同一块内存":["173.40"],"答案为":["173.41"],"普通的类型比如":["173.42"],"一般放在栈内存里":["173.42"],"对象放在堆内存里":["173.42"],"声明一个变量":["173.42"],"就分配一些内存":["173.42"],"然后定时进行垃圾回收":["173.42"],"新增一些数组":["173.43"],"字符串等内置构造函数方法":["173.43"],"而不能是任何类型的任意值":["173.44"],"持弱引用":["173.44"],"集合中对象的引用为弱引用":["173.44"],"如果没有其他的对":["173.44"],"中对象的引用":["173.44"],"那么这些对象会被当成垃圾回收掉":["173.44"],"parent2":["173.46"],"我们并不能或者不想频繁触发事件":["173.48"],"这时候就应该用到函数防抖和函数节流":["173.48"],"函数防抖":["173.48"],"debounce":["173.48"],"分钟":["173.49"],"空间维度":["173.51"],"是指执行当前算法需要占用多少内存空间":["173.51"],"因此":["173.51","175.9"],"评价一个算法的效率主要是看它的时间复杂度和空间复杂度情况":["173.51"],"中的事件循环":["173.52"],"和浏览器中的是完全不相同的东西":["173.52"],"采用":["173.52"],"作为":["173.52","232.1"],"的解析引擎":["173.52"],"处理方面使用了自己设计的":["173.52"],"libuv":["173.52"],"是一个基于事件驱动的跨平台抽象层":["173.52"],"请参阅前面第":["173.53","173.88"],"不能跨函数访问":["173.54"],"有变量提升":["173.54"],"如果父作用域还没找到继续向上查找":["173.55","173.75"],"直到全局作用域为止":["173.55","173.75"],"而作用域链":["173.55","173.75"],"就是有当前作用域与上层作用域的一系列变量对象组成":["173.55","173.75"],"它保证了当前执行的作用域对符合访问权限的变量和函数的有序访问":["173.55"],"闭包产生的本质":["173.55"],"当前环境中存在指向父级作用域的引用":["173.55"],"进行中":["173.56"],"fulfilled":["173.56"],"已成功":["173.56"],"rejected":["173.56"],"内层":["173.58"],"reject1":["173.61"],"而proxy则是因为这个内置的proxy对象内部有一套监听机制":["173.62"],"在传入handler对象作为参数构造代理对象后":["173.62"],"一旦代理对象的某个操作触发":["173.62"],"就会进入handler中对应注册的处理函数":["173.62"],"此时我们就可以有选择的使用reflect将操作转发被代理对象上":["173.62"],"来实现继承":["173.63"],"那么现在的最优解是使用圣杯模式":["173.63"],"因此对":["173.65"],"函数可以直接进行":["173.65"],"操作":["173.65"],"种":["173.66"],"并且这个":["173.67"],"无法被修复":["173.67"],"修复会破坏现有的代码":["173.67"],"被定义时":["173.68"],"引擎会为":["173.68"],"原型":["173.68"],"然后再在":["173.68"],"上添加一个":["173.68"],"并让其指向":["173.68"],"的引用":["173.68"],"则返回":["173.69"],"20210813153833385":["173.70"],"基本类型和引用类型的主要区别有以下几点":["173.70"],"存放位置":["173.70"],"如果要销毁一个闭包":["173.73"],"可以":["173.73","265.5"],"把被引用的变量设置为":["173.73"],"离开环境":["173.74"],"标记":["173.74"],"的就回收内存":["173.74"],"工作流程":["173.74"],"垃圾回收器":["173.74"],"对于构造函数来讲":["173.77"],"而不管实际的声明是在哪里进行的":["173.78"],"这就是我们所说的":["173.78"],"提升":["173.78"],"请记住":["173.78"],"比较":["173.79"],"如果不同":["173.79"],"则愿意为你进行一次类型转换":["173.79"],"转换成相同类型后再进行比较":["173.79"],"新增的用来比较两个值是否严格相等的方法":["173.80"],"严格相等":["173.80"],"symbol":["173.81","217.7"],"基本类型也称为简单类型":["173.81"],"getfullyear":["173.82"],"指向":["173.82"],"我不知道这道题是出题人写错了还是故意为之":["173.83"],"都完成并返回成功":["173.84"],"才会调用":["173.84"],"当有一个失败":["173.84"],"都会进":["173.84"],"descriptor":["173.85"],"这样子的输出结果是":["173.87"],"而在es6当中":["173.87"],"写法是这样的":["173.87"],"是利用export":["173.87"],"和import导入的":["173.87"],"的解决":["173.89","175.12"],"当值被":["173.89"],"resolved":["173.89","217.7","219.3"],"的新增知识点":["173.90"],"的新增知识点参阅前面第":["173.90"],"把给定的值转换成":["173.93"],"型":["173.93"],"其实是":["173.94"],"依赖外部状态":["173.94"],"那我们做以下修改":["173.94"],"hi":["173.94"],"savo":["173.94"],"返回的内容":["173.95"],"使用seajs":["173.95"],"支持动态引入依赖文件":["173.95"],"如果看过":["173.96"],"cc":["173.98"],"apply2":["173.98"],"zs":["173.99"],"万能的类型检测方法":["173.99"],"checktype":["173.99"],"从map中查找是否有key":["174.4"],"双端指针left":["174.8"],"arr1":["174.12"],"val":["174.16"],"val为undefined时":["174.16"],"表示未存储":["174.16"],"递归的出口":["174.20"],"将对应结果添加到list中":["174.20"],"注意j的长度范围":["174.21"],"内层循环用于每一轮的数据比较":["174.22"],"注意j的起始范围是":["174.22"],"记录要插入的目标元素":["174.23"],"以中间节点为基准点":["174.24"],"比该节点大的值放到right数组中":["174.24"],"否则放到left数组中":["174.24"],"空间换时间":["174.29"],"treedata存储最后结果":["174.29"],"treedata":["174.29"],"遍历原始数据data":["174.29"],"存到map中":["174.29"],"id为key":["174.29"],"值为数据":["174.29"],"直到它的所有子节点都被遍历完毕":["174.31"],"再遍历第一个节点的子节点":["174.35"],"查找条件":["174.40"],"findtreenode":["174.40"],"所有的右节点比父节点的值大":["174.42"],"遍历右子树的节点":["174.44"],"要求所有右子树的节点都比根节点大":["174.44"],"的所有路径":["174.47"],"找到所有的节点路径":["174.48"],"包含叶子节点和子节点的所有情况之和":["174.48"],"i天的股票价格":["174.50"],"从1开始":["174.52"],"依次判断":["174.52"],"将之前计算的结果存起来":["174.56"],"防止栈溢出":["174.56"],"的滑动窗口":["174.58"],"剔除窗口长度超出范围时左侧的最大值":["174.60"],"比较当前项已有的最大值和之前项最大值":["174.64"],"比如当比较到第三项":["174.64"],"如第三项比第二项大":["174.64"],"所以第三项的计算结果为":["174.64"],"请求缓存":["175.0"],"但很少对":["175.0"],"传参方式不同":["175.0"],"通过查询字符串传参":["175.0"],"通过请求体传参":["175.0"],"安全性":["175.0"],"询问服务器是否支持修改的请求头":["175.1"],"如果服务器支持":["175.1"],"浏览器能够处理的压缩编码":["175.2"],"language":["175.2"],"服务器名称":["175.3"],"connection":["175.3"],"浏览器自动执行":["175.4"],"询问支持的请求方法":["175.4"],"用来跨域请求":["175.4"],"预检请求":["175.4"],"判断目标是否安全":["175.4"],"要求在与代理服务器通信时建立":["175.4"],"管道":["175.4"],"进行tcp通信":["175.4"],"把服务器作为跳板":["175.4"],"让服务器代替用户去访问其他网页":["175.4"],"之后把数据原原本本的返回给用户":["175.4"],"trace":["175.4"],"该方法会让服务器原样返回任意客户端请求的信息内容":["175.4"],"主要":["175.4"],"于测试或诊断":["175.4"],"说说ajax组成部分":["175.4"],"阿贾克斯":["175.4"],"全称":["175.4"],"asynchronous":["175.4"],"异步的js与xml":["175.4"],"说人话":["175.4"],"用js发送异步的网络请求":["175.4"],"异步":["175.4"],"liulongbin":["175.5"],"login":["175.5"],"设置请求头":["175.5"],"post请求才需要设置":["175.5"],"setrequestheader":["175.5"],"非空判断":["175.6"],"如果内容为undefined":["175.6"],"给出提示":["175.6"],"alert":["175.6"],"请选择上传文件":["175.6"],"只有formdata对象才可以上传文件":["175.6"],"file表单的点击":["175.7"],"btnchoose":["175.7"],"iscancel":["175.8"],"canceled":["175.8"],"处理错误":["175.8"],"etag":["175.9"],"unmodified":["175.9"],"等更多可供选择的缓存头来控制缓存策略":["175.9"],"新增了":["175.9"],"字段":["175.9"],"用来指定服务器的域名":["175.9"],"中认为每台服务器都绑定一个唯一的":["175.9"],"地址":["175.9"],"请求消息中的":["175.9"],"并没有传递主机名":["175.9"],"但随着虚拟主机技术的发展":["175.9"],"在一台物理服务器上可以存在多个虚拟主机":["175.9"],"并且它们共享一个ip地址":["175.9"],"因此有了":["175.9"],"这样就可以将请求发往到同一台服务器上的不同网站":["175.9"],"相对于":["175.9"],"这样可以提高同时请求的数目":["175.10"],"加快页面图片的获取速度":["175.10"],"可以一瞬间加载出来很多资源":["175.10"],"http2支持多路复用":["175.10"],"可以在一个tcp连接中发送多个http请求":["175.10"],"http2的头部压缩算法是怎样的":["175.10"],"http2的头部压缩是hpack算法":["175.10"],"在客户端和服务器两端建立":["175.10"],"字典":["175.10"],"用索引号表示重复的字符串":["175.10"],"采用哈夫曼编码来压缩整数和字符串":["175.10"],"可以达到50":["175.10"],"的高压缩率":["175.10"],"在客户端和服务器端使用":["175.10"],"首部表":["175.10"],"来跟踪和存储之前发送的键值对":["175.10"],"对于相同的数据":["175.10"],"不再通过每次请求和响应发送":["175.10"],"首部表在http":["175.10"],"2的连接存续期内始终存在":["175.10"],"由客户端和服务器共同渐进地更新":["175.10"],"每个新的首部键值对要么被追加到当前表的末尾":["175.10"],"要么替换表中之前的值":["175.10"],"http请求报文的是什么样的":["175.10"],"请求报":["175.10"],"有4部分组成":["175.10"],"空":["175.10"],"请求体":["175.10"],"其中":["175.10"],"法字段":["175.10"],"url字段":["175.10"],"http协议版本字段":["175.10"],"它们":["175.10"],"空格分隔":["175.10"],"请求头部由关键字":["175.10"],"值对组成":["175.10"],"每":["175.10"],"对":["175.10","179.31"],"关键字和值":["175.10"],"英":["175.10"],"冒号":["175.10"],"分隔":["175.10"],"产":["175.10"],"请求的浏览器类型":["175.10"],"accept":["175.10"],"客户端可识别的内容类型列表":["175.10"],"请求的主机名":["175.10"],"允许多个域名同处":["175.10"],"个ip地址":["175.10"],"即虚拟主机":["175.10"],"put等请求携带的数据":["175.10"],"http响应报文的是什么样的":["175.10"],"由网络协议版本":["175.10"],"状态码和状态码的原因短语组成":["175.10"],"响应头":["175.10"],"响应部":["175.10"],"响应体":["175.10"],"服务器响应的数据":["175.10"],"http协议的优点和缺点":["175.10"],"是超文本传输协议":["175.10"],"它定义了客户端和服务器之间交换报文的格式和方式":["175.10"],"默认使用":["175.10"],"端口":["175.10","179.44"],"它使用":["175.10"],"作为传输层协议":["175.10"],"保证了数据传输的可靠性":["175.10"],"http协议具有以下":["175.10"],"优点":["175.10","175.18"],"支持客户端":["175.10"],"服务器模式":["175.10"],"简单快速":["175.10"],"客户向服务器请求服务时":["175.10"],"只需传送请求方法和路径":["175.10"],"协议简单":["175.10"],"服务器的程序规模小":["175.10"],"因而通信速度很快":["175.10"],"截取了对方发给我们的公钥":["175.11"],"然后将他自己的公钥发送给我们":["175.11"],"tcp什么要三次握手呢":["175.12"],"两次不行吗":["175.12"],"为了确认双方的接收能力和发送能力都正常":["175.12"],"如果是用两次握手":["175.12"],"则会出现下面这种情况":["175.12"],"如客户端发出连接请求":["175.12"],"但因连接请求报文丢失而未收到确认":["175.12"],"于是客户端再重传一次连接请求":["175.12"],"后来收到了确认":["175.12"],"建立了连接":["175.12"],"数据传输完毕后":["175.12"],"就释放了连接":["175.12"],"客户端共发出了两个连接请求报文段":["175.12"],"其中第一个丢失":["175.12"],"第二个到达了服务端":["175.12"],"但是第一个丢失的报文段只是在某些网络结点长时间滞留了":["175.12"],"延误到连接释放以后的某个时间才到达服务端":["175.12"],"此时服务端误认为客户端又发出一次新的连接请求":["175.12"],"于是就向客户端发出确认报文段":["175.12"],"同意建立连接":["175.12"],"不采用三次握手":["175.12"],"只要服务端发出确认":["175.12"],"就建立新的连接了":["175.12"],"此时客户端忽略服务端发来的确认":["175.12"],"也不发送数据":["175.12"],"则服务端一致等待客户端发送数据":["175.12"],"浪费资源":["175.12"],"简述一下tcp的四次挥手":["175.12"],"第一次挥手":["175.12"],"若客户端认为数据发送完成":["175.12"],"则它需要向服务端发送连接释放请求":["175.12"],"第二次挥手":["175.12"],"服务端收到连接释放请求后":["175.12"],"会告诉应用层要释放":["175.12"],"然后会发送":["175.12"],"包":["175.12"],"并进入":["175.12"],"此时表明客户端到服务端的连接已经释放":["175.12"],"不再接收客户端发的数据了":["175.12"],"但是因为":["175.12"],"连接是双向的":["175.12"],"所以服务端仍旧可以发送数据给客户端":["175.12"],"第三次挥手":["175.12"],"服务端如果此时还有没发完的数据会继续发送":["175.12"],"完毕后会向客户端发送连接释放请求":["175.12"],"然后服务端便进入":["175.12"],"第四次挥手":["175.12"],"客户端收到释放请求后":["175.12"],"向服务端发送确认应答":["175.12"],"此时客户端进入":["175.12"],"超时会被抛弃":["175.12"],"若该时间段内没有服务端的重发请求的话":["175.12"],"当服务端收到确认应答后":["175.12"],"为什么需要四次挥手呢":["175.12"],"因为当服务端收到客户端的syn连接请求报文后":["175.12"],"可以直接发送syn":["175.12"],"ack报文":["175.12"],"其中ack报文是用来应答的":["175.12"],"syn报文是用来同步的":["175.12"],"但是关闭连接时":["175.12"],"当服务端收到fin报文时":["175.12"],"很可能并不会立即关闭socket":["175.12"],"所以只能先回复一个ack报文":["175.12"],"告诉客户端":["175.12"],"你发的fin报文我收到了":["175.12"],"只有等到我服务端所有的报文都发送完了":["175.12"],"我才能发送fin报文":["175.12"],"因此不能一起发送":["175.12"],"故需要四次挥手":["175.12"],"tcp粘包是怎么回事":["175.12"],"如何处理":["175.12"],"默认情况下":["175.12","181.0"],"连接会启":["175.12"],"延迟传送算法":["175.12"],"nagle":["175.12"],"算法":["175.12"],"在数据发送之前缓存他们":["175.12"],"如果短时间有多个数据发送":["175.12"],"会缓冲到":["175.12"],"起作":["175.12"],"次发送":["175.12"],"缓冲":["175.12"],"buffersize":["175.12"],"这样可以减少":["175.12"],"消耗提":["175.12"],"性能":["175.12"],"如果是传输":["175.12"],"件的话":["175.12"],"那么根本不":["175.12"],"处理粘包的问题":["175.12"],"来":["175.12"],"个包拼":["175.12"],"个包就好了":["175.12"],"但是如果是多条消息":["175.12"],"或者是别的":["175.12"],"途的数据那么就需要处理粘包":["175.12"],"对于处理粘包的问题":["175.12"],"常":["175.12"],"解析与执行会阻塞文档的解析":["175.13"],"在构建":["175.13"],"解析器若遇到了":["175.13"],"那么它会暂停文档的解析":["175.13"],"将控制权移交给":["175.13"],"引擎":["175.13","179.35"],"引擎运行完毕":["175.13"],"浏览器再从中断的地方恢复继续解析文档":["175.13"],"如果想要首屏渲染的越快":["175.13"],"就越不应该在首屏就加载":["175.13"],"这也是由cookie的隐私安全性决定的":["175.14"],"这样就能够阻止非法获取其他网站的cookie":["175.14"],"每个域名下cookie的数量不能超过20个":["175.14"],"每个cookie的大小不能超过4kb":["175.14"],"并不会随着页面的关闭而消失":["175.15"],"除非主动清理":["175.15"],"不然会永久存在":["175.15"],"代表的是一次会话中所保存的数据":["175.16"],"它一般能够存储":["175.16"],"5m":["175.16"],"或者更大的数据":["175.16"],"它在当前窗口关闭后就失效了":["175.16"],"只能被同一个窗口的同源页面所访问共享":["175.16"],"它一般也能够存储":["175.16"],"因此实现":["175.17"],"从而前端拿到callback函数返回的数据":["175.18"],"实现简单":["175.18"],"代理服务器":["175.20"],"需要做以下几个步骤":["175.20"],"与正常的代码混合在一起了":["175.21"],"浏览器没有办法分辨哪些脚本是可信的":["175.21"],"从而导致了恶意代码的执行":["175.21"],"攻击者可以通过这种攻击方式可以进行以下操作":["175.21"],"获取页面的数据":["175.21"],"如dom":["175.21"],"dos攻击":["175.21"],"发送合理请求":["175.21"],"占用服务器资源":["175.21"],"从而使用户无法访问服务器":["175.21"],"破坏页面结构":["175.21"],"流量劫持":["175.21"],"将链接指向某网站":["175.21"],"防御方法":["175.21"],"可以从浏览器的执行来进行预防":["175.21"],"一种是使用纯前端的方式":["175.21"],"不用服务器端拼接后返回":["175.21"],"不使用服务端渲染":["175.21"],"另一种是对需要插入到":["175.21"],"绘制":["175.22"],"paint":["175.22"],"重绘":["175.22"],"遍历渲染树节点":["175.22"],"调":["175.22"],"gpu":["175.22"],"图形处理器":["175.22"],"将元素呈现出来":["175.22"],"前端如何实现即时通讯":["175.22"],"严格意义上":["175.22"],"http协议只能做到客户端请求服务器":["175.22"],"服务器做出响应":["175.22"],"做不到让服务器主动给客户端推送消息":["175.22"],"那么如果服务器数据更新了":["175.22"],"想要即时通知到客户端怎么办呢":["175.22"],"即时通信需求":["175.22"],"服务器数据一有更新":["175.22"],"希望推送给到浏览器":["175.22"],"提问的回答重心":["175.22"],"即时通信有哪些方案":["175.22"],"为什么使用了其中某一个方案":["175.22"],"基于web的前端":["175.22"],"存在以下几种可实现即时通讯的方式":["175.22"],"vnode":["176.1","179.54","212.1","232.1","233.0"],"的唯一":["176.1"],"inp":["176.2"],"节流":["176.2","179.27"],"高频事件触发":["176.2"],"但在":["176.2"],"秒内只会执行一次":["176.2"],"不容易造成内存泄漏":["176.3"],"本质上是键值对的集合":["176.3"],"正在访问的节点":["176.4"],"关键字实现继承":["176.6"],"子类必须在":["176.6"],"方法中调用":["176.6"],"否则新建实例报错":["176.6"],"因为子类没有自己的":["176.6"],"起什么作用":["176.7"],"等着":["176.9"],"会拖延整个程序的执行":["176.9"],"解决了回调地狱的问题":["176.10"],"可以控制函数的执行":["176.11"],"写一大堆":["176.12"],"ack的包给客户端":["176.15"],"client就可以判断出server具备发送和接受能力":["176.16"],"不会同步更新":["176.17"],"目录之中是否已经存在指定模块":["176.19"],"若存在":["176.19"],"不再重新安装":["176.19"],"一套好的":["177.0"],"架构方案能让":["177.0"],"表现远不如原生页面":["177.1"],"原生能力":["177.1"],"并进一步将":["177.1"],"生成的虚拟节点树":["177.1"],"解析引擎":["177.2"],"在原生开发":["177.2"],"prompt":["177.3"],"alert拦截":["177.3"],"通常使用":["177.3"],"stringbyevaluatingjavascriptfromstring":["177.3"],"并由客户端在":["177.4"],"头部注入对应的":["177.4"],"bridge":["177.4"],"优势":["177.4"],"接入":["177.4"],"开发成本低":["177.4"],"版本":["177.5","184.27","195.9"],"例如只有最新版本的":["177.5"],"才会更新":["177.5"],"灰度":["177.5"],"只有小比例用户会更新":["177.5"],"ab测试":["177.5"],"只有命中的用户会更新":["177.5"],"降级机制":["177.5"],"当用户下载或解压代码包失败时":["177.5"],"需要有套降级方案":["177.5"],"通常有两种做法":["177.5"],"调用插件的":["177.6"],"挂载插件":["177.6"],"然后从入口文件开始执行编译":["177.6"],"按文件类型":["177.6"],"调用相应的":["177.6"],"对模块进行":["177.6"],"并在合适的时机点触发对应的事件":["177.6"],"最后再根据模块":["177.6"],"依赖查找":["177.6"],"到所依赖的模块":["177.6"],"递归执行第三步":["177.6"],"将编译后的所有代码包装成一个个代码块":["177.6"],"chuck":["177.6"],"并按依赖和配置确定":["177.6"],"输出内容":["177.6"],"这个步骤":["177.6"],"仍然可以通过":["177.6"],"进行文件的修改":["177.6"],"得到新的":["177.7"],"新":["177.7"],"转换成":["177.7"],"es5":["177.7"],"特性":["177.7"],"链式传递":["177.7"],"按照配置时相反的顺序链式执行":["177.7"],"基于":["177.7","195.7"],"环境":["177.7"],"拥有":["177.7"],"较高权限":["177.7"],"比如文件的增删查改":["177.7"],"可同步也可异步":["177.7"],"常用":["177.7"],"synchook":["177.8"],"tap":["177.8"],"广播":["177.8"],"中两个最重要的类":["177.8"],"减少此类情况的发生":["177.9"],"但仍需要注意":["177.9"],"spliting":["177.9"],"代码分割":["177.9"],"技术":["177.9"],"将代码分割成多份进行":["177.9"],"懒加载":["177.9"],"异步加载":["177.9"],"避免打包成一份后导致体积过大":["177.9"],"影响页面的首屏加载":["177.9"],"中使用":["177.9"],"splitchunksplugin":["177.9"],"进行拆分":["177.9"],"按":["177.9"],"页面":["177.9"],"拆分":["177.9"],"不同页面打包成不同的文件":["177.9"],"功能":["177.9"],"将类似于播放器":["177.9"],"计算库等大模块进行拆分后再懒加载引入":["177.9"],"提取复用的业务代码":["177.9"],"objext":["177.10"],"obj":["177.10","179.55"],"objtype":["177.10"],"减少":["177.10","286.49"],"体积":["177.10"],"能有效减少每次请求的体积和响应时间":["177.10"],"可以利用":["177.11"],"进行条件引入用":["177.11"],"动态":["177.11","232.1"],"polyfill":["177.11"],"只针对不支持的浏览器引入":["177.11"],"图片优化":["177.11"],"根据业务场景":["177.11"],"分清轻重缓急":["177.12"],"重要的元素优先渲染":["177.12"],"视窗内的元素优先渲染":["177.12"],"服务端渲染":["177.12","181.0"],"ssr":["177.12","210.2","214.0","239.1","252.5"],"减少首屏需要的数据量":["177.12"],"剔除冗余数据和请求":["177.12"],"控制好缓存":["177.12"],"对数据":["177.12"],"页面进行合理的缓存":["177.12"],"页面的请求使用流的形式进行传递":["177.12"],"通常我们无法直接访问谷歌服务器":["177.13"],"但是通过访问一台国外的服务器":["177.13"],"再由这台服务器去请求谷歌返回给用户":["177.13"],"用户即可访问谷歌":["177.13"],"代理服务器属于":["177.13"],"客户端层":["177.13"],"称之为正向代理":["177.13"],"代理服务器是":["177.13"],"为用户服务":["177.13"],"对于用户是透明的":["177.13"],"用户知道自己访问代理服务器":["177.13"],"对内容服务器来说是":["177.13"],"隐藏":["177.13"],"内容服务器并无法分清访问是来自用户或者代理":["177.13"],"反向代理":["177.13"],"用户访问头条的反向代理网关":["177.13"],"通过网关的一层处理和调度后":["177.13"],"再由网关将访问转发到内部的服务器上":["177.13"],"返回内容给用户":["177.13"],"服务端层":["177.13"],"因此称为反向代理":["177.13"],"通常代理服务器与内部内容服务器会隶属于同一内网或者集群":["177.13"],"为内容服务器服务":["177.13"],"对用户是隐藏的":["177.13"],"用户不清楚自己访问的具体是哪台内部服务器":["177.13"],"能有效保证内部服务器的":["177.13"],"稳定与安全":["177.13"],"反向代理的好处":["177.13"],"安全与权限":["177.13"],"用户访问必须通过反向代理服务器":["177.13"],"也就是便可以在做这层做统一的请求校验":["177.13"],"过滤拦截不合法":["177.13"],"危险的请求":["177.13"],"从而就能更好的保证服务器的安全与稳定":["177.13"],"负载均衡":["177.13"],"能有效分配流量":["177.13"],"最大化集群的稳定性":["177.13"],"保证用户的访问质量":["177.13"],"负载均衡是基于反向代理下实现的一种":["177.13"],"流量分配":["177.13"],"目的是为了达到服务器资源的充分利用":["177.13"],"以及更快的访问响应":["177.13"],"其实很好理解":["177.13"],"还是以上面银行的例子来看":["177.13"],"通过门口的取号器":["177.13"],"系统就可以根据每个柜台的业务排队情况进行用户的分":["177.13"],"使每个柜台都保持在一个比较高效的运作状态":["177.13"],"避免出现分配不均的情况":["177.13"],"由于用户并不知道内部服务器中的队列情况":["177.13"],"而反向代理服务器是清楚的":["177.13"],"虚拟机对部分需求痛点来说":["177.14"],"其实是有点过重的":["177.14"],"中的一项虚拟化技术":["177.14"],"称为":["177.14"],"容器技术":["177.14"],"lxc":["177.14"],"它在":["177.14"],"进程层面":["177.14"],"模拟出一套隔离的环境配置":["177.14"],"但并没有模拟硬件和完整的操作系统":["177.14"],"因此它完全规避了传统虚拟机的缺点":["177.14"],"在启动速度":["177.14"],"资源利用上远远优于虚拟机":["177.14"],"就是基于":["177.14"],"容器的一种上层封装":["177.14"],"提供了更为简单易用的":["177.14"],"虽有不同":["178.0"],"但同样作为一款":["178.0"],"充分利用主进程的事件循环机制":["178.1"],"核心":["178.1"],"这里可以具象为一个":["178.1"],"数据结构":["178.1"],"instance":["178.1","179.11","219.4","243.1","250.3","256.8"],"指向第一个":["178.1"],"指向父节点":["178.1"],"parent":["178.1","195.8","243.1"],"指向第一个兄弟节点":["178.1"],"sibling":["178.1"],"previous":["178.1"],"链表树遍历算法":["178.1"],"节点保存与映射":["178.1"],"nextstate":["178.2"],"组件被挂载后触发":["178.2"],"可以在更新之前获取最新":["178.2"],"组件更新后调用":["178.2"],"组件即将销毁":["178.2"],"组件已销毁":["178.2"],"componentdidunmount":["178.2"],"使用建议":["178.2"],"中进行事件监听":["178.2"],"并在":["178.2"],"是基于":["178.3"],"事务流完成的事件委托机制":["178.3"],"实现":["178.3"],"也是处于事务流中":["178.3"],"无法在":["178.3"],"后马上从":["178.3"],"上获取更新后的值":["178.3"],"如果需要马上同步去获取新值":["178.3"],"其实是可以传入第二个参数的":["178.3"],"updater":["178.3"],"在回调中即可获取最新值":["178.3"],"原生事件":["178.3"],"反向继承":["178.4"],"inheritance":["178.4"],"inversion":["178.4"],"继承于被包裹组件":["178.4"],"常用于以下操作":["178.4"],"iihoc":["178.4"],"渲染劫持":["178.4"],"highjacking":["178.4"],"条件渲染":["178.4"],"根据条件":["178.4"],"渲染不同的组件":["178.4"],"withloading":["178.4"],"通常为了便于调用":["178.5"],"会有一个":["178.5"],"创建函数":["178.5"],"creater":["178.5"],"funtion":["178.5"],"addlist":["178.5"],"调用就会变成":["178.5"],"用于描述如何修改数据的纯函数":["178.5"],"属于行为名称":["178.5"],"便是修改行为的实质":["178.5"],"一个常规的":["178.5"],"setstate":["178.6"],"生命周期钩子":["178.6"],"类定义中有许多生命周期函数":["178.6"],"而在":["178.6"],"中也提供了一个相应的函数":["178.6"],"这里可以看做":["178.6"],"componentdidupdate":["178.6"],"的结合":["178.6"],"source":["178.6","236.6","275.2"],"接受两个参数":["178.6"],"钩子回调函数":["178.6"],"设置触发条件":["178.6"],"仅当":["178.6","205.16"],"发生改变时才会触发":["178.6"],"钩子在没有传入":["178.6"],"参数时":["178.6"],"默认在每次":["178.6"],"时都会优先调用上次保存的回调中返回的函数":["178.6"],"后再重新调用回调":["178.6"],"组件挂载后执行事件绑定":["178.6"],"中间层并不使用":["178.7"],"是通过一些":["178.7"],"内部调用":["178.7"],"直接读数据库":["178.7"],"此时也可以直接由服务端调用对应的方法获取数据":["178.7"],"这里需要在":["178.7"],"中配置特异性的信息":["178.7"],"用于匹配对应的数据获取方法":["178.7"],"页面路由":["178.7"],"根据规则匹配出对应的数据获取方法":["178.7"],"这里的规则可以自由":["178.7"],"只要能匹配出正确的方法即可":["178.7"],"controller":["178.7"],"matchcontroller":["178.7"],"并将数据":["178.7"],"到里面":["178.7"],"转":["178.8"],"中划线命名":["178.8"],"guo":["178.8"],"dongdong":["178.8"],"函数组合式写法":["178.8"],"tolowercase":["178.8","221.3","295.1","295.7"],"curry":["178.8"],"spliton":["178.8"],"toslug":["178.8"],"好处":["178.8"],"隐藏中间参数":["178.8"],"不需要临时变量":["178.8"],"避免了这个环节的出错几率":["178.8"],"只需关注每个纯函数单元的稳定":["178.8"],"属于同一个":["179.2"],"的两个相邻":["179.2"],"box":["179.2","286.37"],"垂直排列":["179.2"],"css3属性":["179.3"],"flex":["179.3"],"after":["179.6","206.14","286.55"],"br":["179.6"],"只能用于加载":["179.7"],"当解析到":["179.7"],"编译":["179.8"],"转成浏览器可读的真正":["179.8"],"在这层编译之上":["179.8"],"的专注不够导致的":["179.10"],"真正精通并专注于":["179.10"],"为例":["179.11"],"我们常用的":["179.11"],"便是一个构造函数":["179.11"],"因此我们可以通过它构建实例":["179.11"],"则此时":["179.11"],"实例为":["179.11"],"如果实例对象自身不存在该属性":["179.12"],"则沿着原型链往上一级查找":["179.12"],"找到时则输出":["179.12"],"不存在时":["179.12"],"全局上下文":["179.13"],"caller":["179.13"],"逐行":["179.13"],"它存储着该执行上下文中的所有":["179.14"],"变量和函数声明":["179.14"],"函数变量为":["179.15"],"只读":["179.15"],"无法修改":["179.15"],"指向父级变量对象和作用域链":["179.16"],"闭包会产生一个很经典的问题":["179.17"],"多个子函数的":["179.17"],"都是同时指向父级":["179.17"],"是完全共享的":["179.17"],"动态插入":["179.18"],"完全拷贝一个新对象":["179.19"],"修改时原对象不再受到任何影响":["179.19"],"con":["179.20"],"就返回":["179.21"],"函数封装":["179.22"],"继承":["179.22","183.2"],"优先调用对象的":["179.24"],"valueof":["179.24"],"其余引用类型":["179.25"],"后根据":["179.25"],"amd":["179.26"],"defined":["179.26"],"throttle":["179.27"],"每隔一段时间后执行一次":["179.27"],"调用了函数":["179.28"],"既函数中的":["179.28"],"这里可以看成":["179.28"],"继续执行代码":["179.29"],"helloworld":["179.29"],"ending":["179.29"],"代码语法检查":["179.30"],"代码风格检查":["179.30"],"代码格式化":["179.30"],"concat":["179.33"],"连接数组":["179.33"],"不影响原数组":["179.33"],"浅拷贝":["179.33"],"返回截断后的新数组":["179.33"],"不改变原数组":["179.33"],"splice":["179.33","204.3","214.3","284.84"],"返回删除元素组成的数组":["179.33"],"为插入项":["179.33"],"microtask":["179.36"],"jobs":["179.36"],"标记化算法":["179.37"],"进行元素状态的标记":["179.37"],"计算后还需要重新页面布局":["179.38"],"因此是较重的操作":["179.38"],"会触发回流的操作":["179.38"],"页面初次渲染":["179.38"],"浏览器窗口大小改变":["179.38"],"元素尺寸":["179.38"],"可汇总后统一":["179.39"],"一次修改":["179.39"],"尽量使用":["179.39"],"服务器端":["179.40","181.0"],"浏览器":["179.40"],"通常用于存储用户身份":["179.40"],"work":["179.41","206.16"],"向":["179.41","207.4"],"space":["179.42"],"转移到":["179.42"],"清空":["179.42"],"低版本浏览器可能出现":["179.43"],"会导致父级中的变量无法被释放":["179.43"],"较为安全的网络传输协议":["179.44"],"证书":["179.44"],"公钥":["179.44"],"ssl":["179.44"],"加密":["179.44"],"四次挥手":["179.44"],"滑动窗口":["179.44"],"拥塞处理":["179.44"],"无内容":["179.45"],"重置内容":["179.45"],"无副作用":["179.46"],"不修改资源":["179.46"],"定时发送":["179.47"],"poll":["179.47","179.50"],"发送":["179.47"],"服务端接收并确认":["179.48"],"包后发送":["179.48"],"等待回调":["179.50"],"跨站请求伪造":["179.52"],"防护":["179.52"],"新版本中默认是":["179.53"],"microtasks":["179.53"],"清空依赖":["179.54"],"解绑监听":["179.54"],"destroyed":["179.54"],"完成后触发钩子":["179.54"],"上面是":["179.54"],"的声明周期的简单梳理":["179.54"],"接下来我们直接以代码的形式来完成":["179.54"],"的初始化":["179.54","221.2"],"初始化vue实例":["179.54"],"挂载属性":["179.54"],"初始化事件系统":["179.54"],"钩子函数等":["179.54"],"initevent":["179.54","195.4"],"编译slot":["179.54"],"initrender":["179.54"],"触发钩子":["179.54"],"监视对象":["179.55"],"遍历对象":["179.55"],"重新定义对象的每个属性值":["179.55"],"递归子属性":["179.55"],"newprops":["179.56","209.8"],"propspathchs":["179.56"],"遍历新旧属性列表":["179.56"],"查找删除项":["179.56"],"查找修改项":["179.56"],"查找新增项":["179.56"],"forin":["179.56"],"olaprops":["179.56"],"getters":["179.59"],"获取状态":["179.59"],"分成多个小模块":["179.60"],"与原问题性质相同":["179.60"],"递归出口":["179.62"],"的所有左子树值小于":["179.64"],"所有右子树值大于":["179.64"],"遍历节点":["179.64"],"前序遍历":["179.64"],"三等分算法":["179.65"],"将硬币分成3组":["179.65"],"当组件初始化的时候":["180.0"],"会调用mergeoptions方法进行合并":["180.0"],"采用策略模式针对不同的属性进行合并":["180.0"],"如果混入的数据和本身组件的数据有冲突":["180.0"],"采用本身的数据为准":["180.0"],"命名冲突":["180.0"],"数据来源不清晰":["180.0"],"九":["180.0"],"vue的组件data为什么必须是一个函数":["180.0"],"是一个单例模式":["180.0"],"不会有任何的合并操作":["180.0"],"所以根实例不必校验data一定是一个函数":["180.0"],"组件的data必须是一个函数":["180.0"],"是为了防止两个组件的数据产生污染":["180.0"],"如果都是对象的话":["180.0"],"会在合并的时候":["180.0"],"指向同一个地址":["180.0"],"而如果是函数的时候":["180.0"],"合并的时候调用":["180.0"],"会产生两个空间":["180.0"],"十":["180.0"],"请说明nexttick的原理":["180.0"],"nexttick是一个微任务":["180.0"],"nexttick中的回调是在下次dom更新循环结束之后执行的延迟回调":["180.0"],"可以用于获取更新后的dom":["180.0"],"vue中的数据更新是异步的":["180.0"],"使用nexttick可以保证用户定义的逻辑在更新之后执行":["180.0"],"十一":["180.0"],"computed和watch的区别是什么":["180.0"],"computed和watch都基于watcher来实现的":["180.0"],"computed的属性是具备缓存的":["180.0"],"依赖的值不发生变化":["180.0"],"对其取值时计算属性方法不会重复执行":["180.0"],"watch是监控值的变化":["180.0"],"当值发生改变的时候":["180.0"],"会调用回调函数":["180.0"],"十二":["180.0"],"set方法是如何实现的":["180.0"],"vue给对象和数组本身都增加了dep属性":["180.0"],"这里创建了一个白名单和一个黑名单":["180.2"],"表明哪些需要需要做缓存":["180.2"],"哪些不需要做缓存":["180.2"],"以及最大的缓存个数":["180.2"],"缓存的是组件的实例":["180.2"],"用key和value对象保存":["180.2"],"加载的时候":["180.2"],"监控include和exclude":["180.2"],"如果不需要缓存":["180.2"],"直接返回虚拟节点":["180.2"],"如果需要缓存":["180.2"],"就用组件的id和标签名":["180.2"],"生成一个key":["180.2"],"把当前vnode的instance作为value":["180.2"],"存成一个对象":["180.2"],"这就是缓存列表":["180.2"],"如果设置了最大的缓存数":["180.2"],"就删除第0个缓存":["180.2"],"主要包括以下几个模块":["181.0"],"定义了应用状态的数据结构":["181.0"],"可以在这里设置默认的初始状态":["181.0"],"getter":["181.0","225.3","258.5","258.8"],"允许组件从":["181.0"],"中获取数据":["181.0"],"mapgetters":["181.0"],"辅助函数仅仅是将":["181.0"],"映射到局部计算属性":["181.0"],"是唯一更改":["181.0"],"中状态的方法":["181.0"],"且必须是同步函数":["181.0"],"用于提交":["181.0"],"而不是直接变更状态":["181.0"],"可以包含任意异步操作":["181.0"],"允许将单一的":["181.0"],"拆分为多个":["181.0"],"且同时保存在单一的状态树中":["181.0"],"使用过":["181.0"],"说说":["181.0"],"是构建客户端应用程序的框架":["181.0"],"可以在浏览器中输出":["181.0"],"进行生成":["181.0"],"和操作":["181.0"],"也可以将同一个组件渲染为服务端的":["181.0"],"字符串":["181.0"],"将它们直接发送到浏览器":["181.0"],"最后将这些静态标记":["181.0"],"激活":["181.0"],"为客户端上完全可交互的应用程序":["181.0"],"ssr大致的意思就是vue在客户端将标签渲染成的整个":["181.0"],"片段的工作在服务端完成":["181.0"],"服务端形成的html":["181.0"],"片段直接返回给客户端这个过程就叫做服务端渲染":["181.0"],"的优缺点如下":["181.0"],"服务端渲染的优点":["181.0"],"更好的":["181.0"],"页面的内容是通过":["181.0"],"而搜索引擎爬取工具并不会等待":["181.0"],"异步完成后再抓取页面内容":["181.0"],"中是抓取不到页面通过":["181.0"],"获取到的内容":["181.0"],"是直接由服务端返回已经渲染好的页面":["181.0"],"数据已经包含在页面中":["181.0"],"所以搜索引擎爬取工具可以抓取渲染好的页面":["181.0"],"更快的内容到达时间":["181.0"],"首屏加载更快":["181.0"],"会等待所有":["181.0"],"编译后的":["181.0"],"文件都下载完成后":["181.0"],"才开始进行页面的渲染":["181.0"],"文件下载等需要一定的时间等":["181.0"],"所以首屏渲染需要一定的时间":["181.0"],"直接由服务端渲染好页面直接返回显示":["181.0"],"无需等待下载":["181.0"],"文件及再去渲染等":["181.0"],"有更快的内容到达时间":["181.0"],"服务端渲染的缺点":["181.0"],"更多的开发条件限制":["181.0"],"例如服务端渲染只支持":["181.0"],"beforcreate":["181.0"],"两个钩子函数":["181.0"],"这会导致一些外部扩展库需要特殊处理":["181.0"],"才能在服务端渲染应用程序中运行":["181.0"],"并且与可以部署在任何静态文件服务器上的完全静态单页面应用程序":["181.0"],"不同":["181.0","222.10"],"服务端渲染应用程序":["181.0"],"需要处于":["181.0"],"运行环境":["181.0"],"更多的服务器负载":["181.0"],"中渲染完整的应用程序":["181.0"],"显然会比仅仅提供静态文件的":["181.0"],"更加大量占用cpu":["181.0"],"资源":["181.0"],"intensive":["181.0"],"密集":["181.0"],"因此如果你预料在高流量环境":["181.0"],"traffic":["181.0"],"下使用":["181.0"],"请准备相应的服务器负载":["181.0"],"并明智地采用缓存策略":["181.0"],"如果没有":["181.0"],"开发经验的同学":["181.0"],"可以参考本文作者的另一篇":["181.0"],"的实践文章":["181.0"],"踩坑之旅":["181.0"],"里面":["181.0"],"项目搭建以及附有项目源码":["181.0"],"路由模式有几种":["181.0"],"有":["181.0"],"种路由模式":["181.0"],"history":["181.0"],"abstract":["181.0","195.8"],"对应的源码如下所示":["181.0"],"html5history":["181.0"],"hashhistory":["181.0"],"fallback":["181.0","243.2"],"abstracthistory":["181.0"],"process":["181.0","216.1"],"assert":["181.0"],"invalid":["181.0","217.7","241.10"],"种路由模式的说明如下":["181.0"],"值来作路由":["181.0"],"支持所有浏览器":["181.0"],"包括不支持":["181.0"],"的浏览器":["181.0"],"依赖":["181.0","195.9"],"和服务器配置":["181.0"],"具体可以查看":["181.0"],"支持所有":["181.0"],"如果发现没有浏览器的":["181.0"],"路由会自动强制进入这个模式":["181.0"],"能说下":["181.0"],"中常用的":["181.0"],"路由模式实现原理吗":["181.0"],"模式的实现原理":["181.0"],"早期的前端路由的实现就是基于":["181.0"],"来实现的":["181.0"],"其实现原理很简单":["181.0"],"的值就是":["181.0"],"后面的内容":["181.0"],"比如下面这个网站":["181.0"],"它的":["181.0"],"的值为":["181.0","252.2"],"它俩也支持":["183.2"],"并且不是独立的":["183.2"],"而是可以":["183.2"],"互相":["183.2"],"只是具体的形式稍有差别":["183.2"],"对于interface来说":["183.2"],"mytype":["183.4"],"someobj":["183.4"],"支持面向对象编程的概念":["184.1"],"的优势是什么":["184.2"],"类型可以一定程度上充当文档":["184.3"],"const可以防止变量的值被修改":["184.4"],"readonly可以防止变量的属性被修改":["184.4"],"枚举和常量枚举":["184.4"],"常量枚举只能使用常量枚举表达式":["184.4"],"为编程阶段还不清楚类型的变量指定一个类型":["184.5"],"类型的值只能赋给":["184.6"],"本身和":["184.6"],"bob":["184.8"],"decliteral":["184.8"],"的情况下":["184.9"],"必须去声明":["184.9"],"ts2339":["184.10"],"greet":["184.11"],"获取实例的类型进行赋值":["184.15"],"其返回右侧的操作数":["184.16"],"否则返回左侧的操作数":["184.16"],"非空断言运算符":["184.16"],"通过绝对或者相对的路径查找方式":["184.17"],"如果上面的解析失败了":["184.17"],"没有查找到对应的模块":["184.17"],"接口的兼容性":["184.18"],"只要目标类型":["184.18"],"ts2":["184.22"],"不可枚举的属性将会丢失":["184.24"],"反之":["184.25"],"json重新生成文件":["184.28"],"可以通过指定一个其他的tsconfig":["184.28"],"json文件路径":["184.28"],"来继承这个配置文件里的配置":["184.28"],"class等":["184.29"],"成员都默认为public":["184.30"],"的作用是忽略t中的某些属性":["184.32"],"里面的的所有元素集合":["185.1"],"里面都存在":["185.1"],"那么我们可以理解集合":["185.1"],"是集合":["185.1"],"中用接口来定义对象类型":["185.3"],"枚举":["185.3"],"变量":["185.5"],"并只对其中的":["185.7"],"代码进行编译":["185.7"],"编译的相关配置":["186.1"],"支持路径模式匹配":["186.2"],"tslib":["186.3"],"导入辅助工具函数":["186.3"],"isolatedmodules":["186.3"],"将每个文件做为单独的模块":["186.3"],"transpilemodule":["186.3"],"严格的类型检查选项":["186.3"],"启用所有严格类型检查选项":["186.3"],"noimplicitany":["186.3"],"在表达式和声明上有隐含的":["186.3"],"any类型时报错":["186.3"],"strictnullchecks":["186.3"],"启用严格的":["186.3"],"检查":["186.3"],"noimplicitthis":["186.3"],"操作符可以用来获取一个变量或对象的类型":["187.0"],"typeof操作符可以用来判断数据的类":["187.0"],"的话":["188.0"],"需要配合":["188.0"],"类型断言的方式来使用":["188.0"],"可以返回":["189.0"],"sectionref":["190.0"],"span":["190.2"],"demo2":["190.6"],"通过子组件emit传递ref":["190.6"],"info":["191.1"],"在plugin中加入progressplugin这个配置":["191.1"],"张三王五":["191.2"],"默认为webpack":["191.2"],"可以更改":["191.2"],"black":["191.2"],"进度条的颜色":["191.2"],"可以自己设置":["191.2"],"compilationsuccessinfo":["191.3"],"messages":["191.3"],"张三王五跑起来":["191.3"],"原本想着是写在上一篇":["191.4"],"修改为":["192.1","192.2","192.3"],"是上面说的哪一种":["192.4"],"从中分析出模块依赖关系":["193.1"],"进一步递归调用模块处理过程":["193.1"],"直到所有依赖文件都处理完毕":["193.1"],"parse将入口内容":["193.2"],"转换成ast":["193.2"],"作用于打包流程某个或若干个环节":["193.3"],"elimination":["193.4"],"hoisting":["193.4"],"代码混淆":["193.4"],"代码压缩等功能":["193.4"],"用于配置编译产物的目标运行环境":["193.4"],"支持":["193.4"],"electron":["193.4"],"用于配置与":["193.5"],"hmr":["193.5"],"强相关的开发服务器功能":["193.5"],"性能优化类":["193.5"],"可以在代码不运行的状态下":["193.6"],"分析出不需要的代码":["193.6"],"加载额外的":["193.7"],"便断点调试":["193.7"],"不同组件中重复的css可以快速去重":["193.8"],"bundle":["193.8"],"analyzer":["193.8"],"一个webpack的bundle文件分析工具":["193.8"],"递归下去":["193.9"],"编译模块":["193.9"],"递归中根据文件类型和loader配置":["193.9"],"调用所有配置的loader对文件进行转换":["193.9"],"再找出该模块依赖的模块":["193.9"],"再递归本步骤直到所有入口依赖的文件都经过了本步骤的处理":["193.9"],"资源管理":["193.10"],"环境变量":["193.10"],"注入等":["193.10"],"目的是为了解决loader无法实现的功能":["193.10"],"视图层的界面使用":["194.1"],"webview":["194.1"],"进行渲染":["194.1"],"逻辑层运行在":["194.1"],"jscore":["194.1"],"对于事件的分发处理":["194.2"],"微信进行了特殊的处理":["194.2"],"将所有的事件拦截后":["194.2"],"丢到逻辑层交给javascript进行处理":["194.2"],"即为冷启动":["194.4"],"热启动":["194.4"],"这也就为什么一旦页面内存溢出":["194.5"],"页面会奔溃的本质原因了":["194.5"],"希望这个面试图谱能够帮助到大家更好的准备面试":["195.0"],"小程序":["195.0","195.7"],"登录":["195.0"],"unionid和openid":["195.0"],"了解小程序登陆之前":["195.0"],"我们写了解下小程序":["195.0"],"公众号登录涉及到两个最关键的用户标识":["195.0"],"openid":["195.0","197.4"],"验证码输入页面":["195.1"],"传递":["195.2"],"向服务端":["195.2"],"服务端拿到":["195.2"],"结合":["195.3"],"gamenaitveview":["195.4"],"esmodule":["195.4","217.7"],"pageframe":["195.4"],"createevent":["195.4"],"uievent":["195.4"],"weixinjsbridgeready":["195.4"],"dispatchevent":["195.4"],"complete":["195.4"],"readystate":["195.4"],"我们都看到了":["195.4"],"的定义":["195.4"],"分别都有":["195.4"],"这个几个关键方法":["195.4"],"拿":["195.4"],"举例":["195.4"],"中发现这段代码":["195.4"],"callbackid":["195.4"],"在chrome上查看该服务器为":["195.5"],"http2":["195.5"],"checksession":["195.6"],"检查登录态":["195.6"],"并保证没有过期的":["195.6"],"不会被更新":["195.6"],"再调用":["195.6"],"接着用户授权小程序获取用户信息":["195.6"],"小程序拿到加密后的用户数据":["195.6"],"把加密数据和":["195.6"],"传给后端服务":["195.6"],"后端通过":["195.6"],"并解密数据":["195.6"],"大致流程如下":["195.7"],"会判断模版是在远程仓库还是在本地":["195.7"],"如果在本地则会立即跳到第":["195.7"],"步":["195.7"],"反之继续进行":["195.7"],"会从远程仓库下载模版":["195.7"],"并保存到本地":["195.7"],"询问开发者":["195.7"],"等问题":["195.7"],"依据开发者的回答":["195.7"],"沿用了":["195.7"],"中推崇的":["195.7"],"作为构建工具":["195.7"],"但同时提供了一些自己的插件以及配置文件的一些修改":["195.7"],"不再需要":["195.7"],"middleware":["195.7"],"修改成":["195.7"],"hard":["195.7"],"最大的变化是基于":["195.7"],"但是配置方式还是类似":["195.7"],"分环境配置文件":["195.7"],"最终都会编译成小程序支持的目录结构和文件后缀":["195.7"],"综合比较":["195.7"],"对比":["195.7"],"微信小程序":["195.7"],"语法规范":["195.7"],"小程序开发规范":["195.7"],"类vue":["195.7"],"标签集合":["195.7"],"样式规范":["195.7"],"styus":["195.7"],"无组件化机制":["195.7"],"vue规范":["195.7"],"自定义组件规范":["195.7"],"多段复用":["195.7"],"不可复用":["195.7"],"支持h5":["195.7"],"自动构建":["195.7"],"无自动构建":["195.7"],"框架内置":["195.7"],"上手成本":["195.7"],"全新学习":["195.7"],"学习":["195.7"],"数据管理":["195.7"],"不支持":["195.7"],"选型的个人看法":["195.7"],"理由":["195.7"],"原生开发因为不带工程化":["195.7"],"诸如npm包":["195.7"],"未来会引入":["195.7"],"es7":["195.7"],"图片压缩":["195.7"],"pug":["195.7"],"eslint等等不能用":["195.7"],"如果自己要搭工程化":["195.7"],"不如直接使用wepy或mpvue":["195.7"],"mpvue和wepy都可以和小程序原生开发混写":["195.7"],"参考mpvue":["195.7"],"echart":["195.7"],"参考wepy":["195.7"],"而问题在于wepy没有引入webpack":["195.7"],"x依然没有引入":["195.7"],"以上说的这些东西都要造轮子":["195.7"],"作者造或自己造":["195.7"],"没有引入":["195.7"],"是一个重大的硬伤":["195.7"],"社区维护的成熟":["195.7"],"显然更稳定":["195.7"],"轮子更多":["195.7"],"维护":["195.7","254.2"],"也是社区维护的":["195.7"],"是官方的":["195.7"],"的主要开发者只有作者一人":["195.7"],"附上一个contrubutors链接":["195.7"],"另外被官方招安了也是后来的事":["195.7"],"再说腾讯要有精力帮着一起维护好":["195.7"],"为什么不花精力在小程序原生开发上呢":["195.7"],"再来看看":["195.7"],"是美团一个前端小组维护的":["195.7"],"学习成本":["195.7"],"的学习曲线比较平缓":["195.7"],"scoped":["195.8"],"customblocks":["195.8"],"调用mpvue":["195.8"],"js导出的接口并传入上面得到的html模板":["195.8"],"templatecompilerpath":["195.8"],"normalize":["195.8","218.4","232.2"],"defaultloaders":["195.8"],"templatecompileroptions":["195.8"],"extractcss":["195.8"],"getcssextractloader":["195.8"],"styleloaderpath":["195.8"],"cssloaderoptions":["195.8"],"hasbuble":["195.8"],"buble":["195.8"],"bubleoptions":["195.8"],"hasbabel":["195.8"],"babelloaderoptions":["195.8"],"check":["195.8","206.8","221.4","241.9"],"there":["195.8","206.9"],"custom":["195.8"],"loaders":["195.8"],"specified":["195.8"],"via":["195.8"],"otherwise":["195.8"],"defaults":["195.8"],"assign":["195.8","228.1"],"packages":["195.8"],"js的compile接口":["195.8"],"compiled":["195.8","218.4","232.2","252.3","252.6"],"compile方法生产下面的ast":["195.8"],"syntax":["195.8"],"模板":["195.8"],"render函数和staticrenderfns":["195.8"],"attrslist":["195.8"],"attrsmap":["195.8"],"mpvue":["195.9"],"rc":["195.9"],"注意事项":["195.9"],"slot":["195.9"],"文件路径生成错误的问题":["195.9"],"版本还不是很稳定":["195.9"],"对稳定性要求较高的项目建议暂时使用":["195.9"],"移动src":["195.9"],"js中config相关内容到同级目录下main":["195.9"],"需要移动":["195.9"],"subpackages":["195.9"],"packagea":["195.9"],"配置配合升级指南":["195.9"],"本次升级意在调整生成文件目录结构":["195.9"],"对依赖的文件由原来的写死绝对路径该改为相对路径":["195.9"],"做依赖资源引用":["195.9"],"之前写在":["195.9"],"信息":["195.9"],"需要在":["195.9"],"同级目录下新建":["195.9"],"webapck":["195.9"],"中引用的图片不会自动":["195.9"],"配置文件是由":["195.9"],"过去的":["195.9"],"不会处理依赖":["195.9"],"可以将图片放到根目录下":["195.9"],"过去":["195.9"],"copywebpackplugin":["195.9"],"实质也是一堆会在特定时期执行的函数":["196.1"],"同样通过app":["196.3"],"通过component":["196.4"],"onhide":["196.6","196.14"],"小程序从前台进入后台时触发":["196.6"],"onerror":["196.6","217.0"],"请求数据":["196.7"],"onready":["196.7"],"监听页面显示":["196.8"],"ready":["196.8"],"已被初始化为组件的当前值":["196.9"],"程序显示":["196.12"],"程序从前台进":["196.12"],"后台":["196.12"],"只会调":["196.13"],"次":["196.13"],"程序后台运":["196.13"],"或跳转到其他":["196.13"],"给客户端":["197.1"],"就可以获取用户的openid":["197.2"],"都是微信提供的":["197.4"],"可以在管理员后台找到":["197.4"],"微信服务器返回了":["197.4"],"及本次登录的会话密钥":["197.4"],"session":["197.4"],"如服务端本地的系统时间或时间服务器上的标准时间":["197.6"],"做对比":["197.6"],"界面内包含小程序的图标":["198.2"],"名称和加载提示图标":["198.2"],"渲染两个纬度进行切入":["198.4"],"理论上除了小icon":["198.5"],"其他图片资源从网络下载":["198.5"],"图片资源压缩率有限":["198.5"],"列表页的某些数据":["198.6"],"详情页":["198.6"],"没有数据的模块可以进行骨架屏的占位":["198.6"],"在微信小程序中":["198.6"],"预请求":["198.8"],"优秀":["199.1"],"调起微信支付控件":["199.2"],"用户开始输入支付密码":["199.2"],"发起微信支付":["199.4"],"唤醒支付工作台":["199.4"],"进行支付":["199.4"],"接下来的一些列操作都是由用户来操作的包括了微信支付密码":["199.4"],"指纹等验证":["199.4"],"确认支付之后执行鉴权调起支付":["199.4"],"鉴权调起支付":["199.4"],"在微信后台进行鉴权":["199.4"],"可以说小程序的支付变得更加简洁":["199.6"],"用来展示网页的":["200.1"],"渲染引擎来展示":["200.1"],"并且支持前进后退":["200.1"],"浏览历史":["200.1"],"一个线程解析":["200.2"],"公共组件可以实现":["200.3"],"gwx":["200.4"],"结合一些文件路径":["200.4"],"动态数据生成":["200.4"],"virtualdom":["200.4"],"要彻底解决这个问题":["200.5"],"必须提供一个沙箱环境来运行开发者的javascript":["200.5"],"这个沙箱环境不能有任何浏览器相关接口":["200.5"],"只提供纯javascript":["200.5"],"为了更好的让交互和原生":["200.6"],"一样":["200.7"],"responsive":["200.8"],"pixel":["200.8"],"在微信开发者工具的控制台界面":["200.10"],"物理像素与css像素比例":["200.11"],"设备方向":["200.11"],"其他单位并没有转换":["200.12"],"这样的话就可以方便的识别哪里写了rpx单位":["200.12"],"语法解析":["200.14"],"刚看了一下taro最新的文档":["200.14"],"vue本身预编译的代码为js":["200.15"],"这个js是可以在逻辑层中运行由于js":["200.15"],"把vue的template模版提前编译为wxml":["200.16"],"以往我们在开发完网页之后":["201.1"],"发布版本":["201.3"],"然后就可以填写版本信息":["201.4"],"查看应用详情":["201.5"],"发布成功之后则如下":["201.6"],"分支最新代码":["201.8"],"来共同完成系统的功能":["202.1"],"switchtab":["202.3","202.18"],"navigateback可以返回到原页面":["202.4"],"层页面栈的情况下":["202.7"],"我们应该考虑选择":["202.7"],"tabbar":["202.10"],"用于关闭当前页面":["202.12"],"打开到应用内的某个页面":["202.14"],"关闭当前页面":["202.18"],"页面不断出栈":["202.19"],"直到目标返回页":["202.19"],"小程序是一种不需要下载安装即可使用的应用":["203.1"],"它实现了应用":["203.1"],"触手可及":["203.1"],"的梦想":["203.1"],"通过暴露微信的接":["203.2"],"开发者能够拥有更多的能":["203.2"],"然":["203.2"],"在更多的能":["203.2"],"渲染机制":["203.3"],"程序的逻辑层和渲染层是分开的":["203.3"],"小程序可以视为只能用微信打开和浏览的h5":["203.3"],"或是作为阉割版功能的承载体":["203.5"],"流量大":["203.5"],"体积限制":["203.6"],"微信小程序只有2m的大小":["203.6"],"带着问题去读源码是个好的习惯哦":["204.0"],"axios是怎么实现可以创建多个实例的":["204.0"],"axios的拦截器是怎么实现的":["204.0"],"把axios原型上的函数":["204.1"],"比如get":["204.1"],"put等":["204.1"],"复制到instance实例上":["204.1"],"并绑定到context上下文":["204.1"],"看看这个函数的源码":["204.2"],"configorurl":["204.2"],"省略代码":["204.2"],"skipped":["204.2","256.4"],"收集响应拦截器":["204.2"],"requestinterceptorchain":["204.2"],"synchronousrequestinterceptors":["204.2"],"unshiftrequestinterceptors":["204.2"],"interceptor":["204.2"],"收集请求拦截器":["204.2"],"responseinterceptorchain":["204.2"],"throwifrequested":["204.3"],"把取消请求函数加入订阅列表":["204.3"],"listener":["204.3"],"把取消函数从订阅列表中移除":["204.3"],"xsrfheadername":["204.4"],"是携带xsrf令牌值的http头的名称":["204.4"],"在请求的处理上做的很优秀":["204.5"],"但随着业务的或者技术的进步可能你需要跟好的请求库":["204.5"],"给予xhr":["204.5"],"isplainobject":["204.6"],"一个额外的小知识点":["204.6"],"下面的":["204.6"],"如果你需要在事件处理函数运行之后获取事件对象的属性":["205.1"],"你需要调用":["205.1"],"它会将当前的合成事件从事件池中删除":["205.1"],"并允许保留对事件的引用":["205.1"],"事件委托变更":["205.2"],"不支持冒泡":["205.3"],"支持冒泡":["205.3"],"语法可以不引入":["205.4"],"应用程序依然能正常运行":["205.4"],"h1":["205.4"],"新的":["205.4"],"转换为":["205.4"],"由编译器引入":["205.4"],"禁止自己引入":["205.4"],"不过需要注意":["205.5"],"someref":["205.5"],"somesetupmethod":["205.5"],"somecleanupmethod":["205.5"],"问题在于":["205.5"],"instead":["205.6","218.5","228.1"],"ignoring":["205.6"],"v17":["205.6","205.11"],"中修复了这个问题":["205.6"],"组件的行为会与常规函数组件和类组件保持一致":["205.6"],"sourcemap":["205.7"],"的形式自动恢复到原始函数的位置":["205.7"],"而使用":["205.7"],"使用的":["205.8"],"另外":["205.8"],"决定节点是否更新":["205.9"],"react17的":["205.9"],"模式中":["205.10"],"可以同时更新多个状态":["205.10"],"这里参考下文区分几个概念":["205.10"],"v18":["205.12"],"有一个问题就是它不允许组件":["205.13"],"等待数据":["205.13"],"必须收集好所有的数据":["205.13"],"才能开始向客户端发送html":["205.13"],"如果其中有一步比较慢":["205.13"],"都会影响整体的渲染速度":["205.13"],"被":["205.14"],"包裹的会延迟更新的state":["205.14"],"期间可能被其他紧急渲染所抢占":["205.14"],"会在高优先级更新渲染完成之后":["205.14"],"才会渲染低优先级任务的更新":["205.14"],"无法自动识别哪些更新是优先级更高的":["205.14"],"比如用户的键盘输入操作后":["205.14"],"setinputvalue会立即更新用户的输入到界面上":["205.14"],"是一个低优先级的更新":["205.15"],"transitiontest":["205.15"],"usesearchquery":["205.16"],"deferredquery":["205.16"],"memoizing":["205.16"],"htmlfor":["205.17"],"日常开发基本用不到":["205.18"],"可以支持并发读取":["205.19"],"它实现了对外部数据源订阅时不再需要":["205.19"],"库解决在渲染中注入样式的性能问题":["205.20"],"eventcontext":["206.0"],"0b0000010":["206.0"],"discreteeventcontext":["206.0"],"0b0000100":["206.0"],"legacyunbatchedcontext":["206.0","206.8"],"0b0001000":["206.0"],"0b0010000":["206.0"],"0b0100000":["206.0"],"retryaftererror":["206.0"],"avoid":["206.1","216.4"],"choosing":["206.1"],"already":["206.1","206.2","215.2"],"middle":["206.1"],"however":["206.1"],"included":["206.1"],"lanes":["206.1"],"could":["206.1"],"mutated":["206.1"],"perform":["206.1","206.14"],"inside":["206.1","206.8","220.2","232.4","252.6","256.4"],"flushsync":["206.1"],"or":["206.1","218.4","232.2"],"other":["206.1"],"preparefreshstack":["206.1"],"trick":["206.1"],"each":["206.1"],"reset":["206.1","216.2"],"cached":["206.1","216.2"],"values":["206.1","243.1"],"being":["206.2"],"worked":["206.2"],"look":["206.2"],"transition":["206.2"],"range":["206.2","214.2"],"transitionlanes":["206.2"],"lowpriority":["206.3"],"lowschedulerpriority":["206.3"],"idlepriority":["206.3"],"idleschedulerpriority":["206.3"],"nopriority":["206.3"],"noschedulerpriority":["206.3"],"schedulerwithreactintegration":["206.3"],"同步任务":["206.3","206.8"],"synclanepriority":["206.3"],"指向下一个更新":["206.4"],"函数入参为":["206.4"],"circular":["206.5"],"还记得那个更新对象吗":["206.5"],"如果pedding位null":["206.5"],"的更新队列关联起来":["206.6"],"的流程大致如图所示":["206.7"],"make":["206.8","217.7"],"sure":["206.8","217.7"],"pings":["206.8"],"happen":["206.8"],"ve":["206.8"],"started":["206.8"],"markrootsuspended":["206.8"],"workinprogressrootrenderlanes":["206.8"],"requestupdatelanepriority":["206.8"],"reads":["206.8"],"priority":["206.8","236.1"],"pass":["206.8","219.10"],"argument":["206.8"],"获取当前优先级层次":["206.8"],"prioritylevel":["206.8"],"getcurrentprioritylevel":["206.8"],"采用同步更新的方式":["206.8"],"synclane":["206.8"],"unbatchedupdates":["206.8"],"not":["206.8","232.4","239.3","241.6"],"commitcontext":["206.8"],"special":["206.9","236.4"],"nothing":["206.9"],"cancelcallback":["206.9"],"callbackpriority":["206.9"],"nolanepriority":["206.9"],"existing":["206.9"],"may":["206.9","214.0"],"be":["206.9","212.1","216.2","236.4","243.2"],"able":["206.9"],"reuse":["206.9"],"reconciler":["206.10"],"reactfiberworkloop":["206.10"],"中断当前任务":["206.11"],"等待浏览器当前帧执行完毕":["206.11"],"等到":["206.11"],"下一帧空闲":["206.11"],"才会去执行当前任务":["206.11"],"所以不管在":["206.11"],"workloopconcurrent":["206.11"],"还是":["206.11"],"setcurrentdebugfiberindev":["206.12"],"enableprofilertimer":["206.12"],"profilemode":["206.12"],"nomode":["206.12"],"我们翻开":["206.13"],"nexteffect":["206.14"],"had":["206.14"],"certain":["206.14"],"earlier":["206.14"],"by":["206.14","214.3","215.2","236.6","241.6","243.1","252.3","252.6","256.4"],"doing":["206.14"],"multiple":["206.14"],"passes":["206.14"],"schedule":["206.14"],"our":["206.14"],"own":["206.14"],"because":["206.14","215.2","216.3"],"reusing":["206.14"],"ll":["206.14"],"normalpriority":["206.15"],"expirationtime":["206.15","208.5"],"newtask":["206.15"],"taskidcounter":["206.15"],"sortindex":["206.15"],"enableprofiling":["206.15"],"isqueued":["206.15"],"delayed":["206.15"],"timerqueue":["206.15"],"peek":["206.15"],"taskqueue":["206.15"],"还有任务就继续执行":["206.16"],"ismessagelooprunning":["206.16"],"more":["206.16"],"假如浏览器":["206.17"],"每一帧":["206.17"],"执行时间戳高于当前时间":["206.17"],"默认会在模拟冒泡阶段执行":["207.2"],"可以用来阻止事件默认行为":["207.3"],"就会绑定":["207.5"],"比如发现":["207.5"],"onmouseenter":["207.7","207.8"],"enterleaveeventplugin":["207.7"],"onmouseleave":["207.7"],"keyup":["207.8"],"selectionchange":["207.8"],"mouseout":["207.8"],"mouseover":["207.8"],"有不同的处理逻辑":["207.9"],"应用中完全失去了作用":["207.10"],"在react应用中":["207.10"],"上的":["207.11"],"而不是一个字符串":["207.13"],"另一个区别是":["207.13"],"react的所有事件都挂载在document中":["207.14"],"原生事件中如果执行了stoppropagation方法":["207.15"],"它具有与浏览器原生事件相同的接口":["207.16"],"包括stoppropagation":["207.16"],"在所有浏览器中他们工作方式都相同":["207.16"],"每个syntheticevent对象都具有以下属性":["207.16"],"调用eventpluginhub的enqueueputlistener进行事件存储":["207.17"],"获取document对象":["207.17"],"获取绑定事件的元素的唯一标识key":["207.18"],"触发document注册原生事件的回调dispatchevent":["207.19"],"获取到触发这个事件最深一级的元素":["207.19"],"遍历这个元素的所有父元素":["207.19"],"返回不同的事件池":["207.20"],"在事件池中取出合成事件":["207.20"],"能获取":["208.1"],"因为之前讲过":["208.2"],"是函数组件和对应":["208.2"],"fiber":["208.2"],"桥梁":["208.2"],"setnumber":["208.3"],"第一个hooks":["208.3"],"第一次渲染时候":["208.3"],"第一个参数为函数":["208.4"],"执行函数得到初始化state":["208.4"],"memoizedstate":["208.4","208.7"],"basestate":["208.4"],"nowork":["208.5"],"lastrenderedreducer":["208.5"],"currentstate":["208.5"],"currentlyrenderingfiber":["208.7"],"updateeffect":["208.7"],"passiveeffect":["208.7"],"pusheffect":["208.7"],"hookhaseffect":["208.7"],"hookeffecttag":["208.7"],"painting":["208.9"],"就需要用这个":["208.10"],"就是创建并维护一个":["208.12"],"mountworkinprogresshook":["208.13"],"updateworkinprogresshook":["208.14"],"arehookinputsequal":["208.17"],"判断两次":["208.17"],"memo":["209.2"],"缓存":["209.2"],"只有":["209.3"],"变化的时候":["209.3"],"重新创建":["209.3"],"cloneelement":["209.3"],"缓存起来":["209.4"],"第二个参数为一个数组":["209.4"],"存放当前":["209.4"],"只要组件不销毁":["209.5"],"缓存值就一直存在":["209.5"],"都重新计算一些值":["209.6"],"如上也会浅比较处理":["209.7"],"浅比较只会比较基础数据类型":["209.7"],"对于引用类型":["209.7"],"newstate":["209.8"],"nextcontext":["209.8"],"ctor":["209.8"],"更新组件":["209.9","221.8"],"将新老":["209.9"],"变化":["209.11"],"来决定是否渲染组件":["209.11"],"组件渲染":["209.12"],"什么时候需要注意渲染节流":["209.13"],"但是对于以下情况":["209.13"],"值得开发者注意":["209.13"],"需要采用渲染节流":["209.13"],"第一种情况数据可视化的模块组件":["209.13"],"展示了大量的数据":["209.13"],"这种情况比较小心因为一次更新":["209.13"],"可能伴随大量的":["209.13"],"改变":["209.14"],"波及的范围更小":["209.14"],"返回值为缓存的内容":["209.15"],"比起":["209.15"],"parseroptions":["210.0"],"rootnode":["210.0","240.1"],"transformonce":["210.1"],"transformif":["210.1"],"transformmemo":["210.1"],"transformfor":["210.1"],"compat":["210.1","241.1","241.8","241.10"],"createrootcodegen":["210.2"],"信息更佳丰富的":["211.0"],"codegennode":["211.0"],"在后续代码生成的阶段有着非常重要的作用":["211.0"],"在转换过程中":["211.0"],"创建了":["211.0"],"hoisted":["212.1"],"so":["212.1","216.2","219.6","221.3","243.2","252.6"],"will":["212.1","232.4","241.6"],"simpleexpressionnode":["212.1","231.5"],"nodetypes":["212.1","214.0","241.1","241.6","241.10"],"makeblock":["212.1"],"过程的一些配置":["213.0"],"还维护了":["213.0"],"过程中的一些状态数据":["213.0"],"have":["214.0","232.4","236.6"],"been":["214.0"],"replaced":["214.0"],"inject":["214.0","218.8"],"splitting":["214.1"],"logic":["214.1"],"leads":["214.1"],"too":["214.1"],"much":["214.1"],"unnecessary":["214.1"],"complexity":["214.1"],"propsbuildresult":["214.1"],"buildprops":["214.1"],"createarrayexpression":["214.1"],"builddirectiveargs":["214.1"],"directivearguments":["214.1","236.2"],"keep":["214.1"],"isref":["214.2","250.1"],"rval":["214.2"],"operator":["214.2"],"rexp":["214.2"],"rawexp":["214.2"],"rexpstring":["214.2"],"stringifyexpression":["214.2"],"createsimpleexpression":["214.2"],"knownids":["214.2"],"ists":["214.2","226.1"],"removed":["214.2"],"prefix":["214.2","239.3"],"isprefix":["214.2"],"postfix":["214.2"],"todo":["214.2"],"destructure":["214.2"],"very":["214.2"],"both":["214.2","228.1"],"possible":["214.2","218.4","232.2"],"cases":["214.2"],"here":["214.2","221.3"],"altering":["214.2"],"original":["214.2"],"structure":["214.2"],"just":["214.2"],"assume":["214.2"],"leave":["214.3"],"runtime":["214.3","219.10"],"has":["214.3","222.7","236.1","248.2"],"dedicated":["214.3"],"directly":["214.3"],"编译阶段的一个优化策略":["215.1"],"因为静态节点不依赖动态数据":["215.1"],"skip":["215.2","256.5"],"lowest":["215.2"],"cause":["215.2"],"lowered":["215.2"],"guaranteed":["215.2","236.6"],"absence":["215.2"],"函数的外部":["215.3"],"阶段会运行直接单独的逻辑执行":["216.1"],"如果配置了":["216.1"],"shapeflag":["216.2","218.5"],"properly":["216.2"],"unmounted":["216.2"],"resetshapeflag":["216.2"],"prunecache":["216.2"],"getcomponentname":["216.2"],"concretecomponent":["216.2"],"prunecacheentry":["216.2"],"cachekey":["216.2"],"should":["216.2","236.4"],"longer":["216.2"],"kept":["216.2"],"might":["216.2"],"later":["216.2"],"cachedvnode":["216.3"],"reused":["216.3"],"we":["216.3","221.3","228.1","232.4","241.9","252.6"],"going":["216.3"],"mutate":["216.3"],"subtree":["216.4"],"settransitionhooks":["216.4"],"标识移除":["216.5"],"这样下次":["216.5"],"会走普通渲染流程":["216.5"],"由于新的缓存是从":["216.5"],"结尾":["216.5"],"添加的":["216.5"],"当缓存个数超过":["216.5"],"vnodehook":["216.6"],"onvnodeunmounted":["216.6"],"从缓存中直接拿到渲染好的":["216.7"],"并挂在":["216.7"],"fail":["217.0"],"attempts":["217.0"],"函数指向其":["217.1"],"加载成功":["217.2"],"会在":["217.2"],"会再次执行组件的":["217.3"],"在显示":["217.4"],"加载失败的时候要使用的组件":["217.6"],"its":["217.7","243.1"],"interop":["217.7"],"tostringtag":["217.7"],"isobject":["217.7","221.1"],"会通过修改响应式数据的值来触发组件的重新渲染":["217.8"],"渲染真正的组件":["217.8"],"当异步组件加载失败之后":["217.8"],"feature":["218.4","232.2","236.7"],"suspenseimpl":["218.4","232.2"],"passed":["218.4","232.2"],"during":["218.5","220.2","221.3"],"overwriting":["218.5"],"cloned":["218.5"],"clonevnode":["218.5"],"mergeref":["218.5"],"normalizechildren":["218.5","232.2"],"isblocktreeenabled":["218.5"],"currentblock":["218.5"],"shapeflags":["218.5","222.7"],"patchflags":["218.5"],"bail":["218.5","252.6"],"startmeasure":["218.8","219.10"],"mount":["218.8"],"internals":["218.8"],"iskeepalive":["218.8"],"ctx":["218.8","219.6","222.4"],"keepalivecontext":["218.8","222.4"],"slots":["218.8"],"返回的":["218.9"],"createapp的mount":["218.10"],"函数是一个标准的可跨平台的组件渲染流程":["218.10"],"也让跨平台能力实现变得更加容易":["218.11"],"编写的组件会经过编译生成":["218.11"],"在组件的渲染过程中":["218.11"],"会执行":["218.11","221.7","247.0"],"流程主要是通过":["219.1"],"exposeproxy":["219.3"],"withproxy":["219.3"],"provides":["219.3"],"accesscache":["219.3","219.6"],"rendercache":["219.3"],"assets":["219.3"],"directives":["219.3","235.4"],"emits":["219.3"],"propsoptions":["219.3"],"normalizepropsoptions":["219.3"],"emitsoptions":["219.3"],"normalizeemitsoptions":["219.3"],"componentinternalinstance":["219.4","220.3","222.5"],"isssr":["219.4","225.4"],"isinssrcomponentsetup":["219.4"],"observed":["219.6"],"markraw":["219.6"],"publicinstanceproxyhandlers":["219.6"],"exposepropsonrendercontext":["219.6"],"做代理为了后续":["219.7"],"来分析组件中返回的绑定数据":["219.8"],"主要做了":["219.9"],"iscustomelement":["219.10"],"appcontext":["219.10"],"delimiters":["219.10","241.7"],"componentcompileroptions":["219.10"],"finalcompileroptions":["219.10"],"into":["219.10"],"globalcompatconfig":["219.10"],"expect":["219.10"],"耗时少":["219.13"],"setup":["219.15","229.0","232.4"],"函数并处理返回结果":["219.15"],"mounted":["220.1","232.4"],"onbeforeupdate":["220.1"],"beforeupdate":["220.1"],"onupdated":["220.1"],"tracking":["220.2","252.6"],"lifecycle":["220.2"],"they":["220.2"],"potentially":["220.2"],"effects":["220.2"],"pausetracking":["220.2"],"invocation":["220.2"],"assumes":["220.2"],"currentinstance":["220.3","236.1"],"会检测组件实例是否有已注册的beforemount":["220.4"],"bm":["220.4"],"如果有":["220.4","220.5"],"则通过":["220.4","220.5"],"bu":["220.5"],"会遍历子树":["220.6"],"通过递归的方式":["220.6"],"销毁子节点":["220.6"],"遇到组件节点执行":["220.6"],"unmountcomponent":["220.6","236.7"],"遇到普通元素":["220.6"],"dom元素":["220.6"],"如果找不到":["220.7"],"会继续遍历":["220.7"],"在遍历完当前组件实例的":["220.7"],"如果还没有找到":["220.7"],"就会找它的父组件实例":["220.7"],"mixins":["221.1"],"初始化就是":["221.2"],"initprops":["221.2"],"template":["221.3","236.6","241.1","241.8","241.10","252.5","252.6"],"option":["221.3"],"camelized":["221.3"],"normalization":["221.3"],"support":["221.3"],"conversion":["221.3"],"need":["221.3","232.4","241.9","252.5"],"camelize":["221.3"],"isvalid":["221.4"],"isarray":["221.4","251.2","285.10"],"会触发组件的重新":["221.6"],"updatecomponent":["221.7"],"节点信息":["221.8"],"其中会执行":["221.8"],"reactive":["221.9","258.3"],"对象props":["221.10"],"相当于":["221.10"],"子组件的渲染副作用函数":["221.10"],"到方式非常灵活":["221.11"],"需要对他进行一层标准化":["221.11"],"渲染新的子树":["222.2"],"processcommentnode":["222.3"],"mountstaticnode":["222.3"],"patchstaticnode":["222.3"],"activate":["222.4"],"mountcomponent":["222.4"],"parentsuspense":["222.5"],"suspenseboundary":["222.5"],"issvg":["222.5"],"slotscopeids":["222.5"],"isreservedprop":["222.6","236.4"],"hostpatchprop":["222.6","236.4"],"possibilities":["222.7"],"e2":["222.9"],"从头部开始":["222.9"],"依次对比新旧节点":["222.9"],"索引":["222.11"],"对于普通元素的节点":["222.12"],"主要是更新一些属性及其子节点":["222.12"],"子节点的更新又分为多种情况":["222.12"],"不能修改":["223.0"],"只能获取":["223.0"],"如果值传递了":["223.1"],"在开发环境下":["223.1"],"allowrecurse":["223.2"],"deferstop":["223.2"],"onstop":["223.2"],"ontrack":["223.2"],"debuggerevent":["223.2"],"ontrigger":["223.2","255.0"],"dirtry":["224.0"],"计算属性不会重新计算":["224.0"],"当计算属性值被访问的时候":["224.0"],"是组件副作用函数对应的":["225.0"],"effect":["225.0","246.5","247.4","258.5","258.11"],"会判断":["225.0"],"setter":["225.4"],"bindingmetadata":["226.1"],"optimization":["226.1"],"signature":["226.1","229.0"],"offset":["227.1"],"indentlevel":["227.1"],"pure":["227.1"],"helper":["227.1"],"helpernamemap":["227.1"],"payload":["228.1"],"increase":["228.1"],"potential":["228.1","230.2"],"perf":["228.1"],"overhead":["228.1"],"therefore":["228.1"],"imports":["228.1"],"variables":["228.1"],"50b":["228.1"],"cost":["228.1"],"per":["228.1"],"createelementblock":["228.2"],"createelementvnode":["228.2"],"createcommentvnode":["228.2"],"createtextvnode":["228.2"],"createstaticvnode":["228.2"],"resolvecomponent":["228.2"],"inlined":["228.3"],"withscopeid":["228.3"],"directive":["230.1","241.1","241.10"],"implicit":["230.2"],"gennode生成创建":["231.0"],"compound":["231.1"],"gencompoundexpression":["231.1"],"gencomment":["231.1"],"gencallexpression":["231.1"],"newline":["231.4"],"context":["231.5"],"codegencontext":["231.5"],"multilines":["231.6"],"genexpression":["231.7"],"gennode":["231.7"],"主要是用来收集":["232.1"],"过程访问动态子节点":["232.3"],"最后把当前":["232.3"],"恢复到":["232.3"],"父":["232.3"],"存在":["232.3"],"errored":["232.4"],"suspense":["232.4","236.7"],"fragment":["232.4","286.33"],"生成资源声明的代码":["233.0"],"生成创建":["233.0"],"树的代码":["233.0"],"在创建":["233.0"],"对象上面挂载了一些":["234.0"],"当指令需要添加一些事件侦听器":["234.2"],"validatecomponentname":["235.4"],"registered":["235.4"],"validatedirectivename":["235.4"],"进行解析的":["236.0"],"assettypes":["236.1"],"currentrenderinginstance":["236.1","236.2","243.2"],"explicit":["236.1"],"highest":["236.1"],"internalinstance":["236.2"],"warn":["236.2","249.1","252.5"],"unmountchildren":["236.4"],"elements":["236.4"],"sensitive":["236.4"],"keyof":["236.5","242.1"],"objectdirective":["236.5"],"oldbindings":["236.5"],"means":["236.6"],"same":["236.6"],"shape":["236.6"],"at":["236.6"],"contain":["236.6"],"dynamic":["236.6","252.5"],"patchprops":["236.6"],"invokevnodehook":["236.7"],"需要先注册":["237.0"],"然后才能在元素中使用":["237.0"],"过程中":["238.0"],"在参数":["239.2"],"的基础上又拓展了一些配置":["239.2"],"errorcodes":["239.3","241.3"],"字段描述节点标签":["239.4"],"baseparse":["240.0"],"partial":["240.1"],"parsetag":["241.1","241.10"],"tagtype":["241.1","241.10"],"character":["241.1","241.10"],"parseelement":["241.1"],"iscompatenabled":["241.1","241.10"],"compilerdeprecationtypes":["241.1","241.10"],"isspecialtemplatedirective":["241.1","241.10"],"warndeprecation":["241.1","241.10"],"loc":["241.1","241.4","241.10"],"插值的解析":["241.2"],"emiterror":["241.3"],"eof":["241.3"],"abrupt":["241.3"],"closing":["241.3"],"表示是一个注释节点":["241.4"],"表示注释的内容":["241.4"],"注释代码的开头和结束的位置":["241.4"],"expression":["241.6","252.6"],"isstatic":["241.6"],"isconstant":["241.6"],"decide":["241.6"],"transformexpression":["241.6"],"consttype":["241.6"],"constanttypes":["241.6"],"getselection":["241.6"],"rawtext":["241.6"],"endtokens":["241.7"],"cdata":["241.7"],"endindex":["241.7"],"gettextmode":["241.8"],"parsechildren":["241.8"],"inlinetemplateprop":["241.8"],"advancespaces":["241.9"],"attributes":["241.9"],"cursor":["241.9"],"currentsource":["241.9"],"ispretag":["241.9"],"节点保持对子节点数组的引用":["241.12"],"构成了一个树形的数据结构":["241.12"],"defaultparseroptions":["242.1"],"inherits":["243.1"],"when":["243.1","252.6"],"needs":["243.1"],"that":["243.2"],"需要提供其他":["243.13"],"后代组件也不知道数据注入来自于哪里":["243.14"],"然后再给自己的":["243.15"],"对象添加新的属性值":["243.15"],"响应式的核心实现就是通过数据劫持":["244.0"],"在访问数据的时候执行依赖收集":["244.0"],"当对响应式对象调用":["245.2"],"toraw":["245.3"],"trackoptypes":["245.3"],"过程涉及大量的对集合":["246.1"],"trackopbit":["246.2"],"变成了":["246.3"],"为什么要这样":["246.5"],"函数派发通知":["247.1"],"并依据":["247.1"],"中找到对应的":["247.2"],"可以叫做":["247.3"],"unwrapnestedrefs":["248.0"],"响应式对象":["248.1"],"存储到":["248.1"],"类型的对象":["248.1"],"这就是为什么多次执行":["248.1"],"函数返回同一个对象":["248.1"],"basehandlers":["248.1"],"proxyhandler":["248.1"],"collectionhandlers":["248.1"],"操作符会触发":["248.2"],"已经是响应式对象了":["249.0"],"仍然可以变只读的对象":["249.0"],"creates":["249.0"],"readonlyget":["249.1"],"最大区别就是":["249.2"],"内部":["250.0"],"处理了嵌套":["250.0"],"rawvalue":["250.1"],"shallow":["250.1"],"refimpl":["250.1"],"由于可以直接从":["250.2"],"属性中获取其所有的依赖并且遍历执行":["250.2"],"不需要执行":["250.2"],"函数的额外逻辑":["250.2"],"性能提高":["250.2"],"访问了":["250.3"],"的实现就是判断是不是响应式对象":["250.3"],"函数传入的是":["251.0"],"的值是":["251.0"],"shallowreactivehandlers":["251.0"],"实际执行的是":["251.1"],"shallowget":["251.1"],"shallowset":["251.1"],"shallowreadonlymap":["251.2"],"readonlymap":["251.2"],"shallowreactivemap":["251.2"],"reactivemap":["251.2"],"targetisarray":["251.2"],"hasown":["251.2"],"arrayinstrumentations":["251.2"],"是不能渲染的":["252.1"],"needfullchildrennormaliztion":["252.2"],"marker":["252.3"],"added":["252.3"],"withctx":["252.3"],"indicating":["252.3"],"拿到插槽对象了":["252.4"],"子组件插槽部分的":["252.4"],"renderslot":["252.4","252.7"],"函数渲染生成的":["252.4"],"optimized":["252.5"],"detected":["252.5"],"calls":["252.6"],"mess":["252.6"],"force":["252.6"],"invoking":["252.6"],"渲染插槽节点内容":["252.7"],"不同的是":["252.7"],"封装一下":["252.8"],"在子组件渲染的时候":["252.8"],"标签会监听":["253.0"],"vue3":["254.2","254.4"],"的源码":["254.2"],"整体通过":["254.2"],"仅打包需要的":["254.3"],"使打包的整体体积变小了":["254.3"],"需要递归遍历":["254.4"],"对象来达到劫持的深层次变化监听":["254.4"],"编译生成了":["254.5"],"代码不分散":["254.6"],"复用优势更大":["254.6"],"vue2":["254.8","254.26"],"事件监听缓存":["254.9"],"cachehandlers":["254.9"],"是vue3中提供的事件缓存对象":["254.9"],"来渲染的快上很多":["254.10"],"当静态内容大到一个量级的时候":["254.10"],"会用":["254.10"],"有的支持":["254.11"],"直接导入":["254.11"],"有的需要配合打包工具使用":["254.11"],"生成":["254.13"],"渲染转换插件":["254.15"],"渲染器":["254.17"],"包的依赖":["254.20"],"的工具":["254.22"],"检测":["254.23"],"scheduler":["255.0"],"effectscheduler":["255.0"],"effectscope":["255.0"],"recordeffectscope":["255.0"],"的方式检测新添加的":["256.1"],"是否已经存在队列":["256.1"],"isflushing":["256.1"],"在下一个":["256.2"],"tick":["256.2"],"去执行":["256.2"],"flushjobs":["256.2"],"进而执行队列中的任务":["256.2"],"的控制":["256.2"],"comparator":["256.4"],"conditional":["256.4"],"usage":["256.4"],"checkrecursiveupdate":["256.4"],"must":["256.4"],"determined":["256.4"],"rollup":["256.4"],"de":["256.4"],"optimizes":["256.4"],"treeshaking":["256.4"],"seen":["256.5","256.6"],"countmap":["256.5","256.6"],"currently":["256.5"],"flushing":["256.5"],"不能再":["256.6"],"结束后执行":["256.6"],"recursion":["256.8"],"limit":["256.8"],"ownerinstance":["256.8"],"会接受一个包含有关依赖细腻下的调试器事件":["257.1"],"回调函数":["257.2","283.7"],"当响应式对象更新后":["258.1"],"会执行对应的回调函数":["258.1"],"表示数据变化后执行的回调函数":["258.2"],"一些配置项":["258.2"],"source是":["258.3"],"会先执行":["258.5"],"函数求的新值":["258.5"],"实例就是执行前面创建的":["258.5"],"sync":["258.6"],"表示是一个同步的":["258.6"],"数据变化同步执行":["258.6"],"函数内部执行":["258.8"],"访问响应式数据做依赖收集":["258.8"],"还是初始值":["258.9"],"当响应式对象变化":["259.1"],"watcher":["259.2"],"立即执行他的副作用函数":["259.2"],"需要配置":["259.2"],"immediate":["259.2"],"这个响应式对象":["259.3"],"注册一个回调函数":["259.3"],"用完爱不释手":["260.0"],"一个超级牛叉的":["260.0"],"号称是":["260.0"],"世纪的终端":["260.0"],"还未正式发布":["260.0"],"就获得了两千三百万美元的融资":["260.0"],"可以通过下面的链接自行解决":["260.1"],"embiid":["260.1"],"blog":["260.1","271.1"],"传统的终端":["260.2"],"在复制区域命令和输出结果的时候需要全部手动选择":["260.2"],"是可以点选的":["260.2"],"之后可以通过右键菜单进行复制粘贴":["260.2"],"可以选择只复制命令或者输出":["260.2"],"也可以都选":["260.2"],"非常方便":["260.2"],"历史命令":["260.2"],"传统的终端在通过":["260.2"],"down":["260.2"],"键选择历史命令的时候":["260.2"],"一次只能提示一个命令":["260.2"],"的主题":["260.3"],"字体":["260.3","275.2"],"以及紧凑型模式":["260.3"],"害":["260.4"],"登录折腾了好久":["260.4"],"原因我就不多说了":["260.4"],"原因是":["262.0"],"它们都是从":["262.0"],"cdnjs":["262.0"],"上同步的数据":["262.0"],"并不会把所有的":["262.0"],"包进行同步":["262.0"],"所以当你需要的一些":["262.0"],"包没有在":["262.0"],"你得有一个国外手机号":["263.1"],"卢布":["263.2"],"不是香港":["263.3"],"auth":["263.5"],"可以在那个有效期内退回换个号试试":["263.6"],"有人直接把发的电话输入框里":["263.6"],"没去掉区号也可以收到":["263.6"],"这个接码网站很全面":["263.6"],"我演示充值是":["263.6"],"设计稿产出":["265.0"],"产出代码":["265.0"],"前端开发略微修改交付":["265.0"],"如何使用":["265.0"],"接下来我就演示一下如何快速的根据设计稿来产出前端代码":["265.0"],"首先我们拿到一个设计稿":["265.0"],"这里我就在网上搜了一套":["265.0"],"的设计稿来演示":["265.0"],"我们在":["265.0"],"中安装了一个":["265.0"],"的插件":["265.0"],"选择对应":["265.0"],"的项目后点击上传可以看到很轻松的就传到我们的":["265.0"],"项目中":["265.0"],"当然除了":["265.0"],"figama":["265.0"],"的选项供大家选择":["265.1"],"使用最简单的":["265.1"],"复制代码":["265.1"],"也做到了这种代码的生成":["265.2"],"在导入设计稿的时候会自动识别哪些是":["265.2"],"遍历循环了一个":["265.3"],"codefun":["265.4"],"性能优化":["265.5"],"前端插件封装":["265.5"],"等等有意思的事情":["265.5"],"总之如果你想你的前端水平要更加精进的情况下":["265.5"],"减少一些在页面上的投入时间":["265.5"],"现在的工具越来越成熟":["265.5"],"而这些切图工作完全可以":["265.5"],"交给现有的工具去帮助你完成":["265.5"],"jade":["266.0"],"200x300":["269.0"],"cn":["273.1"],"spinners":["274.0"],"可以给自己带来好心情":["275.0"],"可以使用命令修改默认使用zsh":["275.1"],"chsh":["275.1"],"请务必保证插件顺序":["275.2"],"highlighting必须在最后一个":["275.2"],"然后在文件的最后一行添加":["275.2"],"按一下esc调出vi命令":["275.2"],"执行命令使刚才的修改生效":["275.2"],"设置iterm2背景图设置":["275.2"],"更换背景图片方式":["275.2"],"image勾选图片即可":["275.2"],"可选择":["275.2"],"命令补全":["275.2"],"跟代码高亮的安装方式一样":["275.2"],"这也是一个zsh的插件":["275.2"],"叫做zsh":["275.2"],"autosuggestion":["275.2"],"用于命令建议和补全":["275.2"],"autosuggestions":["275.2"],"加上这个插件即可":["275.2"],"插件效果":["275.2"],"有同学说补全命令的字体不太清晰":["275.2"],"与背景颜色太过相近":["275.2"],"其实可以自己调整一下字体颜色":["275.2"],"中有foreground是标准字体颜色":["275.2"],"ansi":["275.2"],"colors中bright的第一个是补全的字体颜色":["275.2"],"解决mac下vscode打开zsh乱码":["275.2"],"在字体册查找是否已经安装":["275.2"],"meslo":["275.2"],"lg":["275.2"],"如果未安装就安装一下":["275.2"],"vscode中配置":["275.2"],"打开settings界面":["275.2"],"搜索":["275.2"],"terminal":["275.2"],"中添加字体":["275.2"],"也可以在vscode的settings":["275.2"],"json文件":["275.2"],"加入":["275.2"],"安装":["276.0"],"marktext安装非常方便":["276.0"],"仅需进入官网下载对应系统的安装包":["276.0"],"并安装即可":["276.0"],"下载地址":["276.0"],"用marktext来写文档还是非常不错的":["276.0"],"尤其是它的实时预览功能":["276.0"],"推荐大家可以试试":["276.0"],"w3":["279.7"],"org":["279.7","282.1"],"tr":["279.7"],"xhtml1":["279.7"],"u":["279.8"],"awesome":["279.9"],"tencent":["280.1"],"outils":["281.1"],"所以它支持":["281.2"],"多达":["281.2"],"多种的动画效果":["281.2"],"matthieua":["281.2"],"scrollreveal":["281.2"],"animatescroll":["281.3"],"jquery滚动到指定位置":["281.3"],"slip":["281.4"],"jq22":["281.5"],"article":["282.2"],"设置每个节点的调用方式":["283.3"],"passrequest":["283.3"],"用于immediate":["283.4"],"false在结束边界调用":["283.4"],"done":["283.6"],"注册事件":["283.7"],"事件名称":["283.7"],"promisemiddleware":["283.10"],"finally":["283.10"],"tps":["284.3","284.4"],"za":["284.6","284.7","284.15","284.71","284.83"],"urn":["284.9"],"btih":["284.9"],"002":["284.16"],"fa":["284.19","284.47"],"mpg":["284.22"],"z0":["284.32","284.55"],"如果你的手机号是用来接收短信":["284.37"],"优先建议选择这一条":["284.37"],"青海":["284.40"],"陕西":["284.40"],"宁夏":["284.40"],"河南":["284.40"],"山东":["284.40"],"048":["284.46"],"ud86a":["284.49"],"ud86c":["284.49","284.66"],"ud86f":["284.49","284.66"],"ud872":["284.49","284.66"],"ud874":["284.49","284.66"],"ud879":["284.49","284.66"],"u2019":["284.53"],"uff08":["284.53"],"uff09":["284.53"],"u300a":["284.53"],"u300b":["284.53"],"udc00":["284.66"],"x40":["284.76"],"u4e00":["284.82"],"u9fa5":["284.82"],"reduce":["285.1"],"comments":["285.14"],"insertadjacentelement":["286.1"],"beforeend":["286.1"],"tolocalelowercase":["286.2"],"newarr":["286.8"],"email":["286.13"],"邮箱":["286.13"],"money":["286.13"],"金额":["286.13"],"小数点2位":["286.13"],"newobj":["286.14"],"isundef":["286.20"],"isdef":["286.21"],"0xffffff":["286.22"],"blackberry":["286.25"],"iemobile":["286.25"],"navigator":["286.26"],"birthday":["286.28"],"substring":["286.28"],"gender":["286.28"],"newitem":["286.30"],"cirnum":["286.33"],"文档碎片":["286.33"],"拼凑好后一次性插入节点中":["286.33"],"createdocumentfragment":["286.33"],"生成从0到目标数字对应的div":["286.33"],"ele":["286.33"],"innerhtml":["286.33"],"datalist":["286.37"],"数据源列表":["286.37"],"renderlist":["286.37"],"渲染列表":["286.37"],"位置信息":["286.37"],"eachrendernum":["286.37"],"每次渲染数量":["286.37"],"createref":["286.37"],"offsetheight":["286.37"],"ceil":["286.38"],"clearinterval":["286.39"],"getfileextension1":["286.40"],"filechunks":["286.42","286.46"],"cur":["286.42"],"在其中上传的文件名称":["286.43"],"hash值和切片":["286.43"],"并将此":["286.43"],"最终chunkslist中存储的就是多个":["286.43"],"每个切片对应一个":["286.43"],"uploadchunks":["286.44"],"第二个参数采用默认值":["286.46"],"createfilechunks":["286.46"],"devicewidth":["286.48"],"获取当前分辨率下的可是区域宽度":["286.48"],"然后返回新的当前元素":["286.49"],"application":["286.51"],"vnd":["286.51"],"格式":["286.52"],"myfiles":["286.53"],"quotes":["286.55"],"before":["286.55"],"collapse":["286.55"],"ipad":["286.58"],"quot":["286.60"],"isbrowsertabfocused":["286.62"],"contains":["286.66"],"hypot":["286.67"],"scrolly":["286.68"],"sandboxglobal对象上不存在的属性":["286.69"],"直接报错":["286.69"],"实现禁用三方库调接口":["286.69"],"请求的实例":["286.70"],"已存在意味着正在请求中":["286.70"],"直接返回实例":["286.70"],"不触发新的请求":["286.70"],"innertext":["286.71"],"设置字体大小":["286.71"],"products":["286.72"],"cartesianproduct":["286.72"],"gettime":["287.1"],"3个月前所在月的总天数":["287.3"],"日期字符串":["287.4"],"returns":["287.4"],"second":["287.6"],"multiply":["288.1"],"用法示例":["288.5"],"cachesum":["288.5"],"tofixed":["291.2"],"numarr":["291.2"],"eur":["291.5"],"ownkeys":["292.1","293.1"],"getrequest":["294.1"],"blob":["295.4"]},{"0":["10.9","10.13","22.14","23.75","23.90","25.6","52.2","52.6","52.12","55.3","58.3","58.4","59.1","61.13","64.25","67.3","87.27","89.6","95.40","97.2","97.26","99.14","103.0","103.6","106.30","106.51","119.4","122.11","127.37","133.2","145.3","149.4","153.8","155.6","156.2","156.6","156.20","156.21","157.2","158.2","159.9","164.2","168.3","169.3","172.0","173.57","173.80","174.24","174.33","175.10","182.2","195.8","205.15","208.17","228.3","256.6","263.6","284.9","284.24","284.31","284.32","284.35","284.74","284.81","286.10","286.40","286.47","286.56","295.9"],"1":["10.9","28.1","44.2","48.25","52.2","52.17","57.3","58.5","95.25","95.32","96.2","97.7","99.3","103.6","106.16","106.41","109.1","111.2","113.0","114.30","122.2","122.13","125.8","127.23","130.7","132.3","132.4","138.28","147.0","151.1","153.5","153.6","153.7","154.0","168.3","168.25","174.3","177.13","179.15","179.50","179.57","182.1","188.0","206.0","214.1","241.3","245.3","256.5","263.6","284.1","284.17","284.29","284.83","285.10","286.2","286.16","286.37","286.47","286.49","286.64","288.1","295.9"],"2":["7.3","7.6","10.4","10.9","20.7","23.66","23.79","28.1","40.1","44.2","44.4","62.1","65.17","65.18","76.3","89.9","95.25","98.4","99.3","99.12","106.21","113.0","113.3","121.5","122.13","122.15","122.16","122.17","122.20","123.0","125.4","125.5","140.4","144.1","150.7","152.17","153.8","153.11","167.3","169.3","170.0","173.8","173.10","173.23","173.28","173.56","173.74","173.76","174.63","176.13","176.18","177.13","178.1","179.50","184.14","200.6","214.1","222.11","263.2","284.28","285.6","285.7","285.14","288.1"],"3":["19.4","20.7","23.51","25.2","44.2","44.4","44.5","61.17","71.21","71.23","89.9","97.61","99.6","99.22","99.23","100.4","106.21","106.30","113.0","113.8","114.32","125.2","125.7","127.2","137.5","144.1","150.7","151.3","152.7","152.15","156.1","168.13","168.25","170.2","173.35","173.93","174.7","176.4","177.13","178.1","179.64","184.3","184.17","195.5","200.2","200.4","204.0","222.2","284.24","284.27","284.43","284.46","285.6","285.7","285.9","285.14","288.1"],"4":["19.4","29.1","30.1","43.10","44.2","65.35","67.8","87.27","89.10","99.17","100.5","106.37","152.18","154.20","173.17","174.3","174.7","174.28","177.3","178.1","195.7","200.1","200.5","204.0","284.32","285.7","286.28"],"5":["7.9","11.7","36.5","38.5","43.3","43.11","46.4","48.18","52.8","99.5","108.2","114.32","119.10","167.1","173.24","174.11","174.54","177.6","193.5","260.2","284.65"],"6":["25.6","43.11","52.8","113.4","113.5","152.6","167.1","168.11","173.38","173.52","174.43","174.51","174.59","178.7","184.8","230.2","284.5","284.35","284.63"],"7":["43.11","48.27","81.3","113.5","114.32","152.6","168.11","175.4"],"8":["22.24","104.0","107.4","113.5","154.4","154.13","154.17","173.88","174.51","174.54","279.5","284.43","286.16","286.27"],"9":["38.3","38.4","61.18","113.5","123.1","173.36","175.13","284.17","284.25","284.29","284.33","284.34","284.35","284.38","284.55"],"10":["10.4","23.52","38.3","38.4","106.16","127.15","140.0","153.10","154.17","166.3","175.9","284.45","287.6"],"11":["38.4","284.39","284.45"],"12":["38.4","127.42","140.0","172.0","271.1","284.44","284.45"],"13":["2.3","102.5","108.2","171.0","172.0","175.16"],"14":["172.0"],"15":["52.5"],"16":["10.4","46.5","61.18","67.3","95.32","284.30","286.22"],"17":["175.12","284.2"],"18":["21.8"],"19":["152.6","175.22"],"20":["153.10","156.18","170.5","173.53","175.10","181.0"],"21":["175.10"],"22":["81.3","175.10"],"23":["184.28","285.9"],"24":["115.0","171.0"],"25":["127.32","173.88","286.13"],"26":["170.15"],"28":["115.0"],"30":["281.1","284.41"],"31":["127.42"],"32":["140.0","171.0"],"34":["141.3"],"35":["159.8","284.35"],"39":["275.2"],"40":["153.12"],"42":["127.14","127.29","127.30","127.47"],"44":["173.90"],"48":["284.46"],"50":["26.2","61.13","148.3"],"55":["152.3"],"56":["141.3"],"60":["7.8","156.23"],"67":["106.34"],"70":["170.5"],"78":["102.5"],"80":["65.36","68.13"],"87":["102.5"],"88":["102.5"],"90":["115.0"],"91":["147.5"],"100":["61.12","106.51","153.12","156.14","168.7","169.3","170.11","179.27","286.39"],"120":["95.13"],"123":["115.0","140.1"],"127":["103.6"],"128":["170.5"],"192":["101.3"],"200":["23.90","106.16","125.3","166.7","195.4"],"203":["29.3"],"211":["170.5"],"222":["106.16"],"251":["127.27"],"255":["170.15","171.0"],"256":["67.3"],"262":["115.0"],"300":["166.8","284.16"],"301":["179.45"],"302":["179.45"],"303":["29.4"],"304":["27.7"],"333":["286.55"],"406":["29.5"],"469":["284.39"],"500":["113.6","179.27"],"502":["113.6"],"503":["29.6","113.6"],"504":["113.6"],"530":["140.0","152.3"],"538":["140.0"],"572":["115.0"],"599":["140.0"],"777":["21.7"],"998":["286.55"],"1000":["25.5","106.27","156.23","287.6"],"1024":["104.0","127.26","154.17"],"1153":["236.7"],"1440":["286.48"],"1471":["236.4"],"1513":["216.3"],"1621":["216.2"],"1947":["256.6"],"1999":["89.8","127.42"],"2000":["2.3","168.23","284.46"],"2015":["64.11"],"2021":["287.1"],"2325":["236.4"],"2353":["236.4"],"2400":["243.2"],"3000":["96.4","97.2","99.11","126.3"],"3001":["177.13"],"3333":["96.5"],"3756":["214.3"],"4024":["236.4"],"5555":["191.3"],"5571":["235.4"],"6379":["114.30"],"7070":["103.6","138.39"],"8000":["22.24","65.36"],"8080":["68.13","159.13","175.10"],"11101":["22.1"],"19302":["103.8","103.13"],"20000":["286.37"],"60000":["156.23"],"128000":["104.0"],"153209":["152.18"],"161324":["152.24"],"246188":["175.10"],"1000000":["286.63"],"2500000":["104.0"],"新增小程序攻略":["0.0"],"d1f3800":["0.0"],"新增性能优化之小程序":["0.0"],"1880df5":["0.0"],"docker":["0.0","0.1","114.8","114.10"],"部署本地代码":["0.0"],"487cec1":["0.0"],"源码":["0.0","173.96"],"vue":["0.0","96.6","97.9","97.18","100.1","114.15","144.4","190.2","218.2","226.1","235.4"],"内置组件解析":["0.0"],"2a6cf53":["0.0"],"button":["0.1","81.2","96.3","150.10","156.2","173.7","181.0","209.3"],"按钮组件库":["0.1"],"cae9589":["0.1"],"github":["0.1","96.13","260.0","260.3"],"workflows":["0.1","73.0"],"131b275":["0.1"],"面试相关知识":["0.1"],"a089dad":["0.1"],"组件栏目":["0.1"],"694440b":["0.1"],"新增动画卡片组件":["0.1"],"2fdd526":["0.1"],"新增浏览器的代码片段分享":["0.1"],"2a86840":["0.1"],"新增拍照组件展示":["0.1"],"卡片组件修改传参":["0.1"],"15a3815":["0.1"],"新增前端工程化代码规范":["0.1"],"0496948":["0.1"],"新增虚拟列表":["0.1"],"react":["0.1","65.36","87.25","95.1","95.20","95.46","157.0","159.13","205.7","205.17","206.14","207.7","207.8","265.0"],"4afee99":["0.1"],"新增制定node版本":["0.1"],"235db2b":["0.1"],"新增自动修改package":["0.1"],"version":["0.1","67.3","113.7"],"文章":["0.1"],"f21f627":["0.1"],"新增button":["0.1"],"e704b6e":["0.1"],"修复":["0.1"],"图片层级":["0.1"],"9473eb5":["0.1"],"修复组件库":["0.1"],"strayysky":["0.1"],"部署":["0.1"],"7297e09":["0.1"],"修复组件依赖版本":["0.1"],"a895cf5":["0.1"],"schedule":["0.1","206.15","206.16"],"定时触发":["0.1"],"48f690b":["0.1"],"修改整体导入导出架构全部采用esmodule":["0.1"],"4d97048":["0.1"],"修改整体项目结构":["0.1"],"f429749":["0.1"],"修改base路径":["0.1"],"f1942df":["0.1"],"组件库新增代码背景墙":["0.1"],"8fb148a":["0.1"],"或者发起了请求但后端存储的数据和前端一致":["1.0"],"那么就没有必要再将数据回传回来":["1.0"],"一般大文件不会存放这里":["1.1"],"disk":["1.1"],"磁盘缓存":["1.1"],"也就是说":["1.2","51.4"],"如果我们没有在":["1.2"],"这是不可能的":["1.3"],"首先计算机中的内存一定比硬盘容量小得多":["1.3"],"操作系统需要精打细算内存的使用":["1.3"],"所以能让我们使用的内存必然不多":["1.3"],"内存中其实可以存储大部分的文件":["1.3"],"覆盖面基本是最大的":["1.4"],"它会根据":["1.4"],"thought":["1.5"],"这篇文章":["1.5"],"但是内容是英文的":["1.5"],"我翻译一下文章中的几个结论":["1.5"],"有能力的同学还是推荐自己阅读":["1.5"],"所有的资源都能被推送":["1.5"],"edge":["1.5","102.5","154.13","206.8"],"header":["1.7"],"control":["1.8","1.21","2.3","19.7","24.6"],"强缓存表示在缓存期间不需要请求":["1.8"],"秒后过期":["1.10"],"需要再次请求":["1.10"],"和":["1.11","7.6","7.7","7.11","28.1","96.3","97.22","98.9","102.5","106.24","123.1","127.1","135.0","166.2","168.26","174.25","179.16","179.34","179.44","195.4","206.4"],"etag":["1.11","1.20"],"存在一些弊端":["1.12"],"如果本地打开缓存文件":["1.12"],"即使没有对文件进行修改":["1.12"],"但还是会造成":["1.12"],"last":["1.13","206.2"],"modified":["1.13"],"高":["1.13"],"以上就是缓存策略的所有内容了":["1.13"],"看到这里":["1.13"],"一般会根据文件的最后修改时间生成":["1.15"],"sha256":["1.16"],"需要慎重考虑":["1.16"],"因为他们是":["1.16"],"since能检查到的粒度是秒级的":["1.17"],"这种修改是无法判断的":["1.17"],"或者说unix记录mtime只能精确到秒":["1.17"],"length":["1.18","10.4","59.1","67.3","97.19","98.7","99.12","100.4","103.17","115.0","133.2","153.11","156.6","174.29","195.9","236.5","286.14","286.19","286.37","292.1","293.1","296.2"],"组成":["1.18","175.12"],"而":["1.18","104.0","151.10","173.9","173.79"],"或者":["1.20","9.1","17.0","106.25","170.6","173.27","175.13","179.27","209.10"],"我们就可以给代码文件设置缓存有效期一年":["1.21"],"cache":["1.21","2.3","19.14","138.31","175.3","193.5","231.1","239.3"],"禁用强缓存":["1.22"],"请求":["2.2","24.5"],"会判断是否有缓存":["2.2"],"有缓存":["2.2"],"直接返回资源":["2.2"],"给":["2.2"],"无缓存":["2.2"],"dns":["2.2"],"解析":["2.2","4.2","152.9","173.1"],"获取":["2.2","178.7"],"ip":["2.2","139.3","286.13"],"建立":["2.2"],"tls":["2.2"],"tcp链接":["2.2"],"构建请求头":["2.2"],"match":["2.3","221.4"],"的值来判断请求的资源是否被更新":["2.3"],"如果没有更新":["2.3"],"就返回304状态码":["2.3"],"相当于告诉浏览器之前的缓存还可以使用":["2.3"],"就不返回新数据了":["2.3"],"返回新数据":["2.3"],"200的状态码":["2.3"],"并且如果想要浏览器缓存数据的话":["2.3"],"就在相应头中加入字段":["2.3"],"max":["2.3","65.26","97.19","97.35","153.11","174.64","179.44","236.4"],"age":["2.3","21.8","185.6"],"响应数据又顺着应用层":["2.3"],"传输层":["2.3","50.1"],"网络层":["2.3","50.1"],"应用层的顺序返回到网络进程":["2.3"],"每种类型的插件对应一个进程":["3.1"],"仅当使用该插件时才创建":["3.1"],"gpu进程":["3.1"],"最多一个":["3.1"],"用于3d绘制等":["3.1"],"那么某个tab页崩溃了":["3.2"],"就影响了整个浏览器":["3.2"],"体验有多差":["3.2"],"或由于某种操作引发回流":["3.4"],"reflow":["3.4"],"时":["3.4","3.8","7.14","23.75","87.23","87.39","97.41","156.24","158.2","164.2","173.32","173.59","177.13","178.2","178.6","179.7","196.13"],"一个tab页":["3.5"],"renderer进程":["3.5"],"当对应的事件符合触发条件被触发时":["3.6"],"该线程会把事件添加到待处理任务队列的队尾":["3.6"],"添加到事件队列中":["3.7"],"等待js引擎空闲后执行":["3.7"],"如果设置有回调函数":["3.8"],"js":["4.2","20.3","21.14","21.15","61.5","61.17","62.10","64.15","86.6","86.8","87.13","87.23","87.38","95.4","95.5","97.1","97.20","97.36","97.41","99.6","126.3","126.8","142.26","142.29","151.12","154.1","155.6","157.2","173.21","173.73","175.12","204.6","206.10","256.2","281.3","285.4"],"引擎":["4.2"],"解释器":["4.2"],"语言":["4.2"],"执行":["4.2","41.1","41.10","86.9","99.7","168.11","173.13","179.13","219.9","220.4","220.5","222.9","246.4"],"engine":["4.3"],"然后会输出至显示器或打印机":["4.4"],"浏览器的内核的不同对于网页的语法解释会有不同":["4.4"],"seamonkey等":["4.6"],"presto内核":["4.6"],"opera7及以上":["4.6"],"target":["5.2","87.16","96.5","125.0","162.2","179.55","216.1","247.1"],"intersectionratio":["5.2"],"threshold":["5.2"],"来监听":["5.3"],"还有做图片的懒加载的时候":["5.3"],"new":["5.5","10.6","76.3","100.2","104.0","126.5","130.5","132.1","152.20","161.0","173.46","175.6","179.47","192.1","192.3","195.9","206.9","256.6","283.7","286.37","287.1","287.7"],"mutationslist":["5.5"],"让水印去不掉":["5.6"],"当然":["5.6","31.10","37.0","39.3","39.4","41.0","41.10","44.5","44.7","46.2","46.7"],"console":["5.8","19.2","20.7","20.9","20.10","21.8","21.17","99.15","111.4","126.4","127.14","127.44","129.5","133.6","140.3","152.20","159.13","167.4","173.82","178.6","179.15","184.21","225.4","248.1","286.72","288.1"],"log":["5.8","20.7","20.9","20.10","99.15","111.4","113.6","119.9","126.4","127.44","127.50","129.5","133.6","140.3","159.13","167.4","173.82","178.6","179.15","184.21","191.1","286.53","286.72","288.1","291.6"],"当前大小":["5.8"],"后两个个参数是时间点":["5.9"],"不传代表从开始到现在":["5.9"],"我们可以用":["5.9"],"监听它们":["5.9"],"html":["5.9","61.17","68.11","68.12","76.3","97.44","99.6","99.11","113.6","114.29","122.0","126.3","285.4"],"body":["5.9","61.9","99.6","106.6","106.51","114.29","122.0","126.4","126.8","147.3","150.10","159.2","159.5","175.13","279.4","286.71"],"onclick":["5.9","81.1","150.10","156.1","156.7","175.7","209.3"],"太多的广告的":["5.10"],"iframe":["5.10","126.8"],"删掉":["5.10"],"但对于元素的变化":["5.11"],"performance":["5.11","5.12","99.10","148.4","151.5","151.12","152.18","152.23","152.24"],"还有两个与元素无关的":["5.12"],"performanceobserver":["5.12"],"监听":["5.12","179.41"],"px这一步完成后":["6.1"],"会得到一棵带有样式的":["6.1"],"layout":["6.1","95.42","206.8"],"布局完成后会得到布局树":["6.1"],"布局阶段会依次遍历":["6.1"],"树的每一个节点":["6.1"],"计算每个节点的几何信息":["6.1"],"例如节点的宽高":["6.1"],"相对包含块的位置":["6.1"],"大部分时候":["6.1"],"树和布局树并非一一对应":["6.1"],"display":["6.1","7.0","61.12","106.17","170.15","286.65"],"none":["6.1","27.7","106.41","121.5","286.65"],"的节点没有几何信息":["6.1"],"因此不会生成到布局树":["6.1"],"又比如使用了伪元素选择器":["6.1"],"虽然":["6.1"],"dom树中不存在这些伪元素节点":["6.1"],"但它们拥有几何信息":["6.1"],"当js代码全部完成后再进行统一计算":["6.3"],"所以":["6.3","6.5","37.1","71.19","97.40","173.25","173.58","195.7","215.1"],"改动属性造成的":["6.3"],"由于元素的布局信息也属于可见样式":["6.4"],"阶段在合成线程中":["6.5"],"负责输出最终的":["7.0"],"opengl":["7.0"],"绘制指令":["7.0"],"之间的系统架构和通讯方式基本保持不变":["7.1"],"线程架构也是同样":["7.1"],"blink":["7.1"],"主要运行在":["7.1"],"进程的":["7.1"],"线程":["7.1"],"gl":["7.2"],"window":["7.2","16.0","61.8","61.9","89.5","98.7","98.12","115.0","147.4","151.5","168.20","168.23","173.18","179.28","179.51","181.0","184.29","286.4","286.10","286.56"],"我们觉得一个动画是否流畅":["7.2"],"最终取决于":["7.2"],"图层化决策一般由以下几个因素决定":["7.3"],"特殊元素如":["7.3"],"plugin":["7.3","62.20","64.20","81.3","97.20"],"video":["7.3"],"canvas":["7.3","100.6"],"webgl":["7.3","7.14"],"维护正确的层级关系来保证绘制顺序是正确的":["7.3"],"比如":["7.3","31.9","41.8","46.5","87.16","87.25","96.3","148.1","154.12","207.7","209.7","213.0"],"接收到来自":["7.4"],"browser":["7.4","95.46","154.15","210.1"],"的绘制请求时":["7.4"],"它会为当前可见区域的每个图层的每个分块生成一个":["7.4"],"draw":["7.4"],"quad":["7.4","7.10"],"的绘制指令":["7.4"],"矩形绘制":["7.4"],"使用对应":["7.5"],"resource":["7.5","7.10","154.4","154.16","154.17"],"封装的":["7.5"],"texture":["7.5"],"是生产者和消费者的关系":["7.6"],"网页动画":["7.6"],"动画可以看做是一个连续的帧序列的组合":["7.6"],"我们把网页的动画分成两大类":["7.6"],"触发的动画":["7.7"],"如果是":["7.7","250.3"],"transform":["7.7","61.13","168.19","286.33","286.38"],"的渲染流水线":["7.8"],"在主流的移动设备上":["7.8"],"大部分场景下":["7.8"],"两者性能都能获得一个较好的平衡":["7.8"],"动画性能分析基础":["7.8"],"这里的性能分析主要是针对移动设备":["7.8"],"以桌面处理器的性能":["7.8"],"大部分场景下都不存在性能问题":["7.8"],"目前移动设备的屏幕刷新率基本上都是":["7.8"],"60hz":["7.8"],"而浏览器跟其它应用一样":["7.8"],"需要跟屏幕刷新保持垂直同步":["7.8"],"也就是动画帧率的上限是":["7.8"],"帧":["7.8","175.9"],"这也是我们能够达到的最理想的结果":["7.8"],"不过考虑浏览器本身的复杂程度":["7.8"],"移动平台一般是两个":["7.9"],"这些线程会从任务队列里面顺序取出每一个光栅化任务并运行":["7.9"],"光栅化任务运行后":["7.9"],"会通知合成器":["7.9"],"合成器根据需要检查哪些任务已经完成":["7.9"],"合成器找出在当前可见区域内显示的图层":["7.10"],"合成器找出这些图层在可见区域内的分块":["7.10"],"如果该分块已经有分配":["7.10"],"说明此分块已经完成光栅化":["7.10"],"则产生一个":["7.10"],"的命令置入":["7.10"],"中":["7.10","53.9","152.30","173.19","173.37","177.14","194.1","205.10","206.11","209.7","232.3","286.71"],"过度绘制系数比较理想的值是在":["7.11"],"以内":["7.11"],"一般建议不超过":["7.11"],"这样可以保证在中低端的移动设备上也有不错的性能表现":["7.11"],"另外":["7.11","31.5","115.0","175.12","195.4"],"合成器动画过程中":["7.11"],"线程是前台线程":["7.11"],"它们虽然理论上不会被":["7.11"],"但是如果是中间节点的图层增加或者移除":["7.12"],"对图层结构的影响就比较大了":["7.12"],"并且越是接近根节点":["7.12"],"影响就越大":["7.12"],"现在的页端都会大量使用异步加载来优化加载性能和流量":["7.12"],"但是容易出现导致动画掉帧的现象":["7.12"],"要平衡好这一点意味着需要实现一个加载和关联":["7.12"],"树相对于":["7.13"],"树的变更部分才会被同步到":["7.13"],"合成器会向":["7.13"],"ui":["7.13","116.4","178.0"],"线程的窗口管理器发起重绘请求":["7.13"],"窗口管理器会在下一个":["7.13"],"vsync":["7.13"],"的时候开始绘制新的一帧":["7.13"],"后面的流程就跟合成器动画是一样的了":["7.13"],"上述流程的一些关键点是":["7.13"],"在合成器动画中":["7.13"],"分块没有完成光栅化":["7.13"],"部分的耗时":["7.14"],"并避免在每一帧中引入大面积的网页内容变化和大幅度的图层结构变化":["7.14"],"另外非合成器动画的后半段就是合成器动画":["7.14"],"所以对合成器动画的性能优化要求也同样适应于非合成器动画":["7.14"],"另外对于":["7.14"],"来说":["7.14","19.13","61.3"],"当在":["7.14"],"里面调用":["7.14"],"api":["7.14","96.5","96.12","152.13","173.52","196.6","283.10","294.1"],"这些命令只是被":["7.14"],"chrome":["7.14","102.5","106.7","148.4","151.12"],"缓存起来":["7.14"],"服务器可以根据cookie追踪用户在不同页面的访问信息":["8.2"],"当接收到客户端发出的http请求时":["8.2"],"追踪":["8.3"],"可以监听":["8.5"],"除非被手动清除":["8.7"],"否则将会永久保存":["8.7"],"仅在客户端":["8.9"],"即浏览器":["8.9"],"源生接口可以接受":["8.10"],"就用storage":["8.11"],"storage在存储数据的大小上面秒杀了cookie":["8.11"],"现在基本上很少使用cookie了":["8.11"],"是服务端存储的":["8.12"],"与":["8.15","99.14","152.17","163.0","173.78","175.4","177.10","179.26"],"一样需要同一浏览器同源文档这一条件":["8.15"],"不仅如此":["8.15"],"的作用域还被限定在了窗口中":["8.15"],"i":["9.1","56.3","56.4","58.4","85.1","97.58","114.16","125.0","127.15","127.37","156.6","174.20","174.33","177.6","179.62","221.1","222.10","228.3","241.7","256.5","284.84","286.25"],"lodash":["9.1","102.0","178.8"],"代码片段的名字":["10.1"],"snippets":["10.2"],"split":["10.4","10.5","95.40","104.0","167.4","179.25","286.64"],"map":["10.4","10.5","89.5","127.5","166.9","195.9","228.1","229.0","286.7","286.44"],"num":["10.4","127.55","173.99","291.2"],"parseint":["10.4","89.12","287.6"],"componenttohex":["10.4"],"c":["10.4","22.12","44.3","100.3","125.2","125.7","125.8","126.6","126.7","127.13","127.29","136.2","136.4","204.3","205.15"],"hex":["10.4"],"tostring":["10.4","173.39","173.68","195.4","286.27","286.63","292.2","293.2"],"rgbtohex":["10.4"],"rgbarray":["10.4"],"r":["10.4","74.1","171.0","260.2"],"b":["10.4","23.61","44.2","48.6","48.8","50.15","52.13","52.15","71.13","102.0","109.6","125.8","127.13","127.29","171.0","285.1"],"cookie":["10.5","175.2","175.12"],"const":["10.5","21.8","21.17","61.5","61.6","62.11","64.18","64.24","98.10","99.12","99.14","127.7","127.10","127.13","131.8","133.7","148.1","152.12","156.2","156.8","157.2","173.27","173.94","205.14","205.19","219.4","225.4","231.5","239.5","243.2","251.1","252.4","256.6","283.3","287.4","288.2","288.3"],"s":["10.5","100.8","119.10","148.4","154.10","216.2","228.1","243.2","252.5","284.4","284.31"],"highlightall":["10.6"],"queryselectorall":["10.6","127.54"],"code":["10.6","64.12","97.32","107.4","166.7","195.4","236.1","256.4","286.69"],"class":["10.6","173.68","184.26","236.6"],"language":["10.6","23.93","64.2"],"lang":["10.6","99.6"],"highlightelement":["10.6"],"while":["10.6","52.12","55.1","55.3","59.1","127.37","174.8","174.23","174.25","174.37","204.2","206.10","223.2","255.0"],"test":["10.6","65.21","65.23","74.7","76.3","99.6","132.2","137.0","286.25"],"classname":["10.6","81.5","89.6"],"parentnode":["10.6"],"pre":["10.6","52.18","65.23","167.4","285.3"],"nodename":["10.6"],"textcontent":["10.6"],"amp":["10.6"],"lt":["10.6"],"gt":["10.6"],"u00a0":["10.6"],"element":["10.6","96.0","97.39","209.2","222.3"],"grammar":["10.6"],"hooks":["10.6","95.7","95.19"],"before":["10.6","91.0","97.22","106.41","170.2"],"highlight":["10.6"],"worker":["10.6","162.0"],"filename":["10.6","64.15","81.2","98.10","154.8","195.4","195.9","230.2"],"onmessage":["10.6","162.0"],"highlightedcode":["10.6"],"stringify":["10.6","103.12","133.3","156.1","179.19","228.1"],"json":["10.6","24.4","24.5","67.3","69.9","87.7","87.41","97.32","100.7","114.23","156.1","195.4","228.1"],"parse":["10.6","64.12","100.4","195.9"],"data":["10.6","19.8","68.3","99.10","104.0","108.3","115.0","126.4","132.4","133.6","156.1","166.9","206.8","241.6"],"innerhtml":["10.6"],"after":["10.6","10.11","31.18","91.0","106.41","127.33","170.2","170.14","216.2","236.4"],"postmessage":["10.6","133.2","133.4","162.0","179.41","206.16"],"removechild":["10.7","10.14"],"input":["10.7","10.8","122.22","152.6","205.17"],"prevent":["10.7"],"caching":["10.7"],"hasrnd":["10.7"],"hasquerystring":["10.7"],"hashash":["10.7"],"hash":["10.7","154.4","177.9"],"null":["10.7","10.8","109.6","109.7","130.8","131.11","179.24","181.0","189.0","205.5","206.1","206.11","207.12","208.4","223.2","231.3"],"rnd":["10.7"],"nmethod":["10.8"],"method":["10.8","97.13","138.36","245.3"],"touppercase":["10.8"],"naction":["10.8"],"textarea":["10.8","90.0"],"select":["10.8","122.20"],"foreach":["10.8","62.18","95.40","98.7","100.8","133.2","195.9"],"src":["10.9","81.2","96.14","97.2","99.6","99.20","100.1","114.25","126.2","126.6","126.7","126.8","154.7","154.8","195.9","239.2"],"ajax":["10.9","173.32","179.36"],"googleapis":["10.9"],"libs":["10.9"],"http":["10.10","85.6","85.7","95.45","96.5","99.11","103.6","106.4","121.0","121.6","126.8","138.21","146.4","152.9","154.13","179.40","286.13"],"www":["10.10","99.6","260.0","296.3"],"briangrinstead":["10.10"],"blog":["10.10"],"npn":["10.11"],"negotiation":["10.11"],"protocol":["10.11","175.16"],"npnnegotiatedprotocol":["10.11"],"info":["10.11","195.9"],"connectioninfo":["10.11"],"first":["10.11","106.11","235.4","245.3"],"paint":["10.11","151.12"],"document":["10.11","19.6","61.9","61.18","99.6","99.12","103.17","120.0","157.2","205.11","286.62"],"math":["10.11","153.11","156.14","168.19","173.43","174.64","291.1","291.6"],"ceil":["10.11"],"firstpainttime":["10.11","151.12"],"finishdocumentloadtime":["10.11"],"tagname":["10.12"],"tolocalelowercase":["10.12"],"res":["10.12","110.3","111.1","127.12","127.44","195.9","220.2","236.1","245.3"],"return":["10.13","10.14","19.14","52.15","53.12","57.4","61.6","61.9","64.18","81.5","89.13","98.12","99.7","99.12","103.13","125.0","127.5","127.38","131.10","133.2","156.3","156.6","156.18","156.21","159.5","173.98","174.40","174.44","176.5","177.6","178.6","178.8","179.33","184.11","185.4","206.0","208.17","219.6","223.2","236.1","236.2","240.1","248.1","252.3","255.0","283.4","283.11","285.13","286.20","286.21","286.72","287.6"],"contentwindow":["10.14"],"detectglobals":["10.14"],"创建一个iframe对象":["10.14"],"并返回它的contentwindow":["10.14"],"这个设计很巧妙":["10.14"],"不用自己去找一个全局变量的key了":["10.14"],"不同版本的浏览器":["10.14"],"的属性":["11.1","163.0"],"tips":["11.2","178.8"],"就能帮你解决这个问题":["11.2","11.3"],"图片":["11.3","22.5","22.10","22.15","23.49","23.50","23.63","23.82","23.94","45.2","48.2","51.3","52.5","65.27","65.30","84.7","106.2","106.17","106.40","106.50","177.7","194.1"],"子元素发生了改动":["11.4"],"比如说增加了子元素的个数":["11.4"],"那么就会自动跳转到对应的":["11.4"],"就可以查看一下有多少":["11.5"],"scroll":["11.5"],"就是上上次的元素":["11.6"],"之后以此类推":["11.6"],"这时候你可能会说":["11.6"],"打印出来元素有啥用":["11.6"],"为":["11.7","48.22","52.5","73.0","87.16","153.10","154.3","258.3"],"时相应的断点信息":["11.7"],"但是一旦打了断点":["11.7"],"就会每次循环都会停下来":["11.7"],"而不是拖动和放置":["12.0"],"你同样可以使用":["12.0"],"树的不同位置的显示效果时":["13.0"],"只需要拖动放置它":["13.0"],"就可以拿到":["14.1"],"就可以隐藏你在元素面板中选择的元素":["15.0"],"再次按下":["15.0"],"devtools":["16.0","206.14"],"true":["16.0","57.4","64.17","86.7","87.31","88.2","96.2","96.14","97.2","100.6","127.22","154.3","154.8","156.1","156.2","156.6","173.6","173.29","173.85","174.12","176.2","179.55","192.1","192.2","192.3","206.12","206.15","208.3","216.6","225.0","250.1","252.2","252.3","258.3","286.9","286.69","287.8"],"string":["17.0","81.1","130.7","166.9","173.93","183.5","187.0","195.4","222.5","222.6","222.7","239.2","248.1","249.1","290.1"],"选择器":["17.0"],"xpath":["17.0"],"并选择":["18.0"],"variable":["18.0"],"node":["19.2","64.10","64.19","65.22","87.28","97.1","114.22","140.2","154.5","154.10","154.16","154.17","175.12","195.7","212.1"],"addeventlistener":["19.2","19.11","19.14","99.6","106.27","115.0","156.15","157.2","159.9","178.6"],"click":["19.2","104.0","157.2","173.20","181.0"],"event":["19.2","19.11","100.9","104.0","133.4","148.0"],"stoppropagation":["19.3"],"来阻止事件的进一步传播":["19.3"],"通常我们认为":["19.3"],"是用来阻止事件冒泡的":["19.3"],"其实该函数也可以阻止捕获事件":["19.3"],"stopimmediatepropagation":["19.3"],"同样也能实现阻止事件":["19.3"],"但是还能阻止该事件目标执行别的注册事件":["19.3"],"网站还存在登录态":["19.5"],"那么对方就可以通过":["19.5"],"获得你的任何信息":["19.5"],"当然跨域并不能完全阻止":["19.5"],"然后我们来考虑一个问题":["19.5"],"url":["19.6","25.2","27.9","60.0","99.11","104.0","115.0","169.3","175.0","177.7","179.47"],"jsonpcallback":["19.6"],"success":["19.6","167.0","283.10"],"let":["19.6","56.3","56.4","58.4","61.18","109.1","115.0","125.9","126.3","127.30","131.9","148.3","156.6","169.4","173.27","174.20","174.56","179.25","179.62","181.0","184.20","188.0","205.6","218.5","223.2","228.3","255.0","286.37","286.43","291.2"],"createelement":["19.6","99.6"],"就实现了跨域":["19.7"],"服务端设置":["19.7"],"access":["19.7","68.8","113.6","162.2","173.3","214.2"],"allow":["19.7","97.50"],"multipart":["19.8"],"form":["19.8","99.11","175.5"],"application":["19.8","98.8","175.5"],"x":["19.8","19.9","80.4","81.2","95.33","130.8","154.13","175.5","218.5","285.6","285.11"],"headers":["19.9"],"requested":["19.9"],"with":["19.9","112.2","130.9","206.15","214.0","214.1","218.4","219.10","228.2","232.2","241.3"],"content":["19.9","89.6","91.0","106.4","121.1","150.12","154.13","170.2","170.14","175.10","195.4","227.1","279.1","279.6"],"type":["19.9","21.7","44.3","62.15","64.13","64.21","81.1","95.4","99.6","103.17","106.4","112.3","115.0","120.0","122.22","141.6","154.4","154.17","173.99","175.5","175.10","179.51","184.10","184.12","222.5","227.1","232.4","241.8","256.8"],"accept":["19.9","23.91","23.92","115.0","154.14"],"authorization":["19.9"],"适用于该方式":["19.10"],"origin":["19.11","65.12","98.7","137.0"],"service":["19.12","99.14","144.3","195.4"],"对于不怎么改变的数据尽量使用":["19.13"],"存储":["19.13"],"否则可以用":["19.13"],"对于":["19.13","115.0","173.68","175.12","175.21"],"事件":["19.14","99.6","173.13","179.27","207.7"],"回调中缓存所需文件":["19.14"],"self":["19.14"],"e":["19.14","32.1","65.32","99.7","100.3","104.0","133.6","138.6","162.0","205.14","207.10","256.4","283.10","285.9","291.4"],"waituntil":["19.14"],"caches":["19.14"],"open":["19.14","74.3","96.5","97.2","115.0","126.5","127.18","133.9","162.3","175.4"],"my":["19.14"],"栈成员是一个对象":["20.2"],"保存let和const变量":["20.2"],"在上下文内部":["20.2"],"变量访问总是从词法环境的栈顶开始":["20.2"],"从栈顶到栈底":["20.2"],"执行代码":["20.3"],"对照原理图":["20.3"],"我们可以发现":["20.3"],"变量提升的核心原因就是js执行分为两个阶段以及提前将变量存入了变量环境":["20.3"],"案例中的代码可以分别声明部分和执行部分":["20.3"],"这两部分是在不同阶段执行的":["20.3"],"函数执行上下文":["20.4"],"编译函数体内代码生成函数上下文":["20.4"],"函数执行结束后":["20.4"],"执行结束后又会弹出执行上下文":["20.5"],"调用栈是有大小的":["20.5"],"函数作用域":["20.6"],"函数上下文即为函数作用域":["20.6"],"在上下文之间":["20.8"],"通过outer变量串联实现一级一级访问":["20.8"],"bar":["20.9","20.10","115.0"],"foo":["20.9","127.14","285.8"],"从原理图中":["20.12"],"我们知道":["20.12","179.11"],"this是和执行上下文绑定的":["20.12"],"既然有三种执行上下文":["20.12"],"那就有三种this":["20.12"],"不过eval用的不多":["20.12"],"所以重点讨论全局上下文的this和函数上下文的this":["20.12"],"全局上下文比较简单":["20.12"],"非严格模式下":["20.12"],"this始终指向window对象":["20.12"],"严格模式下":["20.12"],"this为undefined":["20.12"],"函数上下文的this就比较复杂":["20.12"],"this的指向是在运行时决定的":["20.12"],"即与你调用函数的方式有关系":["20.12"],"一般来说":["20.12","137.0"],"函数上下文的this有四种绑定方式":["20.12"],"以函数foo举例":["20.12"],"默认绑定":["20.12"],"直接调用":["20.12"],"很多人的dna就已经动了":["21.1"],"第一时间想到的是计算机网络":["21.1"],"假以时日":["21.1"],"对于javascript代码来说":["21.2"],"v8就是它的全部":["21.2"],"当":["21.2","23.78","99.17","253.0","254.9"],"v8":["21.2"],"和预解析":["21.3"],"preparser":["21.3"],"它的作用是将暂时还没有使用到的函数进行预解析":["21.3"],"对其标记为函数":["21.3"],"但不解析函数里面的代码":["21.3"],"而对函数的全局解析是在函数被调用时才会进行":["21.3"],"在这个步骤里最终会将解析的代码生成ast抽象语法树":["21.3"],"全局上下文和作用域在这里也出现了":["21.3"],"每个字节码将消耗输入并将输出推入隐式堆栈":["21.4"],"获取之前生成的热点字节码":["21.5"],"并没有以节点的形式呈现":["21.6"],"而类似于":["21.6"],"if":["21.6","55.3","61.9","62.15","64.9","64.19","64.25","66.3","99.8","99.14","100.9","109.6","114.29","115.0","125.0","133.2","133.4","154.2","156.20","156.21","166.5","166.6","173.57","173.58","174.22","174.40","174.48","176.2","177.6","178.4","179.54","179.63","207.12","223.2","225.4","230.2","231.3","231.4","236.5","243.2","245.3","248.0","248.1","250.2","283.8","286.2","286.19"],"condition":["21.6"],"then":["21.6","65.36","98.3","110.3","111.1","127.44","132.2","132.4","204.2","219.6"],"moment":["21.7","21.8"],"对源码的字符流进行扫描后根据构词规则识别单词":["21.7"],"生成token流":["21.7"],"hobby":["21.8"],"music":["21.8"],"studyreact":["21.8"],"此时this的值设置等于这个global对象":["21.9"],"一个程序中有且仅有一个全局执行上下文":["21.9"],"mayday":["21.10"],"它就为该函数创建一个新的执行上下文":["21.11"],"并将其推送到栈顶并执行当前上下文":["21.11"],"代码也最终执行了":["21.13"],"environments":["21.14"],"因此":["21.14","23.90","37.3","177.2","179.28","217.1"],"执行上下文的概念可以用以下代码表示":["21.14"],"executioncontext":["21.14"],"也可以是包含内部函数的外部函数环境":["21.15"],"环境记录中包含用户声明的变量":["21.15"],"函数":["21.15","106.24","115.0","177.6","184.14","217.2","217.3","247.0"],"还有arguments对象":["21.15"],"词法环境可以用一下的伪代码表示":["21.15"],"globalexectioncontent":["21.15"],"绑定":["21.16"],"通常情况下":["21.16"],"声明式环境记录绑定的内容会被直接存储在底层实现上":["21.16"],"如虚拟机的寄存器上":["21.16"],"以便于快速访问":["21.16"],"async声明的标识符保存在这里":["21.17"],"如let":["21.17"],"uninitialized":["21.17"],"在编译阶段为uninitialized":["21.17"],"varnames":["21.17"],"var":["21.17","61.18","65.10","65.21","67.7","68.6","74.6","100.3","126.4","126.5","127.15","127.16","127.37","173.1","173.95","177.6","181.0"],"async声明的标识符列表":["21.17"],"因为全局作用域外层作用域的指向为null":["21.18"],"作用域分为两种主要的工作模型":["21.18"],"第一种是词法作用域":["21.18"],"另外一种叫作动态作用域":["21.18"],"最终输出整体抽象语法树":["21.19"],"ast":["21.19","213.0"],"000000010000":["22.1"],"其结果为":["22.1"],"在早期的计算机里":["22.1"],"cpu如何知道i":["22.1"],"当我们输入数据的时候":["22.3"],"cpu里的控制器会让输入设备把这些指令存储到存储器":["22.3"],"此时让存储器把数据发送到运算器里":["22.4"],"控制器和运算器都在cpu里面":["22.4"],"从接下来":["22.6"],"我们更近一步":["22.6"],"中文叫算术逻辑单元":["22.8"],"用来进行算术和逻辑运算的":["22.8"],"只要是分析指令":["22.9"],"给出控制信号":["22.9"],"这里取数指令":["22.11"],"其实就是一个地址码":["22.11"],"按着这个地址去存储体取数据":["22.11"],"第六步":["22.11"],"第七步":["22.11"],"ir就会接着去找存储体里的mar":["22.11"],"存储地址的地方":["22.11"],"add":["22.12","64.4","67.10","69.13","95.43","96.1","96.2","97.59","114.23","159.13","166.3","179.56","214.3"],"b意思是将寄存器里的a":["22.12"],"b数据相加":["22.12"],"需要注意的是":["22.13","181.0"],"按照第一种将大量的高级代码翻译为机器语言":["22.13"],"这其中就有很大的空间给编译器做代码优化":["22.13"],"解释性语言就很难做这种优化":["22.13"],"因为parseint返回整数":["22.15"],"转化方法如下":["22.15"],"所得的余数1是二进制数的最低位的数码":["22.16"],"再将14除以2":["22.16"],"商为7":["22.16"],"余数为0":["22.16"],"可以得到积":["22.17"],"将积的整数部分取出":["22.17"],"再用2乘余下的小数部分":["22.17"],"比如10":["22.21"],"可以乘以一个比例因子":["22.21"],"将10":["22.21"],"尾数必须是纯小数":["22.22"],"所以上图中1":["22.22"],"会经过以下几个步骤完成":["22.23"],"的数据需要1000ns":["22.24"],"ns是纳秒的意思":["22.24"],"那么取出a":["22.24"],"到a":["22.24"],"就需要1000":["22.24"],"ns":["22.24","95.46"],"如果我们cpu发现这是取数组数据":["22.24"],"程序或设备与计算机之间发生的数据传输过程":["22.26"],"复制代码":["22.26"],"比如文件读写操作":["22.26"],"我已经准备好了":["22.27"],"但是对于高速外设":["22.27"],"它们完成任务的速度很快":["22.27"],"通道部件就会自动的安排相应的i":["22.28"],"按分布范围":["23.1"],"计算机网络里有局域网lan和广域网wan":["23.1"],"其中局域网的代表以太网":["23.1"],"需要掌握的基本概念":["23.2"],"的速率":["23.3"],"比如你用迅雷下载":["23.3"],"一般指的是1秒钟":["23.4"],"内能传输的数据量":["23.4"],"或信道":["23.5"],"第2秒10辆":["23.6"],"第3秒30辆":["23.6"],"比特流":["23.7"],"从网络":["23.7"],"从我开始说":["23.8"],"信道上第一个比特开始":["23.9"],"还要在输出队列中排队等待转发":["23.10"],"这就产生了排队时延":["23.10"],"进行首部差错检验":["23.11"],"它表示从发送方发送数据开始":["23.12"],"比如光纤":["23.14"],"路由器":["23.14"],"集线器":["23.14"],"电线杆上的光纤":["23.16"],"其实不然":["23.16"],"15v表示二进制的1":["23.17"],"只要条网线能表示这个特性":["23.17"],"而可见光的频率大约是10的8次方":["23.18"],"mhz":["23.18"],"中继器两端连接不同的网段":["23.20"],"而不是子网":["23.20"],"他只知道拿起文件就飞奔到b公司":["23.22"],"中间丢没丢东西也不清楚":["23.22"],"所以数据链路层这个小秘书必须心里有底":["23.22"],"封装的网络数据包":["23.24"],"让接受方不要被被误导":["23.25"],"能让接收方知道哪些是帧的首部哪些是帧的数据":["23.25"],"差错控制的方法有crc循环冗余码":["23.26"],"这个就不细讲了":["23.26"],"5个文件":["23.27"],"丢失的两个文件到底是哪两个":["23.27"],"链路层是点到点":["23.28"],"比如一个路由器到下一个路由器":["23.28"],"流量控制的方法有滑动窗口协议":["23.28"],"完成数据链路层和物理层的一些内容":["23.29"],"它采用一种称作csma":["23.29"],"会将目的mac地址和自己的mac地址进行比较":["23.30"],"如果不相同就会丢弃":["23.30"],"如果相同则会接收":["23.30"],"此时则ｂ主机就收到了ａ的消息":["23.30"],"发送方和接收方不建立连接":["23.31"],"不可靠":["23.31"],"而随着大规模集成电路以及专门芯片的发展":["23.34"],"使得星型以太网变得便宜又可靠":["23.34"],"cdma":["23.35"],"cd的实现":["23.35"],"上图的ap就是通信基站":["23.36"],"如果基站覆盖的移动设备可以直接通过基站来通信":["23.36"],"是总线型":["23.37"],"半双工网络":["23.37"],"这里需要注意的是":["23.39"],"网桥连接的是不同的网段":["23.39"],"冲突域的最大问题在于":["23.40"],"同一时间只能有一台机器传输数据":["23.40"],"公司那么多人":["23.40"],"如果这样的话":["23.40"],"传输数据速度太慢了":["23.40"],"瞄一眼就行啦":["23.41"],"所以实际上网络系统把数据分割成小块":["23.42"],"然后逐块地发动":["23.42"],"直到最终目的h2":["23.44"],"这一段话比较啰嗦":["23.44"],"简单来说分组就是分数据块":["23.44"],"说白了":["23.45","23.55"],"就是带地址的数据":["23.45"],"因为首部至少20字节":["23.46"],"所以4":["23.46"],"5就是20字节":["23.46"],"区分服务不用看":["23.46"],"总长度是":["23.46"],"首部":["23.46"],"的数据报":["23.48"],"0表示这已是若干数据报片中的最后一个":["23.48"],"标志字段中间的一位记为df":["23.48"],"只能是局域网自己内部用":["23.50"],"比如说有":["23.50"],"可以看到":["23.50"],"c类私有地址就是192":["23.50"],"168网段":["23.50"],"每个局域网都可以有这些私有ip":["23.50"],"还有一些特殊地址":["23.50"],"需要了解":["23.50"],"注意":["23.50","65.28","70.0","122.16","133.3","154.3","169.4","173.99","174.64"],"这里的全1是指":["23.50"],"ipv4地址由4个字节组成":["23.50"],"每一个字节是8位":["23.50"],"8位全一就是十进制的255":["23.50"],"即255":["23.50"],"4都是私有网段上的":["23.51"],"如果一个网络包来了":["23.52"],"网络包要交给的ip地址是145":["23.52"],"我们怎么知道给哪个子网呢":["23.52"],"方法是将目的包的ip地址":["23.52"],"跟子网的子网掩码相与预算":["23.52"],"二进制与预算规则是":["23.52"],"1跟1得1":["23.52"],"其它为0":["23.52"],"arp列表中是否存在该":["23.54"],"ip地址对应的mac地址":["23.54"],"如果有":["23.54","64.14","174.4","220.6"],"就直接将数据包发送到这个mac地址":["23.54"],"如果没有":["23.54","121.7"],"就向本地网段发起一个arp请求的广播包":["23.54"],"查询此目的主机对应的mac地址":["23.54"],"当你接入局域网的时候":["23.55"],"自动由这个dhcp服务器给你分配ip":["23.55"],"来验证网络是否畅通":["23.57"],"但是ip协议并不提供可靠传输":["23.57"],"这时候就回复给h2一个icmp应答报文":["23.58"],"意思是这个udp数据包":["23.58"],"无法交给应用进程":["23.58"],"如果是数据分组":["23.59"],"就会放到一个队列里面":["23.59"],"排队等候":["23.59"],"然后选择一个合适的输出端口输出":["23.59"],"最后我们看一下路由器输出端口做了哪些事情":["23.59"],"tcp面向连接":["23.60"],"可靠":["23.60"],"不提供广播和多播":["23.60"],"如果服务器有两个应用程序a":["23.61"],"提供面向事务的简单不可靠信息传送服务":["23.62"],"加上udp是不可靠的协议":["23.63"],"这就加大了udp的不可靠性":["23.63"],"容易丢失":["23.63"],"所以udp适合数据量少的":["23.63"],"udp没有拥塞控制":["23.63"],"适合很多实时应用":["23.63"],"比如数据2b":["23.64"],"首部固定是8b":["23.64"],"那么udp长度就是2":["23.64"],"可靠有序":["23.65"],"不丢不重":["23.65"],"tcp提供全双工通信":["23.65"],"全双工指的是连接双方可以同时收发数据":["23.65"],"在收发两端都有发送缓存和接收缓存":["23.65"],"发送缓存就是一个准备发送的队列":["23.65"],"我们举例说明一下":["23.66"],"接收方收到了1":["23.66"],"通常发生了某些错":["23.67"],"syn":["23.67","48.4","48.5","50.11","50.12"],"置1时用来发起一个连接":["23.67"],"那么双方都会有发送缓存和接收缓存":["23.68"],"接着会返回一个确认报文":["23.68"],"其中syn控制位置为1":["23.68"],"意思是允许建立连接":["23.68"],"ack是确认号":["23.68"],"给客户端发送请求结束的报文":["23.69"],"w":["23.69","284.3","295.8"],"这里的w":["23.69"],"而自己也未必全部数据都发送给对方了":["23.70"],"所以己方可以立即关闭":["23.70"],"服务端将会一直等待下去":["23.71"],"这样浪费服务端连接资源":["23.71"],"但我觉得这个只是两次握手可能造成的问题":["23.71"],"最关键的是两次握手有服务器对客户端的起始序列号做了确认":["23.71"],"但客户端却没有对服务器的起始序列号做确认":["23.71"],"三次握手的第一次可以携带数据吗":["23.72"],"为何":["23.72"],"不可以":["23.72"],"三次握手还没有完成":["23.72"],"而且这样会放大syn":["23.72"],"flood":["23.72"],"而在tcp报文格式介绍的时候":["23.73"],"有一个序号字段":["23.73"],"这个指的是一个报文段第一个字节的序号":["23.73"],"报文段就是你每个数据包":["23.73"],"当滑动窗口为":["23.75"],"开始我也不怎么理解":["23.76"],"看来一个视频之后我了解了基本原理":["23.76"],"快恢复":["23.77"],"发送方需要维护一个叫做拥塞窗口":["23.77"],"cwnd":["23.77","23.79"],"的状态变量":["23.77"],"增长速度非常快":["23.78"],"从而使得发送方发送的速度增长速度过快":["23.78"],"网络拥塞的可能性也就更高":["23.78"],"设置一个慢开始门限":["23.78"],"ssthresh":["23.78","23.79"],"只是丢失个别报文段":["23.79"],"而不是网络拥塞":["23.79"],"因此执行快恢复":["23.79"],"令":["23.79"],"例如http中content":["23.81"],"type字段是什么意思":["23.81"],"web都是":["23.82"],"live":["23.83","154.3"],"connection":["23.83","175.2"],"挥手":["23.84"],"这就需要7个数据包":["23.84"],"如果请求和响应各占1个数据包":["23.84"],"那么一次短连接的交互过程":["23.84"],"心跳数据包":["23.85"],"keep":["23.85","216.2"],"这是域名":["23.86"],"可以是网络包需要对方ip地址":["23.86"],"报文中包含着要访问的主机名字段":["23.87"],"中间包括一些列缓存查询以及分布式dns集群的工作":["23.87"],"该dns客户机最终会收到一份回答报文":["23.87"],"ip协议":["23.88"],"因特网是基于tcp":["23.88"],"ip协议实现的":["23.88"],"tcp":["23.88","48.23","50.34"],"ip协议由很多协议组成":["23.88"],"不同类型的协议又被放在不同的层":["23.88"],"其中":["23.88","173.68","222.12"],"位于应用层的协议就有很多":["23.88"],"比如ftp":["23.88"],"smtp":["23.88","50.31"],"传送给使用者":["23.89"],"http协议定义了浏览器怎样向万维网服务器请求万维网文档":["23.89"],"reason":["23.90","98.11"],"phrase":["23.90"],"数字状态码的可读版本":["23.90"],"包含行终止序列之前的所有文本":["23.90"],"原因短语只对人类有意义":["23.90"],"尽管响应行http":["23.90"],"给出了接收请求的服务器的主机名和端口号":["23.91"],"referer":["23.91"],"提供了包含当前请求uri的文档的url":["23.91"],"user":["23.91","97.50","126.5","148.0","166.5","173.94","195.4","214.3","217.7","220.2","226.1"],"agent":["23.91"],"将发起请求的应用程序名称告知服务器":["23.91"],"ranges":["23.92"],"理解主体时最适宜使用的自然语言":["23.93"],"视频":["23.94"],"实施的安全限制":["24.1"],"只要协议":["24.1"],"就引导后台按这种方式做下服务器配置":["24.3"],"在开发中使用proxy":["24.3"],"服务端不再返回":["24.4"],"格式的数据":["24.4"],"的缺点":["24.5"],"只支持":["24.5"],"get":["24.5","97.13","122.19","125.9","126.5","133.5","179.52","217.7","245.3","256.4"],"因为":["24.5","70.0","127.52","169.2","175.12","256.2"],"标签只能使用":["24.5"],"需要后端配合返回指定格式的数据":["24.5"],"这个":["25.1"],"response":["25.1","166.8","179.47"],"attachment":["25.2","25.3"],"消息体应该被下载":["25.2"],"默认文件名和":["25.2"],"格式有关":["25.2"],"contentdispositionfilename":["25.3"],"那些研发才懂":["25.4"],"的操作":["25.4"],"也不要把你的问题":["25.4"],"归因到":["25.4"],"设置缓存存储的最大周期":["25.5"],"超过这个时间缓存被认为过期":["25.5"],"单位秒":["25.5"],"与expires相反":["25.5"],"时间是相对于请求的时间":["25.5"],"不缓存是最容易理解":["25.5"],"每一次请求都会从服务端重新获取":["25.5"],"不进行任何缓存":["25.5"],"此策略只需要赋予":["25.5"],"切换为":["25.6"],"dist":["25.6","62.16","67.12","87.40","154.8","154.11","154.12"],"为啥我访问不了":["25.7"],"我":["25.7"],"兄弟":["25.7"],"你有了解过一个叫":["25.7"],"更为细致的控制策略":["25.8"],"甚至指定了":["25.8"],"xx":["25.8"],"路径下才能发送":["25.8"],"只在":["25.8"],"https":["25.8","65.11","87.8","97.2","99.6","123.1","134.4","152.8","166.6","281.4","286.13","296.3"],"产生":["25.8"],"secure":["25.8"],"如果":["25.8","173.28","258.5"],"头中有":["25.8"],"属性":["25.8","61.10","173.31","175.13","216.1","217.1","254.18"],"多半是":["25.9"],"浏览器其实并未存储cookie":["25.9"],"换个说法":["25.9"],"你每次发起请求":["25.9"],"服务端都认为你是一次":["25.9"],"新的会话":["25.9"],"通道":["26.1"],"即":["26.1","179.21"],"的连接很简单":["26.2"],"是无状态的":["26.2"],"握手阶段比较费时":["26.2"],"会使页面加载时间延长":["26.2"],"增加":["26.2"],"证书中包含了公钥":["26.4"],"传输给客户端":["26.4"],"客户端和":["26.4"],"服务器端开始协商":["26.4"],"前者是80":["26.5"],"后者是443":["26.5"],"http的连接很简单":["26.5"],"请求都是可以的":["27.1"],"更多请求方法的语义描述可以阅读":["27.1"],"文档":["27.1","69.10"],"首先先引入副作用和幂等的概念":["27.1"],"副作用指对服务器上的资源做改变":["27.1"],"搜索是无副作用的":["27.1"],"注册是副作用的":["27.1"],"幂等指发送":["27.1"],"m":["27.1","52.7","92.0","97.41"],"且会被浏览器保存历史纪录":["27.2"],"不会":["27.2"],"但是在抓包的情况下都是一样的":["27.2"],"pragma":["27.5"],"报文指令":["27.5"],"via":["27.5","212.1"],"本地资源未修改返回":["27.7"],"比较时间":["27.7"],"proxy":["27.9","95.24","96.5","218.5","219.10","236.2"],"authenticate":["27.9"],"返回数据的备用地址":["27.11"],"md5":["27.11"],"base64加密格式的内容":["27.11"],"md5检验值":["27.11"],"协议传输需要两个":["27.12"],"rtt":["27.12"],"接下来可以通过":["27.12"],"session":["27.12","138.31"],"因为传输数据都是走的网络":["27.13"],"可以先使用非对称加密交换秘钥":["27.14"],"简单流程如下":["27.14"],"首先服务端将公钥公布出去":["27.14"],"两端使用非对称加密的方式来通信":["27.15"],"但是因为非对称加密损耗的性能比对称加密大":["27.15"],"所以在正式传输数据时":["27.15"],"两端使用对称加密的方式通信":["27.15"],"ps":["27.15","48.10","138.9"],"都是基于":["28.1"],"自定义的拥塞控制":["28.2"],"表示重定向":["29.1"],"客户端印当据需发送请求的剩余部分":["29.2"],"或者如果请求已经完成":["29.2"],"忽略这个响应":["29.2"],"非授权信息":["29.3"],"服务器已成功处理请求":["29.3"],"但返回的信息可能来自另一来源":["29.3"],"但请求者应该继续使用原有位置来进行以后的请求":["29.4"],"查看其它位置":["29.4"],"请求者应当对不同位置使用单独的":["29.4"],"方法禁用":["29.5"],"禁用请求中指定的方法":["29.5"],"不接受":["29.5"],"服务不可用":["29.6"],"服务器目前无法使用":["29.6"],"由于超载或停机维护":["29.6"],"否则":["30.1","156.2"],"重传该数据包":["30.1"],"直到收到应答或重传次数超过规定的最大次数为止":["30.1"],"对手为什么要那样走":["31.1"],"通过这种方式":["31.1"],"棋手可以加深对这局对弈的印象":["31.1"],"找出双方攻守的漏洞":["31.1"],"从曾子的角度来看":["31.2"],"他认为每天复盘的原因":["31.2"],"进而避免未来再次出现相同的故障":["31.3"],"我们对自己的能力进行分析":["31.4"],"找到自己的优势":["31.4"],"越南盾等等":["31.5"],"进一步分析":["31.5"],"我们发现就算是同一种币种的金额":["31.5"],"其单位在不同系统的接口上的定义也是不同的":["31.5"],"不同国家的币种之间也会因为汇率转换而出现舍入误差":["31.5"],"最后":["31.5","37.2","177.6"],"作为整个复盘的结果":["31.5"],"自己复盘自己的经历":["31.7"],"可能结果会非常主观":["31.7"],"也有可能":["31.7"],"不识庐山真面目":["31.7"],"第二种方式":["31.7"],"前文故事中的故障复盘":["31.8"],"其实就是在复盘失败的经历":["31.8"],"在故障复盘中":["31.9"],"我们需要把故障的前因后果分析清楚":["31.9"],"无论一人复盘还是多人复盘":["31.10"],"一定要有可以执行的动作":["31.11"],"一定要有改进措施":["31.11"],"我们能够做到一周一次小复盘":["31.12"],"一个月一次大复盘即可":["31.12"],"流于表面":["31.14"],"把复盘报告":["31.14"],"复盘的结果必然也是扭曲的":["31.15"],"那还不如不复盘":["31.15"],"包括我自己":["31.16"],"都在说":["31.16"],"让我们复盘一下吧":["31.16"],"其实这是不对的":["31.16"],"而只有复盘之后":["31.17"],"我们才能知道":["31.17"],"我们的这次成功是出于运气还是实力":["31.17"],"如果是出于运气":["31.17"],"action":["31.18","115.0","178.7"],"report":["31.18"],"但是没成功":["32.1"],"于是百度了关键字":["32.1"],"d":["32.1","65.36","84.8","95.12","97.15","97.43","113.6","115.0","127.3","184.17","252.6","279.8","284.21","284.59","284.72","284.73","284.77","284.78","284.79","287.6"],"再尝试了":["32.1"],"方法":["32.1","44.9"],"现在想知道是哪里出问题了":["32.1"],"可以帮忙看看嘛":["32.1"],"谢谢":["32.1"],"又不见了":["32.2"],"又过了一天":["32.2"],"不回了不回了":["32.2"],"hello":["32.2","130.4","134.4","179.41","181.0","184.11"],"大佬哪去了":["32.2"],"跑去某个群里水了两句":["32.2"],"放松了一下":["32.2"],"准备回去工作":["32.2"],"艹":["32.2"],"你这":["32.2"],"提问的时候你才是":["32.3"],"孙子":["32.3"],"对":["32.3","97.38","177.4"],"大爷":["32.3"],"客气点":["32.3"],"师":["33.1"],"并将这些人员按不同工种":["33.1"],"不同职责":["33.1"],"不同系统进行组织":["33.1"],"确定这些人员之间的":["33.1"],"协作方式":["33.1"],"并关注这个组织系统是否运作良好比如沟通是否顺畅":["33.1"],"产出是否达到要":["33.1"],"求":["33.1"],"能否按时间完成等":["33.1"],"组织全局":["33.1"],"对外输出":["33.1"],"架构师的首要目标是解决业务问题":["33.1"],"实现一次编写多端生成的系统来降低实现需求的复杂性":["33.2"],"因为内部系统重构的需求的增长":["33.2"],"梳理业务流程":["33.3"],"发掘用户痛点":["33.3"],"既能支撑业务的发展":["33.5"],"而不是闷着头只知道写代码":["34.1"],"要对":["34.1"],"而用户所能评价的就是他看到的和触摸到的":["34.2"],"我们前端工程师要做的就是去把页面做到最好":["34.2"],"首先要充分理解这个领域的生存方式":["35.1"],"对于这个问题用户的有什么主张":["35.2"],"存在怎么样的约束":["35.3"],"的功能":["35.5","108.4","205.13"],"项目的未知领域":["36.1"],"假设":["36.2","173.9"],"问题":["36.2"],"完成项目需要投入的成本":["36.3"],"成本":["36.3"],"集成":["36.4"],"采购":["36.4"],"最大限度地减少组织耦合和内聚":["36.5"],"飞轮的旋转并不需要太大的能量":["37.0"],"难的是让静止的飞轮转动起来":["37.0"],"实际上":["37.0","46.4","62.6"],"我写这篇文章的过程就是一个启动飞轮的过程":["37.0"],"一开始我写的很困难":["37.0"],"但是一旦有了灵感之后":["37.0"],"就开始越写越快":["37.0"],"从工程师的角度来看":["37.0"],"如果只把飞轮思维的理解停留在":["37.0"],"上":["37.0","68.7","138.29","195.4"],"那就太表面了":["37.0"],"正如我们在亚马逊飞轮上看到的这种":["37.1"],"自增强特性":["37.1"],"柯林斯说":["37.1"],"飞轮系统的厉害之处":["37.1"],"在于它每一步的结果都是后一步的原因":["37.1"],"这种前后咬合的因果关系让飞轮系统拥有了自增强的特性":["37.1"],"在自动控制领域":["37.1"],"自增强的专业术语叫正反馈":["37.1"],"这种特性意味着飞轮系统每往前推进一步都会自动推动下一步的加强":["37.1"],"一旦这个飞轮成功地转动起来之后":["37.1"],"它便会在旋转中慢慢地积蓄能量":["37.1"],"以至于在旋转足够多的圈数之后":["37.1"],"这样飞轮才可能在旋转的过程中积蓄更多的能量":["37.2"],"在组装好飞轮之后":["37.2"],"方法论的最后一步就是测试飞轮了":["37.2"],"这一步的操作理念和本书":["37.2"],"灰度思维":["37.2","39.2"],"的基本原则完全一致":["37.2"],"如果你不是不差钱的主":["37.2"],"最初的测试最好还是通过最小可行飞轮":["37.2"],"mvp":["37.2"],"来进行":["37.2"],"直到反复推动飞轮":["37.2"],"确认飞轮能够按照预期运转之后":["37.2"],"再投入更多的资源对每个构件进行加强和升级":["37.2"],"这里再次强调":["37.2"],"推动飞轮的过程是一个漫长且一定会有反复的过程":["37.2"],"飞轮转动的原动力来自于基本的供需关系":["37.3"],"飞轮不是永动机":["37.3"],"在最后飞轮之所以能够自发转动":["37.3"],"是因为背后存在的供需关系在推动":["37.3"],"供需关系之间本来就有吸引力存在":["37.3"],"为什么一开始飞轮不能自发转动":["37.3"],"因为一开始数量极少的供需关系产生的力量很小":["37.3"],"不足以产生足够的推力":["37.3"],"而我们所做的事情":["37.3"],"推动":["37.3"],"飞轮转动":["37.3"],"就是把供需关系的双方吸引到你的飞轮上来":["37.3"],"让量变引发质变":["37.3"],"反映在表象上":["37.3"],"就是飞轮自发地转动起来了":["37.3"],"我们可以用使用灰度思维":["37.4"],"与客户会谈":["38.1"],"客户当前系统是否令人满意":["38.3"],"客户对此项产品的预算":["38.3"],"客户对其他潜在的竞争对手产品是否了解":["38.3"],"是不是有相类似的产品":["38.4"],"你提出的方案有何独特之处":["38.4"],"有哪些疑难问题":["38.4"],"提高他们的竞争优势":["38.5"],"了解客户更愿意在哪里花钱":["38.5"],"类似于":["38.6"],"电梯演讲":["38.6"],"1到1":["39.1"],"0的逐渐递增":["39.1"],"灰度":["39.1","39.11"],"是一个渐进式的过程":["39.1"],"回到故事中的dba切换的例子里":["39.1"],"对于一次性把100个分片禁读写这件事情":["39.1"],"虽然我们在操作前也分析了这样":["39.1"],"一刀切":["39.1"],"会带来怎样的影响":["39.1"],"但是我们不能打包票说实际切换时":["39.1"],"这一刀切下去之后剧情一定会按照我们的分析展开":["39.1"],"因为这个世界是复杂的":["39.1"],"我们可能会有分析上的疏漏":["39.1"],"我们掌握的知识可能是老旧的":["39.1"],"我们用我们知道的部分去分析我们并不了解的事情":["39.1"],"否则一般不需要使用":["39.2"],"发现了问题":["39.3"],"还没造成巨大的影响":["39.3"],"这就是灰度操作的价值":["39.3"],"回滚之后事情并没有结束":["39.4"],"我们还要对操作结果进行复盘":["39.4"],"复盘思维":["39.4"],"会有单独的章节介绍":["39.4"],"本着控制风险的原则":["39.6"],"我们是不会让流量直接进入这个模块的":["39.6"],"还记得前文中的怀疑精神吗":["39.6"],"另外一个是绿机房":["39.7"],"发布新代码之前":["39.7"],"我们把所有的用户流量都切到蓝机房":["39.7"],"把绿机房的流量清空":["39.7"],"如下图":["39.8","65.30","173.33","201.5"],"然后推向市场":["39.8"],"然后再根据市场反馈快速改进":["39.8"],"这其实就是一个灰度的过程":["39.8"],"再发起全额转账":["39.10"],"直到你对光影":["39.11"],"甚至在家里自己教":["39.12"],"如果对方又接受了":["39.13"],"再提一个更大的要求":["39.13"],"对结果是不是拿不太准":["39.14"],"如果是是的话":["39.14"],"40分钟":["40.0"],"自我介绍":["40.1"],"star":["40.3"],"项目背景":["40.3"],"任务":["40.3"],"几个人完成的":["40.4"],"你在里面的角色和贡献":["40.4"],"比如要让你来做facebook的":["40.5"],"动态消息":["40.5"],"newsfeed":["40.5"],"月为每月okr":["40.6"],"我们会在月末对每个组员做目标管理":["40.6"],"通过设定可衡量的关键结果":["40.6"],"帮助组员每月都能得到可量化的能力提升":["40.6"],"针对使用技术的参考话术":["40.6"],"我们这边前端有3个技术方向":["40.6"],"说到这里":["41.0"],"师兄吸了一口烟":["41.0"],"说他自己就是在这个时候招进来的":["41.0"],"我知道故事到这里并没有结束":["41.0"],"否则刚来公司的我就不会看到系统满天飞的情况了":["41.0"],"果然":["41.0"],"吐完烟圈之后":["41.0"],"师兄继续说了下去":["41.0"],"大家在这个新系统里迭代了2年多时间":["41.0"],"随着支付场景和支付渠道的增加":["41.0"],"似曾相识的问题又出现了":["41.0"],"我们发现就算是一个有着十几万代码的系统":["41.0"],"也已经无法支持井喷般的业务需求了":["41.0"],"何况当时我们的系统还是为自己的电商业务定制的":["41.0"],"现在的它还不能作为产品服务外部商户":["41.0"],"这个反馈可以是自己的主观感受也可以是他人的评价":["41.1"],"之后":["41.1","133.4","147.1","184.22","193.5"],"按照反馈":["41.1"],"我们可以为这件事情增加复杂度":["41.1"],"把它升级到1":["41.1"],"这将是一个全新的版本":["41.1"],"然后依次类推":["41.1"],"收集反馈":["41.1"],"增加复杂度":["41.1"],"升级版本":["41.1"],"直到产出的结果让我们":["41.1"],"或者利益相关者":["41.1"],"满意为止":["41.1"],"这个让我们满意的版本就是迭代的最终版":["41.1"],"在这个过程中":["41.1"],"如果你的计划足够详细":["41.2"],"那么在这一步可以":["41.2"],"无脑":["41.2"],"也即结果检查阶段":["41.2"],"这个阶段需要对实际结果和预期结果进行检查和分析":["41.2"],"哪里做的好":["41.2"],"解决方案又是什么":["41.3"],"a":["41.3","41.4","41.5","44.2","46.2","48.15","52.13","87.5","102.0","104.0","119.8","125.8","127.13","127.15","127.54","140.1","171.0","173.1","173.55","173.64","174.6","181.0","188.0","206.9","219.10","243.2","248.0","284.4","284.59","284.60","285.1","285.9","286.6","286.60","295.10"],"形成标准变更流程":["41.3"],"记录问题和解决方案":["41.3"],"准备下一次变更":["41.3"],"除了pdca循环本身越做越好的好处之外":["41.3"],"为什么会这样":["41.4"],"解决方案是什么":["41.4"],"形成写系列文章的标准流程":["41.4"],"在本次pdca中没有解决的问题":["41.4"],"若有方案":["41.4"],"能够快速支持xx支付工具吗":["41.5"],"不行":["41.5"],"为什么":["41.5","48.11","113.3"],"是目标变了还是功能没做好":["41.5"],"后续的优化方案是什么":["41.5"],"在过去的研发生涯里":["41.6"],"我见过开局一张图":["41.6"],"没有带脑子的产品设计文档":["41.6"],"尽力确保计划阶段和处理阶段的动作和管理者的意图能够没有偏差地执行下去":["41.7"],"此外":["41.7","48.1"],"你可以建立自己的pdca循环来辅助自己的执行":["41.7"],"很多时候":["41.7"],"ooda循环理论认为":["41.8"],"武装冲突可以看作是敌对双方互相较量谁能更快更好地完成ooda循环":["41.8"],"双方都要从观察开始":["41.8"],"观察自己":["41.8"],"观察环境和敌人":["41.8"],"基于观察":["41.8"],"获取相关的外部信息":["41.8"],"根据感知到的外部威胁":["41.8"],"及时调整系统":["41.8"],"做出应对决策":["41.8"],"并采取相应行动":["41.8"],"使用场景和例子":["41.8"],"ooda循环非常适合需要快速决策和快速推进的场景":["41.8"],"在我每天工作的环境中":["41.8"],"除了自己提前安排好的任务之外":["41.8"],"还需要处理大量的突发性事件":["41.8"],"这些突发性事件":["41.8"],"在pdca循环中":["41.9"],"d和a阶段涉及到实际操作":["41.9"],"可以用到灰度思维":["41.9"],"c阶段涉及到结果的检查和分析":["41.9"],"我们会看到":["41.10"],"在pdca循环和ooda循环里":["41.10"],"都有出现了字母d":["41.10"],"人才培养":["42.0"],"技能加强":["42.0"],"设计原则和设计质量":["42.1"],"确保用户数据的隐私和安全性":["42.1"],"确保坚持合适的开发周期":["42.1"],"建立技术论坛":["42.2"],"完全穷尽":["43.1"],"也就是对于一个重大的议题":["43.1"],"要保证完整性":["43.2"],"第二条是独立性":["43.2"],"在世":["43.3"],"离世":["43.3"],"在世维度":["43.3"],"成为一种可能":["43.5"],"换句话说":["43.5","43.6"],"是什么":["43.6","64.11"],"你希望分类后解决什么问题":["43.6"],"得出什么结论":["43.6"],"第4步":["43.7"],"确认有没有遗漏或重复":["43.7"],"分完类之后必须重新检视一遍":["43.7"],"看看有没有明显的遗漏或重复":["43.7"],"上面所说的是1":["43.9"],"概念上面来的":["43.13"],"举个简单的例子":["43.13"],"其实从上面的例子来看":["43.14"],"我们的切入点":["43.14"],"从个性到抽象形成事物分解之骨架":["43.14"],"由个性之特点完善枝叶":["43.14"],"形成一个完整的完全穷尽结构":["43.14"],"举个简单例子":["43.14"],"对于沟通交流这一个切入点来说":["43.14"],"对于负责人和普通开发要求就会有所不同":["43.14"],"事中":["44.1"],"事后的分析方法":["44.1"],"我们的确可以在事前识别可能的错误并予以避免":["44.1"],"在工程实践中":["44.1"],"我们把这种事先预判并避免错误发生的工程思维":["44.1"],"称为防错思维":["44.1"],"相应地":["44.1"],"与防错思维结合的设计方式和防错装置被称作防错设计":["44.1"],"插头":["44.1"],"a银行0供应商白名单":["44.2"],"a融资者":["44.2"],"供应商白名单":["44.2"],"print":["44.2"],"最初时银行的供应商列表":["44.2"],"a融资者融资":["44.2"],"实际白名单":["44.2"],"actual":["44.2","232.4"],"又卡住了":["44.3"],"于是大家又把棺材吊出来":["44.3"],"第三次又转了180度":["44.3"],"成功放进去了":["44.3"],"此时大家才发现原来第一次的方向就已经是正确的了":["44.3"],"同样是接口":["44.3"],"有没有比usb接口更靠谱的设计呢":["44.3"],"别说":["44.3"],"还真有":["44.3"],"继续上图":["44.3"],"使用type":["44.3"],"c接口时":["44.3"],"虽然和usb接口一样还是有两个方向插入":["44.3"],"但是这两个方向都是正确的":["44.3"],"用户完全不会有插错的心理负担":["44.3"],"具有外行人来做也不会错的构造":["44.4"],"不需要经验与直觉":["44.4"],"还是无脑":["44.4"],"对于苹果手机的闹铃来说":["44.5"],"它的目的就是尽可能地把你叫醒":["44.5"],"还是那句话":["44.5"],"防呆不防傻":["44.5"],"毕竟":["44.5","265.5"],"我们永远也叫不醒一个装睡的人":["44.5"],"安卓手机的闹铃我没研究过":["44.5"],"有研究过的朋友可以留言分享给大家":["44.5"],"火车站里的自动售票机":["44.5"],"下图中是火车站中的自动售票机":["44.5"],"火车售票机":["44.5"],"仔细观察的话会发售票机上放置身份证的位置是一个斜面":["44.5"],"参与角色":["44.6"],"避免产品被用户误用":["44.6"],"确保产品只有一种正确的使用方式":["44.6"],"架构师":["44.6"],"预判的前提是设计者具有丰富的经验":["44.7"],"能够提前发现问题":["44.7"],"如果调用者不满足业务校验":["44.8"],"那么api拒绝提供服务":["44.8"],"并返回明确的错误信息":["44.8"],"见下表格":["44.9"],"说明":["44.9","122.7"],"例子":["44.9"],"消除":["44.9"],"消除可能的失误":["44.9"],"本文第二节中的修改后的交集函数":["44.9"],"替代":["44.9"],"用更可靠的流程代替":["44.9"],"从手动拉取文件变为程序拉取文件":["44.9"],"确保在使用后者时不会出现偏差":["44.10"],"防错思维中的事后防错可以和根因思维和复盘思维结合":["44.10"],"社区评审":["45.4"],"运用社区":["45.4"],"包括其优缺点":["45.5"],"成本相关信息":["45.5"],"开发":["45.5","181.0"],"运营":["45.5"],"许可证":["45.5"],"介绍难点":["45.6"],"需要解决的问题":["45.6"],"展示可能的问题解决方案":["45.6"],"号召听众行动":["45.6"],"成为导师":["45.7"],"计划自己想要实现的目标":["45.7"],"思维":["46.1"],"透过现象看到本质":["46.1"],"然后从根本上解决问题":["46.1"],"工作了这么久":["46.1"],"我们可以继续追问下去":["46.2"],"数据库日志什么会打满":["46.2"],"仔细深挖下去":["46.2"],"我们一定能得到一个答案":["46.2"],"得到答案之后":["46.2"],"我们可以继续问下去":["46.2"],"循环往复":["46.2"],"why分析法非常考验提问者的经验":["46.3"],"需要在提问时找到问题的主要矛盾":["46.3"],"不同角度的提问":["46.3"],"会把分析导向完全不同的方向":["46.3"],"最后导出的根因也不尽相同":["46.3"],"比如下面这个例子":["46.3"],"为什么我们的系统奔溃了":["46.3"],"因为外部请求的流量太大了":["46.3"],"我们的在瞬间系统处理不了这么多的流量":["46.3"],"此时的下一个问题":["46.3"],"可以是":["46.3"],"为什么外部请求的流量会这么大":["46.3"],"也可以是":["46.3","195.7"],"为什么我们的系统在瞬间处理不了这么多请求量":["46.3"],"前者往下推":["46.3"],"可能会得出我们要对流量进行限制的结论":["46.3"],"而后者推下去则可能会推出我们需要对系统进行性能优化的结论":["46.3"],"如果在分析时问错了问题":["46.3"],"即便结果再正确也没有意义":["46.3"],"甚至":["46.3"],"这种回溯的方法":["46.4"],"一般称为逆推法":["46.4"],"我在前文中已经花了大量篇幅描述一种逆推法":["46.4"],"why分析法":["46.4"],"至于非线性问题":["46.4"],"不同于线性问题中原因和结果的明确性":["46.4"],"非线性问题并没有一个明确的原因":["46.4"],"它的表象往往是多个原因交叉作用的结果":["46.4"],"直观来说":["46.4"],"线性问题是前后关系明确的因果链":["46.4"],"这个根因是不是在其他情况下也是适用的":["46.5"],"这是一个由具体问题到一般问题推进的过程":["46.5"],"当然也是一个让人头大的过程":["46.5"],"工程师思维":["46.5"],"jpg":["46.5","97.36","98.1","99.9","138.34","152.25","152.28","152.29","177.11"],"甚至对三者的动态关系有一个实实在在的理解":["46.6"],"在你的心里没有建立起一套完备的模型":["46.6"],"你是不可能在这个领域用好根因思维的":["46.6"],"相当于加了思维杠杆":["46.7"],"我们的解决方案自然也会因此而变得更有价值":["46.7"],"根因思维的娴熟应用建立在拥有丰富经验的基础之上":["46.7"],"一个叫淑慧的人试用物联网":["47.2"],"通信子网":["47.2"],"专注于数据传输通信":["47.2"],"ftp":["47.3","286.13"],"电子邮件":["47.3"],"数据加密解密":["47.4"],"password传输":["47.4"],"管理":["47.5"],"终止会话":["47.5"],"功能二":["47.5"],"功能三":["47.6","47.9"],"流量控制":["47.6"],"传输速度匹配控制":["47.6"],"接收方根据自己的处理速度":["47.6"],"控制发送方速度":["47.6"],"差错控制":["47.7"],"比如说":["47.7"],"奇偶校验码":["47.7"],"功能四":["47.7","47.8"],"拥塞控制":["47.7"],"访问":["47.8","87.39","138.29"],"接入":["47.8"],"单工":["47.9"],"半双工":["47.9"],"双攻":["47.9"],"在传输数据的过程中":["48.0"],"通过各种算法保证数据的可靠性":["48.0"],"还规定在连接建立后传送的所有报文段都必须把":["48.1"],"置为一":["48.1"],"psh":["48.1"],"该字段为一表示接收端应该立即将数据":["48.1"],"push":["48.1","53.2","53.10","56.5","64.10","64.14","65.12","97.61","131.2","131.4","174.20","283.11","286.15"],"在这之前需要了解一个重要的性能指标":["48.2"],"状态":["48.3","48.10"],"在通信开始前":["48.3"],"双方都会创建":["48.3"],"发送完成后便进入":["48.5","50.12"],"但是因为网络原因造成了超时":["48.6"],"这时":["48.6","48.16"],"会启动超时重传的机制再次发送一个连接请求":["48.6"],"此时请求顺利到达服务端":["48.6"],"服务端应答完就建立了请求":["48.6"],"然后接收数据后释放了连接":["48.6"],"假设这时候连接请求":["48.6"],"fin":["48.7"],"到":["48.9","50.16","96.10"],"的连接已经释放":["48.9","50.16"],"不再接收":["48.9","50.16"],"通过延迟确认的技术":["48.10"],"要进入":["48.11"],"协议包含停止等待":["48.12"],"发送一段报文":["48.14"],"都要停止发送并启动一个定时器":["48.14"],"端重传":["48.15"],"在超时的情况下也可能出现应答很迟到达":["48.16"],"可以在没有收到应答的情况下持续发送窗口内的数据":["48.17"],"这样相比停止等待":["48.17"],"在连续接收报文时":["48.18"],"可能会遇到接收到序号":["48.18"],"的报文后":["48.18"],"当发送端接收到应答报文后":["48.19"],"会随之将窗口进行滑动":["48.19"],"timer":["48.20","173.52","195.4"],"该定时器会定时发送请求给对端":["48.20"],"拥塞处理包括了四个算法":["48.21"],"分别为":["48.21","171.0"],"mss":["48.22"],"一个分段的最大数据量":["48.22"],"会认为网络拥塞了":["48.23"],"会马上进行以下步骤":["48.23"],"ack":["48.24","48.26","50.23","179.48"],"一旦收到一个新的":["48.26"],"的报文":["48.27"],"那么该分段的最大序号就是":["48.27"],"发送端只会收到":["48.27"],"序号为":["48.27"],"拥塞窗口实现了对流量的控制":["48.28"],"k":["49.1","95.40","195.8"],"即syn":["49.1"],"ack包":["49.1","176.15"],"此时服务器进入syn":["49.1"],"recv状态":["49.1"],"在这之前还需要接受服务器发送的最":["49.2"],"后的数据":["49.2"],"服务器将最后的数据发送完毕后":["49.2"],"就向客户端发送连接释放报文":["49.2"],"由于在半关闭状态":["49.2"],"服务器很可能又发送了一些数据":["49.2"],"假定此时的序列号为seq":["49.2"],"不可靠的一种数据传输协议":["50.0"],"首先不可靠性体现在无连接上":["50.0"],"传输层和应用层":["50.1"],"链路层":["50.1"],"负责封装和解封装ip报文":["50.1"],"发送和接受arp":["50.1"],"rarp报文等":["50.1"],"负责路由以及把分组报文发送给目标网络或主机":["50.1"],"处于ip协议的上一层":["50.2"],"udp有不提供数据包分组":["50.2"],"只会给数据增加一个":["50.4","51.1"],"头标识下是":["50.4","51.1"],"多对多":["50.5"],"多对一的方式":["50.5"],"既不合并":["50.6"],"也不拆分":["50.6"],"即使网络条件不好":["50.7","51.2"],"也不会对发送速率进行调整":["50.7","51.2"],"这样实现的弊端就是在网络条件不好的情况下可能会导致丢包":["50.7"],"但是优点也很明显":["50.7"],"ipv4":["50.8"],"可选":["50.8","175.12"],"字段":["50.8","87.14","99.14","162.3","195.4"],"该字段用于发现头部信息和数据中的错误":["50.8"],"于是就用到了tcp":["50.9"],"tcp协议全称是传输控制协议是一种面向连接的":["50.9"],"可靠的":["50.9"],"基于字节流的传输层通信协议":["50.9"],"可以看到建立一个tcp连接的过程为":["50.10"],"此时连接建立成功":["50.13"],"这里可能大家会有个疑惑":["50.13"],"在断开连接时两端都需要发送":["50.14"],"便进入":["50.17"],"超时会被抛弃":["50.18"],"时间":["50.18"],"若该时间段内没有":["50.18"],"这样能建立可靠的连接":["50.20"],"如果发送端实体在合理的往返时延":["50.23"],"tcp可以立即发送一个数据段":["50.25"],"面向报文":["50.28"],"面向字节流":["50.28"],"首部开销":["50.28"],"首部开销小":["50.28"],"网络负担重但对响应速度要求高的场景":["50.29"],"eg":["50.29"],"ip电话":["50.29"],"邮局协议":["50.31"],"收邮件用":["50.31"],"simple":["50.31","95.18","227.1"],"mail":["50.31"],"网络时间协议":["50.32"],"用于网络同步":["50.32"],"dhcp":["50.32","50.33"],"简单网络管理协议":["50.33"],"用于网络信息的收集和网络管理":["50.33"],"传输来的准确":["50.34"],"并且udp":["51.0"],"协议也没有任何控制流量的算法":["51.0"],"一直会以恒定的速度发送数据":["51.2"],"在传输数据报文时是很高效的":["51.3"],"头部包含了以下几个数据":["51.3"],"但是正是因为这些缺点造就了它高效的特性":["51.5"],"在很多实时性要求高的地方都可以看到":["51.5"],"不需要流量控制":["51.6"],"只会把想发的数据报文一股脑的丢给对端":["51.6"],"请你在该数组中找出和为目标值的那":["52.1"],"两个":["52.1","181.0"],"这个数组为例":["52.5"],"来模拟一下这个思路":["52.5"],"第一次遍历到":["52.5"],"此时":["52.5","99.6","198.2"],"为空":["52.5"],"以":["52.5","61.3"],"判断当前值对应的":["52.6"],"差值是否存在":["52.6"],"是否已遍历过":["52.6"],"的元素数量分别为":["52.7"],"n":["52.8","179.63","226.1","228.1","231.6","235.4"],"取其中较大的元素":["52.10"],"把它从":["52.10"],"我们还需要考虑其中一个提前到头的这种情况":["52.11"],"如果提前遍历完的是":["52.11"],"的有效部分":["52.11"],"剩下的是":["52.11"],"当两个数组都没遍历完时":["52.12"],"指针同步移动":["52.12"],"取较大的值":["52.12"],"中是否存在三个元素":["52.13"],"满足要求的三元组集合为":["52.14"],"然后":["52.15","68.4","103.16","115.0","173.5"],"对数组进行遍历":["52.15"],"每次遍历到哪个数字":["52.15"],"处理左指针元素重复的情况":["52.16"],"else":["52.16","57.7","95.22","111.2","133.4","173.64","174.52","178.4","206.5","206.8","206.12","212.1","221.3","231.4","241.6","283.7","286.15","287.3","291.6"],"reduce":["52.18","127.45","167.4","179.33","195.9","236.4","284.84","285.3"],"cur":["52.18","179.33"],"val":["53.2","53.3","53.6","53.9","284.84"],"continue":["53.3","53.6","53.9","131.1"],"right":["53.3","53.6","53.12","57.3","106.24","147.2","174.48"],"left":["53.5","53.8","53.11","53.12","106.24","147.2","174.24","174.44","174.48"],"循环每层的节点数量次":["53.10"],"l":["53.11","103.13"],"shift":["53.11","156.14","204.2","260.2","294.1"],"如果是叶子节点直接返回深度就可":["53.11"],"没有叶子节点就把深度数量更新":["53.12"],"二叉树":["54.1"],"堆":["54.1"],"贪心算法":["54.2"],"如左边和右边数组都有值":["55.1"],"左边队头的值小于右边队头的值":["55.1"],"就左边队头出队":["55.1"],"否则就是右边队头出队":["55.1"],"如果当前值小于基准就放到基准前数组里面":["55.2"],"如果当前元素小于前一个元素":["55.3"],"就开始往后移动":["55.3"],"如果当前这个元素":["55.4"],"小于最小值的下标":["55.4"],"就更新最小值的下标":["55.4"],"for":["56.4","64.18","125.0","148.1","153.7","156.6","173.22","174.20","174.33","174.56","179.62","218.4","218.5","219.10","221.1","228.3","232.2","241.1","241.7","241.10","283.2","286.19","286.54"],"abca":["57.2"],"或":["57.3","115.0","122.11","151.12","181.0"],"的字符串是否回文":["57.3"],"如果是的话":["57.3"],"那么就意味着如果删掉被":["57.3"],"尝试判断跳过右指针元素后字符串是否回文":["57.4"],"mad":["57.6"],"pad":["57.6"],"false":["57.6","68.8","95.13","95.23","96.5","97.2","98.13","106.27","127.18","154.16","156.6","156.19","159.9","166.8","173.25","174.44","179.29","182.1","191.2","195.8","241.1","241.9","241.10","245.3","252.4"],"若该字符串对应长度的数组还不存在":["57.7"],"则先创建":["57.7"],"搜索方法":["57.7"],"若该字符串长度在":["57.7"],"举例由空行隔开的数个缩进块":["60.0"],"chunk1":["60.0"],"chunk2":["60.0"],"chunk3":["60.0"],"三个缩进块共同组成了缩进式代码块":["60.0"],"链接引用定义":["60.0"],"link":["60.0","123.1","126.2","127.54","137.0","146.3","179.58"],"reference":["60.0","112.2","230.2"],"definitions":["60.0"],"链接引用定义由链接标签":["60.0"],"冒号":["60.0"],"可选的空白":["60.0"],"链接目标":["60.0"],"可选的空白及可选的链接标题组成":["60.0"],"举个例子":["60.0","72.1","133.3"],"title":["60.0","89.6","114.29","122.0","123.1","168.3","279.5","279.10","286.47"],"但这只是一个定义":["60.0"],"并不会有任何展示":["60.0"],"就像我们在":["60.0"],"javascript":["60.0","67.3","87.5","97.18","97.23","99.6","127.39","138.34","146.3","154.9","173.19","179.51","195.7","200.5","203.3","284.21","284.36","284.37"],"中声明了一个变量一样":["60.0"],"动态的计算":["61.0"],"html根元素的font":["61.0"],"size":["61.0","90.0","97.35","114.21","170.4","170.6","295.4"],"图表中通过":["61.0"],"动态计算字体":["61.0"],"位移等":["61.0"],"布局的自适应代码量少":["61.0"],"当屏幕的尺寸比例大于":["61.2"],"200px":["61.3"],"的":["61.3","61.17","73.0","75.3","97.42","102.1","104.0","120.4","133.7","140.5","156.11","162.3","173.13","175.12","209.7","243.13","265.0"],"div":["61.3","81.5","89.6","156.1","156.3","156.18","168.7"],"其所占的宽高":["61.3"],"里配置一下":["61.5"],"utils":["61.5","195.9"],"的路径":["61.5"],"就可以全局使用了":["61.5"],"path":["61.5","61.6","62.13","62.14","64.13","72.5","81.6","97.17","106.23","115.0","154.7","181.0","195.9","214.2","236.7"],"require":["61.5","61.6","126.3","140.2","173.95","177.6","195.4"],"function":["61.6","61.18","81.5","86.5","97.22","99.14","100.3","108.1","112.3","127.37","132.1","154.14","159.9","159.13","162.0","162.1","175.7","177.6","178.5","179.15","179.63","204.6","206.10","236.0","239.2","241.4","250.2","251.0","252.4","283.9","286.69","287.4"],"resolve":["61.6","81.6","98.7","141.4","154.5","154.7","154.8","154.11","154.12","161.0","195.9","204.2","283.6"],"dir":["61.6","141.8","195.9","275.2"],"join":["61.6","103.12","228.1","295.5","295.7"],"dirname":["61.6","97.2","154.5","154.7","154.8","154.11","154.12","195.9"],"px2vh":["61.7"],"大小":["61.8","177.10"],"listento":["61.8"],"unbind":["61.8"],"removeeventlistener":["61.8","178.6","204.3"],"removelistener":["61.8"],"delete":["61.8","103.12","159.13","195.4"],"clientwidth":["61.9"],"innerwidth":["61.9","147.3"],"documentelement":["61.9","61.18"],"scale":["61.9","121.4","150.12","168.3","286.47","286.48"],"02":["61.11"],"height":["61.12","92.0","97.35","106.14","106.18","106.41","106.51","168.7","169.3","179.4"],"width":["61.12","97.35","106.18","106.31","121.4","150.12","160.0","170.14","279.1","279.6"],"inline":["61.12","170.15"],"当前屏幕宽高比小于设计稿宽高比":["61.13"],"所以我们需要缩放的比例是":["61.13"],"屏幕宽度除以设计稿宽度":["61.13"],"75如何居中":["61.13"],"首先我们利用":["61.13"],"translate":["61.13"],"通过":["61.14","68.7","122.24","184.28","190.2","208.7","220.7"],"进行等比例计算":["61.14"],"显示比例保持":["61.16"],"rem02":["61.16"],"网页加载后":["61.17"],"用":["61.17","106.31","180.1"],"去计算当前浏览器的宽度":["61.17"],"并设置":["61.17","181.0"],"在工具函数文件中新建一个":["61.18"],"文件":["61.18","80.1","97.27","117.2","175.13","177.7","254.16"],"用于动态计算":["61.18"],"font":["61.18","97.35","106.3"],"init":["61.18","64.14","64.21","71.22","71.23","94.3","218.8"],"screenratiobydesign":["61.18"],"docele":["61.18"],"sethtmlfontsize":["61.18"],"screenratio":["61.18"],"数据大屏最简单自适应方案":["61.19"],"无需适配rem单位":["61.19"],"vm":["61.19","195.4"],"库生成ast":["62.1"],"因为babel内部是使用这个库生成ast的":["62.1"],"语句":["62.2"],"模块语法":["62.2"],"statement":["62.3"],"数组":["62.3","115.0","265.3"],"它俩唯一的区别是表达式执行完以后有返回值":["62.4"],"所以expressionstatement表示这个表达式是被当作语句执行的":["62.4"],"这里console":["62.5"],"log就是callee的值":["62.5"],"为什么memberexpression外层有一个callexpression呢":["62.6"],"我们可以理解为":["62.6"],"memberexpression中的某一子结构具有函数调用":["62.6"],"都是identifer":["62.7"],"trailingcomments":["62.9"],"表示开始的注释":["62.9"],"中间的注释":["62.9"],"结尾的注释":["62.9"],"export":["62.10","81.1","81.6","96.2","96.14","97.17","112.4","127.9","153.8","204.6","217.2","250.2","251.0","251.1","275.2"],"default":["62.10","81.6","96.2","96.14","97.17","112.4","114.27","153.8","204.6","219.3","222.3"],"visitor":["62.11","64.13","64.18","98.2"],"callexpression":["62.11","62.13","64.16"],"calleepath":["62.12","62.14"],"callee":["62.12","179.13"],"检查callee中是否符合":["62.12"],"opts":["62.13"],"remove":["62.14","111.2","152.20","236.7","294.1"],"封装函数进行操作":["62.14"],"removeconsoleexpression":["62.14"],"value":["62.15","89.6","93.1","103.7","127.30","129.2","130.8","156.5","173.85","175.5","179.29","195.8","219.3","236.5","241.6"],"commentblock":["62.15"],"commentline":["62.15"],"includes":["62.15","64.15","221.3","241.6","286.61","291.2"],"isarray":["62.15","221.1","231.4","231.6","241.1","241.10"],"t":["62.15","82.0","114.22","138.16","162.3","206.9","251.0","252.6"],"引入插件":["62.16"],"plugins":["62.16","81.6","96.14","97.2","154.7","154.15","163.0","192.1","192.2","192.3","195.9","243.2"],"index":["62.16","62.21","68.11","81.2","87.14","96.1","99.6","99.11","113.6","119.4","156.10","241.7","286.43"],"cjs":["62.16"],"belongcurrentline":["62.17"],"leadingcomments":["62.18"],"comment":["62.18","286.55"],"猪":["63.0"],"标点符号":["63.0","136.1"],"在这一步骤中可以很快的发现第一个错误":["63.0"],"在句末使用的是一个逗号":["63.0"],"实际应该使用句号":["63.0"],"接着再对主语":["63.0"],"设计篇侧重整体设计":["64.0"],"原理篇则是手撕代码":["64.0"],"en":["64.2","279.4","291.5"],"wikipedia":["64.2"],"org":["64.2","94.1","141.4"],"wiki":["64.2"],"programming":["64.2"],"的函数调用编译成类似":["64.2"],"像这样对中文语句进行了主谓宾的拆解得到了":["64.3"],"但这并不能帮助我们判断该条语句是否合法":["64.3"],"还需要进行":["64.3"],"语法解析":["64.3"],"进入callexpression":["64.4"],"进入numberliteral":["64.4"],"离开numberliteral":["64.4"],"离开callexpression":["64.4"],"离开program":["64.4"],"或者再结合tokens":["64.5"],"按照指定的规则":["64.5"],"number":["64.7","173.66","184.33","187.0","207.16","241.4"],"接下来检测字符串":["64.7"],"这里我们只检测双引号":["64.7"],"和上述同理也是截取连续完整的字符串":["64.7"],"因为此时已经进入这个节点了":["64.9"],"接下来就根据node节点类型来处理了":["64.9"],"switch":["64.9","115.0","178.5"],"case":["64.9","97.50","115.0","178.5","285.2"],"这个属性就是新ast的body":["64.10"],"因为是引用":["64.10"],"所以后面可以直接操作就的ast":["64.10"],"context":["64.10","195.9","210.0","218.8","239.5","252.3"],"用之前创建的访问器来访问这个ast的所有节点":["64.10"],"traverser":["64.10"],"针对于数字片段的处理":["64.10"],"enter":["64.10","206.1"],"parent":["64.10","106.21","214.1","216.6"],"创建一个新的节点":["64.10"],"其实就是创建新ast的节点":["64.10"],"这个新节点存在于父节点的body中":["64.10"],"拿到新的ast":["64.11"],"output":["64.11","76.3","154.7","154.8","154.11","154.12","178.8","195.9"],"生成新代码":["64.11"],"现在一个小型的编译器就完整实现了":["64.11"],"我们来测试一下":["64.11"],"测试通过":["64.11"],"image":["64.11","65.11","103.1","106.23","114.3","114.17","114.21","115.0","155.1","170.15","173.33","177.14","191.1","191.3","262.0","263.5"],"png":["64.11","99.10","115.0","138.34","139.4","146.2","159.8","159.12","171.0","191.1","191.3","263.4"],"ast的广泛应用":["64.11"],"在讲ast的广泛应用之前":["64.11"],"我们先来了解一下":["64.11"],"babel":["64.11","115.0","154.16","193.7"],"以免一部分同学不熟悉":["64.11"],"影响后面的学习":["64.11"],"其实就是一个最常用的javascript编译器":["64.11"],"它能够转译":["64.11"],"ecmascript":["64.11","115.0"],"generator":["64.12","154.4","154.17","173.30"],"源代码解析成":["64.12"],"xxx":["64.13","87.26","97.41","126.2","154.12","173.68"],"老规矩":["64.13"],"先看普通函数之前的ast":["64.13"],"如果现在再让我们去修改函数名":["64.13"],"其实也可以通过":["64.13"],"的方式更简单":["64.13"],"好了":["64.13","154.20"],"进入正题":["64.13"],"在写箭头函数转换插件之前":["64.13"],"我们首先得知道代码转换前后的区别":["64.13"],"还是通过":["64.13"],"向父作用域内放入一个":["64.14"],"id":["64.14","64.22","71.9","89.6","89.8","98.8","99.13","114.21","168.7","175.10","176.1","181.0","195.4","286.30"],"identifier":["64.14"],"生成标识符节点":["64.14"],"也就是变量名":["64.14"],"thisexpression":["64.14"],"生成this节点":["64.14"],"也就是变量值":["64.14"],"思路":["64.14","64.16"],"遍历当前节点的子节点":["64.14"],"就收集起来":["64.14"],"thispaths":["64.14"],"获取当前节点this的路径":["64.14"],"traverse":["64.14","214.0"],"找到符合的方法名":["64.15"],"sum":["64.15","149.4","174.8","284.84"],"那它就会变成":["64.16"],"写到这一步我们看看效果":["64.16"],"引入成功":["64.16"],"在获取":["64.16"],"代码块的ast":["64.16"],"然后将其插入到函数的顶层":["64.16"],"这里需要考虑的是":["64.16"],"函数共有四种声明方式":["64.16"],"我们都需要考虑进来":["64.16"],"先生成":["64.16"],"loggerid就是loggerlib":["64.16"],"第二个参数":["64.16"],"代表执行该函数无传参":["64.16"],"expressionstatement":["64.16"],"我们可以将生成后的该节点挂载在state对象下":["64.16"],"state就是一个用来暂存数据的对象":["64.16"],"是一个容器":["64.16"],"用于共享数据":["64.16"],"在state上面挂在一个节点":["64.16"],"loggernode":["64.16"],"no":["64.17","67.10","145.6","214.0","283.1"],"禁用":["64.17"],"fix":["64.17","216.2"],"自动修复":["64.17"],"eslintplugin":["64.17"],"遍历前":["64.17"],"file":["64.17","119.5","195.9"],"errors":["64.17"],"这个别名来捕获所有作用域节点":["64.18"],"然后通过":["64.18","211.0"],"取出作用域内的所有变量":["64.18"],"uglifyplugin":["64.18"],"这是一个别名":["64.18"],"用于捕获所有作用域节点":["64.18"],"语句快":["64.18"],"给这些捕获到的变量重新命名":["64.18"],"找出引入模块是libraryname的语句":["64.19"],"获取节点":["64.19"],"specifiers":["64.19"],"获取批量导入声明数组":["64.19"],"如果当前的节点的模块名称是我们需要的库的名称":["64.19"],"并且导入不是默认导入才会进来":["64.19"],"checker":["64.20"],"webpack":["64.20","115.0","154.19"],"拿到声明的类型":["64.21"],"inittype":["64.21"],"这里拿到的是真实值的类型":["64.21"],"stringliteral":["64.21"],"variableannotation":["64.22"],"gettypeannotation":["64.22"],"variabletype":["64.22"],"valuetype":["64.22"],"第三步":["64.23","126.4"],"拿到函数定义时的泛型":["64.23"],"然后结合第二步将":["64.23"],"t赋值为number":["64.23"],"可以手动查找就不要遍历":["64.24"],"访问者也会尝试在查找一个特定节点类型时调用":["64.24"],"name":["64.25","65.28","65.29","81.2","86.2","97.61","114.14","142.3","142.4","142.7","142.8","142.14","142.15","142.17","142.18","142.20","150.12","154.11","154.12","175.8","175.10","183.5","192.2","195.8","195.9","215.2","217.7","236.0","241.8","241.9","279.1","279.6","288.4"],"myvisitor":["64.26"],"在这里gitlab":["65.1"],"cd就是gitlab官方发布的一种自动流水线帮助开发者完成重复性工作的一个服务":["65.1"],"runner去做什么":["65.4"],"runner不是一个配置项":["65.4"],"公共runner":["65.6"],"container":["65.8","65.36","106.22","114.3","207.4"],"cask":["65.9"],"alpine":["65.11","114.23"],"latest":["65.11","73.0","95.3"],"com":["65.11","67.10","87.4","96.13","98.8","99.6","103.13","123.1","134.4","138.32","138.33","158.4","164.4","175.10","181.0","270.0","280.1","281.5","296.3"],"master":["65.12","117.1"],"note":["65.12","249.0"],"在较低gitlab版本":["65.12"],"比如11":["65.12"],"yaml":["65.13","97.61"],"syntax写法详情具体请见":["65.13"],"在单个的流水线任务执行之前进行配置":["65.17"],"gitlab":["65.18"],"ci":["65.18","65.29","97.47"],"关键字":["65.18","106.29","115.0","173.8","173.23"],"ci的关键字有很多":["65.18"],"文件夹目录路径":["65.19"],"npm":["65.19","97.20","97.33","97.58","143.7","143.8","143.9"],"all":["65.21","74.3","84.3","138.35","206.15","256.4"],"jobs":["65.21","73.0","97.61"],"can":["65.21","162.3","206.9","214.1","214.3","232.4","252.5"],"比较常用的有":["65.22"],"如果没有自定义stages":["65.23"],"那么默认的stages为":["65.23"],"build":["65.23","94.6","114.32","117.2"],"deploy":["65.23"],"post":["65.23","111.4","122.19","175.8","216.2","220.3","258.6","282.2"],"modules":["65.25","85.2","85.3","87.28","96.2","154.5","154.10","154.16","154.17","177.6"],"在这里写出需要缓存的文件的路径":["65.25"],"rspec":["65.26"],"pipeline时触发":["65.27"],"配置branch名称来规定触发任务的分支":["65.27"],"如下":["65.27","127.55","140.2"],"myjob":["65.27"],"ref":["65.28","65.29","156.5","156.9","156.13","205.5","208.1"],"feature":["65.28","115.0","222.4"],"commit":["65.29","69.5","71.18"],"点击play":["65.30"],"delayed":["65.30"],"延迟一段时间执行":["65.30"],"timed":["65.30"],"rollout":["65.30"],"5之后才支持这些配置":["65.32"],"g":["65.32","89.5","125.8","171.0","295.6","295.9"],"install":["65.33","74.5","74.8","83.3","87.26","96.1","184.27"],"设置当前任务为手动触发":["65.35"],"when":["65.35","65.36","115.0","206.14","220.2","221.1","236.6"],"manual":["65.35","252.5"],"自定义任务4":["65.35"],"job4":["65.35"],"rm":["65.36","284.22"],"f":["65.36","125.8","131.10","173.9"],"fi":["65.36"],"p":["65.36","67.10","68.13","95.33","111.4","141.8","156.3","181.0","215.2","241.8","241.9"],"job3":["65.36"],"always":["65.36","67.7","97.26","212.1","214.1"],"it":["65.36","114.31","148.0","214.1","232.4","252.5"],"yamil":["66.1"],"进行配置":["66.1"],"保证没有问题":["66.2"],"job1":["66.3"],"第二个阶段的第一个事情":["66.3"],"开始test":["66.3"],"are":["66.3","148.5","206.15","219.10","220.3","236.4","252.3"],"报":["66.4"],"第三阶段":["66.4"],"发布":["66.4"],"每个阶段之间的数据是可以放到缓存里面共享的":["66.4"],"integration":["67.0"],"和持续部署":["67.0"],"每天开发者都":["67.1"],"很多次提交":["67.1"],"通过监听master":["67.2"],"生产环境":["67.2"],"dev":["67.2","177.9","195.9","218.4","221.1","225.4","232.2","248.1","254.21","256.5","260.0"],"开发环境":["67.2"],"变动自动执行发布流程":["67.2"],"流程图":["67.2"],"vary":["67.3"],"proxied":["67.3"],"any":["67.3","112.4","156.2","156.10","178.5","186.3","204.6","217.0","221.1","221.3","229.0","250.2","283.7"],"comp":["67.3","217.2"],"level":["67.3","68.8","115.0"],"buffers":["67.3"],"8k":["67.3"],"min":["67.3","97.35","153.5","153.6","153.11","168.19","170.15","236.4","279.9"],"text":["67.3","91.0","99.6","133.1","133.6","179.51","212.1","218.4","232.2","269.0"],"plain":["67.3","195.8"],"css":["67.3","96.6","97.17","97.23","97.33","106.32","139.4","172.0","179.37","179.38","193.7"],"xml":["67.3"],"yml里的":["67.5"],"和id":["67.6"],"pub":["67.6"],"公钥":["67.6"],"两个文件":["67.6"],"restart":["67.7"],"v":["67.7","138.4","156.1","179.53","234.2","250.1","283.1","286.20","286.21","295.2"],"sock":["67.7","68.6"],"输入runner的描述":["67.8"],"稍后可以在gitlab的ui中进行更改":["67.8"],"tags":["67.8","206.14"],"comma":["67.8"],"separated":["67.8"],"tag":["67.8","114.21","114.24","179.5","286.55"],"yml文件":["67.9"],"mirrors":["67.10"],"aliyun":["67.10"],"v3":["67.10"],"main":["67.10","81.1","81.2","86.1","96.3","100.1","102.0","110.2","113.6","148.2","152.18","154.8"],"etc":["67.10","68.4","113.6"],"apk":["67.10"],"repositories":["67.10"],"rsync":["67.10"],"openssh":["67.10"],"mkdir":["67.10"],"ssh":["67.10","67.11"],"key":["67.11","89.6","127.30","173.85","175.5","209.9","247.1","288.2"],"就是我们项目中的打包后生成的文件夹":["67.12"],"如下图所示":["67.14","181.0"],"的优势":["67.17"],"项目建立仅需配置一次":["67.17"],"搭建一整套自动化ci":["68.0"],"注意如果不是":["68.1"],"root":["68.1","68.7","95.21","106.11","113.6","114.11","177.14","178.1","240.1"],"用户":["68.1","89.1"],"opt":["68.3"],"shell命令方式进入容器内":["68.4"],"cat":["68.4","127.25"],"locked":["68.8"],"not":["68.8","107.4","127.3","173.1","184.10","216.3","217.7","220.2","222.6","236.1","249.0","252.3","286.69"],"protected":["68.8"],"后面改成刚才你":["68.8"],"上的":["68.8"],"提供ci":["68.9"],"run":["68.10","74.3","75.5","75.7","76.3","84.3","148.0","245.3"],"指定基础镜像环境":["68.10"],"前端就是":["68.10"],"usr":["68.11","68.12","113.6","114.11"],"share":["68.11","68.12","113.6","114.11"],"try":["68.11","99.7","100.3","133.5","158.3","164.3","255.0","283.9"],"files":["68.11","115.0","195.9"],"uri":["68.11"],"主要是多了":["68.13"],"阶段的任务":["68.13"],"使用":["68.13","87.26","100.4","137.0","151.5","175.12","177.9","177.11"],"镜像":["68.13","113.1","114.3","177.14"],"script第一行":["68.13"],"根据我们项目目录下的":["68.13"],"dockerfile":["68.13","114.13"],"文件创建一个":["68.13"],"staged":["69.0","97.45"],"npx":["69.2","69.13","97.59"],"的冲突":["69.3"],"因为eslint":["69.3"],"prettier新版本更新之后":["69.3"],"只需要写一个":["69.3"],"prettierr":["69.3"],"让我们在不同的阶段":["69.4"],"对代码进行不同的操作":["69.4"],"描述":["69.5","69.6","69.7"],"通过钩子函数":["69.6"],"信息校验工具":["69.8"],"commitizen":["69.8","97.52"],"指令":["69.9"],"根目录创建":["69.9"],"lintstagedrc":["69.9"],"文件控制检查和操作方式":["69.9"],"jsx":["69.9","95.20","96.6","115.0","159.13","177.7"],"ts":["69.9","96.3","96.6","97.41","184.17","184.22","185.7","216.5","241.4","251.1"],"tsx":["69.9","81.1","81.2","96.6"],"prettier":["69.9"],"变更的只有文档":["69.10"],"格式":["69.10","104.0"],"空格":["69.10"],"分号等格式修复":["69.10"],"️重构":["69.10"],"重构":["69.10"],"注意和特性":["69.10"],"修复区分开":["69.10"],"️性能":["69.10"],"性能":["69.10"],"提升性能":["69.10"],"测试":["69.10"],"添加一个测试":["69.10"],"工具":["69.10"],"开发工具变动":["69.10"],"构建":["69.10"],"脚手架工具等":["69.10"],"husky":["69.13","87.43","97.1"],"将附加":["70.0"],"到文件中的所有":["70.0"],"调用中":["70.0"],"如果在windows系统":["70.0"],"可以使用命令":["70.0"],"set":["70.0","95.23","129.4","236.4","247.0","256.6","294.1"],"是linux命令":["70.0"],"扩展":["70.0","95.37"],"修改原来的github部署脚本":["70.0"],"并提交":["71.1"],"修改子模块代码的成本较低":["71.1"],"混在一起":["71.3"],"权限难以区分等":["71.3"],"这种情况即使公司内网":["71.3"],"权限做的足够精细":["71.3"],"仓库管理员的学习成本也会很高":["71.3"],"子模块":["71.4"],"此时a就成了主项目":["71.5"],"注":["71.5"],"b也可以做a的主项目":["71.5"],"例如放在某个更深的目录下":["71.6"],"也是允许的":["71.6"],"需要后面增加个路径参数":["71.6"],"它更不知道爸爸们有谁":["71.7"],"意思是":["71.7"],"当你打开某个被当作":["71.7"],"如果不是新加":["71.8"],"我们可以直接git":["71.12"],"clone":["71.12"],"你会发现在b中":["71.13"],"也可以执行git":["71.13"],"回到文件夹a后":["71.14"],"会发现a有变更了":["71.14"],"变更内容是":["71.14"],"这个方法":["71.16"],"你可以拉取到":["71.16"],"的master最新代码":["71.16"],"的最新版本":["71.17"],"效果跟方法一一致":["71.17"],"最新代码":["71.19"],"这种方法仅适用于":["71.19"],"当主仓库里记录的":["71.19"],"submodule的文件夹的相对路径":["71.21","71.22"],"下面可以指定":["71.25"],"放到哪个子文件夹":["71.25"],"组件":["72.0","178.6","265.2"],"你可以配置一个":["72.0"],"工作流":["72.0"],"workflow":["72.0"],"它会在你的仓库发生某个事件时被触发":["72.0"],"就比如一个":["72.0"],"一个工作流用于构建和测试":["72.1"],"pull":["72.1"],"request":["72.1","138.36"],"你也可以使用时间表触发一个工作流":["72.2"],"或者通过请求一个":["72.2"],"因为每一个步骤都在同一个运行器上被执行":["72.3"],"所以你可以从一个步骤":["72.3"],"step":["72.3","113.8"],"拉取你的":["72.4"],"git":["72.4","88.2","97.51","97.55","260.2","271.1"],"比如构建或者测试工具":["72.5"],"这个步骤会使用":["72.5"],"动作安装指定版本的":["72.5"],"nodejs":["72.5","141.4","173.95"],"这会在你的":["72.5"],"加上":["72.5"],"命令":["72.5","79.0","97.47","260.2"],"关键字会告诉任务在运行器上执行一个命令":["72.5"],"在这个例子中":["72.5"],"你正在使用":["72.5"],"安装":["72.5","114.5"],"软件测试包":["72.5"],"最终":["72.5"],"你运行":["72.5"],"传入一个可以打印软件版本的参数":["72.5"],"可视化工作流文件":["72.5"],"在这个图表":["72.5"],"你可以看到你刚创建的工作流文件":["72.5"],"以及这些":["72.5"],"创建仓库的api":["73.0"],"tokens":["73.0"],"用于自动创建不存在的仓库":["73.0"],"这里我们从":["73.0"],"上获取":["73.0"],"具体地址为":["73.0"],"profile":["73.0","275.2"],"per":["73.0","106.25"],"生成并复制":["73.0"],"然后同样的步骤":["73.0"],"保存在":["73.0"],"那么我们就可以在仓库建立的根目录下":["73.0"],"建立目录":["73.0"],"然后创建一个名为":["73.0"],"synctogitee":["73.0"],"yml":["73.0","97.61"],"的文件":["73.0"],"on":["73.0","97.61","100.3","103.10","126.4","159.13","178.6","179.53","184.10","235.4","249.1"],"branches":["73.0","97.61"],"sync":["73.0","195.9"],"runs":["73.0","97.61"],"ubuntu":["73.0"],"echo":["74.0"],"package":["74.0","77.4","87.18","87.21","97.47","114.23","142.10","143.4","143.5"],"win":["74.0"],"用于拷贝":["74.1"],"复制文件和目录":["74.1"],"cp":["74.1"],"opn":["74.3"],"localhost":["74.3","99.11","114.16","114.29","159.2","159.5","159.9","191.3"],"postcover":["74.3"],"cross":["74.6","133.6"],"或者在启动静态资源服务器时自定义端口号":["74.7"],"mocha":["74.9","75.3","84.4"],"tests":["74.9","83.1"],"只要你入门并且熟练了":["74.10"],"效率提升会惊人":["74.10"],"短时间内继续拥抱":["74.10"],"windows":["74.10"],"串行的典型用例":["75.1"],"实现方式也比较简单":["75.1"],"代码变更时同时给出测试结果和测试运行结果":["75.2"],"这就需要把子命令的运行从串行改成并行":["75.2"],"watch":["75.3","179.54","216.2","216.5"],"还支持通配符匹配分组的":["75.6"],"script":["75.6","76.0","102.5","175.13","195.4"],"我们计划使用":["76.1"],"chalk":["76.1"],"来给输出加点颜色":["76.1"],"touch":["76.2","106.23","114.9"],"and":["76.3","100.3","112.2","206.15","241.9"],"collect":["76.3","98.8"],"reporter":["76.3"],"bash":["77.0","77.2","275.2"],"zsh":["77.0","77.1","275.1"],"里也非常容易":["77.1"],"官方文档里面的集成方法如下":["77.1"],"的同学无福消受了":["77.2"],"better":["77.2","97.50"],"时自动根据历史安装过的包给出补全建议":["77.3"],"时补全建议中列出命令细节":["77.5"],"的主要区别":["78.0"],"项目必须有":["78.0"],"否则无法使用":["78.0"],"json中指定版本进行安装":["78.1"],"并且会对比package":["78.1"],"个阶段":["79.0","173.52"],"检查":["79.0"],"scripts":["79.0","95.5","97.47"],"对象中是否存在":["79.0"],"pretest":["79.0"],"npmrc":["80.1"],"没有的话会再检查全局配置的":["80.1"],"如果一致的话就使用":["80.2"],"中的信息":["80.2"],"反之就会使用":["80.2"],"校验通过后将其添加的缓存中并解压到":["80.3"],"的大版本中最新的小版本":["80.4"],"这样":["80.4","181.0"],"不同的时间执行安装操作就会有不同的结果":["80.4"],"发包流程跟技术框架和打包工具没有必然的联系":["81.0"],"可根据自身情况进行技术选型":["81.0"],"技术栈":["81.0"],"import":["81.1","95.47","102.0","102.5","156.2","159.13","173.87"],"reactnode":["81.1"],"from":["81.1","95.47","97.4","97.17","102.0","102.3","115.0","133.6","148.0","156.2","159.2","159.13","173.43","173.87","228.1","230.2"],"declare":["81.1"],"xbuttontype":["81.1"],"children":["81.1","195.8","205.4","232.4","241.10"],"primarycolor":["81.1"],"打包入口":["81.2"],"entry":["81.2","154.8"],"文件名称":["81.2"],"devdependencies":["81.3","86.6"],"types":["81.3","184.27","219.10"],"vitejs":["81.3"],"404或者403":["81.4"],"这时先确保是否登录成功":["81.4"],"然后再确认当前项目名称是否和npm已有的包冲突":["81.4"],"更换名字后再进行尝试":["81.4"],"每次发包需要保证当前版本号在此之前没有被使用":["81.4"],"app":["81.5","95.45","115.0","159.9","159.13","177.4","205.11","218.9","243.2"],"因为我们是修复bug":["81.7"],"所以我们只需更新修复版本号":["81.7"],"日志输出的级别等":["82.0"],"dry":["82.0"],"don":["82.0"],"repeat":["82.0","169.3"],"yourself":["82.0"],"变量的使用方法遵循":["82.1"],"shell":["82.1"],"里面的语法":["82.1"],"直接在":["82.1"],"这里我们需要借助":["83.2"],"onchange":["83.2","83.4","205.14","207.6"],"save":["83.3","87.23","87.24","96.1"],"之后的命令":["83.5"],"即代码没变化的时候":["83.5"],"变化前后的对比大多数时候还是有价值的":["83.5"],"而忘记修改":["84.1"],"别问我为啥":["84.1"],"我就是踩着坑过来的":["84.1"],"更健壮的做法是":["84.1"],"在运行":["84.1"],"parallel":["84.3"],"注意注释后面的换行符":["84.4"],"和多余的空格":["84.4"],"换行符是用于将注释和命令分隔开":["84.4"],"这样命令就相当于微型的":["84.4"],"某些情况下你需要让":["84.5"],"只有命令本身的输出":["84.7"],"读起来非常的简洁":["84.7"],"如果执行各种":["84.7"],"来控制":["84.8"],"registry":["85.6","176.19"],"public":["85.8","178.2","250.1"],"文件内容打出来供你确认":["86.1"],"wangshijun":["86.2"],"文件中读取":["86.3"],"对象里面的全部配置":["86.3"],"以传给":["86.3"],"的第一个参数作为键":["86.3"],"自定义脚本的步骤如下":["86.4"],"fn":["86.5","98.7","131.8","131.9","156.8","178.6"],"module":["86.7","154.1","154.7","154.8","154.14","154.19","173.95","195.9"],"exports":["86.7","154.1","154.7","154.8","154.19","173.95","177.6","195.9"],"env":["86.7","113.7","154.7"],"es6":["86.7","193.6","193.7"],"了解它们有助于了解项目":["87.0"],"提效开发":["87.0"],"规范代码":["87.0"],"今天主要介绍一些常见配置":["87.0"],"作者等":["87.1"],"部分会展示在":["87.1"],"进行安装":["87.2"],"代表修订号":["87.3"],"patch":["87.3","218.11","222.9","232.1"],"在修复了一些问题":["87.3"],"也未产生破坏性变更时会更新此版本号":["87.3"],"回到":["87.3","179.64"],"facebook":["87.4"],"is":["87.5","115.0","126.4","127.3","156.6","159.13","173.1","173.7","173.99","208.5","210.1","214.0","216.3","218.8","221.4","222.6","235.4","236.6","243.2","248.1","249.0","249.1"],"framework":["87.6"],"frontend":["87.6"],"apache":["87.9"],"等":["87.9","115.0","162.3","173.43","175.9","177.7","177.10"],"在此基础上":["87.12"],"我们可以指定更多需要一起发布的内容":["87.12"],"可以是单独的文件":["87.12"],"整个文件夹":["87.12"],"或者使用通配符匹配到的文件":["87.12"],"这样所有":["87.13"],"后缀的文件":["87.13"],"都会用":["87.13"],"那么入口文件就是根目录下的":["87.14"],"server":["87.15","97.2","177.9"],"可以通过":["87.15","99.10","181.0","276.0"],"构建项目时默认的":["87.16"],"web":["87.16","98.9","100.1","151.2","152.5","162.0","172.0"],"也就是":["87.16"],"上方的写法其实等同于":["87.17"],"为什么要加一个层级":["87.17"],"把":["87.17"],"表示在":["87.18"],"目录下还有一个项目":["87.18"],"它也有自己的":["87.18"],"执行之后的钩子":["87.20"],"当执行":["87.20","97.41"],"命令时":["87.20"],"会按照":["87.20"],"这个变量访问到":["87.21"],"里配置这些依赖的信息":["87.22"],"会被自动插入到该字段中":["87.23"],"组件库":["87.25"],"ant":["87.25"],"o":["87.26"],"并包含":["87.28"],"设为":["87.31"],"就可以指定":["87.32"],"这些要求只会起到提示警告的作用":["87.33"],"要求":["87.34"],"版本大于等于":["87.34"],"字段可以指定项目对操作系统的兼容性要求":["87.35"],"当我们想通过":["87.39"],"的方式使用链接引入":["87.39"],"单文件配置":["87.41"],"里不设置":["87.42"],"那么":["87.42","127.12","173.9"],"webapck":["87.42"],"构建打包时会认为这段代码只是引入了但并没有使用":["87.42"],"可以":["87.42"],"通常配合":["87.43"],"这样的":["87.43"],"版本":["88.1","127.1","205.4","254.26"],"配合":["88.1","138.9","148.3"],"prev":["88.2","179.33","222.7","286.49"],"confirm":["88.2"],"是否执行git":["88.2"],"commit提交代码":["88.2"],"initial":["88.2","106.23","121.4","150.12","160.0","168.3","206.8"],"commit的内容":["88.2"],"留空则使用":["88.2"],"tag打标签":["88.2"],"角色":["89.1"],"权限":["89.1","89.11"],"用户纬度":["89.1"],"唯一需要处理的是":["89.2"],"父子节点的联动关系":["89.2"],"一个是可见的菜单页面":["89.4"],"左侧dom节点":["89.4"],"一个是可访问的菜单页面":["89.4"],"系统当中路由这一块":["89.4"],"这里说的意思是":["89.4"],"patchroutes":["89.5"],"keys":["89.5","129.5","210.2"],"restprops":["89.6"],"spinning":["89.6"],"style":["89.6","97.10","97.46","106.13","106.31","106.41","112.3","153.2","156.18","168.7","168.19","179.37","236.6","286.1","286.38"],"margin":["89.6","92.0","106.37","106.48","106.51","179.1","179.2"],"24px":["89.6"],"consumer":["89.6","100.2"],"wide":["89.6","172.0"],"fixed":["89.6"],"home":["89.6","99.11","115.0","134.3","275.2"],"menu":["89.6"],"defaultmessage":["89.6"],"linkelement":["89.6"],"itemrender":["89.6"],"item":["89.6","95.40","100.8","127.5","148.1","153.11","176.5","282.2","286.72"],"如果有一个没有操作权限":["89.7"],"有编辑权限":["89.8"],"则这条记录上的":["89.8"],"可读":["89.9","89.11"],"编辑权限":["89.10"],"permisiontype":["89.10"],"表示这个用户对于这条记录有":["89.11"],"则这三个按钮中":["89.11"],"将数据进行2进制转换成二进制字符串":["89.12"],"concat":["89.13","127.45","178.5","204.2","286.8"],"code已经存在":["89.13"],"证明是页面数据渲染之后或者弹出框的按钮资源":["89.13"],"不需要走dva了":["89.13"],"pluscode":["89.13"],"checkauthority":["89.13"],"checkdataauthority":["89.13"],"资源权限":["89.13"],"检测数据权限":["89.13"],"当前按钮的code":["89.13"],"12px":["90.0"],"resize":["90.0","179.27"],"table":["90.0","91.0","122.12","137.4"],"both":["91.0","179.6","206.14"],"overflow":["91.0","106.23","106.49"],"hidden":["91.0","106.21","286.1","286.23","286.62"],"截取文本":["91.0"],"仅针对单行":["91.0"],"single":["91.0","115.0"],"line":["91.0","106.11","106.14","106.41","170.15","179.4","283.1","283.12"],"ellipsis":["91.0"],"可以通过margin":["92.0"],"h":["92.0"],"或者改变高度":["92.0"],"show":["93.1","150.10","156.2"],"均为一级属性字段":["93.2"],"蓝色框为数组结构字段":["93.2"],"like":["93.3","205.17","241.1","241.10","256.4"],"则用户名称需要应用接口处理好对应的用户名称返回到前端":["93.4"],"另一种情况":["93.4"],"返回的订单列表里面返回一个tradestatus":["93.4"],"前端显示所有后端返回的错误信息":["93.7"],"接口权限":["93.8"],"vitepress":["94.5","94.9"],"然后修改成为自己的博客":["94.10"],"附上源码":["94.10"],"替换":["95.1"],"初始化后可以得到以下结构的基础项目":["95.3"],"安装依赖后":["95.3"],"postcss":["95.8","102.1"],"typescript":["95.9","97.23"],"standard":["95.9"],"settings":["95.9","97.32"],"woff":["95.10","97.36"],"ttf":["95.10","154.4","154.16","154.17"],"printwidth":["95.13"],"semi":["95.13"],"conventional":["95.15","97.53"],"pascalcase":["95.16"],"sentence":["95.16"],"snake":["95.16"],"start":["95.16","104.0","106.22","133.4","152.12","227.1","286.38"],"isolatedmodules":["95.20"],"allowsyntheticdefaultimports":["95.20"],"lib":["95.20"],"dom":["95.20","151.13","162.3","175.21","177.1","177.10","179.38","179.39","179.43","195.4","195.7","214.3"],"iterable":["95.20"],"strict":["95.20"],"注水":["95.22"],"hydrateroot":["95.22"],"await":["95.22","103.8","115.0","158.3","159.2","159.5","164.3","283.3","286.45"],"createapp":["95.22","96.2"],"客户端渲染":["95.22"],"visible":["95.23"],"boolean":["95.23","154.7","156.1","156.10","173.29","173.66","179.24","235.4"],"setvisible":["95.23"],"void":["95.23","156.9"],"usemodalstore":["95.23"],"有两个对我而言比较重要的原因":["95.25"],"写响应式非常方便":["95.25"],"不用去想类名":["95.25"],"tailwind非常强大":["95.25"],"几乎支持所有css功能":["95.25"],"建议各位同学使用之前熟悉官方文档":["95.25"],"我列一些比较常用的工具类":["95.25"],"apply":["95.25","111.2","131.7","179.20","204.2","283.3","283.4"],"components":["95.26","210.2","226.1"],"xl":["95.28"],"1279px":["95.28"],"nesting":["95.29"],"默认是postcss":["95.29"],"nested":["95.29","256.6"],"pxtorem自适应":["95.30"],"32px":["95.31"],"md":["95.31","97.19"],"rootvalue":["95.32","101.3"],"proplist":["95.32","101.3"],"minpixelvalue":["95.32"],"convertunitonend":["95.32"],"primary":["95.38","156.1","156.7","156.18"],"color":["95.39","106.34","116.4","156.1","156.7","156.18","170.14","286.55"],"trim":["95.40","97.19"],"themeconfig":["95.42"],"setthemeconfig":["95.42"],"algorithm":["95.42"],"defaultalgorithm":["95.42"],"settheme":["95.42"],"usestate":["95.42","159.2","159.13","205.14","205.15"],"middleware":["95.45"],"express":["95.45","126.3"],"handle":["95.45","115.0","204.3"],"initreacti18next":["95.46"],"defaultns":["95.46"],"usetranslation":["95.47"],"我们可以使用vscode插件":["95.48"],"lokalise":["95.48"],"pathmatcher":["95.49"],"locale":["95.49"],"namespaces":["95.49"],"plus":["96.0"],"集成vue":["96.1"],"router":["96.1","97.3","97.5","97.8"],"next":["96.1","111.3","206.16","283.1","283.4","283.12"],"安装完成之后":["96.1"],"在src目录下创建一个文件夹router":["96.1"],"namespaced":["96.2"],"state":["96.2","97.7","98.13","156.13","209.10","219.3"],"count":["96.2","97.7","156.2","156.11","179.9","205.15"],"mutations":["96.2"],"上面的代码作用就是实现一个简单的自加功能":["96.2"],"我们在main":["96.2"],"ts文件中引入vuex":["96.2"],"如果我们只需要引入部分组件":["96.3"],"select组件":["96.3"],"那么需要在":["96.3"],"中引入对应的组件即可":["96.3"],"use":["96.4","97.22","162.3","186.3","214.2","243.2"],"small":["96.4"],"是否自动在浏览器打开":["96.5"],"是否开启":["96.5","97.2"],"服务端渲染":["96.5"],"ssr":["96.5","217.7"],"changeorigin":["96.5"],"ws":["96.5","127.16"],"rewrite":["96.5"],"pathstr":["96.5"],"中引入":["96.6"],"创建":["96.6","200.12"],"js的作用就体现出来了":["96.7"],"在数据量较大的情况下":["96.7"],"我们不用一个一个的编写数据":["96.7"],"只需要根据接口文档将数据的格式填入":["96.7"],"的值是一个数组":["96.10"],"其中含有":["96.10"],"个元素":["96.10"],"为数据模板中的属性名":["96.11"],"为生成规则":["96.11"],"表示生成最少1个":["96.11"],"并根据数据模板template生成模拟数据":["96.12"],"js支持丰富的日期格式的自定义":["96.13"],"nuysoft":["96.13"],"moc":["96.13"],"生成图片":["96.13"],"defineconfig":["96.14","97.17"],"mockpath":["96.14"],"supportts":["96.14"],"基础搭建":["97.0"],"代码规范":["97.0","97.57"],"一个基于":["97.1","97.18"],"promise":["97.1","98.7","99.23","127.1","161.0","204.2","283.6"],"的网络请求库":["97.1"],"可以用于浏览器和":["97.1"],"base":["97.2"],"alias":["97.2","195.8","214.2"],"端口号":["97.2"],"port":["97.2","114.30","206.16"],"监听所有地址":["97.2"],"host":["97.2","113.6","235.4"],"服务启动时是否自动打开浏览器":["97.2"],"允许跨域":["97.2"],"cors":["97.2"],"aboutview":["97.4"],"createrouter":["97.4"],"createwebhistory":["97.4"],"actions":["97.7"],"accumulate":["97.7"],"this":["97.7","98.13","111.2","114.29","186.3","206.2","218.8","223.2","236.4","243.1","252.6","283.4","283.12","286.37","294.1","295.3"],"es":["97.10"],"tdesignresolver":["97.11"],"bem":["97.16"],"命名规范":["97.16"],"至此":["97.18"],"vite3":["97.18"],"去除行首的任意空白字符":["97.19"],"trailing":["97.19"],"whitespace":["97.19","241.1","241.10"],"始终在文件末尾插入一个新行":["97.19"],"insert":["97.19"],"final":["97.19","216.3"],"newline":["97.19"],"表示仅":["97.19"],"文件适用以下规则":["97.19"],"off":["97.19","178.6","206.14","252.6"],"时必须安装的":["97.20"],"解析器":["97.20"],"jetbrains":["97.21","97.25","97.34"],"系列编辑器":["97.21","97.25","97.34"],"arrow":["97.22"],"禁用一元操作符":["97.22"],"plusplus":["97.22"],"禁止对":["97.22"],"的参数进行重新赋值":["97.22"],"param":["97.22","178.5","296.1"],"reassign":["97.22"],"禁用特定的语法":["97.22"],"restricted":["97.22"],"syntax":["97.22","221.1"],"禁止在变量定义之前使用它们":["97.22"],"禁止直接调用":["97.22"],"object":["97.22","112.2","130.9","156.6","173.39","173.85","179.12","179.36","196.3","196.4","248.2","249.0"],"prototypes":["97.22"],"的内置属性":["97.22"],"支持":["97.23","102.0","179.26"],"jsxbracketsameline":["97.26"],"箭头函数":["97.26"],"只有一个参数的时候":["97.26"],"也需要括号":["97.26"],"arrowparens":["97.26"],"每个文件格式化的范围是文件的全部内容":["97.26"],"rangestart":["97.26"],"rangeend":["97.26"],"infinity":["97.26","173.59"],"不需要写文件开头的":["97.26"],"ignored":["97.28"],"suffix":["97.28"],"config":["97.30","97.53","98.12","99.19","154.1","154.19","204.3","275.2"],"设置文件中":["97.32"],"增加以下代码":["97.32"],"editor":["97.32"],"codeactionsonsave":["97.32"],"source":["97.32","99.1","125.0","170.8","195.9","259.2"],"文件中的样式":["97.33"],"order":["97.33","210.1"],"属性顺序规则插件":["97.33"],"padding":["97.35","106.44","156.18"],"family":["97.35"],"weight":["97.35","177.13","286.55"],"border":["97.35","101.3","106.23","179.2"],"文件中的":["97.37"],"less":["97.38","154.10"],"文件进行解析":["97.38"],"ignorepseudoclasses":["97.39"],"deep":["97.39","216.2","258.3","258.5"],"global":["97.39"],"禁止未知的伪元素选择器":["97.39"],"依旧按自己编程风格来写代码":["97.40"],"或者干脆禁用掉这些工具":["97.40"],"开发完成就直接把代码提交到了仓库":["97.40"],"日积月累":["97.40"],"也就形同虚设":["97.40"],"还需要做一些限制":["97.40"],"让没通过":["97.40"],"文件作用是":["97.41"],"会先对":["97.41"],"stylelint":["97.44"],"参考链接":["97.46"],"更改持续集成软件的配置文件和":["97.47"],"中的":["97.47","152.17"],"travis":["97.47","97.60"],"circle":["97.47","97.60"],"subject":["97.48"],"类似":["97.48","281.2"],"开头":["97.49"],"后面是对变动的描述":["97.49"],"以及变动的理由":["97.49"],"关闭缺陷":["97.49"],"would":["97.50","148.0","256.4"],"be":["97.50","109.4","148.5","206.2","206.8","206.14","221.1","226.1","236.2","245.3","248.1"],"expect":["97.50"],"insensitive":["97.50"],"unfortunately":["97.50"],"jasmine":["97.50"],"regexps":["97.50"],"rules":["97.53","154.8"],"prompt":["97.53"],"useemoji":["97.53"],"命令启动命令行工具":["97.54"],"czrc":["97.56"],"验证规范提交":["97.57"],"章节中提到":["97.57"],"尽管制定了规范":["97.57"],"但在多人协作的项目中":["97.57"],"并在此执行验证命令":["97.59"],"分支有":["97.61"],"时触发":["97.61","152.20"],"指定虚拟机环境":["97.61"],"才能更好的评估出整个项目的质量和重要性":["98.1"],"数据为王":["98.1"],"并且能够为产品优化指明方向":["98.1"],"数据驱动产品":["98.1"],"7dbb34ce":["98.1"],"前端数据埋点要考虑哪些方面":["98.1"],"数据埋点的核心是数据收集":["98.1"],"通过网络正常访问页面的使用者":["98.2"],"通常一台电脑客户端或一个用户账号为一个访客":["98.2"],"一般同一个客户端或用户账号在":["98.2"],"等捕获的错误":["98.3"],"lcp":["98.4","152.7"],"是一种新的性能度量标准":["98.4"],"侧重于用户体验的性能度量标准":["98.4"],"与现有度量标准相比":["98.4"],"更容易理解与推理":["98.4"],"当首屏内容完全绘制完成时":["98.4"],"最大内容绘制应在":["98.4"],"5s":["98.4"],"确定":["98.5"],"options":["98.5","104.0","154.5","167.4","179.54","254.6"],"在对应监控系统上为当前应用生成唯一的":["98.6"],"在对应应用接入":["98.6"],"location":["98.7","113.6","114.11","138.23","138.34","179.34"],"初始化监听页面变化":["98.7"],"listenpage":["98.7"],"设置":["98.7","104.0","106.18","177.10","221.2","258.3"],"setconfig":["98.7"],"congfig":["98.7"],"刷新任务队列":["98.7"],"flushqueue":["98.7"],"baseurl":["98.8"],"aegis":["98.8"],"example":["98.8","102.3","123.1","146.4","283.10"],"onpageshow":["98.8"],"自动触发埋点":["98.9"],"不应该让使用者在手动接入":["98.9"],"在上面的实现中":["98.9"],"我们在":["98.9","133.2"],"pageshow":["98.9"],"事件中通":["98.9"],"reportwebvitals":["98.9"],"performancereport":["98.9"],"进行数据上报":["98.9"],"并且这里选择了":["98.9"],"google":["98.9","103.13","104.0","296.3"],"推出的":["98.9"],"vitals":["98.9"],"message":["98.10","107.3","118.2","133.6","166.7"],"error":["98.12","113.6","132.3","159.5","173.61","195.4","219.10","283.7","283.10"],"sdk":["98.12"],"errorreport":["98.12"],"apiurl":["98.12"],"component":["98.13","243.2","256.8"],"constructor":["98.13","125.9","127.4","130.9","173.9","250.1"],"props":["98.13","156.10","178.2","179.54","219.6","241.8","252.4"],"super":["98.13"],"haserror":["98.13"],"static":["98.13","110.2","115.0","138.34","154.8","195.8","254.10"],"更新":["98.13","178.2","205.0","220.8"],"天用户":["99.0"],"xx商品无法下单":["99.0"],"天运营":["99.0"],"xx广告在手机端打开不了":["99.0"],"大家反馈的bug":["99.0"],"record":["99.2"],"gif":["99.2","122.7","123.0","138.34","150.6","154.17","156.11","158.5","164.5"],"回放的录屏中":["99.2"],"记录了用户的所有操作":["99.2"],"可以将公司的sdk统一成一个":["99.3"],"包括但不限于":["99.3"],"监控sdk":["99.3"],"埋点sdk":["99.3"],"录屏sdk":["99.3"],"广告sdk等":["99.3"],"提供了更多的错误还原方式":["99.3"],"包括页面":["99.5"],"对应的设备信息":["99.5"],"why":["99.5"],"错误的原因是为什么":["99.5"],"包括错误堆栈":["99.5"],"appendchild":["99.6","169.3"],"当静态资源加载失败时":["99.6"],"会触发":["99.6","259.3"],"不能捕获到":["99.6"],"doctype":["99.6","114.29"],"call":["99.7","173.1","173.16","173.39"],"catch":["99.7","100.3","133.5","158.3","164.3","173.57","173.84"],"如果开发者在errorhandler函数中":["99.7"],"手动抛出同样错误信息throw":["99.7"],"判断err信息是否相等":["99.7"],"避免log两次":["99.7"],"componentdidcatch":["99.8"],"errorinfo":["99.8"],"可以捕获render函数的错误":["99.8"],"同样可以将错误日志上报给服务器":["99.8"],"reporterror":["99.8"],"自定义降级后的":["99.8"],"只能捕获到":["99.9"],"的原因":["99.9"],"是由于浏览器基于":["99.9"],"安全考虑":["99.9"],"故意隐藏了其它域js文件抛出的具体错误信息":["99.9"],"这样可以有效避免敏感信息无意中被第三方":["99.9"],"不受控制的":["99.9"],"上报fetch接口数据":["99.10"],"返回原始的结果":["99.10"],"外部继续使用then接收":["99.10"],"err":["99.10","132.3","173.57","182.2"],"throw":["99.10","100.3","173.61","283.7"],"性能数据采集":["99.10"],"谈到性能数据采集":["99.10"],"就会提及加载过程模型图":["99.10"],"timing":["99.10","151.5"],"以spa页面来说":["99.10"],"页面的加载过程大致是这样的":["99.10"],"spa":["99.10","115.0"],"包括dns查询":["99.10"],"建立tcp连接":["99.10"],"发送http请求":["99.10"],"返回html文档":["99.10"],"html文档解析等阶段":["99.10"],"最初":["99.10"],"来获取加载过程模型中各个阶段的耗时数据":["99.10"],"route":["99.11"],"to":["99.11","114.27","114.29","130.9","148.0","152.6","159.5","179.58","214.0","214.3","226.1","232.4","236.1","236.4","248.0","266.0"],"about":["99.11"],"1668759320435":["99.11"],"添加一条用户点击行为":["99.11"],"href":["99.12","104.0","126.2","179.34","181.0","286.60","286.64","296.4"],"historyreplace":["99.12"],"historyreplacefn":["99.12"],"originalhistoryfn":["99.12"],"args":["99.12","110.2","283.8"],"undefined":["99.12","127.17","127.48","130.10","131.11","179.24","195.4","195.8","204.2","242.1","286.40","286.61"],"之前的时间戳":["99.14"],"如果尚未运行":["99.14"],"则返回在启动":["99.14"],"线程之前的时间戳":["99.14"],"未拦截该资源":["99.14"],"则该属性将始终返回":["99.14"],"获取资源加载时长为":["99.14"],"的差值":["99.14"],"获取加载资源列表":["99.14"],"getresource":["99.14"],"entries":["99.14"],"getentries":["99.15"],"获取长任务详情":["99.15"],"不能大于":["99.16"],"如果大于":["99.16"],"有可能出现了内存泄漏":["99.16"],"readystate":["99.17"],"状态的变化":["99.17"],"这样设计的好处是便于后续扩展与维护":["99.18"],"如果想添加新的":["99.18"],"vue项目在vue":["99.19"],"从而获取对应的数据":["99.20"],"最早的一条数据会被覆盖掉":["99.21"],"在上报错误时":["99.21"],"不需要等待服务器返回数据":["99.22"],"图片打点缺点是":["99.22"],"获取错误列表":["99.23"],"的接口":["99.23"],"用户可点击":["99.23"],"报错":["99.23"],"异步报错":["99.23"],"错误":["99.23"],"按钮":["99.23"],"上报对应的代码错误":["99.23"],"录屏记录了用户的所有操作":["100.0"],"红色的线代表了鼠标的移动轨迹":["100.0"],"前端项目发布上线":["100.0"],"代码一般都会进行压缩":["100.0"],"混淆":["100.0"],"see":["100.1","114.29"],"demo":["100.1","106.40","114.15","209.7"],"sourcemapconsumer":["100.2"],"输入错误的发生行和列":["100.2"],"可以得到源码对应原始文件":["100.2"],"行和列信息":["100.2","100.5"],"result":["100.2","131.7","131.9","166.7","166.9","173.99"],"originalpositionfor":["100.2"],"so":["100.3","107.4","216.3","232.4","236.4"],"这里简单说明下":["100.3"],"堆栈示例":["100.3"],"baz":["100.3","127.47"],"errorstackparser":["100.4"],"parser":["100.5","154.17"],"获取具体原始文件名":["100.5"],"并上报":["100.5"],"recordcanvas":["100.6"],"记录":["100.6"],"负责将增量快照还原为":["100.7"],"整体流程":["100.7"],"在录制时会首先进行首屏":["100.7"],"快照":["100.7"],"遍历整个页面的":["100.7"],"树":["100.7"],"转换为":["100.7"],"结构数据":["100.7"],"array":["100.8","173.43","204.2","221.1","231.1","232.2","286.37"],"fromcharcode":["100.8"],"btoa":["100.8"],"解压代码示例":["100.8"],"解压":["100.8"],"unzip":["100.8"],"b64data":["100.8"],"strdata":["100.8"],"ischeckout":["100.9"],"此段时间内发生错误":["100.9"],"上报录屏信息":["100.9"],"support":["100.9","104.0","243.2"],"重置recordscreenid":["100.9"],"的字体设置为10px":["101.1"],"设计稿宽度的1":["101.3"],"例如设计稿按照":["101.3"],"1920设计":["101.3"],"此处就为192":["101.3"],"除":["101.3","127.52"],"外所有px":["101.3"],"cleartimeout":["101.5","195.4"],"先启动服务器":["102.0"],"再按需请求模块并编译":["102.0"],"利用的是现代浏览器本身支持":["102.0"],"这个特性":["102.0"],"直接向依赖的模块发出请求":["102.0"],"启动时不需要分析模块之间的依赖关系":["102.0"],"也不用打包":["102.0"],"项目越大":["102.0"],"优势越明显":["102.0"],"这个是":["102.0"],"的启动过程":["102.0"],"vite2":["102.0"],"这样大家应该看得出来":["102.0"],"为什么快了吧":["102.0"],"依赖预构建":["102.0"],"上面提到了依赖预构建":["102.0"],"可能很多兄弟对这个不太理解":["102.0"],"这里我也来讲一下":["102.0"],"现代浏览器已经支持":["102.0"],"但导入模块只能用相对路径或绝对路径":["102.0"],"直接使用模块名称的方式是行不通的":["102.0"],"假设我们已经安装了":["102.0"],"模块":["102.0","177.13"],"自动开启":["102.1"],"也是用来处理":["102.1"],"只不过它更像是一个工具箱":["102.1"],"可以添加各种各样的插件来处理":["102.1"],"像我们经常遇到的样式兼容性问题":["102.1"],"如高级":["102.1"],"语法的降级":["102.1"],"前缀补全等":["102.1"],"都可以通过":["102.1"],"来解决":["102.1"],"有良好的支持":["102.1"],"我们只需安装需要使用的插件就可以了":["102.1"],"源文件信息":["102.2"],"vue2":["102.4","254.6"],"underfin":["102.4"],"分割等":["102.5"],"把生产环境构建全权交给了":["102.5"],"rollup":["102.5","115.0"],"默认情况下":["102.5","184.6"],"的目标是支持":["102.5"],"原生":["102.5"],"esm":["102.5"],"标签":["102.5","122.17","181.0"],"支持原生":["102.5"],"动态导入":["102.5","179.26"],"meta":["102.5","123.1","210.2","279.2","282.2"],"的现代浏览器":["102.5"],"firefox":["102.5","179.1"],"safari":["102.5"],"如果要兼容旧版本的浏览器":["102.5"],"本例使用的是3":["103.0"],"x来启动的":["103.0"],"接下来安装fastify":["103.0"],"socket":["103.0","103.7","173.13"],"io3":["103.0"],"获取的设备如图":["103.1"],"通过上述例子我们可以获取到本机的音视频画面":["103.2"],"并且可以播放在video标签里":["103.2"],"那么我们可以在获取了用户的流之后":["103.2"],"帧率":["103.3"],"采集视频的目标帧率":["103.3"],"framerate":["103.3"],"采样率单位hz":["103.4"],"samplerate":["103.4"],"采样大小":["103.4"],"单位位":["103.4"],"samplesize":["103.4"],"保存这个offer":["103.5"],"并响应这个offer给a":["103.5"],"a收到b的响应后保存a的远端响应":["103.5"],"setlocaldescription":["103.7"],"emit":["103.7","219.3"],"creatoruserid":["103.7"],"myuserid":["103.7"],"sdp":["103.7"],"setremotedescription":["103.8"],"a监听到socket里面的answer事件":["103.9"],"需要将刚才的自己的rtcpeer添加远端描述":["103.9"],"b获取到了a的ice":["103.10"],"需要设置候选":["103.10"],"audio":["103.11"],"rmuser":["103.12"],"userid":["103.12"],"将这人加入到对应的socket房间":["103.12"],"params":["103.14","283.12"],"room":["103.14"],"sockid":["103.15"],"status":["103.15","166.8"],"ok":["103.15","152.13","152.23","159.2","159.5"],"其他人需要监听socket的事件":["103.15"],"每个人都需要处理对应自己的offer":["103.15"],"handleoffer":["103.15"],"rtcsessiondescriptioninit":["103.15"],"这个媒体流可以通过使用":["103.16"],"scvideo":["103.17"],"queryselector":["103.17","157.2"],"screenvideo":["103.17"],"as":["103.17","114.27","123.1","148.4","206.2","216.4","221.1","221.4","222.5","236.2","241.8","243.1"],"htmlvideoelement":["103.17"],"也就只有":["104.0"],"两种":["104.0"],"也可以通过这个网址":["104.0"],"来查看当前浏览器所支持的":["104.0"],"的情况":["104.0","250.0"],"目前最常用的一般都是":["104.0"],"截止到目前为止":["104.0"],"最佳的":["104.0"],"种视频格式为":["104.0"],"avchd":["104.0"],"是":["104.0","130.10","151.13","195.7","258.5"],"专门为":["104.0"],"端推出的一种视频格式":["104.0"],"开源":["104.0"],"且":["104.0"],"兼容":["104.0"],"浏览器和":["104.0"],"android":["104.0","177.3"],"设备":["104.0"],"如果你没有强烈的需求":["104.0"],"也可以使用":["104.0"],"说了这么多":["104.0"],"不支持就不能录制成":["104.0"],"肯定不是啊":["104.0"],"都拿到":["104.0"],"blob":["104.0","286.18","289.1"],"ffmpeg":["104.0"],"来将":["104.0"],"格式转换成":["104.0"],"但是":["104.0","168.24","209.5"],"的体积比较大":["104.0"],"太重了":["104.0"],"这里也可以通过一种":["104.0"],"hack":["104.0"],"的方式来实现":["104.0"],"但是不靠谱":["104.0"],"这种方式导出的":["104.0"],"文件部分软件可能会识别不了":["104.0"],"求稳的话最好还是推荐使用我们浏览器环境列出的支持的":["104.0"],"或者用工具转一下":["104.0"],"录制媒体流":["104.0"],"startrecord":["104.0"],"kbps":["104.0"],"mbps":["104.0"],"audiobitspersecond":["104.0"],"videobitspersecond":["104.0"],"opus":["104.0"],"ondataavailable":["104.0"],"将录制的数据合并成一个":["104.0"],"对象":["104.0","156.12","173.24","173.68","176.6","178.5","206.4","209.2","286.46"],"重点是这个地方":["104.0"],"我们不要把获取到的":["104.0"],"type设置成":["104.0"],"而是直接改成":["104.0"],"downloadblob":["104.0"],"onstop":["104.0"],"停止录制":["104.0"],"下载":["104.0"],"将":["104.0","154.8","173.94","177.10","178.7","179.59","205.5","205.13"],"对象转换成一个":["104.0"],"地址":["104.0"],"createobjecturl":["104.0"],"属性为刚刚生成的":["104.0"],"download":["104.0","195.4"],"属性为文件名":["104.0"],"date":["104.0","167.4","177.7","287.1","287.5"],"gettime":["104.0","286.3"],"模拟点击":["104.0"],"释放":["104.0"],"revokeobjecturl":["104.0"],"ruleset":["106.2"],"常简称为":["106.2"],"规则":["106.2"],"span":["106.2","190.4"],"page":["106.3","108.3","113.6","114.29","134.4"],"描述打印文档时布局的变化":["106.3"],"face":["106.3"],"描述将下载的外部的字体":["106.3"],"keyframes":["106.3"],"bom":["106.4","195.4"],"值":["106.4","173.11","173.89","177.9","181.0","224.0","250.3"],"响应头里的":["106.4"],"字段包含的":["106.4"],"所指定的值":["106.4"],"的语法":["106.5"],"只能用来导入":["106.5"],"导入的样式会在页面加载时同时加载":["106.5"],"则把":["106.6"],"颜色设置为变量":["106.6"],"varname":["106.6"],"由用户设置的自定义样式":["106.7"],"由于":["106.7","113.4","195.7"],"在很早的时候就放弃了用户样式表的功能":["106.7"],"所以这里将不再考虑它的排序":["106.7"],"作者样式表中的常规声明":["106.7"],"想要获取更多选择器的用法可以看":["106.8"],"mdn":["106.8"],"属性以指定值开头的元素":["106.9"],"属性以指定值结尾的元素":["106.9"],"子选择器":["106.10"],"浏览中的元素":["106.11"],"past":["106.11"],"已浏览的元素":["106.11"],"future":["106.11"],"未浏览的元素":["106.11"],"结构伪类":["106.11"],"文档的根元素":["106.11"],"empty":["106.11","115.0","219.3","241.3"],"无子元素的元素":["106.11"],"letter":["106.11","106.14"],"元素的首字母":["106.11"],"兄弟选择器":["106.13"],"可以看到内联样式":["106.13"],"通过元素中":["106.13"],"属性定义的样式":["106.13"],"的优先级大于任何选择器":["106.13"],"shadow":["106.14"],"spacing":["106.14","286.55"],"word":["106.14"],"white":["106.14","162.2"],"space":["106.14"],"列表相关":["106.14"],"在正常文档流中的其他节点将忽略该节点并填补其原先空间":["106.15"],"文档一旦脱流":["106.15"],"计算其父节点高度时不会将其高度纳入":["106.15"],"脱流节点不占据空间":["106.15"],"有两种方式可以让元素脱离文档流":["106.15"],"浮动和定位":["106.15"],"盒模型认为":["106.16"],"盒子类型由":["106.17"],"决定":["106.17"],"同时给一个元素设置":["106.17"],"后":["106.17","173.31"],"还有什么更具体的区别呢":["106.18"],"占满一行":["106.18"],"默认继承父元素的宽度":["106.18"],"多个块元素将从上到下进行排列":["106.18"],"将会生效":["106.18"],"ruby":["106.19"],"接触不多":["106.19"],"不做介绍":["106.19"],"值得一提的是如果把":["106.19"],"img":["106.19","126.2"],"这种替换元素":["106.19"],"行内格式化上下文":["106.20"],"ffc":["106.20"],"flex":["106.20"],"触发":["106.21","152.20"],"auto":["106.21","106.45","172.0"],"清除内部浮动":["106.21"],"浮动造成的问题就是父元素高度坍塌":["106.21"],"所以清除浮动需要解决的问题就是让父元素的高度恢复正常":["106.21"],"而用":["106.21"],"清除浮动的原理就是":["106.21"],"只要触发父元素的":["106.21"],"即可":["106.21"],"防止垂直":["106.21"],"strong":["106.22"],"very":["106.22","206.2"],"complicated":["106.22"],"storng":["106.22"],"once":["106.22","206.1"],"you":["106.22","114.29","205.17","235.4","286.60"],"looking":["106.22"],"into":["106.22"],"对应上面这样一串":["106.22"],"分析如下":["106.22"],"标签是一个":["106.22"],"block":["106.22","106.41","106.43","170.15","215.2","218.4","226.1","232.2","252.5"],"对内将产生一个":["106.22"],"clip":["106.23"],"mask":["106.23"],"isolation":["106.23"],"属性值为":["106.23"],"isolate":["106.23"],"webkit":["106.23","179.3","286.33"],"scrolling":["106.23"],"will":["106.23","179.3","216.2"],"change":["106.23","179.3","207.5","216.2"],"值设定了任一属性而该属性在":["106.23"],"non":["106.23","107.4","221.3"],"值时会创建层叠上下文的元素":["106.23"],"contain":["106.23"],"top":["106.24","106.44","147.2","147.4","148.0","150.5","153.5","153.6","153.7"],"bottom":["106.24","106.44","147.2","148.0"],"等属性":["106.24"],"用于指定资源路径或背景图片的渐变":["106.24"],"来获取当前屏幕的":["106.25"],"像素密度":["106.25"],"dpi":["106.25"],"ppi":["106.25"],"像素密度也叫显示密度或者屏幕密度":["106.25"],"缩写为":["106.25"],"dots":["106.25"],"inch":["106.25"],"pixel":["106.25"],"设置一个默认的":["106.26"],"而这个值通常是":["106.26"],"这也就是为什么":["106.26"],"1em":["106.26"],"的原因所在了":["106.26"],"绑定事件的时候最好配合防抖函数":["106.27"],"debounce":["106.27"],"domcontentloaded":["106.27"],"func":["106.27"],"wait":["106.27","127.35"],"timeout":["106.27"],"的出现使得多了一种写自适应布局的方案":["106.28"],"开发者不再局限于":["106.28"],"rem":["106.28"],"了":["106.28","150.7","262.0"],"相对视口的单位":["106.28"],"颜色关键字":["106.29"],"transparent":["106.29"],"虽然有一点不同":["106.30"],"svg":["106.30","154.17"],"是首个正式定义这些关键字的标准":["106.30"],"色彩标准":["106.30"],"也正式定义了这些关键字":["106.30"],"它们经常被称作扩展的颜色关键字":["106.30"],"cc7cda":["106.31"],"50px":["106.31"],"solid":["106.31"],"实现三角形的原理":["106.31"],"首先宽高必须是":["106.31"],"该元素的边框颜色会是":["106.32"],"red":["106.32"],"如果需要使用函数来表示带不透明度的颜色值":["106.33"],"值的范围是":["106.33"],"及其之间的小数或者":["106.33"],"比如带":["106.33"],"不透明度的红色是":["106.33"],"rgba":["106.33","279.8"],"或者0":["106.34"],"1及之间的小数":["106.34"],"写法上可以参考":["106.34"],"rgb":["106.34","170.5"],"的写法":["106.34"],"只是参数的值不一样":["106.34"],"给一个按钮设置不透明度为":["106.34"],"的红色的":["106.34"],"除了通过":["106.35"],"让指定设备生效外":["106.35"],"还可以通过":["106.35"],"让":["106.35"],"规则在特定的条件下才能生效":["106.35"],"响应式页面就是使用了":["106.35"],"才让一个页面能够同时适配":["106.35"],"定义自定义属性":["106.36"],"同时设置":["106.37"],"条边框":["106.37"],"20px":["106.37"],"父元素高度一旦坍塌将对后面的元素布局造成影响":["106.38"],"为了解决这个问题":["106.38"],"所以需要清除浮动":["106.38"],"让父元素恢复高度":["106.38"],"创造一个":["106.39"],"那它的高度就能恢复了":["106.39"],"而产生":["106.39"],"的方式很多":["106.39"],"我们可以给父元素设置overflow":["106.39"],"可以结合这个":["106.40"],"codepen":["106.40"],"一起理解上图的":["106.40"],"list":["106.41","107.1","162.2","179.56","190.6","228.2","265.2"],"quotes":["106.41"],"chokcoco":["106.42"],"针对文本溢出也写了一篇文章":["106.42"],"主要突出的是对整块的文本溢出处理":["106.42"],"啥叫整块文本":["106.42"],"元素":["106.43","179.38"],"固定宽高的块级盒子":["106.43"],"10px":["106.44"],"vertical":["106.46"],"align":["106.46","170.15"],"方法二":["106.48"],"float":["106.49"],"bfc":["106.49"],"负margin":["106.50"],"表格列表":["107.1"],"但后端返回的数据可能是这样的":["107.1"],"插入到lighting耳机接口成功":["107.2"],"传统耳机":["107.2"],"插入到传统耳机孔":["107.2"],"插入到传统耳机孔成功":["107.2"],"lightning耳机到传统耳机适配器":["107.2"],"extends":["107.2","183.2","251.0"],"耳机":["107.2"],"电脑传统耳机孔":["107.2"],"出错时候的提示":["107.3"],"reach":["107.4"],"createstandardxhr":["107.4"],"oldie":["107.4"],"does":["107.4","184.10"],"rfc2616":["107.4"],"而原对象又不适合直接修改":["107.5"],"此时可以使用适配器模式进行一层转换":["107.5"],"onload":["108.1"],"页面渲染后":["108.1"],"未来如果需要新增一种小料":["108.2"],"只需要新写一个装饰器类":["108.2"],"并且可以和之前的小料随意搭配":["108.2"],"添加冰淇淋":["108.2"],"withcream":["108.2"],"加冰淇淋":["108.2"],"的调用即可":["108.3"],"参与页面渲染的数据":["108.3"],"logs":["108.3"],"已经包含了":["108.4"],"我们只能在":["108.4"],"的基础上再新写一个代理对象":["108.4"],"a3":["108.4"],"graytype":["109.1"],"字段塞到后续请求中的":["109.1"],"也就是下边这样":["109.1"],"should":["109.4","206.2","206.8","226.1"],"controlled":["109.4","217.7"],"additional":["109.4"],"displaying":["109.6"],"proxyimage":["109.6"],"并且转发了":["110.2","111.4"],"小刚":["110.2"],"xiaogang":["110.2","111.4"],"并且收藏":["110.2"],"getaddress":["110.3","111.1"],"异步请求":["110.3","111.1"],"address":["110.3","111.1"],"全部清空":["111.2"],"findindex":["111.2"],"mjs":["111.4"],"windliang":["111.4"],"writepost":["111.4"],"xiaoming":["111.4"],"update":["111.4","156.13","178.6"],"我收到了":["111.4"],"并且点了个赞":["111.4"],"xiaoyang":["111.4"],"activity":["112.1"],"openactivitypop":["112.1"],"configured":["112.2"],"concretestrategy":["112.2"],"maintains":["112.2"],"sharetype":["112.3"],"constant":["112.3","214.2"],"reward":["112.3"],"讲个故事":["113.0"],"虚拟机与容器":["113.0"],"放在我的背包里":["113.1"],"黑魔法":["113.1"],"等我到了海边":["113.1"],"就用这个":["113.1"],"复制一套房子":["113.1"],"而容器只需要":["113.2"],"mb":["113.2","138.22"],"级甚至":["113.2"],"kb":["113.2","138.22"],"级":["113.2"],"我们来看一下对比数据":["113.2"],"特性":["113.2"],"隔离级别":["113.2"],"操作系统级":["113.2"],"进程":["113.2"],"隔离策略":["113.2"],"hypervisor":["113.2"],"虚拟机监控器":["113.2"],"cgroups":["113.2"],"控制组群":["113.2"],"轻量级的原因":["113.3"],"相信你也会有这样的疑惑":["113.3"],"以便各进程相互独立运行":["113.4"],"namespace":["113.4","114.18"],"功能仅在":["113.4"],"上可用":["113.4"],"因此容器无法在其他操作系统上运行":["113.4"],"htm":["113.6"],"50x":["113.6"],"配置镜像":["113.6"],"打开":["113.6"],"写入如下内容":["113.6"],"我们逐行解释一下代码":["113.6"],"指定该镜像是基于":["113.6"],"镜像而构建的":["113.6"],"命令的意思是将项目根目录下":["113.6"],"文件夹中的所有文件复制到镜像中":["113.6","114.12"],"形式":["113.7"],"description":["113.7"],"这是一个web应用":["113.7"],"设置环境变量":["113.7"],"有些容器运行时会需要某些环境变量":["113.7"],"一次设置一个环境变量":["113.7"],"设置多个环境变量":["113.7"],"优先":["113.8"],"版本明确":["113.8"],"镜像命名明确":["113.8"],"可扩展":["114.0"],"可以理解为一个容器的模板":["114.3"],"通过一个镜像可以创建多个容器":["114.3"],"最小型的一个操作系统环境":["114.3"],"linux":["114.5"],"可参考":["114.5"],"执行如下命令":["114.6"],"brew":["114.6","275.2"],"目录下":["114.12","254.2"],"是基于当前目录的":["114.13"],"是我们上面构建的镜像名字":["114.15"],"username":["114.17","173.94"],"repository":["114.17","114.21"],"全流程结束":["114.17"],"隔离网络":["114.19"],"ipc":["114.19"],"隔离":["114.19"],"images":["114.21"],"created":["114.21","218.4","232.2"],"参考下节":["114.22"],"group":["114.25"],"command":["114.26"],"parameters":["114.27"],"entrypoint":["114.27"],"stop":["114.28"],"停止容器":["114.28"],"head":["114.29","122.0","175.9","279.2","279.4"],"welcome":["114.29"],"h1":["114.29"],"apolloserverstarter":["114.30"],"查看容器端口映射":["114.30"],"exec":["114.31"],"5becea4c":["114.32"],"py":["114.32"],"cpython":["114.32"],"manifest":["115.0"],"添加一个":["115.0"],"handlers":["115.0"],"其中包含有关你的":["115.0"],"可以处理的文件类型的详细信息":["115.0"],"你需要指定要打开的":["115.0"],"mime":["115.0"],"类型":["115.0","173.26"],"文件类型的图标和启动类型":["115.0"],"启动类型定义是否应在单个客户端或多个客户端中打开多个文件":["115.0"],"csv":["115.0"],"icons":["115.0"],"icon":["115.0"],"sizes":["115.0"],"256x256":["115.0"],"launch":["115.0"],"想要在":["115.0"],"启动时访问这些文件":["115.0"],"你需要为":["115.0"],"launchqueue":["115.0"],"对象指定一个使用者":["115.0"],"启动被排队":["115.0"],"直到它们被消费者处理":["115.0"],"setconsumer":["115.0"],"launchparams":["115.0"],"nothing":["115.0"],"do":["115.0","217.7","236.1","256.4"],"the":["115.0","126.4","206.15","216.3","221.4","235.4","236.4","243.2","245.3","252.6"],"queue":["115.0","208.4"],"filehandle":["115.0"],"openfile":["115.0"],"在很多":["115.0"],"开发的场景下":["115.0"],"我们需要在没有网页中的导航的情况下去更新页面的":["115.0"],"特别是在":["115.0"],"应用里面":["115.0"],"我们在切换了导航之后":["115.0"],"不希望刷新网页":["115.0"],"只更新页面中的内容":["115.0"],"之前我们一般都是用":["115.0"],"history":["115.0","180.2"],"去实现的":["115.0"],"stateobj":["115.0"],"pushstate":["115.0","181.0"],"但是用过的都知道":["115.0"],"这玩意实在是太难用了":["115.0"],"而且还很笨重":["115.0"],"也容易出现问题":["115.0"],"提供了一种更友好的方式来帮助我们操作网页的导航":["115.0"],"要使用":["115.0"],"我们需要在全局对象上添加一个":["115.0"],"navigate":["115.0"],"监听器":["115.0"],"navigateevent":["115.0"],"destination":["115.0","137.0"],"transitionwhile":["115.0"],"loadindexpage":["115.0"],"break":["115.0","178.5","214.0"],"loadcatspage":["115.0"],"这个事件采用了集中处理的机制":["115.0"],"它会被所有类型的导航触发":["115.0"],"无论是用户执行了一个动作":["115.0"],"例如点击链接":["115.0"],"提交表单或返回和前进":["115.0"],"还是以代码的方式触发导航":["115.0"],"在大多数情况下":["115.0"],"它会让你的代码覆盖浏览器对该操作的默认行为":["115.0"],"这可能意味着让用户保持在同一页面上并加载或更改网站的内容":["115.0"],"naviga":["115.0"],"chromestatus":["115.0"],"正式发布":["115.0"],"第":["115.0"],"届":["115.0"],"ecma":["115.0"],"大会批准了":["115.0"],"语言规范":["115.0"],"这意味着它现在正式成为标准":["115.0"],"主要特性":["115.0"],"允许我们在":["115.0"],"函数外面使用":["115.0"],"hasown":["115.0","221.3"],"一种更简洁":["115.0"],"更可靠的检查属性是否直接设置在对象上的方法":["115.0"],"at":["115.0","130.9","148.0","206.14","214.3","243.2"],"通过给定索引来获取数组元素":["115.0"],"正则表达式匹配索引":["115.0"],"允许我们利用":["115.0"],"字符来表示我们想要匹配字符串的开始和结束索引":["115.0"],"类的公共实例字段":["115.0"],"允许我们使用赋值运算符":["115.0"],"将实例属性添加到类定义中":["115.0"],"类的私有实例字段":["115.0"],"只允许类内部访问":["115.0"],"类的静态公共字段":["115.0"],"关键字声明静态类字段":["115.0"],"international":["115.0"],"deno":["115.0"],"推出新一代全栈框架":["115.0"],"fresh":["115.0","216.4"],"是一个面向":["115.0"],"开发人员的全栈现代":["115.0"],"运行时":["115.0"],"前端渲染基于":["115.0"],"preact":["115.0"],"由":["115.0","181.0"],"原班人马开发":["115.0"],"它的核心是路由框架和模板引擎的组合":["115.0"],"可在服务器上按需渲染页面":["115.0"],"可以在运行时做到按需构建":["115.0"],"代码可以直接在服务器和客户端上运行":["115.0"],"例如将":["115.0"],"转换为纯":["115.0"],"都可以在运行时按需完成":["115.0"],"可以实现非常快速的迭代和部署":["115.0"],"denoland":["115.0"],"fr":["115.0"],"新一代":["115.0"],"bun":["115.0"],"近日":["115.0"],"和传统的":["115.0"],"这种传统的":["115.0"],"运行时不同":["115.0"],"直接内置了打包器":["115.0"],"转译器":["115.0"],"任务运行器和":["115.0"],"客户端":["115.0"],"这意味着你不再需要":["115.0"],"esbuild":["115.0"],"snowpack":["115.0"],"parcel":["115.0"],"rome":["115.0"],"swc":["115.0"],"就可以直接运行":["115.0"],"原生支持了数百个":["115.0"],"包括约":["115.0"],"fs":["115.0","177.14","195.4"],"buffer":["115.0","141.2"],"的目标是可以在浏览器之外的其他地方运行世界上大多数":["115.0"],"为你未来的基础架构带来性能和复杂性的增强":["115.0"],"并通过更好":["115.0"],"更简单的工具提高开发者的生产力":["115.0"],"复制":["116.1","177.7","179.22"],"revert":["116.1"],"列出全局配置":["116.2"],"配置用户邮箱":["116.3"],"如果想将本地分支推送到远程仓库的不同名分支":["117.1"],"local":["117.1"],"serverfix":["117.1"],"awesomebranch":["117.1"],"todo":["117.2","206.1"],"不包括":["117.2"],"subdir":["117.2"],"查看其他储藏做了哪些改动":["118.3"],"应用第一个储藏并删除":["118.4"],"list中的储藏":["118.5"],"例如删除第二个":["118.5"],"stash":["118.6"],"branch":["118.6"],"file1":["119.3"],"file2":["119.3"],"使用apply命令只是应用储藏":["119.4"],"而内容仍然还在栈上":["119.4"],"需要移除指定的储藏":["119.4"],"drop":["119.4"],"如果使用pop命令不仅可以重新应用储藏":["119.4"],"diff":["119.6","222.12"],"参数":["119.9","195.4"],"如果有自己的私钥":["119.10"],"可以使用gpg来签署标签":["119.10"],"只需要在命令中使用":["119.10"],"s参数":["119.10"],"signed":["119.10"],"而如果是历史分支是分叉的":["119.11"],"会以当前分叉的两个分支作为两个祖先":["119.11"],"创建新的提交对象":["119.11"],"如果在合并分支时":["119.11"],"遇到合并冲突需要人工解决后":["119.11"],"再才能提交":["119.11"],"在远程分支的基础上创建新的本地分支":["119.11"],"definition":["120.0"],"缩写":["120.0"],"但是需要doctype来规范浏览器的行为":["120.1"],"让浏览器按照":["120.1"],"frameset":["120.3"],"也以严格模式呈现":["120.4"],"但有过渡":["120.4"],"而没有":["120.4"],"那么会回到当时浏览器大战时的混乱":["120.5"],"ie":["120.6","151.12","154.13"],"元素提供的是文档级别的元数据":["121.0"],"应用于整个页面":["121.0"],"equiv":["121.0","121.6","154.13"],"元素则是编译指令":["121.0"],"aaa":["121.1","136.2","136.4"],"标签为例":["121.2"],"还是以头条和taobao为例":["121.3"],"device":["121.4","150.12","160.0","279.1","279.6"],"并继续通过此网页的链接索引文件将被检索":["121.5"],"stand":["121.6"],"默认ie标准模式":["121.6"],"插件":["121.7"],"就以chrome内核来渲染页面":["121.7"],"像上图这种两者都存在的情况":["121.7"],"如果有chrome插件":["121.7"],"就以chrome内核渲染":["121.7"],"就以当前浏览器支持的最高版本渲染":["121.7"],"但是在使用https协议的网站中失效了":["121.9"],"但是遗憾的是这些往往不生效":["121.10"],"我们一般都通过":["121.10"],"并列":["122.0"],"html基本结构标签":["122.0"],"打空格没用":["122.2"],"特点":["122.4"],"删除线":["122.5"],"优先del":["122.5"],"语义更强烈":["122.5"],"ins":["122.5"],"u":["122.5","127.20"],"必须属性":["122.6","122.8"],"文本":["122.6"],"替换文本":["122.6"],"图像不能显示时才能看到的替换文字":["122.6"],"相对路径分类":["122.7"],"符号":["122.7"],"指定链接地址的url属性":["122.8"],"当标签":["122.8"],"引用href属性时":["122.8"],"字符代码":["122.9"],"空格符":["122.9"],"适用于定义表格的标签":["122.10"],"用于定义表格中的行":["122.10"],"1或":["122.11"],"规定单元格是否拥有边框":["122.11"],"默认为":["122.11","191.2"],"表示没有边框":["122.11"],"cellpadding":["122.11"],"表格的主体区域":["122.12"],"主要用于放数据本体":["122.12"],"thead":["122.12"],"合并单元格三步曲":["122.13"],"先确定是跨行合并还是跨列合并":["122.13"],"列表可以分为三大类":["122.14"],"无需列表的各个列表项之间没有顺序级别之分":["122.15"],"是并列的":["122.15"],"中只能嵌套":["122.15"],"里面只能包含dt和dd":["122.17"],"dd里面可以放任何标签":["122.17"],"一个完整的表单通常由":["122.18"],"表单域":["122.18"],"用于指定接收并处理表单数据的服务器程序的url地址":["122.19"],"paassword":["122.21"],"密码框":["122.21"],"用户看不见输入的密码":["122.21"],"男":["122.21","286.28"],"radio按钮":["122.21"],"可以实现多选一":["122.21"],"选项3":["122.23"],"效果":["123.0"],"4znrursszrxsuiqqmauj":["123.0"],"sup":["123.0"],"sub":["123.0","216.2"],"预加载和缓存资源":["123.1"],"想知道如何":["123.1"],"预加载":["123.1"],"缓存资源":["123.1"],"吗":["123.1"],"只需要一行代码":["123.1"],"你就完成了":["123.1"],"rel":["123.1","146.1"],"preload":["123.1"],"asset":["123.1","154.4","154.17","226.1"],"为页面":["123.1"],"️添加自定义链接预览":["123.1"],"对链接预览的生成方式感到疑惑":["123.1"],"我们所需要的只是标签":["123.1"],"property":["123.1"],"og":["123.1"],"给用户造成卡死现象":["124.0"],"所以浏览器采用异步的方式来避免":["124.0"],"具体做法是当某些任务发生时":["124.0"],"比如计时器":["124.0"],"in":["125.0","129.8","173.85","195.4","214.1","217.7","252.3","256.8","295.2"],"hasownproperty":["125.0"],"obj2":["125.3"],"这种方法虽然可以实现数组或对象深拷贝":["125.6"],"但不能处理函数和正则":["125.6"],"因为这两者基于json":["125.6"],"stringify和json":["125.6"],"parse处理后":["125.6"],"得到的正则就不再是正则":["125.6"],"变为空对象":["125.6"],"得到的函数就不再是函数":["125.6"],"变为null":["125.6"],"是对象的话就要进行深拷贝":["125.9"],"cloneobj":["125.9"],"找到的是所属类原型上的constructor":["125.9"],"而原型上的":["125.9"],"但是有三个标签是允许跨域加载资源":["126.2"],"发生数据和接受数据":["126.3"],"serverresponse":["126.4"],"收到服务器的响应":["126.4"],"chunk":["126.4","286.43"],"end":["126.4","206.8","206.16"],"xhr":["126.5"],"xmlhttprequest":["126.5","175.4"],"前端开关":["126.5"],"浏览器是否读写cookie":["126.5"],"withcredentials":["126.5"],"访问nginx中的代理服务器":["126.5"],"admin":["126.5"],"frameborder":["126.6"],"iloveyou":["126.7"],"helloa":["126.8"],"sets":["127.1"],"weak":["127.1"],"reflection":["127.1"],"proxies":["127.1"],"作为最早的":["127.1"],"harmony":["127.1"],"也被叫做es6":["127.1"],"draft":["127.2"],"规范的第一个版本":["127.2"],"进入此阶段的提案大概率会成为标准":["127.2"],"candidate":["127.2"],"defined":["127.3"],"但是在es6之后":["127.4","127.7"],"我们只需要写成以下形式":["127.4","127.7"],"但是在es6里":["127.5","127.8"],"这样看起来也没有问题":["127.6"],"但是如果参数的布尔值为falsy时就会出问题":["127.6"],"例如我们这样调用config":["127.6"],"在es6之后我们则可以写成以下形式":["127.9"],"但是如果我们使用扩展操作符":["127.10"],"只需要如下":["127.10"],"的值会被":["127.12"],"包装":["127.12"],"array1":["127.13"],"symbol3":["127.14"],"yield":["127.15","148.2"],"对象中存储的对象值都是被弱引用的":["127.16"],"如果没有其他的变量或属性引用这个对象值":["127.16"],"则这个对象值会被当成垃圾回收掉":["127.16"],"正因为这样":["127.16","173.44"],"对象是无法被枚举的":["127.16"],"没有办法拿到它包含的所有元素":["127.16"],"所以代码如下":["127.16"],"obj":["127.16","127.36","127.47","173.64","179.19","204.6","209.7","219.3"],"azerty":["127.17"],"value可以是任意值":["127.17"],"包括一个对象":["127.17"],"键和值可以是任意对象":["127.17"],"甚至另外一个weakmap对象":["127.17"],"foobar":["127.18"],"foobarobserver":["127.18"],"unicode模式":["127.20"],"𠮷":["127.20"],"u转义":["127.20"],"search":["127.21"],"正数1":["127.23"],"负数":["127.23"],"零0":["127.23"],"cbrt":["127.23"],"返回数值立方根":["127.23"],"clz32":["127.23"],"返回数值的32位无符号整数形式":["127.23"],"imul":["127.23"],"返回两个数值相乘":["127.23"],"fround":["127.23"],"fill":["127.24","286.37"],"根据指定值填充整个数组":["127.24"],"pets":["127.25"],"dog":["127.25"],"八进制以":["127.27"],"和数字开头":["127.27"],"这表示类似下面这种带标签的模版是有问题的":["127.27"],"因为对于每一个ecmascript语法":["127.27"],"somestring":["127.29"],"fullnumber":["127.31"],"2034399002125581":["127.31"],"last4digits":["127.31"],"expected":["127.33"],"expression":["127.33","227.1"],"got":["127.33"],"rest":["127.33","283.12"],"不同的是":["127.34","175.16"],"不能被分离":["127.34"],"代码如下":["127.34"],"xor":["127.35"],"将指定位置上的数组元素与给定的值相异或":["127.35"],"并返回异或操作前该元素的值":["127.35"],"检测数组中某个指定位置上的值是否仍然是给定值":["127.35"],"是则保持挂起直到被唤醒或超时":["127.35"],"返回值为":["127.35"],"create":["127.36","130.8","214.0","220.3"],"getprototypeof":["127.36"],"async":["127.37","159.2","159.5","175.13","218.5","218.8","222.4"],"asyncgenerator":["127.37"],"latex":["127.38"],"str":["127.38","285.5"],"零宽反向否定断言":["127.39"],"在es9之前":["127.39"],"day":["127.42","166.6"],"matchobj":["127.42"],"mergedobj":["127.43"],"合并后的对象":["127.43"],"可以代替":["127.45"],"arr":["127.45"],"具名":["127.48"],"symbols":["127.48"],"iterator":["127.48","173.15"],"regexpstringiterator":["127.49"],"st1":["127.49"],"但是在es10之后":["127.51"],"这个参数却不是必须的":["127.51"],"如果用不到":["127.51"],"我们可以不用传":["127.51"],"一起使用":["127.52"],"无符号右移":["127.52"],"之外的位操作也可以支持":["127.52"],"都是有符号的":["127.52"],"不能用于":["127.52"],"我们有":["127.53"],"of":["127.54","148.1","173.43","174.40","221.4","228.1","243.1","283.1","283.2"],"nav":["127.54"],"但是在es10之后我们可以使用私有变量进行组件封装":["127.55"],"取而代之的是一种更加灵活多变的处理方式":["128.0"],"事件循环历史队列":["128.0"],"微队列":["128.0"],"宏队列":["128.0"],"事件循环最新队列":["128.0"],"列举三个常见的":["128.0"],"常规属性和":["129.1"],"排序属性":["129.1"],"在ecmascript规范中定义了":["129.1"],"数字属性应该按照索引值":["129.1"],"升序排列":["129.1"],"字符串属性根据创建时的顺序升序排列":["129.1"],"输出结果为":["129.2"],"对象所有的可枚举属性":["129.3"],"包括原型":["129.3"],"循环可以随时退出循环":["129.4"],"of循环可以使用的范围包括数组":["129.4"],"classlist":["129.6"],"建议在使用for":["129.7"],"in循环之前":["129.7"],"先检查该对象的值是不是null或者undefined":["129.7"],"语句在可迭代对象":["129.7"],"包括":["129.7"],"作为数组元素值时":["130.2"],"将会将它们序列化为":["130.2"],"输出":["130.3"],"now":["130.5","148.3","206.0","214.2"],"typeerror":["130.9"],"converting":["130.9"],"circular":["130.9","195.8"],"structure":["130.9"],"starting":["130.9"],"对每一个属性值都会执行一次该函数":["130.12"],"期间我们还简单实现过一个":["130.12"],"则每一级别会比上一级别多缩进该字符串":["130.13"],"arg":["131.8","229.0"],"因为返回了一个函数":["131.10"],"我们可以":["131.10"],"typeof":["132.1","195.4","236.7"],"valeu":["132.1"],"p1":["132.2"],"所有":["132.3","148.2"],"则直接返回":["132.4"],"receive":["133.1","133.6"],"msg":["133.1","133.6"],"tab":["133.1","179.34"],"client":["133.2"],"中监听了message事件":["133.2"],"获取页面":["133.2"],"从":["133.2","170.5","174.23","179.42"],"这里有一个细节":["133.3"],"我们在mydata上添加了一个取当前毫秒时间戳的":["133.3"],"st属性":["133.3"],"这是因为":["133.3"],"storage事件只有在值真正改变时才会触发":["133.3"],"指令则返回存储的消息数据":["133.4"],"非":["133.4"],"指令则存储该消息数据":["133.4"],"页面定时发送":["133.4"],"readonly":["133.5","250.1"],"dbrequest":["133.5"],"messaging":["133.6"],"收到消息后":["133.7"],"会使用某种跨页面消息通信技术在所有":["133.7"],"间同步消息":["133.7"],"例如下面使用的":["133.7"],"broadcast":["133.7"],"channel":["133.7"],"内代码":["133.7"],"bc":["133.7"],"opener":["133.9"],"基于服务端":["133.9"],"单页面应用利用了javascript动态变换网页内容":["134.1"],"避免了页面重载":["134.1"],"监听浏览器地址hash值变化":["134.2"],"执行相应的js切换网页":["134.2"],"history模式":["134.2"],"这时按下输入":["134.3"],"浏览器发送":["134.3"],"请求至服务器":["134.3"],"请求完毕之后设置散列值为":["134.3"],"进而触发onhashchange事件":["134.3"],"当只改变浏览器地址栏url的哈希部分":["134.3"],"这时按下回车":["134.3"],"浏览器不会发送任何请求至服务器":["134.3"],"twitter":["134.4"],"上面代码中":["134.4"],"想要插入一个跨域的网址":["134.4"],"导致报错":["134.4"],"这样设计的目的是":["134.4"],"防止恶意代码让用户以为他们是在另一个网站上":["134.4"],"因为这个方法不会导致页面跳转":["134.4"],"replacestate":["134.4","181.0"],"该方法用来修改":["134.4"],"对象的当前记录":["134.4"],"用法与":["134.4"],"方法一样":["134.4"],"假定当前网页是":["134.4"],"显示为":["134.4"],"调用的不同的函数":["135.0"],"按照":["135.0"],"所有的空格符":["136.1"],"张三":["136.2"],"把uri字符串采用utf":["136.3"],"至于具体的编码方法":["136.6"],"两者是一样":["136.6"],"2f":["136.7"],"2flocalhost":["136.7"],"3a8080":["136.7"],"2fpro":["136.7"],"进行转码":["136.8"],"encodeuricomponent":["136.8"],"文件数据block的位置":["137.0"],"linux使用的":["137.0"],"ext2":["137.0"],"ext3":["137.0"],"文件系统中":["137.0"],"不同类型的数据存放在不同的区域":["137.0"],"inode组成的inode":["137.0"],"table存放在一个位置":["137.0"],"文件数据块则存在另外一个位置":["137.0"],"inode不包含文件名":["137.0"],"文件名存放在文件夹信息的结构体里":["137.0"],"文件名相当于inode的别名":["137.0"],"便于我们管理和记忆":["137.0"],"linux系统对文件的操作都是通过inode做到的":["137.0"],"当我们修改文件时":["137.0"],"系统从文件夹的信息结构体里找到文件名对应的inode":["137.0"],"再通过存储在inode中的文件数据block地址找到对应的硬盘位置进行读写操作":["137.0"],"硬链接":["137.0"],"inode与文件名":["137.0"],"文件数据是一对一的关系":["137.0"],"但我们可以通过shell命令让多个文件名指向同一个inode":["137.0"],"这种就是硬链接":["137.0"],"hard":["137.0"],"ln":["137.0"],"命令可以创建硬链接":["137.0"],"如":["137.0","139.1","162.3","175.9","177.7","177.8"],"文件重命名或文件移动则使链接断开":["137.1"],"的链接数变成1":["137.2"],"当链接数变成0时":["137.2"],"系统就会释放掉这个inode":["137.2"],"文件分类":["137.5"],"不同的文件资源需要分类":["137.5"],"比如某个电影即是的分类是外国":["137.5"],"linux系统通过inode管理文件":["137.6"],"inode存储着文件字节数":["137.6"],"文件权限":["137.6"],"链接数":["137.6"],"数据block位置等信息":["137.6"],"列出所有软件清单":["138.2"],"ql":["138.5"],"reload":["138.14","154.3"],"进程id":["138.15"],"配置路径":["138.19"],"bytes":["138.21"],"sent":["138.21","159.11"],"下发给客户端的字节数":["138.21"],"字节":["138.22"],"gb":["138.22"],"localtime":["138.22"],"路径":["138.23","138.33"],"underline":["138.26"],"巩固你的http知识体系":["138.27"],"这篇文章中":["138.27"],"前端部分":["138.29"],"shared":["138.31"],"1m":["138.31"],"共享缓存大小":["138.31"],"sso":["138.32","138.33"],"deeruby":["138.32","138.33"],"jpeg":["138.34","139.4","284.23"],"拒绝":["138.35"],"表示允许":["138.35"],"phone":["138.38"],"权重越大":["138.39"],"被访问概率越大":["138.39"],"down":["138.39"],"这里填写的是限流对象":["138.40"],"我们采用客户端ip":["138.40"],"给共享空间设置名称为":["138.40"],"空间大小":["138.40"],"10兆":["138.40"],"速率":["138.40"],"上述表示每秒最多发起10个请求":["138.40"],"屏蔽或者隐藏了真实客户端信息":["139.1"],"作用":["139.1","139.2"],"访问原来无法访问的资源":["139.1"],"隐藏了服务器的信息":["139.2"],"加权":["139.3"],"权重":["139.3"],"bmp":["139.4"],"swf":["139.4"],"load":["140.0"],"trymoduleload":["140.0"],"字符串":["140.2","178.7"],"似乎他们都可以来实现":["140.2"],"模块加载":["140.2"],"不过在":["140.2"],"中并没有选用他们来实现模块化":["140.2"],"原因也很简单因为他们都有一个致命的问题":["140.2"],"就是都容易被不属于他们的变量所影响":["140.2"],"字符串中并没有定义a":["140.2"],"但是确可以使用上面定义的":["140.2"],"wm":["140.3"],"runinthiscontext":["140.3"],"txt":["140.4"],"方法中使用":["140.5"],"获取到文件的绝对路径":["140.5"],"然后通过new":["140.5"],"module实例化的方式创建":["140.5"],"将模块的绝对路径存储在":["140.5"],"属性中":["140.5"],"中创建":["140.5"],"属性为一个":["140.5"],"方法去加载模块":["140.5"],"中使用":["140.5"],"获取到文件的扩展名":["140.5"],"然后根据扩展名来执行对应的模块加载机制":["140.5"],"最终将加载到的模块挂载":["140.5"],"执行完毕之后":["140.5"],"已经存在了":["140.5"],"直接返回就可以了":["140.5"],"转换成绝对路径":["140.8"],"同一个模块不要重复加载":["140.9"],"尝试加载模块":["140.11"],"isbuff1":["141.2"],"isbuff2":["141.2"],"主机":["141.4"],"协议":["141.4","175.16"],"使用网络域名系统":["141.4"],"系统主机内核版本":["141.6"],"platform":["141.6"],"主机操作系统平摊":["141.6"],"主机的操作系统平台名称":["141.6"],"可能的值为":["141.6"],"返回路径中代表文件夹的部分":["141.8"],"同":["141.8"],"unix":["141.8"],"的dirname":["141.8"],"命令类似":["141.8"],"basename":["141.8"],"返回路径中的最后一部分":["141.8"],"在某个项目中安装本地包":["142.11"],"只需简单的三步":["142.12"],"publish就好了":["142.13"],"depth":["142.23"],"所以如果你用的是yarn需要使用下面的命令":["142.26"],"在时间允许的情况下解决":["142.27"],"或者把代码复制粘贴到项目文件夹里去调试":["143.1"],"很不优雅":["143.1"],"创造一个全局链接":["143.2"],"projects":["143.4"],"project":["143.5"],"我自己试了下":["143.6"],"颠倒顺序其实也没报错":["143.6"],"ls":["143.10"],"目录":["144.1"],"这个目录不是任何一个":["144.1"],"包":["144.1","179.48"],"目录下的文件":["144.1"],"表示这是一个个软链接":["144.1"],"打开文件可以看到文件顶部写着":["144.1"],"sh":["144.1"],"表示这是一个脚本":["144.1"],"由此我们可以知道":["144.1"],"当使用":["144.1","173.27"],"service文件":["144.2"],"查找文件":["144.4"],"cli":["144.5"],"中查找":["144.6"],"bundledependencies":["145.2"],"打包依赖":["145.2"],"major":["145.3"],"大版本号加":["145.3"],"其余版本号归":["145.3"],"premajor":["145.5"],"version指令影响你的git仓库":["145.6"],"可以在指令中使用":["145.6"],"小图使用":["146.2"],"其实对于大部分图标这类图片":["146.2"],"进而提升性能":["146.3"],"懒执行需要唤醒":["146.5"],"属性为一张占位图":["146.6"],"将真实的图片资源放入一个自定义属性中":["146.6"],"当进入自定义区域时":["146.6"],"加载静态资源需要注意":["146.7"],"属性里的真正图像链接":["147.0"],"判断":["147.0"],"标签是否出现在可视范围有两种实现方式":["147.0"],"相等":["147.1"],"页面发生滚动":["147.1"],"即滚动条移动":["147.1"],"scrollleft":["147.1","286.59"],"顶部":["147.2"],"底部矩形边缘的":["147.2"],"窗口内宽度":["147.3"],"e9":["147.5"],"aa":["147.5"],"e8":["147.5"],"a1":["147.5"],"8c":["147.5"],"202210141601847":["147.5"],"interaction":["148.0","206.8"],"blocks":["148.0","212.1","219.10"],"an":["148.0","206.15"],"handler":["148.0","239.3"],"running":["148.0"],"until":["148.0","206.8"],"finished":["148.0"],"permits":["148.0"],"sooner":["148.0"],"otherwise":["148.0"],"如需要在循环中处理大数据量的数据":["148.1"],"这个任务的耗时可能就会非常长":["148.1"],"假设有数百万的数据量":["148.1"],"processdata":["148.1"],"largedataarray":["148.1"],"thread":["148.2","154.10","154.16"],"重要提示":["148.2"],"并不是":["148.2"],"让步":["148.3"],"的策略":["148.3"],"能让浏览器有机会响应用户的重要交互":["148.3"],"这在很多情况下":["148.3"],"尤其是很多执行很多任务时":["148.3"],"能够提高页面对用户的响应能力":["148.3"],"另一种使用":["148.3"],"的方式":["148.3"],"特别是担心浏览器不支持该策略":["148.3"],"就可以使用另一种结合时间的方式":["148.3"],"functions":["148.3","214.1","219.10","236.2"],"deadline":["148.3"],"在上面例子中":["148.4"],"通过这些任务的优先级的编排方式":["148.4"],"能让高浏览器级别的任务":["148.4"],"比如用户交互等得以触发":["148.4"],"depicted":["148.4"],"profiler":["148.4"],"but":["148.4","148.5","206.2","206.8","214.0","236.4","252.5"],"using":["148.4","219.10","221.1","243.1","245.3"],"splits":["148.4"],"up":["148.4","159.13"],"each":["148.4"],"there":["148.5","235.4"],"long":["148.5","221.4"],"more":["148.5"],"that":["148.5","216.3","252.5"],"shorter":["148.5"],"may":["148.5","216.3","245.3"],"interrupted":["148.5"],"by":["148.5","214.1","214.2","235.4"],"other":["148.5","214.1","220.2"],"unrelated":["148.5"],"tmp":["149.2"],"多次访问了内存":["149.4"],"首选读取":["149.4"],"懒加载对缓解服务器压力有一定作用":["150.0"],"对于含有不少图片的比较长的网页来讲":["150.1"],"能够加载的更快":["150.1"],"避免了首次打开时":["150.1"],"当页面滚动直到图片出现在可视区域时":["150.4"],"getboundingclientrect":["150.5"],"元素上边到视窗上边的距离":["150.5"],"那么就保持loading":["150.6"],"想看":["150.7"],"viewport":["150.12","160.0","279.1","279.6"],"获得直接预览的良好体验":["150.15"],"缺点":["150.15","175.10","175.18","176.9","176.10"],"需要监听图片是否显示":["150.15"],"发现网页加载时长每增加":["151.1"],"应用生命周期的四个不同方面":["151.2"],"并指出最好的性能指标是":["151.2"],"100ms":["151.2"],"执行报错":["151.3"],"meaningful":["151.4"],"标记主角元素渲染完成的时间点":["151.4"],"主角元素可以是视频网站的视频控件":["151.4"],"内容网站的页面框架也可以是资源网站的头图等":["151.4"],"type值为255":["151.5"],"已废弃":["151.5"],"getentriesbytype":["151.5","151.12"],"timing属性":["151.6"],"navigationstart":["151.7"],"返回上一个url卸载时间":["151.7"],"如果没有上一个url":["151.7"],"在":["151.7","152.22","173.6","173.19","173.67","175.12","177.14","218.2","252.2","260.0"],"performancenavigationtiming":["151.7"],"中已废弃":["151.7"],"redirectend":["151.7"],"返回最后一个http重定向完成时间":["151.7"],"如果没有重定向":["151.7"],"或者重定向中的一个不同源":["151.7"],"这个值会返回0":["151.7"],"与1":["151.8"],"nexthopprotocol":["151.9"],"网路资源协议":["151.9"],"redirectcount":["151.9"],"重定向数":["151.9"],"servertiming":["151.9"],"返回列表":["151.9"],"performanceservertiming":["151.9"],"来计算耗时的":["151.10"],"优先使用最新标准":["151.12"],"不支持的话使用":["151.12"],"提供的":["151.12"],"loadtimes":["151.12"],"msfirstpaint":["151.12"],"还没有获取":["151.12"],"取":["151.12"],"dominteractive":["151.12"],"拿到的所有图片实体对象":["151.13"],"根据图片的初始加载时间和加载完成时间去更新首屏渲染时间":["151.13"],"接口提供了监视对":["151.13"],"树所做更改的能力":["151.13"],"dom3":["151.13"],"events":["151.13"],"bbc":["152.2"],"发现":["152.2"],"他们在网站加载的每":["152.2"],"一秒钟":["152.2"],"内就会损失":["152.2"],"从而使年均收入增长近":["152.3"],"doubleclick":["152.3"],"秒后仍然无法得到响应时":["152.5"],"会感觉系统糟透了":["152.5"],"或者认为系统已经失去响应":["152.5"],"而选择离开这个":["152.5"],"用户会感知到页面的卡顿":["152.6"],"tti":["152.6"],"internative":["152.6"],"从页面开始到它的主要子资源加载到能够快速地响应用户输入的时间":["152.6"],"没有耗时长任务":["152.6"],"首次输入延时":["152.6"],"fid":["152.6","152.7"],"delay":["152.6"],"从用户第一次与页面交互到浏览器实际能够开始处理事件的时间":["152.6"],"点击":["152.6","152.18"],"输入":["152.6"],"按键":["152.6"],"个":["152.7","203.2"],"显示最大内容元素所需时间":["152.7"],"衡量网站初次载入速度":["152.7"],"首次输入延迟时间":["152.7"],"衡量网站互动顺畅程度":["152.7"],"完成建立连接的时间":["152.8"],"完成握手":["152.8"],"则这里显示的是新建立的连接完成的时间":["152.8"],"注意这里握手结束":["152.8"],"包括安全连接建立完成":["152.8"],"socks":["152.8"],"授权通过":["152.8"],"connectend":["152.8"],"连接开始的时间":["152.8"],"如果不是安全连接":["152.8"],"secureconnectionstart":["152.8"],"请求读取真实文档开始的时间":["152.8"],"完成建立连接":["152.8"],"包括从本地读取缓存":["152.8"],"连接错误重连时":["152.8"],"这里显示的也是新建立连接的时间":["152.8"],"requeststart":["152.8"],"1441112692158":["152.8"],"开始接收响应的时间":["152.8"],"获取到第一个字节":["152.8"],"responsestart":["152.8"],"1441112692686":["152.8"],"响应全部接收完成的时间":["152.8"],"获取到最后一个字节":["152.8"],"responseend":["152.8","152.9"],"1441112692687":["152.8"],"开始解析渲染":["152.8"],"请求耗时":["152.9"],"starttime":["152.10"],"排序的对象数组":["152.10"],"去获取":["152.11"],"数据":["152.11","221.8"],"某种操作的精确耗时":["152.12"],"是非常给力的":["152.13"],"上面介绍了一系列的代码层面去搜集和测定咱们前端性能指标的方法":["152.13"],"fps":["152.15"],"cpu":["152.15","152.17"],"net":["152.15"],"火焰图":["152.15"],"screenshots":["152.16"],"屏幕快照":["152.16"],"显示动态加载的页面图片":["152.16"],"资源":["152.17"],"此面积图指示消耗":["152.17"],"资源的事件类型":["152.17"],"图中颜色分别为":["152.17"],"总体报告":["152.17"],"面板来看到网页的几个核心指标的数值":["152.18"],"记录了渲染进程中主线程的执行记录":["152.18"],"可以看到某个任务执行的具体情况":["152.18"],"是我们":["152.18"],"分析具体函数耗时":["152.18"],"最常看的面板":["152.18"],"首先":["152.18","163.0","205.0"],"面板中会有很多的":["152.18"],"task":["152.18"],"如果是耗时长的":["152.18"],"其右上角会":["152.18"],"标红":["152.18"],"这个时候":["152.18"],"requestanimationframe":["152.20"],"scheduled":["152.20"],"清除计时器触发":["152.20"],"time":["152.20"],"代表此任务及其调用的附属子任务":["152.21"],"一共消耗":["152.21"],"的时间":["152.21"],"这两列数据各有不同的用处":["152.21"],"可以按自己的需求决定按哪列数据作为排序字段":["152.21"],"中的内容":["152.22"],"到这里想必大家对":["152.23"],"面板的调试都已经学会了":["152.23"],"区别还挺大":["152.24"],"滴":["152.24"],"为啥呢":["152.24"],"六个指标":["152.25"],"lighthouse03":["152.25"],"不管用户的生理":["152.26"],"身体能力如何":["152.26"],"lighthouse06":["152.27"],"如何上手搭建简易版":["152.29"],"那可能有的小伙伴说":["152.29"],"功能与具有内置系统管理功能的":["152.30"],"scripting":["152.30"],"cmdlet":["152.30"],"指令集结合在一起":["152.30"],"它就是最强呀":["152.30"],"最后让我们来看看":["152.30"],"支持哪些命令":["152.30"],"对象以及一个索引值":["153.2"],"index传入到这个组件里进行实例化":["153.2"],"列表长度":["153.4"],"即列表项总数":["153.4"],"处理越界情况":["153.5","153.11"],"第一个渲染":["153.5","153.6","153.7"],"到顶部距离":["153.5","153.6","153.7"],"需要渲染的":["153.5","153.6","153.7"],"items":["153.6","153.7","170.15"],"burlywood":["153.8"],"cadetblue":["153.8"],"的累加缓存结果":["153.10"],"其实也就是前缀和":["153.10"],"假设几个列表项的高度数组":["153.10"],"paddingcount":["153.11"],"计算高度":["153.11"],"contentheight":["153.11"],"预估高度":["153.12"],"estimateditemheight":["153.12"],"getheight":["153.12"],"提升打包构建速度":["154.0"],"可以减少打包的范围":["154.1"],"从而提升打包的速度":["154.1"],"在webpack":["154.1"],"js文件中如下配置":["154.1"],"配置":["154.2"],"在js模块当中要加上":["154.2"],"的判断才可以":["154.2"],"判断是否支持hmr功能":["154.2"],"调用":["154.3","178.7","195.6"],"暴露的":["154.3"],"api对代码变化进行监控":["154.3"],"并且告诉":["154.3"],"将代码打包到内存中":["154.3"],"第三步是":["154.3"],"对文件变化的一个监控":["154.3"],"这一步不同于第一步":["154.3"],"并不是监控代码变化重新打包":["154.3"],"当我们在配置文件中配置了devserver":["154.3"],"watchcontentbase":["154.3"],"的时候":["154.3","256.1"],"会监听这些配置文件夹中静态文件的变化":["154.3"],"变化后会通知浏览器端对应用进行":["154.3"],"这儿是浏览器刷新":["154.3"],"是两个概念":["154.3"],"第四步也是":["154.3"],"woff2":["154.4","154.16","154.17"],"media":["154.4"],"ext":["154.4"],"query":["154.4","154.17"],"exclude":["154.5","154.10","154.16","154.17","186.2"],"排除node":["154.5","154.10","154.16","154.17"],"modules代码不编译":["154.5","154.10","154.16","154.17"],"include":["154.5","154.10","154.16","154.17","236.1"],"也可以用包含":["154.5","154.10","154.16"],"大幅提升二次构建速度":["154.6"],"打包速度":["154.6"],"当构建突然中断":["154.6"],"二次进行构建时":["154.6"],"preset":["154.7"],"能解决大多数样式兼容性问题":["154.7"],"filter":["154.7","179.3","228.2","241.9"],"生产模式需要输出":["154.8"],"文件输出到":["154.8"],"目录中":["154.8","154.17"],"clean":["154.8","192.1","192.2","192.3"],"oneof":["154.8"],"用来匹配":["154.8"],"通常用于描述移除":["154.9"],"中的没有使用上的代码":["154.9"],"ac":["154.10"],"ss":["154.10"],"sass":["154.10"],"styl":["154.10"],"stylus":["154.10"],"是webpack命名规则":["154.11","154.12"],"使用chunk的name作为输出的文件名":["154.12"],"什么是chunk":["154.12"],"打包的资源就是chunk":["154.12"],"输出出去叫bundle":["154.12"],"chunk的name是啥呢":["154.12"],"entry中xxx":["154.12"],"name就是xxx":["154.12"],"注意是前面的xxx":["154.12"],"和文件名无关":["154.12"],"为什么需要这样命名呢":["154.12"],"如果还是之前写法main":["154.12"],"charset":["154.13","279.2","279.5"],"utf":["154.13","195.4","279.5"],"ua":["154.13"],"compatible":["154.13","219.10"],"hot":["154.14"],"启用node中全局变量":["154.15"],"启用浏览器中全局变量":["154.15"],"开启多进程":["154.16"],"workers":["154.16"],"数量":["154.16"],"cachedirectory":["154.16"],"开启babel编译缓存":["154.16"],"cachecompression":["154.16"],"缓存文件不要压缩":["154.16"],"dataurlcondition":["154.17"],"maxsize":["154.17"],"小于10kb的图片会被base64处理":["154.17"],"将图片文件输出到":["154.17"],"imgs":["154.17"],"将图片文件命名":["154.17"],"hash值取8位":["154.17"],"使用之前的文件扩展名":["154.17"],"添加之前的query参数":["154.17"],"animate":["154.19"],"这里的":["154.20"],"会让provideplugin向使用了":["154.20"],"的文件中注入":["154.20"],"这样就能达到我们想要的效果了":["154.20"],"到这我们的高级配置就到这里了":["154.20"],"除了上面这些还有其他优化手段":["154.20"],"到这就不一一列举了":["154.20"],"感兴趣的可以自己到官网上查阅":["154.20"],"下面我们来总结一下我们从":["154.20"],"保存在本地的图片":["155.0"],"样式":["155.0"],"特别是废弃的样式":["155.0"],"分包按功能尽可能拆分的小一些":["155.2"],"包括js":["155.3"],"wxml和样式":["155.3"],"logo等":["155.4"],"优化手段":["155.5"],"进阶":["155.5"],"如table":["155.6"],"但总体来说代码包大小会下降很多":["155.7"],"示例":["155.7"],"而不是整体加载":["155.8"],"特别是在我们这种场景下":["155.8"],"绝大部分的组件虽然加载了但并不会被用上":["155.8"],"因此官方提供了分包加载的方式":["155.8"],"分包异步化":["155.8"],"等后续功能稳定之后再考虑":["155.9"],"总结":["155.9"],"基础":["155.9"],"开启代码压缩":["155.9"],"数字":["156.1"],"切换":["156.1"],"不但不会提升性能":["156.2"],"还有可能降低性能":["156.2"],"antd":["156.2"],"mobile":["156.2"],"mockmemo":["156.2"],"fc":["156.2","156.10"],"setcount":["156.2","156.11","205.15"],"setshow":["156.2"],"滚动内容高度":["156.3"],"来存放组件真正的":["156.4"],"props信息":["156.4"],"wrapperprops":["156.4"],"是否储存props是否处于正在更新状态":["156.4"],"renderisscheduled":["156.4"],"判断两个值是否是同一个值":["156.6"],"正常的函数":["156.7"],"usecreation包裹后的":["156.7"],"flag":["156.10","252.6"],"setflag":["156.10","156.19"],"img6":["156.11"],"案例":["156.11"],"案例1":["156.11"],"usereactive":["156.11"],"一种具备":["156.11"],"响应式":["156.11"],"缘由":["156.11"],"我们知道用":["156.11"],"可以定义变量其格式为":["156.11"],"迅速了解es6":["156.12"],"es12的全部特性":["156.12"],"接受的参数是":["156.12"],"initialstate":["156.13"],"floor":["156.14","286.38","291.1","291.6"],"random":["156.14"],"pop":["156.14","206.14","228.3"],"unshift":["156.14"],"如果将这个作为":["156.16"],"useeffect":["156.16","159.2","159.13","205.19"],"的参数":["156.16"],"那么就相当于":["156.16"],"校验变值":["156.17"],"目标的值不同":["156.17"],"依赖值改变":["156.17"],"先执行对应的函数":["156.17"],"重新进行赋值":["156.17"],"keydown":["156.18","207.5"],"ev":["156.18"],"onend":["156.22"],"返参就更加一目了然了":["156.22"],"返回的是两个时间差的数值":["156.22"],"usecountdown":["156.23"],"还有":["156.24"],"天":["156.24"],"分":["156.24"],"秒":["156.24"],"uselatest":["156.26"],"防止拿到的值不是最新值":["156.26"],"在封装的时候":["156.26"],"应该将存放的值放入":["156.26"],"setstate":["157.0","209.3","286.37"],"如果同步更新了state":["157.1"],"但是还没有执行render函数":["157.1"],"验证二":["157.2"],"原生dom事件":["157.2"],"componentdidmount":["157.2"],"btnel":["157.2"],"btn":["157.2"],"要求如下":["158.1","164.1"],"要求最大并发数":["158.1","164.1"],"每当有一个请求返回":["158.1","164.1"],"主要思路就是上面所述":["158.2","164.2"],"但是在开发时我们要考虑一些特殊情况":["158.2","164.2"],"的长度为":["158.2","164.2"],"就没有值":["158.2","164.2"],"resp":["158.3","164.3"],"fetch":["158.3","159.2","159.5","164.3"],"加入到results":["158.3","164.3"],"jsonplaceholder":["158.4","164.4"],"typicode":["158.4","164.4"],"todos":["158.4","164.4"],"通过上面这个":["158.5","164.5"],"图可以很直观的看到":["158.5","164.5"],"每次请求的数量都是":["158.5","164.5"],"最新的事件":["159.0"],"并添加到页面列表的末尾":["159.0"],"下面是项目的运行效果图":["159.0"],"在上图中客户端在发起请求后服务端会":["159.1"],"立即响应":["159.1"],"不过因为这时服务端的数据没有更新所以返回了一个空的结果给客户端":["159.1"],"useref":["159.2","159.13"],"fetchlatestevents":["159.2","159.5"],"获取最新的事件":["159.2"],"消耗服务端资源":["159.3"],"同时如果客户端是一些移动设备的话":["159.3"],"耗电速度也会很快":["159.3"],"在上图中":["159.4","159.12"],"客户端发起请求后":["159.4"],"服务端发现当前没有新的数据":["159.4"],"这个时候服务端没有立即返回请求":["159.4"],"而是":["159.4","181.0"],"failed":["159.5","249.1"],"listevents":["159.5"],"每一个http连接都是一个独立的线程":["159.6"],"过多的http连接会消耗掉服务端的内存资源":["159.6"],"难以处理数据更新频繁的情况":["159.6"],"00":["159.8","284.36","284.37"],"timestampref":["159.9"],"eventsref":["159.9"],"setrefresh":["159.9"],"current":["159.9","208.13","256.5","286.37"],"因此websocket适合于数据频繁更新的场景":["159.10"],"同样websocket也不是完美的":["159.10"],"它有下面这些问题":["159.10"],"扩容麻烦":["159.10"],"基于websocket的服务是":["159.10"],"客户端向服务端发起一个":["159.12"],"持久化的http连接":["159.12"],"close":["159.13","162.3","173.13","241.9"],"listen":["159.13"],"在上面的代码中":["159.13"],"每次客户端给服务端发送请求后":["159.13"],"服务端先给客户端返回所有的现存事件然后将该请求挂起":["159.13"],"在新的事件生成时再给客户端返回所有的新事件":["159.13"],"下面是前端代码实现":["159.13"],"sse的问题也很明显":["159.14"],"单向通信":["159.14"],"promise1":["161.0"],"是不是就可以实现该需求":["162.0"],"说到环境中没有":["162.0"],"直呼内行":["162.0"],"我曾在":["162.0"],"一文彻底了解web":["162.0"],"十万":["162.0"],"百万条数据都是弟弟":["162.0"],"中聊过如何使用":["162.0"],"和对应的特性":["162.0"],"并且":["162.0"],"更狠":["162.0"],"不但没有":["162.0"],"连":["162.0"],"对象也没有":["162.0"],"在worker线程中打印window":["162.0"],"非常简陋的沙箱":["162.1"],"verypoorsandbox":["162.1"],"使用with":["162.1"],"将eval函数执行时的执行上下文指定为ctx":["162.1"],"可访问全局作用域的白名单列表":["162.2"],"执行上下文对象的代理对象":["162.2"],"ctxproxy":["162.2"],"但有个很严重的漏洞":["162.3"],"如果开发者通过":["162.3"],"来获取":["162.3"],"依然是可以操作":["162.3"],"需要在黑名单中加入":["162.3"],"来解决这个沙箱逃逸的漏洞":["162.3"],"虽然把":["162.3"],"加入了黑名单":["162.3"],"但":["162.3"],"上的方法":["162.3"],"依然是可以正常获取使用的":["162.3"],"最终代码":["162.3"],"副作用":["163.0"],"这在js中并不罕见":["163.0"],"但感觉并不好":["163.0"],"尤其是当其它插件可能处于同样的内部状态时":["163.0"],"一个更加实用的方法将大大有助于我们的系统更加安全和可预测":["163.0"],"一个更好的插件系统架构":["163.0"],"再来看一个更好的插件架构":["163.0"],"下面例子改变了计算器和它的插件api":["163.0"],"这里有一些显著的变化":["163.0"],"我们将插件系统与":["163.0"],"核心":["163.0","195.7"],"计算器方法":["163.0"],"加号":["163.0"],"减号":["163.0"],"分离开":["163.0"],"将它们放入自己的插件对象中":["163.0"],"使系统更加安全":["163.0"],"现在插件将不能直接读写":["163.0"],"它们只能看到":["163.0"],"其次":["163.0"],"我们实现了一个":["163.0"],"press":["163.0"],"green":["165.1","165.2"],"以及无需存储的":["166.0"],"便无法被废除":["166.1"],"只要在服务端规定的有效期内都是有用的":["166.1"],"并且就算后面颁布了新的":["166.1"],"也不会影响到之前旧的":["166.1"],"这样出于安全考虑":["166.1"],"就会将":["166.1"],"但是此时你可能会有一个疑问":["166.2"],"既然":["166.2"],"无区别":["166.2"],"那为什么不干脆把":["166.2"],"的过期时间延长呢":["166.2"],"这样的设计意义到底是什么":["166.2"],"二":["166.2","275.2"],"jwt":["166.3"],"sign":["166.3","173.43","175.12"],"携带用的的数据":["166.3"],"与用户名":["166.3"],"将密码等敏感信息过滤出去":["166.3"],"exp":["166.3","166.6","215.2"],"dayjs":["166.3"],"refresh":["166.4","166.5"],"refreshauth":["166.4"],"verify":["166.5"],"secret":["166.5","166.6"],"isafter":["166.5","166.6"],"表示":["166.6","189.0","258.6"],"对象是否在另一个提供的日期时间之后":["166.6"],"dayjs中文官网":["166.6"],"fenxianglu":["166.6"],"cn":["166.6","267.1"],"category":["166.6"],"token状态刷新成功":["166.7"],"settimeout":["166.8","173.32","176.18","178.3","195.4","283.5","286.33"],"done":["166.8","179.29","204.3"],"callback":["166.9","206.9"],"errmsg":["167.0"],"or":["167.0","214.1","216.3","217.7","218.5","241.6","275.2"],"评论数是单独的一个接口":["167.2"],"当一次性需要展示多条新闻":["167.2"],"让请求在执行宏任务的时候发出":["167.3"],"如何让每个方法拿到自己需要的数据":["167.3"],"这里可以在方法内部用一个map将每个方法的promise的resolve存起来":["167.3"],"发起一次请求":["167.4"],"参数为":["167.4","175.6"],"ids":["167.4"],"testdata":["167.4"],"函数一般会按先进先调用的顺序执行":["168.2"],"然而":["168.2","173.82"],"ric":["168.3"],"该回调函数会在浏览器下一次重绘之前执行":["168.6"],"页面将在3秒后":["168.7"],"显示当前鼠标的实时位置":["168.7"],"是在渲染前还是渲染后":["168.10"],"是在微任务执行前还是执行后":["168.10"],"执行requestanimationframe回调":["168.11"],"会尽量保持60hz的刷新率运行":["168.13"],"每一帧中间可能会进行多轮事件循环":["168.13"],"将背后的知识整理分享给大家":["168.15"],"喜欢在后续的面试过程中":["168.15"],"api的":["168.16"],"因为我们平时开发中几乎不需要用到":["168.16"],"告诉浏览器":["168.17"],"确保元素刚好停在200px的位置":["168.19"],"translatex":["168.19"],"没别的意义":["168.20"],"你可以传这个值给":["168.20"],"slowalert":["168.23"],"clearinterval":["168.24","195.4"],"可以互换":["168.24"],"ms":["168.25","217.4"],"大约1帧的时间":["168.25"],"在chrome":["168.26"],"这对我创作是无比的肯定和动力":["168.27"],"和宏任务会有几率先后执行":["168.28"],"这种方式最大的优点就是安全":["169.2"],"px":["169.3","286.38","286.71"],"背景元素":["169.3"],"absolute":["169.3","170.2"],"opacity":["169.3"],"background":["169.3","286.55"],"添加对应的子元素":["169.3"],"插入到对应的位置":["169.3"],"这里最容易踩坑的点就是":["169.4"],"中的条件写得不正确的话会导致死循环":["169.4"],"两侧透明内圆角":["170.1"],"外侧投影":["170.1"],"无法正确的显示投影":["170.3"],"shape":["170.4"],"也可以实现两个内圆角":["170.8"],"composite":["170.8"],"添加drop":["170.8"],"4的圆角":["170.10"],"有几种实现方式呢":["170.10"],"orange":["170.11"],"a6d1a9":["170.12"],"遮罩二":["170.12"],"card":["170.12"],"内凹圆角边框":["170.13"],"投影的颜色默认是跟随当前文字颜色的":["170.14"],"eb4f8b":["170.14"],"100rpx":["170.15"],"10rpx":["170.15"],"28rpx":["170.15"],"baseline":["170.15"],"justify":["170.15"],"600rpx":["170.15"],"90deg":["170.15"],"c3":["170.15"],"300rpx":["170.15"],"不占空间":["171.0"],"场景":["171.0"],"显示出原来这里不存在的结构":["171.0"],"占据空间":["171.0"],"显示不会导致页面结构发生变动":["171.0"],"不会撑开":["171.0"],"可以跟transition搭配":["171.0"],"讲一下":["171.0"],"png8":["171.0"],"png16":["171.0"],"png32":["171.0"],"并简单讲讲":["171.0"],"的压缩原理":["171.0"],"png图片主要有三个类型":["171.0"],"8中的8":["171.0"],"其实指的是8bits":["171.0"],"相当于用2":["171.0"],"2的8次方":["171.0"],"大小来存储一张图片的颜色种类":["171.0"],"8等于256":["171.0"],"也就是说png":["171.0"],"8能存储256种颜色":["171.0"],"一张图片如果颜色种类很少":["171.0"],"将它设置成png":["171.0"],"8得图片类型是非常适合的":["171.0"],"24中的24":["171.0"],"相当于3乘以8":["171.0"],"等于":["171.0","174.4"],"就是用三个8bits分别去表示":["171.0"],"红":["171.0"],"绿":["171.0"],"蓝":["171.0"],"可以表达256乘以256乘以256":["171.0"],"16777216种颜色的图片":["171.0"],"这样png":["171.0"],"24就能比png":["171.0"],"8表示色彩更丰富的图片":["171.0"],"但是所占用的空间相对就更大了":["171.0"],"32中的32":["171.0"],"相当于png":["171.0"],"8bits的透明颜色通道":["171.0"],"就相当于r":["171.0"],"透明":["171.0"],"比png":["171.0"],"24多了一个a":["171.0"],"32能表示跟png":["171.0"],"24一样多的色彩":["171.0"],"并且还支持256种透明的颜色":["171.0"],"能表示更加丰富的图片颜色类型":["171.0"],"png图片的压缩":["171.0"],"分两个阶段":["171.0"],"预解析":["171.0"],"prediction":["171.0"],"这个阶段就是对png图片进行一个预处理":["171.0"],"处理后让它更方便后续的压缩":["171.0"],"压缩":["171.0","177.10"],"对于web标准以及w3c的理解":["172.0"],"web标准":["172.0"],"简单来说可以分为结构":["172.0"],"表现":["172.0"],"行为":["172.0"],"其中结构是由html各种标签组成":["172.0"],"简单来说就是body里面写入标签是为了页面的结构":["172.0"],"表现指的是css层叠样式表":["172.0"],"通过css可以让我们的页面结构标签更具美感":["172.0"],"行为指的是页面和用户具有一定的交互":["172.0"],"这部分主要由js组成":["172.0"],"w3c":["172.0"],"world":["172.0","179.41"],"consortium是一个制定各种标准的非盈利性组织":["172.0"],"也叫万维网联盟":["172.0"],"标准包括html":["172.0"],"ecmascript等等":["172.0"],"web标准的制定有很多好处":["172.0"],"可以统一开发流程":["172.0"],"统一使用标准化开发工具":["172.0"],"vscode":["172.0"],"webstorm":["172.0"],"sublime":["172.0"],"方便多人协作":["172.0"],"学习成本降低":["172.0"],"只需要学习标准就行":["172.0"],"否则就要学习各个浏览器厂商标准":["172.0"],"跨平台":["172.0"],"方便迁移都不同设备":["172.0"],"降低代码维护成本":["172.0"],"quirks":["172.0"],"怪癖":["172.0"],"模式是什么":["172.0"],"它和standards":["172.0"],"标准":["172.0"],"有什么区别":["172.0"],"页面如果写了dtd":["172.0"],"就意味着这个页面采用对css支持更好的布局":["172.0"],"而如果没有":["172.0"],"则采用兼容之前的布局方式":["172.0"],"这就是quirks模式":["172.0"],"有时候也叫怪癖模式":["172.0"],"诡异模式":["172.0"],"总体会有布局":["172.0"],"样式解析":["172.0"],"脚本执行三个方面区别":["172.0"],"这里列举一些比较常见的区别":["172.0"],"盒模型":["172.0"],"在w3c标准中":["172.0"],"如果设置一个元素的宽度和高度":["172.0"],"指的是元素内容的宽度和高度":["172.0"],"然而在quirks模式下":["172.0"],"ie的宽度和高度还包含了padding和border":["172.0"],"设置行内元素的高宽":["172.0"],"在standards模式下":["172.0"],"给行内元素设置width和height都不会生效":["172.0"],"而在quriks模式下会生效":["172.0"],"用margin":["172.0"],"auto设置水平居中":["172.0"],"设置margin":["172.0"],"可以使元素水平居中":["172.0"],"但是在quriks模式下失效":["172.0"],"设置百分比高度":["172.0"],"元素的高度是由包含的内容决定的":["172.0"],"如果父元素没有设置百分比的高度":["172.0"],"子元素设置百分比的高度是无效的":["172.0"],"知道什么是微格式吗":["172.0"],"谈谈理解":["172.0"],"效率低":["173.2"],"结果数组":["173.2"],"报错原因":["173.3"],"referenceerror":["173.3"],"cannot":["173.3","248.1"],"splice":["173.4","174.24"],"行的":["173.5"],"被放入到异步执行队列":["173.5"],"接下来调用":["173.5"],"参考答案":["173.6","173.7","173.49","173.60","173.86","173.97"],"考察的是逻辑运算符":["173.6"],"里面":["173.6"],"上面的代码导出了一个":["173.7"],"类":["173.7"],"该类在被实例化的时候":["173.7"],"inherit":["173.9"],"没有任何多余的属性":["173.9"],"构造函数":["173.9"],"出来的对象叫小":["173.9"],"那么这个":["173.9"],"的原型对象":["173.9"],"的构造函数":["173.9"],"这个对象又是":["173.9"],"对象的原型对象":["173.9"],"这意味着":["173.9"],"链接该对象到另一个对象":["173.10","173.76"],"即设置该对象的原型对象":["173.10","173.76"],"以及作为一个数组":["173.11"],"或类数组对象":["173.11"],"提供的参数":["173.11"],"一旦执行栈中所有的同步任务执行完毕":["173.12"],"就代表着当前的主线程":["173.12"],"空闲了":["173.12"],"系统就会读取任务队列":["173.12"],"仅":["173.13"],"内部使用":["173.13"],"poll":["173.13"],"获取新的":["173.13"],"适当的条件下":["173.13"],"将阻塞在这里":["173.13"],"check":["173.13"],"setimmediate":["173.13"],"的完成顺序决定":["173.15"],"的特点":["173.15"],"接收一个":["173.15"],"实例的数组或具有":["173.15"],"方法调用构造函数时":["173.16"],"构造函数内的":["173.16"],"会被绑定到新创建的对象上":["173.16"],"一般通过":["173.16"],"没有继承父类原型的属性":["173.17"],"解决了原型链继承缺点1":["173.17"],"可以继承多个构造函数属性":["173.17"],"call多个":["173.17"],"在子实例中可向父实例传参":["173.17"],"阶段":["173.18","173.52","178.1","218.11"],"在事件对象到达事件目标之前":["173.18"],"事件对象必须从":["173.18"],"经过目标的祖先节点传播到事件目标":["173.18"],"这个阶段被我们称之为捕获阶段":["173.18"],"闭包让你可以在一个内层函数中访问到其外层函数的作用域":["173.19"],"事件委托利用了事件冒泡":["173.20"],"只指定一个事件处理程序":["173.20"],"就可以管理某一类型的所有事件":["173.20"],"例如":["173.20","173.41","177.10","177.13","178.8","179.30","191.1","205.3"],"事件会一直冒泡到":["173.20"],"而且不能修改":["173.21"],"最初在":["173.21"],"中作用域有":["173.21"],"全局作用域":["173.21"],"语句和":["173.22"],"语句里面的":["173.22"],"就不需要":["173.23"],"但是它在声明时可以捕获其所在上下文的":["173.24"],"供自己使用":["173.24"],"每一个普通函数调用后都具有一个":["173.24"],"arguments":["173.24","283.12"],"用来存储实际传递的参数":["173.24"],"就是":["173.25","258.8"],"这些值本身很简单":["173.25"],"不能够再进行拆分":["173.25"],"由于原始值的数据大小是固定的":["173.25"],"原始值的数据是存储于内存中的栈区里面的":["173.25"],"但是它却属于":["173.26"],"声明变量时":["173.27"],"的数据类型分成原始类型":["173.28"],"primitive":["173.28"],"和合成类型":["173.28"],"complex":["173.28"],"两大类":["173.28"],"作者觉得表示":["173.28"],"的值最好不是对象":["173.28"],"的最初版本没有包括错误处理机制":["173.28"],"发生数据类型不匹配时":["173.28"],"往往是自动转换类型或者默默地失败":["173.28"],"作者觉得":["173.28"],"就出现了基于":["173.30"],"的异步解决方案":["173.30"],"这种方式需要编写外部的执行器":["173.30"],"而执行器的代码写起来一点也不简单":["173.30"],"当然也可以使用一些插件":["173.30"],"这种局面得到了改善":["173.31"],"延迟脚本":["173.31"],"属性只适用于外部脚本文件":["173.31"],"如果给":["173.31"],"标签定义了":["173.31"],"这个属性的作用是表明脚本在执行时不会影响页面的构造":["173.31"],"异步操作会由浏览器":["173.32"],"指向构造函数本身":["173.33"],"20210812161401493":["173.33"],"的到来":["173.34"],"为我们提供了块级作用域":["173.34"],"作用域链指的是作用域与作用域之间形成的链条":["173.34"],"结果缓存":["173.35"],"封装":["173.35"],"参阅前面第":["173.36"],"对象就是一个引用值":["173.37"],"因为对象可以向下拆分":["173.37"],"拆分成多个简单值或者复杂值":["173.37"],"引用值在内存中的大小是未知的":["173.37"],"因为引用值可以包含任何值":["173.37"],"而不是一个特定的已知值":["173.37"],"所以引用值的数据都是存储于堆区里面":["173.37"],"最后总结一下两者的区别":["173.37"],"bb":["173.38"],"prototype":["173.39","173.46","173.69","173.77","179.12","179.23","209.8","243.1","292.2","293.2"],"深拷贝":["173.40"],"在堆中重新分配内存":["173.40"],"并且把源对象所有属性都进行新建拷贝":["173.40"],"以保证深拷贝的对象的引用图不包含任何原有对象或对象图上的任何对象":["173.40"],"用于检测一个对象是否为某个构造函数的实例":["173.41"],"垃圾回收的任务由":["173.42"],"引擎中的垃圾回收器来完成":["173.42"],"它监视所有对象":["173.42"],"并删除那些不可访问的对象":["173.42"],"基本的垃圾回收算法称为":["173.42"],"标记":["173.42"],"trunc":["173.43"],"这也意味着":["173.44"],"中没有存储当前对象的列表":["173.44"],"是不可枚举的":["173.44"],"对象也是键值对的集合":["173.44"],"以前":["173.45"],"解决异步的方法是回调函数":["173.45"],"但是回调函数有一个最大的问题就是回调地狱":["173.45"],"child2":["173.46"],"原型对象的属性是共享的":["173.46"],"指的是短时间内多次触发同一事件":["173.48"],"只执行最后一次":["173.48"],"或者只执行最开始的一次":["173.48"],"中间的不执行":["173.48"],"函数节流":["173.48"],"请参阅前面第":["173.49","173.50","173.60","173.71","173.72"],"有的时候时间和空间却又是":["173.51"],"鱼和熊掌":["173.51"],"不可兼得的":["173.51"],"那么我们就需要从中去取一个平衡点":["173.51"],"排序也称排序算法":["173.51"],"sort":["173.51"],"排序是将":["173.51"],"封装了不同操作系统一些底层特性":["173.52"],"对外提供统一的":["173.52"],"事件循环机制也是它里面的实现":["173.52"],"的事件循环分为":["173.52"],"timers":["173.52","195.4"],"这个阶段执行":["173.52"],"的回调":["173.52"],"callbacks":["173.52"],"题以及第":["173.53"],"只能在块作用域里访问":["173.54"],"不能跨块访问":["173.54"],"也不能跨函数访问":["173.54"],"什么是闭包":["173.55"],"闭包是一种特殊的对象":["173.55"],"它由两部分组成":["173.55"],"执行上下文":["173.55"],"代号":["173.55"],"以及在该执行上下文中创建的函数":["173.55"],"已失败":["173.56"],"一旦状态改变就不会再变":["173.56"],"两种状态改变":["173.56"],"成功或失败":["173.56"],"请求超时":["173.57"],"循环控制每一次冒泡需要比较的次数":["173.58"],"因为之后每一次冒泡的两两比较次数会越来越少":["173.58"],"上面的代码定义了一个层嵌套的数组":["173.59"],"默认情况下只会拍平一层数组":["173.59"],"也就是把原来的三维数组降低到了二维数组":["173.59"],"在传入的参数为":["173.59"],"则会降低两维":["173.59"],"成为一个一维数组":["173.59"],"可展开任意深度的嵌套数组":["173.59"],"代理局限性":["173.62"],"defineproperty始终还是局限于属性层面的读写代理":["173.62"],"对于对象层面以及属性的其它操作代理它都无法实现":["173.62"],"鉴于此":["173.62"],"圣杯模式的核心思想就是不通过调用父类构造函数来给子类原型赋值":["173.63"],"而是取得父类原型的一个副本":["173.63"],"然后将返回的新对象赋值给子类原型":["173.63"],"测试用例":["173.64"],"返回的值即为":["173.65"],"方法的传入函数":["173.65"],"关键字只能放在":["173.65"],"symbol":["173.66","214.0","231.2"],"原理这是这样的":["173.67"],"不同的对象在底层都表现为二进制":["173.67"],"中二进制前三位都为":["173.67"],"的原型方法":["173.68"],"调用该方法":["173.68"],"默认返回当前对象的":["173.68"],"这是一个内部属性":["173.68"],"其格式为":["173.68"],"就是对象的类型":["173.68"],"在这里需要特别注意的是":["173.69"],"检测的是原型":["173.69"],"用一段伪代码来模拟其内部执行过程":["173.69"],"varl":["173.69"],"proto":["173.69","173.75","179.21"],"varr":["173.69"],"基本数据类型":["173.70"],"基本类型值在内存中占据固定大小":["173.70"],"直接存储在":["173.70"],"栈内存":["173.70"],"中的数据":["173.70"],"引用数据类型":["173.70"],"引用类型在栈中存储了指针":["173.70"],"这个指针指向堆内存中的地址":["173.70"],"真实的数据存放在":["173.70"],"即手动清除变量":["173.73"],"这样下次":["173.73"],"垃圾回收机制回收时":["173.73"],"在运行的时候会给存储在内存中的所有变量都加上标记":["173.74"],"去掉环境中的变量以及被环境中的变量引用的变量的标记":["173.74"],"被加上标记的会被视为准备删除的变量":["173.74"],"垃圾回收器完成内存清理工作":["173.74"],"销毁那些带标记的值并回收他们所占用的内存空间":["173.74"],"它保证了当前执行的作用域对符合访问权限的变量和函数的有序访问":["173.75"],"什么原型链":["173.75"],"每个对象都可以有一个原型":["173.75"],"访问到该对象":["173.77"],"这种":["173.78"],"实际上并不发生在你的代码中":["173.78"],"而只是一种比喻":["173.78"],"比较时":["173.79"],"如果类型不同":["173.79"],"直接就是false":["173.79"],"的行为基本一致":["173.80"],"不过有两处不同":["173.80"],"由于其占据空间固定":["173.81"],"是简单的数据段":["173.81"],"为了便于提升变量查询速度":["173.81"],"将其存储在栈中":["173.81"],"即按值访问":["173.81"],"引用类型也称为复杂类型":["173.81"],"由于其值的大小会改变":["173.81"],"nan":["173.82","218.4","232.2"],"箭头函数没有":["173.82"],"箭头函数无法用来充当构造函数":["173.83"],"所以是无法":["173.83"],"被捕获错误":["173.84"],"调用成功返回的结果是每个":["173.84"],"configurable":["173.85","179.55"],"writable":["173.85"],"defineproperty":["173.85"],"main1":["173.87"],"模块是动态引用":["173.87"],"并且不会缓存":["173.87"],"模块里面的变量绑定其所有的模块":["173.87"],"而是动态地去加载值":["173.87"],"并且不能重新赋值":["173.87"],"异步函数会恢复执行以及返回":["173.89"],"如果该值不是一个":["173.89"],"题":["173.90"],"然后说一下自己平时开发中用得比较多的是哪些即可":["173.90"],"是一个伪数组对象":["173.91"],"这个伪数组对象将包含调用函数时传递的所有的实参":["173.91"],"相比":["173.92"],"把给定的值转换成数字":["173.93"],"可以是整数或浮点数":["173.93"],"把给定的值转换成字符串":["173.93"],"利用":["173.93"],"参数也传入":["173.94"],"这样对于任何输入参数":["173.94"],"都有与之对应的唯一的输出参数了":["173.94"],"该函数就符合了第一个特点":["173.94"],"没有副作用":["173.94"],"副作用的意思是":["173.94"],"这个函数的运行":["173.94"],"不会修改外部的状态":["173.94"],"下面再看反面典型":["173.94"],"indexcode":["173.95"],"commonjs":["173.95"],"不要简单的回答一个":["173.96"],"自定义flat方法":["173.99"],"不可以使用箭头函数":["173.99"],"使用后内部的this会指向window":["173.99"],"myflat":["173.99"],"判断第一层数组的类型":["173.99"],"创建一个新数组":["173.99"],"用于保存拆分后的数组":["173.99"],"若当前对象非数组则返回undefined":["173.99"],"遍历所有子元素并判断类型":["173.99"],"若为数组则继续递归":["173.99"],"若不为数组则直接加入新数组":["173.99"],"在该数组中找出和为目标值的两个数":["174.2"],"nums":["174.4"],"则条件成立":["174.4"],"返回结果":["174.4"],"使得":["174.6"],"取出相同位置的数字":["174.12"],"s1":["174.12"],"s2":["174.12"],"否则map":["174.16"],"相邻元素":["174.21"],"寻找最小值":["174.22"],"所在位置向前遍历":["174.23"],"直至找到一个比目标元素小的元素":["174.23"],"目标元素插入到该元素之后的位置":["174.23"],"区域中各个取出第一个元素":["174.25"],"比较它们的大小":["174.25"],"将较小的元素添加到result中":["174.25"],"然后从较小元素所在的区域内取出下一个元素":["174.25"],"遍历对象":["174.29"],"然后再遍历它的兄弟节点":["174.31"],"stack":["174.33","206.14"],"先将第一层节点放入栈":["174.33"],"len":["174.33"],"一层层向下遍历":["174.35"],"取出当前节点":["174.37"],"条件成立":["174.40"],"直接返回":["174.40","250.3"],"同理":["174.44"],"递归判断左子树是否符合二叉查找树的规则":["174.44"],"找到所有的叶子节点路径":["174.48"],"非负整数":["174.50"],"寻找数组的最小值":["174.52"],"计算如果当天卖出是否赚钱":["174.52"],"dp":["174.56"],"从数组的最左侧移动到数组的最右侧":["174.58"],"当前窗口的值依次和要插入的值做比较":["174.60"],"如果小于要插入的值":["174.60"],"剔除掉该值":["174.60"],"直到window为空为止":["174.60"],"保证window中最左侧的值为最大值":["174.60"],"取出一组最长递增子序列的具体值":["174.64"],"最长递增子序列有可能有多组值":["174.64"],"这里是只取出其中一组值":["174.64"],"找到dp中的最大值":["174.64"],"该值就是nums的最长递增子序列的个数":["174.64"],"请求可以将请求的参数放入":["175.0"],"中向服务器发送":["175.0"],"这样的做法相对于":["175.0"],"请求来说是不太安全的":["175.0"],"因为请求的":["175.0"],"会被保留在历史记录中":["175.0"],"请求长度":["175.0"],"则在第二次中发送真正的请求":["175.1"],"作用2":["175.1"],"检测服务器是否为同源请求":["175.1"],"浏览器当前设置的语言":["175.2"],"浏览器与服务器之间连接的类型":["175.2","175.3"],"解决跨平台数据传输":["175.4"],"在json没有出来以前":["175.4"],"网络传输主要以xml格式数据为主":["175.4"],"后来json问世":["175.4"],"逐渐取代xml":["175.4"],"但是由于ajax技术出来的比json早":["175.4"],"因此xml这个称呼一直保留至今":["175.4"],"请介绍一下xmlhttprequest对象":["175.4"],"ajax的核心是xmlhttprequest":["175.4"],"它是一种支持异步请求的技术":["175.4"],"xmlhttprequest使您可以使用javascript向服务器提出请求并处理响应":["175.4"],"而不阻塞用户":["175.4"],"可以在页面加载以后进行页面的局部更新":["175.4"],"使用方法":["175.4"],"实例化ajax对象":["175.4"],"创建http请求":["175.4"],"第一个参数是指定提交方式":["175.4"],"第二个参数是指定要提交的地址是哪":["175.4"],"第三个参数是指定是异步还是同步":["175.4"],"true表示异步":["175.4"],"false表示同步":["175.4"],"第四和第五参数在http认证的时候会用到":["175.4"],"是可选的":["175.4"],"设置请求头":["175.4"],"urlencoded":["175.5"],"发送请求":["175.5"],"参数格式":["175.5"],"formdata":["175.6","286.46"],"添加文件":["175.6"],"avatar":["175.6"],"axios":["175.6","286.45"],"dom对象":["175.7"],"小明":["175.8"],"取消请求":["175.8"],"参数是可选的":["175.8"],"还新增了很多":["175.9"],"请求方法":["175.9"],"put":["175.9"],"的区别":["175.9","179.26","184.13","185.0"],"二进制协议":["175.9"],"是一个二进制协议":["175.9"],"版中":["175.9"],"报文的头信息必须是文本":["175.9"],"ascii":["175.9"],"编码":["175.9"],"数据体可以是文本":["175.9"],"也可以是二进制":["175.9"],"则是一个彻底的二进制协议":["175.9"],"头信息和数据体都是二进制":["175.9"],"并且统称为":["175.9"],"可以分为头信息帧和数据帧":["175.9"],"无连接":["175.10"],"无连接就是限制每次连接只处理一个请求":["175.10"],"服务器处理完客户的请求":["175.10"],"并收到客户的应答后":["175.10"],"即断开连接":["175.10"],"采用这种方式可以节省传输时间":["175.10"],"无状态":["175.10"],"协议是无状态协议":["175.10"],"这里的状态是指通信过程的上下文信息":["175.10"],"缺少状态意味着如果后续处理需要前面的信息":["175.10"],"则它必须重传":["175.10"],"这样可能会导致每次连接传送的数据量增大":["175.10"],"另一方面":["175.10"],"在服务器不需要先前信息时它的应答就比较快":["175.10"],"灵活":["175.10"],"允许传输任意类型的数据对象":["175.10"],"正在传输的类型由":["175.10"],"加以标记":["175.10"],"是一个无状态的协议":["175.10"],"服务器不会保存关于客户的任何信息":["175.10"],"明文传输":["175.10"],"协议中的报文使用的是文本形式":["175.10"],"这就直接暴露给外界":["175.10"],"不安全":["175.10"],"通信使用明文":["175.10"],"不加密":["175.10"],"内容可能会被窃听":["175.10"],"不验证通信方的身份":["175.10"],"因此有可能遭遇伪装":["175.10"],"无法证明报文的完整性":["175.10"],"所以有可能已遭篡改":["175.10"],"说一下http":["175.10"],"http3":["175.10"],"也称作http":["175.10"],"over":["175.10","206.1"],"quic":["175.10"],"0的核心是quic":["175.10"],"读音quick":["175.10"],"由google在":["175.10"],"2015年提出的spdy":["175.10"],"v3演化而来的新协议":["175.10"],"传统的http协议是基于传输层tcp的协议":["175.10"],"而quic是基于传输层udp上的协议":["175.10"],"可以定义成":["175.10"],"0基于udp的安全可靠的http2":["175.10"],"0协议":["175.10"],"http的两种连接模式":["175.10"],"协议是基于":["175.10"],"并且使用了":["175.10"],"应答":["175.10"],"的通信模式":["175.10"],"http协议有两种连接模式":["175.10"],"一种是持续连接":["175.10"],"一种非持续连接":["175.10"],"非持续连接指的是服务器必须为每一个请求的对象建立和维护一个全新的连接":["175.10"],"持续连接下":["175.10"],"连接默认不关闭":["175.10"],"可以被多个请求复用":["175.10"],"采用持续连接的好处是可以避免每次建立":["175.10"],"连接三次握手时所花费的时间":["175.10"],"url有哪些组成部分":["175.10"],"以下面的url为例www":["175.10"],"aspxfans":["175.10"],"news":["175.10"],"从上面的url可以看出":["175.10"],"一个完整的url包括以下几部分":["175.10"],"协议部分":["175.10"],"该url的协议部分为":["175.10"],"这代表网页使用的是http协议":["175.10"],"在internet中可以使用多种协议":["175.10"],"如http":["175.10"],"ftp等等本例中使用的是http协议":["175.10"],"后面的":["175.10"],"为分隔符":["175.10"],"域名部分":["175.10"],"该url的域名部分为www":["175.10"],"一个url中":["175.10"],"也可以使用ip地址作为域名使用":["175.10"],"端口部分":["175.10"],"跟在域名后面的是端口":["175.10"],"域名和端口之间使用":["175.10"],"作为分隔符":["175.10"],"端口不是一个url必须的部分":["175.10"],"如果省略端口部分":["175.10"],"将采用默认端口":["175.10"],"当我们使用他的公钥加密后发送的信息":["175.11"],"就可以被他用自己的私钥解密":["175.11"],"然后他伪装成我们以同样的方法向对方发送信息":["175.11"],"案有":["175.12"],"多次发送之前间隔":["175.12"],"个等待时间":["175.12"],"只需要等上":["175.12"],"段时间再进":["175.12"],"下":["175.12"],"次":["175.12"],"send":["175.12"],"就好":["175.12"],"适":["175.12"],"于交互频率特别低的场景":["175.12"],"缺点也很明显":["175.12"],"较频繁的场景":["175.12"],"传输效率实在太低":["175.12"],"不过":["175.12"],"乎不":["175.12"],"做什么处理":["175.12"],"关闭":["175.12"],"中你可以通过":["175.12"],"setnodelay":["175.12"],"法来关闭":["175.12"],"让每":["175.12"],"都不缓冲直接发送":["175.12"],"该":["175.12"],"法":["175.12"],"较适":["175.12"],"于每次发送的数据都":["175.12"],"较":["175.12"],"但不是":["175.12"],"件那么":["175.12"],"并且频率不是特别":["175.12"],"的场景":["175.12"],"如果是每次发送的数据量":["175.12"],"并且频率特别":["175.12"],"纯属":["175.12"],"废武功":["175.12"],"法不适":["175.12"],"于":["175.12"],"络较差的情况":["175.12"],"算法是在服务端进":["175.12"],"的包合并情况":["175.12"],"但是如果短时间内客户端的":["175.12"],"络情况不好":["175.12"],"或者应":["175.12"],"层由于某些原因不能及时将":["175.12"],"的数据":["175.12","181.0"],"recv":["175.12"],"就会造成多个包在客户端缓冲从":["175.12"],"粘包的情况":["175.12"],"如果是在稳定的机房内部通信那么这个概率是":["175.12"],"可以选择忽略的":["175.12"],"进":["175.12"],"封包":["175.12"],"拆包":["175.12"],"拆包是":["175.12"],"前业内常":["175.12"],"案了":["175.12"],"即给每个数据包在发送之前":["175.12"],"于其前":["175.12"],"后放":["175.12"],"些有特征的数据":["175.12"],"然后收到数据的时":["175.12"],"候根据特征数据分割出来各个数据包":["175.12"],"token是什么":["175.12"],"token也可以称做":["175.12"],"令牌":["175.12"],"一般由":["175.12"],"uid":["175.12"],"签名":["175.12"],"固定参数":["175.12"],"用户唯一身份标识":["175.12"],"当前时间的时间戳":["175.12"],"encrypt":["175.12"],"压缩成定长的十六进制字符串":["175.12"],"以防止第三方恶意拼接":["175.12"],"将一些常用的固定参数加入到":["175.12"],"token":["175.12"],"中是为了避免重复查库":["175.12"],"token在客户端一般存放于localstorage":["175.12"],"或sessionstorage中":["175.12"],"在服务器一般存于数据库中":["175.12"],"的认证流程":["175.12"],"用户登录":["175.12"],"成功后服务器返回token给客户端":["175.12"],"客户端收到数据后保存在客户端":["175.12"],"客户端再次访问服务器":["175.12"],"将token放入headers中":["175.12"],"或者每次的请求":["175.12"],"这也是都建议将":["175.13"],"标签放在":["175.13"],"标签底部的原因":["175.13"],"当然在当下":["175.13"],"并不是说":["175.13"],"标签必须放在底部":["175.13"],"因为你可以给":["175.13"],"标签添加":["175.13"],"defer":["175.13","179.18"],"有安全问题":["175.14"],"如果cookie被拦截了":["175.14"],"那就可获得session的所有信息":["175.14"],"即使加密也于事无补":["175.14"],"仅储存在本地":["175.15"],"不像cookie那样每次http请求都会被携带":["175.15"],"localstorage的缺点":["175.15"],"存在浏览器兼容问题":["175.15"],"它和":["175.16"],"除非手动删除它":["175.16"],"否则它不会失效":["175.16"],"也只能被同源页面所访问共享":["175.16"],"什么是同源策略":["175.16"],"什么是跨域":["175.16"],"同源策略":["175.16"],"cors的关键就是服务器":["175.17"],"兼容性好":["175.18"],"可用于解决主流浏览器的跨域数据访问的问题":["175.18"],"方法接受两个参数":["175.19"],"html5规范支持任意基本类型或可复制的对象":["175.19"],"但部分浏览器只支持字符串":["175.19"],"接受客户端请求":["175.20"],"将请求":["175.20"],"中的代码做好充分的转义":["175.21"],"型的攻击":["175.21"],"主要是前端脚本的不可靠而造成的":["175.21"],"对于数据获取渲染和字符串拼接的时候应该对可能出现的恶意代码情况进行判断":["175.21"],"跨站请求伪造":["175.21"],"攻击指的是":["175.21"],"跨站请求伪造攻击":["175.21"],"攻击者诱导用户进入一个第三方网站":["175.21"],"然后该网站向被攻击网站发送跨站请求":["175.21"],"如果用户在被攻击网站中保存了登录状态":["175.21"],"那么攻击者就可以利用这个登录状态":["175.21"],"绕过后台的用户验证":["175.21"],"冒充用户向服务器执行一些操作":["175.21"],"攻击的":["175.21"],"本质是利用":["175.21"],"会在同源请求中携带发送给服务器的特点":["175.21"],"短轮询":["175.22"],"历史方案":["175.22"],"开个定时器":["175.22"],"每隔一段时间发请求":["175.22"],"实时性不强":["175.22"],"影响性能":["175.22"],"comet":["175.22"],"ajax长轮询":["175.22"],"发送一个请求":["175.22"],"服务器只要数据不更新":["175.22"],"就一直阻塞":["175.22"],"服务器压力过大":["175.22"],"sse":["175.22"],"利用了http协议":["175.22"],"流数据的传输":["175.22"],"并不是严格意义的双向通信":["175.22"],"无法复用连接":["175.22"],"主流":["175.22"],"性能和效率都高":["175.22"],"说一下websocket":["175.22"],"websocket是一种网络通信协议":["175.22"],"是html5开始提供的一种在单个tcp连接上进行全双工通信的协议":["175.22"],"这个对比着http协议来说":["175.22"],"http协议是一种无状态的":["175.22"],"无连接的":["175.22"],"单向的应用层协议":["175.22"],"可以依靠":["176.1"],"所以节流会稀释函数的执行频率":["176.2"],"throttle":["176.2"],"canrun":["176.2"],"通过闭包保存一个标记":["176.2"],"在函数开头判断标记是否为":["176.2"],"不为":["176.2"],"类似集合":["176.3"],"可以遍历":["176.3"],"方法很多":["176.3"],"可以跟各种数据格式转换":["176.3"],"将现在访问点的节点的子节点存入":["176.4"],"供将来访问":["176.4"],"广度优先遍历的递归写法":["176.4"],"gettype":["176.5"],"而是继承了父类的":["176.6"],"然后对其进行加工":["176.6"],"如果不调用":["176.6"],"子类得不到":["176.6"],"输出的是一个":["176.7"],"回调地狱":["176.9"],"无法取消":["176.10"],"可以配合":["176.11","209.14"],"链":["176.12"],"处理了回调地狱的问题":["176.12"],"客户端确认接收服务器的syn":["176.15"],"此时client还需让server知道自己接收能力没问题于是就有了第三次":["176.16"],"第三次":["176.16"],"控制之外的事件中调用":["176.17"],"若不存在":["176.19"],"向":["176.19"],"既能拥有":["177.0"],"极致的体验和性能":["177.0"],"同时也能拥有":["177.0"],"virtual":["177.1","195.7"],"传递至":["177.1"],"层":["177.1","181.0"],"并使用":["177.1"],"原生系统渲染":["177.1"],"用户体验基本接近原生":["177.1"],"且能发挥":["177.1"],"开发灵活与易更新的特性":["177.1"],"被封装成了一个组件":["177.2"],"用于作为":["177.2"],"web页面":["177.2"],"的容器":["177.2"],"swift":["177.3"],"alert":["177.3","181.0"],"nativecall":["177.3"],"loadurl":["177.3"],"调用js中的jsbridge":["177.3"],"trigger方法":["177.3"],"的侵入小":["177.4"],"劣势":["177.4"],"重度依赖网络":["177.4"],"无法离线使用":["177.4"],"首屏加载慢":["177.4"],"本地内置":["177.5"],"随着":["177.5"],"打包时内置一份线上最新完整代码包":["177.5"],"保证本地代码文件的存在":["177.5"],"资源加载均使用本地化路径":["177.5"],"域名拦截":["177.5"],"资源加载使用线上域名":["177.5"],"通过拦截域名映射到本地路径":["177.5"],"当本地不存在时":["177.5"],"则请求线上文件":["177.5"],"当存在时":["177.5"],"直接加载":["177.5"],"跨平台部署":["177.5"],"根据":["177.6","179.56"],"把文件内容一一写入到指定的文件夹中":["177.6"],"完成整个过程":["177.6"],"模块包装":["177.6"],"模拟":["177.6"],"从内存中加载模块":["177.6"],"moduleid":["177.6"],"缓存模块":["177.6"],"installedmodules":["177.6"],"加载文件资源":["177.7"],"字体":["177.7"],"具有移动":["177.7"],"命名等功能":["177.7"],"通常用于加载图片":["177.7"],"可以将小图片直接转换为":["177.7"],"减少请求":["177.7"],"加载":["177.7"],"便是继承于":["177.8"],"也拥有这样的事件流机制":["177.8"],"可以简单的理解为":["177.8"],"实例":["177.8"],"它包含了当前":["177.8"],"中的所有配置信息":["177.8"],"loaders":["177.8"],"等信息":["177.8"],"全局唯一":["177.8"],"只在启动时完成初始化创建":["177.8"],"随着生命周期逐一传递":["177.8"],"可以称为":["177.8"],"编译实例":["177.8"],"当监听到文件发生改变时":["177.8"],"减少冗余代码":["177.9"],"文件修改频率":["177.9"],"将第三方库等不常修改的代码单独打包":["177.9"],"而且不改变其文件":["177.9"],"能最大化运用浏览器的缓存":["177.9"],"hoisting":["177.9"],"作用域提升":["177.9"],"将分散的模块划分到同一个作用域中":["177.9"],"避免了代码的重复引入":["177.9"],"有效减少打包后的代码体积和运行时的内存损耗":["177.9"],"编译性能优化":["177.9"],"升级至":["177.9"],"最新":["177.9"],"版本的":["177.9"],"能有效提升编译性能":["177.9"],"模块热替换":["177.9"],"hmr":["177.9"],"去除不必要的":["177.10"],"domain":["177.10"],"过期时间":["177.10"],"优化":["177.10"],"减少访问":["177.10"],"的次数":["177.10"],"如需多次":["177.10"],"缓存于变量中":["177.10"],"减少重绘与回流":["177.10"],"多次操作合并为一次":["177.10"],"减少对计算属性的访问":["177.10"],"offsettop":["177.10"],"getcomputedstyle":["177.10"],"因为浏览器需要获取最新准确的值":["177.10"],"因此必须立即进行重排":["177.10"],"与ui探讨选择":["177.11"],"合适质量":["177.11"],"合适尺寸":["177.11"],"根据需求和平台":["177.11"],"选择":["177.11"],"合适格式":["177.11"],"例如非透明时可用":["177.11"],"非苹果端":["177.11"],"webp":["177.11","284.23"],"小图片合成":["177.11"],"雪碧图":["177.11"],"低于":["177.11"],"5k":["177.11"],"优化用户感知":["177.12"],"利用一些动画":["177.12"],"过渡效果":["177.12"],"能有效减少用户对卡顿的感知":["177.12"],"尽可能利用":["177.12"],"骨架屏":["177.12"],"placeholder":["177.12"],"loading":["177.12","178.4"],"等减少用户对白屏的感知":["177.12"],"动画帧数尽量保证在":["177.12"],"30帧":["177.12"],"因此通过":["177.13"],"便能很简单地实现流量的均衡分配":["177.13"],"实现":["177.13","195.7"],"upstream":["177.13"],"这样当用户访问":["177.13"],"流量便会被按照一定的规则分配到":["177.13"],"中的3台服务器上":["177.13"],"分配策略":["177.13"],"服务器权重":["177.13"],"可以为每台服务器配置访问权重":["177.13"],"传入参数":["177.13"],"用于操作":["177.14"],"属于一种":["177.14"],"容器解决方案":["177.14"],"基本概念":["177.14"],"有三个核心的概念":["177.14"],"从原理上说":["177.14"],"镜像属于一种":["177.14"],"文件系统":["177.14"],"包含了一些系统文件和环境配置等":["177.14"],"可以将其理解成一套":["177.14"],"最小操作系统":["177.14"],"为了让镜像轻量化和可移植":["177.14"],"采用了":["177.14"],"union":["177.14"],"的分层存储模式":["177.14"],"虽然实现可能不一样":["178.0"],"但在一些理念上还是有相似的":["178.0"],"便能够随时地进行":["178.1"],"停止和重启":["178.1"],"这样便能达到实现任务分割的基本前提":["178.1"],"首先通过不断遍历子节点":["178.1"],"到树末尾":["178.1"],"开始通过":["178.1"],"遍历兄弟节点":["178.1"],"返回父节点":["178.1"],"继续执行2":["178.1"],"直到":["178.1"],"节点后":["178.1"],"跳出遍历":["178.1"],"中的渲染更新可以分成两个阶段":["178.1"],"的数据对比":["178.1"],"是个适合拆分的阶段":["178.1"],"比如对比一部分树后":["178.1"],"先暂停执行个动画调用":["178.1"],"中解绑事件":["178.2"],"中进行数据的请求":["178.2"],"而不是在":["178.2"],"需要根据":["178.2"],"旧":["178.2"],"需要自己存储":["178.2"],"以便比较":["178.2"],"是同步的":["178.3"],"可以马上获取更新后的值":["178.3"],"原生事件是浏览器本身的实现":["178.3"],"与事务流无关":["178.3"],"自然是同步":["178.3"],"是放置于定时器线程中延后执行":["178.3"],"此时事务流已结束":["178.3"],"因此也是同步":["178.3"],"批量更新":["178.3"],"更新队列时":["178.3"],"isloading":["178.4"],"可以直接修改被包裹组件渲染出的":["178.4"],"元素树":["178.4"],"操作状态":["178.4"],"operate":["178.4"],"可以直接通过":["178.4"],"获取到被包裹组件的状态":["178.4"],"并进行操作":["178.4"],"但这样的操作容易使":["178.4"],"变得难以追踪":["178.4"],"不易维护":["178.4"],"谨慎使用":["178.4"],"应用场景":["178.4"],"权限控制":["178.4"],"通过抽象逻辑":["178.4"],"统一对页面进行权限判断":["178.4"],"按不同的条件进行页面渲染":["178.4"],"withadminauth":["178.4"],"wrappedcomponent":["178.4"],"旧数据":["178.5"],"returns":["178.5"],"新数据":["178.5"],"initlist":["178.5"],"listreducer":["178.5"],"defalut":["178.5"],"时会执行事件解绑":["178.6"],"每次":["178.6"],"发生改变时":["178.6"],"执行结果":["178.6"],"以类定义的生命周期":["178.6"],"便于大家理解":["178.6"],"didmount":["178.6"],"didupdate":["178.6"],"willunmount":["178.6"],"通过第二个参数":["178.6"],"我们便可模拟出几个常用的生命周期":["178.6"],"传入":["178.6"],"就只会在初始化时调用一次":["178.6"],"usemount":["178.6"],"clinet层":["178.7"],"reducer":["178.7"],"必须复用前端层的逻辑":["178.7"],"才能保证一致性":["178.7"],"reducers":["178.7"],"获取配置好的":["178.7"],"存储数据":["178.7"],"createaction":["178.7"],"注入":["178.7"],"rendertostring":["178.7"],"渲染成":["178.7"],"reactdomserver":["178.7"],"provider":["178.7"],"clinet":["178.7"],"不再需要关注命名":["178.8"],"传递":["178.8"],"调用等":["178.8"],"可复用性强":["178.8"],"任何一个函数单元都可被任意复用和组合":["178.8"],"可拓展性强":["178.8"],"成本低":["178.8"],"例如现在加个需求":["178.8"],"要查看每个环节的输出":["178.8"],"label":["178.8"],"一些工具纯函数可直接引用":["178.8"],"fp":["178.8"],"并不需要像我们上面这样自己实现":["178.8"],"曾经支持":["179.1"],"浏览器未实现":["179.1"],"会发生重叠":["179.2"],"中子元素的":["179.2"],"的左边":["179.2"],"与包含块":["179.2"],"继承":["179.5"],"clear":["179.6"],"页面会同步加载所引的":["179.7"],"便可以赋予":["179.8"],"更多更强大的功能":["179.8"],"常用功能":["179.8"],"iteration":["179.9"],"次数":["179.9"],"infinite":["179.9"],"循环动画":["179.9"],"direction":["179.9"],"方向":["179.9"],"alternate":["179.9"],"的团队和人才并不多":["179.10"],"构造函数为":["179.11"],"构造函数拥有一个":["179.11"],"的属性指向原型":["179.11"],"因此原型为":["179.11"],"这里我们可以来看出三者的关系":["179.11"],"则继续沿着原型链往上一级查找":["179.12"],"直至最顶级的原型对象":["179.12"],"如还是没找到":["179.12"],"自上而下":["179.13"],"遇到函数时":["179.13"],"被":["179.13"],"不包含函数表达式":["179.14"],"活动对象":["179.14"],"也就是包含了父级的":["179.16"],"因此当父级的变量对象被修改时":["179.17"],"所有子函数都受到影响":["179.17"],"解决":["179.17"],"变量可以通过":["179.17"],"函数参数的形式":["179.17"],"性能最快":["179.19"],"绑定this":["179.20"],"代表原型对象链":["179.21"],"extend":["179.22","241.9"],"进行判断":["179.25","258.5"],"很稳的判断封装":["179.25"],"class2type":["179.25"],"也就是降低频率":["179.27"],"将高频操作优化成低频操作":["179.27"],"通常使用场景":["179.27"],"滚动条事件":["179.27"],"通常每隔":["179.27"],"ms执行一次即可":["179.27"],"但这种机制并不完全能满足我们的业务需求":["179.28"],"因此提供了三种方式可以手动修改":["179.28"],"代码高亮":["179.30"],"代码错误提示":["179.30"],"代码自动补全等等的基础":["179.30"],"进行遍历转译":["179.31"],"得到新的":["179.31"],"y":["179.32","286.59","287.2"],"indexof":["179.33","214.2"],"lastindexof":["179.33","296.2"],"fromindex":["179.33"],"查找数组项":["179.33"],"返回对应的下标":["179.33"],"reduceright":["179.33"],"defaultprev":["179.33"],"两两执行":["179.33"],"为上次化简函数的":["179.33"],"执行栈":["179.35"],"事件触发线程":["179.35"],"observe":["179.36","248.0"],"树构建":["179.37"],"内容发生改变":["179.38"],"元素字体大小变化":["179.38"],"添加或者删除可见的":["179.38"],"激活":["179.38"],"伪类":["179.38"],"进行样式修改":["179.39"],"减少":["179.39"],"的增删次数":["179.39"],"可使用":["179.39"],"登录状态等":["179.40"],"中自动携带":["179.40"],"体积上限为":["179.40"],"4k":["179.40"],"线程推送消息":["179.41"],"互换":["179.42"],"完成一次新生代gc":["179.42"],"用于存活时间较长的对象":["179.42"],"引用":["179.43"],"元素被删除时":["179.43"],"快速重传":["179.44"],"快速恢复":["179.44"],"缓存策略":["179.44"],"可分为":["179.44"],"强缓存":["179.44"],"协商缓存":["179.44"],"浏览器判断缓存是否过期":["179.44"],"未过期时":["179.44"],"直接使用强缓存":["179.44"],"control的":["179.44"],"部分内容":["179.45"],"永久移动":["179.45"],"重定向":["179.45"],"临时移动":["179.45"],"幂等":["179.46"],"请求次数与资源无关":["179.46"],"有消息时再":["179.47"],"执行回调":["179.50"],"执行定时器":["179.50"],"如有到期的":["179.50"],"不修改数据":["179.52"],"不被第三方网站访问到用户的":["179.52"],"中会使用":["179.53"],"beforecreate":["179.54","220.0"],"添加inject功能":["179.54"],"完成数据响应性":["179.54"],"computed":["179.54"],"methods":["179.54"],"添加":["179.54"],"provide":["179.54","232.4"],"功能":["179.54","265.1"],"initprovide":["179.54"],"挂载节点":["179.54"],"新建依赖收集器":["179.55"],"定义get":["179.55"],"enumerable":["179.55"],"reactivegetter":["179.55"],"当有获取该属性时":["179.55"],"证明依赖于该对象":["179.55"],"因此被添加进收集器中":["179.55"],"对比子级差异":["179.56"],"oldchild":["179.56"],"newchild":["179.56"],"标记子级的删除":["179.56"],"新增":["179.56"],"移动":["179.56","203.2"],"difflist":["179.56"],"获取原本匹配的节点":["179.56"],"进一步递归从头开始对比":["179.56"],"reactivedata":["179.57"],"分成多个":["179.59"],"动态规划":["179.60"],"每个状态都是过去历史的一个总结":["179.60"],"cstairs":["179.63"],"根节点":["179.64"],"访问左子节点":["179.64"],"访问右子节点":["179.64"],"随便取其中两组天平称量":["179.65"],"平衡":["179.65"],"假币在未上称的一组":["179.65"],"当给对象新增不存在的属性的时候":["180.0"],"就会触发对象依赖的watcher去更新":["180.0"],"当修改数组索引的时候":["180.0"],"就调用数组本身的splice方法去更新数组":["180.0"],"十三":["180.0"],"vue为什么要用虚拟dom":["180.0"],"虚拟dom就是用js对象来描述真实dom":["180.0"],"是对真实dom的抽象":["180.0"],"由于直接操作dom性能低":["180.0"],"但是js层的操作效率高":["180.0"],"可以将dom操作转化成对象操作":["180.0"],"最终通过diff算法比对差异进行更新dom":["180.0"],"虚拟dom不依赖真实平台环境":["180.0"],"可以实现跨平台":["180.0"],"十四":["180.0"],"vue的diff算法原理是什么":["180.0"],"vue的diff算法是平级比较":["180.0"],"不考虑跨级比较的情况":["180.0"],"内部采用深度递归的方式":["180.0"],"双指针方式比较":["180.0"],"先比较两个节点是不是相同节点":["180.0"],"相同节点比较属性":["180.0"],"复用老节点":["180.0"],"先比较儿子节点":["180.0"],"考虑老节点和新节点儿子的情况":["180.0"],"优化比较":["180.0"],"头头":["180.0"],"尾尾":["180.0"],"头尾":["180.0"],"尾头":["180.0"],"比对查找":["180.0"],"进行复用":["180.0"],"十五":["180.0"],"既然vue通过数据劫持可以精准的探测数据变化":["180.0"],"为什么还要进行diff检测差异":["180.0"],"响应式数据变化":["180.0"],"vue确实可以在数据变化的时候":["180.0"],"响应式系统可以立刻得知":["180.0"],"但是如何每个属性都添加watcher的话":["180.0"],"性能会非常的差":["180.0"],"粒度过细":["180.0"],"会导致更新不精准":["180.0"],"所以采用watcher":["180.0"],"diff算法来检测差异":["180.0"],"在创建元素的时候":["180.1"],"新增最新的缓存":["180.2"],"并且给组件添加一个keepalive变量为true":["180.2"],"当组件初始化的时候":["180.2"],"不再初始化":["180.2"],"三十三":["180.2"],"router有几种钩子函数":["180.2"],"执行流程如何":["180.2"],"钩子函数有三种":["180.2"],"全局守卫":["180.2"],"路由守卫":["180.2"],"组件守卫":["180.2"],"三十四":["180.2"],"vuerouter的两种模式的区别":["180.2"],"router中有三种模式":["180.2"],"分别是hash":["180.2"],"abstract":["180.2"],"abstract在不支持浏览器的api换景使用":["180.2"],"hash模式兼容性好":["180.2"],"但是不美观":["180.2"],"路由模式的实现主要是基于下面几个特性":["181.0"],"值只是客户端的一种状态":["181.0"],"也就是说当向服务器端发出请求时":["181.0"],"部分不会被发送":["181.0"],"值的改变":["181.0"],"都会在浏览器的访问历史中增加一个记录":["181.0"],"因此我们能通过浏览器的回退":["181.0"],"前进按钮控制hash":["181.0"],"的切换":["181.0"],"当用户点击这个标签后":["181.0"],"值会发生改变":["181.0"],"或者使用":["181.0"],"来对":["181.0"],"loaction":["181.0"],"进行赋值":["181.0"],"我们可以使用":["181.0"],"hashchange":["181.0"],"事件来监听":["181.0"],"值的变化":["181.0"],"从而对页面进行跳转":["181.0"],"提供了":["181.0"],"来实现":["181.0"],"的变化":["181.0"],"其中做最主要的":["181.0"],"有以下两个":["181.0"],"repalcestate":["181.0"],"这两个":["181.0"],"可以在不进行刷新的情况下":["181.0"],"操作浏览器的历史纪录":["181.0"],"唯一不同的是":["181.0"],"前者是新增一个历史记录":["181.0"],"后者是直接替换当前的历史记录":["181.0"],"路由模式的实现主要基于存在下面几个特性":["181.0"],"来操作实现":["181.0"],"popstate":["181.0"],"不会触发":["181.0"],"这时我们需要手动触发页面跳转":["181.0"],"什么是":["181.0"],"mvvm":["181.0"],"view":["181.0"],"viewmodel":["181.0"],"是一个软件架构设计模式":["181.0"],"由微软":["181.0"],"wpf":["181.0"],"silverlight":["181.0"],"的架构师":["181.0"],"ken":["181.0"],"cooper":["181.0"],"ted":["181.0"],"peters":["181.0"],"是一种简化用户界面的事件驱动编程方式":["181.0"],"john":["181.0"],"gossman":["181.0"],"同样也是":["181.0"],"于2005年在他的博客上发表":["181.0"],"源自于经典的":["181.0"],"controller":["181.0"],"mvc":["181.0"],"的出现促进了前端开发与后端业务逻辑的分离":["181.0"],"极大地提高了前端开发效率":["181.0"],"的核心是":["181.0"],"它就像是一个中转站":["181.0"],"converter":["181.0"],"负责转换":["181.0"],"中的数据对象来让数据变得更容易管理和使用":["181.0"],"该层向上与视图层进行双向数据绑定":["181.0"],"向下与":["181.0"],"层通过接口请求进行数据交互":["181.0"],"起呈上启下作用":["181.0"],"是视图层":["181.0"],"也就是用户界面":["181.0"],"前端主要由":["181.0"],"来构建":["181.0"],"是指数据模型":["181.0"],"泛指后端进行的各种业务逻辑处理和数据操控":["181.0"],"对于前端来说就是后端提供的":["181.0"],"接口":["181.0","184.1"],"是由前端开发人员组织生成和维护的视图数据层":["181.0"],"在这一层":["181.0"],"前端开发者对从后端获取的":["181.0"],"数据进行转换处理":["181.0"],"做二次封装":["181.0"],"以生成符合":["181.0"],"层使用预期的视图数据模型":["181.0"],"所封装出来的数据模型包括视图的状态和行为两部分":["181.0"],"层的数据模型是只包含状态的":["181.0"],"比如页面的这一块展示什么":["181.0"],"而页面加载进来时发生什么":["181.0"],"点击这一块发生什么":["181.0"],"这一块滚动时发生什么这些都属于视图行为":["181.0"],"交互":["181.0"],"视图状态和行为都封装在了":["181.0"],"里":["181.0"],"这样的封装使得":["181.0"],"可以完整地去描述":["181.0"],"框架实现了双向绑定":["181.0"],"的内容会实时展现在":["181.0"],"前端开发者再也不必低效又麻烦地通过操纵":["181.0"],"去更新视图":["181.0"],"框架已经把最脏最累的一块做好了":["181.0"],"我们开发者只需要处理和维护":["181.0"],"更新数据视图就会自动得到相应更新":["181.0"],"层展现的不是":["181.0"],"层的数据":["181.0"],"负责与":["181.0"],"层交互":["181.0"],"这就完全解耦了":["181.0"],"层和":["181.0"],"这个解耦是至关重要的":["181.0"],"它是前后端分离方案实施的重要一环":["181.0"],"我们以下通过一个":["181.0"],"实例来说明":["181.0"],"的具体实现":["181.0"],"开发经验的同学应该一目了然":["181.0"],"showmessage":["181.0"],"me":["181.0","286.60"],"用于描述视图状态":["181.0"],"用于描述视图行为":["181.0"],"继承是通过":["183.2"],"实现的":["183.2"],"而type的话是通过":["183.2"],"来实现的":["183.2"],"也可以叫做":["183.2"],"交叉类型":["183.2"],"exampletype1":["183.2"],"type可以申明":["183.4"],"联合类型":["183.4"],"如类":["184.1"],"增加了静态类型":["184.2"],"并且不同于常规的枚举":["184.4"],"它们在编译阶段会被删除":["184.4"],"常量枚举成员在使用的地方会被内联进来":["184.4"],"之所以可以这么做是因为":["184.4"],"这些值可能来自于动态的内容":["184.5"],"比如来自用户输入或第三方代码库":["184.5"],"是所有类型的子类型":["184.6"],"就是说你可以把":["184.6"],"声明":["184.7"],"numberarray":["184.7"],"fibonacci":["184.7"],"isdone":["184.8"],"的类型":["184.9"],"才能在函数或者对象中使用this":["184.9"],"exist":["184.10"],"strunion":["184.12"],"keyof":["184.12"],"多个相同的":["184.15"],"interface":["184.15"],"声明可以自动合并":["184.15"],"将从":["184.16"],"值域中排除":["184.16"],"编译器会尝试定位一个外部模块声明":["184.17"],"中声明的属性变量在源类型":["184.18"],"中都存在就是兼容的":["184.18"],"中的类型可以比":["184.18"],"hobbies":["184.20","184.21"],"之前支持这种赋值":["184.22"],"若是这个文件包含了import":["184.25"],"包名":["184.27"],"编译配置项":["184.28"],"如何对具体的ts文件进行编译":["184.28"],"中如何设置模块导入的路径别名":["184.28"],"为全局对象":["184.29"],"增加新的属性":["184.29"],"被此限定符修饰的成员是可以被外部访问":["184.30"],"索引类型查询操作符":["184.31"],"获取索引类型的属性名":["184.31"],"o1":["184.32"],"o2":["184.32"],"是将两个对象的属性合并":["184.32"],"compute":["184.32"],"的超集":["185.1"],"集合":["185.1"],"为集合":["185.1"],"的子集":["185.1"],"用于取值被限定在一定范围内的场景":["185.3"],"mixin":["185.3"],"可以接受任意类型的值":["185.3"],"被推断为字符串类型":["185.5"],"文件的后缀名":["185.7"],"通过更改编译配置项":["186.1"],"我们可以让":["186.1"],"设置无需进行编译的文件":["186.2"],"表达式值为":["186.3"],"类型的时候":["186.3"],"生成一个错误":["186.3"],"alwaysstrict":["186.3"],"以严格模式检查每个模块":["186.3"],"并在每个文件里加入":["186.3"],"额外的检查":["186.3"],"nounusedlocals":["186.3"],"有未使用的变量时":["186.3"],"抛出错误":["186.3"],"nounusedparameters":["186.3"],"有未使用的参数时":["186.3"],"noimplicitreturns":["186.3"],"并不是所有函数里的代码都有返回值时":["186.3"],"nofallthroughcasesinswitch":["186.3"],"型是否是某个原始类型":["187.0"],"但是不能返回":["189.0"],"section":["190.0","190.6"],"ref将dom引用放到数组中":["190.2"],"差别还是挺大的":["191.0"],"尤其是我之前一直是用脚手架去搭项目":["191.0"],"配置完就是这样的效果":["191.1"],"当然大家可以加一点修饰":["191.1"],"中可以搞个备注啥的":["191.1"],"basic":["191.2"],"默认为false":["191.2"],"启用一个简单的日志报告器":["191.2"],"reports":["191.2"],"自定义配置相当于":["191.2"],"如图":["191.3"],"效果是有了":["191.3"],"但是下面这些信息还是需要删掉":["191.3"],"但是篇幅有点长":["191.4"],"所以另起一篇":["191.4"],"后处理":["193.1"],"所有模块递归处理完毕后开始执行后处理":["193.1"],"包括模块合并":["193.1"],"注入运行时":["193.1"],"traverse遍历ast得到模块的各个依赖":["193.2"],"直接影响编译打包效果的配置项":["193.3"],"工具类":["193.3"],"等值":["193.4"],"不同值最终产物会有所差异":["193.4"],"mode":["193.4","214.2"],"编译模式短语":["193.4"],"development":["193.4"],"production":["193.4"],"可以理解为一种声明环境的短语":["193.4"],"这里的重点是":["193.4"],"首先需要根据输入配置":["193.4"],"利用es6模块的规范":["193.6"],"加载并且压缩图":["193.7"],"转换成":["193.7"],"es5":["193.7"],"将bundle文件以可交互缩放的treemap的形式展示":["193.8"],"compression":["193.8"],"生产环境可采用gzip压缩js和css":["193.8"],"happypack":["193.8"],"通过多进程模型":["193.8"],"完成模块编译并输出":["193.9"],"递归完事后":["193.9"],"得到每个文件结果":["193.9"],"包含每个模块以及他们之间的依赖关系":["193.9"],"根据entry或分包配置生成代码块chunk":["193.9"],"输出完成":["193.9"],"输出所有的chunk到文件系统":["193.9"],"loader运行在项目打包之前":["193.10"],"plugins运行在整个项目的编译时期":["193.10"],"在webpack运行的整个生命周期中会广播出许多事件":["193.10"],"plugin会监听这些事件":["193.10"],"在合适的事件通过":["193.10"],"渲染层":["194.1"],"界面渲染相关的任务全都在":["194.1"],"由于小程序是基于双线程的":["194.2"],"也就是任何在视图层和逻辑层之间的数据传递都是线程间的通信":["194.2"],"会有一定的延时":["194.2"],"用户已经打开过小程序":["194.4"],"然后在一定时间内再次打开该小程序":["194.4"],"开发者在后台发布新版本之后":["194.5"],"无法立刻影响到所有现网用户":["194.5"],"但最差情况下":["194.5"],"是一个用户对于一个小程序":["195.0"],"公众号的标识":["195.0"],"开发者可以通过这个标识识别出用户":["195.0"],"unionid":["195.0"],"是一个用户对于同主体微信小程序":["195.0"],"公众号":["195.0"],"app的标识":["195.0"],"开发者需要在微信开放平台下绑定相同账号的主体":["195.0"],"便可以简便的实现登录":["195.1"],"调用微信登录凭证校验接口":["195.2"],"微信服务器返回":["195.2"],"和会话密钥":["195.2"],"这两种方式引导用户主动授权":["195.3"],"主动授权后通过返回的信息和服务端交互":["195.3"],"这里有一步需要服务端解密数据的过程":["195.3"],"很简单":["195.3"],"微信提供了示例代码":["195.3"],"即可拿到":["195.3"],"建立用户体系":["195.3"],"简单的分析得知":["195.4"],"用来区分行为":["195.4"],"用来调用":["195.4"],"native":["195.4"],"在不同的来源要使用不同的前缀":["195.4"],"里面包含":["195.4"],"名":["195.4"],"指定接受回调的方法句柄":["195.4"],"使用的通信协议是一致的":["195.4"],"我们不能在代码里使用":["195.4"],"是因为根本没有":["195.4"],"另一方面也不希望":["195.4"],"代码直接操作视图":["195.4"],"在开发工具中":["195.4"],"remote":["195.4"],"helper":["195.4","214.0"],"中找到了这样的代码":["195.4"],"vmglobal":["195.4"],"eval":["195.4"],"process":["195.4"],"省略代码":["195.4","204.3"],"timercount":["195.4"],"consoleclone":["195.4"],"jsvm":["195.4"],"createcontext":["195.4"],"省略大量代码":["195.4"],"loadcode":["195.4"],"filepath":["195.4"],"sourceurl":["195.4"],"ret":["195.4","283.3","288.3"],"readfilesync":["195.4"],"runincontext":["195.4"],"something":["195.4","220.2"],"went":["195.4"],"wrong":["195.4"],"这样的分层设计显然是有意为之的":["195.4"],"它的中间层完全控制了程序对于界面进行的操作":["195.4"],"同时对于传递的数据和响应时间也能做到监控":["195.4"],"一方面程序的行为受到了极大限制":["195.4"],"另一方面微信可以确保他们对于小程序内容和体验有绝对的控制":["195.4"],"这样的结构也说明了小程序的动画和绘图":["195.4"],"被设计成生成一个最终对象而不是一步一步执行的样子":["195.4"],"原因就是":["195.4"],"格式的数据传递和解析相比与原生":["195.4"],"都是损耗不菲的":["195.4"],"如果频繁调用很可能损耗过多性能":["195.4"],"进而影响用户体验":["195.4"],"下载小程序完整包":["195.4"],"life":["195.4"],"cylce":["195.4"],"lifecycle":["195.4"],"面试题":["195.4","195.6"],"动画需要绑定在":["195.4"],"而绘图却不用":["195.4"],"你觉得是为什么呢":["195.4"],"createcanvascontext":["195.4"],"firstcanvas":["195.4"],"setstrokestyle":["195.4"],"00ff00":["195.4"],"setlinewidth":["195.4"],"rect":["195.4"],"stroke":["195.4","279.8"],"ff0000":["195.4"],"wechatimg11":["195.5"],"在模拟器上请求该接口":["195.5"],"请求头":["195.5"],"的http版本为http1":["195.5"],"将解密后的用户信息返回给小程序":["195.6"],"先授权获取用户信息再":["195.6"],"会发生什么":["195.6"],"用户授权时":["195.6"],"开放平台使用旧的":["195.6"],"对用户信息进行加密":["195.6"],"重新登录":["195.6"],"会刷新":["195.6"],"这时后端服务从开放平台获取到新":["195.6"],"但是无法对老":["195.6"],"vue的子集":["195.7"],"的学习成本会低于":["195.7"],"尤其是之前技术栈有学过用过":["195.7"],"未来规划mpvue":["195.7"],"已经支持":["195.7"],"和小程序":["195.7"],"基于ast":["195.7"],"所以未来可以支持支付宝小程序和快应用":["195.7"],"他们也是有这样的规划":["195.7"],"请在需求池下面自己找":["195.7"],"feature坑":["195.7"],"两者都有各自的坑":["195.7"],"但是我觉得有一些wepy的坑是没法容忍的":["195.7"],"比如repeat组建里面用computed得到的列表全是同一套数据而且1":["195.7"],"x是没法解决的":["195.7"],"wepy和mpvue我都开发过完整小程序的体验下":["195.7"],"我觉得wepy的坑更多":["195.7"],"而且wepy有些坑碍于架构设计没办法解决":["195.7"],"小程序版":["195.7"],"fork":["195.7"],"自":["195.7"],"vuejs":["195.7"],"保留了":["195.7"],"runtime":["195.7"],"能力":["195.7"],"添加了小程序平台的支持":["195.7"],"是一个使用":["195.7"],"开发小程序的前端框架":["195.7"],"框架基于":["195.7"],"修改了":["195.7"],"compiler":["195.7","241.8"],"使其可以运行在小程序环境中":["195.7"],"从而为小程序开发引入了整套":["195.7"],"开发体验":["195.7"],"框架原理":["195.7"],"两个大方向":["195.7"],"提供":["195.7"],"mp":["195.7"],"适配小程序":["195.7"],"产出微信小程序所需要的文件结构和模块内容":["195.7"],"七个具体问题":["195.7"],"要了解":["195.7"],"原理必然要了解":["195.7"],"原理":["195.7"],"这是大前提":["195.7"],"但是要讲清楚":["195.7"],"原理需要花费大量的篇幅":["195.7"],"不如参考learnvue":["195.7"],"现在假设您对":["195.7"],"原理有个大概的了解":["195.7"],"使用了":["195.7"],"可以在任何支持":["195.7"],"语言的平台上操作":["195.7"],"譬如说目前":["195.7"],"支持浏览器平台或":["195.7"],"weex":["195.7"],"那么最后":["195.7"],"如何映射到真实的":["195.7"],"节点上呢":["195.7"],"vue为平台做了一层适配层":["195.7"],"浏览器平台见":["195.7"],"ops":["195.7"],"weex平台见runtime":["195.7"],"小程序见runtime":["195.7"],"不同平台之间通过适配层对外提供相同的接口":["195.7"],"dom进行操作real":["195.7"],"dom节点的时候":["195.7"],"只需要调用这些适配层的接口即可":["195.7"],"而内部实现则不需要关心":["195.7"],"它会根据平台的改变而改变":["195.7"],"所以思路肯定是往增加一个":["195.7"],"平台的":["195.7"],"方向走":["195.7"],"但问题是小程序不能操作":["195.7"],"下的":["195.7"],"staticclass":["195.8"],"staticroot":["195.8"],"eventid":["195.8"],"comkey":["195.8"],"iterator1":["195.8"],"hasbindings":["195.8"],"getentry":["195.9"],"rootsrc":["195.9"],"pattern":["195.9"],"glob":["195.9"],"slice":["195.9","230.2","286.16","286.42"],"replace":["195.9","227.1","295.8","295.10"],"mpvueplugin":["195.9"],"处理":["195.9"],"里面引用的图片":["195.9"],"不要放代码中引用的图片":["195.9"],"ignore":["195.9","242.1"],"merge":["195.9"],"basewebpackconfig":["195.9"],"devtool":["195.9"],"assetsroot":["195.9"],"assetspath":["195.9"],"chunkfilename":["195.9"],"小程序中":["196.1"],"生命周期主要分成了三部分":["196.1"],"函数用来注册一个小程序":["196.2"],"小程序发生脚本错误或":["196.6"],"调用报错时触发":["196.6"],"监听页面初次渲染完成":["196.7","196.8"],"获取页面元素":["196.7"],"少用":["196.7"],"moved":["196.8"],"这个生命周期很有用":["196.9"],"绝大多数初始化工作可以在这个时机进行":["196.9"],"在组件离开页面节点树后":["196.9"],"detached":["196.9"],"pagelifetimes":["196.10"],"onhide":["196.12"],"程序从后台进":["196.12"],"触发onhide":["196.13"],"程序有后台进":["196.13"],"到前台运":["196.13"],"onready":["196.14"],"返回上一个页面":["196.14"],"curr":["196.14"],"onunload":["196.14"],"以便进行后续的交互":["197.1"],"每当token过期":["197.1"],"对于每个小程序":["197.2"],"后端从数据库中查找":["197.4"],"如果没有查到记录":["197.4"],"说明该用户没有注册":["197.4"],"如果有记录":["197.4"],"则继续往下走":["197.4"],"这种方法需要将本地存储的登录态发送到小程序的服务端":["197.6"],"服务端判断为无效登录态时再返回需重新执行登录过程的消息给小程":["197.6"],"微信会在背后完成几项工作":["198.2"],"下载小程序代码包":["198.2"],"并且可以采取分包加载的操作":["198.5"],"将用户访问率高的页面放在主包里":["198.5"],"将访问率低的页面放入子包里":["198.5"],"提高页面的多次渲染效率主要在于正确使用setdata":["198.6"],"不要过于频繁调用setdata":["198.6"],"应考虑将多次setdata合并成一次setdata调用":["198.6"],"数据通信的性能与数据量正相关":["198.6"],"利用缓存":["198.8"],"安全的支付功能":["199.1"],"在小程序内可调用微信的api完成支付功能":["199.1"],"密码验证通过":["199.2"],"支付成功":["199.2"],"微信后台直接返回给前端支付的结果":["199.4"],"前端收到返回数据后对支付结果进行展示":["199.4"],"推送支付结果":["199.4"],"微信后台在给前端返回支付的结果后":["199.4"],"也会向后台也返回一个支付结果":["199.4"],"后台通过这个支付结果来更新订单的状态":["199.4"],"其中后端响应数据必要的信息则是wx":["199.4"],"requestpayment方法所需要的参数":["199.4"],"不需要设置支付目录":["199.6"],"放大缩小":["200.1"],"等更多功能":["200.1"],"并且小程序":["200.1"],"会有":["200.1"],"多个":["200.1"],"为了更加接近原生应用app的用户体验":["200.1"],"一个线程用来渲染":["200.2"],"webview":["200.2"],"统一通过":["200.3"],"变量所有组件默认隐藏":["200.3"],"虚拟dom":["200.4"],"生成":["200.4"],"的解释执行环境":["200.5"],"那么像html5中的serviceworker":["200.5"],"webworker特性就符合这样的条件":["200.5"],"这两者都是启用另一线程来执行":["200.5"],"一样":["200.6"],"如果不限制":["200.7"],"直译为":["200.8"],"响应像素":["200.8"],"输入help":["200.10"],"命令可见如所示界面":["200.10"],"第二部分":["200.11"],"转换rpx":["200.11"],"然后执行第二部分的transformrpx方法即可":["200.12"],"makeup组装之后":["200.12"],"已经支持react":["200.14"],"hooks这样的写法了":["200.14"],"小程序预编译框架的原理就如上述讲解":["200.14"],"然后当数据变动的时候走vue的渲染流程":["200.15"],"patch流程改为setdata来触发视图层更新":["200.15"],"这样的话是完全没问题的":["200.15"],"然后通过setdata把data数据传输过去":["200.16"],"然而纯运行时框架就是要解决这个半编译的问题":["200.16"],"需要把网页的代码和资源放在服务器上":["201.1"],"让用户通过互联网来访问":["201.1"],"提交审核过程需要填写审核信息":["201.5"],"命令生成小程序可执行文件":["201.8"],"开发者工具点击":["201.8"],"上传":["201.8"],"提审":["201.8"],"在微信小程序中":["202.1"],"每个页面可以看成是一个":["202.1"],"对于页面不是特别多的小程序":["202.4"],"通常推荐使用":["202.4"],"页面":["202.10","202.18"],"并关闭其他所有非":["202.10"],"并返回上一页面或多级页面":["202.12"],"开发者可通过":["202.12"],"返回的时候跳到首页":["202.14"],"跳转到":["202.18"],"tabbar":["202.18"],"switchtab":["202.19"],"页面全部出栈":["202.19"],"用户扫一扫或者搜一下即可打开应用":["203.1"],"也体现了":["203.1"],"用完即走":["203.1"],"的理念":["203.1"],"用户不用关心是否安装太多应用的问题":["203.1"],"之外":["203.2"],"sdk的模式并没有解决使":["203.2"],"遇到的体验不良的问题":["203.2"],"因此需要设计":["203.2"],"小程序和网页的技术模型是一样的":["203.3"],"用到的":["203.3"],"语言和":["203.3"],"易接受":["203.5"],"小程序借助自身平台更加容易引入更多的流量":["203.5"],"这样导致无法开发大型一些的小程序":["203.6"],"受控微信":["203.6"],"axios取消请求是怎么实现的":["204.0"],"axios是怎么做到防":["204.0"],"xsrf":["204.0"],"把context上的属性":["204.1"],"defaults":["204.1"],"interceptors":["204.1"],"复制到instance上":["204.1"],"在instance上添加一个create函数":["204.1"],"调用createinstance函数返回axios实例":["204.1"],"pushresponseinterceptors":["204.2"],"判断是否是同步执行":["204.2"],"chain":["204.2"],"dispatchrequest":["204.2"],"promise的链式调用":["204.2"],"请求拦截器同步执行":["204.2"],"newconfig":["204.2"],"onfulfilled":["204.2"],"获得canceltoken对象实例以及返回取消请求函数":["204.3"],"当请求完成会调用这个函数":["204.3"],"保证取消请求函数从订阅列表中移除":["204.3"],"oncanceled":["204.3"],"signal":["204.3"],"abort":["204.3"],"在xhr实例化后":["204.3"],"发送请求之前":["204.3"],"如果有配置有传入取消监听":["204.3"],"则会把这个取消请求的函数加入订阅列表中":["204.3"],"防护":["204.4"],"策略有多种":["204.4"],"一般的防护策略有":["204.4"],"但xhr本身的架构不清晰":["204.5"],"你可能需要防抖":["204.5"],"节流":["204.5"],"轮询等比较高级的需求":["204.5"],"但axios没有提供":["204.5"],"中的写法不同":["204.6"],"为什么要这么写呢":["204.6"],"事件池":["205.1"],"合成事件对象会被放入池中统一管理":["205.1"],"这意味着合成事件对象可以被复用":["205.1"],"当所有事件处理函数被调用之后":["205.1"],"其所有属性都会被回收释放置空":["205.1"],"事件池的好处是在较旧浏览器中重用了不同事件的事件对象以提高性能":["205.1"],"但它对现代浏览器的性能优化微乎其微":["205.1"],"反而给开发者带来困惑":["205.1"],"因此去除了事件池":["205.1"],"因此也没有了事件复用机制":["205.1"],"v17":["205.1","205.4"],"展示文字":["205.2"],"如上代码":["205.2"],"在react16和v17版本":["205.2"],"点击按钮时":["205.2"],"都不会显示文字":["205.2"],"这是因为react的合成事件是基于事件委托的":["205.2"],"有事件冒泡":["205.2"],"先执行react事件":["205.2"],"再执行document上挂载的事件":["205.2"],"v16":["205.2"],"出于对冒泡的了解":["205.2"],"我们直接在按钮事件上加":["205.2"],"捕获事件":["205.3"],"onclickcapture":["205.3"],"现在使用的是实际浏览器中的捕获监听器":["205.3"],"这些更改会使":["205.3"],"与浏览器行为更接近":["205.3"],"并提高了互操作性":["205.3"],"如何升级至新的":["205.4"],"转换":["205.4"],"更新至支持新转换的":["205.4"],"如果你还在使用v16":["205.4"],"是可变的且因为异步的":["205.5"],"在运行清除函数时":["205.5"],"它可能已经设置为":["205.5"],"用一个变量量在":["205.5"],"每次变化时":["205.5"],"在返回":["205.6"],"时会报错":["205.6"],"组件栈":["205.7"],"在生产环境下必须在调用栈信息和":["205.7"],"bundle":["205.7"],"还删除了":["205.8"],"reacttestutils":["205.8"],"simulatenative":["205.8"],"lanes":["205.9"],"模型可以选定一个更新区间":["205.9"],"并且动态的向区间中增减优先级":["205.9"],"是实现":["205.10"],"并发更新":["205.10"],"的基本前提":["205.10"],"以是否使用":["205.10"],"v18":["205.13"],"中使用并发渲染特性扩展了":["205.13"],"使其支持流式":["205.13"],"是紧急更新":["205.14"],"而setsearchquery是根据用户输入":["205.14"],"查询相应的内容":["205.14"],"是非紧急的":["205.14"],"inputvalue":["205.14"],"setinputvalue":["205.14"],"handleclick":["205.15"],"改变":["205.16"],"而不是":["205.16"],"改变的时候才重新渲染":["205.16"],"suggestions":["205.16"],"usememo":["205.16","209.6"],"searchsuggestions":["205.16"],"简单带过":["205.18"],"执行时机在":["205.20"],"uselayouteffect":["205.20"],"之前":["205.20"],"0b1000000":["206.0"],"没有在react事件执行":["206.0"],"notimestamp":["206.0"],"currenteventtime":["206.0"],"浏览器事件正在执行":["206.0"],"返回上次的":["206.0"],"重新计算currenteventtime":["206.0"],"当执行被中断后":["206.0"],"sure":["206.1","252.5"],"our":["206.1"],"heuristic":["206.1"],"whenever":["206.1"],"concurrent":["206.1"],"work":["206.1"],"loop":["206.1"],"ll":["206.1","206.9"],"currenteventpendinglanes":["206.1"],"below":["206.1","206.9"],"currenteventwiplanes":["206.1"],"workinprogressrootincludedlanes":["206.1"],"istransition":["206.1"],"requestcurrenttransition":["206.1"],"notransition":["206.1"],"mostrecentlyupdatedroot":["206.1"],"pendinglanes":["206.1"],"findtransitionlane":["206.1"],"dependency":["206.1"],"scheduler":["206.1"],"taken":["206.2"],"too":["206.2"],"rare":["206.2"],"resort":["206.2"],"pick":["206.2"],"syncbatchedlanepriority":["206.3"],"用户事件":["206.3"],"inputdiscretehydrationlanepriority":["206.3"],"inputdiscretelanepriority":["206.3"],"inputcontinuoushydrationlanepriority":["206.3"],"输出一个":["206.4"],"而对象中的":["206.4"],"表示此对象要进行什么样的操作":["206.4"],"表示第一次渲染":["206.5"],"那么他的指针为update本身":["206.5"],"将update插入到更新队列循环当中":["206.5"],"到这一步":["206.6"],"updatecontainer":["206.6"],"在这里插入图片描述":["206.7"],"interactions":["206.8"],"avoid":["206.8","214.3","218.4","226.1","236.1","252.5"],"losing":["206.8"],"traced":["206.8"],"同步而且没有react任务在执行":["206.8"],"调用performsyncworkonroot":["206.8"],"schedulependinginteractions":["206.8"],"legacy":["206.8"],"mount":["206.8"],"reactdom":["206.8"],"ed":["206.8"],"batchedupdates":["206.8"],"synchronous":["206.8"],"deferred":["206.8"],"batch":["206.8"],"performsyncworkonroot":["206.8"],"如果有正在执行的react任务":["206.8"],"那么执行它ensurerootisscheduled去复用当前正在执行的任务":["206.8"],"跟本次更新一起进行":["206.8"],"flush":["206.8","216.2"],"existingcallbackpriority":["206.9"],"hasn":["206.9"],"changed":["206.9"],"exit":["206.9"],"cancel":["206.9","206.15"],"one":["206.9","206.16","221.4"],"old":["206.10"],"workloopsync":["206.11"],"都会根据当前的":["206.11"],"workinprogress":["206.11","206.13"],"fiber":["206.11","208.7"],"是否为":["206.11"],"来进行循环调用":["206.11"],"performunitofwork":["206.11"],"startprofilertimer":["206.12"],"beginwork":["206.12"],"subtreerenderlanes":["206.12"],"stopprofilertimerifrunningandrecorddelta":["206.12"],"的源码可以看到":["206.13"],"它便是根据不同的":["206.13"],"itself":["206.14","232.4","241.9","256.5"],"since":["206.14","214.1"],"re":["206.14"],"skip":["206.14"],"nowork":["206.14"],"performedwork":["206.14"],"creating":["206.14","214.0"],"read":["206.14"],"shouldn":["206.14"],"committed":["206.14"],"跳过nowork":["206.14"],"performedwork在commit阶段用不到":["206.14"],"did":["206.14"],"values":["206.14","286.54"],"without":["206.14"],"entering":["206.14"],"tasks":["206.15"],"earliest":["206.15"],"ishosttimeoutscheduled":["206.15"],"existing":["206.15","236.1"],"cancelhosttimeout":["206.15"],"requesthosttimeout":["206.15"],"handletimeout":["206.15"],"marktaskstart":["206.15"],"preceding":["206.16"],"没有就postmessage":["206.16"],"则表示当前帧没有空闲时间":["206.17"],"当前任务则必须要等到":["206.17"],"下一个空闲帧":["206.17"],"想实现一个兼容全浏览器的框架":["207.1"],"捕获阶段":["207.2"],"如果想要在捕获阶段执行可以将事件后面加上":["207.2"],"由于在":["207.3"],"中给元素的事件并不是真正的事件处理函数":["207.3"],"所以导致":["207.3"],"方法在":["207.3"],"注册事件":["207.4"],"会绑定":["207.5"],"blur":["207.5"],"focus":["207.5"],"keyup":["207.5"],"会有不同的事件插件":["207.6"],"记录了":["207.7"],"onmouseleave":["207.8"],"这个对象保存了":["207.8"],"对应的事件源对象也有所不同":["207.9"],"可以用":["207.10"],"preventdefault":["207.10"],"阻止事件默认行为":["207.10"],"改成了":["207.11"],"caughterror":["207.12"],"中你不能通过返回false":["207.13"],"来阻止默认行为":["207.13"],"当真实dom触发后冒泡到document后才会对react事件进行处理":["207.14"],"所以原生的事件会先执行":["207.14"],"则会导致其他react事件失效":["207.15"],"因为所有元素的事件将无法冒泡到document上":["207.15"],"bubbles":["207.16"],"cancelable":["207.16"],"domeventtarget":["207.16"],"currenttarget":["207.16"],"defaultprevented":["207.16"],"eventphase":["207.16"],"根据事件名称":["207.17"],"如onclick":["207.17"],"oncaptureclick":["207.17"],"将callback根据事件类型":["207.18"],"元素的唯一标识key存储在listenerbank中":["207.18"],"依次对每一级元素进行处理":["207.19"],"构造合成事件":["207.19"],"将每一级的合成事件存储在eventqueue事件队列中":["207.19"],"如果事件池是空的":["207.20"],"那么创建一个新的":["207.20"],"也能做数据缓存":["208.1"],"这个时候的":["208.2"],"作用就是建立这个桥梁":["208.2"],"初次建立其":["208.2"],"那么第一个":["208.3"],"会渲染":["208.3"],"第二次渲染时候":["208.3"],"父组件将":["208.3"],"设置为":["208.3"],"负责记录更新的各种状态":["208.4"],"dispatch":["208.4"],"bind":["208.4","215.2"],"currentlyrenderingfiber":["208.4"],"为更新调度的主要函数":["208.4"],"lastrenderedstate":["208.5"],"上一次的state":["208.5"],"eagerstate":["208.5"],"这一次新的state":["208.5"],"如果每一个都改变相同的state":["208.5"],"第一次参数":["208.7"],"就是副作用函数":["208.7"],"第二次参数":["208.7"],"产生一个":["208.7"],"并和":["208.7"],"建立起关系":["208.7"],"算是某种异步的方式吧":["208.9"],"但是class的componentdidmount":["208.9"],"否则可能会出现出现闪屏问题":["208.10"],"uselayouteffect里面的callback函数会在dom更新完成后立即执行":["208.10"],"原始对象":["208.12"],"memoizedstate":["208.14","208.16"],"取出复用ref对象":["208.14"],"nextvalue":["208.16","208.17"],"如果deps":["208.17"],"新的":["209.1"],"对象上":["209.1"],"render":["209.3","219.7","221.10","228.2","236.2"],"的依赖项":["209.4"],"在函数组件下一次执行的时候":["209.4"],"会对比":["209.4"],"依赖项里面的状态":["209.4"],"是否有改变":["209.4"],"deps":["209.5"],"可以利用":["209.6"],"把它缓存起来":["209.6"],"shallowequal":["209.8"],"oldprops":["209.8"],"的属性名":["209.9"],"变成数组":["209.9"],"判断数组的长度是否相等":["209.9"],"接受两个参数":["209.11"],"数据量越大也就越浪费性能":["209.13"],"所以对于数据展示模块组件":["209.13"],"有必要采取":["209.13"],"memo":["209.13"],"shouldcomponentupdate":["209.13"],"等方案控制自身组件渲染":["209.13"],"第二种情况含有大量表单的页面":["209.13"],"如果需要更精致化渲染":["209.14"],"immutable":["209.14"],"更像是缓存了一段逻辑":["209.15"],"或者说执行这段逻辑获取的结果":["209.15"],"createparsercontext":["210.0","239.5"],"transformfilter":["210.1"],"important":["210.1"],"finalize":["210.2"],"information":["210.2"],"helpers":["210.2","240.1"],"上下文":["211.0"],"负责维护了整个转换过程中的一些状态数据":["211.0"],"以及提供一些修改上下文数据的函数":["211.0"],"深度优化的遍历方式":["211.0"],"遍历了所有的":["211.0"],"slot":["212.1","214.1","228.2"],"ifnode":["212.1"],"fornode":["212.1"],"already":["212.1","217.7","248.1","252.3","256.6"],"patched":["212.1"],"codegen":["212.1"],"falls":["212.1"],"through":["212.1","214.3"],"gennode":["212.1","233.0"],"当前处理的":["213.0"],"节点":["213.0","218.11","232.1"],"which":["214.0","214.2","220.2","245.3"],"needed":["214.0"],"nodes":["214.0","232.4"],"createvnode":["214.0","235.4"],"interpolation":["214.0"],"need":["214.0","214.1","214.3","218.5","235.4"],"although":["214.1","256.4"],"built":["214.1"],"we":["214.1","214.3","218.5","245.3","252.5"],"compile":["214.1"],"keepalive":["214.1"],"raw":["214.1"],"instead":["214.1","241.1","241.10"],"used":["214.1","219.10","236.2"],"transition":["214.1","286.33"],"wrapping":["214.1"],"hocs":["214.1"],"ensure":["214.1"],"correct":["214.1","214.2"],"optimizations":["214.1"],"force":["214.1"],"avoids":["214.1"],"its":["214.1","232.4"],"being":["214.1","216.4"],"collected":["214.1"],"updated":["214.1","216.2","220.1"],"uses":["214.1"],"patchflags":["214.1"],"generated":["214.2"],"compilescript":["214.2"],"gets":["214.2"],"genpropsaccessexp":["214.2"],"aliased":["214.2"],"prop":["214.2","216.2","222.6"],"different":["214.2","219.10","232.4"],"defineprops":["214.2"],"propsaliases":["214.2"],"startswith":["214.2"],"bindings":["214.2","236.2","236.6"],"fallback":["214.2"],"ctx":["214.2","219.3","227.1"],"fast":["214.2","236.7"],"bail":["214.2"],"parens":["214.2"],"invocation":["214.2","252.5"],"dot":["214.2"],"member":["214.2"],"bailconstant":["214.2"],"issimpleidentifier":["214.2","227.1"],"isscopevarreference":["214.2"],"isallowedglobal":["214.2"],"isgloballywhitelisted":["214.2"],"isliteral":["214.2"],"isliteralwhitelisted":["214.2"],"exposed":["214.2"],"normalized":["214.3","252.3"],"anyway":["214.3"],"tagtype":["214.3"],"elementtypes":["214.3"],"custom":["214.3"],"directives":["214.3","228.2"],"potentially":["214.3"],"elements":["214.3"],"arbitrarily":["214.3"],"accidentally":["214.3"],"overwriting":["214.3"],"added":["214.3"],"一旦创建了就不会改变":["215.1"],"只有静态节点才能被提升到外部创建":["215.1"],"patchflag":["215.2"],"directive":["215.2","228.2","241.9"],"exptype":["215.2"],"only":["215.2","220.2"],"could":["215.2","216.2"],"here":["215.2","216.3","236.4"],"they":["215.2","226.1","256.4"],"函数内部时钟会保持对静态节点的引用":["215.3"],"导致的后果就是":["215.3"],"指定了目标元素":["216.1"],"则会吧":["216.1"],"组件包裹的子节点挂载到":["216.1"],"prune":["216.2"],"matches":["216.2"],"has":["216.2","219.10","236.6","251.2","256.6","285.11","285.12"],"been":["216.2"],"pendingcachekey":["216.2"],"cachesubtree":["216.2"],"getinnerchild":["216.2"],"subtree":["216.2"],"onmounted":["216.2"],"onupdated":["216.2"],"onbeforeunmount":["216.2","220.1"],"part":["216.2"],"clonevnode":["216.3"],"sscontent":["216.3"],"possible":["216.3"],"returned":["216.3","249.0"],"cloned":["216.3"],"due":["216.3"],"attr":["216.3"],"fallthrough":["216.3"],"scopeid":["216.3","239.3"],"shapeflag":["216.4"],"shapeflags":["216.4","222.3"],"kept":["216.4"],"alive":["216.4"],"make":["216.4"],"就默认从最前面删除":["216.5"],"符合":["216.5"],"lru":["216.5"],"最近最少使用思想":["216.5"],"invokevnodehook":["216.6"],"isdeactivated":["216.6"],"并且不会走一整套的递归卸载和":["216.7"],"卸载组件的流程":["216.7"],"从而优化了性能":["216.7"],"是一种典型的空间换时间的优化思想":["216.7"],"用来定义":["217.0"],"允许传入一个工厂函数":["217.0"],"接受返回的":["217.0"],"工厂函数":["217.0"],"从服务端成功加载异步组件之后":["217.0"],"应执行":["217.0"],"setup":["217.1","217.7","218.8"],"中获得组件的模块":["217.2"],"如果组件是通过":["217.2"],"最终是调用了":["217.3"],"之前的延迟":["217.4"],"单位":["217.4"],"definecomponent":["217.7"],"asynccomponentwrapper":["217.7"],"asyncloader":["217.7"],"asyncresolved":["217.7","222.4"],"instance":["217.7","243.2","252.3"],"currentinstance":["217.7","243.2"],"createinnercomp":["217.7"],"handleerror":["217.7"],"errorcodes":["217.7","219.6","241.9"],"provided":["217.7"],"suspense":["217.7","222.4"],"可以执行用户自定义的失败处理函数来决定是重试还是直接失败":["217.8"],"如果多次重试失败或者直接失败":["217.8"],"则会在用户配置的":["217.8"],"isstring":["218.4","221.1","231.4","232.2"],"validate":["218.4","232.2"],"warn":["218.4","221.1","225.4","232.2","248.1","256.8"],"invalid":["218.4","232.2"],"track":["218.4","232.2"],"tree":["218.4","232.2","232.3","254.23"],"isblocktreeenabled":["218.4"],"normalization":["218.5"],"isclasscomponent":["218.5"],"vccopts":["218.5"],"functional":["218.5","243.2"],"compat":["218.5","230.1"],"convertlegacycomponent":["218.5"],"currentrenderinginstance":["218.5"],"reactive":["218.5"],"objects":["218.5"],"enable":["218.5"],"mutation":["218.5"],"guardreactiveprops":["218.5"],"klass":["218.5"],"setupcomponent":["218.8"],"endmeasure":["218.8","219.10"],"对象已经拥有的":["218.9"],"先创建":["218.10"],"vnode":["218.10","235.4"],"再渲染":["218.10"],"函数生成":["218.11"],"把vnode":["218.11"],"变成真实的":["218.11"],"函数来完成的":["219.1"],"emitted":["219.3"],"propsdefaults":["219.3"],"inheritattrs":["219.3"],"attrs":["219.3","241.9"],"slots":["219.3","228.2"],"isstateful":["219.4"],"setupcontext":["219.6"],"createsetupcontext":["219.6"],"setcurrentinstance":["219.6","220.2"],"pausetracking":["219.6"],"setupresult":["219.6"],"callwitherrorhandling":["219.6"],"shallowreadonly":["219.6"],"resettracking":["219.6"],"unsetcurrentinstance":["219.6"],"ispromise":["219.6"],"函数内部之间访问上下文":["219.7"],"然后模版编译器就可以捕获这些信息":["219.8"],"函数上下文":["219.9"],"noop":["219.10"],"internalrenderfunction":["219.10"],"compiled":["219.10","252.5"],"needs":["219.10","236.4"],"性能优秀":["219.13"],"标准化渲染函数":["219.15"],"以及兼容":["219.15"],"beforedestroy":["220.1"],"onunmounted":["220.1"],"synchronously":["220.2"],"trigger":["220.2"],"really":["220.2"],"funky":["220.2"],"callwithasyncerrorhandling":["220.2"],"registrations":["220.3"],"noops":["220.3"],"invokearrayfns":["220.4","220.5"],"这里是一个数组":["220.4"],"会遍历执行":["220.4"],"因为用户可以注册多个":["220.4"],"更新组件之后":["220.5"],"组件的销毁过程和渲染过程类似":["220.6"],"都是递归":["220.6"],"在组件销毁之前":["220.6"],"会检测组件实例是否有已注册的":["220.6"],"bum":["220.6"],"直到查找完毕":["220.7"],"如果整条链路都没处理":["220.7"],"logerror":["220.7"],"向通知台输出":["220.7"],"must":["221.1"],"strings":["221.1"],"normalizedkey":["221.1"],"camelize":["221.1","236.1"],"函数完成的":["221.2"],"主要是":["221.2"],"camelkey":["221.3"],"isemitlistener":["221.3"],"emitsoptions":["221.3"],"declared":["221.3"],"either":["221.3"],"expectedtypes":["221.4"],"valid":["221.4","222.6"],"specified":["221.4"],"shouldupdatecomponent":["221.7"],"函数判断是否需要更新":["221.7"],"内部会对":["221.7"],"updateprops":["221.8"],"不会递归执行":["221.9"],"effect":["221.10","258.9"],"订阅了这个数据的变化":["221.10"],"方便后续处理":["221.11"],"的初始化流程":["221.11"],"根据新旧子树":["222.2"],"fragment":["222.3"],"processfragment":["222.3"],"processelement":["222.3"],"asyncdep":["222.4"],"still":["222.4"],"pending":["222.4"],"just":["222.4"],"optimized":["222.5"],"unmountchildren":["222.6","222.7"],"hostsetelementtext":["222.7"],"was":["222.7"],"如果相同":["222.9"],"更新节点":["222.9"],"索引":["222.10"],"部分":["222.11"],"旧子节点有剩余":["222.11"],"删除多余节点":["222.11"],"最复杂的情况为数组到数组的更新":["222.12"],"要在内部根据不同的情况分成几个":["222.12"],"可以传递一个对象":["223.0"],"就可以修改了":["223.0"],"修改了计算属性的值":["223.1"],"就会执行对应的":["223.1"],"setter":["223.1"],"effectscheduler":["223.2"],"scope":["223.2"],"effectscope":["223.2"],"recordeffectscope":["223.2"],"activeeffect":["223.2","250.2","255.0","258.8"],"lastshouldtrack":["223.2","255.0"],"shouldtrack":["223.2","250.2","255.0"],"就会判断内部的":["224.0"],"dirty":["225.0"],"默认是":["225.0"],"函数进行计算":["225.3"],"computedsetter":["225.4"],"onlygetter":["225.4"],"isfunction":["225.4"],"write":["225.4"],"declarations":["226.1"],"inside":["226.1","236.2"],"also":["226.1"],"renamed":["226.1"],"collision":["226.1"],"properties":["226.1","236.4"],"aliashelper":["226.1"],"resolution":["226.1"],"statements":["226.1"],"nodetypes":["227.1","240.1","241.8","241.9"],"isstatic":["227.1","231.5"],"addmapping":["227.1"],"advancepositionwithmutation":["227.1"],"所以会执行":["228.0"],"scaling":["228.1"],"template":["228.1","254.16"],"helpernamemap":["228.1"],"optimization":["228.1"],"dynamic":["228.2"],"resolvedynamiccomponent":["228.2"],"resolvedirective":["228.2"],"resolvefilter":["228.2"],"withdirectives":["228.2"],"renderlist":["228.2"],"renderslot":["228.2"],"ists":["229.0"],"filters":["230.1"],"inferred":["230.2","236.1"],"sfc":["230.2"],"maybeselfreference":["230.2"],"endswith":["230.2"],"genobjectexpression":["231.1"],"genarrayexpression":["231.1"],"genfunctionexpression":["231.1"],"conditional":["231.1"],"genconditionalexpression":["231.1"],"annotation":["231.2"],"callhelper":["231.2"],"getvnodeblockhelper":["231.2"],"inssr":["231.2"],"some":["231.6","241.9","256.4"],"istext":["231.6"],"indentlevel":["231.7"],"才能在":["232.1"],"阶段只识别动态节点":["232.1"],"避免了不必要的静态节点对比提升性能":["232.1"],"那么把当前":["232.3"],"作为动态节点去添加到父":["232.3"],"这样构造了":["232.3"],"的创建是执行了":["232.3"],"createblock":["232.3"],"move":["232.4"],"树的过程中":["233.0"],"会先执行":["233.0"],"针对不同节点执行了":["233.0"],"不同的代码生成逻辑":["233.0"],"过程可能存在递归执行":["233.0"],"钩子函数":["234.0"],"并且这些侦听器要在":["234.2"],"更新后调用":["234.6"],"rootcontainer":["235.4"],"ishydrate":["235.4"],"issvg":["235.4"],"mounted":["235.4"],"want":["235.4"],"another":["235.4","236.4"],"same":["235.4"],"unmount":["235.4"],"previous":["235.4"],"calling":["235.4"],"selfname":["236.1"],"getcomponentname":["236.1","256.8"],"breaking":["236.1"],"capitalize":["236.1"],"getexposeproxy":["236.2"],"componentpublicinstance":["236.2"],"forced":["236.4"],"proposes":["236.4"],"adding":["236.4"],"renderer":["236.4"],"option":["236.4"],"configure":["236.4"],"affects":["236.4"],"finite":["236.4"],"worth":["236.4"],"casing":["236.4"],"complexity":["236.4"],"oldvalue":["236.5"],"matched":["236.6"],"hostpatchprop":["236.6"],"invokedirectivehook":["236.7"],"teleport":["236.7"],"teleportimpl":["236.7"],"internals":["236.7"],"组件的生命周期内":["237.0"],"会对组件内部的元素进行挂载":["237.0"],"可能会遇到元素节点的解析存在递归解析子节点的情况":["238.0"],"其实就是":["238.0"],"树的深度遍历和解析过程":["238.0"],"解析过程中不断前进代码":["238.0"],"compilesfcscript":["239.2"],"cachehandlers":["239.3"],"字段描述节点属性":["239.4"],"loc":["239.4","241.8"],"字段描述节点代码位置相关信息":["239.4"],"chilren":["239.4"],"parseroptions":["239.5"],"rootnode":["239.5"],"过程就剩最后一步创建":["240.0"],"unexpected":["241.1","241.10"],"question":["241.1","241.10"],"mark":["241.1","241.10"],"parsetext":["241.1","241.10"],"pushnode":["241.1","241.10"],"handling":["241.1","241.10"],"strategy":["241.1","241.10"],"v2":["241.1","241.10"],"removedwhitespace":["241.1","241.10"],"rawtext":["241.1","241.10"],"shouldcondense":["241.1","241.10"],"preserve":["241.1","241.10"],"普通文本的解析":["241.2"],"incorrectly":["241.3"],"closed":["241.3"],"advancing":["241.3"],"parsercontext":["241.4"],"numberofcharacters":["241.4"],"cdata":["241.6"],"rcdata":["241.6"],"containing":["241.6"],"entity":["241.6"],"decoding":["241.6"],"required":["241.6"],"decodeentities":["241.6"],"attribute":["241.6","241.8"],"find":["241.8","286.69"],"attributenode":["241.8"],"checkcompatenabled":["241.8"],"compilerdeprecationtypes":["241.8"],"getselection":["241.8","286.5"],"reset":["241.9","260.2"],"out":["241.9"],"emiterror":["241.9"],"eof":["241.9"],"整个解析过程":["241.12"],"构造出来的":["241.12"],"own":["243.1"],"creates":["243.1"],"way":["243.1"],"appcontext":["243.2"],"inject":["243.4","243.15"],"后代组件提供不同数据":["243.12"],"后续重构不小心挪动了数据的注入":["243.14"],"当子组件":["243.15"],"注入数据的时候":["243.15"],"会直接从它的父组件的":["243.15"],"在修改数据的时候派发通知":["244.0"],"收集的依赖是副作用函数":["244.0"],"是执行":["245.0"],"creategetter":["245.0"],"是数组":["245.1"],"并且命中了":["245.1"],"arrayinstrumentations":["245.1"],"执行内部对应函数":["245.1"],"这三个函数":["245.2"],"就会":["245.2"],"original":["245.3","249.0"],"arrkey":["245.3"],"对添加和删除操作":["246.1"],"存在优化空间":["246.1"],"标识依赖的收集状态":["246.2"],"maxmarkerbits":["246.2"],"函数执行的时候":["246.3"],"cleanup":["246.3"],"不是再默认执行":["246.3"],"会通过":["246.3"],"包装好的函数":["246.3"],"标记依赖的状态":["246.4"],"不会重复收集已经收集的依赖":["246.4"],"执行会有递归的情况":["246.5"],"可以通过这种方式记下每个层级的依赖标记情况":["246.5"],"在判断":["246.5"],"是否存在与":["247.1"],"添加到":["247.2"],"集合中":["247.2"],"遍历":["247.2"],"reactiveeffect":["247.3"],"的时候就是":["247.4"],"trying":["248.0"],"weakmap":["248.1"],"isobject":["248.1"],"made":["248.1","249.0"],"getownpropertynames":["248.2"],"访问对象属性触发":["248.2"],"ownkeys":["248.2"],"operation":["249.1"],"不做依赖收集":["249.2"],"因为只读的对象不会被修改":["249.2"],"所以不需要追踪变化":["249.2"],"private":["250.1"],"dep":["250.1"],"refbase":["250.2"],"响应式的对象的":["250.3"],"不是就直接返回":["250.3"],"原对象":["250.3"],"reflect":["251.2"],"issymbol":["251.2"],"builtinsymbols":["251.2"],"isnontrackablekeys":["251.2"],"需要通过某种方式保留下来":["252.1"],"内部会进行判断":["252.2"],"slotflag":["252.3"],"rawslots":["252.3"],"internalobjectkey":["252.3"],"attach":["252.3"],"have":["252.3"],"componentinternalinstance":["252.4"],"isssr":["252.4"],"isinssrcomponentsetup":["252.4"],"disables":["252.5"],"tracking":["252.5"],"interfering":["252.5"],"based":["252.5"],"indicated":["252.6"],"isn":["252.6"],"necessary":["252.6"],"flip":["252.6"],"wrapped":["252.6"],"多了第三个参数":["252.7"],"就是子组件提供的数据":["252.7"],"第三个参数":["252.7"],"根据插槽的名称在对象中找到对应的函数":["252.8"],"执行这些函数生成":["252.8"],"在事件回调函数中修改数据的值":["253.0"],"这就是":["253.0"],"变化引起数据变化的过程":["253.0"],"不同的模块拆分到":["254.2"],"packages":["254.2"],"拆分到颗粒度更细":["254.2"],"指责划分更明确":["254.2"],"依赖关系也更明显":["254.2"],"的原理也很简单":["254.3"],"依赖":["254.3"],"es2015":["254.3"],"模块语法的静态结构":["254.3"],"实现了":["254.4"],"增加删除都可以监听到":["254.4"],"但是也无法深层次的监听对象的变化":["254.4"],"是将模版基于":["254.5"],"动态节点":["254.5"],"指令切割的嵌套区块":["254.5"],"都是经过团队讨论才会进行开发的":["254.7"],"提升了":["254.7"],"是全量对比":["254.8"],"开启":["254.9"],"createstaticvnode":["254.10"],"方法在客户端去生成一个":["254.10"],"有的用于服务端的渲染":["254.11"],"在源码编译构建过程中":["254.11"],"会先收集编译目标":["254.11"],"然后执行":["254.11"],"节点的转换":["254.13"],"组件实现":["254.17"],"全局的":["254.17"],"用于内部测试":["254.19"],"可以独立使用":["254.20"],"未开始执行":["256.1"],"flushindex":["256.1","256.5"],"始终为0":["256.1"],"这个时候执行":["256.1"],"使得即使多次执行":["256.2"],"也不会多次执行":["256.2"],"都是单线程执行的":["256.2"],"leave":["256.4"],"warning":["256.4"],"unshaked":["256.4"],"eventually":["256.4"],"shaken":["256.4"],"minifier":["256.4"],"terser":["256.4"],"minifiers":["256.4"],"fail":["256.4"],"job":["256.5"],"isflushing":["256.5"],"deduped":["256.6"],"active":["256.6"],"componentname":["256.8"],"maximum":["256.8"],"recursive":["256.8"],"updates":["256.8"],"exceeded":["256.8"],"会接受一个包含有关依赖细腻下的调试器事件":["257.2"],"也可以直接监听一个响应式对象":["258.1"],"内部调用了":["258.2"],"dowatch":["258.2","259.2"],"是一个函数":["258.3"],"进一步判断第二个参数":["258.3"],"cb":["258.3"],"是否存在":["258.3"],"属于":["258.4"],"函数求新值":["258.5"],"深度或者":["258.5"],"forcktrigger":["258.5"],"回调函数":["258.6"],"此时的":["258.8"],"wacher":["258.8"],"执行时候也会执行":["258.9"],"失活":["258.10"],"清理":["258.10"],"首次执行":["258.11"],"立即执行这个函数":["259.1"],"才会立即执行":["259.2"],"内部也是通过":["259.2"],"函数实现的":["259.2"],"函数就是对":["259.2"],"检测":["259.3"],"响应式数据发生变化的时候":["259.3"],"getter":["259.3"],"官方网站":["260.0"],"上也已经开源":["260.0"],"目前已经有":["260.0"],"如果顺利登录":["260.1"],"会跳转到这个页面":["260.1"],"填写一些":["260.1"],"的调查信息后":["260.1"],"就会跳转到":["260.1"],"会把历史命令做成一个滚动的可以选择的列表":["260.2"],"命令导航":["260.2"],"同时按下":["260.2"],"ctrl":["260.2"],"可以打开命令导航":["260.2"],"集成了很多工具的命令导航":["260.2"],"比如说我们要执行":["260.2"],"那么到底格式什么":["260.2"],"应该怎么执行":["260.2"],"大概有十多种主题可选":["260.3"],"比如说这个女生非常喜欢的粉色系":["260.3"],"更多主题可以到":["260.3"],"仓库的":["260.3"],"小伙伴们自行体会哈":["260.4"],"反正我是没被劝退":["260.4"],"幸好是没放弃":["260.4"],"上面":["262.0","275.2"],"你就用不了上面这些国内":["262.0"],"解决可以访问所有":["262.0"],"包的问题":["262.0"],"可以使用":["262.0"],"unpkg":["262.0"],"但它的访问速度在国内并不佳":["262.0"],"非常火爆":["263.0"],"gv":["263.1"],"号肯定不行":["263.1"],"大约1":["263.2"],"人民币":["263.2"],"最好是美国":["263.3"],"新加坡等等":["263.3"],"不然会提示不能在当前国家服务":["263.3"],"login":["263.5"],"美元":["263.6"],"你也可以冲一个":["263.6"],"18美元":["263.6"],"还支持":["265.0"],"psd":["265.0"],"即时设计":["265.0"],"等设计稿":["265.0"],"我们随便进入一个页面":["265.0"],"引入眼帘的是":["265.0"],"中间":["265.0"],"而在":["265.0"],"左侧":["265.0"],"的列表相当于":["265.0"],"这个页面的节点":["265.0"],"而我们点击一下右上角的":["265.0"],"生成代码":["265.0"],"可以看到它通过自己的算法很智能的生成了代码":["265.0"],"我上面选择生成的是":["265.0"],"的代码":["265.0"],"当然啦":["265.0"],"我们可以快速的将我们想要的样式复制到我们的项目中进行使用":["265.1"],"笔者在使用的过程中一直很好奇":["265.1"],"下载代码":["265.1"],"当然你也可以手动标记组件为":["265.2"],"typecards":["265.3"],"每一个都展示对应的信息":["265.3"],"支持直接预览":["265.4"],"当我们导入设计稿后":["265.4"],"在使用体验上来说":["265.5"],"确实可以解决大部分切图功能":["265.5"],"减少大家进行切图的工作时间":["265.5"],"大家可以去试一下":["265.5"],"但是肯定会有一些小细节不符合自己的想法":["265.5"],"表示理解吧":["265.5"],"ai":["265.5"],"zh":["267.1"],"compress":["268.1"],"buuing":["270.0"],"usablica":["272.0"],"epicmax":["274.0"],"bin":["275.1","275.2"],"如果想修改回默认bash":["275.1"],"integrated":["275.2"],"fontfamily":["275.2"],"效果图":["275.2"],"安装brew":["275.2"],"安装地址":["275.2"],"mac在安装homebrew时报curl":["275.2"],"使用国内镜像":["275.2"],"镜像选择推荐选择清华大学tuna镜像源":["275.2"],"如果下载过慢":["275.2"],"推荐使用根据执行提示":["275.2"],"重新选择镜像源":["275.2"],"gitee":["275.2"],"cunkai":["275.2"],"homebrewcn":["275.2"],"homebrew":["275.2"],"三":["275.2"],"安装node版本管理工具":["275.2"],"nvm":["275.2"],"安装教程":["275.2"],"三种方式":["275.2"],"v0":["275.2"],"qo":["275.2"],"如果有下载问题":["275.2"],"请参考":["275.2"],"异常":["275.2"],"添加环境变量":["275.2"],"bashrc":["275.2"],"其中一个配置文件中添加下面的内容":["275.2"],"z":["275.2","284.7","284.15","284.48","284.64","284.71","284.83","286.6","295.10"],"xdg":["275.2"],"printf":["275.2"],"如果你用过一些markdown编辑器的话":["276.0"],"你会发现很多编辑器都是把界面分成两部分":["276.0"],"一部分markdown代码":["276.0"],"一部分预览":["276.0"],"比如idea中的编辑器":["276.0"],"而使用marktext的时候":["276.0"],"当你输入markdown语句会直接实时转换成预览":["276.0"],"用户体验大大改善了":["276.0"],"这或许是很多朋友喜欢使用typora这类工具的原因了":["276.0"],"marktext默认是浅色主题":["276.0"],"左上角按钮":["276.0"],"代码":["279.3"],"xmlns":["279.7"],"03":["279.8"],"beginpath":["279.8"],"linewidth":["279.8"],"strokestyle":["279.8"],"moveto":["279.8"],"lineto":["279.8"],"逼真的烟花":["279.10"],"proyang":["281.1"],"jlmakes":["281.2"],"magic":["281.2"],"animation动画库":["281.2"],"compzets":["281.3"],"crossfade":["281.3"],"jquery图片模糊插件crossfade":["281.3"],"移动端跟随手指滑动组件":["281.4"],"零依赖":["281.4"],"em":["282.2"],"eslint":["283.1","283.2","283.4","283.12"],"disable":["283.1","283.4","283.12"],"prefer":["283.3","283.12"],"spread":["283.3"],"事件回调必须为函数":["283.7"],"触发事件":["283.7"],"获取当前请求接口":["283.10"],"example1":["283.10"],"fetchservice":["283.10"],"example2":["283.10"],"9a":["284.9"],"za":["284.14","284.48","284.60","284.64"],"f0":["284.19"],"mov":["284.22"],"wav":["284.22"],"z0":["284.33","284.34"],"19开头即可":["284.36"],"01":["284.39","286.13"],"山西":["284.40"],"安徽":["284.40"],"湖北":["284.40"],"湖南":["284.40"],"江苏":["284.40"],"0229":["284.46"],"ddsspp":["284.47"],"kk":["284.47"],"udc00":["284.49"],"udfff":["284.49","284.66"],"ud869":["284.49","284.66"],"uded6":["284.49","284.66"],"udf00":["284.49","284.66"],"u3008":["284.53"],"u3009":["284.53"],"u3010":["284.53"],"u3011":["284.53"],"u300e":["284.53"],"ud86d":["284.66"],"x5b":["284.76"],"acc":["284.84"],"前端":["285.4"],"j":["285.5"],"visibility":["286.1"],"documenttouch":["286.4"],"网址":["286.13"],"padend":["286.22"],"activeelement":["286.24"],"operamini":["286.25"],"clipboard":["286.26"],"writetext":["286.26"],"女":["286.28"],"转换方法":["286.30"],"treeitem":["286.31"],"重置位置":["286.33"],"csstext":["286.33"],"duration":["286.33"],"0s":["286.33"],"translatey":["286.33"],"1s":["286.33"],"要操作的dom节点":["286.34"],"roll":["286.34"],"offsetwidth":["286.37"],"originlist":["286.37"],"times":["286.37"],"计算需要渲染此次数":["286.37"],"handlescroll":["286.38"],"scrolltop":["286.38"],"currentoffset":["286.38"],"translate3d":["286.38"],"ready":["286.39"],"或者使用onreadystatechange":["286.39"],"getfileextension2":["286.40"],"chunkslist":["286.43","286.46"],"uploadlist":["286.44"],"将切片信息拼接成":["286.46"],"concatformdata":["286.46"],"大文件上传":["286.47"],"分母":["286.48"],"openxmlformats":["286.51"],"officedocument":["286.51"],"spreadsheetml":["286.51"],"sheet":["286.51"],"xlsx":["286.51"],"excludeacceptalloption":["286.51"],"描述信息":["286.52"],"这个值如果是true这不显示":["286.52"],"这个按钮":["286.52"],"myltiple多选的意思":["286.52"],"markdown":["286.55"],"hljs":["286.55"],"f8f8f8":["286.55"],"quote":["286.55"],"italic":["286.55"],"keyword":["286.55"],"selector":["286.55"],"subst":["286.55"],"scrollintoview":["286.57"],"behavior":["286.57"],"blackberry":["286.58"],"iemobile":["286.58"],"opera":["286.58"],"0xfffff":["286.63"],"返回true":["286.69"],"获取当前提供上下文对象中的变量":["286.69"],"如果返回false":["286.69"],"会继续向上层作用域链中查找":["286.69"],"使用with关键字":["286.69"],"来改变作用域":["286.69"],"withedyourcode":["286.69"],"sandbox":["286.69"],"否则发送请求":["286.70"],"追加到":["286.71"],"currentproducts":["286.72"],"itemkey":["286.72"],"setdate":["287.2"],"getdate":["287.2"],"endmonthday":["287.3"],"当前月的总天数":["287.3"],"格式化后的日期字符串":["287.4"],"datepadzero":["287.4"],"将摄氏温度转华氏温度":["287.8"],"setstyle":["288.2"],"el":["288.2"],"如果beforecall返回false":["288.3"],"不执行后续函数":["288.3"],"fn1":["288.4"],"我们还可以将key的生成方式暴露出去":["288.5"],"keycreator":["288.5"],"negative":["291.2"],"substring":["291.2","296.2"],"usd":["291.5"],"us":["291.5"],"char":["295.6"]},{"0":["5.2","10.11","52.5","52.17","56.3","56.4","64.19","64.22","95.9","95.46","100.8","113.2","121.4","126.6","126.8","127.6","127.38","127.49","142.23","150.12","151.9","154.13","156.11","156.24","159.5","159.13","160.0","166.9","167.4","168.19","173.67","174.23","181.0","182.1","205.4","206.4","219.3","221.4","236.2","236.7","241.3","256.4","279.1","279.6","284.17","284.75","286.19","286.22","286.31","286.72","292.1","293.1"],"1":["5.2","10.7","27.15","56.1","58.1","67.2","87.41","99.14","121.4","122.4","127.33","127.49","131.8","131.9","132.2","138.37","150.12","154.16","154.20","156.2","160.0","162.1","168.19","173.19","173.26","173.37","173.73","174.44","176.5","179.24","179.28","179.33","184.7","186.3","193.9","205.4","205.15","209.3","223.2","230.2","241.7","242.1","246.3","252.6","255.0","279.6","284.36","284.37","285.6","285.8","285.11","285.12","285.13","286.67","286.72","291.2","291.4"],"2":["7.1","10.7","20.9","22.14","27.15","61.9","65.33","67.2","69.9","81.6","81.7","87.23","97.19","97.22","101.5","106.17","106.22","122.2","125.8","127.15","127.33","141.3","154.0","154.16","162.1","173.29","173.37","174.60","175.1","178.5","179.33","184.7","219.10","241.9","260.0","262.0","284.44","284.84","285.10","285.11","285.12","285.13","291.3"],"3":["7.1","7.3","40.1","41.0","45.6","61.9","95.30","99.3","101.3","102.2","106.33","119.3","121.5","122.15","127.15","127.37","134.4","140.0","150.2","152.20","155.6","168.10","170.12","173.10","173.29","173.54","173.64","173.76","174.3","176.13","176.18","178.5","179.33","184.7","200.3","214.2","218.10","285.10","286.46","291.2"],"4":["37.3","43.9","44.5","45.5","61.8","65.12","67.3","72.5","81.3","89.9","97.3","99.6","99.23","100.4","106.30","113.0","113.8","120.3","127.2","127.31","151.4","173.35","173.94","179.1","179.33","195.5","200.2","200.3","284.1","284.33","284.34","284.43","284.54","285.10","285.14","288.1","295.4"],"5":["5.2","7.10","7.12","19.4","23.14","30.1","43.10","65.35","67.8","72.5","96.14","99.17","99.23","113.0","113.2","152.3","152.18","173.98","175.5","179.33","184.7","200.5","204.0","222.12","284.24","284.25","284.34","285.7"],"6":["23.14","23.90","36.5","38.5","43.3","48.18","72.5","81.3","99.5","173.24","174.7","186.3","260.2","284.61","284.72","284.73","285.7","286.22"],"7":["87.0","127.1","156.11","173.43","173.59","174.43","174.59","284.35"],"8":["23.64","89.9","99.6","100.8","113.7","115.0","127.1","152.6","154.7","168.11","173.38","173.43","173.59","174.43","174.63","176.5","177.13","178.7","279.2","286.28"],"9":["23.84","152.6","168.11","173.63","284.19","284.60","284.74"],"10":["23.50","26.2","27.1","61.18","65.30","74.10","100.6","114.22","114.32","123.1","151.1","166.7","179.15","287.1","288.1"],"11":["27.1","38.3","81.3","173.60"],"12":["81.3","130.5"],"13":["38.4","114.21","174.54"],"14":["2.3","38.4","97.61","141.2","171.0","205.4"],"15":["2.3","46.4","113.2","171.0","172.0"],"16":["97.61","114.24","171.0","172.0","174.51","184.20","286.63"],"17":["95.9","171.0","173.97","205.3","205.6"],"18":["21.10","87.23","108.2","171.0","175.12","284.6"],"19":["140.0","152.3","175.12"],"20":["26.2","152.6","173.49","175.12","284.31"],"21":["152.6","175.12","181.0","287.1"],"22":["173.86","181.0"],"23":["175.10","181.0"],"24":["175.10","181.0","194.5"],"25":["175.10"],"30":["170.15","173.71","284.39","286.34"],"31":["284.41"],"34":["173.50","285.9"],"36":["173.53"],"40":["127.3","153.10","195.4"],"45":["195.4","279.8"],"50":["127.3","156.10","170.2","286.33"],"51":["170.15"],"56":["173.72"],"60":["127.3","195.4"],"70":["127.3"],"80":["113.7","195.4"],"83":["173.88"],"85":["107.4","195.4"],"86":["284.36","284.37"],"90":["154.6","166.6"],"100":["61.17","153.10","170.14","171.0","195.4"],"101":["22.21","29.2"],"104":["281.3"],"105":["115.0"],"111":["154.2"],"115":["113.6"],"120":["195.4"],"123":["133.3"],"125":["195.4"],"128":["275.2"],"140":["195.4"],"160":["195.4"],"163":["113.5"],"169":["23.50"],"200":["100.6","101.5","127.32","168.19"],"204":["29.3"],"255":["23.52","106.34"],"279":["140.0"],"300":["104.0","168.7"],"301":["2.2"],"304":["179.45"],"305":["29.4","179.45"],"333":["90.0"],"392":["97.50"],"400":["286.34"],"401":["166.8"],"403":["166.8"],"404":["68.11"],"407":["29.5"],"480":["104.0"],"500":["167.4"],"504":["29.6"],"600":["67.10","102.0","284.16"],"700":["286.55"],"742":["140.0"],"750":["106.25"],"752":["140.0"],"777":["21.17"],"900":["286.55"],"1000":["100.6","132.2","133.4","195.4"],"1024":["100.8"],"1334":["106.25"],"1610":["256.4"],"1999":["279.7"],"2000":["97.2"],"2016":["127.1"],"2017":["127.1"],"2019":["114.32","130.5"],"2021":["115.0"],"2022":["159.0","287.7"],"3000":["114.16"],"3009":["175.6"],"5173":["115.0"],"10000":["153.8"],"12345":["22.22"],"13240":["107.4"],"24618":["175.10"],"123456":["175.5"],"13029546":["137.0"],"31536000":["1.21"],"122943821":["10.14"],"v":["0.0","61.8","95.40","97.39","107.4","119.10","156.7","180.1","180.2","190.6","236.7"],"model":["0.0"],"原理":["0.0","106.49","150.1"],"eb4cd80":["0.0"],"vite":["0.0","81.0","95.20","97.14"],"component":["0.0","89.6","96.1","222.3","226.1"],"版本依赖":["0.0"],"d82f495":["0.0"],"修复":["0.0"],"package":["0.0","87.3","87.25","94.8"],"版本锁定":["0.0"],"7731ed2":["0.0"],"shiki":["0.0"],"主题删除":["0.0"],"简单介绍":["0.1"],"6f1c343":["0.1"],"内容完善":["0.1"],"60adbbf":["0.1"],"page":["0.1","68.11","114.11","123.1","175.10"],"6b26e52":["0.1"],"navigator":["0.1","95.46","286.25"],"兼容":["0.1"],"5d64a59":["0.1"],"nginx":["0.1","138.28"],"2f1acc0":["0.1"],"s":["0.1","10.11","65.21","138.12","138.13","148.2","154.8","166.3","172.0","177.6","222.4","241.3","252.3","275.2","285.9"],"8ce9245":["0.1"],"souce":["0.1"],"和":["0.1","1.5","44.1","48.7","50.14","52.18","65.28","98.5","106.44","114.18","122.17","129.4","154.20","173.7","175.10","175.13","175.16"],"v8":["0.1","4.2"],"运行引擎":["0.1"],"3b9fa2e":["0.1"],"utils":["0.1","89.5","96.5"],"907a563":["0.1"],"新增钟表组件":["0.1"],"网站增加角标":["0.1"],"c843a7a":["0.1"],"thermometer":["0.1"],"新增温度计组件":["0.1"],"220905b":["0.1"],"模版解析新内容":["0.1"],"28870f6":["0.1"],"wacher源码总结":["0.1"],"ebd8a62":["0.1"],"router":["0.1","89.5","96.3","97.18"],"路由调整新增工程化栏目":["0.1"],"ed1863e":["0.1"],"tsconfig":["0.1"],"先暂时去掉viteconfig":["0.1"],"8b8c774":["0.1"],"c763031":["0.1"],"aef950c":["0.1"],"环境变量":["0.1"],"的引入导致":["0.1"],"error":["0.1","64.22","86.1","86.8","127.44","159.2","166.5","166.6","166.9","204.2","206.5","206.16","275.2"],"eaa6b7c":["0.1"],"去掉node版本限制":["0.1"],"e77f9f5":["0.1"],"修复yml脚步文件":["0.1"],"97b9d40":["0.1"],"这样就减少了响应数据":["1.0"],"接下来的内容中我们将通过以下几个部分来探讨浏览器缓存机制":["1.0"],"速度没有":["1.1"],"内存缓存快":["1.1"],"但是存储空间大":["1.1"],"时效性长":["1.1"],"大部分缓存都会走这里":["1.1"],"命中缓存的话":["1.2"],"会根据缓存查找优先级去查找数据":["1.2"],"但是不管我们是从":["1.2"],"memory":["1.2","152.16","175.10"],"比如说":["1.3"],"jss":["1.3"],"html":["1.3","19.14","25.6","97.26","114.11","120.0","126.2","152.17","166.6","266.0"],"css":["1.3","97.10","97.19","97.26","99.6","169.3","177.10","178.7","195.7","195.9","203.3","265.0","285.4"],"图片等等":["1.3"],"http":["1.4","19.13","23.88","25.9","86.2","99.10","102.0","107.4","113.5","121.10","172.0","175.6","175.21"],"herder":["1.4"],"中的字段判断哪些资源需要缓存":["1.4"],"safari":["1.5"],"浏览器兼容性不怎么好":["1.5"],"可以推送":["1.5"],"no":["1.5","86.1","92.0","97.59","170.15","214.3","283.2"],"store":["1.5","22.12","96.3","216.3","235.4"],"来实现的":["1.7"],"state":["1.8","89.5","152.20","205.19","209.13","216.3","218.5"],"code":["1.8","89.6","93.1","100.2","114.23","154.13","167.4","195.3","281.1","295.8"],"可以在请求头或者响应头中设置":["1.10"],"并且可以组合使用多种指令":["1.10"],"从图中我们可以看到":["1.10"],"当浏览器发起请求验证资源时":["1.11"],"如果资源没有做改变":["1.11"],"那么服务端就会返回":["1.11"],"被修改":["1.12"],"服务端不能命中缓存导致发送相同的资源":["1.12"],"因为":["1.12","41.10","87.17","148.0","175.9","175.18"],"只能以秒计时":["1.12"],"不知道你是否存在这样一个疑问":["1.13"],"如果什么缓存策略都没设置":["1.13"],"那么浏览器会怎么处理":["1.13"],"对于这种情况":["1.13"],"浏览器会采用一个启发式的算法":["1.13"],"密集型运算":["1.16"],"必须横向扩展":["1.16"],"分布式部署时多个服务器节点上生成的":["1.16"],"某些服务器不能精确的得到文件的最后修改时间":["1.17"],"nginx配置里etag选项默认开启的":["1.17"],"所以请求的资源文件若发生改动":["1.17"],"又由":["1.18"],"mtime":["1.18"],"当编辑文件却未更改文件内容时":["1.18"],"或者":["1.18","87.26","96.1","104.0","171.0","175.21","177.11","178.2","179.39","258.5"],"last":["1.20","50.17","106.11","170.4","179.49"],"modified":["1.20","175.10"],"max":["1.21","27.7","53.12","115.0","175.12"],"age":["1.21","179.44","183.5","288.4"],"请求行":["2.2"],"cookies":["2.2"],"发送":["2.2","133.4"],"服务器处理请求返回":["2.2"],"报文":["2.2"],"读取响应头信息":["2.2"],"根据状态码":["2.2"],"处理":["2.2","89.2","178.1"],"重定向":["2.2"],"根据":["2.2","128.0","174.29","254.13"],"数据传输完成":["2.3"],"tcp四次挥手断开连接":["2.3"],"如果":["2.3","7.11","78.0","97.41","130.12","173.31","174.22","252.2","275.2"],"浏览器或者服务器在http头部加上如下信息":["2.3"],"tcp就一直保持连接":["2.3"],"保持tcp连接可以省下下次需要建立连接的时间":["2.3"],"提示资源加载速度":["2.3"],"connection":["2.3"],"keep":["2.3","175.10"],"alive":["2.3","23.85","175.10"],"网络进程将获取到的数据包进行解析":["2.3"],"根据响应头中的content":["2.3"],"type来判断响应数据的类型":["2.3"],"如果是字节流类型":["2.3"],"就将该请求交给下载管理器":["2.3"],"该导航流程结束":["2.3"],"不再进行":["2.3"],"如果是text":["2.3"],"html类型":["2.3"],"就通知浏览器进程获取到文档准备渲染":["2.3"],"浏览器进程获取到通知":["2.3"],"浏览器渲染进程":["3.1"],"即通常所说的浏览器内核":["3.1"],"renderer进程":["3.1"],"内部是多线程的":["3.1"],"主要作用为页面渲染":["3.1"],"同理如果插件崩溃了也会影响整个浏览器":["3.2"],"而且多进程还有其它的诸多优势":["3.2"],"该线程就会执行":["3.4"],"注意":["3.4","3.6","3.7","57.2","142.12","154.9","176.6","178.5"],"中无论什么时候都只有一个js线程在运行js程序":["3.5"],"同样注意":["3.5"],"gui渲染线程与js引擎线程是互斥的":["3.5"],"等待js引擎的处理":["3.6"],"异步线程就产生状态变更事件":["3.8"],"语言来实现网页的动态效果":["4.2"],"如":["4.2","68.8","81.4","99.3","122.13","152.8","172.0","175.12"],"javascriptcore":["4.2"],"date":["4.2","172.0","286.13","286.28"],"persistence":["4.2"],"数据持久化存储":["4.2"],"和js引擎":["4.3"],"所以渲染的效果也不相同":["4.4"],"所有网页浏览器":["4.4"],"opera内核原为":["4.6"],"presto":["4.6"],"现为":["4.6"],"blink":["4.6"],"observe":["5.2","5.8","181.0"],"可以当可视比例达到某个比例再触发加载":["5.3"],"console":["5.5","10.9","10.10","10.13","17.0","19.3","59.1","62.1","62.12","62.20","86.5","87.21","100.3","103.7","125.1","125.2","125.3","125.4","125.5","125.7","126.7","127.18","127.29","127.47","127.51","131.2","133.1","140.1","154.2","157.0","166.5","166.6","179.41","206.5","286.2","286.22","288.4"],"log":["5.5","10.9","19.2","21.8","21.17","59.1","86.5","87.21","97.28","100.3","103.7","113.7","125.3","125.5","126.7","127.14","127.18","127.29","131.2","133.1","140.1","154.2","157.0","179.41","288.4"],"还有很多别的用途":["5.6"],"这里只是介绍功能":["5.6"],"box":["5.8","106.37"],"可以拿到元素和它的位置":["5.8"],"尺寸":["5.8"],"这样我们就实现了对元素的":["5.8"],"measureclick":["5.9"],"img":["5.9","60.0","99.6"],"src":["5.9","60.0","96.5","103.17","181.0","195.7","286.1"],"https":["5.9","77.2","87.7","113.5","256.4","296.4"],"p9":["5.9"],"passport":["5.9"],"byteacctimg":["5.9"],"com":["5.9","72.5","87.8","87.39","94.10","107.4","113.5","138.34","146.4","256.4","260.0","260.3"],"可以监听过时的":["5.10"],"的记录":["5.11"],"浏览器干预行为这些不是用户交互的事件就要用":["5.11"],"xxxobserver":["5.11"],"记录的行为":["5.12"],"来上报数据":["5.12"],"reportingobserver":["5.12"],"所以会生成到布局树中":["6.1"],"还有匿名行盒":["6.1"],"匿名块盒等等都会导致":["6.1"],"树和布局树无法一一对应":["6.1"],"layer":["6.1","7.1","95.25"],"主线程会使用一套复杂的策略对整个布局树中进行分层":["6.1"],"分层的好处在于":["6.1"],"将来某一个层改变后":["6.1"],"仅会对该层进行后续处理":["6.1"],"从而提升效率":["6.1"],"滚动条":["6.1"],"堆叠上下文":["6.1"],"transform":["6.1","64.11","154.16","154.17"],"opacity":["6.1","7.7","91.0"],"等样式都会或多或少的影晌分层结果":["6.1"],"也可以通过":["6.1"],"wil1":["6.1"],"change":["6.1","152.20"],"属性更大程度的影响分层结果":["6.1"],"paint":["6.1","106.23"],"再下一步是绘制":["6.1"],"是异步完成的":["6.3"],"也同样因为如此":["6.3"],"当":["6.3","64.4","148.4","173.55","206.15"],"所以":["6.4","7.14","33.1","39.1","41.8","80.4","87.20","87.42","140.3","166.2","173.6","173.9","205.2"],"reflow":["6.4"],"的变化几乎不会影响渲染主线程":["6.5"],"反之":["6.5"],"将网页内容通过":["7.0"],"gl":["7.0","7.10","7.14"],"贴图操作绘制到目标窗口上":["7.0"],"如果忽略掉操作系统本身的窗口合成器":["7.0"],"也可以简单认为是绘制在显示屏上":["7.0"],"当我们说":["7.0"],"在没有加修饰语的情况下":["7.0"],"我们通常会称之为内核主线程":["7.1"],"compositor":["7.1","152.18"],"的帧率":["7.2"],"也就是目标窗口的绘制更新频率":["7.2"],"而觉得一个触屏操作是否响应即时":["7.2"],"取决于从":["7.2"],"overlap":["7.3"],"的计算":["7.3"],"减少图层树的结构变更":["7.3"],"减少图层内容的变更":["7.3"],"目前":["7.3"],"网页内容的变更是以图层为原子单位的":["7.3"],"如果以一个元素为根节点生成图层":["7.3"],"指令实际上指定了坐标":["7.4"],"大小":["7.4"],"变换矩阵等属性":["7.4"],"所有的":["7.4"],"指令和对应的":["7.4"],"对目标窗口进行贴图":["7.5"],"这些":["7.5"],"绘图指令的集合就构成了一个":["7.5"],"一类是合成器动画":["7.6"],"一类是非合成器动画":["7.6"],"uc":["7.6"],"内部也将其称为内核动画":["7.6"],"虽然这不是":["7.6"],"官方的术语":["7.6"],"合成器动画顾名思义":["7.6"],"属性的动画基本上都可以由合成器运行":["7.7"],"因为它们没有改变图层的内容":["7.7"],"不过即使可以交由合成器运行":["7.7"],"它们也需要产生一个新的":["7.7"],"可能有很多后台任务在运行":["7.8"],"而且操作系统本身也可能同时运行其它后台任务":["7.8"],"并且移动平台要考虑能耗和散热":["7.8"],"cpu":["7.8","7.11"],"gpu":["7.8"],"的调度策略会频繁地发生变化":["7.8"],"要完全锁定":["7.8"],"帧是非常困难的":["7.8"],"如果上限超过":["7.8"],"实际平均帧率超过":["7.8"],"反而不难":["7.8"],"但是如果上限是":["7.8"],"垂直同步下要锁定":["7.8"],"已经完成的任务":["7.9"],"会转交给对应的分块":["7.9"],"实际的光栅化区域会比当前可见区域要更大一些":["7.9"],"一般是增加一个分块大小单位":["7.9"],"对不可见区域的预光栅化有助于提升合成器动画的性能和减少出现空白的几率":["7.9"],"如果没有则跳过":["7.10"],"接受到新的":["7.10"],"后":["7.10"],"对":["7.10","115.0","154.20"],"进行":["7.10","166.8","173.51"],"render":["7.10","89.5","179.37","195.8","206.2","222.4"],"将每一个":["7.10"],"命令转换成一个":["7.10"],"worker":["7.11","19.12","102.2"],"renderer":["7.11","7.14","219.6"],"线程阻塞":["7.11"],"但是在真实的运行场景中":["7.11"],"移动设备的":["7.11"],"和内存带宽等硬件资源是有限的":["7.11"],"操作的调度器":["7.12"],"如果检查到动画正在运行":["7.12"],"则停止加载或者通过节流阀机制降低加载的并发数量和频率":["7.12"],"同时可以通过事先生成相应的":["7.12"],"节点和图层作为占位符来避免加载后的图层结构发生剧烈变化":["7.12"],"非合成器动画性能分析和优化指南":["7.12"],"前面已经我们已经把非合成器动画区分为":["7.12"],"出现空白是被允许的":["7.13"],"这样浏览器可以更好地保证合成器动画的帧率":["7.13"],"但是在非合成器动画中出现空白是不被允许的":["7.13"],"因为新的":["7.13"],"常常会带来大面积的变更":["7.13"],"如果允许空白的话可能会出现非常不好的视觉效果":["7.13"],"这样就导致合成器需要使用两棵图层树来构建一个类似双缓冲的机制":["7.13"],"树在后台完成可见区域的光栅化时才被允许同步到":["7.13"],"在非合成器动画过程中":["7.13"],"main":["7.13","61.8","70.0","101.3","107.2","109.6"],"frame":["7.13","126.8"],"n":["7.13","27.1","52.7","59.1","100.1","106.11","127.23","173.48","179.30","227.1","241.1","241.10"],"并不会在":["7.14"],"线程调用真正的":["7.14"],"在":["7.14","64.12","70.0","81.2","86.3","87.42","122.15","133.7","152.8","152.21","162.0","178.8"],"部分的耗时只是一个":["7.14"],"js":["7.14","19.3","25.8","62.1","67.6","77.1","87.2","87.12","87.14","87.21","96.1","98.4","99.20","102.4","139.4","142.13","152.7","175.16","176.17","178.7","184.27","186.3","209.14","243.15","254.17","279.4","296.3"],"binding":["7.14"],"调用的":["7.14"],"overhead":["7.14"],"最终绘制":["7.14"],"服务器可以发送带有响应的set":["8.2"],"记录和分析用户行为":["8.3"],"localstreage":["8.5"],"sessionstorage":["8.7","95.46","179.40"],"中保存":["8.9"],"亦可再次封装来对object和array有更好的支持":["8.10"],"因为更大总是更好的":["8.11"],"哈哈哈你们懂得":["8.11"],"localstorage和sessionstorage唯一的差别一个是永久保存在浏览器里面":["8.11"],"sessionstroage是客户端存储的":["8.12"],"顺便说一句":["8.12"],"也就是说":["8.15","50.2","50.5","173.20","173.31","173.44"],"只有同一浏览器":["8.15"],"同一窗口的同源文档才能共享数据":["8.15"],"为了更好的理解sessionstorage":["8.15"],"我们来看个例子":["8.15"],"moment":["9.1","21.10","21.17"],"几秒钟后":["9.1"],"选择某个代码片段":["10.1"],"或者代码段":["10.2"],"allcolorssorted":["10.4"],"for":["10.4","69.10","87.5","114.29","125.9","127.24","153.5","153.6","174.16","181.0","190.6","220.3","221.4","222.4","235.4","236.1","236.2","236.6","236.7","241.9","251.2","256.4","256.5"],"i":["10.4","83.4","97.20","97.33","97.38","144.6","149.4","153.5","153.6","153.7","174.16","174.56","179.56","181.0","221.4","236.2","275.2","282.2","286.58"],"hexvalue":["10.4"],"key":["10.4","10.5","52.5","96.3","97.22","125.9","127.24","153.5","153.6","153.7","178.3","195.2","216.4","221.1","236.6","252.5"],"value":["10.4","10.5","19.13","21.7","52.5","64.15","64.19","65.21","103.6","103.14","156.13","205.14","222.6","241.8","286.16","286.48","288.2"],"sort":["10.4","156.14"],"match":["10.5","10.7","69.10","127.39","175.10","179.44"],"return":["10.5","20.10","57.7","62.10","95.40","98.13","99.14","101.5","130.4","131.1","131.2","131.3","131.4","131.5","131.6","131.11","141.4","147.4","153.5","156.2","156.20","159.2","166.5","166.6","166.9","173.69","174.4","178.2","179.55","179.63","195.7","204.1","204.6","205.14","205.15","205.16","208.4","208.5","208.16","210.0","212.1","222.4","231.3","241.9","242.1","245.3","248.0","249.1","256.6","286.2","286.8","286.14","286.63","287.4","290.1"],"tokenize":["10.6"],"token":["10.6","166.8","175.21"],"rest":["10.6","72.2","283.4","283.11"],"delete":["10.6","97.13","216.4"],"inside":["10.6","195.9"],"lookbehind":["10.6"],"pattern":["10.6"],"instanceof":["10.6","98.9","131.10"],"lastindex":["10.6"],"exec":["10.6","283.4"],"index":["10.6","87.38","97.10","114.11","121.5","127.49","138.38","153.5","153.6","153.7","154.12","154.16","170.14","181.0","200.10"],"y":["10.6","61.13","94.3","106.51","130.8"],"splice":["10.6","111.2","166.9"],"apply":["10.6","20.12","99.12","106.27","173.16","173.68","181.0","288.3"],"all":["10.6","75.5","75.7","154.12"],"add":["10.6","64.2","71.6","74.2","127.16","129.6","156.2","166.7","216.4"],"math":["10.7","53.12","127.26","167.4","195.4","279.8"],"random":["10.7","167.4","279.8"],"hashmatches":["10.7"],"url":["10.7","10.11","86.2","92.0","95.45","96.14","98.6","103.17","106.24","112.4","127.12","139.3","167.1","175.6","177.13","275.2","286.44","286.45"],"test":["10.7","62.15","81.4","86.8","97.36","109.6","129.6","132.3","132.4","133.3","154.1","154.8","241.4","286.2","286.58"],"control":["10.8","99.9","175.3","175.10","175.12"],"call":["10.8","20.12","89.5","173.68","176.5","177.6","179.28","256.6","286.69","292.2","293.2"],"node":["10.8","19.3","64.4","64.12","97.52","97.61","99.7","114.24","144.1","154.1","154.4","174.33","177.9","186.3","218.4","232.2","235.4","254.10","275.2"],"push":["10.8","53.5","53.8","55.1","55.2","64.8","64.21","64.22","69.13","70.0","110.2","115.0","119.11","132.1","153.5","153.6","153.7","173.99","174.8","174.25","174.37","179.13","179.55","179.62","220.2","231.5","231.6","256.6","286.12","286.31","286.37"],"min":["10.9","92.0","106.35"],"addeventlistener":["10.9","98.7","99.16","101.5","127.54","204.3"],"load":["10.9","99.20","126.6","126.8","152.20"],"helper":["10.10"],"navigationtypes":["10.11"],"type":["10.11","19.6","21.15","23.93","64.12","69.10","89.5","95.16","100.9","106.14","106.17","151.9","179.25","204.3","205.17","232.3","286.47"],"navigatenext":["10.11"],"started":["10.11"],"by":["10.11","76.3","152.2","175.8","206.2"],"clicking":["10.11"],"on":["10.11","70.0","126.5","195.8","218.4","218.8","219.6","232.2","234.2","248.1","249.0"],"a":["10.11","100.3","114.15","114.29","134.3","140.4","141.3","148.4","173.93","175.5","175.12","184.32","206.16","218.4","218.5","221.3","222.12","232.2","248.1","256.8","275.2","284.42","284.83","295.1"],"link":["10.11","99.6","143.5"],"or":["10.11","148.3","206.5","206.8","221.3","241.1","241.10"],"entering":["10.11"],"the":["10.11","68.11","69.10","114.29","130.9","148.1","151.5","173.98","175.8","216.4","218.4","222.4","232.2","241.1","241.10","243.1","248.0","252.3"],"in":["10.11","125.9","148.2","174.29","214.3","219.3","221.1","243.1","275.2","283.1","283.2"],"user":["10.11","27.7","148.3","206.8"],"agent":["10.11","27.7"],"address":["10.11"],"bar":["10.11","97.50","236.6"],"form":["10.11","286.47"],"submission":["10.11"],"reload":["10.11","235.4"],"through":["10.11","236.6"],"operation":["10.11","225.4"],"if":["10.12","52.6","52.12","52.17","55.4","55.5","62.12","62.13","64.17","64.21","64.22","88.2","95.42","112.4","131.7","138.34","153.12","159.9","162.2","173.21","173.69","173.94","174.21","174.29","175.10","178.2","179.44","195.7","204.6","222.5","241.7","283.3","286.31","286.37","286.38","286.72","295.1"],"pretty":["10.13"],"decodeuricomponent":["10.13"],"replace":["10.13","88.2","96.5"],"g":["10.13","85.1","144.6","214.2","256.4","275.2","295.8"],"key还不一样":["10.14"],"之前写了一个笨方案":["10.14"],"就是自己枚举了某个版本window的所有key":["10.14"],"blog":["10.14"],"csdn":["10.14"],"net":["10.14","64.13"],"kinghzking":["10.14"],"article":["10.14","172.0"],"details":["10.14"],"接下来我们就来学习一下关于这方面的":["11.1"],"图片":["11.2","11.7","23.65","25.7","47.8","65.6","65.32","77.3","77.5","99.6","110.2","121.2","121.3","121.9","151.6","265.3"],"可以从上图中看到":["11.2"],"当点击这个选项的时候":["11.3"],"代码":["11.4","64.2","179.37"],"其实不光可以给":["11.4"],"事件被添加了":["11.5"],"在具体什么位置还要去找啊":["11.6"],"不用急":["11.6"],"马上我就可以解决这个问题":["11.6"],"很浪费时间":["11.7"],"那么通过这个小技巧我们就可以圆满解决这个问题":["11.7"],"首先我们先右键断点":["11.7"],"然后选择":["11.7"],"ctrl":["12.0","75.3"],"到指定的位置":["13.0"],"可以使它出现":["15.0"],"global":["16.0","116.2","143.9","143.10","236.1"],"hook":["16.0","97.1","97.40","97.42","99.18","216.2","236.5"],"来查找":["17.0"],"而在":["17.0"],"保存为全局变量":["18.0"],"选项":["18.0"],"第一次使用的话":["18.0"],"它会创建一个名为":["18.0"],"冒泡":["19.2"],"false":["19.2","57.7","96.14","97.19","97.53","127.15","127.29","130.7","130.8","131.3","131.11","154.5","154.10","154.17","156.4","156.10","159.5","159.13","173.94","176.2","177.6","178.4","184.8","195.4","195.9","204.6","208.3","217.7","219.3","224.0","225.0","231.1","252.5","285.7","286.51"],"click":["19.3","99.11","127.54","175.7","296.2"],"event":["19.3","156.17","179.41"],"请求跨域了":["19.5"],"那么请求到底发出去没有":["19.5"],"请求必然是发出去了":["19.5"],"但是浏览器拦截了响应":["19.5"],"你可能会疑问明明通过表单的方式可以发起跨域请求":["19.5"],"为什么":["19.5","37.0","50.13"],"async":["19.6","95.45","103.10","141.2","173.30","178.4","216.2","219.6"],"true":["19.6","57.6","62.17","65.29","73.0","89.13","95.23","97.17","97.32","98.13","127.16","127.17","131.3","133.4","147.4","154.12","156.19","166.9","173.94","177.6","179.29","188.0","195.4","230.2","231.1","235.4","249.1","256.1","283.8","285.6","286.23","286.51","286.61"],"text":["19.6","95.25","106.4","177.10","241.1","241.8","241.10","282.2"],"javascript":["19.6","21.2","69.10","140.3","145.6","152.17","169.3","173.70","199.4"],"window":["19.6","24.5","99.16","126.2","127.16","147.0"],"origin":["19.7","61.13","175.21","275.2"],"就可以开启":["19.7"],"该属性表示哪些域名可以访问资源":["19.7"],"www":["19.8","23.88","107.4","172.0","175.6","286.64"],"urlencoded":["19.8"],"请求中的任意":["19.8"],"credentials":["19.9"],"该请求会验证你的":["19.9"],"字段":["19.9","87.3"],"没有的话就会报错":["19.9"],"当前端发起了复杂请求后":["19.9"],"你会发现就算你代码是正确的":["19.9"],"返回结果也永远是报错的":["19.9"],"因为预检请求也会进入回调中":["19.9"],"只需要给页面添加":["19.10"],"originalevent":["19.11"],"我们还需要注意安全性":["19.13"],"属性":["19.13","122.21","180.0"],"作用":["19.13","175.10"],"如果用于保存用户登录态":["19.13"],"应该将该值加密":["19.13"],"不能使用明文的用户标识":["19.13"],"only":["19.13","65.28","65.32","206.8","231.1","236.7"],"addall":["19.14"],"拦截所有请求事件":["19.14"],"如果缓存中已经有请求的数据就直接用缓存":["19.14"],"否则去请求数据":["19.14"],"fetch":["19.14","99.14","99.23","195.4"],"respondwith":["19.14"],"然后到变量环境":["20.2"],"在上下文之间":["20.2"],"通过outer变量访问下一级上下文":["20.2"],"直到全局上下文结束":["20.2"],"声明部分":["20.3"],"函数上下文会被销毁":["20.4"],"eval执行上下文":["20.4"],"当入栈的执行上下文超过一定数量":["20.5"],"就会报":["20.5"],"只能在函数内部访问":["20.6"],"全局作用域":["20.6"],"词法环境对应块作用域":["20.8"],"函数上下文对应函数作用域":["20.8"],"this指向全局window或undefined":["20.12"],"严格模式":["20.12"],"隐式绑定":["20.12"],"点调用":["20.12"],"this指向点前面的对象":["20.12"],"上面的例子就是这种情况":["20.12"],"显示绑定":["20.12"],"通过call":["20.12"],"bind三个方法绑定":["20.12"],"如foo":["20.12"],"new绑定":["20.12"],"在new构造函数的过程中绑定":["20.12"],"关于this绑定规则可以参考我的另一篇文章":["20.12"],"我将会写一篇输入url到浏览器后":["21.1"],"从操作系统到http响应的详细过程":["21.1"],"执行":["21.2","98.7","108.1","108.3","140.3","144.1","173.32","206.15","217.0","220.6","222.2","259.3"],"代码时":["21.2"],"我们将会在后面的内容中讲到":["21.3"],"解释器ignition会将ast解释成bytecode字节码":["21.3"],"在解释执行字节码的过程中":["21.3"],"如果发现了某一段代码会被重复多次执行":["21.3"],"那么会将这段代码标记为热点代码":["21.3"],"当某段代码被标记为热点代码后":["21.3"],"就会将这段字节码交给给优化编译器":["21.3"],"通过优化编译生成intel":["21.5"],"arm":["21.5"],"这样的条件跳转语句":["21.6"],"可以使用带有三个分支的节点来表示":["21.6"],"和抽象语法树相对的是具体语法树":["21.6"],"通常称作分析树":["21.6"],"keyword":["21.7","65.18"],"identifier":["21.7","64.12"],"react真好玩":["21.8"],"要执行这段代码":["21.8"],"执行栈会创建一个函数的执行上下文":["21.8"],"函数执行上下文":["21.9"],"每个函数都拥有自己的执行上下文":["21.9"],"javascript引擎执行当前执行上下文位于堆栈顶部的函数":["21.11"],"当这个函数完成时":["21.11"],"ref":["21.14","217.7","250.3","251.2"],"to":["21.14","68.11","69.10","99.12","103.12","148.4","151.4","159.2","173.98","179.54","218.8","219.10","236.7","241.1","241.10"],"lexicalenvironment":["21.15"],"environmentrecord":["21.15"],"object":["21.15","64.17","178.3","178.8","181.0","204.6","221.3","236.4","248.1","251.0"],"剩余标识符":["21.15"],"另外声明式环境记录项的特性允许使用完整的词法寻址技术":["21.16"],"无需任何作用域链查找即可直接访问所需的变量":["21.16"],"声明式环境记录除了支持可变绑定之外":["21.16"],"还提供不可变绑定":["21.16"],"不可变绑定是一种标识符和值之间的关联一旦建立就不能修改的绑定":["21.16"],"foo":["21.17","97.50","106.6","127.16","236.6","285.13"],"referenceerror":["21.17"],"cannot":["21.17","214.2","222.7"],"access":["21.17","99.9"],"词法作用域就是定义在词法阶段的作用域":["21.18"],"换句话说":["21.18","115.0"],"词法作用域是由你在代码时将变量和快作用域写在哪里决定的":["21.18"],"作用域一旦确定便不会再修改了":["21.19"],"o设备已经完成任务呢":["22.1"],"比如说怎么知道i":["22.1"],"o设备已经读取完一个文件的数据呢":["22.1"],"cpu会不断查询i":["22.1"],"o设备是否已经准备好":["22.1"],"内存":["22.3"],"这里需要注意":["22.4"],"存储器既能存储数据":["22.4"],"看看计算机内部":["22.6"],"其它的mq":["22.8"],"ir":["22.9"],"指令寄存器":["22.9"],"mar就根据取数指令里的地址吗去存储体里去数据":["22.11"],"第八步":["22.11"],"取出的数据返回给mdr":["22.11"],"存放数据的地方":["22.11"],"第九步":["22.11"],"mdr里的数据放到运算器的寄存器里":["22.11"],"得到c":["22.12"],"17意思是将寄存器里的数据存到存储体17号单元内":["22.12"],"最后":["22.12","184.17"],"但是在v8引擎中":["22.13"],"js还是要被优化的":["22.13"],"在编译阶段":["22.13"],"代码分编译和执行两个阶段":["22.13"],"等于0":["22.14"],"上图的规则是什么呢":["22.15"],"二进制的每个数去乘以2的相应次方":["22.15"],"再将7除以2":["22.16"],"商为3":["22.16"],"余数为1":["22.16"],"再将3除以2":["22.16"],"又得到一个积":["22.17"],"再将积的整数部分取出":["22.17"],"就这样推下去":["22.19"],"比例因子是10":["22.21"],"或者10":["22.21"],"2345不满足尾数的格式":["22.22"],"需要改成0":["22.22"],"这些名词大家感兴趣的话":["22.23"],"可以去网上查询":["22.23"],"那么我就把就近的数据块a":["22.24"],"全部存到缓存上多好":["22.24"],"这样只需要取一次数据":["22.24"],"消耗1000ns":["22.24"],"cahce就是局部性原理的一个应用":["22.24"],"空间局部性":["22.24"],"就是典型的i":["22.26"],"o操作":["22.26"],"所以会频繁中断cpu":["22.27"],"为了解决这个问题":["22.27","97.40"],"高速外设跟主存之间用一条直接数据通路":["22.27"],"dma总线连接":["22.27"],"o设备工作":["22.28"],"以及这两种网络最重要的区分点":["23.1"],"局域网基于广播技术":["23.1"],"广域网基于分组交换技术":["23.1"],"1兆每秒":["23.3"],"比如说你家的电信网络是100兆比特":["23.4"],"接口":["23.5"],"这不能说带宽多少吧":["23.6"],"于是就用吞吐量表示具体时间通过的量有多少":["23.6"],"或链路":["23.7"],"的一端传送到另一端所需的时间":["23.7"],"到说话结束这段时间":["23.8"],"到最后一个比特达到主机接口需要的时间就是传播时延":["23.9"],"排队时延的长短往往却决于网络当时的通信量":["23.10"],"当网络的通信量很大时会发生排队溢出":["23.10"],"查找路由表为数据包选定准发接口":["23.11"],"这就产生了处理时延":["23.11"],"到发送方收到来自接收方的确认":["23.12"],"接受方收到数据后便立即发送确认":["23.12"],"主要负责的是数据通信":["23.14"],"物理层更多的是规定一种标准":["23.16"],"他并不管物理介质具体是什么":["23.16"],"就不管你用什么材料了":["23.17"],"当然还有其它特性":["23.17"],"因此光纤通信系统的带宽远远大于其它各种传输媒体的带宽":["23.18"],"所以我们计算机传输数据需要先把电信号转为光信号":["23.18"],"什么叫不同的网段呢":["23.20"],"需要在网络层学习ip分类之后才能够理解这个概念":["23.20"],"一共送了5个文件":["23.22"],"并且写到了快递外层":["23.22"],"b公司小秘在拿到傻子送到的文件时":["23.22"],"在链路层就叫数据帧":["23.24"],"这个问题有没有类似js的转义字符的问题":["23.25"],"比如字符串":["23.25"],"我自己也不甚了解":["23.26"],"只知道链路层的帧":["23.26"],"并且能通过重新发送没有的文件来纠正":["23.27"],"以及选择重传协议":["23.28"],"这两个留在讲tcp的时候讲":["23.28"],"cd的媒体接入方法":["23.29"],"后面会介绍":["23.29"],"其最后面是crc循环冗余码":["23.30"],"用于差错控制":["23.30"],"即检验帧的正确性":["23.30"],"在以太网协议中":["23.30"],"接收方不向发送方进行确认":["23.31"],"需要注意的是":["23.34","87.28","106.33","175.13","260.1"],"以及编码和译码":["23.35"],"编码译码我不太理解":["23.35"],"如果是不同基站的移动设备":["23.36"],"不仅仅要通过自己的基站传输数据":["23.36"],"半双工是指允许数据在两个方向上传输":["23.37"],"但是":["23.37","32.2","144.1","181.0"],"网段是什么呢":["23.39"],"我这里简单介绍一下":["23.39"],"具体要到讲ip地址的时候细说":["23.39"],"然后交换机再连接到路由器上":["23.40"],"首先路由器能隔离广播域":["23.40"],"其次不经过路由器":["23.40"],"你的数据链路层上的包没办法进入到互联网里面去":["23.40"],"这种小块就称作分组":["23.42"],"同时还具有无需建立连接":["23.44"],"存储转发":["23.44"],"存储转发是指以太网交换机的控制器先将输入端口到来的数据包缓存起来":["23.44"],"先检查数据包是否正确":["23.44"],"比如你的写了一句微信":["23.45"],"你好":["23.45"],"数据":["23.46","175.4"],"生存时间是ttl":["23.46"],"它告诉网络":["23.46"],"数据包在网络中的时间是否太长而应被丢弃":["23.46"],"每经过一个路由器减一":["23.46"],"don":["23.48","148.3","215.2"],"t":["23.48","83.1","84.4","95.46","113.6","148.3","156.6","180.1","215.2","222.4","241.1","241.10","245.3","250.3","286.9"],"fragment":["23.48","212.1","214.3","232.3","236.7"],"意思是":["23.48"],"第一行":["23.50"],"全一":["23.50"],"代表是255":["23.50"],"在本网络的目的地址写这个的话":["23.50"],"就会内网广播":["23.50"],"第二行":["23.50"],"网络号特定值":["23.50"],"主机号是全0":["23.50"],"比如":["23.50","39.3","46.3","87.14","106.4","106.23","106.24","106.25","106.26","106.42","154.11"],"它们无法跟外网通信":["23.51"],"这个时候由于路由器安装了nat软件":["23.51"],"就可以将自己的ip地址":["23.51"],"即路由器的ip地址172":["23.51"],"也就是目的地址145":["23.52"],"10跟子网145":["23.52"],"0的子网掩码255":["23.52"],"0的与预算":["23.52"],"得到的结果是145":["23.52"],"此arp请求数据包里包括源主机的ip地址":["23.54"],"硬件地址":["23.54"],"以及目的主机的ip地址":["23.54"],"网络中所有的主机收到这个arp请求后":["23.54"],"会检查数据包中的目的ip是否和自己的ip地址一致":["23.54"],"如果不相同就忽略此数据包":["23.54"],"windows用户可能知道网卡配置里面":["23.55"],"由自动获取ip的功能":["23.55"],"如果丢包了":["23.57"],"ip协议并不能通知传输层是否丢包以及丢包的原因":["23.57"],"只能丢弃了":["23.58"],"以下是4种常见的icmp差错报告报文":["23.58"],"从上图可以看到":["23.59"],"输出端口是做的输入端口的逆过程":["23.59"],"将网络层的数据包转换为链路层的数据帧":["23.59"],"最后转为物理层的比特流":["23.59"],"输入和输出端口需要注意的是":["23.59"],"它们都有一个缓冲队列":["23.59"],"而且时间延迟比较大":["23.60"],"适用于大文件传输":["23.60"],"分别启动了a服务和b服务":["23.61"],"它们监听同一个端口":["23.61"],"也就是说如果网络堵塞":["23.63"],"udp不管那么多":["23.63"],"照样按照自己的速率发数据":["23.63"],"那有些人就会说":["23.63"],"这协议是不是有点坑b":["23.63"],"路都堵上了":["23.63"],"10b":["23.64"],"16位udp校验和":["23.64"],"是用来校验首部和数据有错误":["23.64"],"接收缓存是一个准备接收的队列":["23.65"],"tcp面向字节流":["23.65"],"如下图":["23.65"],"我们解释一下什么是面向字节流":["23.65"],"3个字节组成的数据包":["23.66"],"然后接收方就会发送一个确认报文给发送方":["23.66"],"其中确认报文的确认号就应该是4":["23.66"],"fin":["23.67","50.14"],"置1时表示发端完成发送任务":["23.67"],"用来释放连接":["23.67"],"确认收到了发送方的包":["23.68"],"并且会设一个seq序号":["23.68"],"也为一个随机数":["23.68"],"小写ack是确认号":["23.68"],"跟上面的v是一个意思":["23.69"],"为什么不都是v呢":["23.69"],"因为这一步和上一步中间可能还在发数据呢":["23.69"],"所以seq这个数据发送的字节流序号可能要变":["23.69"],"客户端接收到fin":["23.69"],"1的报文之后":["23.69"],"返回确认报文":["23.69"],"也可以发送一些数据给对方后":["23.70"],"再发送fin报文给对方来表示同意现在关闭连接":["23.70"],"因此":["23.70","46.4","50.8","99.9","173.1","173.28","173.31","173.81","177.0","177.14","181.0"],"不能保证传输的可靠性":["23.71"],"如果已经建立了连接":["23.71"],"但是客户端突然出现故障了怎么办":["23.71"],"tcp保活计时器":["23.71"],"syn洪泛":["23.72"],"攻击":["23.72"],"如果攻击者伪造了成千上万的握手报文":["23.72"],"携带了1k":["23.72"],"字节的数据":["23.72"],"而接收方会开辟大量的缓存来容纳这些巨大数据":["23.72"],"有了序号":["23.73"],"就能保证数据是有序的传入应用层":["23.73"],"确认":["23.73"],"发送方在收到接收方的确认包之后":["23.73"],"发送方一般不能再发送数据报":["23.75"],"但有两种情况除外":["23.75"],"一种情况是可以发送紧急数据":["23.75"],"这里我文字版和视频地址都放上来":["23.76"],"注意拥塞窗口与发送方窗口的区别":["23.77"],"拥塞窗口只是一个状态变量":["23.77"],"实际决定发送方能发送多少数据的是发送方窗口":["23.77"],"为了便于讨论":["23.77"],"时":["23.78","87.24","115.0","144.1","179.33"],"进入拥塞避免":["23.78"],"每个轮次只将":["23.78"],"注意到此时直接进入拥塞避免":["23.79"],"慢开始和快恢复的快慢指的是":["23.79"],"的设定值":["23.79"],"最后就是进程如何":["23.81"],"什么时候把传输层的数据交给应用层":["23.81"],"第二种是p2p模型":["23.82"],"每个主机既可以提供服务":["23.82"],"和长连接方式":["23.83"],"long":["23.83","99.3"],"有效的传输仅占2":["23.84"],"这个利用率太低了":["23.84"],"域名是不能加入网络包报头的":["23.86"],"所以就需要去找一个服务器问":["23.86"],"其中包含有该主机名对应的ip地址":["23.87"],"一旦该浏览器收到来自dns的ip地址":["23.87"],"就可以向该ip地址定位的http服务器发起tcp连接":["23.87"],"因特网提供的服务一般包括有":["23.88"],"万维网":["23.88"],"服务":["23.88"],"电子邮件服务":["23.88"],"outlook":["23.88"],"远程登录":["23.88"],"以及服务器怎样把文档传送给浏览器":["23.89"],"not":["23.90","106.35","127.35","214.1","219.3","236.4","236.7","275.2"],"ok和http":["23.90"],"ok中原因短语的含义不同":["23.90"],"但同样都会被当作成功指示处理":["23.90"],"头部":["23.90"],"header":["23.90","25.1","172.0"],"告诉服务器能够发送哪些媒体类型":["23.91"],"告诉服务器能够发送哪些编码方式":["23.91"],"language":["23.91","195.4"],"对此资源来说":["23.92"],"服务器可接受的范围类型":["23.92"],"set":["23.92","25.7","125.9","222.4","225.4","275.2"],"length":["23.93","95.46","99.14","127.49","159.9","173.94","221.4","236.2","256.4","256.5","286.72","291.2"],"主体的长度":["23.93"],"html文档电子邮件":["23.94"],"域名":["24.1","175.16"],"在服务器上使用nginx代理":["24.3"],"这样开发过程中彼此都方便":["24.3"],"效率也高":["24.3"],"而是":["24.4","175.22"],"返回一段调用某个函数的":["24.4"],"domain":["24.5","175.16","181.0"],"基础域名相同":["24.5"],"子域名不同":["24.5"],"name":["24.5","61.5","62.10","64.17","70.0","122.21","122.22","142.10","154.7","154.13","173.39","205.17","214.3","286.46"],"利用在一个浏览器窗口内":["24.5"],"载入所有的域名都是共享一个window":["24.5"],"cors":["24.5"],"allow":["24.6","99.9"],"那你一定知道":["25.1"],"filename":["25.2","25.3","87.12","154.7","154.12"],"chunge":["25.3"],"json":["25.3","77.4","87.3","87.15","87.18","87.25","87.31","87.32","87.35","94.8","98.7","99.14","152.30","175.12","178.7","230.2","285.5","286.15"],"contentdispositionnofilename":["25.3"],"浏览器缓存":["25.4","177.11"],"上":["25.4","178.1","178.2"],"是被发明出来优化用户体验的":["25.4"],"响应头即可":["25.5"],"强缓存":["25.5","175.10"],"有些资源文件":["25.5"],"几乎不会发生变化":["25.5"],"比如已经":["25.5"],"hash化命名的文件":["25.5"],"则可以直接从本地缓存获取":["25.5"],"这就是所谓的":["25.5","31.5"],"通过":["25.5","68.13","97.41","98.9","100.7","104.0","106.38","109.6","112.4","113.6","156.11","177.13","181.0","243.15","245.1"],"凡是":["25.6"],"的响应头吗":["25.7"],"那么浏览器只会在":["25.8"],"环境产生和发送":["25.8"],"禁用":["25.8","97.2"],"操作":["25.8"],"api":["25.8","72.2","89.5","97.50","98.3","103.16","151.13","175.6","193.10","219.15","236.1"],"httponly":["25.8"],"和上一次":["25.9"],"登录的你":["25.9"],"并非同一人":["25.9"],"如果你正处于":["25.9"],"环境":["25.9"],"那你可能需要暂时移除":["25.9"],"下":["26.1"],"加入":["26.1","195.7"],"ssl":["26.1"],"的耗电":["26.2"],"缓存不如":["26.2"],"高效":["26.2"],"会增加数据开销":["26.2"],"链接的安全等级":["26.4"],"也就是加密等级":["26.4"],"客户端浏览器通过双方协商一致的安全等级":["26.4"],"是无状态的":["26.5"],"https协议是由ssl":["26.5"],"次请求":["27.1"],"两者不相同且都大于":["27.1"],"服务器上资源的状态一致":["27.1"],"比如注册":["27.1"],"个和":["27.1"],"url有长度限制":["27.2"],"会影响":["27.2"],"请求":["27.2","102.0","162.0","175.18"],"代理服务器相关信息":["27.5"],"transfer":["27.5"],"encoding":["27.5"],"比较标记":["27.7"],"客户端信息":["27.7"],"向代理服务器发送验证信息":["27.9"],"server":["27.9","114.29","115.0","219.6"],"range":["27.11"],"内容的位置范围":["27.11"],"resumption":["27.12"],"减少到一个":["27.12"],"如果将秘钥通过网络的方式传递的话":["27.13"],"那么客户端也就知道公钥了":["27.14"],"接下来客户端创建一个秘钥":["27.14"],"以上说明的都是":["27.15"],"协议的握手情况":["27.15"],"的":["28.1","87.3","87.14","111.4","171.0","173.9","186.3","208.4","208.7","260.0"],"因此都会有":["28.1"],"带来的硬伤以及局限性":["28.1"],"前向安全和前向纠错":["28.2"],"表示请求错误":["29.1"],"服务器必须在请求完成后向客户端发送一个最终响应":["29.2"],"服务器根据客户端的请求切换协议":["29.2"],"无内容":["29.3"],"服务器成功处理请求":["29.3"],"但没有返回任何内容":["29.3"],"get":["29.4","64.17","95.45","175.18","206.1","223.0","225.4","250.1","286.45"],"请求来检索响应时":["29.4"],"服务器返回此代码":["29.4"],"无法使用请求的内容特性响应请求的网页":["29.5"],"需要代理授权":["29.5"],"此状态代码与":["29.5"],"网关超时":["29.6"],"但是没有及时从上游服务器收到请求":["29.6"],"接收方收到数据包后":["30.1"],"先进行crc校验":["30.1"],"提高自己的博弈水平":["31.1"],"在工作和生活中":["31.1"],"我们常说的复盘":["31.1"],"就是把已经发生的事情":["31.1"],"是为了做更好的自己":["31.2"],"这种思想在各行各业都是适用的":["31.3"],"所谓吃一堑长一智":["31.3"],"或者在商业上我们会对公司的优势进行分析":["31.4"],"这个时候":["31.4"],"我们产出了一套标准的金额处理方法在团队里推广":["31.5"],"这就避免了相同的问题在未来再次出现":["31.5"],"可以看到":["31.5","41.4","41.5","137.0"],"这样体系化的知识":["31.5"],"如果不跳出自己的固定视角去分析":["31.5"],"在事后予以梳理和重新学习":["31.5"],"在当时是很难发现的":["31.5"],"他当时为何要那样做":["31.7"],"避免下次出现同样的错误":["31.8"],"而阅读成功者的传记":["31.8"],"把故障中每个人的关键动作记录在案":["31.9"],"几乎是以福尔摩斯的抽丝剥茧":["31.9"],"产出故障报告":["31.9"],"都要强迫自己从当局者变成旁观者":["31.10"],"最重要的是把这些措施执行下去":["31.11"],"另外":["31.12","41.0","121.7"],"个人复盘的内容":["31.12"],"日记":["31.14"],"拿出来照着念一遍":["31.14"],"如果要做复盘":["31.15"],"请把":["31.15"],"自我":["31.15"],"复盘本身不是目的":["31.16"],"由复盘产生行动":["31.16"],"由行动产生我们想要的结果":["31.16"],"这才是":["31.16"],"那么有哪些是运气的成分":["31.17"],"如果这些成分没了":["31.17"],"我还能成功吗":["31.17"],"我该如何避免这种不确定性":["31.17"],"这也是一种复盘":["31.18"],"第三":["31.18"],"丰田公司的精益制造中":["31.18"],"向大佬提问":["32.1"],"大佬":["32.1"],"在不":["32.1"],"问你个问题":["32.1"],"在框架":["32.1"],"中":["32.1","53.6","156.26","169.3","173.12","173.81","176.2","177.4","177.7","204.3","218.2"],"sb":["32.2"],"叫你两句大佬还牛起来了是吧":["32.2"],"摆架子是吧":["32.2"],"有空去群里水就是不回我":["32.2"],"就你这垃圾":["32.2"],"拉黑删好友二连":["32.2"],"虽然":["32.2","51.6"],"现实中应该很少几率会出现最后破口大骂的情形":["32.2"],"至少":["32.2"],"jsliang":["32.2"],"还是曾见过几次的":["32.2"],"为那几个大佬默哀几秒":["32.2"],"当然":["32.2","37.1","41.8","43.7","44.4","104.0","127.28"],"今天不是来讲这个的":["32.2"],"此处略去不表":["32.2"],"谈谈自己关于这则故事的观点":["32.2"],"不回答你的问题":["32.3"],"对其他人没有任何损失":["32.3"],"准确描述一件事情":["32.3"],"是一项基本生存技能":["32.3"],"推动业务增长":["33.1"],"他非常关心软件的运行状况":["33.1"],"因为只有在软件系统运行起来后":["33.1"],"才能对外提供服务":["33.1"],"才能在用户访问的过程中":["33.1"],"解决业务问题":["33.1"],"架构师需要关注运行过程中产生的数据比":["33.1"],"如业务成功率":["33.1"],"系统运行资源占用数据":["33.1"],"用户反馈信息":["33.1"],"业务增长情况等":["33.1"],"我们基于":["33.2"],"next":["33.2","95.45","97.9","127.15","206.15","222.6","241.1","241.10","283.2"],"然后落地到技术上":["33.3"],"又能令团队满意":["33.5"],"做的项目有一定的业务理解":["34.1"],"把效果做到最佳":["34.2"],"通产构思是围绕解决用户问题进行的":["35.1"],"解决这个问题有什么过程":["35.2"],"这个问题最终的目标人群是谁":["35.2"],"解决方案的主要组成部分":["35.3"],"关键":["35.5"],"可能有什么备选方法":["36.1"],"突出问题":["36.2"],"项目筹资":["36.3"],"遇到迁移":["36.4"],"随身带着powerpoint":["36.5"],"ppt":["36.5"],"在卓越工程师那苛刻的目光中":["37.0"],"弄懂飞轮思维一定一定意味着搞懂它的why":["37.0"],"what":["37.0","173.98"],"是什么":["37.0"],"和how":["37.0"],"如何使用":["37.0"],"这就要求他":["37.0"],"她":["37.0"],"不仅能够看到现有系统":["37.0"],"计算机系统":["37.0"],"人类组织系统":["37.0"],"这个世界中各式各样的系统":["37.0"],"维持它的旋转只需要很小的力气":["37.1"],"惯性会让飞轮持续转动":["37.1"],"而且":["37.1"],"在自增强特性的加持下":["37.1"],"它会越转越快":["37.1"],"在控制论中":["37.1"],"我们把这种系统称为":["37.1"],"反馈控制系统":["37.1"],"纸面上讨论是一回事":["37.1"],"实际操作起来是另一回事":["37.1"],"在质变出现之前":["37.2"],"除了烧钱和花时间之外":["37.2"],"更需要我们时刻保持耐心和平常心":["37.2"],"水滴石穿绝非一时之功":["37.2"],"我们常说的验证商业模式":["37.2"],"其实就是最初推动飞轮的过程":["37.2"],"只有过了这个阶段":["37.2"],"飞轮正常运转之后":["37.2"],"这个公司才有可能成功":["37.2"],"作为例子":["37.2"],"笔者分享一个我们在公司里经常拿出来讨论的支付增长飞轮":["37.2"],"作为第三方支付公司":["37.2"],"我们公司的主要任务是为商户提供支付和结算服务":["37.2"],"粗暴地说":["37.2"],"衡量我们的绩效的指标只有两个":["37.2"],"在设计和推动飞轮时":["37.3"],"一定还是要回到供需关系这个本质上去思考问题":["37.3"],"亚马逊的商业飞轮":["37.3"],"本质上还是买家和卖家的供需关系":["37.3"],"我的成长飞轮":["37.3"],"本质上是生产者和消费者的供需关系":["37.3"],"不要试图让飞轮瞬间停止转动":["37.3"],"你一定会失败":["37.3"],"为什么我们定的新计划总是会失败":["37.3"],"在本文开头我说过":["37.3"],"这不是因为新的计划很难开始":["37.3"],"也不是因为我们的懒惰":["37.3"],"真正的原因在于":["37.3"],"在推动飞轮的过程中":["37.4"],"难免会遇到问题":["37.4"],"解决问题是否存在相关的风险":["38.3"],"c":["38.3","52.13","64.2","89.5","89.6","111.3","113.5","173.64","195.7","195.8","252.5"],"总结客户访问":["38.3"],"市场有没有自然的层次或者分组":["38.4"],"有利于工作流的建立":["38.4"],"围绕这个产品":["38.4"],"有哪些性能或者伸缩性需求":["38.4"],"每个客户是否有各自的特征":["38.4"],"掌握竞争对手在做什么":["38.5"],"他们产品的优缺点":["38.5"],"每一次都是上一次的升华":["38.6"],"往往就会带来不确定性":["39.1"],"我们主观以为的和客观世界实际发生的情况出现了不一致":["39.1"],"在这种不确定的情况下":["39.1"],"如果贸然一刀切":["39.1"],"说不定可能会引起更大的故障":["39.1"],"对于dba来说":["39.1"],"面对这种不确定性":["39.1"],"最好的策略就是灰度操作":["39.1"],"先切换一个分片观察一下情况":["39.1"],"如果切换后的结果符合预期":["39.1"],"再继续下一步的操作":["39.1"],"如果不符合预期":["39.1"],"此时影响和成本都是可接受的":["39.1"],"我们只需要回滚刚才的操作":["39.1"],"如果这个问题对于我们来说之前完全没有做过":["39.2"],"属于从已知走向未知的问题":["39.2"],"并不是所有的问题都可以从规模上进行拆解":["39.3"],"此时就需要对原始问题做建模了":["39.3"],"飞行器设计的过程":["39.3"],"一般都是从数学模型到缩比模型再到全尺寸模型一路走过来的":["39.3"],"研究":["39.4"],"形成":["39.4"],"关于现实世界的":["39.4"],"新的知识":["39.4"],"重新调整方案":["39.4"],"正确的方法是":["39.6"],"我们会通过白名单逐步给这个模块导入流量":["39.6"],"然后在绿机房发布新代码":["39.7"],"之后":["39.7","141.8"],"我们再以灰度切流的方式把流量从蓝机房逐渐切到绿机房":["39.7"],"jpeg":["39.8","41.0","67.3"],"对精益创业有兴趣的朋友可以阅读":["39.8"],"构图和审美有了一定的感觉":["39.11"],"觉得自己的能力受到了器材的限制时":["39.11"],"再考虑购入相机":["39.11"],"在确定了最感兴趣的几项兴趣之后":["39.12"],"直到逼近对方的底线":["39.13"],"甚至在潜移默化中将对方洗脑":["39.13"],"这个时候就可以灰度起来了":["39.14"],"总之":["39.14"],"项目经历考核":["40.1"],"你的工作内容":["40.3"],"项目亮点":["40.3"],"结果你实现了什么学到了什么":["40.3"],"有没有出现你的想法和其他人不同的情况":["40.4"],"你是如何应对的":["40.4"],"你会怎么实现":["40.5"],"需要哪些组件":["40.5"],"components":["40.5","96.1","96.5","195.7","216.6","240.1"],"第一个是pc端":["40.6"],"分为官网和中台":["40.6"],"官网我们采用vue":["40.6"],"但是我们是使用ssr服务端渲染并且是响应式的技术":["40.6"],"中台使用的是vue全家桶":["40.6"],"负责研发不同模块的技术团队":["41.0"],"也因为彼此的研发周期和风格不同而开始踩脚":["41.0"],"业务需求无法快速满足":["41.0"],"研发效率再一次达到了瓶颈":["41.0"],"抓狂":["41.0"],"现在":["41.0","163.0"],"这个巨大的单体支付系统承载了太多的东西":["41.0"],"之前那种痛苦的感觉又回来了":["41.0"],"于是在支付系统建成的第三年年末春节之前":["41.0"],"在慎重的论证":["41.0"],"一群人开会吵了一周":["41.0"],"我们要反复尝试":["41.1"],"在每次尝试之中都可以为这件事情加入一些新的挑战或者做出一些新的优化":["41.1"],"让一开始空洞而虚幻目标注入灵魂":["41.1"],"让他渐变得丰满而现实":["41.1"],"直到最后达成我们的目标":["41.1"],"这个反复而渐进的过程":["41.1"],"就是迭代过程":["41.1"],"做事时使用这样的思维方式":["41.1"],"就是迭代思维":["41.1"],"实际上":["41.1"],"迭代思维是我们的生物本能":["41.1"],"还记得小时候我们学走路时下意识表现出来的学习模式吗":["41.1"],"不妨让我们回忆一下":["41.1"],"一开始我们并不是在走路":["41.1"],"而是在爬行":["41.1"],"尝试站立":["41.1"],"哪里做的不好":["41.2"],"改进方案是什么":["41.2"],"是否需要调整既定目标":["41.2"],"检查的结果最好能形成报告":["41.2"],"更重要的是":["41.2","44.3"],"还要考虑当前的结果是否已经达到预期":["41.2"],"判读是否停止迭代":["41.2"],"在处理阶段":["41.2"],"做这个pdca文档还有如下两个好处":["41.3"],"第一":["41.3"],"有些变更操作步骤很多":["41.3"],"人脑一定是靠不住的":["41.3"],"此时这个pdca文档就是我的操作手册":["41.3"],"带入下一个pdca中去解决":["41.4"],"这是一个粗粒度的pdca循环":["41.4"],"这种周期很长而且每一个要素都比较笼统的pdca循环":["41.4"],"我把它称之为计划式的pdca循环":["41.4"],"对于计划式的pdca循环":["41.4"],"沉淀建设经验":["41.5"],"固化研发流程":["41.5"],"将优化方案带入下一个pdca循环":["41.5"],"一开始我们并没有打算要建设一个庞大复杂的系统":["41.5"],"这一点并不在我们的计划里":["41.5"],"prd":["41.6"],"也见过细节满满":["41.6"],"思考深入的技术分析文档":["41.6"],"管理者想要的东西和实际做出来的东西相去甚远":["41.7"],"本质上就是pdca循环没有执行到位":["41.7"],"这就好像灵魂和肉体完全不在一个节奏上":["41.7"],"可能是部门的同事突然拉起的会议":["41.8"],"我们聊到这里才想起来还需要找你看一下这个问题":["41.8"],"可能是业务突然插入的需求":["41.8"],"这个需求很着急":["41.8"],"业务方希望明天就要上线":["41.8"],"但是我帮你争取了三题时间":["41.8"],"也可能是锅从天降的线上故障":["41.8"],"这个故障":["41.8"],"你们得订正一下数据":["41.8"],"等等":["41.8"],"就非常适合使用ooda循环来处理一天的工作推进":["41.8"],"ooda循环本来就是为了军事对抗而发明的":["41.8"],"我的ooda循环快于你的ooda循环":["41.8"],"我能打断你的ooda循环":["41.8"],"我就能胜出":["41.8"],"对于办公室政治这种风云诡局":["41.8"],"可用结合复盘思维使用":["41.9"],"同样":["41.9"],"在ooda循环中":["41.9"],"这足以说明执行的重要性":["41.10"],"再好的计划和观察":["41.10"],"如果最后不能指导执行的话":["41.10"],"都只是没有意义的精神内耗":["41.10"],"技术卓越":["42.0"],"项目交付":["42.0"],"领导项目的软件和硬件的选择":["42.1"],"同项目的管理人员一起研究预算":["42.1"],"鼓励技术团队成员参与当地的会议和用户组":["42.2"],"能够做到不重叠":["43.1"],"不遗漏的分类":["43.1"],"强调了每项工作之间要独立":["43.2"],"有工作的":["43.3"],"无工作的":["43.3"],"是否有工作维度":["43.3"],"mece中的":["43.5"],"如果实在是想不到什么分类的切入点":["43.6"],"你可以试试最简单的一种二分法":["43.6"],"a和非a":["43.6"],"建议画出一个金字塔结构图":["43.7"],"用可视化的方式比较容易发现是否有重叠项":["43.7"],"还可以基于公司的一些特性进行其他的切入点":["43.11"],"类似于公司区分":["43.11"],"假设公司需要我对团队某个人进行评价":["43.13"],"那么我应该怎么做":["43.13"],"这属于个性特点所以在详细说明上":["43.14"],"会有不同":["43.14"],"对于抽象事务":["43.14"],"发展到今天":["43.14"],"网络信息上面已经有了很多的沉淀":["43.14"],"和分解方法":["43.14"],"所以对于切入点":["43.14"],"不要闭门造车":["43.14"],"可以百度":["43.14"],"任何一种思维工具都有其适用范围":["44.1"],"防错思维也不是万能的":["44.1"],"它只能预判并避免已知问题":["44.1"],"对于未知问题的防范":["44.1"],"人们目前能采取的手段只能是事后补救":["44.1"],"下面":["44.1"],"在深入了解":["44.1"],"防错思维":["44.1"],"a融资者的实际白名单":["44.2"],"中间值":["44.2"],"a融资者计算后计银行的供应商列表":["44.2"],"b融资者融资":["44.2"],"b融资者":["44.2"],"b融资者的实际白名单":["44.2"],"这段代码的实际运行结果如下":["44.2"],"最初时银行的供应商白名单":["44.2"],"甚至":["44.3"],"初次使用的用户压根就不知道自己会犯错":["44.3"],"这是一个典型的主动式防错设计":["44.3"],"这样的防错通过设计完成":["44.3"],"完全不需要用户感知":["44.3"],"没有对比就没有伤害":["44.3"],"通过usb接口和type":["44.3"],"c接口的例子可以看到":["44.3"],"具备防错设计的产品":["44.3"],"可以极大地提升用户体验":["44.3"],"避免不必要的错误":["44.3"],"我们还可以看到":["44.3"],"一个完整的设计实际上分为两部分":["44.3"],"对正常功能的设计":["44.3"],"正确的使用方式":["44.3"],"和对异常情况":["44.3"],"的避免的设计":["44.3"],"具有不管是谁或在何时工作都不会出差错的构造":["44.4"],"不需要专门知识与高度的技能":["44.4"],"我们还说":["44.4"],"买票的时候":["44.5"],"你必须用一只手一直扶着身份证":["44.5"],"否则你的身份证会滑落下去":["44.5"],"这样设计的目的是防止旅客把自己的身份证遗忘在售票机上":["44.5"],"说实话":["44.5"],"如果不是写这篇文章":["44.5"],"笔者都不会注意到这个防错设计":["44.5"],"可见优秀的防错设计是隐藏在设计中的":["44.5"],"在使用的过程中是完全没有感知的":["44.5"],"每次旅行前的个人物品checklist":["44.5"],"这里再补充一个笔者自己的生活防错措施":["44.5"],"每次出行前打包行李的时候":["44.5"],"笔者都会按照这个checklist进行检查":["44.5"],"避免忘记重要的物品":["44.5"],"避免服务":["44.6"],"功能被调用方误用":["44.6"],"确保服务和功能只有一种正确的使用方式":["44.6"],"因此这个阶段往往会让有多年经验的产品经历或者架构师操刀":["44.7"],"又比如":["44.7","44.8"],"在我们的系统中":["44.8"],"简化":["44.9"],"使作业更容易完成":["44.9"],"支付时":["44.9"],"不输入密码而是刷脸":["44.9"],"检测":["44.9"],"失误时自动提示":["44.9"],"防止错误和缺陷扩大":["44.9"],"api服务中有参数校验":["44.9"],"建设系统监控能力":["44.9"],"把问题从未知推向已知":["44.10"],"可以让我们更好地避免错误的发生":["44.10"],"借助其他人的经验和知识":["45.4"],"规模或者易用性信息":["45.5"],"相关的许可证限制":["45.5"],"所考虑的方案的优缺点":["45.5"],"谨慎对用户许诺难以实现的需求":["45.5"],"他们所能提供的帮助":["45.6"],"有礼貌地结束":["45.6"],"感谢每个人的帮助和付出":["45.6"],"要给被指导者停供真实的反馈":["45.7"],"无论是只看到第一层":["46.1"],"乱带节奏的小朋友":["46.1"],"还是一眼就能看到第五层":["46.1"],"每次都能一语成谶的大神":["46.1"],"理论上":["46.2"],"因果链可以无限长":["46.2"],"于是":["46.2"],"当一个问题发生了":["46.2"],"如果我们不认真考察问题的发生的因果链":["46.2"],"而是停留在表面问题上":["46.2"],"我们就会把浅层次的原因":["46.2"],"比如原因c":["46.2"],"作为我们以为的":["46.2"],"这真的会让人崩溃":["46.3"],"尤其是在排查线上问题的时候":["46.3"],"某人问了错误的问题把大家带到了错误的方向上":["46.3"],"错过了故障恢复的良机":["46.3"],"这种情况":["46.3"],"用曾经被坑过的同事的话来说":["46.3"],"那可真是杀人的心都有了":["46.3"],"我确定他不是在开玩笑":["46.3"],"他真的是认真的":["46.3"],"第二":["46.3"],"要客观分析引起问题的原因":["46.3"],"寻找问题的原因时":["46.3"],"一定要避免主观臆断":["46.3"],"应该从事实依据出发进行假设":["46.3"],"最好能够拿到一手证据和数据来佐证":["46.3"],"在师傅和我排查问题的例子里":["46.3"],"我不能在还没登录服务看到日志的情况下":["46.3"],"一般来说":["46.3"],"日志是不会骗人的":["46.3"],"就信口胡诌":["46.3"],"随便编一个原因":["46.3"],"如果我不负责任地乱说一通":["46.3"],"而非线性问题则是一个关系错综复杂的因果网":["46.4"],"我们又把非线性问题称为复杂问题":["46.4"],"我们在现实生活中接触到的绝大多数问题":["46.4"],"都是非线性问题":["46.4"],"在处理复杂问题时":["46.4"],"我们还是会用到逆推法":["46.4"],"但此时我们不能直接溯流而上":["46.4"],"而应该就当前问题在不同的层面上找到不同的原因":["46.4"],"然后":["46.4"],"在开篇故事中数据库因为日志打满宕机的问题里":["46.5"],"我":["46.5"],"想到了一种避免方案":["46.5"],"那么":["46.5","52.4","113.4","153.10"],"横向思考时":["46.5"],"我就要回答这个方案是否可以在其他的场景下使用":["46.5"],"而不只是局限在当下的这个问题里":["46.5"],"这一点在其他行业都是一样的":["46.6"],"因此我们应该戒骄戒躁":["46.6"],"不要总想着怎么走捷径":["46.6"],"这里没有捷径可走":["46.7"],"我们所能做的就是耐心地做好眼前的事情":["46.7"],"慢慢积累经验":["46.7"],"邮寄":["47.2"],"资源子网":["47.2"],"smtp":["47.3"],"数据压缩和恢复":["47.4"],"发送端压缩":["47.4"],"使用校验点可使在通信失效和恢复之后":["47.5"],"从校验点继续恢复通信":["47.5"],"功能四":["47.6","47.9"],"复用分用":["47.6"],"复用":["47.6"],"即多个进程同时使用下面传输层的服务":["47.6"],"若所有节点都来不及接受分组了":["47.7"],"而要丢弃大量分组":["47.7"],"这时候就处于网络拥塞状态":["47.7"],"主要协议":["47.7"],"控制":["47.8"],"控制对信道的访问":["47.8"],"控制哪台主机可以占用信道":["47.8"],"定义传输速率":["47.9"],"比特同步":["47.9"],"当然带来的问题就是相比":["48.0"],"给应用层":["48.1"],"而不是等到缓冲区满后再提交":["48.1"],"rst":["48.1"],"该字段为一表示当前":["48.1"],"连接出现严重问题":["48.1"],"可能需要重新建立":["48.1"],"rtt":["48.2","48.22","50.23"],"tcb":["48.3"],"服务器创建完":["48.3"],"sent":["48.4","50.11"],"received":["48.5","50.12"],"在两端关闭后终于抵达了服务端":["48.6"],"那么此时服务端会认为客户端又需要建立":["48.6"],"连接":["48.6"],"从而应答了该请求并进入":["48.6"],"但是客户端其实是":["48.6"],"发送连接释放请求":["48.8","50.15"],"发的数据了":["48.9","50.16"],"但是因为":["48.9","50.16"],"通常有时间限制":["48.10"],"否则对方会误认为需要重传":["48.10"],"等待":["48.11"],"时间后才进入":["48.11"],"为了保证":["48.11"],"和连续":["48.12"],"等待对端回应":["48.14"],"ps":["48.15","114.15"],"一般定时器设定的时间都会大于一个":["48.15"],"端会判断该序号是否已经接收过":["48.16"],"如果接收过只需要丢弃应答即可":["48.16"],"从上面的描述中大家肯定可以发现这肯定不是一个高效的方式":["48.16"],"并未接收到序号":["48.18"],"的报文":["48.18"],"然而序号":["48.18"],"滑动窗口是一个很重要的概念":["48.19"],"它帮助":["48.19"],"让对端告知窗口大小":["48.20"],"在重试次数超过一定次数后":["48.20"],"慢开始":["48.21"],"拥塞避免":["48.21"],"每过一个":["48.22"],"将阈值设为当前拥塞窗口的一半":["48.23"],"将拥塞窗口设为":["48.23"],"无需等待定时器超时而是直接启动快速重传算法":["48.24"],"mss":["48.25"],"答复就退出该阶段":["48.26"],"的应答":["48.27"],"这时候重发序号为":["48.27"],"接收方顺利接收的话就会发送":["48.27"],"保证在全天候环境下最优的传递数据":["48.28"],"第三次握手":["49.1"],"客户端收到服务器的syn":["49.1"],"向服务器发送确认包ack":["49.1"],"w":["49.2","279.8","284.15","284.48"],"服务器就进入了last":["49.2"],"最后确认":["49.2"],"等待客户端的确认":["49.2"],"客户端收到服务器的连接释放报文后":["49.2"],"必须发出确认":["49.2"],"通信都不需要建立连接":["50.0"],"对接收到的数据也不发送确认信号":["50.0"],"发送端不知道数据是否会正确接收":["50.0"],"负责对报文进行分组和重组":["50.1"],"并以tcp或udp协议格式封装报文":["50.1"],"应用层":["50.1"],"负责向用户提供应用程序":["50.1"],"比如http":["50.1"],"telnet":["50.1","50.31"],"dns":["50.1"],"组装和不能对数据包进行排序的缺点":["50.2"],"然后就传递给网络层了":["50.4","51.1"],"在接收端":["50.4","51.1"],"而是保留这些报文的边界":["50.6"],"在某些实时性要求高的场景":["50.7","51.2"],"比如电话会议":["50.7"],"就需要使用":["50.7"],"的头部开销小":["50.8"],"由":["50.9","169.3"],"ietf":["50.9"],"的rfc":["50.9"],"三次握手的过程":["50.10"],"tcp":["50.13"],"建立连接需要三次握手":["50.13"],"的重发请求的话":["50.18"],"就进入":["50.18"],"closed":["50.18"],"建立连接":["50.20"],"内未收到确认":["50.23"],"也可以缓存一段时间以便一次发送更多的数据段":["50.25"],"仅8字节":["50.28"],"首部最小20字节":["50.28"],"最大60字节":["50.28"],"适用场景":["50.28"],"实时视频会议等":["50.29"],"tcp的应用场景":["50.29"],"对数据准确性要求高":["50.29"],"简单邮件传输协议":["50.31"],"用来发送电子邮件":["50.31"],"teletype":["50.31"],"dynamic":["50.32","50.33"],"host":["50.32","50.33","175.2","206.14","206.15"],"configuration":["50.33","114.29"],"动态主机配置协议":["50.33"],"但是也能在很多实时性要求高的地方有所作为":["50.34"],"总的来说":["51.0"],"这样实现的弊端就是在网络条件不好的情况下可能会导致丢包":["51.2"],"但是优点也很明显":["51.2"],"两个十六位的端口号":["51.3"],"分别为源端口":["51.3"],"可选字段":["51.3"],"和目标端口":["51.3"],"提供了单播":["51.4"],"整数":["52.1"],"并返回他们的数组下标":["52.1"],"目标值":["52.4"],"索引":["52.5","222.9"],"作存储":["52.5"],"继续往下走":["52.5"],"遇到了":["52.5"],"计算":["52.5","179.2"],"undefined":["52.6","89.5","156.6","173.66","174.4","179.12","179.29","214.2","236.0","236.5"],"若有对应差值":["52.6"],"你可以假设":["52.7"],"输出":["52.8","195.7"],"nums1":["52.10"],"那么这时意味着":["52.11"],"的头部空出来了":["52.11"],"直接把":["52.11"],"从末尾往前填补":["52.12"],"使得":["52.13"],"就固定哪个数字":["52.15"],"然后把左指针指向该数字后面一个坑里的数字":["52.15"],"把右指针指向数组末尾":["52.15"],"让左右指针从起点开始":["52.15"],"向中间前进":["52.15"],"每次指针移动一次位置":["52.15"],"三数之和大于0":["52.16"],"右指针后退":["52.16"],"处理右指针元素重复的情况":["52.16"],"得到目标数字组合":["52.16"],"推入结果数组":["52.16"],"x":["52.17","61.13","81.6","95.32","97.61","100.8","184.21","214.1","219.10","241.9"],"通过整体的":["52.18"],"减去":["52.18"],"数组长度":["52.18"],"left":["53.2","53.3","150.5","153.7","170.14"],"右":["53.3","53.6"],"val":["53.5","53.10","91.0","181.0"],"right":["53.8","53.9","53.11","64.22","168.7","174.24"],"null":["53.9","89.6","125.0","130.2","133.5","173.64","173.66","176.3","204.6","206.10","206.12","243.2"],"shift":["53.10","55.1","59.1","174.20","174.37"],"跳表":["54.1"],"分治算法":["54.2"],"回溯算法":["54.2"],"else":["55.1","55.2","64.16","89.13","103.17","112.4","159.2","174.8","174.25","178.2","179.62","206.9","214.1","216.4","219.6","220.2","221.1","223.2","225.4","227.1","228.1","229.0","241.8","241.9","245.3","255.0","286.2"],"把左边的队头放入数组":["55.1"],"否则就放到基准后数组里面":["55.2"],"递归调用两边的子数组":["55.2"],"j":["56.5","58.5"],"解释":["57.2"],"你可以删除c字符":["57.2"],"那个字符":["57.3"],"整个字符串都将回文":["57.3"],"比如说这里我们跳过了":["57.3"],"b":["57.3","62.15","64.18","100.3","126.2","126.7","173.55","173.64","175.5","184.32"],"工具方法":["57.4","205.8"],"用于判断字符串是否回文":["57.4"],"st":["57.4"],"ed":["57.4"],"ad":["57.6"],"中对应的数组根本不存在":["57.7"],"则可判断该字符串不存在":["57.7"],"缓存目标字符串的长度":["57.7"],"len":["57.7"],"如果字符串中不包含":["57.7"],"如果我们要使用它":["60.0"],"href":["60.0","99.6","134.3","146.1"],"链接引用定义不对应于某个结构元素":["60.0"],"实际上它定义了一个标签":["60.0"],"以用于在文档其它地方的引用链接及引用类型图像":["60.0"],"它可以出现在引用链接的前面或后面":["60.0"],"当在图片中使用链接引用定义时":["60.0"],"alt":["60.0"],"自动链接":["60.0"],"autolinks":["60.0"],"自动链接是由尖括号":["60.0"],"包裹的绝对":["60.0"],"uri":["60.0"],"与":["60.0","174.12","177.5","178.7","206.0","208.2"],"email":["60.0","112.4","172.0"],"地址":["60.0","141.4","260.0"],"它将解析为链接":["60.0"],"以":["60.0","97.2","154.16"],"图表需要单个做字体":["61.0"],"以上":["61.0","177.12"],"种方案在实际应用中该怎么选择视具体情况而定":["61.0"],"也有看到大家说自适应在地图的适配中会有一些兼容问题":["61.0"],"我这边还没有实践过":["61.0"],"如果想简单":["61.0"],"客户能同意留白":["61.0"],"选用":["61.0"],"vwh03":["61.2"],"当屏幕的尺寸比例小于":["61.2"],"为单位":["61.3","97.2"],"计算方式如下":["61.3"],"vwdiv":["61.3"],"vhdiv":["61.3"],"resolve":["61.5","87.16","96.5","154.4","166.9","173.15","283.1"],"dir":["61.5","74.1","142.24","236.2","236.5"],"join":["61.5","229.0"],"dirname":["61.5","96.5","154.4"],"module":["61.5","61.6","214.2"],"exports":["61.5","61.6"],"publicpath":["61.5","61.6"],"configurewebpack":["61.5","61.6"],"app":["61.5","61.6","96.2","126.3","153.8","159.2","159.5","166.5","166.6","207.11","265.0","286.47"],"alias":["61.6","177.9"],"vh":["61.7","61.19"],"自定义指令":["61.8"],"示例":["61.8","181.0"],"fn":["61.8","156.6","178.3","179.47","246.3"],"中引入":["61.8"],"number":["61.9","137.0","156.11","183.5","184.6","227.1","286.55"],"tofixed":["61.9","61.18"],"将函数挂载到原型上":["61.9"],"import":["61.9","89.5","96.1","101.3","102.4","115.0","254.3"],"from":["61.9","89.5","96.1","99.12","102.5","133.1","206.14","218.4","232.2","243.1","252.3"],"根据屏幕大小":["61.10"],"对图表进行整体的等比缩放":["61.10"],"当屏幕尺寸比例大于":["61.11","61.16"],"block":["61.12","171.0","231.1","236.7"],"1920px":["61.12"],"设计稿的宽度":["61.12"],"960px":["61.12"],"将动画的基点设为左上角":["61.13"],"设置动画的基点":["61.13"],"中心点":["61.13"],"默认点是元素的中心点":["61.13"],"语法":["61.13"],"axis":["61.13"],"达到等比例缩放的效果":["61.14"],"同时也支持铺满全屏":["61.14"],"为":["61.17","96.14","99.10","166.8","195.7"],"当前浏览器窗口宽度":["61.17"],"这样的话":["61.17","181.0"],"10rem":["61.17"],"就刚好等于浏览器窗口的宽度":["61.17"],"也就可以保证":["61.17"],"宽度":["61.17"],"等比例缩放设计稿的页面了":["61.17"],"rem01":["61.17"],"clientwidth":["61.18","147.3","179.38"],"clientheight":["61.18","179.38"],"fontsize":["61.18"],"style":["61.18","95.16","97.35","97.37","97.50","153.6","153.7","156.2","156.3","156.10","168.3","177.7","193.7","195.4","200.12","228.2","254.16","288.2"],"jpg":["62.1","152.7","152.27","162.0"],"class语法都有各自的ast":["62.2"],"就是具体执行的语句的集合":["62.3"],"可以看到我们这里的body只有一个expressionstatement语句":["62.3"],"expressionstatement类型的ast有一个expression属性":["62.4"],"callexpression类型的ast有一个arguments属性":["62.5"],"指向参数":["62.5"],"那么整个表达式就成为了一个call":["62.6"],"expression":["62.6"],"memberexpression有一个属性object表示被访问的对象":["62.6"],"我们这里的console就是一个identifier":["62.7"],"identifier有一个属性name":["62.7"],"每个":["62.9"],"节点中都可能存在注释":["62.9"],"parrotjs":["62.10"],"opts":["62.11"],"当traverse遍历到类型为callexpression的ast时":["62.11"],"这种模式":["62.12"],"removeconsoleexpression":["62.15"],"calleepath":["62.15"],"parentnode":["62.15"],"env":["62.16","62.21","95.9","99.7","102.1","166.3"],"production":["62.16","99.7","154.12"],"理论上应该移除测试1":["62.16"],"但是我们惊讶的发现":["62.16"],"属于当前行才将其设置为后缀注释":["62.17"],"isreservecomment":["62.17","62.18"],"commentwords":["62.17","62.18"],"cjs":["62.21"],"宾语中的词语进行依次分析":["63.0"],"将数据结构整理成这样":["63.0"],"语句":["63.0"],"body":["63.0","64.9","150.12","168.3","231.1","279.3","279.10","286.47"],"肯定陈述句":["63.0"],"declarations":["63.0"],"声明":["63.0"],"person":["63.0"],"侧重编码实现":["64.0"],"的函数":["64.2"],"如果你不熟悉也没关系":["64.2"],"看完下面的代码相信大家能够快速的理解":["64.2"],"则是将tokens重新整理成语法相互关联的表达形式":["64.3"],"这种表达形式一般被称为":["64.3"],"中间层或者ast":["64.3"],"抽象语法树":["64.3"],"还是拿语文题目":["64.3"],"来照葫芦画瓢":["64.3"],"访问器最基本的思想是创建一个":["64.4"],"对象":["64.4","156.13","173.15","195.8","258.7","258.8"],"这个对象可以处理不同类型的节点函数":["64.4"],"const":["64.4","95.47","96.1","97.4","97.10","100.1","108.2","110.2","127.5","127.20","132.1","153.8","179.56","205.5","239.2","241.4","248.2","249.2","252.5","256.4","256.5"],"visitor":["64.4","64.12"],"parent":["64.4","99.8","218.4","232.2","243.2","252.3"],"处理数字类型节点":["64.4"],"处理调用语句类型节点":["64.4"],"在遍历节点的时候":["64.4"],"enter":["64.4"],"将":["64.5","97.30","113.6","114.12","154.3","178.1","178.5","265.2"],"树":["64.5","175.13"],"string":["64.7","99.12","107.2","129.7","151.9","156.17","214.0","232.3","236.0","286.55"],"最后一个检测的是name":["64.7"],"如add这样":["64.7"],"也是一串连续的字符":["64.7"],"这里我们通过递归调用不断的读取参数":["64.8"],"while":["64.8","174.33","241.3","291.2"],"如果你是ast的根部":["64.9"],"就相当于树根":["64.9"],"body中的每一项都是一个分支":["64.9"],"break":["64.9","111.2","131.5","131.6","204.2","231.3"],"params":["64.9","283.4","283.11"],"这个和program一样处理":["64.9"],"但是这里是为了遍历params":["64.9"],"上面是为了遍历分支":["64.9"],"针对于文字片段的处理":["64.10"],"stringliteral":["64.10","64.15"],"对调用语句的处理":["64.10"],"在新的ast中如果是调用语句":["64.10"],"type是":["64.10"],"同时他还有一个":["64.10"],"来标识操作":["64.10"],"的代码":["64.11"],"使它在旧的浏览器或者环境中也能够运行":["64.11"],"工作过程分为三个部分":["64.11"],"其实就跟我们上面手写的一样":["64.11"],"相信大家现在肯定倍感亲切":["64.11"],"parse":["64.11","99.14","159.9"],"解析":["64.11","173.3","181.0"],"将源代码转换成抽象语法树":["64.11"],"树上有很多的estree节点":["64.11"],"转换":["64.11","64.12"],"对抽象语法树进行转换":["64.11"],"generate":["64.11"],"代码生成":["64.11"],"将上一步经过转换过的抽象语法树生成新的代码":["64.11"],"当然我们现在不用从零开始手写了":["64.11"],"可以借助于":["64.11"],"插件":["64.11","102.5"],"可以把源码转换成":["64.11"],"traverse":["64.11","64.26"],"用于对":["64.11"],"会遍历树节点":["64.12"],"只要节点的":["64.12"],"对象中出现":["64.12"],"变化调用该方法":["64.12"],"path":["64.12","81.3","95.46","96.1","97.52"],"astexplorer":["64.13"],"这个网站去比较":["64.13"],"经过本人长达一分钟的对比":["64.13"],"发现箭头函数和普通函数除了类型不一样":["64.13"],"其他都一样":["64.13"],"那这就好办了呀":["64.13"],"直接修改类型尝试一下":["64.13"],"thispath":["64.14"],"替换":["64.14"],"foreach":["64.14","110.3","111.1","112.4","173.99","174.24","179.25"],"replacewith":["64.14"],"运行结果":["64.14"],"ohhhhhhhhhhhhhh":["64.14"],"整体代码":["64.14"],"继续观察新的ast":["64.15"],"需要我们往":["64.15"],"中插入":["64.15"],"节点":["64.15","64.16","173.7","211.0"],"节点中的":["64.15"],"属性即是我们需要配置的值":["64.15"],"接着":["64.16"],"在函数中插入该节点":["64.16"],"四种函数方式":["64.16"],"这是插件能够识别的语法":["64.16"],"这是四种函数的type":["64.16"],"functiondeclaration":["64.16","64.24"],"functionexpression":["64.16"],"arrowfunctionexpression":["64.16"],"classmethod":["64.16"],"isblockstatement":["64.16"],"如果是一个块级语句的话":["64.16"],"在语句的头部添加logger函数节点":["64.16"],"处理箭头函数":["64.16"],"生成一个块级语句":["64.16"],"在第一行中插入loggernode":["64.16"],"然后return":["64.16"],"之前的内容":["64.16"],"newbody":["64.16"],"blockstatement":["64.16"],"returnstatement":["64.16"],"替换老节点":["64.16"],"到此":["64.16"],"就大功告成了":["64.16"],"查看效果":["64.16"],"优化代码":["64.16"],"在原代码中":["64.16"],"我们需要生成以下节点":["64.16"],"在生成这些节点的过程中我们需要反复对照ast进行查看":["64.16"],"很不方便而且不直观":["64.16"],"这里我们其实可以使用babel提供给我们的库":["64.16"],"template":["64.16","94.9","115.0","154.12","154.16","214.3","231.1","286.55"],"它可以通过我们传入的模版代码帮助我们生成对应的节点":["64.16"],"比如生成":["64.16"],"我们可以这么做":["64.16"],"statement":["64.16","231.1"],"callexpression":["64.17"],"callee":["64.17"],"transformsync":["64.18"],"require":["64.18","126.5"],"babel":["64.18","154.1","154.4","154.17","154.20","177.9","179.26"],"core":["64.18","99.22","181.0","193.2"],"sourcecode":["64.18"],"压缩其实就是把变量从有意义变成无意义":["64.18"],"尽可能的短":["64.18"],"source":["64.19","97.2","100.5","159.13","214.1","214.2"],"isimportdefaultspecifier":["64.19"],"xxx":["64.19","81.6","154.2","154.11","177.10"],"tsc":["64.20"],"这三种方式有利有弊":["64.20"],"拿到子路径init":["64.21"],"buildcodeframeerror":["64.21","64.22"],"无法把":["64.21"],"类型赋值给":["64.21"],"stacktracelimit":["64.22"],"init":["64.22","69.2"],"w赋值为string":["64.23"],"得到数组":["64.23"],"第四步":["64.23","126.4","209.9"],"计算函数定义时的形参类型数组":["64.23"],"visitorone":["64.24"],"myvisitor":["64.24"],"可以传递给":["64.25"],"方法的第二个参数然后在访问者中用":["64.25"],"this":["64.25","65.21","97.22","106.27","115.0","141.3","173.8","173.23","179.54","179.55","216.4","218.4","232.2","235.4","250.1","256.8","275.2"],"去访问":["64.25"],"id":["64.26","67.10","71.18","99.11","100.7","122.22","126.6","126.8","150.10","174.37","175.9","195.9","279.8","279.10","286.47","286.55"],"比如字节某内部工具e":["65.1"],"则是在gitlab":["65.1"],"它是需要专门部署的":["65.4"],"比如用docker部署一个runner镜像到可以连接内网的容器":["65.4"],"也可以使用公司内配好的shared":["65.4"],"如下":["65.6"],"关联runner到gitlab官方文档":["65.8"],"registering":["65.8"],"docker":["65.9","68.10"],"sock":["65.10"],"wc":["65.11"],"reg7qupgrb4lw3q9y":["65.11"],"description":["65.11","123.1"],"cicd":["65.11"],"yehanli":["65.11"],"liyehan":["65.11"],"如果在master主分支下没有":["65.12"],"的话":["65.12"],"syntax":["65.13"],"定义单个流水线任务":["65.17"],"但实际常用的只有较小一部分":["65.18"],"在此部分会对常用关键字进行详解":["65.18"],"如果需要特殊配置可参考关键字文档":["65.18"],"reference":["65.18"],"install":["65.19","86.6","97.59","114.6","114.8"],"use":["65.21","95.1","96.2","97.5","97.8","97.61","154.1","154.8"],"variable":["65.21","286.55"],"job1":["65.21"],"python":["65.22","68.10"],"自定义stages会":["65.23"],"重写":["65.23","181.0"],"除了":["65.23","106.28","106.41"],"之外所有的默认stages":["65.23"],"在此为node":["65.25"],"when":["65.26"],"master":["65.27","70.0"],"以上写法等同于":["65.27"],"variables":["65.27"],"except":["65.28","215.2","220.3"],"stage":["65.30"],"deploy":["65.30","70.0"],"script":["65.30","82.1"],"echo":["65.30","86.1","86.8"],"rolling":["65.30"],"out":["65.30","127.35","236.6"],"中的":["65.32","173.1","177.2","178.2","184.28"],"build":["65.33","97.2"],"always":["65.35","218.4","232.2"],"自定义任务5":["65.35"],"web":["65.35","102.2","106.7","106.30","114.29","139.2","175.12","200.2"],"设置为点击run":["65.35"],"pipeline时触发":["65.35"],"流水线不自动触发":["65.35"],"job4":["65.36"],"aftermr":["65.36"],"branch":["65.36"],"任何人都可以很方便的使用":["66.1"],"没有统一的管理界面":["66.1"],"和低级错误":["66.2"],"built":["66.3"],"successfully":["66.3","89.5","114.29","159.9"],"with":["66.3","162.1","195.8","206.1","275.2"],"one":["66.3","216.2"],"command":["66.3","275.2"],"test1":["66.3"],"但是每个事情之间":["66.4"],"的数据是不能共享的":["66.4"],"阶段与阶段之前":["66.4"],"一定":["66.4"],"deployment":["67.0"],"简称":["67.0"],"指在开发过程中自动执行一系列脚本来减低开发引入":["67.0"],"针对每次":["67.1"],"实现步骤":["67.2"],"首先用docker":["67.2"],"nginx部署项目":["67.2"],"在gitlab新建的项目的ci":["67.2"],"rss":["67.3"],"vnd":["67.3"],"ms":["67.3"],"fontobject":["67.3"],"font":["67.3","172.0"],"ttf":["67.3"],"opentype":["67.3"],"image":["67.3","89.7","96.13","103.2","106.14","114.13","147.2"],"svg":["67.3","146.2","177.11","222.5","284.23"],"icon":["67.3"],"gif":["67.3","104.0","156.1","156.7"],"png":["67.3","68.13","99.6","103.1","103.2","155.1","263.5"],"d":["67.3","95.19","252.5","284.3","284.7","284.25","284.29","284.71"],"防止代码中泄露服务器信息":["67.5"],"srv":["67.7"],"another":["67.8"],"输入与runner有关的标签":["67.8"],"executor":["67.8","175.8"],"ssh":["67.8"],"machine":["67.8"],"kubernetes":["67.8"],"让gitlab去执行自动化流程":["67.9"],"demo":["67.10","181.0"],"private":["67.10","67.11"],"rsa":["67.10"],"pub":["67.10"],"chmod":["67.10"],"服务器私钥":["67.11"],"到此我们就配置完成了":["67.12"],"提交代码到指定分支":["67.12"],"即可实现自动化部署":["67.17"],"docker环境与宿主环境不会发生环境上的冲突":["67.17"],"gitlab控制权限":["67.17"],"cd流程":["68.0"],"需要使用":["68.1"],"sudo":["68.1"],"su":["68.1"],"获取超级管理员权限":["68.1"],"安装完成后启动一下":["68.1"],"ce":["68.3"],"latest":["68.3","70.0","97.61"],"这里改成你自己的域名":["68.3"],"域名要设置解析":["68.3"],"或服务器ip":["68.3"],"initial":["68.4","154.13","235.4","279.1","279.6"],"就是提供我们的ci":["68.5"],"用户个人设置页面":["68.7"],"overview":["68.7"],"里面有个":["68.7"],"runners":["68.7"],"后面改成":["68.8"],"上查看的":["68.8"],"其他配置项都是些基本信息":["68.8"],"cd配置项":["68.9"],"等":["68.10","97.60","133.9","193.4","195.7"],"后端有":["68.10"],"java":["68.10","113.7"],"指定执行的阶段有哪些":["68.10"],"流水线执行时会按照这个阶段顺序执行":["68.10"],"redirect":["68.11"],"pages":["68.11"],"conf":["68.12"],"script第二行":["68.13"],"判断":["68.13","69.6"],"这个容器是否在运行":["68.13"],"在运行的话就进行销毁":["68.13"],"script第三行":["68.13"],"根据我们打包出来的镜像启动一个":["68.13"],"的容器":["68.13"],"到此部署的配置基本完成":["68.13"],"但是部署的时候可能会遇到一个连接错误的问题":["68.13"],"规范前端工程代码规范":["69.0"],"即可":["69.3"],"无需多言指令":["69.3"],"创建":["69.3"],"prettierrc":["69.3"],"自己配置":["69.3"],"控制提交到仓库的代码的规范性":["69.4"],"通过钩子函数":["69.5"],"通过钩子":["69.7"],"执行测试":["69.7"],"辅助":["69.8"],"信息":["69.8"],"write":["69.9"],"eslint":["69.9","154.20"],"fix":["69.9","95.16"],"md":["69.9","95.28","97.28"],"安装提交信息依赖":["69.9"],"commitlint":["69.9"],"回滚":["69.10"],"代码回退":["69.10","97.47"],"scopes":["69.10"],"leetcode":["69.10"],"typescript":["69.10","81.3","81.6","95.7","177.7","186.3"],"vue":["69.10","94.5","95.23","97.19","114.14","265.0"],"it":["69.10","219.3","245.3","248.1"],"needs":["69.10","214.2","218.4","232.2"],"field":["69.10"],"eg":["69.10"],"scopeoverrides":["69.10"],"merge":["69.10","228.2"],"e2etest":["69.10"],"pre":["69.13","186.3","196.14","214.3"],"触发条件":["70.0"],"到":["70.0","152.6","181.0","195.7","206.11"],"分支后":["70.0"],"branches":["70.0"],"任务":["70.0","72.0","72.5"],"jobs":["70.0","72.0"],"and":["70.0","106.35","107.4","114.29","148.4","216.3","219.6","219.10","222.4","235.4","241.1","241.10","243.1"],"服务器环境":["70.0"],"最新版":["70.0"],"ubuntu":["70.0","97.61"],"runs":["70.0","148.4"],"steps":["70.0","97.61"],"开发者主要靠阅读源码了解api和机制":["71.1"],"很难深度使用这种高级功能":["71.3"],"为了解决多团队维护的难题":["71.3"],"也能大展身手":["71.3"],"它可以让每个团队负责的模块就是一个":["71.3"],"这两者各自都是完整的":["71.4"],"通过在仓库b执行git":["71.5"],"例如git":["71.6"],"仓库地址":["71.6"],"这个文件通常不必改变了":["71.8"],"没有冗余存储":["71.9"],"xxx这个仓库":["71.12"],"像给普通":["71.12"],"status等命令":["71.13"],"此时的git命令都会是针对仓库b的":["71.13"],"旧commid":["71.14"],"id变成了新的commit":["71.14"],"但是如果这时候的commit":["71.16"],"id跟主项目里记录的":["71.16"],"如果你不带参数":["71.17"],"给更新了":["71.18"],"update":["71.21","71.23","73.0","216.6"],"注意顺序":["71.22"],"init跟":["71.22"],"clone":["71.24","125.2"],"recurse":["71.24"],"或者一个":["72.0"],"被创建的时候":["72.0"],"你的工作流包含一个或者多个":["72.0"],"它们可以并行或者串行执行":["72.0"],"一个用于部署你的应用":["72.1"],"再来一个":["72.1"],"当有人新建":["72.1"],"再或者手动触发":["72.2"],"传递数据到另一个步骤":["72.3"],"你可以配置一个任务依赖其他任务":["72.3"],"仓库":["72.4"],"为你的构建环境创建合适的工具链等":["72.4"],"组件是如何组织的":["72.5"],"每一个步骤都会执行一个独立的动作或者脚本文件":["72.5"],"任务1":["72.5"],"是运行命令":["72.5"],"任务3":["72.5"],"是运行脚本文件":["72.5"],"找到更多预构建的动作":["72.5"],"查找和自定义动作":["72.5"],"一旦你的工作流开始运行":["72.5"],"你可以在":["72.5"],"看到一个可视化的运行进度图表":["72.5"],"查看每一个步骤的执行情况":["72.5"],"导航至仓库主页":["72.5"],"在你的仓库名下":["72.5"],"点击":["72.5","99.23"],"在左侧":["72.5"],"sidebar":["72.5","276.0"],"点击你想查看的工作流":["72.5"],"workflow":["72.5"],"点击你想查看的运行记录的名称":["72.5"],"或者在可视化图表中":["72.5"],"点击你想看到的任务":["72.5"],"查看每一个步骤的结果":["72.5"],"上篇文章代码解析":["72.5"],"现在我们再来看":["72.5"],"static":["73.0","89.6","92.0","107.2","109.6","154.7","215.2"],"list":["73.0","99.14","106.14","153.8","178.1","181.0"],"force":["73.0","252.5"],"debug":["73.0"],"其中":["73.0","147.1","173.66","176.16"],"表示单一仓库同步":["73.0"],"表示启用":["73.0"],"强制同步":["73.0"],"开关":["73.0"],"会显示所有执行命令":["73.0"],"当我们把这样的文件提交到":["73.0"],"会自动检测并运行该脚本":["73.0"],"但是现在还有几个问题要注意":["73.0"],"因为我们是提交到":["73.0"],"分支上":["73.0"],"这个文件和目录需要写在":["73.0"],"分支":["73.0"],"有技术追求的工程师肯定不会满足上面的解决方案":["74.0"],"实际上社区中已经有非常多的小工具可以帮我们优雅的实现跨平台的":["74.0"],"make":["74.1","221.3"],"用于创建目录":["74.1"],"save":["74.2","74.5","74.8","87.26","118.2","184.27"],"dev":["74.2","74.5","74.8","83.3","87.24","114.8","206.5","210.1","214.1","216.6","220.2","222.4","236.4","241.9","250.2","252.6","256.6"],"yarn":["74.2","83.3","142.26","275.2"],"parallel":["74.3","75.7"],"precover":["74.3"],"因为不同平台的环境变量语法不同":["74.7"],"我们可以使用":["74.7","115.0"],"cross":["74.9"],"的同学":["74.10"],"可以考虑看看":["74.10"],"只需要用":["75.1"],"符号把多条":["75.1"],"实现方式更简单":["75.2"],"把连接多条命令的":["75.2"],"配置":["75.3","205.4"],"可以使用":["75.3","102.5","178.5","178.6","205.12"],"上面的脚本可以进一步简化成":["75.6"],"让脚本变的更有趣":["76.1"],"同样安装到":["76.1"],"devdependencies":["76.1","87.28"],"里面":["76.1"],"scripts":["76.2"],"archive":["76.3"],"report":["76.3"],"p":["76.3","95.32","106.26","113.7","118.3","156.24","214.3","286.66"],"里面的命令自动补全":["77.0"],"completion":["77.2"],"它有以下几个让人无法拒绝的便利":["77.2"],"里面的声明给出补全建议":["77.4"],"中的依赖项与":["78.0"],"中的依赖项不匹配":["78.0"],"则":["78.0","176.2","195.6","196.9"],"json和package":["78.1"],"如果有":["79.0"],"先执行该命令":["79.0"],"检查是否有":["79.0"],"有的话运行":["79.0"],"还没有的话就会使用":["80.1"],"npm":["80.2","83.1","83.5","86.6","86.9","87.1","97.38","114.26","143.5","275.2"],"那如果没有":["80.2"],"默认不会将依赖安装到全局":["80.3"],"只会安装到当前的路径下":["80.3"],"这样设计是为了不同的项目之间进行依赖隔离":["80.3"],"这个文件会将本次安装的依赖的版本信息记录下来":["80.4"],"在下次再安装的时候":["80.4"],"或者其他伙伴使用该包":["80.4"],"react":["81.0","87.4","87.6","168.16","205.13","206.9","265.1"],"void":["81.1","156.8","207.16","241.4"],"改造后":["81.1"],"reactdom":["81.1"],"dom":["81.1","81.2","99.11","129.4","152.8","152.9","173.7","208.12"],"client":["81.1","154.3"],"引入项目所需样式":["81.1"],"rollupoptions":["81.2"],"确保外部化处理那些你不想打包进库的依赖":["81.2"],"external":["81.2"],"output":["81.2","152.30"],"umd":["81.2","173.95"],"构建模式下为这些外部化的依赖提供一个全局变量":["81.2"],"globals":["81.2","219.10"],"less":["81.3","83.4","97.18","97.23","97.44","154.8"],"loader":["81.3","154.20","177.9"],"过":["81.4"],"当终端没有报错且最后一行显示包名和版本号就表示发布成功":["81.4"],"xz":["81.4"],"button":["81.4","99.11","106.34"],"测试":["81.5"],"export":["81.5","97.11","111.2","156.7","156.13","156.15","181.0","195.4","230.2","232.3","248.2","250.3","254.3"],"不变":["81.6"],"问题":["81.6","275.2"],"模块":["81.6"],"没有导出的成员":["81.6"],"或者找不到":["81.6"],"的类型声明文件":["81.6"],"因为项目是":["81.6"],"开发的所以我们需要模块导出":["81.6"],"通过改造":["81.6"],"再次执行发包命令":["81.7"],"是基本的编程原则":["82.0"],"中使用预定义变量和自定义变量让我们更容易遵从":["82.0"],"给想要引用的变量前面加上":["82.1"],"符号即可":["82.1"],"工具包来实现":["83.2"],"命令实际上是使用了":["83.5"],"时给定额外的参数":["84.1"],"代码修改如下":["84.1"],"lint":["84.3","84.7","97.1"],"mocha":["84.3"],"这种方式的明显不足是":["84.3"],"脚本":["84.4"],"多余的空格是为了控制缩进":["84.4"],"也可以用制表符":["84.4"],"以静默的方式运行":["84.5"],"的时候启用了":["84.7"],"这个日志级别的输出实例如下":["84.8"],"详细打印出了每个步骤的参数":["84.8"],"verdaccio":["85.2","85.3"],"bin":["85.2","85.3"],"localhost":["85.6","85.7","159.13"],"specified":["86.1"],"exit":["86.1","206.16","275.2"],"author":["86.1"],"wangshijun":["86.1"],"wangshijun2010":["86.1"],"gmail":["86.1"],"github":["86.2","256.4","281.4"],"本例中为":["86.3"],"对象里面获取对应的值作为接下来要执行的命令":["86.3"],"如果没找到直接报错":["86.3"],"在系统默认的":["86.3"],"extends":["86.7"],"recommended":["86.7"],"rules":["86.7","154.1"],"indent":["86.7","97.22","227.1","231.6"],"我把它们分为了":["87.0"],"大类":["87.0"],"描述配置":["87.0"],"library":["87.5","107.4"],"它们的区别可以参考":["87.9"],"如何选择开源许可证":["87.9"],"directory":["87.12","275.2"],"glob":["87.12","115.0"],"模块解释":["87.13"],"使用":["87.13","103.0","148.1","154.20","173.22","175.21","184.15"],"模块规范":["87.13"],"packagea":["87.14"],"字段指定入口":["87.15"],"构建":["87.16"],"它的":["87.16","87.25","173.44"],"mainfeilds":["87.16"],"字段默认为":["87.16"],"放在":["87.17"],"下面呢":["87.17"],"除了支持配置包的默认导出":["87.17"],"还支持配置包的子路径":["87.17"],"比如一些第三方":["87.17"],"ui":["87.17","98.13","178.1"],"包需要引入对应的样式文件才能正常使用":["87.17"],"的顺序依次执行上方的命令":["87.20"],"但是这样的隐式逻辑很可能会造成执行工作流的混乱":["87.20"],"pnpm":["87.20"],"yarn2":["87.20"],"都已经废弃掉了这种":["87.20"],"自动执行的逻辑":["87.20"],"会被自动插入到该字段中":["87.24"],"design":["87.25"],"里":["87.25","138.27","173.70"],"这个字段数组中的值必须是在":["87.28"],"dependencies":["87.28","256.8"],"两个里面声明过的依赖才行":["87.28"],"即使用户的环境不符合要求":["87.33"],"且小于":["87.34"],"x64":["87.36"],"会重定向到":["87.39"],"剔除掉":["87.42"],"最终导致产物缺少样式":["87.42"],"hooks":["87.43","208.4","216.3","219.3"],"工具一起使用":["87.43"],"用来定义一个钩子":["87.43"],"这些钩子方法会在":["87.43"],"changelog":["88.1"],"response":["88.2","89.5","98.12","179.44"],"await":["88.2","95.45","103.10","178.4","179.29","283.9","286.46"],"newversion":["88.2"],"data":["88.2","98.8","98.12","103.9","103.10","107.3","159.9","175.6","178.2","179.51"],"fs":["88.2","137.0","173.95"],"readfile":["88.2"],"content":["88.2","90.0","106.23","106.41","123.1","241.8","252.5","279.7"],"writefile":["88.2"],"green":["88.2"],"表现形式":["89.1"],"我们所说的菜单权限控制":["89.4"],"大多只是停留在菜单是否可见":["89.4"],"但是系统路由的页面可见和页面上的菜单是否可见是两回事情":["89.4"],"假设系统路由":["89.4"],"path1可见":["89.4"],"oldrender":["89.5"],"修改login":["89.5"],"获取路由当中的code便利获取到":["89.5"],"进行查询权限":["89.5"],"routerredux":["89.5"],"stringify":["89.5","99.14","175.19","214.2","230.2","286.15"],"qs":["89.5","126.5"],"fakeaccountlogin":["89.5"],"getfakecaptcha":["89.5"],"services":["89.5"],"getauthoritymenu":["89.5"],"setauthority":["89.5"],"getpagequery":["89.5"],"reloadauthorized":["89.5"],"namespace":["89.5"],"status":["89.5","100.9"],"effects":["89.5"],"payload":["89.5","283.10"],"put":["89.5","97.13","221.3"],"yield":["89.5","127.37","206.15"],"changeloginstatus":["89.5"],"ok":["89.5","127.35","167.4"],"setting":["89.6","260.2"],"models":["89.6"],"添加authorizedbutton公共组件":["89.6"],"proptypes":["89.6"],"prop":["89.6","162.2","236.6"],"types":["89.6","95.20","214.0","231.1"],"authorizedbutton":["89.6"],"contexttypes":["89.6"],"ismobile":["89.6"],"bool":["89.6","185.4"],"componentwillmount":["89.6","178.4"],"extendcode":["89.6"],"扩展表格中的code还没有出现的情况":["89.6"],"let":["89.6","99.14","99.15","127.8","127.34","156.11","173.22","179.54","184.11","185.6","206.9","212.1","236.2","283.7","283.10"],"都不能进行操作":["89.7"],"按钮对他来说是可见的":["89.8"],"前提是他首先要有":["89.8"],"这个按钮的资源权限":["89.8"],"但对于另一条记录":["89.8"],"可写":["89.9"],"可收货":["89.9"],"代表这个用户对于这条业务数据有收货的权限":["89.10"],"只有":["89.11"],"按钮是可用的":["89.11"],"那么判断的公式为":["89.11"],"permissiontype":["89.12"],"当前按钮的acttype的值通过传递传入":["89.13"],"recordpermissiontype":["89.13"],"单条数据的数据操作权限总和":["89.13"],"acttypearray":["89.13"],"单条数据权限校验":["89.13"],"tempcode":["89.13"],"filter":["89.13","95.46","99.14","115.0","170.8","170.12","226.1","230.1"],"tempacttype":["89.13"],"默认返回true":["89.13"],"some":["89.13"],"collapse":["90.0","106.41"],"color":["90.0","97.35","156.10","156.24","170.4","171.0"],"clearfix":["90.0"],"after":["90.0","138.40"],"white":["91.0","95.25"],"space":["91.0"],"nowrap":["91.0"],"设置透明度":["91.0"],"宽高":["92.0"],"wh":["92.0"],"width":["92.0","106.35","115.0","154.13","170.8"],"图片background":["92.0"],"bgurl":["92.0"],"background":["92.0"],"repeat":["92.0","170.15"],"diccode2":["93.1"],"蓝色框单个对象在页面上需要展示的字段也是一级属性字段":["93.2"],"隐藏字段说明":["93.2"],"需要明确":["93.3"],"因为订单状态是放在数据字典当中":["93.4"],"所以返回到前端的字段不需要进行文本处理":["93.4"],"前端通过数据字典数据处理":["93.4"],"前端不显示后端返回的错误信息":["93.7"],"这样我们就创建了一个blog":["94.3"],"我们可以尝试":["95.3"],"run":["95.3","114.8","148.4","258.9","258.11"],"preinstall":["95.5"],"npx":["95.5"],"standard":["95.7"],"parser":["95.7"],"esbenp":["95.8"],"version":["95.9","97.61","142.15","142.18","168.26","248.0"],"es6":["95.9","112.2","173.3","173.21","186.1"],"vscode":["95.10"],"local":["95.10","236.1"],"jsxsinglequote":["95.13"],"htmlwhitespacesensitivity":["95.13","97.26"],"strict":["95.13","106.23"],"quoteprops":["95.13"],"cli":["95.15","144.4"],"enum":["95.16"],"feat":["95.16"],"perf":["95.16"],"git":["95.18","97.1","97.40"],"forceconsistentcasinginfilenames":["95.20"],"resolvejsonmodule":["95.20"],"skiplibcheck":["95.20"],"esmoduleinterop":["95.20"],"nounusedlocals":["95.20"],"createroot":["95.22"],"请求axios":["95.23"],"axios兼容浏览器和node环境":["95.23"],"适合ssr项目":["95.23"],"参考":["95.23"],"vben":["95.23"],"admin":["95.23","175.5","178.4"],"middleware":["95.24"],"使用tailwind的样式":["95.25"],"base":["95.25","96.6","97.4","114.22","115.0","127.40"],"添加基础类":["95.25"],"组件和工具类同理":["95.25"],"h1":["95.25","99.8","106.36","195.7"],"2xl":["95.25"],"utilities":["95.26","96.6"],"lg":["95.28"],"1023px":["95.28"],"支持css嵌套":["95.29"],"不再需要less":["95.29"],"24px":["95.31"],"sm":["95.31"],"sourceunit":["95.32"],"targetunit":["95.32","95.33"],"px":["95.33","168.19","200.11"],"exclude":["95.33","154.1","154.4","177.9"],"file":["95.33"],"不会被":["95.36"],"pxtorem":["95.36"],"至此":["95.37","173.5"],"我们已经有一个完整的ssr项目了":["95.37"],"下面开始扩展功能":["95.37"],"blue":["95.38"],"primary":["95.39","156.10","156.24"],"var":["95.40","113.7","170.2","173.56","179.33"],"useeffect":["95.42"],"req":["95.45","126.5"],"res":["95.45","103.7","103.14","133.5","174.40","181.0","252.6"],"originalurl":["95.45"],"detection":["95.46"],"order":["95.46","148.5"],"querystring":["95.46","126.5"],"cookie":["95.46","204.4"],"localstorage":["95.46","179.34","179.40"],"htmltag":["95.46"],"subdomain":["95.46"],"lookupfrompathindex":["95.46"],"split":["95.46","100.8","154.13","286.33","286.40","295.1"],"caches":["95.46"],"lookuplocalstorage":["95.46"],"lookupsessionstorage":["95.46"],"i18n":["95.48"],"displaylanguage":["95.49"],"en":["95.49","99.6","107.4","115.0","172.0"],"sourcelanguage":["95.49"],"tailwindcss":["96.0"],"ts":["96.1","97.19","101.3","156.13","177.7","184.29","189.0","232.3","248.2","249.2","250.3","259.2"],"然后添加如下一些配置":["96.1"],"router目录下的index":["96.1"],"createrouter":["96.1"],"createwebhashhistory":["96.1"],"createwebhistory":["96.1"],"routes":["96.1","97.4"],"home":["96.1","113.7","138.34"],"hash":["96.1","139.3","154.3","177.13","195.7"],"history":["96.1","97.4"],"模式":["96.1","110.2"],"mount":["96.2","156.18","218.9"],"完成上述操作之后":["96.2"],"接下来我们给vuex编写一个测试代码看vuex是否有效":["96.2"],"修改home":["96.2"],"vue的代码如下":["96.2"],"elbutton":["96.3","96.4"],"elselect":["96.3"],"按需引入":["96.4"],"导入文件夹别名":["96.5"],"views":["96.5"],"并使用":["96.6"],"指令来包含":["96.6"],"tailwind的":["96.6"],"样式":["96.6","254.18"],"来替换掉原来的文件内容":["96.6"],"会在构建时将这些指令转换成所有基于您配置的设计系统生成的样式文件":["96.6"],"js就能够自动的按需生成大量的模拟数据":["96.7"],"且mock":["96.7"],"js提供了大量的数据类型":["96.7"],"包括文本":["96.7"],"是一个自增数":["96.10"],"起始值为":["96.10"],"每次增":["96.10"],"最多10个重复数据":["96.11"],"用于生成高度自定义的图片地址":["96.13"],"imgurl":["96.13"],"生成名字":["96.13"],"如果使用":["96.14"],"js发开":["96.14"],"则需要配置":["96.14"],"在项目中根目录创建":["96.14"],"文件夹":["96.14"],"建立index":["96.14"],"ts在其中创建需要的数据接口":["96.14"],"仅做示例":["96.14"],"通过get请求返回一个名字数组":["96.14"],"提交规范":["97.0"],"staged":["97.1"],"工具":["97.1"],"自定义代理规则":["97.2"],"proxy":["97.2","181.0","248.0"],"设置最终构建的浏览器兼容目标":["97.2"],"target":["97.2","179.28","205.14","251.0"],"es2015":["97.2"],"构建后是否生成":["97.2"],"map":["97.2","100.8","129.4","129.7","179.56","256.5","258.3","295.1"],"文件":["97.2"],"sourcemap":["97.2","99.5","100.0"],"chunk":["97.2","100.8"],"大小警告的限制":["97.2"],"kbs":["97.2"],"chunksizewarninglimit":["97.2"],"启用":["97.2"],"gzip":["97.2"],"压缩大小报告":["97.2"],"reportcompressedsize":["97.2"],"关于":["97.2","106.41"],"baserouters":["97.4"],"createpinia":["97.7"],"resolvers":["97.11"],"default":["97.11","156.7","156.13","156.15","173.87","217.2"],"plugins":["97.11","154.4","154.5","154.12","214.2"],"直接安装为开发依赖即可":["97.14"],"参考链接":["97.16"],"preprocessoroptions":["97.17"],"modifyvars":["97.17"],"hack":["97.17"],"pinia":["97.18"],"axios":["97.18","162.0"],"的前端项目开发环境搭建完毕":["97.18"],"项目托管在":["97.18"],"size":["97.19","115.0"],"很多":["97.19"],"define":["97.20"],"webstorm":["97.21","97.25","97.32","97.34"],"intellij":["97.21","97.25","97.34"],"prototype":["97.22","127.36"],"builtins":["97.22"],"禁止可以在有更简单的可替代的表达式时使用三元操作符":["97.22"],"unneeded":["97.22"],"ternary":["97.22"],"禁止重复模块导入":["97.22"],"duplicate":["97.22"],"imports":["97.22","210.2","240.1"],"禁止在对象中使用不必要的计算属性":["97.22"],"useless":["97.22"],"computed":["97.22","219.3"],"强制使用一致的缩进":["97.22"],"强制使用骆驼拼写法命名约定":["97.22"],"camelcase":["97.22"],"强制类方法使用":["97.22"],"class":["97.22","177.14","179.55","228.2","279.4"],"scss":["97.23"],"jsx":["97.23"],"angular":["97.23","97.57"],"idea":["97.25"],"requirepragma":["97.26"],"不需要自动在文件开头插入":["97.26"],"insertpragma":["97.26"],"使用默认的折行标准":["97.26"],"prosewrap":["97.26"],"preserve":["97.26","206.8","221.3"],"根据显示样式决定":["97.26"],"要不要折行":["97.26"],"内容如下":["97.27"],"的规则设置到":["97.30"],"的规则中":["97.30"],"config":["97.31","102.1","102.4","102.5"],"fixall":["97.32"],"打开设置窗口":["97.32"],"按如下操作":["97.32"],"测试和打包目录":["97.36"],"dist":["97.36","154.7"],"ignorepseudoelements":["97.39"],"检测和修复的代码禁止提交":["97.40"],"从而保证仓库代码都是符合规范的":["97.40"],"需要用到":["97.40"],"在本地执行":["97.40"],"目录下所有的":["97.41"],"文件执行":["97.41"],"成功":["97.41"],"否则终止":["97.41"],"触发的命令只作用于":["97.42"],"vss":["97.44"],"sass":["97.44","154.8"],"经过以上配置之后":["97.45"],"message":["97.46","107.1","133.1","159.9","214.2"],"conventions":["97.46"],"格式规范":["97.46"],"chore":["97.47"],"变更构建流程或辅助工具":["97.47"],"revert":["97.47"],"用于指定本次":["97.47"],"影响的范围":["97.47"],"依据项目而定":["97.47"],"例如在业务项目中可以依据菜单或者功能模块划分":["97.47"],"用动词开头":["97.48"],"如果当前提交是针对特定的":["97.49"],"issue":["97.49"],"那么可以在":["97.49"],"throw":["97.50","173.98"],"expectations":["97.50"],"closes":["97.50","130.9"],"baz":["97.50"],"should":["97.50","218.4","232.2"],"used":["97.50","148.3"],"emojialign":["97.53"],"center":["97.53"],"allowcustomissueprefixs":["97.53"],"生成标准化":["97.54"],"commitizen":["97.55"],"总有些人依旧我行我素":["97.57"],"因此提交代码这个环节":["97.57"],"也增加一个限制":["97.57"],"只让符合":["97.57"],"规范的":["97.57"],"本项目使用":["97.60"],"strategy":["97.61"],"matrix":["97.61"],"checkout":["97.61"],"拉取":["97.61"],"仓库代码":["97.61"],"uses":["97.61"],"v3":["97.61"],"设定":["97.61"],"而与数据相关的内容不外乎如下几个内容":["98.1"],"数据又是基于应用产生的":["98.1"],"因为没有应用就不会有相关的数据":["98.1"],"应用本身要提供展示":["98.1"],"收集":["98.1"],"操作内容":["98.1"],"而这是基于平台的":["98.1"],"24h":["98.2"],"内多次访问只会被记录为":["98.2"],"接口请求错误":["98.3"],"即在二次封装请求":["98.3"],"内完成":["98.4"],"首次输入延迟":["98.4"],"input":["98.4","127.49","148.3","205.14","286.47"],"delay":["98.4"],"fid":["98.4"],"测量的是当用户第一次在页面上交互的时候":["98.4"],"点击链接":["98.4"],"点击按钮":["98.4"],"自定义基于":["98.4"],"的事件":["98.4"],"到浏览器实际开始处理这个事件的时间":["98.4"],"首次输入延迟应在":["98.4"],"100ms":["98.4","177.12"],"时作为配置项之一传入":["98.6"],"其实还会涉及到请求":["98.6"],"内容":["98.6","100.6"],"主要用于发送给对应的监控系统":["98.6"],"监听页面变化":["98.7"],"pageshowtime":["98.7"],"pageshow":["98.7"],"now":["98.7"],"页面性能指标上报":["98.7"],"performancereport":["98.7"],"pagehide":["98.7"],"记录用户在页面停留时间":["98.7"],"刷新队列前执行":["98.7"],"转":["98.7","101.3"],"formdata":["98.7"],"actionreport":["98.8"],"其他必要传递的信息":["98.8"],"setconfig":["98.8"],"userid":["98.8"],"来获取和页面性能指标相关的具体数据":["98.9"],"对应代码为":["98.9"],"页面性能指标":["98.9"],"onperfentry":["98.9"],"sdk":["98.10"],"使下一次渲染能够显示降级后的":["98.13"],"可以将错误日志上报给服务器":["98.13"],"怎么都复现不出来":["99.0"],"尴尬的要死":["99.0"],"如何记录项目的错误":["99.0"],"并将错误还原出来":["99.0"],"可以实现该功能":["99.1"],"最终效果":["99.1"],"红色的线代表了鼠标的移动轨迹":["99.2"],"前端录屏确实是件很酷的事情":["99.2"],"但是不能走极端":["99.2"],"同时错误信息可以和埋点信息联动":["99.3"],"便可拿到更细致的用户行为栈":["99.3"],"更快的排查线上错误":["99.3"],"监控自定义的个性化指标":["99.3"],"task":["99.3","173.32","179.36","206.16"],"memory页面内存":["99.3"],"列":["99.5"],"异常录屏":["99.5"],"how":["99.5","206.1"],"如何定位还原问题":["99.5"],"head":["99.6","127.39","178.7","279.7"],"meta":["99.6","115.0","279.7"],"charset":["99.6","121.0"],"utf":["99.6","279.2"],"css加载错误":["99.6"],"都能被捕获":["99.6"],"cn":["99.6","113.5","275.2"],"rel":["99.6"],"stylesheet":["99.6"],"promise错误":["99.6"],"promise中抛出的错误":["99.6"],"无法被":["99.6"],"logerror":["99.7"],"没有配置":["99.7"],"常规输出":["99.7"],"process":["99.7","148.1","222.3"],"warn":["99.7","216.2","219.10"],"并渲染":["99.8"],"something":["99.8"],"went":["99.8"],"wrong":["99.8"],"children":["99.8","174.40","195.7"],"div":["99.8","106.26","151.13","153.5","171.0","205.15","286.47"],"父组件":["99.8"],"脚本捕获到":["99.9"],"浏览器只允许同域下的脚本捕获具体的错误信息":["99.9"],"解决方法":["99.9","175.10"],"前端script加crossorigin":["99.9"],"后端配置":["99.9"],"各字段说明":["99.10"],"navigationstart":["99.10"],"同一个浏览器上下文中":["99.10"],"上一个文档结束时的时间戳":["99.10"],"如果没有上一个文档":["99.10"],"这个值会和":["99.10"],"fetchstart":["99.10"],"相同":["99.10"],"unloadeventstart":["99.10"],"上一个文档":["99.10"],"unload":["99.10"],"事件触发时的时间戳":["99.10"],"unloadeventend":["99.10"],"事件结束时的时间戳":["99.10"],"redirectstart":["99.10","151.7"],"表示第一个":["99.10"],"重定向开始时的时间戳":["99.10"],"如果没有重定向或者有一个非同源的重定向":["99.10"],"redirectend":["99.10"],"表示最后一个":["99.10"],"重定向结束时的时间戳":["99.10"],"表示浏览器准备好使用":["99.10"],"请求来获取文档的时间戳":["99.10"],"这个时间点会在检查任何缓存之前":["99.10"],"domainlookupstart":["99.10"],"域名查询开始的时间戳":["99.10"],"如果使用了持久连接或者本地有缓存":["99.10"],"domainlookupend":["99.10"],"域名查询结束的时间戳":["99.10"],"connectstart":["99.10"],"请求向服务器发送连接请求时的时间戳":["99.10"],"如果使用了持久连接":["99.10"],"btn":["99.11","106.32","154.14"],"按钮":["99.11"],"1668759620485":["99.11"],"添加一条调用接口行为":["99.11"],"上报路由变化":["99.12"],"reportdata":["99.12"],"routechange":["99.12"],"innertext":["99.13"],"获取包含id":["99.13"],"innertextde字符串的标签":["99.13"],"过滤掉非静态资源的":["99.14"],"xmlhttprequest":["99.14"],"beacon":["99.14"],"entry":["99.14"],"indexof":["99.14","100.2","179.56","241.3","241.7"],"observer":["99.15","151.13","181.0"],"new":["99.15","107.2","109.6","127.34","133.7","153.8","154.4","154.5","154.10","154.12","154.16","154.17","166.9","173.56","173.98","179.23","179.57","184.11","192.2","206.15","222.7","256.5","286.28","286.43"],"load事件中获取此时页面的内存大小":["99.16"],"complete":["99.17"],"停止定时器和":["99.17"],"取消对document的监听":["99.17"],"errorhandler中上报错误":["99.19"],"react项目在errorboundary中上报错误":["99.19"],"对应的用户行为会添加到该错误信息中":["99.21"],"url受浏览器长度限制":["99.22"],"后台实现错误还原功能":["99.23"],"xhr":["99.23","152.20"],"请求报错":["99.23"],"上报接口报错信息":["99.23"],"甚至加密":["100.0"],"当线上代码报错时":["100.0"],"很难定位到具体的源码":["100.0"],"完美解决了代码反解的问题":["100.0"],"项目在打包时":["100.0"],"除了生成最终":["100.0"],"names":["100.1"],"转换前的所有变量名和属性名":["100.1"],"sourcescontent":["100.1"],"原始文件内容":["100.1"],"从sourcescontent得到具体的源码信息":["100.2"],"上述代码中会在执行到":["100.3"],"函数的时候报错":["100.3"],"调用栈为":["100.3"],"如下图所示":["100.3"],"解析后的stackframe为":["100.4"],"stackframe":["100.4"],"经过":["100.4"],"consumer":["100.4"],"从":["100.5","175.10","286.42"],"checkouteverynms":["100.6"],"每10s重新制作快照":["100.6"],"checkouteverynth":["100.6"],"使用增量快照的处理方式":["100.7"],"mutationobserver":["100.7"],"获取":["100.7","179.54","195.3"],"增量变化":["100.7"],"同步转换为":["100.7"],"数据进行存储":["100.7"],"整个录制的过程会生成":["100.7"],"unique":["100.7"],"来确定增量数据所对应的":["100.7"],"atob":["100.8"],"chardata":["100.8"],"charcodeat":["100.8"],"bindata":["100.8"],"uint8array":["100.8"],"ungzip":["100.8"],"切片处理数据":["100.8"],"防止内存溢出报错":["100.8"],"作为下次使用":["100.9"],"generateuuid":["100.9"],"transportdata":["100.9"],"send":["100.9","126.5","175.4","175.5"],"eventtypes":["100.9"],"recordscreen":["100.9"],"time":["100.9","127.35","151.4","156.22","172.0","206.14","206.15"],"gettimestamp":["100.9"],"方便于我们计算":["101.1"],"rem":["101.3"],"selectorblacklist":["101.3"],"el":["101.3","286.33"],"过滤掉":["101.3"],"开头的class":["101.3"],"不进行rem转换":["101.3"],"文件中导入依赖":["101.3"],"settimeout":["101.5","106.27","132.2","132.3","156.20","217.7","279.8"],"改变窗口大小重新绘制":["101.5"],"windowdraw":["101.5"],"unwindowdraw":["101.5"],"removeeventlistener":["101.5","156.15"],"相关界面引入":["101.5"],"报错":["102.0","127.20","140.3","179.19"],"依赖预构建就可以很好的解决这个问题":["102.0"],"首先会找到依赖的模块":["102.0"],"然后调用":["102.0"],"等其他规范的代码转换成":["102.0"],"规范":["102.0"],"然后把它放在":["102.0"],"deps":["102.0","156.16"],"目录下":["102.0","113.6"],"接着修改相应的引入路径":["102.0"],"由于浏览器是通过":["102.0"],"来请求模块文件的":["102.0"],"一旦模块的依赖关系比较多的话":["102.0"],"就会发起很多个网络请求":["102.0"],"例如":["102.0","127.12","152.15","173.68","173.90","179.11","179.38"],"内置模块超过":["102.0"],"个":["102.0","156.14"],"它们之前相互导入":["102.0"],"当我们执行以下代码时":["102.0"],"浏览器会同时发出":["102.0"],"多个":["102.0","106.18","254.6"],"大量的请求造成网络堵塞":["102.0"],"导致页面的加载非常的慢":["102.0"],"preset":["102.1"],"是一个预设环境插件":["102.1"],"包含高级":["102.1"],"前缀补全等众多功能":["102.1"],"接下来我们在":["102.1"],"中配置一下":["102.1"],"defineconfig":["102.1","102.4"],"导入脚本作为":["102.2"],"脚本可以通过":["102.2"],"或":["102.2","113.4","120.0","127.35","174.12"],"sharedworker":["102.2"],"后缀导入为":["102.2"],"对一个根字段使用具名导入":["102.3"],"有效帮助":["102.3"],"自带的":["102.5"],"vitejs":["102.5","115.0"],"legacy":["102.5"],"必须安装":["102.5"],"terser":["102.5"],"会使用":["102.5","148.4"],"进行压缩":["102.5"],"0插件":["103.0"],"详细配置可以见文档":["103.0"],"此处不做详细解释":["103.0"],"接下来是搭建vue3":["103.0"],"我们注意到里面返回的设备id和label是空的":["103.1"],"重新再获取一次设备列表看看发生了什么变化":["103.2"],"组id":["103.3"],"用一个设备的输入输出的组id是同一个":["103.3"],"groupid":["103.3"],"本地音频在本地扬声器播放":["103.4"],"suppresslocalaudioplayback":["103.4"],"一对一连接":["103.4"],"当我们采集到了音视频数据":["103.4"],"接下来就是要建立链接":["103.4"],"进行nat穿透":["103.5"],"完成链接建立":["103.5"],"话已经讲了这么多":["103.5"],"query":["103.6","166.6"],"房间号":["103.6"],"由输入框输入获得":["103.6"],"room":["103.6"],"userid通过uuid获取":["103.6"],"any":["103.7","181.0","195.9","214.2","263.6"],"服务收到了这份offer后需要给b发送a的offer":["103.7"],"fastify":["103.7"],"answer":["103.8","103.9","103.15"],"createanswer":["103.8","103.15"],"rtcicecandidate":["103.10"],"广播有人加入了":["103.12"],"emit":["103.12","166.5","283.7"],"这个人断开了链接需要将这个人从redis中删除":["103.12"],"disconnect":["103.12"],"由于存在多份rtc的映射关系":["103.13"],"我们这里可以用map来实现映射的保存":["103.13"],"peerconnectlist":["103.13"],"then":["103.14","133.5","161.0","175.6","215.2","283.6"],"setremotedescription":["103.15"],"recording":["103.16"],"被记录或者作为webrtc":["103.16"],"createobjecturl":["103.17"],"没有录制文件":["103.17"],"downloadlocalrecord":["103.17"],"然后我们就可以愉快的录制视频了":["104.0"],"当然这里只是用分享屏幕的方式来录制视频":["104.0"],"如果你想要录制摄像头的视频":["104.0"],"也是一样":["104.0"],"拿到媒体流后":["104.0"],"就可以直接录制了":["104.0"],"线上体验地址":["104.0"],"既然都拿到了媒体流":["104.0"],"那么我们也可以将媒体流中的视频轨道录制成":["104.0"],"这样在一些场景下分享起来也会更加方便":["104.0"],"不支持将":["104.0"],"设置成":["104.0","225.0"],"所以我们需要借助一个第三方库":["104.0"],"mediastreamrecorder":["104.0"],"它的用法和":["104.0"],"基本一致":["104.0"],"我就不再赘述了":["104.0"],"最后有一个需要注意的地方":["104.0"],"也是我在实际项目中遇到的问题":["104.0"],"在使用":["104.0"],"录制视频的时候":["104.0"],"如果你的系统是":["104.0"],"windows":["104.0","113.4"],"os":["104.0","173.32"],"那么录制的视频没什么问题":["104.0"],"但是在":["104.0"],"mac":["104.0"],"linux":["104.0","141.6"],"录制摄像头和分享屏幕时":["104.0"],"选择网页的分享方式":["104.0"],"所拿获得的媒体流是可以拿到视频轨道和音频轨道的":["104.0"],"但是录制整个屏幕时":["104.0"],"由于系统的限制":["104.0"],"只能拿到视频的轨道":["104.0"],"好在一般录屏都不会有带音频的需求":["104.0"],"期待后面能够支持":["104.0"],"实现视频的虚拟背景":["104.0"],"我们经常会看到一些人在视频中的背景是虚拟的":["104.0"],"这样可以让我们更专注于对方的表情和语言":["104.0"],"而不会被背景中的一些干扰因素所分散注意力":["104.0"],"那么我们如何实现这样的效果呢":["104.0"],"下面我们先通过一个简单的":["104.0"],"来看看效果":["104.0"],"主要原理是通过":["104.0"],"将视频中的每一帧画到画布上":["104.0"],"然后将画布中的像素逐个与设定的背景色":["104.0"],"默认是绿色":["104.0"],"你可以更换为任意符合你背景的颜色":["104.0"],"进行计算":["104.0"],"比较后的差值达到设定的阈值时":["104.0"],"对其进行处理":["104.0"],"将其更换为预先准备好的背景图的图像数据":["104.0"],"最后将处理后的图像数据再画到虚拟背景画布上":["104.0"],"通过虚拟背景画布拿到媒体流后给到":["104.0"],"标签播放":["104.0"],"这样就实现了视频的虚拟背景效果":["104.0"],"下面我们来看看具体的实现":["104.0"],"为保持大小一致":["104.0"],"这里我们统一设置画布和视频的宽高为":["104.0"],"backgroundimg":["104.0"],"virtual":["104.0","195.4"],"首先我们需要准备好背景图":["104.0"],"这里我使用了一张图片":["104.0"],"你也可以使用视频作为背景":["104.0"],"将背景图画到画布上":["104.0"],"getimagedata":["104.0"],"方法拿到图像数据":["104.0"],"虚拟背景的":["104.0"],"canvas中的图片数据":["104.0"],"backgroundimagedata":["104.0"],"imagedata":["104.0"],"获取背景图像数据":["104.0"],"getbackgroundimagedata":["104.0"],"backgroundcanvas":["104.0"],"htmlcanvaselement":["104.0"],"backgroundctx":["104.0"],"xxxx":["104.0"],"onload":["104.0","126.6","126.8","175.5","286.1"],"然后我们需要通过摄像头获取到视频流":["104.0"],"还是用之前几个":["104.0"],"中的方法":["104.0"],"播放原始视频流":["104.0"],"playrealvideo":["104.0"],"realvideo":["104.0"],"上述步骤完成后":["104.0"],"我们就可以通过创建":["104.0"],"规则集中最后一条声明可以省略分号":["106.2"],"但是并不建议这么做":["106.2"],"因为容易出错":["106.2"],"描述":["106.3","184.15"],"动画的关键帧":["106.3"],"document":["106.3","106.27","152.8","154.14","160.0","173.20","207.8","279.2","286.4","286.65","286.66"],"如果文档样式表满足给定条件则条件规则组里的规则生效":["106.3"],"导入的样式需等页面加载完成后再加载":["106.5"],"没有兼容性问题":["106.5"],"不兼容":["106.5"],"指定的颜色":["106.6"],"这些是我们":["106.7"],"开发人员设置的样式":["106.7"],"作者样式表中的":["106.7"],"important":["106.7"],"属性包含指定值":["106.9"],"完整单词":["106.9"],"后代选择器":["106.10"],"元素的首行":["106.11"],"nth":["106.11","170.15"],"child":["106.11","170.15","177.10","195.4","195.7","216.2","252.3"],"元素中指定顺序索引的元素":["106.11"],"元素中指定逆序索引的元素":["106.11"],"元素中为首的元素":["106.11"],"而给属性值加上":["106.13"],"又可以把优先级提至最高":["106.13"],"就是因为它的优先级最高":["106.13"],"所以需要谨慎使用它":["106.13"],"以下有些使用注意事项":["106.13"],"一定要优先考虑使用样式规则的优先级来解决问题而不是":["106.13"],"position":["106.14","153.7","170.4","170.8","170.12","170.14","214.2"],"使用浮动":["106.15"],"float":["106.15"],"会将元素脱离文档流":["106.15"],"移动到容器左":["106.15"],"右侧边界或者是另一个浮动元素旁边":["106.15"],"元素所占用的实际宽度为":["106.16"],"而内容的真实宽度则是":["106.16"],"将会决定这个盒子的":["106.17"],"个显示类型":["106.17"],"outer":["106.17"],"padding":["106.18","156.10","168.7"],"margin":["106.18"],"不会占满一行":["106.18"],"宽度随着内容而变化":["106.18"],"元素将按照从左到右的顺序在一行里排列显示":["106.18"],"如果一行显示不下":["106.18"],"则自动换行":["106.18"],"replaced":["106.19"],"element":["106.19","127.13","195.4","209.15","235.4","241.1"],"申明为":["106.19"],"是不会产生":["106.19"],"弹性格式化上下文":["106.20"],"gfc":["106.20"],"grid":["106.20","115.0"],"合并":["106.21","178.3"],"渲染原理之一":["106.21"],"同一个":["106.21"],"下的垂直":["106.21"],"会发生合并":["106.21"],"所以如果让":["106.21"],"个元素不在同一个":["106.21"],"中即可阻止垂直":["106.21"],"那如何让":["106.21"],"个相邻的兄弟元素不在同一个":["106.21"],"中呢":["106.21"],"可以给其中一个元素外面包裹一层":["106.21"],"然后触发其包裹层的":["106.21"],"这样一来":["106.21"],"个元素就不会在同一个":["106.21"],"由于一行没办法显示完全":["106.22"],"所以产生了":["106.22"],"个线盒":["106.22"],"线盒的宽度就继承了":["106.22"],"的宽度":["106.22"],"高度是由里面的内联盒子的":["106.22"],"决定":["106.22"],"匿名的内联盒子":["106.22"],"layout":["106.23"],"或包含它们其中之一的合成值":["106.23"],"层叠等级":["106.23","179.3"],"层叠等级指节点在三维空间":["106.23"],"轴上的上下顺序":["106.23"],"它分两种情况":["106.23"],"在同一个层叠上下文中":["106.23"],"它描述定义的是该层叠上下文中的层叠上下文元素在":["106.23"],"在其他普通元素中":["106.23"],"它描述定义的是这些普通元素在":["106.23"],"linear":["106.24"],"gradient":["106.24"],"而还有些值是需要带单位的":["106.24"],"从技术角度说":["106.25"],"只存在于计算机显示领域":["106.25"],"只出现于打印或印刷领域":["106.25"],"屏幕对角线的像素尺寸":["106.25"],"物理尺寸":["106.25"],"对于分辨率为":["106.25"],"iphone":["106.25"],"在计算的时候是会层层计算的":["106.26"],"context":["106.27","113.6","154.4","154.5","154.10","154.16","154.17","178.7"],"args":["106.27","107.2","129.6"],"arguments":["106.27","109.6","129.7","131.8","131.9","173.8","173.23","214.2","283.4"],"cleartimeout":["106.27","283.12"],"比如当视口是":["106.27"],"经过计算":["106.27"],"外":["106.28","106.41"],"还有":["106.28"],"vmin":["106.28"],"currentcolor":["106.29"],"颜色或":["106.30"],"颜色标准":["106.30"],"添加可":["106.30"],"rebeccapurple":["106.30"],"关键字来纪念":["106.30"],"0px":["106.31","170.15"],"通过边框的粗细来填充内容":["106.31"],"那条边需要就要加上颜色":["106.31"],"而不需要的边则用":["106.31"],"想要什么样姿势的三角形":["106.31"],"完全由上下左右":["106.31"],"条边的中有颜色的边和透明的边的位置决定":["106.31"],"等腰三角形":["106.31"],"这":["106.33"],"个颜色值需要保持一致的写法":["106.33"],"要嘛用数字要嘛用百分比":["106.33"],"而不透明度的值的可以不用和":["106.33"],"保持一致写法":["106.33"],"这个写法是无效的":["106.33"],"以下全部写法效果一致":["106.34"],"ff0000aa":["106.34"],"f00a":["106.34"],"rgba":["106.34","170.8","170.12"],"pc":["106.35"],"pad":["106.35","214.2"],"和手机端":["106.35"],"1000px":["106.35"],"媒体查询支持逻辑操作符":["106.35"],"查询条件都满足的时候才生效":["106.35"],"使用变量":["106.36"],"top":["106.37","134.3","153.11","170.2","170.14","175.6"],"solid":["106.37","171.0"],"sizing":["106.37"],"那该如何做呢":["106.38"],"这里介绍两种方法":["106.38"],"auto":["106.39","116.4"],"来简单的实现":["106.39"],"但是为了兼容":["106.39"],"ie":["106.39"],"清楚浮动原理":["106.40"],"上面这个":["106.40"],"或者图里为了展示需要所以给伪元素的内容设置为了":["106.40"],"spacing":["106.41"],"他的这份":["106.41"],"据说是被使用最广泛的重设样式的方案了":["106.41"],"后来又出现了":["106.41"],"normalize":["106.41","228.2"],"其作者":["106.41"],"necolas":["106.41"],"专门写了一篇文章介绍了它":["106.41"],"并谈到了它和":["106.41"],"下面这种技术标签就是属于整块文本":["106.42"],"另外他还对":["106.42"],"不固定宽高的块级盒子":["106.43"],"以下列到的所有水平垂直居中方案这里写了个":["106.43"],"方法二":["106.44","106.50"],"通过设置":["106.44"],"height":["106.44","153.5","153.6","153.11","170.8","170.14"],"方法三":["106.45","106.46","106.48"],"方法四":["106.46","106.49"],"flex":["106.48","156.2"],"50px":["106.51"],"overflow":["106.51","179.3"],"插入耳机":["107.2"],"methods":["107.4"],"see":["107.4"],"msdn":["107.4"],"microsoft":["107.4"],"us":["107.4"],"ms536648":["107.4"],"vs":["107.4"],"aspx":["107.4"],"w3":["107.4","172.0"],"org":["107.4","172.0","275.2"],"protocols":["107.4"],"代理模式是为了增强原对象的功能":["107.5"],"如果我们有个需求是在每个页面加载的时候上报一些自定义数据":["108.1"],"让我们用":["108.2"],"改写一下":["108.2"],"达到同样的效果":["108.2"],"页面渲染后":["108.3"],"同理":["108.3"],"利用装饰器模式我们也可以对其它生命周期统一插入我们需要做的事情":["108.3"],"而不需要业务方自己再写一遍":["108.3"],"在大团队的话":["108.3"],"每个业务方可能都需要在小程序生命周期做一些事情":["108.3"],"此时只需要利用装饰器模式":["108.3"],"编写一个装饰函数":["108.3"],"而装饰器模式":["108.4"],"我们只提供装饰函数":["108.4"],"装饰函数":["108.4"],"然后对原始对象进行装饰":["108.4"],"之前拿到了":["109.1"],"就塞入":["109.1"],"functionality":["109.4"],"proxyexample":["109.6"],"method":["109.6","175.6","286.44","286.45"],"hires":["109.6"],"10mb":["109.6"],"photo1":["109.6"],"原有的":["109.6"],"类在":["109.6"],"对象的时候就会调用":["109.6"],"如果之后没有调用":["109.6"],"并且":["109.6"],"比较占资源":["109.6"],"那就会是一种浪费":["109.6"],"我们将原有的":["109.7"],"添加观察者":["110.2"],"新文章":["110.2","111.4"],"观察者模式":["110.2","111.4"],"balabala":["110.2","111.4"],"更新文章":["110.2"],"通知观察者":["110.2"],"输出结果如下":["110.2"],"上边的实现主要是为了符合最原始的定义":["110.2"],"的时候没有传参":["110.2"],"如果观察者需要的参数是一致的":["110.2"],"其实这里也可以直接把更新后的数据传过去":["110.2"],"这样观察者就不需要向上边一样再去调用":["110.2"],"手动拿更新后的数据了":["110.2"],"这两种不同的方式前者叫做拉":["110.2"],"pull":["110.2","114.10","119.11"],"就是收到":["110.2"],"的通知后":["110.2"],"通过内部的":["110.2"],"对象调用相应的方法去拿到需要的数据":["110.2"],"后者叫做推":["110.2"],"更新的时候就将数据推给观察者":["110.2"],"观察者直接使用即可":["110.2"],"下边用":["110.2"],"改写为推模式":["110.2"],"模块和其他":["111.1"],"同一种功能可能会见到不同名字":["111.2"],"这里都导出去":["111.2"],"attach":["111.2"],"detach":["111.2"],"并且收藏":["111.4"],"我收到了新文章":["111.4"],"虽然是先进行的":["111.4"],"后进行的":["111.4"],"但依旧会正常执行":["111.4"],"上边的解决方案很粗略":["111.4"],"只适用于有一个事件并且只有一个":["111.4"],"的场景":["111.4","179.46"],"不然的话比如下边的情况":["111.4"],"balance":["112.1"],"openbalancepop":["112.1"],"cash":["112.1"],"opencashbalancepop":["112.1"],"constructor":["112.2","179.55"],"主要是利用到类的多态":["112.2"],"根据传入":["112.2"],"中不同的":["112.2"],"来执行不同的":["112.2"],"如果未来有新增算法的话":["112.2"],"只需要新增一个类即可":["112.2"],"那如果是":["112.2"],"呢":["112.2","195.6"],"众所周知":["112.2"],"之前":["112.2"],"waitreward":["112.3"],"poster":["112.3"],"hex":["112.4"],"校验前会执行下边的代码":["112.4"],"填充相应的":["112.4"],"arr":["112.4","179.33"],"r":["112.4","173.69","241.1","241.10"],"typeof":["112.4","127.14","131.7","184.12","204.6","222.3","232.3"],"function":["112.4","126.2","126.5","127.36","129.6","130.4","148.0","154.2","156.4","159.2","159.5","179.30","179.41","195.7","195.8","196.10","216.6","232.3","250.3","286.7"],"fill":["112.4","153.8","179.9"],"skip":["112.4","214.2","251.2"],"认识":["113.0"],"核心概念":["113.0"],"拎包入住":["113.1"],"是不是很神奇":["113.1"],"对应到我们的项目中来":["113.1"],"房子就是项目本身":["113.1"],"镜像就是项目的复制":["113.1"],"背包就是镜像仓库":["113.1"],"如果要动态扩容":["113.1"],"系统资源":["113.2"],"启动时间":["113.2"],"分钟级":["113.2"],"秒级":["113.2"],"镜像存储":["113.2"],"tb":["113.2"],"集群规模":["113.2"],"上百":["113.2"],"上万":["113.2"],"启动快":["113.3"],"如何做到和宿主机共享内核":["113.3"],"当我们请求":["113.3"],"运行容器时":["113.3"],"如何在":["113.4"],"macos":["113.4","260.1","260.2"],"上运行":["113.4"],"实际上使用了一个技巧":["113.4"],"并在非":["113.4"],"registry":["113.5","114.3"],"mirrors":["113.5","275.2"],"hub":["113.5"],"mirror":["113.5","275.2"],"复制到":["113.6"],"用本地的":["113.6"],"配置来替换":["113.6"],"镜像里的默认配置":["113.6"],"构建镜像":["113.6"],"命令来构建镜像":["113.6"],"jartto":["113.6"],"按照惯例":["113.6"],"我们解释一下上述代码":["113.6"],"参数给镜像命名":["113.6"],"是基于当前目录的":["113.6"],"来构建镜像":["113.6","114.13"],"执行成功后":["113.6"],"将会输出":["113.6"],"sending":["113.6"],"4mb":["113.6"],"step":["113.6","195.4"],"gt":["113.6"],"2622e6cca7eb":["113.6"],"usr":["113.7"],"java1":["113.7"],"expose":["113.7"],"暴露对外的端口":["113.7"],"容器内部程序的端口":["113.7"],"虽然会和宿主机的一样":["113.7"],"但是其实是两个端口":["113.7"],"port":["113.7","175.16"],"容器运行时":["113.7"],"需要用":["113.7"],"映射外部端口才能访问到容器内的端口":["113.7"],"volume":["113.7"],"指定数据持久化的目录":["113.7"],"官方语言叫做挂载":["113.7"],"指定容器中需要被挂载的目录":["113.7"],"会把这个目录映射到宿主机的一个随机目录上":["113.7"],"说明文档":["113.8"],"整个镜像打包步骤可以重现":["113.8"],"推荐如下两篇文章":["113.8"],"intro":["113.8"],"更好的环境隔离也更大程度地避免了生产环境与测试环境不一致的巨大尴尬":["114.0"],"可以对各种服务以及应用容器化":["114.3"],"是镜像的运行实例":["114.3"],"镜像仓库":["114.3"],"存储大量镜像":["114.3"],"它将":["114.5"],"此时的项目目录结构是这样的":["114.9"],"htm":["114.11"],"运行docker":["114.13"],"ls":["114.13","137.0"],"可以运行docker":["114.15"],"查看容器id":["114.15"],"以后我们要使用":["114.17"],"再也不需要":["114.17"],"搬石头":["114.17"],"砍木头":["114.17"],"画图纸":["114.17"],"cgroups":["114.18"],"mnt":["114.19"],"隔离文件系统挂载":["114.19"],"f20a6d8b6721":["114.21"],"days":["114.21"],"ago":["114.21"],"105mb":["114.21"],"指定镜像以及版本号":["114.22"],"指当前路径":["114.22"],"lock":["114.23"],"workdir":["114.23"],"dest":["114.25"],"shell":["114.27","193.9"],"is":["114.29","127.18","141.3","148.5","173.98","195.7","225.4","232.4","236.1","241.1","241.10","256.8","295.3"],"installed":["114.29","138.2"],"working":["114.29","206.8"],"further":["114.29","214.0"],"required":["114.29","195.9"],"online":["114.29"],"documentation":["114.29"],"support":["114.29","148.3","219.10"],"please":["114.29"],"refer":["114.29"],"stats":["114.30","191.3"],"查看容器资源占用":["114.30"],"container":["114.31","115.0","177.14","214.0"],"openssl":["114.32"],"0l":["114.32"],"sep":["114.32"],"在当前目录":["114.32"],"sh":["115.0"],"oqsyo4aig":["115.0"],"evan":["115.0"],"you":["115.0","256.8"],"式推出了":["115.0"],"版本":["115.0"],"自此之后":["115.0"],"生态飞速增长":["115.0"],"很快达到了每周":["115.0"],"万的":["115.0"],"下载量":["115.0"],"距离":["115.0","122.11"],"v2":["115.0"],"个月":["115.0"],"主要更新如下":["115.0"],"全新的":["115.0"],"vitepress":["115.0"],"文档":["115.0"],"开发阶段优化":["115.0"],"优化":["115.0","152.25"],"默认端口变更为":["115.0"],"改进":["115.0"],"websocket":["115.0","133.9","195.4"],"连接策略":["115.0"],"冷启动性能优化":["115.0"],"语法更新":["115.0"],"构建阶段优化":["115.0"],"产物默认使用":["115.0"],"esm":["115.0"],"relative":["115.0","170.8","170.12"],"实验功能":["115.0"],"资产路径细粒度控制":["115.0"],"构建时优化":["115.0"],"hmr":["115.0","235.4"],"partial":["115.0","239.2"],"announ":["115.0"],"在今年的":["115.0"],"月份":["115.0"],"又发布了":["115.0"],"不过相比":["115.0"],"版本更新范围较小":["115.0"],"所以不过多介绍":["115.0"],"状态码提供支持":["115.0"],"状态码":["115.0"],"early":["115.0"],"是一个信息性":["115.0"],"状态代码":["115.0"],"可以用于在最终响应之前发送一个初步的":["115.0"],"响应":["115.0"],"它可以算作":["115.0"],"的升级改良版":["115.0"],"利用":["115.0","171.0","181.0"],"可以让服务器在服务器处理主资源的同时向浏览器发送一些关键子资源":["115.0"],"或字体文件":["115.0"],"或页面可能使用的其他来源的提示":["115.0"],"浏览器可以使用这些提示来预热连接":["115.0"],"并在等待主资源响应的同时请求子资源":["115.0"],"可以通过提前做一些工作来帮助浏览器利用这种服务器思考时间":["115.0"],"从而提升页面的渲染性能":["115.0"],"宣布在":["115.0"],"版本对":["115.0"],"状态码提供了支持":["115.0"],"bashi":["115.0"],"httpd":["115.0"],"apache":["115.0"],"ho":["115.0"],"支持了":["115.0"],"backdrop":["115.0"],"可以轻松实现一个毛玻璃效果":["115.0"],"是最后一个支持":["115.0"],"属性的浏览器":["115.0"],"目前所有浏览器均已对它提供支持":["115.0"],"03":["115.0","159.0"],"容器查询和":["115.0"],"has":["115.0","127.16","127.17","148.4","181.0","212.1","214.1","218.4","232.2"],"新增了容器查询和":["115.0"],"这兄弟俩可以让我们能够查询父选择器的大小和样式信息":["115.0"],"同时使子元素可以拥有响应式样式逻辑":["115.0"],"有点类似":["115.0"],"media":["115.0"],"查询":["115.0"],"区别是它们根据的是容器的大小而不是视口的大小进行判断的":["115.0"],"要使用容器查询":["115.0"],"我们可以在卡片容器上设置":["115.0"],"inline":["115.0"],"ard":["115.0"],"然后我们就可以使用":["115.0"],"将该容器的样式应用到它的任何子节点":["115.0"],"card":["115.0"],"display":["115.0","156.2","168.3","214.0","228.2"],"columns":["115.0"],"1fr":["115.0"],"400px":["115.0"],"当容器小于":["115.0"],"它就会切换到单列布局":["115.0"],"伪类更进一步":["115.0"],"它可以让我们检查父元素是否包含具有特定参数的子元素":["115.0"],"span":["115.0","279.4"],"表示一个段落选择器":["115.0"],"你可以使用它来设置父段落本身或其中的任何内容的样式":["115.0"],"magic":["115.0"],"styles":["115.0","192.1","192.3"],"figure":["115.0"],"figcaption":["115.0"],"wi":["115.0"],"islands":["115.0"],"架构框架":["115.0"],"astro":["115.0"],"是一个新型的":["115.0"],"它的测试版已经运行一年多":["115.0"],"近期":["115.0"],"终于发布了正式版本":["115.0"],"采用了独特的":["115.0"],"island":["115.0"],"组件架构":["115.0"],"团队称这是一种用于构建更快网站的新型":["115.0"],"与传统的":["115.0"],"不同":["115.0"],"的组件不会被打包到一个":["115.0"],"文件中":["115.0"],"相反":["115.0"],"每个组件都被视为一个独立的小型应用程序":["115.0"],"与所有其他组件隔离存在":["115.0"],"withastro":["115.0"],"getting":["115.0"],"将被删除":["115.0"],"即在浏览响应":["115.0"],"文件的时候":["115.0"],"服务器会同时将所需的资源文件主动推送给浏览器":["115.0"],"浏览器在收到推送的资源之后会缓存到本地":["115.0"],"等解析":["115.0"],"发现需要加载对应资源的时候会直接从本地读取":["115.0"],"不必再等待网络传输了":["115.0"],"虽然这听起来很神奇":["115.0"],"撤销":["116.1"],"的修改内容":["116.1"],"配置git使用的文本编辑器":["116.4"],"如果想删除远程分支":["117.1"],"romote":["117.1"],"这里省略了本地分支":["117.1"],"也就相当于将空白内容推送给远程分支":["117.1"],"就等于删掉了远程分支":["117.1"],"目录下的所有文件":["117.2"],"会忽略":["117.2"],"doc":["117.2"],"notes":["117.2"],"txt":["117.2","137.0"],"但不包括":["117.2"],"查看第一个储藏的改动":["118.3"],"应用stash":["118.4"],"list中的储藏并删除":["118.4"],"branchname":["118.6"],"提交工作区中某个文件夹中所有文件到暂存区":["119.3"],"还可以立刻从堆栈中清除":["119.4"],"pop":["119.4","174.60","286.40"],"在某些情况下":["119.4"],"你可能想应用储藏的修改":["119.4"],"在进行了一些其他的修改后":["119.4"],"又要取消之前所应用储藏的修改":["119.4"],"git没有提供类似于":["119.4"],"unapply":["119.4"],"original":["119.5","221.3"],"指定文件在工作区和暂存区上差异比较":["119.6"],"提交文件时":["119.8"],"发现漏掉几个文件":["119.8"],"p展开每次提交的内容差异":["119.9"],"用":["119.9"],"2显示最近的两次更新":["119.9"],"验证已签署的标签":["119.10"],"创建一个轻量级标签的话":["119.10"],"就直接使用":["119.10"],"从远程分支checkout出来的本地分支":["119.11"],"称之为跟踪分支":["119.11"],"在跟踪分支上向远程分支上推送内容":["119.11"],"该命令会自动判断应该向远程仓库中的哪个分支推送数据":["119.11"],"在跟踪分支上合并远程分支":["119.11"],"将一个分支里提交的改变移到基底分支上重放一遍":["119.11"],"rebase":["119.11"],"dtd":["120.0","172.0"],"定义了":["120.0"],"xml":["120.0"],"w3c":["120.1","128.0","135.0"],"的标准解析渲染页面":["120.1"],"loose":["120.2","172.0"],"frameset":["120.2"],"框架":["120.2"],"标准模式与怪异模式":["120.3"],"浏览器渲染页面的两种模式":["120.3"],"标准模式和怪异模式":["120.3"],"统一资源标识符":["120.4"],"就是声明最后的地址":["120.4"],"会导致页面以混杂模式呈现":["120.4"],"dtd不存在或者格式不正确":["120.4"],"每个浏览器都有自己的解析模式":["120.5"],"盒模型":["120.6"],"提供的信息与类似命名的":["121.0"],"头部相同":["121.0"],"元素是一个字符集声明":["121.0"],"mail":["121.1"],"用来设置":["121.4"],"搜索引擎讲忽略此网页":["121.5"],"也是和":["121.6"],"一起使用":["121.6"],"这个属性支持的范围是":["121.7"],"ie8":["121.7"],"ie11":["121.7"],"你可能注意到了":["121.7"],"如果在我们的":["121.7"],"我们可以设置":["121.9"],"网页开发工具":["122.0"],"doctype":["122.0","178.7"],"表示浏览器采取html5的版本显示网页":["122.0"],"必须写到文档最前面的位置":["122.0"],"是文档类型的声明标签":["122.0"],"不是html标签":["122.0"],"定义最大的标题":["122.1"],"打多少都显示一个空格":["122.2"],"是个单标签":["122.4"],"下划线":["122.5"],"优先ins":["122.5"],"div和span标签":["122.5"],"没有语义":["122.5"],"他们是一个盒子":["122.5"],"鼠标放到图片上显示的文字":["122.6"],"像素":["122.6"],"设置图像宽度":["122.6"],"同级路径":["122.7"],"文件和所需文件同一级":["122.7"],"它就具有了超链接的功能":["122.8"],"用于指定链接页面的打开方式":["122.8"],"nbsp":["122.9"],"小于号":["122.9"],"必须嵌套早":["122.10"],"标签中使用":["122.10"],"像素值":["122.11"],"规定单元边沿与其单元格中内容之间的空白":["122.11"],"默认1像素":["122.11"],"cellspacing":["122.11"],"tr":["122.12","172.0"],"th":["122.12"],"姓名":["122.12"],"找到目标单元格":["122.13"],"写上合并方式":["122.13"],"合并的单元格数量":["122.13"],"无序列表":["122.14"],"有序列表":["122.14"],"中输入其他标签或者文字是不被允许的":["122.15"],"中只能嵌套li":["122.16"],"直接在":["122.16"],"中输入其他标签或文字的做法是不被允许的":["122.16"],"个数没有限制":["122.17"],"经常是一个":["122.17"],"表单控件":["122.18","172.0"],"也称为表单元素":["122.18"],"用于设置表单数据的提交方式":["122.19"],"其取值为get或者post":["122.19"],"名称":["122.19"],"下拉表单元素":["122.20"],"睡觉":["122.21"],"复选框":["122.21"],"可以实现多选":["122.21"],"除type属性外":["122.21"],"input标签还有很多其他属性":["122.21"],"由用户自定义":["122.21"],"定义input元素的名称":["122.21"],"radio":["122.22"],"中至少包含一对":["122.23"],"标签可以轻松创建多行文本输入框":["122.24"],"每行中的字符数":["122.24"],"我们可以在文档中添加":["123.0"],"上标":["123.0"],"下标":["123.0"],"x²":["123.0"],"上面显示的标签使用":["123.1"],"open":["123.1","159.9","215.2"],"graph":["123.1"],"protocol":["123.1"],"开放图谱协议":["123.1"],"你可以使用任何标签生成器为所有其他平台生成标签":["123.1"],"重定向到另一个链接":["123.1"],"️":["123.1"],"将用户重定向到其他链接":["123.1"],"通常在付款确认后使用":["123.1"],"只需一行代码即可":["123.1"],"网络":["124.0"],"事件监听":["124.0"],"主线程将任务交给其他线程去处理":["124.0"],"自身立即结束任务的执行":["124.0"],"obj4":["125.0"],"这是个深拷贝的方法":["125.0"],"obj":["125.0","156.6","179.25","195.7","221.1"],"wade":["125.1","125.3","125.4","125.5"],"football":["125.1"],"obj2":["125.2","125.7","125.8"],"了":["125.6","260.0"],"比如下面的例子":["125.6"],"clonedeep":["125.7"],"constructor指向的是当前类本身":["125.9"],"hasownproperty":["125.9","162.2"],"实现一个递归拷贝":["125.9"],"onmessage":["126.2","159.13","179.41"],"e":["126.2","127.3","127.23","127.54","139.4","156.17","159.9","179.25","214.2","219.6","296.2"],"ws":["126.3","179.47"],"记得安装ws":["126.3"],"wss":["126.3"],"将响应结果转发给浏览器":["126.4"],"listen":["126.4"],"proxyserver":["126.4"],"running":["126.4"],"at":["126.4","170.4","206.8"],"server2":["126.4"],"createserver":["126.5"],"request":["126.5","167.1","195.4"],"html为中间代理页":["126.6"],"与a":["126.6"],"frameborder":["126.8"],"2016年6月":["127.1"],"es2016":["127.1"],"多个新的概念和语言特性":["127.1"],"2017年6月":["127.1"],"es2017":["127.1"],"进一步完善提案细则":["127.2"],"finished":["127.2"],"表示已准备好将其添加到正式的ecmascript标准中":["127.2"],"由于es6以前的属性诞生年底久远":["127.2"],"我们可以":["127.5"],"那么结果就永远是后面的值":["127.6"],"如果我们用函数参数默认值就没有这个问题":["127.6"],"我们有":["127.8"],"包装成":["127.12"],"当然了":["127.12"],"也很好地解决了回调地狱的问题":["127.12"],"ajax":["127.12","162.0"],"wm2中没有o2这个键":["127.17"],"值就是undefined":["127.17"],"property":["127.18","130.9"],"没有u修饰符时":["127.20"],"逗号前面的反斜杠是无效的":["127.20"],"加了u修饰符就报错":["127.20"],"引用":["127.20","195.4"],"re":["127.20","206.1","206.15","219.6"],"twice":["127.20"],"word":["127.20"],"k":["127.20"],"flags":["127.22"],"获取修饰符":["127.22"],"返回数值的32位单精度浮点数形式":["127.23"],"hypot":["127.23"],"返回所有数值平方和的平方根":["127.23"],"expm1":["127.23"],"返回":["127.23","206.0"],"log1p":["127.23"],"keys":["127.24","216.4","286.72"],"返回以索引值为遍历器的对象":["127.24"],"iterator":["127.24"],"values":["127.24"],"返回以属性值为遍历器的对象":["127.24"],"bat":["127.25"],"解析器都会去查找有效的转义序列":["127.27"],"但是只能得到这是一个形式错误的语法":["127.27"],"latex":["127.27"],"unicode":["127.27"],"在较老的ecmascript版本中报错":["127.27"],"如果你喜欢":["127.28"],"你甚至可以两者混用":["127.28"],"of":["127.30","181.0","206.2","216.3","218.4","219.10","232.2","281.1","286.54"],"slice":["127.31","131.8","174.44","174.48","176.5","231.3","286.27"],"maskednumber":["127.31"],"str2":["127.32"],"closing":["127.33"],"parenthesis":["127.33"],"在解构里也可以使用":["127.33"],"带有尾后逗号的数组解构":["127.33"],"带有尾后逗号的对象解构":["127.33"],"sab":["127.34"],"equal":["127.35"],"调用时":["127.35"],"如果当前线程不允许阻塞":["127.35"],"则会抛出异常":["127.35"],"大多数浏览器都不允许在主线程中调用":["127.35"],"创建子类":["127.36"],"superclass":["127.36"],"在这里定义方法和属性":["127.36"],"raw":["127.38","245.3"],"正则表达式":["127.39"],"只支持正向断言":["127.39"],"正向断言的意思是":["127.39"],"当前位置后面的字符串应该满足断言":["127.39"],"但是并不捕获":["127.39"],"例子如下":["127.39"],"fishheadfishtail":["127.39"],"fish":["127.39"],"匹配":["127.40"],"emoji":["127.40"],"modifier":["127.40"],"但是在es9之后":["127.41"],"js正则增加了一个新的标志":["127.41"],"用来表示":["127.41"],"这可以匹配任意字符":["127.41"],"代码如下":["127.41"],"groups":["127.42"],"上面便是一个简便的浅拷贝":["127.43"],"catch":["127.44","132.4","166.9","176.9","204.2","206.16","214.2","219.6","283.6","283.9","294.1"],"不过这里有一点要注意的是":["127.46"],"跟":["127.46"],"不支持单目":["127.52"],"运算符":["127.52"],"操作符对于整数的运算也没问题":["127.52"],"可是因为这些变量是":["127.52"],"而不是":["127.52"],"bigdecimal":["127.52"],"该操作符结果会向零取整":["127.52"],"也就是说不会返回小数部分":["127.52"],"preventdefault":["127.54","207.13"],"modules":["127.54","154.1","154.4","177.9","195.9"],"延时队列":["128.0"],"交互队列":["128.0"],"在这":["129.1"],"我们把对象中的数字属性称为":["129.1"],"在v8中被称为":["129.1"],"elements":["129.1","241.1","241.10"],"所以for":["129.3"],"in更适合遍历对象":["129.3"],"结构":["129.4"],"某些类似数组的对象":["129.4"],"比如arguments对象":["129.4"],"nodelist":["129.4"],"arguments对象":["129.6"],"arry":["129.7"],"seta":["129.7"],"typedarray":["129.7"],"对象等":["129.7"],"上创建一个迭代循环":["129.7"],"常用于遍历对象":["129.8"],"aa":["130.3","173.38","284.47"],"today":["130.4"],"boolean":["130.7","187.0","204.6"],"enumerable":["130.8"],"的第二个参数":["130.10"],"我们比较少用到":["130.10"],"所以很多时候我们会忘记":["130.10"],"第二个":["130.10"],"函数":["130.12","173.24","173.30","178.3","220.4","247.2","259.3"],"replacer":["130.12"],"或该字符串的前10个字符":["130.13"],"result":["131.8","132.1","174.64","291.2"],"所以需要判断":["131.10"],"p2":["132.2"],"都失败":["132.3"],"p1":["132.3","132.4"],"err":["132.4","133.5","158.3","164.3","294.1"],"的角度叫":["133.2"],"发送的信息":["133.2"],"然后通过self":["133.2"],"获取当前注册了该":["133.2"],"的所有页面":["133.2"],"通过调用每个client":["133.2"],"即页面":["133.2"],"的postmessage方法":["133.2"],"向页面发送消息":["133.2"],"这样就把从一处":["133.2"],"某个tab页面":["133.2"],"收到的消息通知给了其他页面":["133.2"],"处理完":["133.2"],"由于第二次的值":["133.3"],"与第一次的值相同":["133.3"],"所以以上的代码只会在第一次setitem时触发storage事件":["133.3"],"因此我们通过设置st来保证每次调用时一定会触发storage事件":["133.3"],"上面我们看到了三种实现跨页面通信的方式":["133.3"],"不论是建立广播频道的":["133.3"],"broadcast":["133.3"],"channel":["133.3","206.15"],"指令的消息给":["133.4"],"轮询最新的消息数据":["133.4"],"并在页面监听返回信息":["133.4"],"定时轮询":["133.4"],"指令的消息":["133.4"],"setinterval":["133.4","133.5","156.21"],"监听":["133.4","147.0","178.2"],"消息的返回数据":["133.4"],"剩下的工作就非常简单了":["133.5"],"首先打开数据连接":["133.5"],"并初始化数据":["133.5"],"对于消息读取":["133.5"],"可以在连接与初始化后轮询":["133.5"],"避免消息回传":["133.6"],"broadcastchannel":["133.7"],"alienzhou":["133.7"],"收到来自页面的消息后":["133.7"],"间进行广播":["133.7"],"comet":["133.9"],"sse":["133.9"],"路由则提供了浏览器地址变化":["134.1"],"利用history":["134.2"],"api实现url地址改变":["134.2"],"这时发生的只是设置散列值新修改的哈希值":["134.3"],"并触发onhashchange事件":["134.3"],"html中":["134.3"],"标签的属性":["134.3"],"可以设置为页面的元素id如":["134.3"],"当点击该链接时页面跳转至该id元素所在区域":["134.3"],"同时浏览器自动设置":["134.3"],"的标准":["135.0"],"浏览器实现计时器时":["135.0"],"如果嵌套层级超过5":["135.0"],"层":["135.0"],"特殊字符以及更多有联系非ascii字符都将被转化成":["136.1"],"xx格式的字符编码":["136.1"],"xx等于该字符在字符集表里面的编码的16进制数字":["136.1"],"3a":["136.2","136.8"],"3a8080":["136.2"],"8编码格式转化成escape各式的字符串":["136.3"],"把uri字符串采用utf":["136.6"],"8编码格式转化成escape格式的字符串":["136.6"],"3fa":["136.7"],"3d1":["136.7"],"26b":["136.7"],"3d":["136.7"],"e5":["136.7","166.6"],"对应nodejs的":["137.0"],"方法":["137.0","151.13"],"创建硬链接前":["137.0"],"可以这样表示":["137.0"],"创建硬链接后":["137.0"],"的inode跟源文件":["137.0"],"使用的是同一个":["137.0"],"只是现在链接数变成2了":["137.0"],"我们可以执行":["137.0"],"li":["137.0","150.10"],"查看一下":["137.0"],"第一列是inode":["137.0"],"可以看到都是":["137.0"],"这时通过软链接修改文件内容时会重新创建一个新的inode":["137.1"],"之后再创建的新文件就可以使用该inode的inode":["137.2"],"number了":["137.2"],"这时没有inode指向文件数据block":["137.2"],"应用场景":["137.4"],"悬疑":["137.5"],"那我们可以在外国的文件夹和悬疑的文件夹里分别创建硬链接":["137.5"],"这样可以避免重复拷贝电影浪费磁盘空间":["137.5"],"硬链接与源文件共用inode":["137.6"],"除了文件名不同":["137.6"],"其他与源文件一样":["137.6"],"不能对文件夹创建硬链接":["137.6"],"列出已安装软件清单":["138.2"],"显示所有":["138.6"],"f":["138.6","142.14","241.1","241.10"],"全格式显示":["138.6"],"ef":["138.9"],"grep":["138.9"],"referer":["138.21","175.21"],"当前请求上一次页面访问的地址":["138.21"],"时间格式":["138.22"],"服务器时间":["138.22"],"gmt时间":["138.22"],"则直接寻找其填写路径":["138.23"],"的时候":["138.26","173.34","206.15"],"将其反向代理到":["138.26"],"http请求方法":["138.27"],"deeruby":["138.28","138.34"],"timeout":["138.31","217.4"],"5m":["138.31"],"超时时间":["138.31"],"ciphers":["138.31"],"high":["138.31"],"anull":["138.31"],"rewrite":["138.32"],"underline":["138.33"],"webp":["138.34"],"root":["138.34","139.4","205.11","243.2"],"该":["138.39"],"不参与负载均衡":["138.39"],"限制每个name对应的连接数":["138.40"],"限制每个name对应的请求数":["138.40"],"前10兆大小不限速":["138.40"],"google":["139.1"],"可以做缓存":["139.1"],"加速访问资源":["139.1"],"保证内网的安全":["139.2"],"通常将反向代理作为公网访问地址":["139.2"],"wwwroot":["139.4"],"所有动态请求都转发给":["139.4"],"runmain":["140.0"],"startup":["140.0"],"bootstrap":["140.0"],"bootstrapnodejscore":["140.0"],"可以看到报错的顶层有一个自执行的函数":["140.0"],"函数中包含":["140.0"],"变量":["140.2","179.8"],"这显然是不对的":["140.2"],"在模块化机制中":["140.2"],"字符串应该具有自身独立的运行空间":["140.2"],"自身不存在的变量是不可以直接使用的":["140.2"],"模块时可以采用":["140.3"],"定义包裹模块内容的函数":["140.5"],"定义扩展名":["140.5"],"不同的扩展名":["140.5"],"加载方式不同":["140.5"],"实现js和json":["140.5"],"提升性能":["140.9"],"arraybuffer":["141.2"],"f2":["141.2"],"func":["141.3"],"v1":["141.3"],"reverse":["141.4","156.14"],"反向解析":["141.4"],"ip":["141.4","177.13"],"指向该":["141.4"],"地址的域名数组":["141.4"],"aix":["141.6"],"darwin":["141.6"],"freebsd":["141.6"],"openbsd":["141.6"],"sunos":["141.6"],"以及":["141.6"],"win32":["141.6"],"uptime":["141.6"],"操作系统正常运行时间":["141.6"],"命令":["141.8"],"bashname":["141.8"],"类似":["141.8"],"extname":["141.8"],"返回路径中文件的后缀名":["141.8"],"即路径中最后一个":["141.8"],"包含":["141.8"],"的部分":["141.8"],"如果一个路径中并不包含":["141.8"],"或该路径只包含一个":["141.8"],"且这个":["141.8"],"使用淘宝源会报错":["142.12"],"弃用信息":["142.17"],"low":["142.27"],"随便你":["142.27"],"软链就变得极为有用了":["143.1"],"在主项目里链接这个依赖的模块":["143.2"],"project":["143.4"],"packagename":["143.5"],"但是既然有同学提出来了":["143.6"],"unlink":["143.7","143.8"],"rm":["143.9"],"depth":["143.10"],"虽然没有安装":["144.1"],"service的全局命令":["144.1"],"会到":["144.1"],"中找到":["144.1"],"为什么会有三个文件呢":["144.2"],"service":["144.5"],"optionaldependencies":["145.2"],"可选依赖":["145.2"],"minor":["145.3"],"小版本号加":["145.3"],"tag":["145.6","200.4","206.13","206.14","214.3"],"version参数":["145.6"],"prefetch":["146.1"],"完全可以使用":["146.2"],"代替":["146.2"],"preload":["146.3"],"预渲染虽然可以提高页面的加载速度":["146.4"],"一般可以通过定时器或者事件的调用来唤醒":["146.5"],"就将自定义属性替换为":["146.6"],"域名要与主站不同":["146.7"],"onscroll":["147.0"],"事件":["147.0","173.52"],"在回调函数中去对比每个":["147.0"],"scrolltop":["147.1"],"代表页面节点与文档根":["147.1"],"左":["147.2"],"右矩形边缘的":["147.2"],"height为正数时的示意图如下":["147.2"],"20221103104333989":["147.2"],"或document":["147.3"],"innerheight":["147.4"],"202210121140688":["147.5"],"have":["148.0","206.2","256.8"],"如果任务非常长":["148.0"],"浏览器对用户交互的展示如图所示":["148.0"],"这时候浏览器就没法":["148.0"],"快速":["148.0"],"处理用户交互":["148.0"],"但拆分长任务后的从图中能看到效果就不一样":["148.0"],"长任务":["148.0"],"的缘故":["148.0"],"用户交互产生的事件处理就必须排队":["148.0"],"等待长任务执行完后才能执行":["148.0"],"这个时候就会导致用户交互的":["148.0"],"延迟":["148.0"],"当拆分成较短的任务后":["148.0"],"事件处理器就有机会更快的触发":["148.0"],"因为事件处理器能够在短任务之间得以执行":["148.0"],"也就比长任务耗时更短":["148.0"],"在长耗时的图片中":["148.0"],"用户可能就会感到":["148.0"],"卡顿":["148.0"],"长任务拆分后":["148.0"],"用户可能就感觉体验很":["148.0"],"流畅":["148.0"],"然而问题来了":["148.0"],"那就是":["148.0"],"到底该怎么做":["148.0"],"写的也不够明确":["148.0"],"这篇文章便为你解开这些神秘的面纱":["148.0"],"任务管理策略":["148.0"],"软件架构中有时候会将一个任务拆分成多个函数":["148.0"],"这不仅能增强代码可读性":["148.0"],"也让项目更容易维护":["148.0"],"当然这样也更容易写测试":["148.0"],"savesettings":["148.0"],"individual":["148.1"],"here":["148.1","148.3","216.2","219.3","219.6"],"此时":["148.1","152.8","178.7"],"就会出错":["148.1"],"因为效率原因无法实行":["148.1"],"函数调用都要让步于主线程":["148.2"],"如果两个函数的结果在用户界面上有重要的更新":["148.2"],"最好就不要这样做":["148.2"],"如果可以":["148.2"],"可以想让任务执行":["148.2"],"然后考虑在那些不重要的函数或者能在后台运行的函数之间":["148.2"],"这样的好处是":["148.2"],"就能看到单个大的长任务被拆分成了多个独立的任务":["148.2"],"same":["148.2"],"depicted":["148.2"],"chrome":["148.2","179.43"],"performance":["148.2","193.5","286.3"],"profiler":["148.2"],"optional":["148.3"],"chaining":["148.3"],"operator":["148.3"],"helps":["148.3"],"avoid":["148.3","232.2","245.3"],"errors":["148.3","195.8"],"browsers":["148.3"],"that":["148.3","148.4","168.23","245.3","256.8"],"there":["148.3","215.2","232.4"],"pending":["148.3","216.3"],"prioritizes":["148.4"],"them":["148.4"],"such":["148.4"],"interaction":["148.4"],"chance":["148.4"],"without":["148.4","206.8"],"being":["148.4"],"blocked":["148.4"],"方法在执行时":["148.4"],"their":["148.5"],"execution":["148.5"],"preserved":["148.5"],"下面三幅图分别是不使用yield":["148.5"],"使用yield":["148.5"],"写回":["149.4"],"预加载则会增长服务器前端压力缓存":["150.0"],"一次性加载过多图片资源":["150.1"],"是对网页性能的一种优化方式":["150.1"],"将data":["150.4"],"bottom":["150.5","152.22"],"元素下边到视窗上边的距离":["150.5"],"元素左边到视窗左边的距离":["150.5"],"这样就节省了加载的时间":["150.6"],"却还没加载完就会大大降低体验感":["150.7"],"而如果能在我们预览":["150.7"],"这段时间里就提前加载好":["150.7"],"点击显示图片":["150.10"],"ul":["150.10"],"title":["150.12","154.13","156.2","160.0","279.2","279.6","286.55"],"图片预加载":["150.12"],"耗费浏览器性能":["150.15"],"占用较多的后台资源":["150.15"],"用户就会流失":["151.1"],"我们希望通过监控来知道web应用性能的现状和趋势":["151.1"],"内响应用户输入":["151.2"],"动画或者滚动需在":["151.2"],"10ms":["151.2"],"外部服务调用":["151.3"],"网络请求访问速度":["151.3"],"本篇文章主要讨论第一方面":["151.3"],"tti":["151.4"],"页面可交互时间":["151.4"],"interactive":["151.4","152.8"],"来替代":["151.5"],"即":["151.5","186.3"],"performancenavigationtiming":["151.5","151.10"],"timeorigin":["151.5"],"实验中功能":["151.5"],"返回一个表示":["151.5"],"返回第一个http重定向开始时间":["151.7"],"requeststart":["151.7"],"返回浏览器向服务器发出http请求时间":["151.7"],"responseend":["151.7"],"返回浏览器从服务器收到":["151.7"],"或从本地缓存读取":["151.7"],"或从本地资源读取":["151.7"],"最后一个字节时间":["151.7"],"如果在此之前http连接已经关闭":["151.7"],"2中timing字段一致":["151.8"],"返回开始记录性能时间":["151.9"],"transfersize":["151.9"],"响应头和响应体大小":["151.9"],"一个":["151.9"],"中的属性是耗时已经计算好":["151.10"],"所以去掉了":["151.10"],"starttime但是实际上报取的值是":["151.12"],"首次渲染时间":["151.12"],"指页面出现第一个文字或图像所花费的时间":["151.12"],"页面加载完时间":["151.12"],"html加载完时间":["151.12"],"指页面所有":["151.12"],"加载完成":["151.12"],"不包括页面渲染时间":["151.12"],"即包括":["151.12"],"规范的一部分":["151.13"],"在首屏内容模块插入一个":["151.13"],"mutation":["151.13","245.3"],"监听该":["151.13"],"的用户":["152.2"],"doubleclick":["152.2"],"发现在":["152.3"],"秒内加载网站的发布商的广告收入是在":["152.3"],"秒内加载的网站的":["152.3"],"站点":["152.5"],"或者发起第二次请求":["152.5"],"综上所述":["152.5"],"一个网站的性能好坏是留住用户和实现变现的基础":["152.5"],"而我们的目标就是力争":["152.5"],"1s":["152.5"],"总阻塞时间":["152.6"],"tbt":["152.6"],"total":["152.6"],"blocking":["152.6"],"衡量从":["152.6"],"之间主线程被阻塞时长的总和":["152.6"],"dcl":["152.6"],"domcontentloaded":["152.6","152.8"],"cls":["152.7"],"累计版面配置移转":["152.7"],"衡量网页元件视觉稳定性":["152.7"],"webvitals04":["152.7"],"我们可以直接引用测定方法":["152.7"],"树的时间":["152.8"],"readystate":["152.8"],"变为":["152.8"],"loading":["152.8","152.17","205.16"],"并将抛出":["152.8"],"readystatechange":["152.8"],"相关事件":["152.8"],"domloading":["152.8"],"1441112692690":["152.8"],"完成解析":["152.8"],"注意只是":["152.8"],"树解析完成":["152.8"],"这时候并没有开始加载网页内的资源":["152.8"],"dominteractive":["152.8","152.9"],"1441112693093":["152.8"],"解析完成后":["152.8"],"网页内资源加载开始的时间":["152.8"],"事件抛出前发生":["152.8"],"domcontentloadedeventstart":["152.8"],"网页内资源加载完成的时间":["152.8"],"脚本加载执行完毕":["152.8"],"树耗时":["152.9"],"domcomplete":["152.9"],"我们直接面板输出一下":["152.10"],"first":["152.11","195.4","236.1"],"dotasks":["152.12"],"这里是耗时操作":["152.12"],"end":["152.12","152.20","214.1","227.1","241.8","286.38"],"那有一些同学可能就会问":["152.13"],"可不可以不要看这么多的计算公式":["152.13"],"头都大了":["152.13"],"但是这里指的是咱们浏览器的":["152.14"],"从不同的角度分析框选区域":["152.15"],"network":["152.15"],"frames":["152.15"],"查看多种内存占用变化":["152.16"],"现在我们可以打开任意一个网站":["152.16"],"summary":["152.17"],"颜色数据表示一致":["152.17"],"蓝色":["152.17"],"表示网络通信和":["152.17"],"解析时间":["152.17"],"黄色":["152.17"],"scripting":["152.17"],"表示":["152.17"],"执行时间":["152.17"],"我们可以选中标红的":["152.18"],"然后放大":["152.18"],"看其具体的耗时点":["152.18"],"放大后":["152.18"],"这里可以看到都在做哪些操作":["152.18"],"哪些函数耗时了多少":["152.18"],"这里代码有压缩":["152.18"],"看到的是压缩后的函数名":["152.18"],"然后我们点击一下某个函数":["152.18"],"在面板最下面":["152.18"],"就会出现代码的信息":["152.18"],"是哪个函数":["152.18"],"耗时多少":["152.18"],"在哪个文件上的第几行等":["152.18"],"这样我们就很方便地":["152.18"],"定位到耗时函数":["152.18"],"然后去针对性优化":["152.18"],"合成线程的执行记录":["152.18"],"用来记录":["152.18"],"timeend":["152.20"],"fired":["152.20"],"定时器激活回调后触发":["152.20"],"ready":["152.20"],"当一个异步请求为就绪状态后触发":["152.20"],"当一个异步请求完成加载后触发":["152.20"],"rendering":["152.20"],"activity":["152.21"],"的右侧":["152.21"],"部分还带有":["152.21"],"up":["152.22","222.4","243.1"],"大家可以一边看文章一边打开自己的网站看看":["152.23"],"是否有一些性能问题":["152.23"],"当然除了":["152.23"],"原来":["152.24"],"默认进行了":["152.24"],"节流处理":["152.24"],"我们可以不勾选节流同时也直接点击":["152.24"],"view":["152.24","152.30","276.0"],"同时也提供可":["152.25"],"不管用户是以何种方式访问网站":["152.26"],"我没有浏览器环境还可以使用":["152.29"],"lighthouse":["152.29"],"来测试性能吗":["152.29"],"答案是":["152.29"],"help":["152.30"],"命令太多":["152.30"],"介绍常用的几个":["152.30"],"文档报告输出支持html":["152.30"],"csv":["152.30"],"默认html":["152.30"],"数据分析结束后以html展示":["152.30"],"所以记得在列表项组件内接收它们并使用上它们":["153.2"],"尤其是":["153.2"],"itemcount":["153.4"],"列表项尺寸":["153.4"],"absolute":["153.7","170.14"],"array":["153.8","173.29","251.2","254.5"],"就是":["153.10","200.4","252.7"],"需要渲染的":["153.11"],"让":["153.12"],"组件更新高度":["153.12"],"减少代码体积":["154.0","154.10","154.16","154.17"],"accept":["154.2","286.52"],"aaa":["154.2"],"count":["154.2","195.9"],"代码的工作":["154.3"],"该步骤主要是通过":["154.3"],"sockjs":["154.3"],"的依赖":["154.3"],"在浏览器端和服务端之间建立一个":["154.3"],"长连接":["154.3","175.10"],"编译打包的各个阶段的状态信息告知浏览器端":["154.3"],"同时也包括第三步中":["154.3"],"监听静态文件变化的信息":["154.3"],"浏览器端根据这些":["154.3"],"socket":["154.3","159.9"],"消息进行不同的操作":["154.3"],"当然服务端传递的最主要信息还是新模块的":["154.3"],"值":["154.3","179.33"],"后面的步骤根据这一":["154.3"],"值来进行模块热替换":["154.3"],"端并不能够请求更新的代码":["154.3"],"也不会执行热更模块操作":["154.3"],"而把这些工作又交回给了":["154.3"],"hot":["154.3"],"排除node":["154.4"],"modules代码不编译":["154.4"],"指定检查文件的根目录":["154.4","154.5","154.10","154.16","154.17"],"cachedirectory":["154.5","154.10","154.17"],"开启babel编译缓存":["154.5","154.10","154.17"],"cachecompression":["154.5","154.10","154.17"],"缓存文件不要压缩":["154.5","154.10","154.17"],"默认值":["154.5","154.10","154.16","154.17"],"开启缓存":["154.5","154.10","154.16","154.17"],"可以直接从缓存中拉取":["154.6"],"可提速":["154.6"],"左右":["154.6"],"配置方式如下":["154.6"],"生产模式需要输出":["154.7"],"使用contenthash":["154.7"],"取8位长度":["154.7"],"入口文件打包输出资源命名方式":["154.7"],"chunkfilename":["154.7"],"结尾的文件":["154.8"],"数组里面":["154.8"],"执行顺序是从右到左":["154.8"],"ac":["154.8"],"ss":["154.8"],"styl":["154.8"],"stylus":["154.8"],"它依赖":["154.9"],"es":["154.9"],"开启多进程":["154.10","154.17"],"workers":["154.10","154.17"],"数量":["154.10","154.17","156.14","200.7"],"cache":["154.10","154.16","154.17","154.20","175.10","175.12"],"使用chunk的name作为输出的文件名":["154.11"],"什么是chunk":["154.11"],"打包的资源就是chunk":["154.11"],"输出出去叫bundle":["154.11"],"chunk的name是啥呢":["154.11"],"entry中xxx":["154.11"],"name就是xxx":["154.11"],"注意是前面的xxx":["154.11"],"和文件名无关":["154.11"],"为什么需要这样命名呢":["154.11"],"如果还是之前写法main":["154.11"],"那么打包生成两个js文件都会叫做main":["154.11","154.12"],"js会发生覆盖":["154.12"],"实际上会直接报错的":["154.12"],"clean":["154.12","193.8"],"public":["154.12","154.16","172.0"],"mode":["154.12","179.9","206.8","214.3"],"optimization":["154.12","236.6"],"代码分割配置":["154.12"],"splitchunks":["154.12"],"chunks":["154.12","195.9"],"viewport":["154.13"],"device":["154.13"],"scale":["154.13","160.0","195.4","279.1","279.6"],"getelementbyid":["154.14","205.11"],"onclick":["154.14","156.2","156.18","173.20"],"解决动态导入import语法报错问题":["154.15"],"实际使用eslint":["154.15"],"import的规则解决的":["154.15"],"parseroptions":["154.15"],"ecmaversion":["154.15"],"runtime":["154.16","154.17"],"缓存目录":["154.16","154.17","177.9"],"cachelocation":["154.16","154.17"],"eslintcache":["154.16","154.17"],"为模板创建文件":["154.16"],"新的html文件有两个特点":["154.16"],"内容和源文件一致":["154.16"],"自动引入打包生成的js等资源":["154.16"],"也可以用包含":["154.17"],"thread":["154.17"],"只引入打包":["154.18"],"打包体积更小":["154.18"],"但是将来如果还想使用其他语法":["154.18"],"我需要手动引入库很麻烦":["154.18"],"自动按需引入":["154.18"],"其实webpack自带了插入cdn的方法":["154.19"],"而且有很多种":["154.19"],"具体自己查看官网":["154.19"],"个角度对":["154.20"],"和代码进行了优化":["154.20"],"提升":["154.20"],"提升打包构建速度":["154.20"],"peed":["154.20"],"measure":["154.20","193.8"],"plugin":["154.20"],"分析打包耗时":["154.20"],"进行针对性优化":["154.20"],"hotmodulereplacement":["154.20"],"让开发时只重新编译打包更新变化了的代码":["154.20"],"不变的代码使用缓存":["154.20"],"从而使更新速度更快":["154.20"],"oneof":["154.20"],"让资源文件一旦被某个":["154.20"],"处理了":["154.20"],"就不会继续遍历了":["154.20"],"打包速度更快":["154.20"],"处理的结果进行缓存":["154.20"],"让第二次打包速度更快":["154.20"],"wxml":["155.0","195.4","195.7"],"结构越复杂":["155.0"],"生成的代码空间越大":["155.0"],"非主包用到的东西不允许放主包":["155.2"],"特别是app":["155.3"],"其他一律替换成cdn图片":["155.4"],"常规手段用完之后基本已经到极限了":["155.5"],"很难再进一步降低大小":["155.5"],"修改引用该组件的页面":["155.6"],"组件配置":["155.6"],"将其改成新的路劲":["155.6"],"很明显原子css的写法代码量少了很多":["155.7"],"而且还省了class命名的空间":["155.7"],"参考资料":["155.8"],"在小程序中":["155.8"],"不同的分包对应不同的下载单元":["155.8"],"分包":["155.9"],"删除无用代码":["155.9"],"包括无用样式":["155.9"],"切换状态":["156.1"],"我们简单的写了个":["156.1"],"我们通过":["156.1"],"给所传入的数字平方":["156.1"],"用切换状态的按钮表示函数内部的状态":["156.1"],"我们来看看此时的效果":["156.1"],"img2":["156.1"],"我们发现了一个问题":["156.1"],"为什么点击切换按钮也会触发":["156.1"],"justifycontent":["156.2"],"start":["156.2","170.4","210.0","214.1","239.5"],"testbutton":["156.2"],"普通点击":["156.2"],"usecallback点击":["156.2"],"更新数据":["156.4"],"capturewrapperprops":["156.4"],"actualchildprops":["156.4"],"childpropsfromstoreupdate":["156.4"],"current":["156.5","156.6","156.9","156.13","156.20","156.21","159.5","159.13","206.2","206.16","218.4","232.2"],"as":["156.6","217.7","221.3","222.3","236.1","236.5","243.2","252.5"],"initialized":["156.6"],"渲染":["156.7"],"来设置":["156.11"],"来获取":["156.11"],"使用这种方式才能够渲染视图":["156.11"],"来看看正常的操作":["156.11"],"像这样":["156.11"],"所以第一个问题也解决了":["156.12"],"入参就为对象":["156.12"],"那么如何去刷新视图呢":["156.12"],"这里就使用上述的useupdate来强制刷新":["156.12"],"使数据更改":["156.12"],"这里先说下":["156.13"],"因为我们不知道会传递什么类型的":["156.13"],"所以在这需要使用":["156.13"],"泛型":["156.13"],"我们接受的参数是":["156.13"],"可就是":["156.13"],"计算属性":["156.14"],"不存在":["156.16","174.12"],"也就是有其他变量改变时":["156.16"],"useeventlistener":["156.17"],"handler":["156.17","219.10"],"handlerref":["156.17"],"切换":["156.18"],"unmount":["156.18","222.7"],"数字":["156.18"],"timer":["156.20","156.21","159.2"],"再详细点可以换算成对应的天":["156.22"],"settime":["156.23"],"onendref":["156.23"],"毫秒":["156.24"],"margintop":["156.24"],"动态变化":["156.24"],"disabled":["156.24"],"通过一个状态去设置他的初始化":["156.26"],"那么state和props不能保持同步":["157.1"],"state和props不能保持一致性":["157.1"],"react18版本之后":["157.2"],"setstate默认是异步的":["157.2"],"就留下一个空位":["158.1","164.1"],"可以增加新的请求":["158.1","164.1"],"所有请求完成后":["158.1","164.1"],"此时应该返回空数组":["158.2","164.2"],"大于":["158.2","164.2","222.10"],"的长度时":["158.2","164.2"],"应该取的是":["158.2","164.2"],"的长度":["158.2","164.2"],"finally":["158.3","164.3","255.0"],"判断是否所有的请求都已完成":["158.3","164.3"],"concurrencyrequest":["158.4","164.4"],"证明写的代码没有毛病":["158.5","164.5"],"搞定":["158.5","164.5"],"09":["159.0"],"客户端在":["159.1"],"等待了一段时间后":["159.1"],"可能是几秒":["159.1"],"failed":["159.2","225.4"],"记录当前客户端拿到的最新事件的timestamp":["159.2"],"timestampref":["159.2","159.5","159.13"],"setevents":["159.2"],"latestevents":["159.2","159.9","159.13"],"数据实时性差":["159.3"],"由于不想消耗太多客户端或者服务端的资源":["159.3"],"将请求挂起":["159.4"],"在等待一段时间后":["159.4"],"一般为30s或者是60s":["159.4"],"发现还是没有数据更新的话":["159.4"],"就返回一个空结果给客户端":["159.4"],"eventsref":["159.5","159.13"],"refresh":["159.5","166.8"],"setrefresh":["159.5","159.13"],"fetchtask":["159.5"],"初次加载":["159.5"],"currentevents":["159.5"],"如果数据更新频繁":["159.6"],"会有大量的连接创建和重建过程":["159.6"],"这部分消耗是很大的":["159.6"],"在上图中":["159.8"],"首先客户端会给服务端发送一个http请求":["159.8"],"这个请求的header会告诉服务端它想基于websocket协议通信":["159.8"],"ev":["159.9"],"有状态的":["159.10"],"这就意味着在扩容的时候很麻烦":["159.10"],"系统设计也会较复杂":["159.10"],"代理限制":["159.10"],"events":["159.11","195.8"],"服务端接收到请求后":["159.12"],"会挂起客户端的请求":["159.12"],"有新消息时":["159.12"],"eventsource":["159.13"],"onopen":["159.13"],"connected":["159.13"],"sse长连接是单向的":["159.14"],"不允许客户端给服务端推送数据":["159.14"],"代理层限制":["159.14"],"promise2":["161.0"],"浏览器直接报错":["162.0"],"线程的运行环境中无法访问":["162.0"],"这一条符合当前的需求":["162.0"],"但是该环境中能获取":["162.0"],"可以发送":["162.0"],"不符合不能调接口的要求":["162.0"],"此路还是不通":["162.0"],"如何禁止开发者调接口":["162.0"],"常规调接口方式有":["162.0"],"原生方式":["162.0"],"jsonp":["162.0"],"form表单":["162.0"],"三方实现":["162.0"],"jquery":["162.0","281.3","281.5"],"request等众多开源库":["162.0"],"禁用原生方式调接口的思路":["162.0"],"eval可以将字符串按js代码执行":["162.1"],"如eval":["162.1"],"eval":["162.1"],"可以拦截":["162.2"],"代码块中任意属性的访问":["162.2"],"includes":["162.2","173.2","177.9","296.1"],"在可访问的白名单内":["162.2"],"可继续向上查找":["162.2"],"获取当前htmliframeelement的window对象":["162.3"],"sandboxglobal对象上不存在的属性":["162.3"],"实现禁用三方库调接口":["162.3"],"它根据名称查找功能":["163.0"],"然后调用它":["163.0"],"当我们调用一个插件的":["163.0"],"函数时":["163.0"],"我们将当前计算器的值":["163.0"],"传递给它":["163.0"],"并期望它返回新的计算器值":["163.0"],"本质上":["163.0"],"这种新的":["163.0"],"方法转换成纯功能的计算器":["163.0"],"获取当前计算器值":["163.0"],"执行操作":["163.0"],"返回结果":["163.0"],"这有很多好处":["163.0"],"简化了api":["163.0"],"使测试更加容易":["163.0"],"对于":["163.0","193.10"],"和插件本身":["163.0"],"减少了我们系统的依赖性":["163.0"],"使它更松耦合":["163.0"],"这个新的架构比第一个示例有更多的局限性":["163.0"],"但显然第二种方式更好":["163.0"],"能限制插件只做我们想让它做的改变":["163.0"],"yello":["165.1"],"yellow":["165.2"],"其中无感刷新":["166.0"],"refreshtoken":["166.0","166.3"],"就是属于无需存储":["166.0"],"的有效时间设置的短一些":["166.1"],"通常都是10min":["166.1"],"30min之内":["166.1"],"这样就会造成用户的使用感观不好":["166.1"],"比如用户的一个页面":["166.1"],"填写数据填了很长一段时间":["166.1"],"超过了":["166.1"],"为什么要设置两个token":["166.2"],"首先":["166.2"],"我们要了解":["166.2"],"的主要矛盾点是在于":["166.2"],"如果过期的时间设置的太长":["166.2"],"用户数据的安全性会大打折扣":["166.2"],"但是如果设置的时间过短":["166.2"],"用户需要频繁登录":["166.2"],"这必然会造成用户使用体验感受下降":["166.2"],"valueof":["166.3"],"保存token的有效时间戳":["166.3"],"此处因为是测试所以设置的时间很短":["166.3"],"一般设置为10":["166.3"],"30m":["166.3"],"secret":["166.3"],"refreshtokencon":["166.4"],"exp":["166.5","166.7","228.3"],"过期":["166.5","166.6","166.8","195.6"],"e7":["166.6"],"9b":["166.6"],"b8":["166.6"],"8c":["166.6"],"jwt":["166.7"],"sign":["166.7"],"dayjs":["166.7"],"判断token过期":["166.8"],"与后台规定好":["166.8"],"需要重新请求":["166.8"],"直接登出":["166.8"],"让用户重新登录":["166.8"],"关键代码":["166.9"],"返回promise替换当前的请求":["166.9"],"收集旧的请求":["166.9"],"那么就要发起多个查询点赞":["167.2"],"评论的请求":["167.2"],"每个方法传参的id作为key":["167.3"],"在接口响应后":["167.3"],"将对应数据通过key取出":["167.3"],"rand":["167.4"],"模拟响应延迟":["167.4"],"errmsg":["167.4"],"测试用例":["167.4"],"如果回调函数指定了执行超时时间timeout":["168.2"],"h3":["168.3"],"none":["168.3","175.10","179.44"],"requestidlecallback在哪个阶段执行":["168.10"],"intersectionobserver":["168.11"],"回调":["168.11"],"更新渲染屏幕":["168.11"],"浏览器判断当前帧是否还有空闲时间":["168.11"],"requestanimationframe回调的执行与task和microtask无关":["168.13"],"而是与浏览器是否渲染相关联的":["168.13"],"它是在浏览器渲染前":["168.13"],"可以对你有帮助":["168.15"],"相信也有朋友在":["168.16"],"你希望执行一个动画":["168.17"],"并且要求浏览器在下次重绘之前调用指定的回调函数更新动画":["168.17"],"每次移动":["168.19"],"cancelanimationframe":["168.20"],"以取消回调函数":["168.20"],"alert":["168.23"],"为了避免混淆":["168.24"],"不要混用取消定时函数":["168.24"],"两者竟然是可以互换的":["168.24"],"在同一个对象上":["168.24"],"第二个参数传入":["168.25"],"情况下":["168.25"],"所以两者其实在时间上来理解的话":["168.25"],"是在不同的调用周期中执行":["168.25"],"firefox中":["168.26"],"定时器的第5次调用被阻塞了":["168.26"],"在safari是在第6次":["168.26"],"edge是在第3次":["168.26"],"gecko":["168.26"],"从这个版本":["168.26"],"56开始对":["168.26"],"希望可以帮到你":["168.27"],"水印图片":["169.2"],"是后端生成的":["169.2"],"前端只需要负责展示即可":["169.2"],"将图片元素移动到":["169.3"],"优化实现方式":["169.3"],"在上述的实现方式中":["169.3"],"实际上至少有两点可优化的点":["169.3"],"所有的样式直接以":["169.3"],"字符串":["169.3","179.39"],"形式出现在":["169.3"],"代码中":["169.3"],"可以将对应的静态样式部分处理在":["169.3"],"来管理":["169.3"],"多余的":["169.3"],"被创建出来":["169.3"],"其实完全没必要单独创建这个节点元素":["169.3"],"可以直接基于":["169.3"],"对应节点的伪类元素来实现":["169.3"],"优化后核心代码如下":["169.3"],"实现原理":["170.0"],"有几种实现方式呢":["170.1","170.13"],"40rpx":["170.2"],"bg":["170.2"],"calc":["170.2","195.4"],"将颜色修改回来":["170.6"],"并添加drop":["170.6"],"shadow投影":["170.6","170.8"],"试着将上述内容进行简写":["170.6"],"得到一个圆心距离左边20rpx":["170.6"],"半径为20rpx居中的透明圆":["170.6"],"ff6810":["170.6"],"利用background":["170.6"],"position进行x轴方向的偏移":["170.6"],"偏移":["170.6","286.38"],"发现添加木有效果":["170.8"],"为什么呢":["170.8"],"那换种思路":["170.8"],"将投影加在元素上":["170.8"],"把mask遮罩放到伪元素上试试":["170.8"],"果真可以了":["170.8"],"试着分析一下":["170.8"],"mask进行裁剪的时候会将投影也裁掉":["170.8"],"700rpx":["170.8"],"250rpx":["170.8"],"drop":["170.8","170.12"],"shadow":["170.8","170.12"],"2px":["170.8","170.12"],"1px":["170.8","170.12"],"在这里插入图片描述":["170.10"],"可以把这个想象成四个透明的的1":["170.10"],"a6d1a9":["170.11"],"或者将起始点设置到左边20rpx":["170.11"],"004":["170.12"],"z":["170.14","284.4","284.14","284.42","284.59"],"80rpx":["170.15"],"90rpx":["170.15"],"48rpx":["170.15"],"220rpx":["170.15"],"c4":["170.15"],"215rpx":["170.15"],"compression":["171.0"],"执行deflate压缩":["171.0"],"该算法结合了":["171.0"],"lz77":["171.0"],"算法和":["171.0"],"huffman":["171.0"],"算法对图片进行编码":["171.0"],"实现一个三角形":["171.0"],"可以利用":["171.0"],"border":["171.0","195.4"],"利用盒模型的":["171.0"],"属性上下左右边框交界处会呈现出平滑的斜线这个特点":["171.0"],"通过设置不同的上下左右边框宽度或者颜色即可得到三角形或者梯形":["171.0"],"如果想实现其中的任一个三角形":["171.0"],"把其他方向上的":["171.0"],"都设置成透明即可":["171.0"],"示例代码如下":["171.0"],"10px":["171.0"],"red":["171.0"],"如何实现一个自适应的正方形":["171.0"],"方法1":["171.0"],"单位":["171.0"],"会把视口的宽度平均分为":["171.0"],"份":["171.0"],"square":["171.0","179.30"],"10vw":["171.0"],"方法2":["171.0"],"的百分比计算是参照父元素的":["171.0"],"防止内容撑开多余的高度":["171.0"],"清除浮动的方法":["171.0"],"clear":["171.0"],"清除浮动":["171.0"],"添加空div法":["171.0"],"在浮动元素下方添加空div":["171.0"],"并给该元素写css样式":["171.0"],"both":["171.0"],"给浮动元素父级设置高度":["171.0"],"父级同时浮动":["171.0"],"需要给父级同级元素添加浮动":["171.0"],"父级设置成inline":["171.0"],"其margin":["171.0"],"auto居中方式失效":["171.0"],"给父级添加overflow":["171.0"],"清除浮动方法":["171.0"],"万能清除法":["171.0"],"伪类清浮动":["171.0"],"现在主流方法":["171.0"],"推荐使用":["171.0"],"说说两种盒模型以及区别":["171.0"],"盒模型也称为框模型":["171.0"],"就是从盒子顶部俯视所得的一张平面图":["171.0"],"用于描述元素所占用的空间":["171.0"],"它有两种盒模型":["171.0"],"w3c盒模型和ie盒模型":["171.0"],"ie6以下":["171.0"],"不包括ie6以及怪异模式下的ie5":["171.0"],"理论上两者的主要区别是二者的盒子宽高是否包括元素的边框和内边距":["171.0"],"当用css给给某个元素定义高或宽时":["171.0"],"ie盒模型中内容的宽或高将会包含内边距和边框":["171.0"],"而w3c盒模型并不会":["171.0"],"在前端构建中应该考虑微格式吗":["172.0"],"所谓的微格式是建立在已有的":["172.0"],"被广泛采用的标准基础之上的一组简单的":["172.0"],"开放的数据格式":["172.0"],"具体表现是把语义嵌入到html中":["172.0"],"以便有助于分离式开发":["172.0"],"并通过制定一些简单的约定":["172.0"],"来兼顾html文档的人机可读性":["172.0"],"相当于对web网页进行语义注解":["172.0"],"采用微格式的web页面":["172.0"],"在html文档中给一些标签增加一些属性":["172.0"],"这些属性对信息的语义结构进行注解":["172.0"],"有助于处理html文档的软件":["172.0"],"更好的理解html文档":["172.0"],"当爬取web内容时":["172.0"],"能够更为准确地识别内容块的语义":["172.0"],"微格式可以对网站进行seo优化":["172.0"],"html5为什么只需要写":["172.0"],"为什么html5只需要写一段":["172.0"],"而html4却需要写很长的一段":["172.0"],"01":["172.0","284.41"],"transitional":["172.0"],"html4":["172.0"],"其实主要是因为html5不基于sgml":["172.0"],"所以不需要引用dtd":["172.0"],"在html4中":["172.0"],"声明引用dtd":["172.0"],"因为html4基于sgml":["172.0"],"dtd规定了标记语言的规则":["172.0"],"这样浏览器才能正确的呈现内容":["172.0"],"html5新增了哪些新特性":["172.0"],"移除了哪些元素":["172.0"],"html5主要是关于图像":["172.0"],"位置":["172.0"],"存储":["172.0"],"多任务等功能的增加":["172.0"],"语义化标签":["172.0"],"footer":["172.0"],"nav等":["172.0"],"视频video":["172.0"],"音频audio":["172.0"],"画布canvas":["172.0"],"calemdar":["172.0"],"地理":["172.0"],"本地离线存储":["172.0"],"localstorage长期存储数据":["172.0"],"浏览器关闭后数据不丢失":["172.0"],"sessionstorage的数据在浏览器关闭后自动删除":["172.0"],"拖拽释放":["172.0"],"移除的元素":["172.0"],"纯表现的元素":["172.0"],"basefont":["172.0"],"strike":["172.0"],"此题的关键在于是否清楚":["173.1"],"和普通构造函数的区别":["173.1"],"记住它们有以下区别":["173.1"],"就不会有遗漏":["173.1"],"必须通过":["173.1"],"来调用":["173.1"],"不能当做普通函数调用":["173.1"],"否则报错":["173.1"],"before":["173.3"],"initialization":["173.3"],"这道题考查的是":["173.3"],"新增的声明变量关键字":["173.3"],"参考答案":["173.4"],"后面":["173.5"],"又被放入到异步执行队列":["173.5"],"然后执行":["173.5"],"行的语句":["173.5"],"所有同步代码就都执行完毕了":["173.5"],"只要有一个为真":["173.6"],"后面的直接短路":["173.6"],"都不用去计算":["173.6"],"实例化对象上面有两个属性":["173.7"],"分别是":["173.7"],"是一个":["173.7"],"箭头函数没有自己的":["173.8","173.23"],"super":["173.8"],"会指向":["173.9"],"我们要让子类的":["173.9"],"重新指向自己":["173.9"],"若不修改则会发现":["173.9"],"指向的是父类的构造函数":["173.9"],"将步骤":["173.10","173.76"],"新创建的对象作为":["173.10","173.76"],"有一个很重要的区别":["173.11"],"一个函数被":["173.11"],"将可以运行的异步任务添加到执行栈中":["173.12"],"开始执行":["173.12"],"事件回调":["173.13"],"事件循环的执行顺序为":["173.13"],"外部输入数据":["173.13"],"轮询阶段":["173.13"],"检查阶段":["173.13"],"关闭事件回调阶段":["173.13"],"callback":["173.13","173.45","206.8"],"定时器检测阶段":["173.13"],"事件回调阶段":["173.13"],"闲置阶段":["173.13"],"按照该顺序反复运行":["173.13"],"arg4":["173.14","173.47"],"接口的对象":["173.15"],"如果元素不是":["173.15"],"则使用":["173.15"],"转成":["173.15"],"bind":["173.16","206.9"],"方法显式调用函数时":["173.16"],"函数体内的":["173.16"],"只能继承父类构造函数的属性":["173.17"],"无法实现构造函数的复用":["173.17"],"每次用每次都要重新调用":["173.17"],"每个新实例都有父类构造函数的副本":["173.17"],"臃肿":["173.17"],"组合模式":["173.17"],"在这个阶段注册的事件监听器在事件到达其目标前必须先处理事件":["173.18"],"目标":["173.18"],"事件对象到达其事件目标":["173.18"],"这个阶段被我们称为目标阶段":["173.18"],"每当创建一个函数":["173.19"],"闭包就会在函数创建的同时被创建出来":["173.19"],"闭包的用处":["173.19"],"层次":["173.20"],"我们可以为整个页面指定一个":["173.20"],"函数作用域":["173.21","173.27"],"没有块作用域的概念":["173.21"],"中新增了块级作用域":["173.21"],"块作用域由":["173.21"],"包括":["173.21"],"也属于块作用域":["173.22"],"但是箭头函数并没有此对象":["173.24"],"取而代之用rest参数来解决":["173.24"],"箭头函数不能用于":["173.24"],"generator":["173.24"],"yeild":["173.24"],"对象就是一个引用值":["173.25"],"因为对象可以向下拆分":["173.25"],"拆分成多个简单值或者复杂值":["173.25"],"引用值在内存中的大小是未知的":["173.25"],"因为引用值可以包含任何值":["173.25"],"而不是一个特定的已知值":["173.25"],"所以引用值的数据都是存储于堆区里面":["173.25"],"最后总结一下两者的区别":["173.25"],"有两个特点":["173.26"],"任何涉及":["173.26"],"这些变量在一对花括号中存在局部作用域":["173.27"],"只能够在花括号内部进行访问使用":["173.27"],"当进入到一个函数的时候":["173.27"],"就会产生一个函数作用域":["173.27"],"自动转为":["173.28"],"很不容易发现错误":["173.28"],"作者又设计了一个":["173.28"],"这里注意":["173.28"],"先有":["173.28"],"后有":["173.28"],"出来":["173.28"],"是为了填补之前的坑":["173.28"],"的最初版本是这样区分的":["173.28"],"abc":["173.29"],"regexp":["173.29"],"co":["173.30","176.11","274.0"],"模块来简化执行器的编写":["173.30"],"es7":["173.30"],"提出的":["173.30"],"脚本会被延迟到整个页面都解析完毕后再运行":["173.31"],"元素中设置了":["173.31"],"相当于告诉浏览器立即下载":["173.31"],"但延迟执行":["173.31"],"异步脚本":["173.31"],"浏览器会在这些任务完成后":["173.32"],"将事先定义的回调函数推入主线程的任务队列":["173.32"],"每个对象都有自己的原型对象":["173.33"],"而原型对象本身":["173.33"],"也有自己的原型对象":["173.33"],"从而形成了一条原型链条":["173.33"],"当我们查找一个当前作用域没有定义的变量":["173.34"],"自由变量":["173.34"],"就会向上一级作用域寻找":["173.34"],"实现类和继承":["173.35"],"题以及第":["173.36","173.49"],"访问方式":["173.37"],"原始值":["173.37"],"访问到的是值":["173.37"],"引用值":["173.37"],"访问到的是引用地址":["173.37"],"比较方式":["173.37"],"jerry":["173.39"],"拷贝后的对象与原来的对象是完全隔离":["173.40"],"互不影响":["173.40"],"方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象":["173.40"],"用于检测对象":["173.41"],"是不是":["173.41","258.2"],"的实例":["173.41"],"清除":["173.42"],"定期执行以下":["173.42"],"垃圾回收":["173.42"],"步骤":["173.42"],"垃圾回收器获取根并":["173.42"],"记住":["173.42"],"新增一些语法":["173.43"],"例如扩展操作符":["173.43"],"解构":["173.43","178.5"],"函数默认参数等":["173.43"],"新增一种基本数据类型":["173.43"],"symbol":["173.43","243.2"],"键必须是对象类型":["173.44"],"值可以是任意类型":["173.44"],"它的键被弱保持":["173.44"],"当其键所指对象没有其他地方引用的时候":["173.44"],"它会被":["173.44"],"hell":["173.45"],"组合式继承":["173.46"],"parent3":["173.46"],"throttle":["173.48"],"指连续触发事件但是在":["173.48"],"秒中只执行一次函数":["173.48"],"一组数据":["173.51"],"依":["173.51"],"指定的顺序":["173.51"],"排列的过程":["173.51"],"排序的分类分为":["173.51"],"内部排序":["173.51"],"处理一些上一轮循环中的少数未执行的":["173.52"],"idle":["173.52"],"prepare":["173.52"],"仅":["173.52"],"内部使用":["173.52"],"poll":["173.52"],"获取新的":["173.52"],"适当的条件下":["173.52"],"将阻塞在这里":["173.52"],"无变量提升":["173.54"],"不可以重复声明":["173.54"],"执行时":["173.55"],"如果访问了":["173.55"],"中变量对象的值":["173.55"],"用法":["173.56"],"调用请求函数":["173.57"],"temp":["173.58","174.52"],"由于数组对象push":["173.62"],"pop等方法的存在":["173.62"],"它对于数组元素的读写代理实现的并不完全":["173.62"],"而使用proxy则可以很方便的监视数组操作":["173.62"],"自我代理":["173.62"],"具体代码可以参阅前面第":["173.63"],"题的解析":["173.63"],"emptyobj":["173.64"],"create":["173.64","204.1"],"函数内部":["173.65"],"关键字的作用就是获取":["173.65"],"的话会被判断为":["173.67"],"类型":["173.67"],"直接调用":["173.68"],"就能返回":["173.68"],"而对于其他对象":["173.68"],"则需要通过":["173.68"],"来调用才能返回正确的类型信息":["173.68"],"l":["173.69","177.6","181.0","195.8"],"a的内部属性":["173.69"],"指向":["173.69"],"的原型对象":["173.69"],"堆内存":["173.70"],"20210813154040287":["173.70"],"值的可变性":["173.70"],"值不可变":["173.70"],"就会把设为":["173.73"],"的量给回收了":["173.73"],"闭包的应用场景":["173.73"],"跟踪记录每个值被引用的次数":["173.74"],"声明了一个变量并将一个引用类型的值赋值给这个变量":["173.74"],"这个引用类型值的引用次数就是":["173.74"],"这个原型还可以有它自己的原型":["173.75"],"以此类推":["173.75"],"形成一个原型链":["173.75"],"对于实例对象来讲":["173.77"],"可以通过隐式属性":["173.77"],"编译器如何读取你的代码有关":["173.78"],"记住当我们想到":["173.78"],"从这个过程来看":["173.79"],"大家也能发现":["173.79"],"某些情况下我们使用":["173.79"],"进行比较效率要高些":["173.79"],"不等于":["173.80"],"nan":["173.80","179.24","285.9"],"所以不能将其存放在栈中":["173.81"],"否则会降低变量查询速度":["173.81"],"其值存储在堆":["173.81"],"heap":["173.81"],"而存储在变量处的值":["173.81"],"箭头函数的":["173.82"],"是继承父执行上下文里面的":["173.82"],"一个箭头函数的":["173.83"],"单独调用成功之后返回的结果组成的数组":["173.84"],"如果调用失败的话":["173.84"],"返回的则是第一个":["173.84"],"reject":["173.84","204.2","217.0"],"protoprops":["173.85"],"staticprops":["173.85"],"请参阅前面第":["173.86","173.97"],"输入的模块变量":["173.87"],"只是一个":["173.87"],"符号连接符":["173.87"],"所以这个变量是只读的":["173.87"],"对它进行重新赋值会报错":["173.87"],"如果是引用类型":["173.87"],"变量指向的地址是只读的":["173.87"],"但是可以为其添加属性或成员":["173.87"],"另外还想说一个":["173.87"],"它将会被转换成一个":["173.89"],"后的":["173.89"],"一般面试官会针对你所说的内容进行二次提问":["173.90"],"你回答平时开发中箭头函数用得比较多":["173.90"],"与之相对的":["173.91"],"新增了很多新特性":["173.92"],"这里可以自己简述几个":["173.92"],"变量弱类型转换":["173.93"],"转换字符串":["173.93"],"直接和一个空字符串拼接":["173.93"],"savokiss":["173.94"],"isvalid":["173.94"],"validate":["173.94"],"可见":["173.94","207.12"],"执行函数的时候会修改到":["173.94"],"中自带的模块化":["173.95"],"兼容amd":["173.95"],"模块化语法":["173.95"],"就完了":["173.96"],"应该继续乘胜追击":["173.96"],"bind2":["173.98"],"othis":["173.98"],"closest":["173.98"],"thing":["173.98"],"possible":["173.98","206.14"],"ecmascript":["173.98"],"internal":["173.98","206.9"],"iscallable":["173.98"],"typeerror":["173.98"],"trying":["173.98"],"be":["173.98","214.3","218.4","218.5","218.8","232.2","236.7","249.0"],"item":["173.99","174.24","179.56","286.33","286.54"],"celltype":["173.99"],"形参num":["173.99"],"表示当前需要拆分多少层数组":["173.99"],"传入infinity则将多维直接降为一维":["173.99"],"newarr":["173.99"],"使用三点运算符解构":["173.99"],"递归函数返回的数组":["173.99"],"并加入新数组":["173.99"],"先取arr":["174.8"],"然后left":["174.8"],"两步合成一步":["174.8"],"同样的逻辑":["174.8"],"若s1":["174.12"],"说明相同的位置已比较完成":["174.12"],"接下来比较arr1":["174.12"],"arr2的长度":["174.12"],"长的版本号大":["174.12"],"再遍历一遍找到出现1次的下标":["174.16"],"每次递归":["174.20"],"固定第一个字符":["174.20"],"将删除的temp重新添加到queue尾部":["174.20"],"大的放到后面":["174.21"],"保存最小值的下标":["174.22"],"移动前一个元素的位置":["174.23"],"继续进行比较":["174.25"],"找到的是父节点":["174.29"],"获取当前第一个节点":["174.33"],"fee":["174.50"],"代表了交易股票的手续费用":["174.50"],"赚钱":["174.52"],"你只可以看到在滑动窗口中的k个数字":["174.58"],"滑动窗口每次只向右移动一位":["174.58"],"添加右侧新加入的值":["174.60"],"插入新值时有两种情况":["174.60"],"新值为最大值时":["174.60"],"则window此时为空":["174.60"],"倒序遍历":["174.64"],"根据长度获取对应的值":["174.64"],"浏览器由于对":["175.0"],"长度的限制":["175.0"],"所以会影响":["175.0"],"请求发送数据时的长度":["175.0"],"这个限制是浏览器规定的":["175.0"],"并不是":["175.0"],"rfc":["175.0"],"规定的":["175.0"],"是否支持跨域":["175.1"],"第二次为真正的":["175.1"],"当前页面设置的任何cookie":["175.2"],"发出请求的页面所在的域":["175.2"],"控制http缓存":["175.3"],"setrequestheader":["175.4"],"stringheader":["175.4"],"stringvalue":["175.4"],"使用post方式才会使用到":["175.4"],"get方法并不需要调用该方法":["175.4"],"发送请求":["175.4"],"发送请求给服务器":["175.4"],"如果是get方式":["175.4"],"并不需要填写参数":["175.4"],"或填写null":["175.4"],"如果是post方式":["175.4"],"把要提交的参数写上去":["175.4"],"注册回调函数":["175.4","175.5"],"在页面不刷新的情况下向服务器请求数据":["175.4"],"http请求对象":["175.4"],"负责实现ajax技术":["175.4"],"小黄人":["175.4"],"创建xmlhttprequest对象":["175.4"],"相当于黄袍加身的跑腿外卖小哥哥":["175.4"],"设置请求":["175.4"],"告诉小黄人服务器地址":["175.4"],"小黄人出发去指定地址取外卖":["175.4"],"2g网速":["175.4"],"username":["175.5"],"password":["175.5"],"是新式浏览器才支持的":["175.5"],"如果要兼容更早的浏览器":["175.5"],"post":["175.6","286.44"],"liulongbin":["175.6"],"upload":["175.6"],"只能触发你自己注册的onclick事件":["175.7"],"没注册触发不了":["175.7"],"传递一个":["175.8"],"函数到":["175.8"],"的构造函数来创建":["175.8"],"帧的概念是它实现多路复用的基础":["175.9"],"多路复用":["175.9"],"实现了多路复用":["175.9"],"仍然复用":["175.9"],"但是在一个连接里":["175.9"],"客户端和服务器都可以同时发送多个请求或回应":["175.9"],"而且不用按照顺序一一发送":["175.9"],"这样就避免了":["175.9"],"队头堵塞":["175.9"],"的问题":["175.9","178.3"],"数据流":["175.9"],"使用了数据流的概念":["175.9"],"的数据包是不按顺序发送的":["175.9"],"同一个连接里面连续的数据包":["175.9"],"可能属于不同的请求":["175.9"],"必须要对数据包做标记":["175.9"],"指出它属于哪个请求":["175.9"],"将每个请求或回应的所有数据包":["175.9"],"称为一个数据流":["175.9"],"每个数据流都有一个独一无二的编号":["175.9"],"数据包发送时":["175.9"],"都必须标记数据流":["175.9"],"用来区分它属于哪个数据流":["175.9"],"http协议默认端口是80":["175.10"],"https协议默认端口是443":["175.10"],"虚拟目录部分":["175.10"],"从域名后的第一个":["175.10"],"开始到最后一个":["175.10"],"为止":["175.10"],"是虚拟目录部分":["175.10"],"虚拟目录也不是一个url必须的部分":["175.10"],"本例中的虚拟目录是":["175.10"],"文件名部分":["175.10"],"从域名后的最后一个":["175.10"],"开始到":["175.10"],"是文件名部分":["175.10"],"如果没有":["175.10"],"则是从域名后的最后一个":["175.10"],"是文件部分":["175.10"],"那么从域名后的最后一个":["175.10"],"开始到结束":["175.10"],"都是文件名部分":["175.10"],"本例中的文件名是":["175.10"],"asp":["175.10"],"文件名部分也不是一个url必须的部分":["175.10"],"如果省略该部分":["175.10"],"则使用默认的文件名":["175.10"],"锚部分":["175.10"],"开始到最后":["175.10"],"都是锚部分":["175.10"],"本例中的锚部分是":["175.10"],"锚部分也不是一个url必须的部分":["175.10"],"参数部分":["175.10"],"为止之间的部分为参数部分":["175.10"],"又称搜索部分":["175.10"],"查询部分":["175.10"],"本例中的参数部分为":["175.10"],"boardid":["175.10"],"参数可以允许有多个参数":["175.10"],"参数与参数之间用":["175.10"],"与缓存相关的http请求头有哪些":["175.10"],"expires":["175.10","175.12"],"协商缓存":["175.10"],"etag":["175.10"],"since":["175.10","215.2","218.5","222.4"],"强缓存和协商缓存":["175.10"],"不会向服务器发送请求":["175.10"],"直接从缓存中读取资源":["175.10"],"在chrome控制台的network选项中可以看到该请求返回200的状态码":["175.10"],"并且size显示from":["175.10"],"disk":["175.10"],"cache或from":["175.10"],"cache两种":["175.10"],"灰色表示缓存":["175.10"],"向服务器发送请求":["175.10"],"服务器会根据这个请求的request":["175.10"],"header的一些参数来判断是否命中协商缓存":["175.10"],"如果命中":["175.10"],"则返回304状态码并带上新的response":["175.10"],"header通知浏览器从缓存中读取资源":["175.10"],"共同点":["175.10"],"都是从客户端缓存中读取资源":["175.10"],"区别是强缓存不会发请求":["175.10"],"协商缓存会发请求":["175.10"],"http的keep":["175.10"],"alive有什么作用":["175.10"],"http1":["175.10"],"0默认关闭":["175.10"],"需要手动开启":["175.10"],"1后默认开启":["175.10"],"使客户端到服务器端的链接持续有效":["175.10"],"当出现对服务器的后续请求时":["175.10"],"alive功能避免了建立或者重新建立链接":["175.10"],"使用方法":["175.10"],"在请求头中加上connection":["175.10"],"较少的cpu和内存的占用":["175.10"],"因为要打开的连接数变少了":["175.10"],"复用了连接":["175.10"],"减少了后续请求的延迟":["175.10"],"无需再进行握手":["175.10"],"本来可以释放的资源仍旧被占用":["175.10"],"有的请求已经结束了":["175.10"],"但是还一直连接着":["175.10"],"服务器设置过期时间和请求次数":["175.10"],"超过这个时间或者次数就断掉连接":["175.10"],"这样我们的信息就被窃取了":["175.11"],"然而自己还不知道":["175.11"],"参数中":["175.12"],"服务器端采用filter过滤器校验":["175.12"],"校验成功则返回请求数据":["175.12"],"校验失败则返回错误码":["175.12"],"token可以抵抗csrf":["175.12"],"session不行":["175.12"],"session时有状态的":["175.12"],"一般存于服务器内存或硬盘中":["175.12"],"当服务器采用分布式或集群时":["175.12"],"session就会面对负载均衡问题":["175.12"],"负载均衡多服务器的情况":["175.12"],"不好确认当前用户是否登录":["175.12"],"因为多服务器不共享session":["175.12"],"客户端登陆传递信息给服务端":["175.12"],"服务端收到后把用户信息加密":["175.12"],"传给客户端":["175.12"],"客户端将token存放于localstroage等容器中":["175.12"],"客户端每次访问都传递token":["175.12"],"服务端解密token":["175.12"],"就知道这个用户是谁了":["175.12"],"通过cpu加解密":["175.12"],"服务端就不需要存储session占用存储空间":["175.12"],"就很好的解决负载均衡多服务器的问题了":["175.12"],"这个方法叫做jwt":["175.12"],"token是怎么加密的":["175.12"],"需要一个secret":["175.12"],"随机数":["175.12"],"后端利用secret和加密算法":["175.12"],"hmac":["175.12"],"sha256":["175.12"],"对payload":["175.12"],"如账号密码":["175.12"],"生成一个字符串":["175.12"],"返回前端":["175.12"],"前端每次request在header中带上token":["175.12"],"后端用同样的算法解密":["175.12"],"cookie和token都放在header中":["175.12"],"为什么会劫持cookie":["175.12"],"不会劫持token":["175.12"],"登陆后后端生成一个sessionid放在cookie中返回给客户端":["175.12"],"并且服务端一直记录着这个":["175.12"],"sessionid":["175.12"],"客户端以后每次请求都会带上这个sessionid":["175.12"],"服务端通过这个sessionid来验证身份之类的操作":["175.12"],"所以别人拿到了cookie就相当于拿到了sessionid":["175.12"],"就可以完全替代你":["175.12"],"同时浏览器会自动携带cookie":["175.12"],"同样是登录后服务端返回一个token":["175.12"],"客户端保存起来":["175.12"],"在以后http请求里手动的加入到请求头里":["175.12"],"服务端根据token":["175.12"],"进行身份的校验":["175.12"],"浏览器不会自动携带token":["175.12"],"所以不会劫持":["175.12"],"token过期后":["175.12"],"页面如何实现无感刷新":["175.12"],"什么是无感刷新":["175.12"],"后台返回的token是有时效性的":["175.12"],"时间到了":["175.12"],"你在交互后台的时候":["175.12"],"后台会判断你的token是否过期":["175.12"],"安全需要":["175.12"],"如果过期了就会逼迫你重新登陆":["175.12"],"token无感刷新其本质是为了优化用户体验":["175.12"],"当token过期时不需要用户跳回登录页重新登录":["175.12"],"而是当token失效时":["175.12"],"进行拦截":["175.12"],"发送刷新token的ajax":["175.12"],"获取最新的token进行覆盖":["175.12"],"让用户感受不到token已经过期":["175.12"],"实现无感刷新":["175.12"],"后端返回过期时间":["175.12"],"前端判断token过期时间":["175.12"],"去调用刷新token接口":["175.12"],"需要后端额外提供一个token过期时间的字段":["175.12"],"使用了本地时间判断":["175.12"],"若本地时间篡改":["175.12"],"特别是本地时间比服务器时间慢时":["175.12"],"拦截会失败":["175.12"],"写个定时器":["175.12"],"定时刷新token接口":["175.12"],"消耗性能":["175.12"],"不建议采用":["175.12"],"在响应拦截器中拦截":["175.12"],"判断token":["175.12"],"返回过期后":["175.12"],"调用刷新token接口":["175.12"],"介绍下304过程":["175.12"],"浏览器请求资源时首先命中资源的expires":["175.12"],"受限于本地时间":["175.12"],"如果修改了本地时间":["175.12"],"可能会造成缓存失效":["175.12"],"可以通过cache":["175.12"],"age指定最大生命周期":["175.12"],"状态仍然返回200":["175.12"],"但不会请求数据":["175.12"],"什么是文档的预解析":["175.13"],"webkit":["175.13","195.4"],"firefox":["175.13"],"都做了这个优化":["175.13"],"当执行":["175.13"],"脚本时":["175.13"],"另一个线程解析剩下的文档":["175.13"],"并加载后面需要通过网络加载的资源":["175.13"],"这种方式可以使资源并行加载从而使整体速度更快":["175.13"],"预解析并不改变":["175.13"],"它将这个工作留给主解析过程":["175.13"],"自己只解析外部资源的引用":["175.13"],"比如外部脚本":["175.13"],"无需知道cookie的意义":["175.14"],"只要转发cookie就能达到目的":["175.14"],"cookie在请求一个新的页面的时候都会被发送过去":["175.14"],"如果需要域名之间跨域共享cookie":["175.14"],"有两种方法":["175.14"],"ie8以下版本的浏览器不支持":["175.15"],"如果浏览器设置为隐私模式":["175.15"],"那我们将无法读取到localstorage":["175.15"],"端口":["175.16"],"三者必须一致":["175.16"],"同源政策主要限制了三个方面":["175.16"],"当前域下的":["175.16"],"脚本不能够访问其他域下的":["175.16"],"indexdb":["175.16"],"只要服务器实现了cors请求":["175.17"],"只支持":["175.18"],"所以传参时最好用json":["175.19"],"序列化":["175.19"],"转发给服务器":["175.20"],"拿到服务器":["175.20"],"以此来实现用户的冒充":["175.21"],"攻击可以使用以下方法来防护":["175.21"],"进行同源检测":["175.21"],"服务器根据":["175.21"],"请求头中":["175.21"],"信息来判断请求是否为允许访问的站点":["175.21"],"从而对请求进行过滤":["175.21"],"进行验证":["175.21"],"服务器向用户返回一个随机数":["175.21"],"当网站再次发起请求时":["175.21"],"在请求参数中加入服务器端返回的":["175.21"],"通信请求只能由客户端发起":["175.22"],"服务端对请求做出应答处理":["175.22"],"http协议无法实现服务器主动向客户端发起消息":["175.22"],"websocket连接允许客户端和服务器之间进行全双工通信":["175.22"],"以便任一方都可以通过建立的连接将数据推送到另一端":["175.22"],"websocket只需要建立一次连接":["175.22"],"就可以一直保持连接状态":["175.22"],"什么是轮询":["175.22"],"轮询":["175.22"],"隔一段时间进行一次查询或者询问":["175.22"],"轮询分为长轮询和短轮询":["175.22"],"长轮询是基于短轮询的一个优化结果":["175.22"],"通过客户端定期轮询来询问服务端是否有新的信息产生":["175.22"],"如果有则返回":["175.22"],"没有就不响应":["175.22"],"缺点":["175.22","176.12"],"也是显而易见":["175.22"],"轮询间隔大了则信息不够实时":["175.22"],"轮询间隔过小又会消耗过多的流量":["175.22"],"增加服务器的负担":["175.22"],"长轮询":["175.22"],"是需要服务端进行更改来进行支持":["175.22"],"客户端向服务端发送请求时":["175.22"],"如果此时服务端没有新的信息产生":["175.22"],"并不立刻返回":["175.22"],"更准确":["176.1"],"更快的拿到":["176.1"],"立即设置为":["176.2"],"将外部传入的函数的执行放在":["176.2"],"只接受对象最为键名":["176.3"],"除外":["176.3","179.2"],"不接受其他类型的值作为键名":["176.3"],"键名是弱引用":["176.3"],"widetraversal":["176.4"],"nextelementsibling":["176.4"],"关键字指代父类的实例":["176.6"],"即父类的":["176.6"],"promise":["176.7","195.4","219.6","283.1","283.2","286.53"],"不能用":["176.9"],"try":["176.9","204.2","214.2","223.2","286.51"],"将异步代码改造成同步代码":["176.12"],"并向服务器发送确认包ack":["176.15"],"双方均保证了自己的接收和发送能力没有问题":["176.16"],"是同步更新的":["176.17"],"比如原生":["176.17"],"查询模块压缩包的网址":["176.19"],"下载压缩包":["176.19"],"存放在根目录下的":["176.19"],"灵活的开发模式":["177.0"],"跨平台能力以及热更新机制":["177.0"],"上手":["177.1"],"改造门槛较高":["177.1"],"最好需要掌握一定程度的客户端技术":["177.1"],"相比于常规":["177.1"],"web开发":["177.1"],"需要更高的开发调试":["177.1"],"问题排查成本":["177.1"],"小程序":["177.1"],"通过更加定制化的":["177.1"],"赋予了":["177.1"],"作为宿主的客户端中拥有更高的权限":["177.2"],"可以对":["177.2"],"该方法的弊端是无法获取函数返回值":["177.3"],"trigger":["177.3"],"evaluatejavascript":["177.3"],"内置离线包":["177.4"],"将代码直接内置于":["177.4"],"即本地存储中":["177.4"],"可由":["177.4"],"h5":["177.4"],"bridge层":["177.5"],"可以做一套浏览器适配":["177.5"],"在一些无法适配的功能":["177.5"],"做好降级处理":["177.5"],"从而保证代码在任何环境的可用性":["177.5"],"一套代码可同时运行于":["177.5"],"app内":["177.5"],"普通浏览器":["177.5"],"环境系统":["177.5"],"与客户端进行统一配合":["177.5"],"搭建出":["177.5"],"正式":["177.5"],"执行代码":["177.6"],"flag":["177.6","218.4","232.2"],"标记是否加载完成":["177.6"],"开始执行加载入口文件":["177.6"],"代码转换成":["177.7"],"抹平兼容性问题":["177.7"],"tsx":["177.7","185.7"],"编译":["177.7"],"代码以":["177.7"],"标签的形式插入到":["177.7"],"会创建一个新的":["177.8"],"开始一次新的编译":["177.8"],"它包含了当前的输入资源":["177.8"],"输出资源":["177.8"],"变化的文件等":["177.8"],"同时通过它提供的":["177.8"],"可以监听每次编译过程中触发的事件钩子":["177.8"],"区别":["177.8"],"且从启动生存到结束":["177.8"],"对应每次编译":["177.8"],"每轮编译循环均会重新创建":["177.8"],"常用":["177.8"],"uglifyjsplugin":["177.8"],"压缩":["177.8","193.7"],"混淆代码":["177.8"],"commonschunkplugin":["177.8","195.9"],"代码分割":["177.8"],"provideplugin":["177.8"],"提升开发体验":["177.9"],"监听文件变动":["177.9"],"忽略":["177.9"],"目录能有效提高监听时的编译效率":["177.9"],"缩小编译范围":["177.9"],"指定模块路径":["177.9"],"减少递归搜索":["177.9"],"mainfields":["177.9"],"指定入口文件描述字段":["177.9"],"减少搜索":["177.9"],"noparse":["177.9"],"避免对非模块化文件的加载":["177.9"],"指定搜索范围":["177.9"],"排除不必要的搜索范围":["177.9"],"避免重复寻址":["177.9"],"这样会破坏了浏览器的队列整合":["177.10"],"尽量将值进行缓存使用":["177.10"],"大量操作时":["177.10"],"可将":["177.10"],"脱离文档流或者隐藏":["177.10"],"待操作完成后再重新恢复":["177.10"],"documentfragment":["177.10","179.39"],"clonenode":["177.10"],"replacechild":["177.10"],"进行操作":["177.10"],"使用事件委托":["177.10"],"避免大量的事件绑定":["177.10"],"层级扁平":["177.10"],"避免过于多层级的选择器嵌套":["177.10"],"特定的选择器":["177.10"],"好过一层一层查找":["177.10"],"优于":["177.10"],"的图片可以转换成":["177.11"],"base64":["177.11","284.26"],"内嵌":["177.11"],"合适场景下":["177.11"],"iconfont":["177.11"],"使用缓存":["177.11"],"通过设置请求的过期时间":["177.11"],"合理运用浏览器缓存":["177.11"],"cdn缓存":["177.11"],"静态文件合理使用":["177.11"],"cdn":["177.11"],"低帧数":["177.12"],"卡顿的动画宁愿不要":["177.12"],"执行时间避免超过":["177.12"],"超过的话就需要做":["177.12"],"寻找可":["177.12"],"缓存":["177.12"],"的点":["177.12"],"任务的":["177.12"],"时间顺序":["177.13"],"默认":["177.13","179.5"],"按用户的访问的顺序逐一的分配到正常运行的服务器上":["177.13"],"连接数优先":["177.13"],"least":["177.13"],"conn":["177.13"],"优先将访问分配到列表中连接数队列最短的服务器上":["177.13"],"响应时间优先":["177.13"],"fair":["177.13"],"优先将访问分配到列表中访问响应时间最短的服务器上":["177.13"],"指定":["177.13"],"使每个":["177.13"],"用户都访问固定的服务器上":["177.13"],"有利于用户特异性数据的缓存":["177.13"],"例如本地":["177.13"],"session":["177.13","195.2"],"服务等":["177.13"],"都分配到固定的服务器上":["177.13"],"有利于缓存":["177.13"],"对于前端的作用":["177.13"],"快速配置静态服务器":["177.13"],"当访问":["177.13"],"将文件系统分成一层一层的结构":["177.14"],"逐步从底层往上层构建":["177.14"],"每层文件都可以进行继承和定制":["177.14"],"这里从前端的角度来理解":["177.14"],"镜像就类似于代码中的":["177.14"],"可以通过继承与上层封装进行复用":["177.14"],"从外层系统看来":["177.14"],"一个镜像就是一个":["177.14"],"二进制文件":["177.14"],"可以任意迁移":["177.14"],"删除":["177.14","179.56"],"添加":["177.14"],"镜像是一份静态文件系统":["177.14"],"无法进行运行时操作":["177.14"],"就如":["177.14"],"如果我们不进行实例化时":["177.14"],"便无法进行操作和使用":["177.14"],"例如数据驱动":["178.0"],"组件化":["178.0"],"虚拟":["178.0"],"待完成后再回来继续比对":["178.1"],"更新到":["178.1"],"并不适合拆分":["178.1"],"才能保持数据与":["178.1"],"的同步":["178.1"],"否则可能由于阻塞":["178.1"],"而导致数据更新和":["178.1"],"不一致的情况":["178.1"],"分散执行":["178.1"],"任务分割后":["178.1"],"就可以把小任务单元分散到浏览器的空闲期间去排队执行":["178.1"],"而实现的关键是两个新api":["178.1"],"requestidlecallback":["178.1"],"requestanimationframe":["178.1","279.8","286.10","286.56"],"低优先级的任务交给":["178.1"],"当新":["178.2"],"发生变化时":["178.2"],"同步更新到":["178.2"],"null1":["178.2"],"可以在":["178.2"],"存储的是":["178.3"],"合并状态":["178.3"],"assign":["178.3","178.5"],"因此前面设置的":["178.3"],"值会被后面所覆盖":["178.3"],"最终只会执行一次更新":["178.3"],"函数式":["178.3"],"由于":["178.3","207.10"],"fiber":["178.3"],"及":["178.3"],"官方推荐可以传入":["178.3"],"的形式":["178.3"],"中返回新的":["178.3"],"isadmin":["178.4"],"currentrole":["178.4"],"getcurrentuserrole":["178.4"],"您没有权限查看该页面":["178.4"],"请联系管理员":["178.4"],"性能监控":["178.4"],"包裹组件的生命周期":["178.4"],"进行统一埋点":["178.4"],"withtiming":["178.4"],"遵守数据不可变":["178.5"],"不要去直接修改":["178.5"],"而是返回出一个":["178.5"],"新对象":["178.5"],"copy":["178.5","216.3"],"extend":["178.5","218.5","251.1"],"等方式创建新对象":["178.5"],"默认情况下需要":["178.5"],"返回原数据":["178.5"],"避免数据被清空":["178.5"],"最好设置":["178.5"],"初始值":["178.5"],"便于应用的初始化及数据稳定":["178.5"],"进阶":["178.5"],"结合":["178.5"],"provider":["178.5"],"回调中的返回的函数也只会被最终执行一次":["178.6"],"useunmount":["178.6"],"mounted":["178.6","216.3"],"封装成一个高度可复用的":["178.6"],"状态":["178.6"],"usemounted":["178.6"],"setmounted":["178.6"],"每次均会执行":["178.6"],"其实就是排除了":["178.6"],"后即可":["178.6"],"其它内置钩子":["178.6"],"层根组件":["178.7"],"appstring":["178.7"],"staticrouter":["178.7"],"location":["178.7"],"包装成完整的":["178.7"],"文件格式":["178.7"],"已经能生成完整的":["178.7"],"但只是个纯静态的页面":["178.7"],"没有样式没有交互":["178.7"],"接下来我们就是要插入":["178.7"],"我们可以通过访问前端打包后生成的":["178.7"],"asset":["178.7"],"manifest":["178.7","195.9"],"文件来获取相应的文件路径":["178.7"],"并同样注入到":["178.7"],"中引用":["178.7"],"lang":["178.7"],"zh":["178.7"],"数据不可变性":["178.8"],"immutable":["178.8"],"这是一种数据理念":["178.8"],"也是函数式编程中的核心理念之一":["178.8"],"倡导":["178.8"],"一个对象再被创建后便不会再被修改":["178.8"],"当需要改变值时":["178.8"],"是返回一个全新的对象":["178.8"],"而不是直接在原对象上修改":["178.8"],"目的":["178.8"],"保证数据的稳定性":["178.8"],"避免依赖的数据被未知地修改":["178.8"],"导致了自身的执行异常":["178.8"],"能有效提高可控性与稳定性":["178.8"],"并不等同于":["178.8"],"创建一个对象后":["178.8"],"它的属性仍然可以被修改":["178.8"],"更类似于":["178.8"],"freeze":["178.8"],"冻结对象":["178.8"],"但":["178.8"],"仍无法保证深层的属性不被串改":["178.8"],"中的数据不可变库":["178.8"],"它保证了数据不可变":["178.8"],"生态中被广泛应用":["178.8"],"大大提升了性能与稳定性":["178.8"],"trie":["178.8"],"数据结构":["178.8"],"一种数据结构":["178.8"],"能有效地深度冻结对象":["178.8"],"保证其不可变":["178.8"],"结构共享":["178.8"],"可以共用不可变对象的内存引用地址":["178.8"],"减少内存占用":["178.8"],"提高数据操作性能":["178.8"],"避免不同函数之间的":["178.8"],"tips":["179.1","195.8"],"理论上是有上面":["179.1"],"种盒子":["179.1"],"但现在":["179.1"],"box的左边相接触":["179.2"],"子元素":["179.2"],"的区域不会与":["179.2"],"的元素区域重叠":["179.2"],"scrolling":["179.3"],"items":["179.4"],"table":["179.4"],"选择器":["179.5","195.4"],"创建父级":["179.6"],"所引用的":["179.7"],"会等到页面加载完才被加载":["179.7"],"需要":["179.7"],"嵌套":["179.8"],"循环语句":["179.8"],"反向播放":["179.9"],"静止模式":["179.9"],"forwards":["179.9"],"停止时":["179.9"],"保留最后一帧":["179.9"],"backwards":["179.9"],"因此如果能在":["179.10"],"这条线其实是是基于原型进行获取的":["179.11"],"可以理解成一条基于原型的映射线":["179.11"],"o":["179.11","286.7"],"则输出":["179.12"],"属性修改机制":["179.12"],"只会修改实例对象本身的属性":["179.12"],"如果不存在":["179.12"],"到执行栈顶层":["179.13"],"函数执行上下文被激活":["179.13"],"成为":["179.13"],"active":["179.13","179.14"],"ao":["179.14","179.16"],"当变量对象所处的上下文为":["179.14"],"由于foo在函数中只为可读":["179.15"],"因此赋值无效":["179.15"],"自身活动对象":["179.16"],"如此":["179.16"],"传入":["179.17"],"避免使用默认的":["179.17"],"向上查找":["179.17"],"延迟加载":["179.18"],"元素解析完成后执行":["179.18"],"具有循环引用的对象时":["179.19"],"当值为函数":["179.19"],"返回新对象":["179.20"],"如果构造函数有自己":["179.20"],"instance":["179.21","181.0","205.5","216.3"],"混入":["179.22"],"mixin":["179.22"],"uber":["179.23"],"tolowercase":["179.25","286.16"],"不支持":["179.26"],"正在提案":["179.26"],"下可支持":["179.26"],"是":["179.26"],"同步":["179.26"],"callnow":["179.27"],"的指向":["179.28"],"新":["179.31","195.7"],"add1":["179.32"],"为当前值":["179.33"],"当传入":["179.33"],"从第一项开始":["179.33"],"当未传入时":["179.33"],"则为第二项":["179.33"],"数组乱序":["179.33"],"设置同域下共享的":["179.34"],"与监听":["179.34"],"onstorage":["179.34"],"消息队列":["179.35"],"微任务":["179.35"],"该方法已废弃":["179.36"],"宏任务":["179.36"],"macrotask":["179.36"],"生成样式树":["179.37"],"attachment":["179.37"],"hover":["179.38"],"查询某些属性或调用某些方法":["179.38"],"clienttop":["179.38"],"clientleft":["179.38"],"offsetwidth":["179.38"],"一次性插入":["179.39"],"可自行设置过期时间":["179.40"],"长久储存":["179.40"],"窗口关闭删除":["179.40"],"线程发送过来的消息":["179.41"],"的条件":["179.42"],"经历过一次以上":["179.42"],"的对象":["179.42"],"内存中的引用未被正确清空":["179.43"],"可用":["179.43"],"优先级高于":["179.44"],"当缓存已经过期时":["179.44"],"使用协商缓存":["179.44"],"唯一标识方案":["179.44"],"携带":["179.44"],"request携带":["179.44"],"上一次返回的":["179.44"],"服务器判断资源是否被修改":["179.44"],"可使用原有uri":["179.45"],"资源未修改":["179.45"],"可使用缓存":["179.45"],"需代理访问":["179.45"],"安全":["179.46","203.5"],"onerror":["179.47","214.1","214.2"],"onclose":["179.47"],"recv":["179.48"],"客户端接收":["179.48"],"则返回":["179.50"],"如有":["179.50"],"设置白名单":["179.52"],"macrotasks":["179.53"],"挂载节点实现":["179.54"],"mountcomponent":["179.54"],"compile":["179.54","181.0"],"compiletofunctions":["179.54"],"beforemounte":["179.54"],"初始化观察者":["179.54"],"addsub":["179.55"],"重新设置值时":["179.55"],"触发收集器的通知机制":["179.55"],"reactivesetter":["179.55"],"nv":["179.55"],"nofify":["179.55"],"subs":["179.55"],"sub":["179.55"],"keyindex":["179.56"],"进一步递归对比":["179.56"],"列表对比":["179.56"],"主要也是根据":["179.56"],"值查找匹配项":["179.56"],"对比出新旧列表的新增":["179.56"],"oldlist":["179.56"],"newlist":["179.56"],"newkeys":["179.56"],"getkey":["179.56"],"占位":["179.58"],"便于管理":["179.59"],"算法":["179.59"],"回溯法":["179.60"],"发现原先选择不优时":["179.60"],"插入排序":["179.61"],"即将元素插入到已排序好的数组中":["179.61"],"insertsort":["179.61"],"外循环从1开始":["179.61"],"默认arr":["179.61"],"是有序段":["179.61"],"放在左边":["179.62"],"中序遍历":["179.64"],"先访问到最左的子节点":["179.64"],"访问该节点的父节点":["179.64"],"取其回到":["179.65"],"继续循环":["179.65"],"十六":["180.0"],"请说明key的作用和原理":["180.0"],"vue在patch过程中":["180.0"],"通过key可以判断两个虚拟节点是否是相同节点":["180.0"],"没有key会导致更新的时候出问题":["180.0"],"尽量不要采用索引作为key":["180.0"],"十七":["180.0"],"谈谈对组件的理解":["180.0"],"组件化开发能大幅提高应用开发效率":["180.0"],"测试性":["180.0"],"复用性":["180.0"],"常用的组件化技术":["180.0"],"自定义事件":["180.0"],"插槽":["180.0"],"降低更新范围":["180.0"],"值重新渲染变化的组件":["180.0"],"高内聚":["180.0"],"低耦合":["180.0"],"单向数据流":["180.0"],"十八":["180.0"],"请描述组件的渲染流程":["180.0"],"产生组件虚拟节点":["180.0"],"创建组件的真实节点":["180.0"],"插入到页面":["180.0"],"十九":["180.0"],"请描述组件的更新流程":["180.0"],"属性更新会触发patchvnode方法":["180.0"],"组件的虚拟节点会调用prepatch钩子":["180.0"],"然后更新属性":["180.0"],"更新组件":["180.0"],"二十":["180.0"],"异步组件原理":["180.0"],"先渲染异步占位符节点":["180.0"],"组件加载完毕后调用forceupdate强制更新":["180.0"],"二十一":["180.0"],"函数组件的优势和原理":["180.0"],"方法方法来替换":["180.1"],"不利于seo":["180.2"],"history美观":["180.2"],"historyapi":["180.2"],"popstate":["180.2"],"但是刷新会出现404":["180.2"],"三十五":["180.2"],"谈谈vue的性能优化有哪些":["180.2"],"数据层级不要过深":["180.2"],"合理的设置响应式数据":["180.2"],"使用数据时":["180.2"],"缓存值的结果":["180.2"],"不频繁取值":["180.2"],"合理设置key":["180.2"],"show":["180.2","276.0"],"频繁切换性能高":["180.2"],"和v":["180.2"],"if的合理使用":["180.2"],"控制组件的粒度":["180.2"],"vue采用组件级别更新":["180.2"],"采用函数式组件":["180.2"],"函数式组价开销低":["180.2"],"采用异步组件":["180.2"],"your":["181.0"],"success":["181.0"],"iovec":["181.0"],"cnblogs":["181.0"],"是如何实现数据双向绑定的":["181.0"],"数据双向绑定主要是指":["181.0"],"数据变化更新视图":["181.0"],"视图变化更新数据":["181.0"],"输入框内容变化时":["181.0"],"中的数据同步变化":["181.0"],"中的数据变化时":["181.0"],"文本节点的内容同步变化":["181.0"],"变化更新":["181.0"],"可以通过事件监听的方式来实现":["181.0"],"的数据双向绑定的工作主要是如何根据":["181.0"],"主要通过以下":["181.0"],"个步骤来实现数据双向绑定的":["181.0"],"实现一个监听器":["181.0"],"对数据对象进行遍历":["181.0"],"包括子属性对象的属性":["181.0"],"defineproperty":["181.0","236.4"],"对属性都加上":["181.0"],"setter":["181.0"],"给这个对象的某个值赋值":["181.0"],"就会触发":["181.0"],"那么就能监听到了数据变化":["181.0"],"实现一个解析器":["181.0"],"模板指令":["181.0"],"将模板中的变量都替换成数据":["181.0"],"然后初始化渲染页面视图":["181.0"],"并将每个指令对应的节点绑定更新函数":["181.0"],"添加监听数据的订阅者":["181.0"],"一旦数据有变动":["181.0"],"收到通知":["181.0"],"调用更新函数进行数据更新":["181.0"],"实现一个订阅者":["181.0"],"watcher":["181.0","258.4"],"订阅者是":["181.0"],"之间通信的桥梁":["181.0"],"主要的任务是订阅":["181.0"],"中的属性值变化的消息":["181.0"],"当收到属性值变化的消息时":["181.0"],"触发解析器":["181.0"],"中对应的更新函数":["181.0"],"实现一个订阅器":["181.0"],"dep":["181.0","246.5"],"订阅器采用":["181.0"],"发布":["181.0","201.8"],"订阅":["181.0"],"设计模式":["181.0"],"用来收集订阅者":["181.0"],"对监听器":["181.0"],"订阅者":["181.0"],"进行统一管理":["181.0"],"以上四个步骤的流程图表示如下":["181.0"],"如果有同学理解不大清晰的":["181.0"],"可以查看作者专门介绍数据双向绑定的文章":["181.0"],"掌握":["181.0"],"核心之数据双向绑定":["181.0"],"有进行详细的讲解":["181.0"],"以及代码":["181.0"],"框架怎么实现对象和数组的监听":["181.0"],"如果被问到":["181.0"],"怎么实现数据双向绑定":["181.0"],"大家肯定都会回答":["181.0"],"对数据进行劫持":["181.0"],"只能对属性进行数据劫持":["181.0"],"不能对整个对象进行劫持":["181.0"],"同理无法对数组进行劫持":["181.0"],"但是我们在使用":["181.0"],"框架中都知道":["181.0"],"能检测到对象和数组":["181.0"],"部分方法的操作":["181.0"],"那它是怎么实现的呢":["181.0"],"我们查看相关代码如下":["181.0"],"observearray":["181.0"],"功能为监测数据的变化":["181.0"],"对属性进行递归遍历":["181.0"],"childob":["181.0"],"shallow":["181.0"],"通过以上":["181.0"],"源码部分查看":["181.0"],"我们就能知道":["181.0"],"框架是通过遍历数组":["181.0"],"和递归遍历对象":["181.0"],"从而达到利用":["181.0"],"也能对对象和数组":["181.0"],"进行监听":["181.0"],"优劣对比":["181.0"],"的优势如下":["181.0"],"可以直接监听对象而非属性":["181.0"],"可以直接监听数组的变化":["181.0"],"有多达":["181.0"],"种拦截方法":["181.0"],"不限于":["181.0"],"ownkeys":["181.0"],"deleteproperty":["181.0"],"等等是":["181.0"],"不具备的":["181.0"],"返回的是一个新对象":["181.0"],"我们可以只操作新的对象达到目的":["181.0"],"只能遍历对象属性直接修改":["181.0"],"作为新标准将受到浏览器厂商重点持续的性能优化":["181.0"],"也就是传说中的新标准的性能红利":["181.0"],"兼容性好":["181.0"],"支持":["181.0"],"ie9":["181.0"],"的存在浏览器兼容性问题":["181.0"],"而且无法用":["181.0"],"polyfill":["181.0"],"磨平":["181.0"],"的作者才声明需要等到下个大版本":["181.0"],"才能用":["181.0"],"怎么用":["181.0"],"解决对象新增属性不能响应的问题":["181.0"],"受现代":["181.0"],"无法检测到对象属性的添加或删除":["181.0"],"会在初始化实例时对属性执行":["181.0"],"转化":["181.0"],"所以属性必须在":["181.0"],"对象上存在才能让":["181.0"],"将它转换为响应式的":["181.0"],"propertyname":["181.0"],"来实现为对象添加响应式属性":["181.0"],"那框架本身是如何实现的呢":["181.0"],"我们查看对应的":["181.0"],"源码":["181.0"],"元祖中":["182.2"],"第一个元素必须是":["182.2"],"exampleinterface1":["183.2"],"exampletype2":["183.2"],"uniontype":["183.4"],"mytype1":["183.4"],"mytype2":["183.4"],"继承":["184.1"],"泛型等":["184.1"],"可以在开发人员编写脚本时检测错误":["184.2"],"使得代码质量更好":["184.2"],"ide自动填充":["184.3"],"常量枚举不允许包含计算成员":["184.4"],"接口和类型别名":["184.4"],"两者都可以用来描述对象或函数的类型":["184.4"],"这种情况下":["184.5"],"赋值给":["184.6"],"类型的变量":["184.6"],"当你指定了":["184.6"],"sym":["184.8"],"中箭头函数的":["184.9"],"都允许拓展":["184.14"],"在变量名后添加":["184.16"],"可以断言排除undefined和null类型":["184.16"],"数字分割符":["184.16"],"如果编译器还是不能解析这个模块":["184.17"],"则会抛出一个错误":["184.17"],"中的多":["184.18"],"但是不能少":["184.18"],"函数的兼容性":["184.18"],"xiaoming":["184.20"],"加了一个编译选项":["184.22"],"strictfunctiontypes":["184.22"],"设置为":["184.22"],"那么这个文件包含的类型声明则会是局部声明":["184.25"],"可以合并吗":["184.26"],"同名的interface会自动合并":["184.26"],"对于没有类型的":["184.27"],"paths":["184.28"],"项来配置":["184.28"],"被此限定符修饰的成员是只可以被类的内部访问":["184.30"],"被此限定符修饰的成员是只可以被类的内部以及类的子类访问":["184.30"],"构成联合类型":["184.31"],"是将交叉类型合并":["184.32"],"其是一种静态类型检查的语言":["185.1"],"提供了类型注解":["185.1"],"在代码编译阶段就可以检查出数据类型的错误":["185.1"],"同时扩展了":["185.1"],"的语法":["185.1"],"泛型编程":["185.3"],"写代码时使用一些以后才指定的类型":["185.3"],"名字空间":["185.3"],"对于基本类型的批注是":["185.4"],"这种推断发生在初始化变量和成员":["185.5"],"设置默认参数值和决定函数返回值时":["185.5"],"如果缺乏声明而不能推断出类型":["185.5"],"tom":["185.6"],"dts":["185.7"],"文件是":["185.7"],"编译出":["186.1"],"switch":["186.3"],"语句的":["186.3"],"fallthrough":["186.3","219.10"],"错误":["186.3"],"不允许":["186.3"],"case":["186.3"],"语句贯穿":["186.3"],"模块解析选项":["186.3"],"moduleresolution":["186.3"],"选择模块解析策略":["186.3"],"classic":["186.3"],"baseurl":["186.3"],"和对象类型":["187.0"],"不能有任何返回值":["189.0"],"这就需要在函数中":["189.0"],"直接报错":["189.0"],"通过对div元素添加了ref属性":["190.0"],"为了获取到这个元素":["190.0"],"setrefaction":["190.2"],"通过子组件emit传递ref":["190.4"],"cellref":["190.4"],"cellaction":["190.4"],"celltap":["190.6"],"celltaphandler":["190.6"],"突然看到这种还是有点不适应的":["191.0"],"有时候甚至都不确定是否编译完全":["191.0"],"进度":["191.1"],"设置了这个":["191.2"],"其他就会失效":["191.2"],"效果":["191.2"],"自定义配置reports":["191.2"],"在webpack5":["191.3"],"我们需要在webpack":["191.3"],"js配置的对外层加":["191.3"],"希望在记录的同时可以帮助到大家":["191.4"],"minicssextractplugin":["192.1","192.2","192.3"],"contenthash":["192.4"],"产物优化等":["193.1"],"可以理解在处理优化":["193.1"],"模块递归转换出来的":["193.1"],"实际的转换工作是由":["193.2"],"打包主流程之外":["193.3"],"找到项目入口文件":["193.4"],"之后根据按模块处理":["193.4"],"所配置的规则逐一处理模块文件":["193.4"],"处理过程包括转译":["193.4"],"依赖分析等":["193.4"],"该项用于控制如何缓存编译过程信息与编译结果":["193.5"],"用于配置当产物大小超过阈值时":["193.5"],"如何通知开发者":["193.5"],"日志类":["193.5"],"module引入进行静态分析":["193.6"],"故而编译的时候正确判断到底加载了那些模块":["193.6"],"加载":["193.7"],"持模块化":["193.7"],"件导":["193.7"],"等特性":["193.7"],"来加速代码构建":["193.8"],"wenpack":["193.8"],"清理每次打包下没有使用的文件":["193.8"],"speed":["193.8"],"的运行流程是一个串行的过程":["193.9"],"从启动到结束会依次执行以下流程":["193.9"],"首先会从配置文件和":["193.9"],"提供的":["193.10"],"改变输出结果":["193.10"],"线程里执行":["194.1"],"一个小程序存在多个界面":["194.1"],"所以渲染层存在多个":["194.1"],"因此在小程序中":["194.2"],"页面更新成了异步操作":["194.2"],"异步会使得各部分的运行时序变得复杂一些":["194.2"],"比如在渲染首屏的时候":["194.2"],"逻辑层与渲染层会同时开始初始化工作":["194.2"],"此时无需重新启动":["194.4"],"也在发布之后":["194.5"],"小时之内下发新版本信息到用户":["194.5"],"开发者可通过unionid":["195.0"],"实现多个小程序":["195.0"],"甚至app":["195.0"],"之间的数据互通了":["195.0"],"关键api":["195.0"],"wx":["195.0","195.7","200.4"],"只需要保持良好的用户体验即可":["195.1"],"此时开发者服务端便可以利用":["195.2"],"生成用户入库":["195.2"],"然后由服务端返回登录态":["195.3"],"本地记录即可实现登录":["195.3"],"附上微信提供的最佳实践":["195.3"],"调用":["195.3"],"然后从微信后端换取到":["195.3"],"moveto":["195.4"],"arc":["195.4"],"pi":["195.4"],"draw":["195.4"],"animationdata":["195.4"],"onshow":["195.4","196.12"],"animation":["195.4"],"createanimation":["195.4"],"duration":["195.4"],"timingfunction":["195.4"],"ease":["195.4"],"rotate":["195.4"],"setdata":["195.4"],"小程序的":["195.4"],"rquest":["195.4"],"请求是不是用的浏览器":["195.4"],"知识点考察":["195.4"],"知道":["195.4"],"是由":["195.4"],"实现的":["195.4"],"是不带":["195.4"],"storage等功能的":["195.4"],"那是":["195.4"],"带的":["195.4"],"是不是遵循":["195.4"],"规范实现的呢":["195.4"],"答案":["195.4"],"显然不是":["195.4"],"因为没有":["195.4"],"weixin":["195.4"],"markup":["195.4"],"支持数据绑定":["195.4"],"支持逻辑算术":["195.4"],"运算":["195.4"],"支持模板":["195.4"],"支持添加事件":["195.4"],"bindtap":["195.4","195.7"],"wxml编译器":["195.4"],"wcc":["195.4"],"把":["195.4"],"wxml文件":["195.4"],"转为":["195.4"],"执行方式":["195.4"],"进行局部更新":["195.4"],"wxss":["195.4","195.9"],"sheets":["195.4"],"wxss编译器":["195.4"],"wcsc":["195.4"],"把wxss文件转化为":["195.4"],"支持大部分css特性":["195.4"],"亲测包含但不限于如下内容":["195.4"],"transition":["195.4"],"keyframes":["195.4"],"radius":["195.4"],"除了官方文档列出的":["195.4"],"其实还支持":["195.4"],"letter":["195.4"],"line":["195.4","283.2","283.4"],"模拟器不支持http2":["195.5"],"wechatimg12":["195.5"],"加密过的数据解密":["195.6"],"用户信息获取失败":["195.6"],"在用户信息授权之前先调用":["195.6"],"并且保证":["195.6"],"不会刷新":["195.6"],"从而让后端服务正确解密数据":["195.6"],"但是这里存在一个问题":["195.6"],"如果小程序较长时间不用导致":["195.6"],"里面的实现都是直接":["195.7"],"和旧":["195.7"],"之间需要做一个":["195.7"],"patch":["195.7","214.2","218.4","232.2"],"找出":["195.7"],"diff":["195.7","222.7"],"patch完了之后的":["195.7"],"怎么更新视图":["195.7"],"也就是如何给这些":["195.7"],"attr":["195.7","236.6","286.55"],"属性呢":["195.7"],"中有":["195.7"],"nexttick":["195.7"],"的概念用以更新视图":["195.7"],"mpvue这块对于小程序的":["195.7"],"应该怎么处理呢":["195.7"],"另外个问题在于小程序的":["195.7"],"怎么生成":["195.7"],"也就是怎么将":["195.7"],"编译成":["195.7"],"这当中还涉及到运行时":["195.7"],"编译器":["195.7"],"只包含运行时":["195.7"],"显然如果要提高性能":["195.7"],"减少包大小":["195.7"],"也要提供预编译的能力":["195.7"],"因为要预输出":["195.7"],"且没法动态改变":["195.7"],"所以动态组件":["195.7"],"自定义":["195.7"],"这样一个":["195.7"],"的组件的模版部分会生成相应的":["195.7"],"other":["195.7","236.6","263.6"],"my":["195.7"],"handleproxy":["195.7"],"msg":["195.7"],"可能已经注意到了":["195.7"],"被转化成了":["195.7"],"在运行时会从根组件开始把所有的组件实例数据合并成一个树形的数据":["195.7"],"然后通过":["195.7"],"appdata":["195.7"],"的缩写":["195.7"],"至于那个":["195.7"],"则是我们的":["195.7"],"处理过后的一个标记":["195.7"],"会为每一个子组件打一个特定的不重复的标记":["195.7"],"树形数据结构如下":["195.7"],"这儿数据结构是一个数组":["195.7"],"是动态的":["195.7"],"hello":["195.7"],"这个部分的处理同":["195.7"],"的处理差异不大":["195.7"],"唯一不同在于通过配置生成":["195.7"],"其中的对于":["195.7"],"的若干处理":["195.7"],"mpcomid":["195.8"],"modifiers":["195.8"],"forprocessed":["195.8"],"staticrenderfns":["195.8"],"其中的render函数运行的结果是返回":["195.8"],"vnode":["195.8","243.2","252.8"],"其实":["195.8"],"defineplugin":["195.9"],"prod":["195.9","216.6","236.4","252.6"],"extract":["195.9"],"into":["195.9","218.5","221.3"],"its":["195.9","206.14","214.3","252.3","256.8"],"own":["195.9","256.8"],"extracttextplugin":["195.9"],"optimize":["195.9"],"vendor":["195.9"],"common":["195.9"],"minchunks":["195.9"],"are":["195.9","215.2","218.5"],"extracted":["195.9"],"custom":["195.9","215.2"],"assets":["195.9"],"assetssubdirectory":["195.9"],"webpackconfig":["195.9"],"productionsourcemap":["195.9"],"应用的生命周期":["196.1"],"指定其小程序的生命周期回调":["196.2"],"函数用来注册一个页面":["196.3"],"进行注册组件":["196.4"],"onpagenotfound":["196.6"],"小程序要打开的页面不存在时触发":["196.6"],"onunhandledrejection":["196.6"],"onhide":["196.7"],"监听页面隐藏":["196.7","196.8"],"终止任务":["196.7"],"detached":["196.8"],"退出一个页面时":["196.9"],"如果组件还在页面节点树中":["196.9"],"会被触发":["196.9"],"还有一些特殊的生命周期":["196.9"],"页面被展示":["196.10"],"前台显示":["196.12"],"或重新进":["196.13"],"触发onshow":["196.13"],"当使":["196.13"],"离开小程序":["196.14"],"用户都需要重新登录":["197.1"],"而在微信小程序中":["197.1"],"微信都会将用户的微信id映射出一个小程序":["197.2"],"openid":["197.2"],"是对用户数据进行加密签名的密钥":["197.4"],"为了自身应用安全":["197.4"],"不应该在网络上传输":["197.4"],"然后生成":["197.4"],"session并返回给小程序":["197.4"],"另一种方式可以通过调用wx":["197.6"],"checksession检查微信登陆态是否过期":["197.6"],"如果过期":["197.6"],"加载小程序代码包":["198.2"],"初始化小程序首页":["198.2"],"按需加载":["198.5"],"当用户点击到子包的目录时":["198.5"],"还是有一个代码包下载的过程":["198.5"],"因而如果有一些数据字段不在界面中展示且数据结构比较复杂或包含长字符串":["198.6"],"则不应使用setdata来设置这些数据":["198.6"],"与界面渲染无关的数据最好不要设置在data中":["198.6"],"可以考虑设置在page对象的其他字段下":["198.6"],"避免白屏":["198.8"],"方便":["199.1"],"商户后台得到支付成功的通知":["199.2"],"返回商户小程序":["199.2"],"大致如下":["199.4"],"时间戳":["199.4"],"timestamp":["199.4"],"随机字符串":["199.4"],"noncestr":["199.4"],"域名授权等操作":["199.6"],"多个webview可以理解为多页面应用":["200.1"],"有别于单页面应用spa":["200.1"],"spa渲染页面是通过路由识别随后动态将页面挂载到root节点中去":["200.1"],"如果单页面应用打开一个新的页面":["200.1"],"需要先卸载掉当前页面结构":["200.1"],"并且重新渲染":["200.1"],"很显然原生app并不是这个样子":["200.1"],"所以不像":["200.2"],"端等":["200.2"],"等到接口回来再去修改这个统一变量":["200.3"],"考虑到小程序是一个多":["200.5"],"webview":["200.5"],"的架构":["200.5"],"每一个小程序页面都是不同的webview":["200.5"],"渲染后显示的":["200.5"],"左右滑动的同时":["200.6"],"就会导致性能问题":["200.7"],"所以限制了":["200.7"],"写过小程序的都知道这个单位":["200.8"],"rpx":["200.11"],"标记":["200.12"],"插入到":["200.12"],"我们可以想象一下预编译框架的坏处有什么呢":["200.14"],"react或者vue后期再出一些新特性的话":["200.14"],"预编译框架都需要在进行语法解析扩展编写":["200.14"],"所以为什么这个框架的名称叫半编译半运行框架":["200.15"],"半编译讲的是vue的template需要单独编译为wxml":["200.15"],"届时有几个问题需要解决":["200.16"],"在小程序的平台里":["201.1"],"开发者完成开发之后":["201.1"],"然后点击上传":["201.4"],"但是面对多人协调开发的时候":["201.8"],"有可能出现已经上线的代码还没合并到master的情况":["201.8"],"pagemodel":["202.1"],"navigateback":["202.3"],"navigateto进行跳转":["202.4"],"以便返回原页面":["202.4"],"用于关闭当前页面":["202.7"],"跳转到应用内的某个页面":["202.7"],"getcurrentpages":["202.12"],"同时关闭其他非":["202.18"],"只留下新的":["202.19"],"tab":["202.19"],"应用将无处不在":["203.1"],"随时可用":["203.1"],"但又无需安装卸载":["203.1"],"注意的是":["203.1"],"较好的系统":["203.2"],"使得所有开发者在微信中都能获得":["203.2"],"较好的体验":["203.2"],"快速的加载":["203.2"],"更强":["203.2"],"的能":["203.2"],"样式也是一样的":["203.3"],"只是网页的":["203.3"],"比起app":["203.6"],"尤其是安卓版的高自由度":["203.6"],"csrf":["204.0"],"攻击的":["204.0"],"axios的优缺点":["204.0"],"所以调用这个create函数可以创建多个axios实例":["204.1"],"instanceconfig":["204.1"],"mergeconfig":["204.1"],"onrejected":["204.2"],"在执行请求前定义了两个堆栈":["204.2"],"来存储拦截器处理函数":["204.2"],"存储的是请求拦截器的处理函数":["204.2"],"要注意它通过":["204.2"],"添加的":["204.2"],"是先进后出的":["204.2"],"所以越早添加的拦截器越晚执行":["204.2"],"存储的是响应拦截器的处理函数":["204.2"],"这个是先进先出的":["204.2"],"也就是越早添加越先执行":["204.2"],"这里需要注意的是":["204.2"],"在存入堆栈时都是两个为一组存储的":["204.2"],"第一个始终是":["204.2"],"的处理函数":["204.2"],"第二个始终是":["204.2"],"aborted":["204.3"],"取消请求的核心代码是在":["204.3"],"以及在创建":["204.3"],"时对":["204.3"],"配置的处理上":["204.3"],"从代码可以看出":["204.3"],"当调用":["204.3"],"时会返回一个":["204.3"],"实例对象和一个可以取消请求的函数":["204.3"],"在canceltoken函数中":["204.3"],"当创建":["204.3"],"实例时":["204.3"],"指向一个创建好的":["204.3"],"实例":["204.3"],"此时这个":["204.3"],"阻止不明外域的访问":["204.4"],"同源检测":["204.4"],"samesite":["204.4"],"提交时要求附加本域才能获取的信息":["204.4"],"双重cookie验证":["204.4"],"需要自己手动编写":["204.5"],"我想不到了":["204.5"],"我不管":["204.5"],"它就是很好":["204.5"],"官方发布日志称react17最大的特点就是无新特性":["205.0"],"这个版本主要目标是让react能渐进式升级":["205.0"],"去除了":["205.1"],"异步方式使用e不再需要":["205.1"],"这样就不会冒泡到document":["205.2"],"也不会被置为false了":["205.2"],"但由于v16版本的事件委托是绑在":["205.2"],"上的":["205.2"],"它的事件源跟":["205.2"],"就是同级了":["205.2"],"而不是上下级":["205.2"],"尽管":["205.3"],"底层已将":["205.3"],"事件从":["205.3"],"也可升级至":["205.4"],"v16":["205.4"],"的版本":["205.4"],"官方在该版本也支持这个特性":["205.4"],"修改配置":["205.4"],"编译增加":["205.4"],"automatic":["205.4"],"如果你使用的是":["205.4"],"presets":["205.4"],"保存起来":["205.5"],"放到副作用清理回调函数的闭包中":["205.5"],"来保证不可变性":["205.5"],"大小间进行选择":["205.7"],"在v17使用了不同的机制生成组件调用栈":["205.7"],"直接从":["205.7"],"因为其行为与语义不符":["205.8"],"如果你想要一种简便的方式来触发测试中原生浏览器的事件":["205.8"],"可以处理更细粒度的更新":["205.9"],"这个我目前也不是太清楚具体算法":["205.9"],"并发特性":["205.10"],"作为是否开启":["205.10"],"的依据":["205.10"],"如果在某些场景不想使用批处理":["205.12"],"组件分解成更小的块":["205.13"],"允许服务端一点一点返回页面":["205.13"],"尽早发送":["205.13"],"html和选择性的":["205.13"],"从而可以使ssr更快的加载页面":["205.13"],"更新用户输入值":["205.14"],"用户打字交互的优先级应该要更高":["205.14"],"setsearchquery":["205.14"],"更新搜索列表":["205.14"],"可能有点延迟":["205.14"],"影响":["205.14"],"spinner":["205.15"],"searchinput":["205.16"],"suspense":["205.16","218.8","219.6"],"fallback":["205.16","236.1"],"results":["205.16","219.3"],"只是此时不能使用ref和调度更新":["205.20"],"一般用于提前注入样式":["205.20"],"表示正在计算更新和正在提交更新":["206.0"],"如果是浏览器事件正在执行中":["206.0"],"返回上一次的":["206.0"],"如果终止或者":["206.0"],"中断react":["206.0"],"任务执行的时候":["206.0"],"则重新获取执行时间":["206.0"],"获取的时间":["206.0"],"越小":["206.0"],"replacing":["206.1"],"获取执行任务的优先级":["206.1"],"便于调度":["206.1"],"schedulerpriority":["206.1"],"was":["206.1"],"using":["206.1","219.3"],"level":["206.1"],"couples":["206.1"],"internals":["206.1"],"currentupdatelanepriority":["206.1"],"above":["206.1","214.1"],"problematic":["206.1"],"runwithpriority":["206.1"],"will":["206.2","214.3","215.2","235.4","236.6"],"effect":["206.2","222.4","256.8"],"interrupting":["206.2"],"work":["206.2","206.15","245.3"],"progress":["206.2"],"transitionpriority":["206.2"],"handled":["206.2"],"findtransitionlane":["206.2"],"inputcontinuouslanepriority":["206.3"],"defaulthydrationlanepriority":["206.3"],"defaultlanepriority":["206.3"],"replacestate":["206.4","206.5"],"currentlyprocessingqueue":["206.5"],"didwarnupdateinsideupdate":["206.5"],"an":["206.5","221.3","249.0"],"setstate":["206.5"],"这个流程就走完了":["206.6"],"也下面就是开始他的":["206.6"],"intentionally":["206.8"],"instead":["206.8","216.3"],"schedulecallbackforfiber":["206.8"],"ability":["206.8"],"schedule":["206.8"],"immediately":["206.8"],"flushing":["206.8"],"do":["206.8","222.7"],"initiated":["206.8"],"historical":["206.8"],"behavior":["206.8"],"resetrendertimer":["206.8"],"flushsynccallbackqueue":["206.8"],"discrete":["206.8"],"sync":["206.8","206.9"],"如果此次是异步任务":["206.8"],"discreteeventcontext":["206.8"],"newcallbacknode":["206.9"],"synclanepriority":["206.9"],"callbacks":["206.9"],"scheduled":["206.9"],"queue":["206.9","256.5"],"同步任务调用performsyncworkonroot":["206.9"],"schedulesynccallback":["206.9"],"syncbatchedlanepriority":["206.9"],"schedulecallback":["206.9"],"workinprogress":["206.10"],"performunitofwork":["206.10"],"根据流程图以及上面说的这一些":["206.11"],"可以看得出来从":["206.11"],"beginwork":["206.11"],"completeunitofwork":["206.11"],"这个过程究竟干了什么":["206.11"],"这三章将会讲解":["206.11"],"树的":["206.11"],"resetcurrentdebugfiberindev":["206.12"],"memoizedprops":["206.12"],"pendingprops":["206.12"],"执行不同组件类型的处理函数":["206.13"],"phase":["206.14"],"boundary":["206.14"],"capture":["206.14","207.2"],"unwindwork":["206.14"],"reset":["206.14"],"expiration":["206.14"],"come":["206.14"],"back":["206.14"],"again":["206.14","245.3"],"restarting":["206.14"],"remove":["206.14","241.1","241.10"],"anything":["206.14","222.7"],"hosteffectmask":["206.14"],"needed":["206.15"],"we":["206.15","214.0","236.6","243.1"],"already":["206.15","249.0"],"performing":["206.15"],"wait":["206.15","219.6"],"until":["206.15"],"ishostcallbackscheduled":["206.15"],"isperformingwork":["206.15"],"requesthostcallback":["206.15"],"flushwork":["206.15"],"表示任务超时":["206.15"],"插入超时队列":["206.15"],"任务没有超时":["206.15"],"插入调度队列":["206.15"],"调度任务":["206.15"],"创建消息通道":["206.15"],"messagechannel":["206.15"],"scheduler":["206.16"],"throws":["206.16"],"browser":["206.16","231.1","286.61"],"so":["206.16"],"才能去执行的":["206.17"],"可中断":["206.17"],"的策略":["206.17"],"还有关于":["206.17"],"为了实现这个目标就需要创建一个兼容全浏览器的事件系统":["207.1"],"以此抹平不同浏览器的差异":["207.1"],"后缀":["207.2"],"应用中完全失去了作用":["207.3"],"react事件":["207.3"],"在react应用中":["207.3"],"第三个就是一次用户交互":["207.4"],"多个事件":["207.5"],"事件合成的概念":["207.5"],"应用中":["207.5"],"元素绑定的事件并不是原生事件":["207.5"],"而是react":["207.5"],"simpleeventplugin":["207.6"],"和与之对应的处理插件的映射":["207.7"],"比如上述的":["207.7"],"就会用":["207.7"],"事件和原生事件对应关系":["207.8"],"这就解释了为什么上述只写了一个":["207.8"],"会有很多原生事件绑定在":["207.8"],"的事件和事件源是自己合成的":["207.9"],"这个方法并非是原生事件的":["207.10"],"容器上":["207.11"],"回调函数是直接调用调用的":["207.12"],"并没有指定调用的组件":["207.12"],"必须明确调用":["207.13"],"由上面执行机制我们可以得出":["207.13"],"然后执行react合成事件":["207.14"],"由上面的执行机制不难得出":["207.15"],"istrusted":["207.16"],"domevent":["207.16"],"nativeevent":["207.16"],"isdefaultprevented":["207.16"],"判断是进行冒泡还是捕获":["207.17"],"判断是否存在addeventlistener方法":["207.17"],"listenerbank的结构是":["207.18"],"listenerbank":["207.18"],"遍历eventqueue":["207.19"],"通过ispropagationstopped判断当前事件是否执行了阻止冒泡方法":["207.19"],"根据元素nodeid":["207.20"],"唯一标识key":["207.20"],"解决逻辑复用难的问题":["208.1"],"之间的关系":["208.2"],"hooksdispatcheronupdate":["208.2"],"将不执行":["208.3"],"那么更新逻辑会变成这样":["208.3"],"hook复用顺序":["208.3"],"缓存的老hooks":["208.3"],"新的hooks":["208.3"],"上面的":["208.4"],"会被当前":["208.4"],"保存下来":["208.4"],"每一个":["208.4"],"都会创建一个":["208.4"],"那么组件不更新":["208.5"],"scheduleupdateonfiber":["208.5"],"发起调度更新":["208.5"],"首先用户每一次调用":["208.5"],"比如如上触发":["208.5"],"setnumber":["208.5"],"都会先创建一个":["208.5"],"然后把它放入待更新":["208.5"],"创建一个":["208.7"],"并保存到当前":["208.7"],"属性下":["208.7"],"除了创建一个":["208.7"],"还有一个重要作用":["208.7"],"就是如果存在多个":["208.7"],"和componentdidupdate是同步的":["208.9"],"但是会在浏览器进行任何绘制之前运行完成":["208.10"],"用于获取原生":["208.12"],"memoizedstate":["208.13"],"如上":["208.14"],"发生改变":["208.17"],"重新执行":["208.17"],"保存了最新状态值":["209.1"],"第二种就是组件从自身来控制是否":["209.2"],"改变numbera":["209.3"],"如果有改变重新执行":["209.4"],"得到新的缓存值":["209.4"],"返回值":["209.4"],"中如果有一项改变":["209.5"],"就会重新执行":["209.5"],"可以把函数和属性缓存起来":["209.6"],"作为":["209.6"],"单纯的改变":["209.7"],"下属性是不会促使组件更新的":["209.7"],"因为浅比较两次":["209.7"],"oldstate":["209.8"],"就是判断当前组件是不是纯组件的":["209.8"],"如果不相等":["209.9"],"证明有属性增加或者减少":["209.9"],"那么更新组件":["209.9"],"遍历老":["209.9"],"newcontext":["209.10"],"第一个参数":["209.11"],"原始组件本身":["209.11"],"第二个参数":["209.11"],"当二个参数":["209.12"],"compare":["209.12"],"不存在时":["209.12"],"会用浅比较原则处理":["209.12"],"一般会采用受控组件的模式去管理表单数据层":["209.13"],"表单数据层完全托管于":["209.13"],"props":["209.13","214.3","221.7","228.2","232.3","252.7"],"或是":["209.13"],"而用户操作表单往往是频繁的":["209.13"],"需要频繁改变数据层":["209.13"],"所以很有可能让整个页面组件高频率":["209.13"],"组件颗粒化":["209.14"],"配合":["209.14"],"那么对于缓存":["209.15"],"getcursor":["210.0","239.5"],"trackvforslotscopes":["210.1"],"transformexpression":["210.1"],"directives":["210.2","215.2","226.1","240.1"],"为节点执行相应的转换函数":["211.0"],"构造对应的辅助生成代码节点":["211.0"],"配置了":["211.0"],"multiple":["212.1","286.51"],"nodes":["212.1","218.4","232.2","236.7"],"patchflag":["212.1"],"patchflags":["212.1","236.7"],"stable":["212.1","236.7","252.3"],"patchflagtext":["212.1"],"patchflagnames":["212.1"],"check":["212.1","236.1","256.4"],"actually":["212.1"],"contains":["212.1","241.1","241.10"],"valid":["212.1"],"当前":["213.0"],"节点在子节点的索引":["213.0"],"tostring":["214.0","286.5","286.33"],"downwards":["214.0"],"slots":["214.1","222.4"],"createcompilererror":["214.1","214.2"],"errorcodes":["214.1","214.2"],"invalid":["214.1","214.2","221.1"],"loc":["214.1","214.2"],"shouldbuildasslots":["214.1"],"real":["214.1"],"dedicated":["214.1"],"handling":["214.1"],"explained":["214.1"],"hasdynamicslots":["214.1"],"buildslots":["214.1"],"skipped":["214.2"],"patching":["214.2","218.4","222.6","232.2"],"but":["214.2","249.0"],"hoisted":["214.2"],"scope":["214.2","239.3"],"consttype":["214.2"],"constanttypes":["214.2"],"hoist":["214.2"],"differently":["214.2"],"presence":["214.2","218.4","232.2"],"sure":["214.2","221.3"],"spaces":["214.2"],"consistent":["214.2"],"ranges":["214.2"],"wrap":["214.2"],"place":["214.2"],"expressionplugins":["214.2"],"program":["214.2"],"qualifiedid":["214.2"],"prefixmeta":["214.2"],"ids":["214.2"],"walkidentifiers":["214.2"],"find":["214.3"],"directive":["214.3","226.1","236.0"],"directivetransforms":["214.3","239.3"],"compat":["214.3","226.1","236.5","241.9"],"tags":["214.3"],"special":["214.3"],"rendered":["214.3","252.5"],"must":["214.3"],"converted":["214.3"],"vnodes":["214.3"],"convert":["214.3"],"createtextvnode":["214.3"],"calls":["214.3"],"normalization":["214.3"],"主要操作就是从":["215.1"],"根节点开始":["215.1"],"通过深度优化的方式递归遍历节点并做判断":["215.1"],"blocks":["215.2"],"nested":["215.2","241.3"],"updates":["215.2","218.4","232.2"],"removehelper":["215.2"],"getvnodeblockhelper":["215.2"],"inssr":["215.2"],"iscomponent":["215.2"],"组件即使销毁":["215.3"],"静态提升的节点所占用的内存不会释放":["215.3"],"目标元素的内部":["216.1"],"组件允许动态修改":["216.1"],"来修改它的渲染目标元素":["216.1"],"invoke":["216.2"],"deactivated":["216.2"],"rawvnode":["216.2"],"contain":["216.2"],"exactly":["216.2"],"isvnode":["216.2"],"shapeflags":["216.2"],"stateful":["216.2"],"comp":["216.2"],"based":["216.2"],"loaded":["216.2","217.7"],"inner":["216.2"],"available":["216.2"],"isasyncwrapper":["216.2"],"asyncresolved":["216.2","219.3"],"caching":["216.3"],"directly":["216.3"],"subtree":["216.3"],"normalized":["216.3"],"beforemount":["216.3"],"beforeupdate":["216.3"],"over":["216.3"],"freshest":["216.4"],"prunecache":["216.5"],"matches":["216.5"],"feature":["216.6","217.7","218.8","219.6","219.10","236.4","252.6"],"devtools":["216.6","235.4","236.4","252.6"],"tree":["216.6"],"devtoolscomponentadded":["216.6"],"可以动态的修改":["216.7"],"include":["216.7"],"resolove":["217.0"],"回调函数":["217.0"],"如果加载失败":["217.0"],"函数只有单个参数":["217.0"],"函数的返回值就是一个带":["217.1"],"属性的对象":["217.1"],"defalut":["217.2"],"导出的":["217.2"],"可以通过":["217.2"],"createinnercomp":["217.3"],"函数创建一个":["217.3"],"超出时间":["217.4"],"显示":["217.4"],"isinssrcomponentsetup":["217.7","220.3"],"createvnode":["217.7"],"delayed":["217.7"],"errorcomponent":["217.8"],"条件下渲染":["217.8"],"error组件":["217.8"],"可以描述不同类型的节点":["218.2"],"tracking":["218.4","232.2"],"itself":["218.4","232.2"],"currentblock":["218.4"],"indicates":["218.4","232.2"],"also":["218.4","219.10","232.2","232.4","236.4"],"patched":["218.4","232.2"],"because":["218.4","219.3","232.2","236.6"],"even":["218.4","232.2"],"isstring":["218.5","239.3"],"normalizeclass":["218.5","228.2"],"isobject":["218.5"],"they":["218.5"],"likely":["218.5"],"mutated":["218.5"],"isproxy":["218.5"],"isarray":["218.5"],"normalizestyle":["218.5","228.2"],"encode":["218.5"],"information":["218.5"],"relies":["218.8"],"logic":["218.8"],"resolved":["218.8","236.1"],"proceeding":["218.8"],"asyncdep":["218.8","219.3"],"registerdep":["218.8"],"setuprendereffect":["218.8"],"give":["218.8"],"重写的":["218.10"],"挂载在页面":["218.11"],"过程中":["218.11"],"如果遇到组件的":["218.11"],"主要就是":["219.1"],"创建组件实例":["219.1"],"refs":["219.3"],"setupstate":["219.3"],"setupcontext":["219.3"],"related":["219.3"],"suspenseid":["219.3"],"pendingid":["219.3"],"lifecycle":["219.3"],"enums":["219.3"],"properties":["219.3"],"ismounted":["219.3"],"isstatefulcomponent":["219.4","252.4"],"initprops":["219.4","252.4"],"initslots":["219.4"],"can":["219.6","249.0"],"resolvedresult":["219.6"],"unknown":["219.6"],"handlesetupresult":["219.6"],"handleerror":["219.6"],"returned":["219.6"],"bail":["219.6","236.6"],"自动转换适当的绑定":["219.8"],"函数并获取结果":["219.9"],"which":["219.10","236.1"],"more":["219.10"],"performant":["219.10"],"allows":["219.10"],"whitelist":["219.10"],"installwithproxy":["219.10"],"setcurrentinstance":["219.10"],"pausetracking":["219.10"],"resettracking":["219.10","220.2"],"unsetcurrentinstance":["219.10","220.2"],"missing":["219.10"],"options":["219.15","236.1"],"created":["220.0"],"destroyed":["220.1"],"onactivated":["220.1"],"activated":["220.1"],"ondeactivated":["220.1"],"unshift":["220.2"],"apiname":["220.2"],"tohandlerkey":["220.2"],"errortypestrings":["220.2"],"during":["220.3"],"ssr":["220.3","231.1"],"serverprefetch":["220.3"],"挂载组件之后":["220.4"],"u":["220.5"],"则通过":["220.6"],"invokearrayfns":["220.6"],"在组件销毁之后":["220.6"],"未处理的错误":["220.7"],"开发环境":["220.7"],"会导致程序崩溃":["220.7"],"为了给开发者足够强的提醒":["220.7"],"本质是捕获来自":["220.7"],"子孙组件的错误":["220.7"],"销毁等阶段":["220.8"],"validatepropname":["221.1"],"opt":["221.1"],"的值":["221.2"],"验证":["221.2","221.11"],"emitted":["221.3"],"separate":["221.3"],"spreading":["221.3"],"casing":["221.3"],"ison":["221.3"],"endswith":["221.3"],"native":["221.3"],"expectedtype":["221.4"],"asserttype":["221.4"],"进行对比":["221.7"],"这是触发子组件重新渲染的原因":["221.7"],"把父组件渲染时获得的":["221.8"],"新值":["221.8"],"更新到子组件实例的":["221.8"],"instnace":["221.8"],"只劫持最外一层对象的属性":["221.9"],"当修改":["221.10"],"得数据的时候":["221.10"],"包括props":["221.11"],"的求值":["221.11"],"processcomponent":["222.3"],"teleport":["222.3"],"teleportimpl":["222.3"],"teleportvnode":["222.3"],"reactive":["222.4","228.2","256.8"],"isn":["222.4"],"yet":["222.4"],"pushwarningcontext":["222.4"],"updatecomponentprerender":["222.4"],"popwarningcontext":["222.4"],"mountelement":["222.5"],"continue":["222.6"],"prev":["222.6","241.1","241.10"],"defer":["222.6"],"two":["222.7","241.1","241.10"],"assume":["222.7"],"full":["222.7"],"just":["222.7"],"old":["222.7"],"不同或者":["222.9"],"e1":["222.10"],"流程":["222.12"],"在需要移动的时候还要求解子节点的最长递增子序列":["222.12"],"读取逻辑":["223.0"],"一个函数":["223.0"],"提醒该计算属性的值是只读的":["223.1"],"compupted":["223.1"],"函数返回了":["223.1"],"computerefimpl":["223.1"],"trackopbit":["223.2","246.3","255.0"],"effecttrackdepth":["223.2","246.3","255.0"],"maxmarkerbits":["223.2","255.0"],"initdepmarkers":["223.2","255.0"],"cleanupeffect":["223.2","255.0"],"如果为":["224.0"],"则直接返回上一次的计算结果":["224.0"],"所以更新的时候会把":["225.0"],"dirtry":["225.0"],"接着执行计算属性内部的":["225.0"],"readonly":["225.4","248.0","248.1","249.1"],"noop":["225.4","256.4"],"genassets":["226.1"],"temps":["226.1"],"filters":["226.1"],"locstub":["227.1"],"withoutnewline":["227.1"],"genmodulepreamble":["228.0"],"nconst":["228.1"],"createslots":["228.2"],"todisplaystring":["228.2"],"mergeprops":["228.2"],"normalizeprops":["228.2"],"guard":["228.2"],"needscopeidwrapper":["228.3"],"issetupinlined":["229.0"],"gencacheexpression":["231.1"],"gennodelist":["231.1","231.2"],"literal":["231.1","286.55"],"gentemplateliteral":["231.1"],"getvnodehelper":["231.2"],"isnested":["231.7"],"节点是在执行":["232.1"],"createbasevnode":["232.1"],"函数创建":["232.1"],"对象的时候搜集的":["232.1"],"函数完成的":["232.3"],"record":["232.3"],"going":["232.4"],"replacement":["232.4"],"requires":["232.4"],"correct":["232.4"],"issamevnodetype":["232.4"],"的情况":["233.0"],"完成整个":["233.0"],"树的构建":["233.0"],"在整个编译阶段":["233.0"],"会给动态节点打上相应的":["233.0"],"事件侦听器之前调用":["234.2"],"组件对象的定义中":["235.3"],"appcontext":["235.4"],"clonevnode":["235.4"],"telemetry":["235.4"],"registration":["236.1"],"resolveinstance":["236.1"],"componentoptions":["236.1"],"implicit":["236.1"],"directivebinding":["236.2"],"dirs":["236.2"],"affect":["236.4"],"non":["236.4","236.7"],"renderers":["236.4"],"onvnodebeforemount":["236.4"],"invokevnodehook":["236.4"],"scopeid":["236.4"],"setscopeid":["236.4"],"directivehook":["236.5"],"mapcompatdirectivehook":["236.5"],"than":["236.6"],"attrs":["236.6"],"saved":["236.6"],"faster":["236.6"],"iteration":["236.6"],"note":["236.6"],"like":["236.6"],"cause":["236.6"],"go":["236.6","283.11"],"need":["236.6","236.7"],"unset":["236.6"],"taken":["236.7"],"fragments":["236.7"],"更新":["237.0"],"销毁":["237.0"],"应用了指令的元素":["237.0"],"更新解析上下文":["238.0"],"根据生成的":["238.0"],"节点数组创建":["238.0"],"sfcscriptcompileoptions":["239.2"],"parseoptions":["239.2"],"sfcparseoptions":["239.2"],"descriptor":["239.2"],"baseparse":["239.3"],"nodetransforms":["239.3"],"getbasetransformpreset":["239.3"],"字段指向子节点对象数组":["239.4"],"中的节点可以完整的描述在模版中所映射的节点信息":["239.4"],"hoists":["240.1"],"cached":["240.1"],"inpre":["241.1","241.10"],"condense":["241.1","241.10"],"adjacent":["241.1","241.10"],"between":["241.1","241.10"],"newline":["241.1","241.10"],"元素节点的解析":["241.2"],"reporting":["241.3"],"comments":["241.3"],"previndex":["241.3"],"nestedindex":["241.3"],"assert":["241.4"],"startswithendtagopen":["241.8"],"emiterror":["241.8"],"trailing":["241.9"],"solidus":["241.9"],"deprecation":["241.9"],"checks":["241.9"],"iscompatenabled":["241.9"],"compilerdeprecationtypes":["241.9"],"compiler":["241.9","254.21"],"precedence":["241.9"],"hasif":["241.9"],"hasfor":["241.9"],"column":["242.1"],"inject":["243.1"],"simply":["243.1"],"look":["243.1"],"injections":["243.1"],"direct":["243.1"],"chain":["243.1"],"于模块化相比有几个不同":["243.4"],"导致程序异常":["243.14"],"对象查找":["243.15"],"找到就直接返回数据":["243.15"],"找不到就开始查找原型":["243.15"],"数据改变后就会触发副作用函数的自动执行":["244.0"],"把数据变成响应式":["244.0"],"是为了数据在变化的时候自动执行一些逻辑":["244.0"],"函数的返回值":["245.0"],"isreadonly":["245.0"],"reflect":["245.1"],"函数求值":["245.1"],"对数组的每一个":["245.2"],"didn":["245.3"],"altering":["245.3"],"为了减少集合的添加和删除操作":["246.1"],"标识了每个依赖集合的状态":["246.1"],"最大标记的位数":["246.2"],"执行前":["246.3"],"先执行":["246.3"],"记录":["246.3"],"函数之后":["246.4"],"还会移除已被收集但在新一轮没有被收集的依赖":["246.4"],"是否已经收集了当前层的依赖":["246.5"],"使用了":["246.5"],"wastracked":["246.5"],"函数是执行":["247.0"],"上来确认通知类型":["247.1"],"新增还是修改":["247.1"],"执行相关的副作用函数":["247.2"],"因此每次一执行":["247.2"],"并且给它添加一些新的属性":["247.3"],"只做了两件事":["247.4"],"让全局的":["247.4"],"exception":["248.1"],"calling":["248.1"],"reactiveflags":["248.1"],"called":["249.0"],"和已经是响应式对象的处理":["250.0"],"直接返回":["250.0"],"isshallow":["250.1"],"toraw":["250.1","250.2"],"toreactive":["250.1"],"trackeffects":["250.2"],"pure":["251.1"],"track":["251.2"],"trackoptypes":["251.2"],"isref":["251.2"],"unwrapping":["251.2"],"unwrap":["251.2"],"integer":["251.2"],"isintegerkey":["251.2"],"等到子组件渲染的时候":["252.1"],"ctx":["252.3","286.69"],"currentrenderinginstance":["252.3"],"slotflags":["252.3"],"forwarded":["252.3"],"receives":["252.3"],"determined":["252.3"],"isstateful":["252.4"],"enable":["252.5"],"contextualrenderfn":["252.5"],"openblock":["252.5"],"ensurevalidvnode":["252.5"],"renderslot":["252.6"],"setblocktracking":["252.6"],"devtoolscomponentupdated":["252.6"],"提到的":["252.7"],"普通插槽渲染时的数据作用域和父组件相同":["252.8"],"作用于自定义组件的时候":["253.0"],"实际上是传递了一个名为":["253.0"],"modelvalue":["253.0"],"的自定义属性":["253.0"],"以及监听了":["253.0"],"便于":["254.2"],"开发人员":["254.2"],"阅读和维护":["254.2"],"提高了可维护性":["254.2"],"通过编译阶段的静态分析":["254.3"],"找到没有":["254.3"],"但是是在":["254.4"],"处理器的":["254.4"],"getter":["254.4"],"每个区块内部的节点结构是固定的":["254.5"],"每个区块用一个":["254.5"],"来追踪自身包含的":["254.5"],"代码过于分散":["254.6"],"稳定性":["254.7"],"会自动生成一个内联函数":["254.9"],"同时生成一个静态节点":["254.9"],"当事件再次触发时":["254.9"],"这些静态":["254.10"],"并行编译":["254.11"],"最终通过":["254.11"],"rollup":["254.11"],"工具完成单个包的编译":["254.11"],"在运行":["254.11"],"提供的编译器":["254.14"],"shaking":["254.23"],"finalizedepmarkers":["255.0"],"只要保证心来的任务不在":["256.1"],"队列中即可":["256.1"],"然后当":["256.1"],"这样异步设计可以保证在一个":["256.2"],"内":["256.2"],"即使多次执行":["256.2"],"queuejob或者":["256.2"],"queuecb":["256.2"],"添加任务":["256.2"],"也只是在宏任务执行完毕之后的微任务阶段执行一次":["256.2"],"evanw":["256.4"],"esbuild":["256.4"],"issues":["256.4"],"job":["256.4"],"schedulerjob":["256.4"],"checkrecursiveupdates":["256.4"],"flushindex":["256.4"],"means":["256.8"],"mutating":["256.8"],"侦听器创建的过程中":["257.2"],"调用前会在非生产环境判断第二个参数":["258.2"],"是一个数组":["258.3"],"生成的":["258.3"],"函数内部通过":["258.3"],"函数映射出有一个新的数组":["258.3"],"强制更新":["258.5"],"新旧值发生了变化":["258.5"],"执行回调函数":["258.5"],"传入参数":["258.5"],"回调函数通过":["258.6"],"queuepostrendereffect":["258.6"],"方式在组件更新之后执行":["258.6"],"内部创建的":["258.8"],"后续数据更新的时候":["258.8"],"就可以触发":["258.8"],"进而执行":["258.9"],"的相关依赖":["258.10"],"就可以停止了对数据的监听":["258.10"],"如果在组件注册的":["258.10"],"简单封装":["259.2"],"会先判断组件的实例是否已经注销":["259.2"],"然后每次执行":["259.2"],"函数前执行":["259.2"],"cleanup":["259.2","259.3"],"清理函数":["259.2"],"8k":["260.0"],"star":["260.0"],"的初始界面":["260.1"],"目前仅支持":["260.1"],"版":["260.1"],"都提示的非常到位":["260.2"],"这让我想起了":["260.2"],"的效率工具":["260.2"],"alfred":["260.2"],"可以搜索任何你想要的命令":["260.2"],"ai":["260.2"],"植入":["260.2"],"还提供了":["260.2"],"智能搜索":["260.2"],"快捷键可以在":["260.2"],"theme":["260.3","276.0"],"页":["260.3"],"warpdotdev":["260.3"],"所以才体验到了":["260.4"],"的强大之处":["260.4"],"和它相同功能的":["262.0"],"jsdelivr":["262.0"],"在国内的速度也不佳":["262.0"],"于是就整理了下":["262.0"],"国内的":["262.0"],"替代品":["262.0"],"国内":["262.0"],"但是呢":["263.0"],"因为不可抗力原因":["263.0"],"如果你没有国外手机号":["263.1"],"推荐sms":["263.1"],"因为充值默认为美元":["263.2"],"可以选择充值":["263.2"],"注册成功进入下面填写手机号的页面":["263.3"],"下面记得切换下国家区号":["263.3"],"目前完全支持的是印度":["263.6"],"巴西":["263.6"],"你也可以选择其他国家的":["263.6"],"他还有很多种选择":["265.0"],"微信小程序":["265.0"],"uni":["265.0"],"等等等等":["265.0"],"简直就是多端项目的福音":["265.0"],"不止是框架":["265.0"],"连":["265.0"],"预处理器都可以选择适合自己的":["265.0"],"将生成的代码复制到编辑器中运行":["265.0"],"可以看到对于简单的页面完全":["265.0"],"不用动脑子":["265.0"],"直接就渲染出来我们想要的效果了":["265.0"],"如果是很复杂的页面进行一些微调即可":["265.0"],"是不是很方便嘿嘿":["265.0"],"不管是根据你选择的模块进行生成代码还是整页生成代码用户进行复制使用之外":["265.0"],"它还提供了代码包下载功能":["265.0"],"在下载界面可以选择":["265.0"],"的功能":["265.1"],"如果我选择了":["265.1"],"然后再开启":["265.2"],"我们可以看到这里一开始是写死的":["265.3"],"而我们平时写的时候会将它用变量替代":["265.3"],"我们只需要点击右上角的":["265.3"],"选择右上角的预览功能可以":["265.4"],"直接生成小程序二维码扫码即可进行预览":["265.4"],"智能生成代码能做成":["265.5"],"这种水平已经很厉害了":["265.5"],"在使用建议上来说":["265.5"],"我建议大家可以把":["265.5"],"当成一个助手":["265.5"],"而不要完全依赖":["265.5"],"过度依赖":["265.5"],"compress":["267.1"],"lucky":["270.0"],"canvas":["270.0","279.8","279.10"],"cheat":["271.1"],"同样使用chsh命令即可":["275.1"],"loads":["275.2"],"修改镜像":["275.2"],"末尾添加":["275.2"],"nodejs":["275.2"],"taobao":["275.2"],"即可使用":["275.2"],"四":["275.2"],"源管理工具":["275.2"],"cgr":["275.2"],"cgr使用":["275.2"],"五":["275.2"],"遇到":["275.2"],"fatal":["275.2"],"网上给出的是执行":["275.2"],"doctor":["275.2"],"再根据提示操作":["275.2"],"下面操作是将镜像改为":["275.2"],"更改后你会下载更慢":["275.2"],"解决方案":["275.2"],"先将brew镜像改为国内":["275.2"],"然后brew":["275.2"],"xx":["275.2"],"下载之后会提示上面的错误":["275.2"],"不着急":["275.2"],"咱们再还原到github":["275.2"],"将brew镜像改为国内":["275.2"],"repo":["275.2"],"remote":["275.2"],"ustc":["275.2"],"edu":["275.2"],"切换到深色主题":["276.0"],"可以看到共支持6种主题":["276.0"],"这里我们切换到深色主题":["276.0"],"如果你想打开左侧的侧边栏的话":["276.0"],"打开":["276.0"],"侧边栏可以显示文章的大纲":["276.0"],"粒子随心动画":["279.5"],"equiv":["279.7"],"createelement":["279.8"],"getcontext":["279.8"],"2d":["279.8"],"webkitrequestanimationframe":["279.8"],"mozrequestanimationframe":["279.8"],"orequestanimationframe":["279.8"],"msrequestanimationframe":["279.8"],"1e3":["279.8"],"2e4":["279.8"],"webify":["280.1"],"seconds":["281.1"],"minimac":["281.2"],"waves":["281.2"],"点击波纹效果":["281.2"],"fians":["281.2"],"move":["281.2"],"一个小型的javascript库":["281.2"],"dowebok":["281.3"],"scrollbox":["281.3"],"图片文字滚动插件":["281.3"],"阅读量":["282.2"],"loop":["283.1","283.2"],"disable":["283.2"],"nextsuccessor":["283.3"],"prefer":["283.4"],"初次timeout不存在":["283.4"],"使用方式":["283.5"],"回调参数":["283.7"],"example3":["283.10"],"str":["283.10","286.15"],"当前集合中的状态依次执行":["283.11"],"remaining":["283.12"],"延迟时间间隔remaining小于等于0":["283.12"],"表示上次执行至此所间隔时间已经超过一个时间窗口":["283.12"],"remaining大于时间窗口wait":["283.12"],"表示客户端系统时间被调整过":["283.12"],"fa":["284.9","291.5"],"asf":["284.22"],"3gp":["284.22"],"psd":["284.23"],"四川":["284.40"],"贵州":["284.40"],"云南":["284.40"],"广西":["284.40"],"za":["284.42"],"jj":["284.47"],"mm":["284.47"],"ud86d":["284.49"],"udf34":["284.49","284.66"],"udf40":["284.49","284.66"],"ud86e":["284.49","284.66"],"u300f":["284.53"],"u300c":["284.53"],"u300d":["284.53"],"ufe43":["284.53"],"z0":["284.60","284.64"],"x60":["284.76"],"x7b":["284.76"],"cur":["285.3"],"timing":["286.3"],"getelentsbytagname":["286.9"],"日期时间":["286.13"],"克隆object":["286.14"],"substr":["286.18"],"anyelement":["286.24"],"useragent":["286.25"],"mobile":["286.25"],"birthdays":["286.28"],"arraytotree":["286.30"],"初始化容器":["286.33"],"数字拆分位数":["286.33"],"numarr":["286.33"],"数字是要滚动的":["286.33"],"非数字如":["286.33"],"torenderlist":["286.37"],"如果渲染完成":["286.37"],"那么退出":["286.37"],"rendernewlist":["286.37"],"通过缓存element把所有渲染完成的list缓存下来":["286.37"],"下一次更新":["286.37"],"直接跳过渲染":["286.37"],"造成下滑效果":["286.38"],"如果render内容发生改变":["286.38"],"那么截取":["286.38"],"onreadystatechange":["286.39"],"方法用于切割文件":["286.42"],"字节开始":["286.42"],"切割到":["286.42"],"这个":["286.43"],"字符串的名字要与后端约定好":["286.43"],"append":["286.43"],"上传切片":["286.46"],"uploadchunks":["286.46"],"action":["286.47"],"设计稿的尺寸":["286.48"],"有一个选项的按钮":["286.51"],"myfiles":["286.51"],"能够选取多个文件":["286.52"],"type这个通过":["286.52"],"getfile":["286.53"],"返回一个":["286.53"],"所以我们需要":["286.53"],"teal":["286.55"],"doctag":["286.55"],"d14":["286.55"],"scrollto":["286.56"],"smooth":["286.57"],"mini":["286.58"],"若在":["286.64"],"baidu":["286.64"],"queryselectorall":["286.65"],"queryselector":["286.66"],"scrollheight":["286.68"],"将指定的上下文对象":["286.69"],"添加到待执行代码作用域的顶部":["286.69"],"makesandbox":["286.69"],"且在finally时将p置空":["286.70"],"那么下一次请求可以重新发起":["286.70"],"appendchild":["286.71"],"获取元素的宽度":["286.71"],"itemvalue":["286.72"],"getfullyear":["287.2"],"m":["287.2","287.6"],"padstartzero":["287.2"],"主要是针对二月份":["287.3"],"todatestring":["287.5"],"h":["287.6"],"celsiustofahrenheit":["287.8"],"celsius":["287.8"],"我是":["288.4"],"优先自定义的key生成函数":["288.5"],"此处还做了单请求限制":["294.1"],"foobar":["295.5","295.7"],"touppercase":["295.6","295.9"],"createevent":["296.2"],"mouseevents":["296.2"],"initevent":["296.2"],"hk":["296.3"],"search":["296.3"],"q":["296.3"]},{"0":["7.14","22.21","52.13","61.12","81.4","87.23","87.25","92.0","96.14","97.4","98.4","106.23","106.27","106.40","110.2","143.10","147.2","151.13","152.11","170.4","173.13","174.16","175.14","177.6","178.1","179.33","221.3","231.3","241.8","242.1","285.2","286.9","286.53","286.63","295.2"],"1":["10.12","23.51","48.23","53.12","56.4","90.0","95.42","97.59","98.4","100.2","103.4","110.2","118.5","118.6","122.5","122.19","125.9","127.3","131.1","131.2","131.3","131.4","131.5","131.6","138.32","154.4","154.5","154.17","159.2","159.5","159.9","159.13","173.13","175.14","179.32","179.56","184.16","206.4","228.3","231.3","231.4","243.2","263.2","284.3","284.27","284.47","286.12","287.2","291.1","295.10"],"2":["23.65","38.6","52.18","57.3","65.6","69.3","87.39","87.41","97.50","100.2","103.4","104.0","106.31","114.21","122.4","126.5","127.49","131.1","131.2","131.3","131.4","131.5","131.6","132.2","147.0","154.4","154.5","154.17","154.20","166.3","173.1","173.12","173.19","173.25","173.26","173.48","173.73","173.95","174.51","175.0","179.28","179.32","193.9","204.3","205.4","206.4","218.2","279.9","284.4","284.21","284.27","284.83","286.67","291.4","291.6","295.10"],"3":["22.14","27.15","62.1","65.33","67.2","81.2","81.5","87.39","103.4","104.0","120.0","122.2","122.17","122.20","123.0","123.1","131.2","131.3","131.4","131.5","131.6","144.6","152.2","154.0","154.20","158.4","163.0","164.4","170.6","173.1","173.8","173.19","173.23","173.25","173.37","173.73","175.1","179.32","195.2","284.36","284.41","284.63","285.11","285.12","285.13","286.67"],"4":["23.65","40.1","64.2","86.7","96.2","97.50","99.3","106.3","106.33","121.5","122.15","127.49","135.0","140.3","144.1","150.2","152.20","167.4","168.13","173.10","173.39","173.76","174.11","176.4","176.13","176.18","179.40","180.0","200.4","284.17","284.48","284.60","285.11","285.12","286.46"],"5":["29.1","43.9","45.5","61.8","87.24","127.15","151.2","174.28","180.0","200.1","284.3","284.41","284.64","285.10","285.14","288.1"],"6":["43.10","45.5","67.8","89.10","96.14","106.25","113.0","140.5","152.18","154.3","154.15","179.33","180.0","200.5","221.3","284.4","286.63","291.3"],"7":["23.90","36.5","38.5","43.3","43.10","48.18","106.25","113.0","113.4","127.15","140.5","152.18","173.24","173.58","174.3","179.33","180.0","284.43"],"8":["152.18","154.8","174.7","179.33","279.7","284.35","284.39","284.65"],"9":["22.24","87.25","127.1","173.38","173.43","174.43","178.7","179.33","284.36","284.64","284.84","286.33"],"10":["99.11","152.6","154.12","168.11","173.13","173.38","173.43","175.13","177.13","179.33","284.5","284.37","284.54","291.3"],"11":["102.5","123.1","130.5","152.6","152.10","168.11","287.7"],"12":["99.11","168.11","284.20","287.1"],"15":["38.4","284.48"],"16":["2.3","38.4","87.25","89.9","284.60"],"17":["2.3","159.0","172.0"],"18":["21.17","172.0","173.36","184.20","205.9"],"19":["171.0"],"20":["156.2","171.0","173.58","175.22"],"21":["41.0","171.0","174.54"],"22":["171.0"],"24":["104.0"],"25":["104.0","181.0"],"26":["130.9","175.10","181.0","284.39"],"27":["173.58","181.0"],"29":["284.29"],"30":["102.1","104.0","141.4","153.10","170.5","284.38","284.44","284.45"],"31":["284.44","284.45"],"32":["89.9","284.19"],"35":["173.58"],"36":["173.49","286.18"],"37":["87.39"],"38":["23.51"],"40":["104.0","284.9"],"42":["127.33","130.5"],"44":["173.92"],"45":["284.47"],"48":["284.39"],"50":["7.8","97.47","106.34"],"55":["7.8"],"57":["159.0"],"58":["172.0"],"60":["104.0","284.16"],"65":["172.0","284.61"],"70":["153.10"],"71":["172.0"],"79":["172.0"],"90":["172.0"],"98":["172.0"],"100":["91.0","92.0","106.27","125.9","153.7","153.11","170.4"],"105":["99.11"],"106":["115.0"],"108":["172.0"],"112":["172.0"],"114":["172.0"],"130":["141.4"],"168":["177.13"],"170":["153.10"],"178":["106.16"],"192":["141.4","177.13"],"200":["1.8","106.37","126.5","156.3","175.6","178.7"],"205":["29.3"],"222":["154.2"],"252":["141.4"],"255":["286.27"],"300":["153.12"],"304":["1.11","179.44"],"307":["29.4"],"333":["10.4","188.0"],"400":["179.45","286.55"],"401":["179.45"],"403":["138.34","179.45"],"458":["286.55"],"500":["68.11","114.11","166.8"],"502":["68.11","114.11"],"503":["68.11","114.11"],"504":["68.11","114.11"],"505":["29.6"],"655":["284.61"],"700":["115.0"],"750":["195.4","200.11"],"1000":["115.0","132.3","132.4","133.5","156.24","165.1"],"1024":["127.34"],"1243":["176.13"],"1471":["236.6"],"1513":["216.2"],"1583":["236.4"],"1689":["236.4"],"1899":["89.8"],"2000":["156.3","165.1","168.19"],"2018":["127.1","173.13"],"2022":["287.1"],"2137":["245.3"],"2435":["291.5"],"2468":["284.39"],"3000":["113.6","156.24","159.2","165.1"],"3009":["175.4"],"4422":["230.2"],"4873":["85.6","85.7"],"6060":["138.39"],"6410":["241.1","241.10"],"8088":["67.3"],"10000":["104.0"],"12313":["182.2"],"12345":["175.8"],"13579":["284.39"],"30000":["115.0"],"123456":["126.4"],"154730":["152.18"],"161900":["152.24"],"3885174":["0.0"],"6624470":["0.1"],"d4465c9":["0.0"],"错别字修复":["0.0"],"10f7d09":["0.0"],"工具":["0.0","115.0"],"工具更新":["0.0"],"75c3a58":["0.0"],"custom":["0.0","221.4","236.1"],"构建工具升级":["0.0"],"b1b375e":["0.0"],"拆组件库":["0.0"],"升级npm版本":["0.0"],"97560a6":["0.0"],"错别字":["0.0"],"d1f1dd3":["0.0"],"修复错别字":["0.1"],"e2ff842":["0.1"],"修复githubpag":["0.1"],"34b5225":["0.1"],"格式":["0.1","171.0"],"修改默认最大样式":["0.1"],"31de843":["0.1"],"文档":["0.1","99.10"],"更新github":["0.1"],"token":["0.1","68.7","72.5"],"57000dc":["0.1"],"更新最新版本":["0.1"],"vitepress":["0.1"],"新增可以不修改版本":["0.1"],"a2a4ae3":["0.1"],"westore":["0.1"],"9e7e30f":["0.1"],"补充常用轮子":["0.1"],"639bfdc":["0.1"],"补充业务utils":["0.1"],"22fea4d":["0.1"],"补充http":["0.1"],"6cc50c6":["0.1"],"更新js手写函数":["0.1"],"daba517":["0.1"],"2c6e8ea":["0.1"],"8da6e01":["0.1"],"计算机网络知识":["0.1"],"741904e":["0.1"],"结构大调整":["0.1"],"ffe206a":["0.1"],"懒加载":["0.1"],"3212ed0":["0.1"],"浏览器存储":["0.1"],"d8263a8":["0.1"],"浏览器组成":["0.1"],"0168355":["0.1"],"评论":["0.1"],"51f8ad1":["0.1"],"评论优化":["0.1"],"9cba4be":["0.1"],"c2b9c4a":["0.1"],"删除多余迁移文件":["0.1"],"73399b8":["0.1"],"0c60e6e":["0.1"],"算法题string补充":["0.1"],"0698bf7":["0.1"],"完善仓库介绍":["0.1"],"44dc63a":["0.1"],"细化计算机网络知识":["0.1"],"1866fa3":["0.1"],"ec50d7d":["0.1"],"修复格式":["0.1"],"a710bc0":["0.1"],"e22bda7":["0.1"],"3d4e63d":["0.1"],"修复浏览器点击404":["0.1"],"67b8189":["0.1"],"修复评论不展示":["0.1"],"290cfcb":["0.1"],"修改标题":["0.1"],"deep":["0.1"],"910f2ab":["0.1"],"修改默认进入路径和增加tcp握手挥手":["0.1"],"d9bcb29":["0.1"],"修改valine":["0.1"],"fec0ce9":["0.1"],"修改workflows内存":["0.1"],"069be0c":["0.1"],"增加解决github":["0.1"],"内存报错的思考":["0.1"],"7327fec":["0.1"],"增加了性能优化篇":["0.1"],"36cc771":["0.1"],"增加全局评论组件":["0.1"],"默认所有页面下面都有该组件":["0.1"],"49d9e7f":["0.1"],"增加chrome":["0.1"],"fa4eab2":["0.1"],"缓存位置":["1.0"],"缓存策略":["1.0"],"push":["1.1","52.16","53.11","64.15","64.17","89.5","89.6","98.7","153.11","166.9","173.2","174.24","174.29","174.60","214.2","221.4","228.2","230.1","245.3","285.5","286.42","294.1"],"http2":["1.1","115.0"],"才有的缓存策略":["1.1"],"cache":["1.2","25.4","113.6","140.5"],"中还是从网络请求中获取的数据":["1.2"],"浏览器都会显示我们是从":["1.2"],"但是浏览器会把哪些文件丢进内存这个过程就很玄学了":["1.3"],"我查阅了很多资料都没有一个定论":["1.3"],"当然":["1.3","3.2","41.9","44.3","44.9","80.3","173.83"],"我通过一些实践和猜测也得出了一些结论":["1.3"],"对于大文件来说":["1.3"],"哪些资源可以不请求直接使用":["1.4"],"哪些资源已经过期需要重新请求":["1.4"],"并且即使在跨站点的情况下":["1.4"],"的资源":["1.5"],"一旦连接被关闭":["1.5"],"就被释放":["1.5"],"多个页面可以使用相同的":["1.5"],"为":["1.8","87.25","106.41","156.13"],"后过期":["1.9"],"需要再次请求":["1.9"],"并且":["1.9","11.6","109.7"],"我们可以将多个指令配合起来一起使用":["1.10"],"达到多个目的":["1.10"],"比如说我们希望资源能被缓存下来":["1.10"],"并且是客户端和代理服务器都能缓存":["1.10"],"状态码":["1.11"],"如果在不可感知的时间内修改完成文件":["1.12"],"那么服务端会认为资源还是命中了":["1.12"],"不会返回正确的资源":["1.12"],"因为以上这些弊端":["1.12"],"所以在":["1.12","127.52"],"http":["1.12","29.6","47.3","60.0","123.1","146.3","175.4","175.22"],"通常会取响应头中的":["1.13"],"date":["1.13","98.7","125.0","156.24","173.29","178.4","206.0"],"减去":["1.13"],"值保持一致":["1.16"],"这样子":["1.16"],"会在响应头里生成新的etag值":["1.17"],"这样客户端就能够发现if":["1.17"],"none":["1.17","69.3","89.6","175.12","179.39"],"touch":["1.18"],"file":["1.18","64.15","95.32","119.6","286.47","286.51"],"也会改变":["1.18"],"此时":["1.18","64.23","156.11","204.3"],"来验证资源是否有效":["1.20"],"这样的做法虽然不能节省请求数量":["1.20"],"这样只有当":["1.21"],"文件中引入的文件名发生了改变才会去下载最新的代码文件":["1.21"],"强缓存":["1.22"],"缓存时效":["1.22"],"1小时":["1.22"],"location":["2.2","10.4","10.11","89.5","97.50","138.31","138.39","166.8"],"字段重定向到新地址":["2.2"],"content":["2.2","10.6","101.5","102.1","170.8","175.3","214.3","215.2"],"type":["2.2","10.8","27.11","62.14","81.6","92.0","95.40","96.12","106.11","154.8","156.14","169.4","175.3","176.5","207.16","221.1","228.3","243.2","250.2","279.7","286.55"],"决定如何显示响应内容":["2.2"],"告诉浏览器主进程":["2.2"],"准备通知":["2.2"],"渲染进程":["2.2"],"准备渲染进程":["2.2"],"提交文档":["2.2","2.3"],"根据当前页面b是否是从页面a打开的并且和页面a是否是同一个站点":["2.3"],"根域名和协议一样就被认为是同一个站点":["2.3"],"如果满足上述条件":["2.3"],"就复用之前网页的进程":["2.3"],"新创建一个单独的渲染进程":["2.3"],"浏览器会发出":["2.3"],"的消息给渲染进程":["2.3"],"渲染进程收到消息后":["2.3"],"会和网络进程建立传输数据的":["2.3"],"管道":["2.3"],"文档数据传输完成后":["2.3"],"渲染进程会返回":["2.3"],"确认提交":["2.3"],"的消息给浏览器进程":["2.3"],"浏览器收到":["2.3"],"的消息后":["2.3"],"会更新浏览器的页面状态":["2.3"],"包括了安全状态":["2.3"],"脚本执行":["3.1"],"事件处理等":["3.1"],"浏览器每打开一个标签页都会开启一个进程":["3.1"],"后续":["3.1"],"谷歌浏览器可能会修改成":["3.1"],"多进程":["3.2"],"内存等资源消耗也会更大":["3.2"],"gui渲染线程与js引擎线程是互斥的":["3.4"],"当js引擎执行时gui线程会被挂起":["3.4"],"相当于被冻结了":["3.4"],"所以如果js执行的时间过长":["3.5"],"这样就会造成页面的渲染不连贯":["3.5"],"由于js的单线程关系":["3.6"],"所以这些待处理队列中的事件都得排队等待js引擎处理":["3.6"],"w3c在html标准中规定":["3.7"],"规定要求settimeout中低于4ms的时间间隔算为4ms":["3.7"],"将这个回调再放入js引擎线程的事件队列中":["3.8"],"再由javascript引擎执行":["3.8"],"cookie":["4.2","23.92","146.7","175.9","179.34"],"localstorage个性设置":["4.2"],"安全证书":["4.2"],"缓存等":["4.2"],"ui":["4.2","7.1","87.6","279.9"],"backend":["4.2"],"后端":["4.2"],"电子邮件客户端以及其它需要编辑":["4.4"],"显示网络内容的应用程序都需要内核":["4.4"],"webkit内核":["4.6"],"safari":["4.6","106.42","177.5"],"chrome等":["4.6"],"document":["5.2","81.1","99.10","120.3","126.7","147.1","172.0","279.1","279.6","288.2"],"queryselector":["5.2","169.4"],"box1":["5.2"],"除了可以监听元素可见性":["5.3"],"还可以监听元素的属性和子节点的改变":["5.3"],"observe":["5.5","99.15"],"box":["5.5"],"attributes":["5.5","10.6"],"true":["5.5","62.12","65.11","69.10","87.27","95.9","99.6","113.5","125.8","127.18","127.33","127.53","130.8","154.7","154.11","162.2","179.11","184.22","214.2","221.3","222.7","224.0","241.1","241.10","252.6","286.62","295.5","296.2"],"除了监听元素的可见性":["5.6"],"属性和子节点的变化":["5.6"],"的监听":["5.8"],"除了元素的大小":["5.8"],"可见性":["5.8"],"属性子节点等变化的监听外":["5.8"],"user":["5.9","87.5","97.13","114.19","123.1","175.2","175.9","179.29"],"avatar":["5.9"],"4e9e751e2b32fb8afbbf559a296ccbf2":["5.9"],"300x300":["5.9"],"image":["5.9","61.13","67.6","67.8","114.32","123.0","155.6","155.7","172.0","263.3","267.1"],"创建":["5.9","195.8"],"浏览器干预等报告等的打印":["5.10"],"在回调里上报":["5.10"],"的":["5.11","64.7","71.16","106.19","113.6","147.1","151.13","173.41","173.52","173.69","195.8","206.0"],"api":["5.11","5.12","96.14","97.2","175.4","209.14","254.17"],"监听过时的":["5.12"],"浏览器的一些干预行为的报告":["5.12"],"主线程会为每个层单独产生绘制指令集":["6.1"],"用于描述这一层的内容该如何画出来":["6.1"],"完成绘制后":["6.1"],"主线程将每个图层的绘制信息提交给合成线程":["6.1"],"剩余工作将由合成线程完成":["6.1"],"合成线程首先对每个图层进行分块":["6.1"],"将其划分为更多的小区域":["6.1"],"它会从线程池中拿取多个线程来完成分块工作":["6.1"],"raster":["6.1","152.18"],"合成线程":["6.1"],"分块完成后":["6.1"],"进入光栅化阶段":["6.1"],"合成线程会将块信息交给":["6.1"],"gpu":["6.1","7.5","7.10","7.14","152.18"],"进程":["6.1"],"以极高的速度完成光栅化":["6.1"],"进程会开启多个线程来完成光栅化":["6.1"],"并且优先处理靠近视口区域的块":["6.1"],"光栅化的结果":["6.1"],"就是一块一块的位图":["6.1"],"画":["6.1"],"draw":["6.1"],"合成线程拿到每个层":["6.1"],"js获取布局属性时":["6.3"],"就可能造成无法获取到最新的布局信息":["6.3"],"浏览器在反复权衡下":["6.3"],"一定会引起":["6.4"],"渲染主线程无如何忙碌":["6.5"],"也不会影响":["6.5"],"一般都是指":["7.0"],"另外术语":["7.0"],"child":["7.0","206.14","222.4","288.2"],"子合成器":["7.0"],"也是指":["7.0"],"display":["7.1","89.6","179.39"],"未来应该会移到":["7.1"],"处理事件到":["7.2"],"更新的整个过程的耗时":["7.2"],"理论上应该还要加上事件从":["7.2"],"browser":["7.2","95.9","95.43"],"该元素的某些":["7.3"],"css":["7.3","87.17","96.3","106.27","175.12","175.13","177.8","192.1","192.2","192.3"],"属性如":["7.3"],"transform":["7.3","61.12","64.21","154.20","170.15","205.4","239.3"],"的变更不会引起所属图层内容的变更":["7.3"],"第三点是可以被页端所直接控制来优化图层结构及":["7.3"],"性能":["7.3"],"的集合就构成了":["7.4"],"被发送往":["7.4"],"最终由":["7.5"],"动画的每一帧都是由":["7.6"],"生成并输出的":["7.6"],"合成器自身驱动着整个动画的运行":["7.6"],"在动画的过程中":["7.6"],"不需要新的":["7.6"],"main":["7.6","7.7","61.18","81.3","96.6","152.15","195.7"],"输入":["7.6"],"frame":["7.7","172.0"],"提交给合成器来触发这个动画":["7.7"],"如果这个":["7.7"],"要求每一帧的各个环节耗时都要保持非常稳定":["7.8"],"一般而言":["7.8"],"帧率在":["7.8"],"之间已经可以认为是非常优秀的水平":["7.8"],"这时用户几乎感觉不到卡顿":["7.8"],"之间可以认为是良好的水平":["7.8"],"用户感觉到轻微卡顿":["7.8"],"但整体来说还是比较流畅":["7.8"],"要达到":["7.8"],"从上可知":["7.9"],"合成器的光栅化调度完全是异步的":["7.9"],"合成器在":["7.9"],"compositor":["7.9","7.13"],"线程需要执行的就是安排光栅化任务和检查哪些任务已经完成":["7.9"],"call":["7.10","123.1","214.2","214.3","228.3","236.4","243.2"],"然后":["7.10","275.2"],"执行所有的":["7.10"],"指令完成最后的窗口绘制":["7.10"],"上述流程的一些关键点是":["7.10"],"的过程中":["7.10"],"合成器不会等待可见的分块光栅化完成":["7.10"],"这让合成器充分利用了异步光栅化的机制来提升性能":["7.10"],"但是也会造成动画过程中可能会出现空白的分块":["7.10"],"比如快速滚动页面有时会看到空白区域":["7.10"],"在合成器动画过程中":["7.10"],"和":["7.10","52.4","52.5","97.26","101.3","106.20","106.23","106.33","127.52","140.0","151.10","151.12","173.43","177.7","177.9","185.4","208.5","209.8","216.7","247.2","260.1"],"线程处于高负荷状态下":["7.11"],"也会导致前台的":["7.11"],"最终导致合成器动画掉帧":["7.11"],"这种现象常见于":["7.11"],"网页在合成器动画比如惯性滚动过程中":["7.11"],"有大量的":["7.11"],"blink":["7.12"],"触发":["7.12"],"无法由合成器运行的动画和由":["7.12"],"timer":["7.12","156.23"],"raf":["7.12","153.5"],"驱动的":["7.12"],"js":["7.12","19.13","33.2","73.0","82.1","87.3","87.40","89.11","99.5","99.22","100.0","106.5","106.36","109.6","134.3","154.6","177.6","179.7","185.7","231.7","272.0"],"动画两类":["7.12"],"gl":["7.13"],"这四个":["7.13"],"block":["7.13","92.0","114.30","127.40","233.0"],"基本上可以认为是可以并发运行的":["7.13"],"唯一会阻塞的环节是":["7.13"],"不过":["7.13","21.3"],"耗时一般不长":["7.13"],"理论上我们要实现":["7.13"],"内容的":["7.14"],"耗时实际上是被包含在最后的":["7.14"],"的步骤里面":["7.14"],"但是在移动平台上一个":["7.14"],"是相当高的":["7.14"],"大概在":["7.14"],"01":["7.14"],"毫秒这个范围":["7.14"],"cookie标头":["8.2"],"然后将cookie与http请求头一起发送请求":["8.2"],"变化":["8.5","169.4"],"仅在当前网页会话下有效":["8.7"],"关闭页面或浏览器后就会被清除":["8.7"],"不参与和服务器的通信":["8.9"],"一个是关闭网页就清除了信息":["8.11"],"localstorage可以用来夸页面传递参数":["8.11"],"sessionstorage用来保存一些临时的数据":["8.11"],"也是依赖于cookie实现的":["8.12"],"例如你在浏览器中打开了两个相同地址的页面a":["8.15"],"b":["8.15","22.12","57.6","71.6","104.0","106.21","140.4","174.20","175.12","179.12","181.0","188.0","256.6"],"虽然这两个页面的源完全相同":["8.15"],"但是他们还是不能共享数据":["8.15"],"因为他们是不同窗口中的":["8.15"],"但是如果是一个窗口中":["8.15"],"你就可以获取到":["9.1"],"momentjs":["9.1"],"新建代码段":["10.2"],"取个名字":["10.2"],"namestyle":["10.4"],"font":["10.4"],"weight":["10.4"],"normal":["10.4","222.4"],"countstyle":["10.4"],"bold":["10.4"],"colorstyle":["10.4"],"1px":["10.4","92.0","106.32","170.6","195.4"],"solid":["10.4","106.32"],"console":["10.4","10.11","16.0","58.4","58.5","61.18","62.10","62.14","64.14","64.21","64.22","95.46","96.1","99.16","107.2","108.2","109.6","110.2","111.2","112.2","125.8","126.2","127.11","127.13","127.30","127.37","131.1","131.3","131.4","131.5","131.6","133.4","133.5","152.12","156.2","158.4","164.4","173.64","175.6","178.4","182.1","182.2","205.20","256.4","286.34","286.38","286.69"],"group":["10.4","10.11","10.13"],"total":["10.4"],"href":["10.4","89.5","98.7","114.29","146.3","178.7"],"are":["10.4","69.10","206.8","241.1","241.10"],"decodeuricomponent":["10.5"],"else":["10.5","10.12","52.12","55.3","99.7","100.9","147.4","166.8","174.4","174.24","179.63","215.2","222.5","243.2","283.12","286.31","286.33","296.1"],"warn":["10.5","220.2","236.1"],"map":["10.6","64.19","99.8","103.13","152.21","153.8","172.0","173.44","181.0","214.2","231.3","256.6","283.7","286.72","287.4"],"tag":["10.6"],"span":["10.6","89.6","99.8","101.5"],"classes":["10.6"],"comment":["10.6","62.15","212.1","215.2","218.8"],"spellcheck":["10.6"],"wrap":["10.6"],"addeventlistener":["10.6","61.18","156.17","159.13"],"message":["10.6","96.14","97.54","97.57","133.5","175.6","179.41","195.8"],"close":["10.6","173.52"],"getelementsbytagname":["10.6"],"script":["10.6","97.26","147.5","154.17","154.19","179.36","241.8","254.16"],"src":["10.6","61.5","61.6","61.9","71.6","72.5","95.20","101.5","106.19","177.6","177.10","184.28","195.4","195.8"],"hasattribute":["10.6"],"manual":["10.6"],"domcontentloaded":["10.6","99.10","151.12"],"gi":["10.6"],"ig":["10.6","127.22"],"important":["10.6","91.0","95.25"],"ignore":["10.6","99.7","219.10"],"punctuation":["10.6"],"markup":["10.6"],"style":["10.6","97.2","97.22","97.26","152.20","153.11","279.8","286.48"],"replace":["10.7","99.20","220.2","241.1","241.10","286.28"],"return":["10.7","52.18","62.14","95.32","95.33","96.14","97.4","97.22","103.17","109.6","112.4","127.28","131.7","138.34","138.36","153.6","153.7","156.5","156.19","159.9","159.13","173.58","173.85","179.21","179.25","179.30","208.13","226.1","232.3","236.0","239.2","239.5","243.2","250.3","251.0","283.9","286.30","286.38","289.1","296.2"],"foreach":["10.7","59.1","62.15","64.18","99.14","147.5","283.1"],"value":["10.8","122.21","127.24","156.14","174.64","236.6","250.2","251.2","286.72"],"pretty":["10.8"],"isnan":["10.8"],"loaded":["10.9"],"noconflict":["10.9"],"prototype":["10.10","61.9","173.24","173.85"],"bind":["10.10","195.8"],"method":["10.11","96.14","152.30","173.57"],"back":["10.11","151.9"],"forward":["10.11","151.9"],"history":["10.11"],"traversal":["10.11"],"undefined":["10.11","99.7","109.1","174.12","179.19","258.5"],"is":["10.11","69.10","148.2","148.4","217.7","220.2","222.4","222.7","227.1","252.6"],"log":["10.11","10.13","16.0","19.3","58.4","61.18","62.3","64.14","64.21","64.22","95.46","96.1","99.16","107.2","108.2","108.3","109.6","111.2","112.1","112.2","125.1","125.2","125.4","125.7","125.8","126.2","127.11","127.13","127.23","127.30","127.47","127.51","131.1","131.3","131.4","131.5","131.6","133.4","133.5","152.12","156.2","173.64","175.6","178.4","182.1","205.20","256.4","286.2","286.22","286.34","286.38","286.69"],"values":["10.13"],"nqs":["10.13"],"ret":["10.14"],"object":["10.14","64.18","98.7","125.0","127.43","131.7","179.24","292.1","293.1"],"create":["10.14","235.4"],"null":["10.14","53.6","100.8","115.0","174.40","179.11","179.55","179.56","222.7","232.3","240.1","241.1","241.10","256.4"],"prop":["10.14","221.1"],"in":["10.14","21.14","99.6","99.7","181.0","190.6","195.7","195.9","219.6","222.4","245.3","252.6","260.2","279.10","286.14"],"window":["10.14","61.18","147.1","150.5","151.4","151.12","166.8","168.19","195.7","286.69"],"if":["10.14","19.11","23.91","64.12","69.10","81.1","98.13","110.2","126.4","140.5","147.5","169.4","172.0","173.56","174.12","175.12","179.25","256.2","283.10","285.5"],"tips":["11.1"],"图片":["11.1","11.5","20.7","20.10","22.3","22.4","23.10","23.11","23.24","23.81","23.86","50.1","50.7","65.10","65.12","65.35","71.8","71.14","77.4","87.1","106.23","106.27","106.36","106.51","114.9","114.10","114.15","154.7","175.0","208.3","265.4"],"无论你想看到元素的何种状态下的样式":["11.2"],"都只需要勾选相对应的状态就可以了":["11.2"],"页面就会自动滚动到元素所在的位置":["11.3"],"这样比边滚动边查看是否找到元素的方式方便多了":["11.3"],"打断点":["11.4"],"我们还可以给":["11.4"],"ajax":["11.4","96.12","154.3","175.16"],"或者":["11.4","25.5","25.6","140.0","168.24","174.25","177.4","208.7","216.1"],"event":["11.4","147.5","173.20","206.8","279.8"],"当你点击这个选项时":["11.6"],"页面立马会跳转至元素所在位置":["11.6"],"devtools":["11.6"],"edit":["11.7","97.59"],"breakpoint":["11.7"],"选项":["11.7","102.5","152.18"],"在弹框内输入":["11.7"],"on":["12.0","103.7","126.3","138.31","210.1","216.3","230.2"],"mac":["12.0"],"就像在机器上的其他任何地方一样":["13.0"],"某些的时候这很有用":["15.0"],"例如你想截图":["15.0"],"emit":["16.0","103.8","166.6"],"init":["16.0","110.1"],"以及":["17.0","46.3"],"source":["17.0","19.14","99.12","152.21","186.3","242.1","276.0"],"面板":["17.0"],"通过区分大小写":["17.0"],"temp1":["18.0"],"的变量":["18.0"],"第二次创建":["18.0"],"temp2":["18.0"],"冒泡":["19.3","173.18"],"点击":["19.3","195.4"],"只会执行上面的函数":["19.3"],"该函数不会执行":["19.3"],"事件代理的方式相较于直接给目标注册事件来说":["19.4"],"有以下优点":["19.4"],"就不会":["19.5"],"因为归根结底":["19.5"],"跨域是为了阻止用户读取到另一个域名下的内容":["19.5"],"可以获取响应":["19.5"],"浏览器认为这不安全":["19.5"],"所以拦截了响应":["19.5"],"body":["19.6","64.3","69.10","97.46","99.14","115.0","147.1","154.13","160.0","172.0","178.7","179.51","279.1","279.2","279.5","279.6","286.2","286.48"],"appendchild":["19.6","179.51","279.8"],"如果设置通配符则表示所有网站都可以访问资源":["19.7"],"虽然设置":["19.7"],"和前端没什么关系":["19.7"],"但是通过这种方式解决跨域问题的话":["19.7"],"xmlhttprequestupload":["19.8"],"对象均没有注册任何事件监听器":["19.8"],"对象可以使用":["19.8"],"也会触发":["19.9"],"方法":["19.9","195.8"],"因为预检请求并不包含":["19.9"],"所以服务端会报错":["19.9"],"想解决这个问题很简单":["19.9"],"只需要在回调中过滤":["19.9"],"方法即可":["19.9"],"不能通过":["19.13"],"访问":["19.13","138.22","175.12"],"减少":["19.13","44.9","175.22"],"xss":["19.13","175.12","175.18"],"攻击":["19.13"],"secure":["19.13","25.9","175.10"],"只能在协议为":["19.13"],"https":["19.13","43.14","86.1","87.32","173.57","263.6"],"match":["19.14","89.5"],"request":["19.14","151.12","167.0","179.44"],"response":["19.14","96.14","151.12"],"打开页面":["19.14"],"可以在开发者工具中的":["19.14"],"这个变量访问顺序就是作用域链":["20.2"],"this不参与作用域链查询":["20.2"],"它的值取决于四种赋值过程":["20.2"],"上下文之间偶尔会插入一个闭包":["20.2"],"执行部分":["20.3"],"使用eval函数":["20.4"],"eval的代码也会被编译生成上下文":["20.4"],"栈溢出":["20.5"],"的错误":["20.5"],"全局上下文即为全局作用域":["20.6"],"可以在任何地方访问":["20.6"],"js通过执行上下文中的词法环境实现块状作用域的支持":["20.7"],"词法环境是一个栈结构":["20.7"],"每个块状作用域形成独立空间被压入栈中":["20.7"],"在上面的例子中":["20.7","133.3","148.0"],"函数foo里嵌套了两对大括号":["20.7"],"每对大括号形成一个块状作用域":["20.7"],"对应词法环境中压入了两个栈成员":["20.7"],"全局上下文对应全局作用域":["20.8"],"这种变量的查找顺序也就形成了作用域之间的查找链条":["20.8"],"在这个例子中":["20.9"],"如果是词法作用域":["20.9"],"bar函数对应的外层作用域就是全局":["20.9"],"而如果是动态作用域":["20.9"],"bar函数对应的外层作用域就是foo函数":["20.9"],"在上面例子中":["20.10"],"foo函数返回了bar函数":["20.10"],"在bar函数执行的时候":["20.10"],"foo函数已经销毁":["20.10"],"this绑定规则和call":["20.12"],"bind实现":["20.12"],"这里再次强调":["20.12"],"this和作用域是相互独立的系统":["20.12"],"this不参与作用域链的变量查找过程":["20.12"],"这会导致一些问题":["20.12"],"最经典的就是嵌套函数的this继承问题":["20.12"],"比如咱们改改上面那个例子":["20.12"],"可以期待一下":["21.1"],"但是今天不是讲计算机网络":["21.1"],"我们今天要讲的是浏览器遇到了javascript文件之后到底是怎么处理的":["21.1"],"你并不需要担心现实中不同操作系统的差异":["21.2"],"也不需要担心不同体系结构计算机的差异":["21.2"],"你只需要按照虚拟机的规范写好代码就可以了":["21.2"],"v8可以独立运行":["21.2"],"turbofan":["21.3"],"优化编译器会在后台将字节码编译为优化的机器码":["21.3"],"优化后的二进制机器代码的执行效率会得到大幅提升":["21.3"],"和静态语言不同的是":["21.3"],"javascript是一种非常灵活的动态语言":["21.3"],"对象的结构和属性是可以在运行时任意修改的":["21.3"],"而经过优化编译器优化过的代码只能针对某种固定的结构":["21.3"],"mips等机器码":["21.5"],"具体编译流程如下图所示":["21.5"],"一般的":["21.6"],"在源代码的翻译和编译过程中":["21.6"],"语法分析器创建出分析树":["21.6"],"然后从分析树生成ast":["21.6"],"一旦ast被创建出来":["21.6"],"punctuator":["21.7"],"string":["21.7","81.6","185.4","207.16","221.1","227.1","252.3"],"执行到函数":["21.8"],"的时候":["21.8","97.40","173.11","173.78"],"执行栈会为其再创建一个新的执行上下文":["21.8"],"并把新的执行上下文推送到栈顶上":["21.8"],"等当前函数执行完":["21.8"],"函数":["21.8","108.3","173.87","181.0","195.8","204.3","218.9","225.0","246.5","252.2"],"会弹出栈":["21.8"],"但是只有在函数被调用的时候才会被创建":["21.9"],"被调用的函数的执行上下文会被推送到栈顶并执行当前的执行上下文":["21.9"],"由于传入的代码声明了一个新的变量nickname":["21.10"],"因此它对已存在的foo":["21.10"],"词法作用域进行了修改":["21.10"],"实际上是eval函数在函数foo内部创建了一个值为moment的变量":["21.10"],"它的执行栈从栈中弹出":["21.11"],"继续执行前一个执行上下文剩下的代码":["21.11"],"memory":["21.14","151.5","152.18"],"functionexectioncontent":["21.15"],"declarative":["21.15"],"如果绑定的内容是不可更改的":["21.16"],"所有变量的地址在编译时就可以确定":["21.16"],"这样js引擎在执行时就可以针对性进行优化":["21.16"],"对象环境记录":["21.16"],"绑定了一组字符串标识符名称":["21.16"],"before":["21.17","92.0","206.14"],"initialization":["21.17"],"let":["21.17","62.15","64.17","64.21","88.2","99.8","108.2","110.2","126.7","140.0","175.4","175.8","189.0","204.6","206.1","226.1","230.1","286.28"],"javascript引擎在编译的时候会创建一个全局对象global":["21.17"],"而由var声明的变量会挂载到全局对象global上":["21.17"],"所以在代码执行的时候moment属性已经存在了":["21.17"],"只不过值是undefined":["21.17"],"这就是我们常说的作用域提升":["21.17"],"而由let声明的变量只有在代码执行阶段才创建":["21.17"],"作用域在编译的时候已经决定了":["21.18"],"不会再修改":["21.18"],"而动态作用域是是通过运行时就行修改的":["21.18"],"二者形似":["21.19"],"但生不逢时":["21.19"],"这时":["22.1"],"cpu就处于等待状态":["22.1"],"也就是cpu工作的时候":["22.1"],"i":["22.1","64.7","89.11","100.8","110.2","114.30","130.4","133.5","153.8","153.10","226.1","230.1"],"o系统是不工作的":["22.1"],"上":["22.3","72.0","177.11","207.8","208.7"],"还能存储指令":["22.4"],"cpu是怎么跟存储器交互的":["22.6"],"acc这些我们不用管了":["22.8"],"是一些寄存器":["22.8"],"存放当前需要执行的指令":["22.9"],"pc存放的指令的地址":["22.9"],"这里的取指令的过程结束了":["22.11"],"来个插曲":["22.11"],"我们知道数据在内存里是二进制存着":["22.11"],"也就是0和1":["22.11"],"0和1怎么用表示呢":["22.11"],"我们拿其中一种存储0和1的方式来说明":["22.11"],"电容是否有电荷":["22.11"],"我们看看怎么用高级语言表示":["22.12"],"高级语言是不是很简单":["22.12"],"就一个a":["22.12"],"会对代码做一些优化":["22.13"],"编译后立即执行的方式通常被称为":["22.13"],"jit":["22.13"],"just":["22.13","236.4"],"注意小数点后是乘以它的负相应次方":["22.15"],"再举一个例子你就明白了":["22.15"],"二进制1101转为十进制":["22.15"],"商为1":["22.16"],"再将1除以2":["22.16"],"商为0":["22.16"],"如此进行":["22.17"],"直到积中的小数部分为零":["22.17"],"或者达到所要求的精度为止":["22.17"],"小数":["22.19"],"2整":["22.19"],"一直下去就行":["22.19"],"这个数整不断":["22.19"],"0011001":["22.19"],"复制代码":["22.19"],"101比例因子是100":["22.21"],"定点数很简单":["22.21"],"接下来我们介绍浮点数":["22.21"],"基数":["22.22"],"在二进制里面是2":["22.22"],"我们只要了解到浮点数加减运算很麻烦就行了":["22.23"],"但如果你要做一个浮点数运算的库":["22.23"],"在最近的未来要用到的信息":["22.24"],"指令和数据":["22.24"],"很可能与现在正在使用的信息在存储空间上是邻近的":["22.24"],"时间局部性":["22.24"],"很可能是现在正在使用的信息":["22.24"],"可以看到cache一次性取了a":["22.24"],"接下来我们看一下i":["22.26"],"o设备的演进过程":["22.26"],"cpu只需要安排开始高速外设做什么":["22.27"],"剩下的就不用管了":["22.27"],"这样就可以防止频繁中断cpu":["22.27"],"这些概念听一下就行":["23.1"],"后面会详细介绍":["23.1"],"因为理解广播和分组交换技术":["23.1"],"来衡量目前数据传输的快慢":["23.3"],"它是计算机网络中最重要的一个性能指标":["23.3"],"意思是":["23.4"],"一秒内最大的传输速率是100兆比特":["23.4"],"的数据量":["23.5"],"也有可能等于带宽的量":["23.6"],"由此可知带宽是说的是最大值速率":["23.6"],"吞吐量说的是某时刻速率":["23.6"],"单位是s":["23.7"],"时延分一下几种":["23.7"],"就是发送时延":["23.8"],"是分组丢失":["23.10"],"总共经历的时间":["23.12"],"7层是软件控制的":["23.14"],"比如http协议":["23.14"],"是一种软件层面控制的协议":["23.14"],"比如电线杆上是光纤还是双绞线":["23.16"],"只要你能按物理层规定的标准传输数据就行":["23.16"],"我们不需要了解":["23.17"],"知道物理层是规定传输媒体接口的标准即可":["23.17"],"然后光信号快到服务器的时候":["23.18"],"再把光信号转为电信号":["23.18"],"这里简单的理解为":["23.20"],"不同的网段就是不同路由器连接的网络":["23.20"],"就要看看到底有没有文件丢了":["23.22"],"如果丢了就要让傻子回去重新拿丢到的文件":["23.22"],"从这个故事中":["23.22"],"div":["23.25","61.8","101.5","150.12","153.6","153.7","153.11","159.2","159.9","159.13","160.0","168.3","178.7","195.7","195.8","286.38"],"到底是指div标签呢":["23.25"],"会有一个fcs位留给这个码":["23.26"],"用来判断一个帧是否出错":["23.26"],"还有一些是故事里没有提到的数据链路层的功能":["23.27"],"比如":["23.27","41.4","82.1","102.5","106.14","136.1","157.1","163.0","175.9","205.10","207.2","207.5","209.2","246.1"],"接下来讲一下以太网":["23.28"],"以太网是目前最常见的局域网技术":["23.28"],"另外的一些局域网技术":["23.29"],"比如无线局域网等":["23.29"],"目的地址分为三种单播地址":["23.30"],"广播地址":["23.30"],"多播地址":["23.30"],"其中单播地址如上面ａ给ｂ主机发送":["23.30"],"差错帧直接丢弃":["23.31"],"以太网虽然物理上是星型拓扑":["23.34"],"但逻辑上是总线型":["23.34"],"好像是曼彻斯特编码":["23.35"],"规定如何表示高低电平":["23.35"],"还需要基站和基站之间传输数据":["23.36"],"来达到两个在不同基站覆盖范围内的无线设备通信":["23.36"],"在某一时刻":["23.37"],"只允许数据在一个方向上传输":["23.37"],"同一网段指的是ip地址和子网掩码":["23.39"],"讲ip地址的时候会细讲":["23.39"],"路由器是网络层的设备":["23.40"],"兄弟":["23.40"],"能看完上面内容":["23.40"],"你也真够能忍的":["23.40"],"从一台主机移动到另一台主机":["23.42"],"从而提供了主机到主机的通信服务和各种形式的进程到进程的通信":["23.42"],"并过滤掉冲突包错误":["23.44"],"动态分配路线":["23.44"],"交换设备会根据网络状况选择不同的路线":["23.44"],"这串文字本上加上源地址":["23.45"],"目的地址":["23.45"],"变成0就丢弃":["23.46"],"协议是指数据部分用的什么协议":["23.46"],"我们只需要知道tcp协议用6表示":["23.46"],"udp协议用17表示即可":["23.46"],"首部校验和占16位":["23.46"],"不能分片":["23.48"],"只有当df":["23.48"],"0时才允许分片":["23.48"],"片偏移":["23.48"],"这是c类网络":["23.50"],"所以网络号是192":["23.50"],"主机号是1":["23.50"],"当主机号全0时":["23.50"],"就是0":["23.50"],"表示192":["23.50"],"0这个网段":["23.50"],"第三行":["23.50"],"还是192":["23.50"],"1这个c类地址":["23.50"],"5作为内网的代理":["23.51"],"去访问外网":["23.51"],"外网返回来的数据":["23.51"],"所以发送到的子网就是145":["23.52"],"这里有人会问什么是子网掩码":["23.52"],"子网掩码的格式跟ip是一样的":["23.52"],"如果相同":["23.54"],"该主机首先将发送端的mac地址和ip地址添加到自己的arp列表中":["23.54"],"如果arp表中已经存在该ip的信息":["23.54"],"则将其覆盖":["23.54"],"然后给源主机发送一个":["23.54"],"arp响应数据包":["23.54"],"告诉对方自己是它需要查找的mac地址":["23.54"],"如果路由器提供dhcp服务":["23.55"],"你就会自动获取随机分配的ip":["23.55"],"所以我们就需要一种协议来完成这样的功能":["23.57"],"我们常用的ping命令借助icmp协议":["23.58"],"比如输入数据的速度太快":["23.59"],"输出数据速度慢":["23.59"],"为了平衡输入输出速度":["23.59"],"就用缓冲队列把数据缓冲下来":["23.59"],"一个一个慢慢的处理":["23.59"],"但缓冲队列也有限度":["23.59"],"udp无连接":["23.60"],"收到的报也不确认":["23.60"],"但时间延迟小":["23.60"],"那有数据来的时候":["23.61"],"服务器无法判断这个数据到底是给a":["23.61"],"还发死劲发数据呢":["23.63"],"但是反过来看":["23.63"],"这也是udp的优点":["23.63"],"它允许丢包":["23.63"],"如果你的网络情况还不错":["23.63"],"udp就非常适合实时应用":["23.63"],"如果有错就丢弃掉":["23.64"],"比如说目的主机找不到对应的端口号":["23.64"],"就会给发送方返回一个icmp":["23.64"],"图中的1":["23.65"],"数据块":["23.65"],"每一个表示一个字节":["23.65"],"因为1":["23.66"],"3这三个字节的组成的数据包已经收到了":["23.66"],"表明发送方已经没有数据发送了":["23.67"],"urg":["23.67"],"紧急指针":["23.67"],"也就是接下来希望发送方要发的数据从哪开始":["23.68"],"最后":["23.68","41.2","46.4","96.6","133.5","211.0"],"客户端需要给服务器端返回一个确认":["23.68"],"此时syn控制位变为0":["23.68"],"意思这不是建立连接的请求了":["23.68"],"发送完毕之后":["23.69"],"客户端进入等待状态":["23.69"],"等待两个时间周期":["23.69"],"关闭":["23.69","97.30"],"为什么最后还要等待两个时间周期呢":["23.69"],"己方ack和fin一般都会分开发送":["23.70"],"从而导致多了一次":["23.70"],"每次客户端请求服务器会重置计时器":["23.71"],"当2小时之内没收到客户端任何数据时":["23.71"],"会每隔75s向客户端发一个探测报文":["23.71"],"若接连发送10个":["23.71"],"内存会很容易耗尽":["23.72"],"从而拒绝服务":["23.72"],"三次握手的第三次可以携带数据吗":["23.72"],"第三次握手":["23.72"],"此时客户端已经处于established状态":["23.72"],"才继续发送剩下的数据":["23.73"],"重传":["23.73"],"tcp的发送方在规定的时间内没有收到确认就要重传已发送的报文段":["23.73"],"超时重传":["23.73"],"例如":["23.75","177.7","178.2","178.3","193.4"],"允许用户终止在远端机上的运行进程":["23.75"],"另一种情况是发送方可以发送一个":["23.75"],"视频地址如下":["23.76"],"拥塞控制视频版":["23.76"],"做如下假设":["23.77"],"接收方有足够大的接收缓存":["23.77"],"因此不会发生流量控制":["23.77"],"虽然":["23.77"],"加":["23.78"],"如果出现了超时":["23.78"],"则令":["23.78"],"而不是":["23.79","50.7"],"的增长速率":["23.79"],"慢开始":["23.79"],"设定为":["23.79"],"一些比较重要的应用层协议如下图":["23.81"],"也可以请求服务":["23.82"],"比如迅雷下载也是使用p2p技术的":["23.82"],"主动断开tcp连接的一端":["23.84"],"tcp状态机会进入time":["23.84"],"wait状态":["23.84"],"如果频繁地使用短连接方式":["23.84"],"保持链路不断开":["23.85"],"目前长连接方式应用范围比较广泛":["23.85"],"qq的域名对应的ip是多少":["23.86"],"这里需要补充一个小知识":["23.87"],"关于域名的":["23.87"],"大概了解一下就行":["23.87"],"qq":["23.88"],"文件传输":["23.88","50.29"],"ftp":["23.88","175.10"],"网络电话等等":["23.88"],"只要应用层使用的是http协议":["23.88"],"就称为万维网":["23.88"],"可以有零个或多个头部":["23.90"],"每个首部都包含一个名字":["23.90"],"后面跟着一个冒号":["23.90"],"然后是一个可选的空格":["23.90"],"接着是一个值":["23.90"],"最后是一个crlf首部是由一个空行":["23.90"],"crlf":["23.90"],"结束的":["23.90"],"表示了头部列表的结束和实体主体部分的开始":["23.90"],"告诉服务器能够发送哪些语言":["23.91"],"range":["23.91","27.7"],"如果服务器支持范围请求":["23.91"],"就请求资源的指定范围":["23.91"],"允许对文档的某个范围进行条件请求":["23.91"],"在客户端设置数据":["23.92"],"这个主体的对象类型":["23.93"],"etag":["23.93"],"与此实体相关的实体标记":["23.93"],"last":["23.93","87.41","195.4"],"软件应用程序等等":["23.94"],"端口有任何一个不同":["24.1"],"都被当作是不同的域":["24.1"],"现在h5新特性还有":["24.3"],"windows":["24.3","86.3","241.1","241.10","260.1"],"代码":["24.4","61.8"],"在":["24.4","27.12","106.2","106.20","112.2","133.5","172.0","173.21","173.79","204.2","205.3"],"cross":["24.5","175.12"],"origin":["24.5","24.6","61.12","89.5","99.9"],"resource":["24.5","115.0","154.8"],"sharing":["24.5"],"跨域资源共享":["24.5"],"服务器设置对cors的支持原理":["24.5"],"服务器设置access":["24.5"],"control":["24.5"],"allow":["24.5","95.5","177.13","243.2"],"只需要响应头上增加一行":["25.1"],"问题就能迎刃而解":["25.1"],"jpg":["25.2","99.1","150.12","152.26","172.0"],"默认文件名可指定":["25.2"],"注":["25.2","156.15"],"如果需要预览":["25.2"],"并不是被发明出来阻碍用户的":["25.4"],"因此":["25.4","37.2","46.3","50.6","98.6","109.6","155.8","173.79"],"理解如何使用":["25.4"],"都可以指定机制为强缓存":["25.5"],"协商缓存":["25.5","25.6"],"这是一种更为复杂缓存机制":["25.5"],"无法再通过响应头":["25.5"],"简单粗暴地":["25.5"],"指定实现":["25.5"],"而是需要前后端协作配合":["25.5"],"ico":["25.6"],"这类命名固定的文件":["25.6"],"建议一律":["25.6"],"不缓存":["25.6","138.37"],"是它":["25.7"],"就是它":["25.7"],"关于":["25.7","130.10"],"那么":["25.8","52.5"],"属性的生成":["25.8"],"读写":["25.8"],"发送就只能由浏览器通过":["25.8"],"响应头":["25.8"],"控制了":["25.8"],"不在允许前端通过":["25.8"],"是否允许跨域携带":["25.8"],"samesite":["25.8"],"属性":["25.9","134.3","146.6","173.91","219.7"],"存不进":["25.9"],"取不出":["25.9"],"先确认":["25.9"],"是否有域的限制":["25.9"],"层进行加密":["26.1"],"其作用是":["26.1"],"建立一个信息安全通道":["26.1"],"协议需要":["26.2"],"ca":["26.2"],"证书":["26.2"],"费用较高":["26.2"],"功能越强大的证书费用越高":["26.2"],"证书需要绑定":["26.2"],"建立会话密钥":["26.4"],"然后通过网站的公钥来加密会话密钥":["26.4"],"并传送给网站":["26.4"],"http协议构建的可进行加密传输":["26.5"],"身份认证的网络协议":["26.5"],"个帐号是不幂等的":["27.1"],"对文章进行更改":["27.1"],"次和":["27.1"],"次是幂等的":["27.1"],"因为前者是多了一个账号":["27.1"],"资源":["27.1"],"后者只是更新同一个资源":["27.1"],"在规范的应用场景上说":["27.1"],"但是这个长度限制是浏览器规定的":["27.2"],"不是":["27.2"],"rfc":["27.2"],"规定的":["27.2"],"传输编码方式":["27.5"],"upgrade":["27.5"],"要求客户端升级协议":["27.5"],"forwards":["27.7"],"限制可被代理及网关转发的次数":["27.7"],"proxy":["27.7","138.39","173.43","235.4","243.2","251.2"],"authorization":["27.7"],"向代理服务器发送验证信息":["27.7"],"服务器名字":["27.9"],"www":["27.9","43.14"],"内容的媒体类型":["27.11"],"expires":["27.11"],"内容的过期时间":["27.11"],"中使用了两种加密技术":["27.12"],"一旦秘钥被截获就没有加密的意义的":["27.13"],"然后通过公钥加密并发送给服务端":["27.14"],"服务端接收到密文以后通过私钥解密出正确的秘钥":["27.14"],"协议中":["27.15"],"首次建立连接只需要一个":["27.15"],"而":["28.1","106.33"],"则是建立在":["28.1"],"的基础上":["28.1"],"表示服务器错误":["29.1"],"主要用于":["29.2"],"websocket":["29.2"],"或":["29.2","60.0","147.1","151.9","175.9","177.12","179.19","204.3","222.9"],"重置内容":["29.3"],"使用代理":["29.4"],"请求者只能使用代理访问请求的网页":["29.4"],"临时重定向":["29.4"],"类似":["29.5","178.6"],"但指定请求者应当授权使用代理":["29.5"],"版本不受支持":["29.6"],"服务器不支持请求中所用的":["29.6"],"如果正确则把数据交给上层协议":["30.1"],"然后给发送方发送一个累计应答包":["30.1"],"表明该数据已收到":["30.1"],"同当事人一起重新梳理和推演":["31.1"],"找到事情何以至此的原因":["31.1"],"并在未来予以优化或者避免":["31.1"],"用更概括的语言来说":["31.1"],"复盘的过程":["31.1"],"从现代工程师的角度来看":["31.2"],"我想需要复盘的原因有如下三点":["31.2"],"这几乎是动物的本能":["31.3"],"我们就需要复盘自己的过去":["31.4"],"找到促使自己成功的主要原因":["31.4"],"当局者迷":["31.5"],"旁观者清":["31.5"],"而且":["31.5","148.0"],"在故障复盘之后":["31.5"],"我们会保存复盘报告":["31.5"],"这既是一种归档":["31.5"],"也是一种知识的传承":["31.5"],"方便后来者查阅学习":["31.5"],"则可能只能看到表面的部分":["31.7"],"很难完全还原当时的场景":["31.7"],"更难感同身受":["31.7"],"这样的复盘收获只能作为一种参考":["31.7"],"但是":["31.7","46.4","52.1","99.14","173.11","173.40","195.4"],"则是在复盘别人成功的经历":["31.8"],"希望能够学习成功者的处事方式":["31.8"],"这样":["31.9","39.11"],"在实际复盘的时候":["31.9"],"我们才能确保不同角色的人对故障的过程理解一致":["31.9"],"唯其如此":["31.10"],"才能看到问题的本质":["31.10"],"只有把复盘得到知识用于实践":["31.11"],"我们才不会被同一个石头绊倒两次":["31.11"],"可以通过日记或者周记保存":["31.12"],"便于后续查阅":["31.12"],"那还不如不复盘":["31.14"],"不要浪费大家的时间":["31.14"],"抽离出去":["31.15"],"谦虚一点":["31.15"],"复盘":["31.16"],"的目的":["31.16"],"一句话":["31.16"],"复盘的目的":["31.16"],"如果是出于实力":["31.17"],"具体这个实力又体现在哪几方面":["31.17"],"我能继续把这些实力优势发挥下去吗":["31.17"],"可以看到":["31.17","41.0","41.1","41.2","68.7","113.6"],"对问题的愿意有一个5":["31.18"],"why的询问过程":["31.18"],"会在根因思维里着重介绍":["31.18"],"这句话有没有让在座大多数小伙伴一阵心肌梗塞的感觉":["32.2"],"你是回呢还是不回呢":["32.2"],"直接提问":["32.2"],"有问题先":["32.2"],"百度":["32.2"],"bing":["32.2"],"google":["32.2","32.3","43.14","152.2"],"撒":["32.2"],"毕竟大佬很忙的撒":["32.2"],"好不容易处理完自己事情":["32.2"],"看到你这问题":["32.2"],"结果一百度发现感觉又回到了工作状态":["32.2"],"这是另类为你打工啊":["32.2"],"问完就溜":["32.2"],"就算":["32.2"],"tcp":["32.2","48.20","50.7","50.8","51.0","151.12"],"关闭还要挥手啊":["32.2"],"你这一不说解决没有":["32.2"],"搜索":["32.3"],"学不会用":["32.3"],"的话":["32.3"],"你可能真的不适合你所从事的行业":["32.3"],"这些信息":["33.1"],"将会帮助架构师制定下一步架构目标和方向":["33.1"],"所以软件架构不仅仅只是选用什么框架":["33.1"],"选用什么技术组件这么简单":["33.1"],"它贯穿了":["33.1"],"对人的组织":["33.1"],"对技术的组织":["33.1"],"对业务的组织":["33.1"],"并将这三种组织以解决业务问题这一目":["33.1"],"标有机的结合在了一起":["33.1"],"很多面试的候选人在被问及他所开发的系统采用什么架构的问题时":["33.1"],"只会罗列出":["33.1"],"一些技术组件":["33.1"],"这样方案去打造中后台搭建系统":["33.2"],"有针对性的指定技术方案":["33.3"],"只有理解了业务才能够站到前端的专业角度根据业务提出不同的产品意见":["34.1"],"让用户喜欢我们的产品":["34.2"],"要兼顾成本和帮助客户增加收入":["35.1"],"对他们这个是否真的有必要":["35.2"],"重要的功能":["35.5"],"关于项目做了何种假设":["36.1"],"相互依赖性的识别":["36.2"],"至少确定一种项目的实现方法":["36.2"],"当估算项目能获得收益时":["36.3"],"筹措公司资源进行项目的准备":["36.3"],"新建要谨慎":["36.4"],"开发和维护检查表":["36.5"],"中存在的飞轮系统":["37.0"],"能够驱动或者调试这个飞轮系":["37.0"],"最重要的是":["37.0"],"他":["37.0"],"要能够亲手设计":["37.0"],"建造":["37.0"],"驱动":["37.0"],"验证一个独立的飞轮系统":["37.0"],"直至这个飞轮系统可以自动前进":["37.0"],"然后自己全身而退":["37.0"],"作为一个每天都在飞轮打过交道":["37.0"],"有实践经验的工程师":["37.0"],"对于一个飞轮系统来说":["37.1"],"最难是的推动飞轮转动的最初几":["37.1"],"或者几十":["37.1"],"几百":["37.1"],"圈":["37.1"],"这几乎是一个九死一生的过程":["37.1"],"绝大多数人在这一步就失败了":["37.1"],"对于亚马逊来说":["37.1"],"实际想要推动这个飞轮的转动":["37.1"],"中间自然经历了各种磕绊":["37.1"],"进行了少不了各种的试错和调整":["37.1"],"关于这一点":["37.1"],"有兴趣的朋友可以阅读":["37.1"],"我们对接了多少支付渠道":["37.2"],"我们服务了多少商户":["37.2"],"我们的支付增长飞轮是这样的":["37.2"],"没记错的话":["37.2"],"接入更多的渠道":["37.2"],"吸引更多的商户":["37.2"],"获得更多的利润":["37.2"],"回到第一步":["37.2"],"这个飞轮的逻辑非常清楚":["37.2"],"才会有多样的支付和资金能力":["37.2"],"才能吸引商户入住":["37.2"],"更多的商户入住之后":["37.2"],"我们才能获得更多的服务费":["37.2"],"在开始推动一个新的飞轮的时候":["37.3"],"意味着我们得让已经在转动的飞轮停下来":["37.3"],"而让一个已经推动的":["37.3"],"拥有巨大动能的飞轮在瞬间停下来":["37.3"],"这基本上是不可能的":["37.3"],"同时":["37.3","41.1","64.4","87.34"],"让一个新的飞轮开始推动":["37.3"],"这基本上又非常的困难":["37.3"],"难上加难":["37.3"],"于是我们就失败了":["37.3"],"另外":["37.3","134.4"],"已经转动的飞轮":["37.3"],"每个独立的构件已经吸收了巨大的能量":["37.3"],"此时想要在瞬间让飞轮停止":["37.3"],"那么就得想办法让能量在瞬间释放":["37.3"],"如同上文中的例子":["37.3"],"此时可以使用根因思维和复盘思维":["37.4"],"捕捉用户的呼声":["38.3"],"d":["38.3","68.12","75.5","81.3","86.6","87.38","95.15","95.24","97.31","127.39","131.2","131.5","131.6","140.4","141.8","184.27","284.36","284.37","287.2"],"取悦客户":["38.3"],"掌握他们的":["38.3"],"有没有必要进行定制化配置":["38.4"],"客户的决策由什么因素":["38.4"],"是公司员工吗":["38.4"],"会不会吃回扣":["38.4"],"你是提供完整的服务":["38.4"],"如果有可能倾听不同客户的需求":["38.5"],"找到他们的共同的需求":["38.5"],"更新我们之前抱持的错误认知":["39.1"],"用新的认知重新进行分析":["39.1"],"重新制定计划":["39.1"],"重新实施计划":["39.1"],"这是一个循环往复的迭代过程":["39.1"],"迭代思维后续会有单独的文章":["39.1"],"这样的思考方式":["39.1"],"就是":["39.1","127.43","173.69","208.14","220.7","258.5"],"而用":["39.1"],"思考之后去行事":["39.1"],"灰度操作":["39.1"],"而失败的成本对我们来说又无法接受":["39.2"],"那么这样的问题就非常适合使用":["39.2"],"其实这也是一种灰度":["39.3"],"还有一些复杂性问题":["39.3"],"由于他本身只有在规模效应下才会出现":["39.3"],"所以这种问题本身就是无法拆解的":["39.3"],"依照新方案开始新的灰度":["39.4"],"直到达到我们的既定目标":["39.4"],"总之":["39.4","41.6","44.9","46.5"],"只要是从已知世界走向未知世界的情况":["39.4"],"我们都可以用灰度思维来试探和尝试":["39.4"],"确保这个模块的功能符合预期":["39.6"],"确人这个模块的性能禁得住大流量的冲击":["39.6"],"之后":["39.6","41.0","113.3","275.2"],"相当于对新代码进行了灰度验证":["39.7"],"如果一切顺利":["39.7"],"我们会用同样的方式发布蓝机房":["39.7"],"而如果在灰度中发现问题":["39.7"],"一书":["39.8"],"本文就不再赘述了":["39.8"],"即便你玩儿了半天发现自己其实对摄影并不是真的上头":["39.11"],"再投入大量成本去深入学习":["39.12"],"这里一不小心举了一个反面的例子":["39.13"],"诸位一定要注意甄别":["39.13"],"我们的人生更是亦然":["39.14"],"技能考核":["40.1"],"最近在做什么":["40.3"],"参考话术":["40.3"],"接下来我会问你一些业务相关问题":["40.3"],"这个项目让你学习了什么东西":["40.4"],"还可以挑一些相关的技术细节提问":["40.4"],"数据如何传输":["40.5"],"你的设计会有什么优点和缺点":["40.5"],"等等":["40.5"],"第二个是移动端h5":["40.6"],"我们会需要做响应式":["40.6"],"一套代码适应手机":["40.6"],"pad":["40.6"],"pc":["40.6","173.57","286.25"],"架构师们终于作出一个重要的决定":["41.0"],"对这个庞大的单核支付系统做soa拆分":["41.0"],"按照不同领域":["41.0"],"我们将拆分出不同功能职责的系统":["41.0"],"而soa拆分之后的系统":["41.0"],"其实就是之前在支付系统中的各个独立模块":["41.0"],"系统拆分之后":["41.0"],"研发人员的数量自然又增加了不少":["41.0"],"这些系统并非空想而来":["41.0"],"它们继承了老支付系统的所有关键设计":["41.0"],"然后迭代":["41.1"],"在掌握了平衡的技巧之后":["41.1"],"我们才能开始蹒跚而行":["41.1"],"这个过程自然免不了无数次跌倒":["41.1"],"一开始走路的样子自然也非常笨拙":["41.1"],"但是到最后我们总能站起来继续前进":["41.1"],"当具体的目标和方法不是很明确":["41.1"],"需要我们边做边学":["41.1"],"在实践中实时地对目标和方法进行调整时":["41.1"],"迭代思维就能发挥作用":["41.1"],"考虑到投入成本":["41.1"],"为了防止我们陷入迭代的无限循环而实际上已经无法再有突破的情况发生":["41.1"],"在实际使用迭代思维时":["41.1"],"我们必须设计好终止条件":["41.1"],"总的来说":["41.1"],"我们要参考检查阶段的报告":["41.2"],"将已经符合预期的部分固化为标准流程":["41.2"],"将对不符合预期部分的改进方案带入下一个迭代实施":["41.2"],"继续执行下一次pdca":["41.2"],"以此类推":["41.2"],"循环往复":["41.2"],"在每一次pdca中都是有所改进的":["41.2"],"让我不至于在实际操作时手忙脚乱":["41.3"],"第二":["41.3"],"有可能当天晚上我有事":["41.3"],"无法去做变更":["41.3"],"那么我只需要将这份pdca文档交给替代我的人":["41.3"],"他就可以几乎无脑地完成所有的操作":["41.3"],"我们应该把重点放在p阶段和c阶段":["41.4"],"而在d阶段":["41.4"],"我们可以建立单独的pdca循环专门推进":["41.4"],"作为":["41.4","133.9"],"只是":["41.5"],"在经过了几轮的pdca循环之后":["41.5"],"这个系统自然而然就变得庞大起来了":["41.5"],"这也是一个意外的结果":["41.5"],"此时其实我们应该研究一下":["41.5"],"别忘了":["41.5"],"前者简直就是灾难":["41.6"],"而后者几乎可以让我们事半功倍":["41.6"],"南辕北辙":["41.7"],"自然也就不可能指哪儿打哪儿":["41.7"],"以上":["41.7","195.7"],"就是对pdca循环的所有介绍":["41.7"],"瞬息万变的场景":["41.8"],"ooda循环同样非常适用":["41.8"],"如何快速观察你的竞争对手明里暗里都做了什么好事":["41.8"],"如何基于这些信息对政治风向进行判断并标记敌友":["41.8"],"然后推导出下一步的行动计划":["41.8"],"如何在众多行动选项中选出一个当下最好的行动":["41.8"],"如何干扰或者打断对手的ooda循环等等":["41.8"],"在快节奏的场景中使用ooda循环的例子非常之多":["41.8"],"读者可以自己开动脑筋寻找":["41.8"],"这里不再列举":["41.8"],"最后要说明的是":["41.8"],"pdca循环和ooda循环在使用时并不冲突":["41.8"],"二者适用的场景和作用的范围都不一样":["41.8"],"pdca适合按部就班的计划和稳扎稳打地推进":["41.8"],"重在人和环境的对抗":["41.8"],"而ooda适合瞬息万变的":["41.8"],"战场局势":["41.8"],"d阶段可以配合灰度思维使用":["41.9"],"a阶段可以配合灰度思维使用":["41.9"],"打组合拳":["41.9"],"去做":["41.10"],"一点一点的去做":["41.10"],"日复一日地去做":["41.10"],"务实地做":["41.10"],"问题解决":["42.0"],"高管人员合作":["42.0"],"时间表":["42.1"],"时限和资源需求":["42.1"],"雇佣最好的员工":["42.2"],"而且能够借此有效把握问题的核心":["43.1"],"并成为有效解决问题的方法":["43.1"],"每项工作之间不要有交叉重叠":["43.2"],"城镇户口":["43.3"],"非城镇户口":["43.3"],"是否有城镇户口":["43.3"],"是指有边界的穷尽":["43.5"],"中国传统文化中有很多类似的二分法":["43.6"],"比如阴和阳":["43.6"],"女和男":["43.6"],"正和反":["43.6"],"现实中可能出现这样的情况":["43.7"],"分出来一些类别后":["43.7"],"仍然有几项不属于前面分出的几类":["43.7"],"但这几项还比较重要":["43.7"],"安徽的还是":["43.11"],"非安徽的":["43.11"],"确认范围":["43.13"],"当前同事在公司的定位":["43.13"],"通过多方信息来完善自己的切入点":["43.14"],"参照":["43.14"],"zhihu":["43.14"],"com":["43.14","77.2","86.1","96.5","114.29","121.1","138.28","173.57","191.2","286.64"],"question":["43.14"],"防错设计":["44.1"],"的概念之前":["44.1"],"我会先分享一个自己亲历过的线上故障":["44.1"],"这是一个因为交集函数没有做防错设计而导致的线上故障":["44.1"],"引发这个故障的错误很小":["44.1"],"就一行代码的事情":["44.1"],"但是却让我和同事一起花了2天时间做了2次紧急发布才完全修复":["44.1"],"到最后":["44.1"],"虽然我们都没有因为这个故障而":["44.1"],"一年白干":["44.1"],"a融资者计算后计银行的供应商白名单":["44.2"],"注意":["44.2","122.19","138.38","173.94","179.11"],"到这里银行的白名单已经被修改了":["44.2"],"这里已经错了":["44.2"],"预期结果应该是":["44.2"],"这个意料之外的副作用":["44.2"],"虽然很多编程教材上都有强调":["44.2"],"关于值传递还是引用传递的讨论":["44.2"],"但是写代码的同学还是疏漏了":["44.2"],"至于测试同学":["44.2"],"我估计是因为测试同学一直都是用同一个融资者做测试":["44.2"],"所以他们也没有测出来":["44.2"],"于是问题就这么溜上线了":["44.2"],"定位问题之后":["44.2"],"修复方案就简单多了":["44.2"],"也就一行代码的事情":["44.2"],"我们可以把白名单的备份传入这个交集函数":["44.2"],"如下":["44.2","127.52","195.7"],"又或者":["44.2"],"我们可以让函数自己负责防错":["44.2"],"阴阳":["44.3"],"在工作中":["44.3"],"很多工程师只考虑了前一种设计而忽视":["44.3"],"遗漏了后一种设计":["44.3"],"我想这就是这些工程师看上去都非常忙的原因":["44.3"],"他们的时间大都花在了事后的补救上":["44.3"],"这把他们的精力都耗光了":["44.3"],"难怪最后他们会变成平庸之辈":["44.3"],"而卓越工程师则恰恰相反":["44.3"],"他们早就把防错设计融汇在了自己的工作和生活中":["44.3"],"在实践中灵活应用防错设计的防错思维":["44.3"],"在第一次就把所有的事情做对":["44.3"],"如果你和笔者一样是一个软件工程师":["44.3"],"其他行业也大同小异":["44.3"],"你应该知道并不是每一个人都能从0到1开始设计和研发一个新的产品":["44.3"],"系统":["44.3"],"流程":["44.3"],"因为大力出奇迹":["44.4"],"在后文中":["44.4"],"我将会交替使用":["44.4"],"checklist":["44.5"],"有趣的是":["44.5"],"笔者有一个朋友也有一个checklist":["44.5"],"他是为了避免在去游泳时忘带重要的装备而设置的":["44.5"],"比如说":["44.5"],"泳裤":["44.5"],"泳镜或者泳帽之类的":["44.5"],"而笔者自己就忘拿过泳裤":["44.5"],"而且是在打车到游泳馆":["44.5"],"买了票":["44.5"],"进到更衣室":["44.5"],"脱了衣服之后才发现的":["44.5"],"值得一提的是":["44.5"],"checklist确实是一种高效的防错手段":["44.5"],"有兴趣的读者可以阅读":["44.5"],"确保模块和函数只有一种正确的使用方式":["44.6"],"研发":["44.6"],"确保产出的文档不会被其他读者误解":["44.6"],"其次":["44.6"],"确定进行防错的具体环节":["44.6"],"本文开头例子中的交集函数":["44.7"],"如果是一个经验丰富的人来设计和实现":["44.7"],"有些操作的失败是可以接受的":["44.8"],"此时就继续运行":["44.8"],"不影响最终结果":["44.8"],"将失误的影响降到最低":["44.9"],"交易系统的发现能力和熔断能力":["44.9"],"具体的防错方法还是要根据实际情况具体选择":["44.9"],"不能一概而论":["44.9"],"如果一个产品能够通过防错设计在事前避免80":["44.9"],"的问题":["44.9"],"而另外20":["44.9"],"防错思维的执行":["44.10"],"还可以和迭代思维和灰度思维结合":["44.10"],"确定方案的可行性":["45.4"],"可靠性":["45.4"],"作为架构师处理下属的请求要权衡利弊":["45.5"],"适当地说不":["45.5"],"对于涉及新领域的项目":["45.5"],"家丑不可外扬":["45.6"],"保护好支持自己的下属":["45.6"],"统一战线":["45.6"],"在家庭内部解决分歧":["45.6"],"并鼓励他们":["45.7"],"这两种类型的人我都见过":["46.1"],"而他们在解决问题的能力上的差异":["46.1"],"我只能说是天壤之别":["46.1"],"下面":["46.1"],"实际原因":["46.2"],"来处理":["46.2"],"短期来看":["46.2"],"好像解决了问题":["46.2"],"但是长期下去却会发现问题并没有解决":["46.2"],"还是会反复出现":["46.2"],"这就是所谓的治标不治本":["46.2"],"解决问题最怕的就是不深刻":["46.2"],"那么后续的分析":["46.3"],"都会建立在这个错误的原因之上":["46.3"],"为了避免主观臆断带来的错误分析":["46.3"],"丰田的5":["46.3"],"why分析法非常推崇去现场实际勘查":["46.3"],"也就是所谓的":["46.3"],"现实":["46.3"],"现场":["46.3"],"现物":["46.3"],"第三":["46.3"],"why分析不是推卸责任":["46.3"],"和复盘一样":["46.3"],"在做5":["46.3"],"why分析的时候":["46.3"],"要让参与者聚焦在问题本身上":["46.3"],"就事论事":["46.3"],"而不是推卸责任":["46.3"],"一旦开始推卸责任":["46.3"],"即便能够用5":["46.3"],"why分析法找到问题的根因":["46.3"],"再以这些原因作为新的问题":["46.4"],"继续向下追问":["46.4"],"重复上一步的动作":["46.4"],"我们会得到一颗因果树":["46.4"],"或者一张网":["46.4"],"因果树":["46.4"],"或者网":["46.4"],"还不能直接使用":["46.4"],"因为这棵树上的内容可能会非常庞杂和琐碎":["46.4"],"此时我们还需对这棵树进行裁剪":["46.4"],"找到主要矛盾":["46.4"],"如果这个问题的回答是肯定的":["46.5"],"那么我可能找到了防止数据库宕机的通用解决方案":["46.5"],"甚至":["46.5"],"我可以注册一个专利":["46.5"],"或者提供一套技术解决方案":["46.5"],"然后因此而发一笔横财":["46.5"],"反而忽视了成长当中最重要的一环":["46.6"],"耐心地接受时间的漫漫浸润":["46.6"],"耐心的缺失":["46.6"],"毕竟":["46.7"],"在根因思维里":["46.7"],"当下的事情在未来还会有另外一个名字":["46.7"],"专注于数据处理":["47.2"],"包装":["47.2"],"万维网":["47.3"],"接受端解压缩":["47.4"],"在tcp":["47.4"],"无需从头开始":["47.5"],"适用于传输大文件":["47.5"],"adsp":["47.5"],"两个进程的消息携带着端口号一起发送给传输层":["47.6"],"分用":["47.6"],"即运输层将接收到的信息分发到不同的进程":["47.6"],"可差留用":["47.6"],"绝不认输":["47.6"],"ip":["47.7","50.4","51.1","138.35"],"ipx":["47.7"],"icmp":["47.7"],"igmp":["47.7"],"主要协议":["47.8"],"sdlc":["47.8"],"hdlc":["47.8"],"功能五":["47.9"],"比特编码":["47.9"],"常见协议":["47.9"],"rj45":["47.9"],"来说不那么的高效":["48.0"],"连接":["48.1"],"也可以用于拒绝非法的报文段和拒绝连接请求":["48.1"],"syn":["48.1"],"当syn":["48.1"],"0时":["48.1"],"表示当前报文段是一个连接请求报文":["48.1"],"该指标表示发送端发送数据到接收到对端数据所需的往返时间":["48.2"],"后便进入":["48.3"],"listen":["48.3"],"状态":["48.4","48.5","49.1","50.11","50.12","50.17"],"closed":["48.6"],"的状态":["48.6"],"那么就会导致服务端一直等待":["48.6"],"造成资源的浪费":["48.6"],"在建立连接中":["48.6"],"任意一端掉线":["48.6"],"都会重发":["48.6"],"ack":["48.7","50.14","50.17"],"连接是双向的":["48.9","50.16"],"所以":["48.9","50.16","175.9","175.13","207.10"],"可以将第二次和第三次握手合并":["48.10"],"延迟":["48.10"],"能收到":["48.11"],"的确认应答":["48.11"],"若":["48.11"],"发完确认应答后直接进入":["48.11"],"两种协议":["48.12"],"在定时器时间内接收到对端应答就取消定时器并发送下一段报文":["48.14"],"rtt":["48.15"],"的平均时间":["48.15"],"假设在良好的网络环境中":["48.16"],"每次发送数据都需要等待片刻肯定是不能接受的":["48.16"],"那么既然我们不能接受这个不那么高效的协议":["48.16"],"协议来说减少了等待时间":["48.17"],"提高了效率":["48.17"],"以后的报文已经接收":["48.18"],"遇到这种情况时":["48.18"],"实现了流量控制的功能":["48.19"],"接收方通过报文告知发送方还可以发送多少数据":["48.19"],"从而保证接收方能够来得及接收数据":["48.19"],"可能会中断":["48.20"],"快速重传":["48.21"],"快速恢复":["48.21"],"就将窗口大小乘二":["48.22"],"指数级增长肯定不能没有限制的":["48.22"],"mss":["48.23"],"具体算法分为两种":["48.24"],"重新开始慢开始算法":["48.25"],"这种方式在丢失多个包的情况下就不那么好了":["48.26"],"使用拥塞避免算法":["48.26"],"这时候":["48.27","71.13"],"知道对端是有多个包未收到":["48.27"],"会继续发送序号为":["48.27"],"接收方顺利接收并会发送":["48.27"],"此包发送完毕":["49.1"],"客户端和服务器进入established":["49.1"],"tcp连接成功":["49.1"],"而自己的序列号是seq":["49.2"],"客户端就进入了time":["49.2"],"时间等待":["49.2"],"注意此时tcp连接还没有释放":["49.2"],"必须经过2":["49.2"],"msl":["49.2"],"udp的头部开销比tcp的更小":["50.0"],"数据传输速率更高":["50.0"],"smtp等":["50.1"],"在网络体系结构中网络通信的建立必须是在通信双方的对等层进行":["50.1"],"不能交错":["50.1"],"在整个数据传输过程中":["50.1"],"数据在发送端时经过各层时都要附加上相应层的协议头和协议尾":["50.1"],"仅数据链路层需要封装协议尾":["50.1"],"部分":["50.1","138.27","147.5"],"也就是要对数据进行协议封装":["50.1"],"当报文发送之后":["50.2"],"是无法得知其是否安全完整到达的":["50.2"],"网络层将数据传递给传输层":["50.4","51.1"],"只去除":["50.4","51.1"],"提供了单播":["50.5"],"应用程序必须选择合适大小的报文":["50.6"],"从上面的动态图可以得知":["50.7"],"只有八字节":["50.8"],"相比":["50.8","115.0"],"793定义":["50.9"],"是面向连接的":["50.9"],"可靠的流协议":["50.9"],"而不是两次":["50.13"],"这是因为这是为了防止出现失效的连接请求报文段被服务端接收的情况":["50.13"],"当":["50.18","110.3","152.3","152.6","152.20","173.69","178.2","204.3","259.3"],"收到确认应答后":["50.18"],"也便进入":["50.18"],"是为数据的可靠传输打下了基础":["50.20"],"那么对应的数据":["50.23"],"假设丢失了":["50.23"],"最大的数据段大小取决于mss":["50.25"],"适用于实时应用":["50.28"],"ip电话":["50.28"],"视频会议":["50.28"],"直播等":["50.28"],"速度可以相对较慢的":["50.29","50.34"],"the":["50.31","65.18","65.29","72.5","195.8","216.6","217.7","251.2","260.0"],"network":["50.31"],"网络电传":["50.31"],"通过一个终端":["50.31"],"terminal":["50.31","260.4"],"登陆到网络":["50.31"],"configuration":["50.32"],"动态主机配置协议":["50.32"],"动态配置ip地址":["50.33"],"arp":["50.33"],"address":["50.33","125.9"],"resolution":["50.33","236.1"],"对数据准确性要求高":["50.34"],"相较于":["51.0"],"比如电话会议":["51.2"],"就需要使用":["51.2"],"整个数据报文的长度":["51.3"],"整个数据报文的检验和":["51.3"],"ipv4":["51.3"],"可选":["51.3","69.10","71.25"],"多播":["51.4"],"广播的功能":["51.4"],"的身影":["51.5"],"并没有":["51.6"],"你可以假设每种输入只会对应一个答案":["52.1"],"所以返回":["52.2"],"的差值为2":["52.5"],"去":["52.5"],"中检索":["52.5"],"这个":["52.5","133.3"],"发现是之前出现过的值":["52.5"],"那么答案get":["52.6"],"有足够的空间":["52.7"],"空间大小大于或等于":["52.7"],"的末尾往前面填补":["52.10"],"整个补到":["52.11"],"前面去即可":["52.11"],"留下的情况":["52.12"],"特殊处理一下":["52.12"],"请你找出所有满足条件且不重复的三元组":["52.13"],"就计算一下两个指针指向数字之和加上固定的那个数之后":["52.15"],"是否等于0":["52.15"],"如果是":["52.15","209.8","265.0"],"那么我们就得到了一个目标组合":["52.15"],"否则":["52.15"],"分两种情况来看":["52.15"],"相加之和大于0":["52.15"],"左右指针一起前进":["52.16"],"若左指针元素重复":["52.16"],"跳过":["52.16"],"math":["52.17","104.0","106.25","127.50","154.14","156.24","158.3","164.3","179.33","181.0","285.2","285.12","286.19"],"的值":["52.18"],"right":["53.2","53.5","92.0","150.5","174.44"],"左":["53.3"],"left":["53.6","53.9","53.10","92.0","153.11","168.7","170.2","279.8"],"val":["53.8","59.1"],"右":["53.9"],"图":["54.1"],"trie树":["54.1"],"动态规划":["54.2"],"把右边的队头放入数组":["55.1"],"res":["55.2","115.0","126.5","158.4","164.4","173.87","175.6"],"否则就跳出循环":["55.3"],"break":["55.3","110.2","214.2","241.9"],"递减":["55.3"],"避免自己和自己进行交换":["55.4"],"进行交换数据":["55.4"],"交换数据":["55.5"],"n":["56.1","58.1","67.10","69.10","138.40"],"字符串只包含从":["57.2"],"a":["57.2","64.7","90.0","106.21","113.6","123.1","127.42","174.20","189.0","218.8","219.3","236.1","251.2","256.6"],"z":["57.2","61.13","64.7","170.8","179.3","295.1"],"的区间就是":["57.3"],"它对应":["57.3"],"c":["57.3","75.3","138.40","140.4","174.20","175.5","175.12","212.1","219.3","252.6"],"这个字符":["57.3"],"单个字符一定回文":["57.3"],"false":["57.4","62.15","65.11","69.3","70.0","100.9","113.5","127.16","127.17","133.4","179.11","179.27","191.3","215.2","232.1","236.4","245.0","251.0","286.23","286.61"],"说明":["57.6"],"那么一定是普通字符串":["57.7"],"includes":["57.7","95.32","95.33","239.3"],"定位到和目标字符串长度一致的字符串数组":["57.7"],"在其中查找是否存在该字符串":["57.7"],"否则是正则表达式":["57.7"],"要先创建正则表达式对象":["57.7"],"reg":["57.7"],"children":["59.1","81.6","89.13","95.42","174.37","232.3","236.6"],"地址作为链接标签":["60.0"],"相当于":["60.0"],"输出为":["60.0"],"setext":["60.0"],"式标题":["60.0"],"headings":["60.0"],"是一种轻量级标记语言":["60.0"],"用于格式化纯文本文档":["60.0"],"例如电子通讯":["60.0"],"usenet":["60.0"],"帖子和电子邮件":["60.0"],"与其他一些标记语言相比":["60.0"],"该标记易于阅读":["60.0"],"而无需任何解析或特殊软件":["60.0"],"markdown":["60.0","97.23"],"即可":["61.0","71.5","75.2"],"如果需要兼容不同比例的大屏":["61.0"],"并且想在不同比例中都有比较好的效果":["61.0"],"图表占满屏幕":["61.0"],"类似于移动端的响应式":["61.0"],"可以采用":["61.0"],"的方案":["61.0","152.13"],"至于":["61.0"],"个人觉得就是":["61.0"],"的综合":["61.0"],"就在":["61.3","115.0"],"计算出了单个":["61.3"],"的宽高":["61.3"],"当屏幕放大或者缩小时":["61.3"],"alias":["61.5"],"全局配置":["61.5"],"scs":["61.5"],"详细配置参考":["61.5"],"cli":["61.5","152.29"],"官网":["61.5","97.2"],"loaderoptions":["61.5","61.6"],"prependdata":["61.5"],"import":["61.5","61.6","61.18","81.3","95.40","96.6","97.20","98.9","111.2","127.9","157.2","177.7","177.10","195.4"],"全局配置utils":["61.6"],"scss":["61.6","95.29"],"additionaldata":["61.6"],"styles":["61.6","192.2"],"px2font":["61.7"],"html":["61.8","99.10","107.4","138.22","138.38","152.6","177.8","177.10","177.11","177.13","203.3","207.11","265.0","271.1","286.2"],"template":["61.8","101.5","154.4","154.5","154.10","154.11","154.17","256.8"],"class":["61.8","95.25","95.40","101.5","150.12","188.0","286.55"],"linechart":["61.8"],"ref":["61.8","65.27","156.3","286.38"],"这里要注意的是":["61.8"],"图表中如果需要":["61.8"],"utils":["61.9","61.18","97.2"],"vue":["61.9","61.19","97.23","97.26","98.3","100.6","200.16","218.5","219.10"],"fitchartfont":["61.9"],"这样你可以在":["61.9"],"文件中直接使用":["61.9"],"this":["61.9","69.10","112.4","162.2","173.10","173.76","216.3","219.10","236.1","283.8","286.8","286.70"],"从而达到自适应效果":["61.10"],"页面左右留白":["61.11","61.16"],"上下占满并居中":["61.11","61.16"],"设计稿的高度":["61.12"],"position":["61.12","92.0","106.15","153.11","227.1","279.8"],"然后利用":["61.13"],"将图表沿":["61.13"],"轴移动":["61.13"],"宽度等比":["61.14"],"高度等比":["61.14"],"等自适应方案":["61.14"],"jpg因此":["61.17"],"vm":["61.17","195.8"],"vh":["61.17"],"方案要解决三件事":["61.17"],"获得":["61.17"],"页面内写一段":["61.17"],"resize":["61.18"],"在入口文件":["61.18"],"中引入":["61.18"],"echarts企业级大屏项目适配方案":["61.19"],"rem":["61.19"],"我会被清除":["62.1","62.5"],"我们这里只说下本文章中所使用的ast":["62.2"],"即console":["62.3"],"代表当前的表达式":["62.4"],"这里":["62.5"],"这里console就是object的值":["62.6"],"memberexpression有一个属性property表示对象的属性":["62.6"],"这里log就是property的值":["62.6"],"memberexpression有一个属性computed表示访问对象是何种方式":["62.6"],"表示标识符的名字":["62.7"],"而且可能在开始":["62.9"],"中间":["62.9"],"结束这三种位置":["62.9"],"想拿到某个":["62.9"],"plugin":["62.10","95.21","205.4"],"会进入函数内部":["62.11"],"我们需要在函数内部修改":["62.11"],"我们需要遍历所有调用函数表达式":["62.11"],"如果符合":["62.12"],"hastarget":["62.14"],"some":["62.14","173.56","173.57","245.3"],"matchespattern":["62.14"],"标识是否有前缀注释":["62.15"],"leadingreserve":["62.15"],"标识是否有后缀注释":["62.15"],"trailreserve":["62.15"],"traverse":["62.15"],"竟然一个console没有删除":["62.16"],"经过排查":["62.16"],"我们大致确定了问题所在":["62.16"],"因为测试2的前缀注释同时也被ast纳入了测试1的后缀注释中了":["62.16"],"而测试3的后缀注释同时也被ast纳入了测试4的前缀注释中了":["62.16"],"production":["62.21","81.1","114.23","154.11"],"identifier":["63.0","230.2"],"name":["63.0","87.3","96.13","99.12","114.30","114.31","125.9","154.14","166.5","177.13","230.2","286.55"],"animal":["63.0"],"在这个结构中我们发现":["63.0"],"在阅读过程中建议将重心放在设计篇":["64.0"],"学习思想最重要":["64.0"],"subtract":["64.2"],"进行语法解析后得到的ast":["64.3"],"program":["64.3"],"callexpression":["64.3","214.3"],"params":["64.3","64.24","89.5","126.5","286.45"],"numberliteral":["64.3"],"进入":["64.4","204.2"],"到该节点":["64.4"],"我们会调用访问器":["64.4"],"然后会调用针对于这个节点的相关函数":["64.4"],"同时这个节点和其父节点作为参数传入":["64.4"],"在exit":["64.4"],"离开":["64.4"],"的时候我们也希望能够调用访问器":["64.4"],"一个节点的时候":["64.4"],"最外层节点就相当于一个分支":["64.4"],"他是一个节点":["64.4"],"这个分支的内部依然存在若干节点":["64.4"],"就像上边遍历的那样":["64.4"],"我们会按照":["64.4"],"深度优先的原则":["64.4"],"依次遍历到这个分支的最内层":["64.4"],"当达到最内层的时候":["64.4"],"上的节点打印拼接最终还原为新的code":["64.5"],"自此编译器的执行过程就结束了":["64.5"],"但是他是没有":["64.7"],"letters":["64.7"],"因为参数的if判断里会让":["64.8"],"实际上就是持续向后遍历了tokens":["64.8"],"然后将参数推入params":["64.8"],"当while中断后就说明参数读取完了":["64.8"],"现在下一个应该是":["64.8"],"所以我们":["64.8"],"越过":["64.8"],"最终将callexpression节点返回了":["64.8"],"当然这里做了容错处理":["64.8"],"如果没有匹配到预计的类型":["64.8"],"就说明出现了":["64.8"],"parse无法识别的token":["64.8"],"throw":["64.8","64.9","99.7","162.2","206.16"],"new":["64.8","64.9","89.5","98.7","99.6","102.2","117.1","125.0","126.3","127.41","154.11","169.4","173.29","175.4","177.3","177.14","195.7","206.0","206.1","206.12","223.1","225.4","283.10","289.1"],"typeerror":["64.8","64.9","127.3"],"字符串和数字没有子节点需要访问直接跳过":["64.9"],"stringliteral":["64.9"],"最后容错处理":["64.9"],"default":["64.9","64.12","81.5","95.45","97.7","97.13","99.8","102.1","102.5","156.6","156.8","156.18","156.19"],"当执行到这里时":["64.9"],"说明该节点":["64.9"],"分支":["64.9"],"在原来的节点上再创建一个新的属性":["64.10"],"用于存放参数":["64.10"],"这样当子节点修改":["64.10"],"context时":["64.10"],"会同步到expression":["64.10"],"arguments中":["64.10"],"这里用的是同一个内存地址":["64.10"],"这里需要判断父节点是否是调用语句":["64.10"],"如果不是":["64.10"],"的遍历":["64.11"],"维护了整棵树的状态":["64.11"],"并且负责替换":["64.11"],"移除和添加节点":["64.11"],"可以把":["64.11"],"生成源码":["64.11"],"同时生成":["64.11"],"sourcemap":["64.11"],"types":["64.11","95.16","186.3","248.1"],"用于":["64.11","177.7"],"节点的":["64.11"],"lodash":["64.11"],"式工具库":["64.11"],"它包含了构造":["64.11"],"验证以及变换":["64.11"],"节点的方法":["64.11"],"对编写处理":["64.11"],"逻辑非常有用":["64.11"],"从path中解析出当前":["64.12"],"节点":["64.12","100.7"],"找到hello的节点":["64.12"],"替换成world":["64.12"],"如果是箭头函数":["64.13"],"那么就会进来此函数":["64.13"],"参数是箭头函数的节点路径对象":["64.13"],"arrowfunctionexpression":["64.13"],"node":["64.13","95.9","95.33","97.36","154.8","154.12","186.1"],"functionexpression":["64.13"],"core":["64.14","87.8","115.0","195.8","275.2"],"babel核心模块":["64.14"],"找到当前箭头函数要使用哪个作用域内的this":["64.14"],"也就是var":["64.14"],"找出当前箭头函数内所有用到this的地方":["64.14"],"将当前箭头函数中的this":["64.14"],"找到方法名":["64.15"],"line":["64.15","242.1"],"column":["64.15"],"loc":["64.15"],"start":["64.15","68.1","178.4","241.7"],"找到所处位置的行和列":["64.15"],"向右边添加我们的行和列信息":["64.15"],"找到文件名":["64.15"],"这样是不是直观多了":["64.16"],"优化后的代码":["64.16"],"含完整注释":["64.16"],"用于共享":["64.16"],"buildcodeframeerror":["64.17"],"代码中不能出现console语句":["64.17"],"error":["64.17","64.21","86.7","112.1","159.13","162.2","184.17","196.8","217.4"],"抛出一个语法错误":["64.17"],"如果启动了fix":["64.17"],"就删掉该节点":["64.17"],"parentpath":["64.17"],"remove":["64.17","221.3","222.4"],"遍历后":["64.17","64.21"],"取出后进行重命名":["64.18"],"entries":["64.18","127.24"],"key":["64.18","98.7","99.8","125.0","153.11","181.0","190.6","195.3","207.18","214.2","228.2","243.15","250.2"],"newname":["64.18"],"遍历批量导入声明数组":["64.19"],"declarations":["64.19","89.5"],"specifier":["64.19"],"返回一个importdeclaration节点":["64.19"],"这里也可以用template":["64.19"],"详细细节可以看之前的一篇文章":["64.20"],"我是如何带领团队从零到一建立前端规范的":["64.20"],"这三种方式虽然解决方案不同":["64.20"],"但原理还是大同小异的":["64.20"],"类型":["64.21"],"post":["64.21","64.22","111.2","175.1","216.5"],"targetsource":["64.21"],"parseropts":["64.21"],"无法把":["64.22"],"赋值给":["64.22","217.2"],"get":["64.24","96.12","96.14","115.0","173.57","179.57","248.1","250.2"],"然而如果你查找的是很明确并且是表层的节点":["64.24"],"那么手动去查找它们会避免代价更高的遍历":["64.24"],"可是我们忽略了类型定义是可以嵌套的":["64.26"],"于是使用上面的遍历方式最终也会找到嵌套的":["64.26"],"codebase":["65.1"],"ci的基础上改进":["65.1"],"runners":["65.4","65.8"],"使用公共的runner":["65.4"],"或者自己创建一个runner":["65.4"],"latest":["65.10","68.6","114.21"],"note":["65.10","115.0"],"macos上面的共享文件夹要设置为":["65.10"],"untagged":["65.11"],"locked":["65.11"],"access":["65.11","179.51"],"level":["65.11","106.3"],"not":["65.11","102.5","148.4","162.2","173.98","218.8"],"protected":["65.11"],"在gitlab左侧的导航栏不会有gitlab":["65.12"],"runner这个tab":["65.12"],"在项目的setting":["65.12"],"cd":["65.12","67.12","68.8"],"ansible":["65.13"],"documentation":["65.13"],"yaml中不像json那样无法注释":["65.16"],"job":["65.17","65.21"],"并对此任务进行针对配置":["65.17"],"for":["65.18","97.19","100.8","127.48","173.21","179.54","179.56","206.14","214.1","226.1","230.1","256.6"],"yml":["65.18"],"build":["65.19","95.16","97.61","113.1","114.26","219.10"],"only":["65.21","95.5","106.35","148.2","152.30","191.3","195.4","214.1","248.1"],"java":["65.22","173.57"],"etc":["65.22","67.7","68.12"],"执行在所有的stages之前":["65.23"],"执行在所有的stages之后":["65.23"],"paths":["65.25","95.20","186.3"],"runner":["65.26","68.10","68.13","72.0"],"system":["65.26"],"ci":["65.27","67.2","68.8","80.4","95.16"],"commit":["65.27","71.16","87.43","97.40","97.54","97.57"],"name是一个gitlab的预设变量":["65.27"],"代表当前commit给哪个branch上了":["65.27"],"都是用来决定单个job执行时机的":["65.28"],"when":["65.29","109.4","236.4"],"always":["65.29"],"run":["65.29","81.2","83.5","84.1","86.9","97.61","113.1","114.23","225.0"],"pipeline":["65.29"],"在之前的stage执行后30mins后再运行这个任务":["65.30"],"时间单位可以是seconds":["65.30"],"minutes":["65.30"],"day":["65.30"],"merge":["65.32","95.16","286.45"],"requests":["65.32"],"配置在11":["65.32"],"deploy":["65.33"],"job5":["65.35"],"设置为手动执行的job3需要我们手动流水线点击进行执行":["65.35"],"如下为前4个jobs运行输出结果":["65.35"],"点击上图的各个jobs即可看到下图输出":["65.35"],"如设想的一样":["65.35"],"所有的jobs都按照设定执行了任务":["65.35"],"如图所示":["65.35"],"我们没有定义second":["65.35"],"target":["65.36","147.5","153.5","153.6","156.14","156.16","156.23","169.4","174.3","174.6","174.7","179.57","207.16","250.2"],"pull":["65.36"],"官方的镜像":["65.36"],"重命名为builder":["65.36"],"from":["65.36","96.6","102.4","111.2","133.4","133.5","157.2","195.7","206.5","236.1"],"as":["65.36","69.10","81.1","95.22","127.42","154.17","206.14","236.6","241.1","241.10","251.2"],"builder":["65.36"],"设置工作目录为":["65.36"],"app":["65.36","96.6","97.4","97.10","114.32","195.8","209.13"],"workdir":["65.36","113.7"],"按照package":["65.36"],"json来安装依赖":["65.36"],"无法统筹管理所有项目":["66.1"],"配置依赖于代码仓库":["66.1"],"job2":["66.3"],"第二个阶段的第二个事情":["66.3"],"是":["66.4","179.29","195.8","218.11","229.0"],"串行的":["66.4"],"前端叫做同步":["66.4"],"每个阶段的事情是":["66.4"],"bug":["67.0"],"的概率":["67.0"],"在新代码从开发到部署的过程中":["67.0"],"你可以创建一系列脚本进行自动测试":["67.1"],"降低往应用里引入错误的概率":["67.1"],"这就是持续集成":["67.1"],"cd配置中填写需要发布到服务器的相关信息":["67.2"],"将你所需要发布的项目下新建一个":["67.2"],"yml文件":["67.2"],"所有文件创建好之后":["67.3"],"执行":["67.3","173.52","177.12","209.4","247.1"],"容器名称":["67.3"],"p":["67.3","74.1","111.2","113.6","119.4","119.9","195.8"],"v":["67.3","102.0","156.10"],"png":["67.6","68.8","89.7","97.28","99.19","99.20","99.21","100.3","123.0","147.5","152.10","155.6","155.7","157.2"],"将公钥id":["67.6"],"config":["67.7","67.10","68.13","69.9","73.0","95.40","97.57","195.7"],"parallels":["67.8"],"virtualbox":["67.8"],"shell":["67.8","86.3"],"输入runner执行者":["67.8"],"eg":["67.8"],"ruby":["67.8"],"e":["67.10","140.4","153.5","153.6","156.14","159.13","184.16","235.4"],"host":["67.10"],"t":["67.10","95.47","218.4","232.2","249.0"],"stricthostkeychecking":["67.10"],"pub":["67.11"],"触发ci":["67.12"],"发布过程更为安全":["67.17"],"添加自动化测试":["67.17"],"完成从代码提交到自动打包编译到自动部署运行":["68.0"],"server":["68.1","117.2","119.11","220.3","241.1","241.10"],"systemctl":["68.1"],"version":["68.1","145.6"],"端口映射":["68.3"],"服务器端口":["68.3"],"容器内端口":["68.3"],"重启方式":["68.3"],"目录挂载":["68.3"],"把容器内目录挂载到服务器本地":["68.3"],"password":["68.4","126.4"],"查看默认密码":["68.4"],"用户登陆后":["68.4"],"cd能力的工具":["68.5"],"后台运行":["68.6"],"指定运行后的容器名":["68.6"],"的配置项":["68.7","68.13"],"在注册的时候需要用":["68.7"],"等":["68.8","97.19","97.21","97.25","97.34","152.15","175.12","177.14","178.0","209.14"],"注册成功后在":["68.8"],"刷新就可以看到":["68.8"],"到这":["68.8"],"我们基本的":["68.8"],"能力已经有了":["68.8"],"针对哪些目录启用缓存":["68.10"],"指定每个阶段执行的任务":["68.10"],"就是使用的":["68.10"],"指定阶段":["68.10"],"static":["68.11","195.7","214.2"],"50x":["68.11","114.11"],"vi":["68.13"],"home":["68.13"],"toml":["68.13"],"修改":["68.13","177.14","216.1"],"对相应的":["68.13"],"内容卷这加":["68.13"],"usr":["68.13"],"bin":["68.13"],"命令会自动生成":["69.2"],"eslintrc":["69.2"],"semi":["69.3","97.50"],"tabwidth":["69.3"],"trailingcomma":["69.3"],"和准确性":["69.4"],"以下只是几个常用的钩子":["69.4"],"判断提交的代码是否符合规范":["69.5"],"信息是否符合规范":["69.6"],"避免对以前的内容造成影响":["69.7"],"就像这样":["69.8"],"通过选择输入":["69.8"],"conventional":["69.9"],"msg":["69.9","87.43","133.2","133.4","133.5"],"unittest":["69.10"],"override":["69.10"],"messages":["69.10"],"defaults":["69.10","102.5","214.3"],"follows":["69.10"],"选择一种你的提交类型":["69.10"],"scope":["69.10","228.2"],"选择一个scope":["69.10"],"used":["69.10","220.2","232.4","252.6"],"allowcustomscopes":["69.10"],"customscope":["69.10"],"denote":["69.10"],"of":["69.10","107.4","195.4","252.5"],"change":["69.10","111.3"],"subject":["69.10"],"短说明":["69.10"],"长说明":["69.10"],"使用":["69.10","99.7","147.5","148.5","177.6","179.17","179.23","195.3"],"换行":["69.10"],"npm":["69.13","87.6","97.61","114.23","143.4","152.29"],"test":["69.13","83.4","95.16","108.2","113.7","154.12","177.6","286.33","295.1"],"提交代码前":["69.13"],"拉取代码":["70.0"],"checkout":["70.0"],"uses":["70.0"],"actions":["70.0"],"v2":["70.0","141.3","214.2"],"with":["70.0","97.61","148.2","206.5","212.1","219.6"],"persist":["70.0","218.4","232.2"],"credentials":["70.0"],"生成静态文件":["70.0"],"有版本管理机制":["71.1"],"各个引用方可以按需更新":["71.1"],"这些":["71.3"],"仓库都被包含在同一个主":["71.3"],"仓库":["71.4","97.18"],"a地址":["71.5"],"因为二者都是完整git仓库":["71.5"],"你希望":["71.6"],"仓库首页时":["71.7"],"或者拉下这个仓库时":["71.7"],"没有任何痕迹表明它是个submodule":["71.7"],"因为信息比较固定":["71.8"],"的代码":["71.9","72.5"],"仓库提交更新一样":["71.12"],"你可以在这里切换分支":["71.13"],"提交更新":["71.13"],"下面是git":["71.14"],"diff":["71.14","181.0"],"id":["71.16","154.13","160.0","167.1","168.3","178.2","178.7","195.7","195.8","228.2","256.4"],"不一致":["71.16"],"就会更新所有":["71.17"],"submodules":["71.17","71.24"],"需要提交下主项目的变更":["71.18"],"已经是最新的":["71.19"],"可能被其他同事提交过":["71.19"],"或者你期望":["71.19"],"这就按需clone了submodule":["71.21"],"什么时候有用呢":["71.21"],"跨团队协作某个主项目时":["71.21"],"的位置不可以调换噢":["71.22"],"只要不写submodule":["71.23"],"那么就一次性检查该主项目的所有submodule":["71.23"],"都拉下来":["71.23"],"主项目git仓库地址":["71.24"],"每一个任务":["72.0"],"都会在它自己的虚拟机":["72.0"],"运行器":["72.0"],"任务可以有一个或者多个":["72.0"],"步骤":["72.0"],"steps":["72.0"],"issue":["72.1","87.20","230.2"],"的时候自动添加一个标签":["72.1"],"你也可以在一个工作流中引用另外一个工作流":["72.1"],"事件完整的列表":["72.2"],"可以查看":["72.2"],"默认情况下":["72.3"],"任务没有依赖":["72.3"],"并行执行":["72.3"],"你可以写自己的动作":["72.4"],"或者在":["72.4","111.4"],"同步":["72.5"],"gitee":["72.5"],"是不是就清楚很多了":["72.5"],"synctogitee":["72.5"],"branches":["72.5","214.0"],"gh":["72.5"],"pages":["72.5"],"repo":["72.5"],"sync":["72.5"],"mirror":["72.5"],"organization":["72.5"],"repos":["72.5"],"to":["72.5","96.1","98.4","112.4","113.8","127.3","175.10","195.8","206.16","218.4","220.2","222.4","232.2","251.2"],"yikun":["72.5"],"hub":["72.5"],"master":["72.5","119.11"],"mqyqingfeng":["72.5"],"dst":["72.5"],"secrets":["72.5"],"private":["72.5"],"观察我们的脚本代码":["73.0"],"我们就会发现":["73.0"],"每次我们":["73.0"],"都是编译代码到":["73.0"],"目录":["73.0","113.7"],"然后重新":["73.0"],"最后强制提交":["73.0"],"所以我们在项目的根目录建立":["73.0"],"并没有什么用":["73.0"],"一来提交的是":["73.0"],"目录里的代码":["73.0"],"二是每次还都会清空重新编译生成代码提交":["73.0"],"为此":["73.0"],"我们可以在脚本里添加代码":["73.0"],"每次编译完后":["73.0"],"再拷贝外层的":["73.0"],"到":["73.0","193.7"],"目录里":["73.0","176.19"],"再提交到":["73.0"],"所以我们依然在项目根目录添加目录和文件":["73.0"],"此时的文件结构如下":["73.0"],"readme":["73.0"],"md":["73.0","296.3"],"package":["73.0","191.2","199.4","254.11"],"json":["73.0","87.9","87.24","87.26","97.23","99.6","112.1","126.4","130.12","231.5"],"脚本文件代码如下":["73.0"],"下面我们探索下如何实现跨平台的文件系统操作":["74.0"],"变量引用":["74.0"],"环境变量设置":["74.0"],"特别说明":["74.0"],"环境的同学建议使用":["74.0"],"git":["74.0","97.42","177.14"],"来运行":["74.0"],"mkdir":["74.1"],"使用上面这几个小工具改造":["74.1"],"对改动的几点说明":["74.3"],"直接替换成":["74.3"],"的替换需特别说明下":["74.3"],"默认是不覆盖的":["74.3"],"需要显示传入":["74.3"],"配置项":["74.3"],"yarn":["74.5","74.8"],"add":["74.5","74.8","83.3","97.50","195.4","206.8","214.2","216.3"],"来实现":["74.7","140.3"],"里面引入的":["74.10"],"subsystem":["74.10"],"让你不用虚拟机即可在":["74.10"],"符号替换成":["75.2"],"来结束进程":["75.3"],"如果没加的话":["75.3"],"添加到项目依赖中":["75.4"],"xxx":["75.7","100.0"],"cover":["76.2","83.1"],"r":["76.3","104.0","119.4","177.6"],"答案是肯定的":["77.0"],"下面来逐一介绍":["77.0"],"bashrc":["77.1"],"github":["77.2","86.1","96.11","97.18","116.3","262.0"],"lukechilds":["77.2"],"将退出并显示错误":["78.0"],"而不是更新":["78.0"],"一次只能安装整个项目":["78.0"],"无法添加单个依赖项":["78.0"],"json依赖":["78.1"],"防止由错误的依赖版本造成的故障":["78.1"],"没有的话报错":["79.0"],"检查是否存在":["79.0"],"posttest":["79.0"],"内置的":["80.1"],"就会直接使用":["80.2"],"互不影响":["80.3"],"用户也可以选择安装到全局":["80.3"],"只需要在安装命令后带上":["80.3"],"或者通过":["80.4"],"工具的时候":["80.4"],"就会安装相同版本的依赖":["80.4"],"这样就会避免":["80.4"],"typescript":["81.0","239.3"],"less":["81.0","96.5","97.39","177.7"],"导出组件":["81.1"],"mode":["81.1","120.3","154.11","276.0"],"组件里面可以放我们的组件测试代码":["81.1"],"所以开发环境这一步是必要的":["81.1"],"但是生产环境渲染节点会显得多余":["81.1"],"所以生产环境不需要这一步":["81.1"],"主要是react18":["81.1"],"createroot不能使用多次":["81.1"],"否则开发者使用该包时控制台会报警告":["81.1"],"createroot":["81.1","210.0","239.5"],"getelementbyid":["81.1"],"root":["81.1","95.20","177.13","195.4","209.13"],"htmlelement":["81.1"],"打包输出目录":["81.2"],"outdir":["81.2"],"dist":["81.2","87.17","95.10","95.20","97.2"],"执行打包命令":["81.2"],"ts":["81.3","87.38","232.1","256.2"],"按钮":["81.3","195.4"],"exports":["81.3","87.16","95.22","95.40","154.6"],"可以去":["81.4"],"官网去搜索自己的包名或者在自己的包列表查看":["81.4"],"使用中的问题":["81.5"],"样式没加载":["81.5"],"文件来解决":["81.6"],"reactnode":["81.6"],"declare":["81.6"],"xbuttontype":["81.6"],"primarycolor":["81.6"],"publish":["81.7","142.13"],"原则":["82.0"],"因为使用这些变量之后":["82.0"],"就具备了自适应的能力":["82.0"],"我们可以直接把积累起来的":["82.0"],"dummy":["82.1"],"echo":["82.1","275.2"],"可以方便的让我们在文件被修改":["83.2"],"添加":["83.2","99.9","171.0"],"all":["83.5","95.46","148.4","177.13","214.2","236.5"],"来运行所有的":["83.5"],"要格外注意":["84.1"],"参数前面的":["84.1"],"列出来的命令列表不能把注释和实际命令对应上":["84.3"],"如果你声明了多个":["84.3"],"替代":["84.4"],"这种做法能让":["84.4"],"列出来的命令更美观":["84.4"],"这类需求可通过控制运行时日志输出级别来实现":["84.5"],"日志级别控制参数有好几个":["84.5"],"配置":["84.7","97.32"],"代码都符合规范的话":["84.7"],"你不会看到任何输出":["84.7"],"返回值":["84.8","206.10"],"下面的截图只是部分":["84.8"],"按回车确认就能把package":["86.1"],"的内容写到文件系统":["86.1"],"如果要修改":["86.1"],"可以直接用编辑器编辑":["86.1"],"或者再次运行":["86.1"],"license":["86.2"],"mit":["86.2"],"中执行上述命令":["86.3"],"系统默认":["86.3"],"通常是":["86.3"],"bash":["86.3","275.1"],"linebreak":["86.7"],"unix":["86.7","175.10"],"quotes":["86.7"],"no":["86.8","154.15","195.8","219.6","220.2"],"specified":["86.8"],"文件配置":["87.0"],"脚本配置":["87.0"],"依赖配置":["87.0"],"发布配置":["87.0"],"官网上":["87.1"],"react":["87.2","95.43","205.9"],"能共同构成一个完全唯一的项目标识符":["87.3"],"所以它两是最重要的两个字段":["87.3"],"directory":["87.4"],"packages":["87.4","87.18"],"building":["87.5"],"好的关键词可以帮助别人在":["87.6"],"reactjs":["87.7"],"org":["87.7","114.29","195.4","263.1"],"vuejs":["87.8"],"一般情况下":["87.12"],"里会指定构建出来的产物以及类型文件":["87.12"],"index":["87.13","87.15","96.3","101.3","102.1","153.11","154.4","154.5","154.10","154.11","154.17","170.8","177.6","177.13","190.6","243.2","279.8","280.1"],"如果还要使用":["87.13"],"commonjs":["87.13"],"那么需要将":["87.13"],"字段指定为":["87.14"],"mainfields":["87.16"],"packagea":["87.17"],"我们可以使用":["87.17"],"来封装文件路径":["87.17"],"通常子项目都会平铺管理在":["87.18"],"目录下":["87.18"],"所以根目录下":["87.18"],"参考":["87.20","106.22"],"讨论":["87.20"],"如果需要手动开启":["87.20"],"项目可以设置":["87.20"],"npmrc":["87.20"],"enable":["87.20"],"process":["87.21"],"env":["87.21","95.23","166.7","195.4"],"dom":["87.23","99.10","99.13","157.2","175.16","178.0","193.7","206.11","241.1","241.10","241.12"],"optional":["87.26","87.27"],"时":["87.26","156.22","173.69","179.14","179.19","179.20","192.3"],"依赖会被自动插入到该字段中":["87.26"],"普通依赖通常从":["87.28"],"registry":["87.28"],"安装":["87.28","113.0"],"但当你想用一个不在":["87.28"],"npmjs":["87.32","191.2"],"也不影响安装依赖包":["87.33"],"版本号需要大于":["87.34"],"darwin":["87.35"],"ia32":["87.36"],"global":["87.40"],"里设置了如下的":["87.42"],"来告知":["87.42"],"这些文件具有副作用":["87.42"],"引入后不能被删除":["87.42"],"工作流程中比如":["87.43"],"pre":["87.43","241.1","241.10","256.5","258.6"],"使用更佳":["88.1"],"updated":["88.2","195.9","236.2","256.8"],"基础表现形式还是树结构的展现形式":["89.1"],"因为对应的":["89.1"],"菜单":["89.1"],"这里因为不同的公司或者系统可能对于这部分的数据录入方式不同":["89.2"],"所以久不贴图了":["89.2"],"尽管页面上的没有":["89.4"],"path1对应的菜单显示":["89.4"],"我们直接在浏览器输入对应的path1":["89.4"],"还是可以访问到对应的页面":["89.4"],"这是因为系统路由那一块其实我们是没有去处理的":["89.4"],"这里的数据通过接口返回菜单页面的权限是什么":["89.5"],"codearray":["89.5"],"inner":["89.5","106.17"],"routesparam":["89.5"],"authmenuarray":["89.5"],"join":["89.5","295.1"],"setitem":["89.5"],"urlparams":["89.5"],"url":["89.5","123.1","126.5","134.3","167.0","175.21","195.4"],"redirecturlparams":["89.5"],"substr":["89.5"],"code已经存在":["89.6"],"证明是页面数据渲染之后或者弹出框的按钮资源":["89.6"],"不需要走dva了":["89.6"],"indexof":["89.6"],"checkauthority":["89.6"],"inline":["89.6"],"是没有":["89.8","112.2"],"权限":["89.8"],"可发货":["89.9"],"可配货":["89.9"],"6表示这个用户对于这条记录用编辑和发货的权限":["89.10"],"data":["89.11","96.14","98.5","98.10","103.15","113.7","126.2","133.7","153.11","167.3","179.41","210.0","286.44","294.1"],"obj":["89.11","127.10","236.2"],"二进制字符串转换成二进制数据":["89.12"],"checkpermissiontype":["89.13"],"tostring":["89.13","99.7","127.14","195.8"],"单条数据操作":["89.13"],"如果字段没有值的情况下":["89.13"],"证明不需要进行数据权限":["89.13"],"二进制检查当前当前数据是否具有当前权限":["89.13"],"param":["89.13"],"permissiontype":["89.13"],"parseint":["89.13","216.4"],"render":["89.13","98.13","209.1","216.5","256.8"],"height":["90.0","103.3","106.27","122.11","153.7","156.3"],"visibility":["90.0","106.14"],"hidden":["90.0","106.39"],"clear":["90.0","154.11","206.14"],"both":["90.0","179.9"],"zoom":["90.0"],"filter":["91.0","170.6","212.1","214.2"],"alpha":["91.0"],"不可用状态":["91.0"],"disabled":["91.0","216.1"],"bgcolor":["91.0"],"e6e6e6":["91.0"],"textcolor":["91.0"],"ababab":["91.0"],"background":["91.0","106.23"],"color":["91.0","106.6","156.2"],"size":["92.0","127.35","216.4"],"老生常谈的":["92.0"],"问题":["92.0","180.2"],"下边框":["92.0"],"bordertopbot":["92.0"],"bordercolor":["92.0"],"relative":["92.0","153.7"],"absolute":["92.0","106.15","106.51","153.11","170.8"],"top":["92.0","97.4","170.8","175.4","279.8"],"应用接口可能存在一些字段需要在前端应用业务操作的同时":["93.2"],"会有部分页面不需要的字段冗余到前端":["93.2"],"因为bff端会封装页面确定需要的查询形式":["93.3"],"不是中心透传":["93.3"],"总结":["93.4","126.8","147.2"],"数据字典相关的字段":["93.4"],"或者明确静态数据的情况":["93.4"],"前端需要取舍后端返回的错误信息":["93.7"],"文件":["94.3","173.87","177.8","177.9"],"serve":["94.6"],"后续就是添加我们自己喜欢保存的内容了":["94.8"],"ahooks":["95.1"],"dev":["95.3","212.1","219.3","236.1"],"跑起来":["95.3"],"下面开始工程化改造":["95.3"],"module":["95.4","95.40","154.6","154.9","195.7"],"prettier":["95.8","97.1"],"lokalise":["95.8"],"public":["95.10","97.36","154.4","154.5","154.10","154.17"],"consistent":["95.13","97.22"],"bracketspacing":["95.13"],"bracketsameline":["95.13"],"docs":["95.16"],"refactor":["95.16"],"chore":["95.16","97.50"],"revert":["95.16"],"wip":["95.16"],"workflow":["95.16"],"release":["95.16","97.50"],"deps":["95.16"],"hooks":["95.18","236.5"],"client":["95.20","205.11"],"exclude":["95.20","95.32","154.8","216.7","236.1"],"modules":["95.20","97.52","154.8","154.12","173.95"],"其中比较重要的配置是":["95.20"],"告诉tsconfig我们的根目录":["95.20"],"它会影响":["95.20"],"vite":["95.21","103.0"],"title":["95.22","101.5","115.0","126.4","279.1"],"pageprops":["95.22"],"pagetype":["95.22"],"的axios封装进行二次修改":["95.23"],"主要是区分browser":["95.23"],"node环境":["95.23"],"axiosrequest":["95.23"],"createaxios":["95.23"],"requestoptions":["95.23"],"urlprefix":["95.23"],"isbrowser":["95.23"],"meta":["95.23","121.7"],"apiprefix":["95.23"],"apiurl":["95.23"],"16px":["95.25","95.31"],"任意值":["95.25"],"hover":["95.25"],"variants":["95.26"],"767px":["95.28"],"sm":["95.28"],"pxtoviewport自适应":["95.30"],"px":["95.32","106.24","195.4"],"pxtoviewport转化":["95.36"],"暗黑主题":["95.37"],"暗黑主题基于tailwindcss的dark模式和antd5的动态主题能力":["95.37"],"green":["95.39","106.6"],"tailwindcss":["95.40"],"darkmode":["95.40"],"theme":["95.40"],"extend":["95.40","148.3","239.3"],"colors":["95.40"],"darkalgorithm":["95.42"],"至此":["95.42","158.5","164.5"],"我们实现了antd的动态暗黑主题":["95.42"],"但这时候还有一些小问题":["95.42"],"网页加载的一瞬间如果客户端是暗黑模式":["95.42"],"languagedetector":["95.43"],"pagecontextinit":["95.45"],"urloriginal":["95.45"],"传给服务端渲染模板":["95.45"],"page":["95.45","96.2"],"tsx":["95.45"],"lookupcookie":["95.46"],"hot":["95.46"],"accept":["95.46"],"newmodule":["95.46"],"reloadresources":["95.46"],"reload":["95.46","151.9"],"服务端渲染":["95.46"],"客户端渲染相同入口":["95.46"],"i18nextprovider":["95.46"],"ally":["95.48"],"usage":["95.49","114.30"],"scanningignore":["95.49"],"配好后我们可以看到如下效果":["95.49"],"mock":["96.0"],"搭建完整项目":["96.0"],"全局路由守卫的方法跟vue":["96.1"],"router3一样":["96.1"],"路由全局前置守卫":["96.1"],"beforeeach":["96.1"],"路由全局后置守卫":["96.1"],"aftereach":["96.1"],"h1":["96.2","98.13","115.0","154.13"],"h2":["96.2","115.0","159.2","159.9"],"button":["96.2","154.13","205.15","286.47"],"click":["96.2"],"handleclick":["96.2"],"上面的代码实现的就是一个简单的自加功能":["96.2"],"和默认示例工程的效果事一样的":["96.2"],"只不过我们使用vuex":["96.2"],"集成element":["96.2"],"plus":["96.2","195.4"],"element":["96.2","218.5","236.1","241.9"],"plus是由饿了么大前端团队开源出品的一套为开发者":["96.2"],"设计师和产品经理准备的基于":["96.2"],"assets":["96.5","97.2"],"确保您的":["96.6"],"文件被导入到您的":["96.6"],"createapp":["96.6","218.10","218.11"],"数字":["96.7","122.6","286.13"],"布尔值":["96.7","173.70"],"日期":["96.7"],"邮箱":["96.7"],"mock对象提供了4个方法":["96.10"],"分别是":["96.10","114.3"],"setup":["96.10","97.61"],"valid":["96.10"],"是属性值":["96.11"],"属性值中可以嵌套使用属性名和生成规则":["96.11"],"具体的生成规则参见":["96.11"],"使用jquery":["96.12"],"ajax发送请求":["96.12"],"生成一个英文名字":["96.13"],"生成一个中文名字":["96.13"],"chinesename":["96.13"],"getusers":["96.14"],"code":["96.14","97.19","100.9","114.25","168.22","173.56","175.6","214.3","276.0","295.9"],"ok":["96.14","97.32","100.9"],"tom":["96.14"],"jerry":["96.14"],"修改mock":["96.14"],"请求接口":["96.14"],"自动部署":["97.0"],"editorconfig":["97.1"],"eslint":["97.1"],"stylelint":["97.1","97.32"],"代码规范":["97.1"],"commitizen":["97.1"],"更多配置项及用法":["97.2"],"请查看":["97.2"],"规范目录结构":["97.2"],"接口请求目录":["97.2"],"静态资源目录":["97.2"],"common":["97.2"],"通用类库目录":["97.2"],"components":["97.2","195.9"],"公共组件目录":["97.2"],"router":["97.2"],"路由配置目录":["97.2"],"store":["97.2","216.2"],"状态管理目录":["97.2"],"通用样式目录":["97.2"],"scrollbehavior":["97.4"],"el":["97.4","216.2","218.8"],"behavior":["97.4"],"smooth":["97.4"],"mount":["97.5","97.8","156.10","195.7","218.10","222.7"],"集成":["97.5","97.8","97.32","97.50"],"library":["97.11","275.2"],"next":["97.11","115.0","127.24","148.3","218.4","222.4","232.2","236.6"],"之后在":["97.13"],"文件夹中以业务模型对接口进行拆分":["97.13"],"举个例子":["97.13"],"将所有跟用户相关接口封装在":["97.13"],"类中":["97.13"],"此类称作用户模型":["97.13"],"类中比如有登录":["97.13"],"注册":["97.13"],"获取用户信息等方法":["97.13"],"如果有业务逻辑变动":["97.13"],"只需要修改相关方法即可":["97.13"],"内部已帮我们集成了相关的":["97.14"],"loader":["97.14","193.8","195.4"],"书写规范":["97.16"],"reference":["97.17","236.1"],"需要的同学可以去下载下来":["97.18"],"参考学习":["97.18"],"接下来增加代码规范约束":["97.18"],"提交规范约束":["97.18"],"中会默认支持此配置":["97.19"],"但是也有些不支持":["97.19"],"如":["97.19","115.0","156.26","174.20"],"vscode":["97.19","260.0"],"atom":["97.19"],"sublime":["97.19"],"text":["97.19","97.35","133.2","133.4","133.5","156.14","177.8","214.1","215.2","236.6","279.7"],"具体列表可以参考官网":["97.19"],"如果在":["97.19"],"中使用需要安装":["97.19"],"vs":["97.19"],"插件":["97.19"],"idea":["97.21","97.34"],"methods":["97.22"],"要求构造函数首字母大写":["97.22"],"cap":["97.22"],"强制一致地使用":["97.22"],"声明或表达式":["97.22"],"func":["97.22","140.2"],"强制一行的最大长度":["97.22"],"max":["97.22","181.0","216.4","216.7"],"len":["97.22"],"要求":["97.22","103.0"],"语句要么总是指定返回的值":["97.22"],"要么不指定":["97.22"],"强制switch要有default分支":["97.22"],"case":["97.22","222.4"],"graphql":["97.23"],"则不用额外安装插件":["97.25"],"可直接使用":["97.25","205.8"],"文件中的":["97.26"],"内不用缩进":["97.26"],"vueindentscriptandstyle":["97.26"],"换行符使用":["97.26"],"lf":["97.26"],"endofline":["97.26"],"格式化嵌入的内容":["97.26"],"embeddedlanguageformatting":["97.26"],"svg":["97.28","171.0"],"中与":["97.30"],"中会发生冲突的规则":["97.30"],"最后点击":["97.32"],"apply":["97.32","100.8","179.22","179.28","283.8","286.70"],"是一个强大":["97.32"],"radius":["97.35","170.8","170.14"],"indent":["97.35","229.0"],"代码自动检测":["97.37"],"详情查看官方迁移指南":["97.37"],"slotted":["97.39"],"customsyntax":["97.39"],"postcss":["97.39","177.7"],"就对所提交的代码进行":["97.40"],"检测和修复":["97.40"],"即执行":["97.40"],"fix":["97.40"],"如果这些代码没通过":["97.40"],"但是又存在一个问题":["97.41"],"有时候明明只改动了一两个文件":["97.41"],"却要对所有的文件执行":["97.41"],"假如这是一个历史项目":["97.41"],"在中途配置了":["97.41"],"规则":["97.41"],"那么在提交代码时":["97.41"],"也会对其他未修改的":["97.41"],"历史":["97.41"],"文件都进行检查":["97.41"],"暂存区的文件":["97.42"],"就可以在每次提交之前对所有代码进行格式化":["97.45"],"保证线上代码的规范性":["97.45"],"由":["97.46"],"header":["97.46","106.27","195.8"],"footer":["97.46"],"如果是组件库开发":["97.47"],"则可以依据组件划分":["97.47"],"是本次":["97.47"],"的简洁描述":["97.47"],"长度约定在":["97.47"],"个字符以内":["97.47"],"通常遵循以下几个规范":["97.47"],"应该说明修改的原因和更改前后的行为对比":["97.48"],"部分填写需要关闭的单个":["97.49"],"missing":["97.50","241.8"],"colons":["97.50"],"v3":["97.50"],"cz":["97.52"],"allowemptyissueprefixs":["97.53"],"本项目配置文件可参考":["97.53"],"通过":["97.57","102.5","106.39","151.12","172.0","178.5","179.31","193.7","195.2","206.15","209.3","223.1"],"此功能需借助":["97.57"],"来完成这一操作":["97.60"],"参考链接":["97.60"],"环境":["97.61","177.5"],"install":["97.61","114.23"],"安装依赖":["97.61"],"打包":["97.61"],"比如网站就是基于浏览器平台":["98.1"],"有应用":["98.1"],"有平台就得有用户":["98.1"],"因为应用本身就是为了给用户提供好用的功能去解决某些存在的问题":["98.1"],"针对开发者而言":["98.1"],"应用就是代码":["98.1"],"代码运行的质量也能决定应用的质量":["98.1"],"而显式质量体现在错误或警告上":["98.1"],"计算策略视具体情况而定":["98.2"],"用户点击按钮次数":["98.2"],"以上两种可以认为是":["98.2"],"自动式触发埋点":["98.2"],"中进行请求和接收响应时的错误":["98.3"],"组件级错误":["98.3"],"即使用":["98.3"],"累积布局偏移":["98.4"],"cumulative":["98.4","152.6"],"layout":["98.4","152.6","152.20"],"shift":["98.4","152.6","174.33","245.3"],"cls":["98.4","152.6"],"是为了测量":["98.4"],"视觉稳定性":["98.4"],"以便提供良好的用户体验":["98.4"],"累积布局偏移应保持在":["98.4"],"或更少":["98.4"],"首字节达到时间":["98.4"],"time":["98.4","173.99","195.6"],"byte":["98.4"],"内容":["98.5"],"核心内容简单设计如下":["98.6"],"json2formdata":["98.7"],"keys":["98.7","214.2","216.3"],"append":["98.7"],"自定义上报类型":["98.7"],"report":["98.7"],"tolocalestring":["98.7"],"userinfo":["98.8"],"当前用户":["98.8"],"username":["98.8"],"function":["98.9","109.6","125.6","126.3","141.2","147.5","173.56","175.5","176.6","179.33","179.57","229.0","232.1","249.0","256.2","259.2"],"then":["98.9","127.54","158.4","164.4","236.6"],"getcls":["98.9"],"getfid":["98.9"],"getfcp":["98.9"],"getlcp":["98.9"],"getttfb":["98.9"],"布局偏移量":["98.9"],"errorreport":["98.10"],"any":["98.12","185.5","232.3","241.1","241.10","252.5"],"自定义降级后的":["98.13"],"并渲染":["98.13"],"这是监控平台要解决的痛点之一":["99.0"],"错误还原":["99.0"],"web":["99.0","100.5","177.1","177.12","191.2"],"see":["99.0","100.5","230.2"],"监控提供三种错误还原方式":["99.0"],"errorcode":["99.1"],"如果把用户的所有操作都录制下来":["99.2"],"是没有意义的":["99.2"],"我们更关注的是":["99.2"],"页面报错的时候用户做了哪些操作":["99.2"],"首屏加载时间等":["99.3"],"过多的长任务会造成页面丢帧":["99.3"],"卡顿":["99.3"],"过大的内存可能会造成低端机器的卡死":["99.3"],"崩溃":["99.3"],"统计资源缓存率":["99.3"],"来判断项目的缓存策略是否合理":["99.3"],"提升缓存率可以减少服务器压力":["99.3"],"如何异常报警":["99.5"],"避免类似的错误发生":["99.5"],"错误数据采集":["99.5"],"错误信息是最基础也是最重要的数据":["99.5"],"错误信息主要分为下面几类":["99.5"],"事件捕获到":["99.6"],"可通过":["99.6","147.1"],"unhandledrejection":["99.6"],"事件来处理":["99.6"],"promise":["99.6","196.6"],"resolve":["99.6","167.3","173.56","283.2","283.10"],"reject":["99.6","173.56"],"parse":["99.6","126.5","141.8","239.2","290.1"],"err":["99.6","159.5","173.61","283.9"],"不能捕获promise中错误":["99.6"],"error事件":["99.6"],"istanbul":["99.7","219.10","231.1"],"inbrowser":["99.7"],"inweex":["99.7"],"typeof":["99.7","125.0"],"通过源码明白了":["99.7"],"export":["99.8","102.1","102.5","156.5","156.6","156.8","156.9","156.18","156.19","156.20","232.1","249.0","259.2"],"子组件代码":["99.8"],"子组件":["99.8","209.13"],"渲染出错":["99.8"],"list":["99.8","107.3","159.2","159.9","195.7","286.37","286.38"],"item":["99.8"],"crossorigin":["99.9"],"后可以捕获到完整的报错信息":["99.9"],"scripterror1":["99.9"],"如果不能修改服务端的请求头":["99.9"],"可以考虑通过使用":["99.9"],"try":["99.9"],"catch":["99.9","112.1","159.5","166.5","166.6","286.51","286.54"],"connectend":["99.10"],"浏览器和服务器之前建立连接的时间戳":["99.10"],"所有握手和认证过程全部结束":["99.10"],"secureconnectionstart":["99.10","151.7"],"浏览器与服务器开始安全链接的握手时的时间戳":["99.10"],"如果当前网页不要求安全连接":["99.10","151.7"],"返回":["99.10","220.7"],"requeststart":["99.10"],"浏览器向服务器发起":["99.10"],"请求":["99.10","154.3","175.1","175.22"],"或者读取本地缓存":["99.10"],"时的时间戳":["99.10"],"即获取":["99.10"],"responsestart":["99.10","151.7"],"浏览器从服务器接收到第一个字节时的时间戳":["99.10"],"responseend":["99.10"],"浏览器从服务器接受到最后一个字节时的时间戳":["99.10"],"domloading":["99.10"],"结构开始解析的时间戳":["99.10"],"readystate":["99.10"],"的值为":["99.10"],"loading":["99.10"],"dominteractive":["99.10"],"结构解析结束":["99.10"],"开始加载内嵌资源的时间戳":["99.10"],"的状态为":["99.10"],"interactive":["99.10"],"domcontentloadedeventstart":["99.10"],"所有需要执行的脚本执行完毕":["99.10"],"domcontentloadedeventend":["99.10","152.8","152.9"],"domcomplete":["99.10","152.8"],"文档完成解析的时间戳":["99.10"],"complete":["99.10","152.8","206.12"],"loadeventstart":["99.10","152.8"],"xhr":["99.11","175.4"],"monitor":["99.11"],"open":["99.11"],"pushdata":["99.11"],"重写pushstate事件":["99.12"],"replaceaop":["99.12"],"重写replacestate事件":["99.12"],"fn":["99.12","195.8","283.7"],"iscache":["99.14"],"判断资料是否来自缓存":["99.14"],"transfersize为0":["99.14"],"说明是从缓存中直接读取的":["99.14"],"强制缓存":["99.14"],"transfersize不为0":["99.14"],"字段为":["99.14"],"说明它走的是协商缓存":["99.14"],"表示请求响应数据":["99.14"],"的大小":["99.14"],"performanceobserver":["99.15"],"load":["99.16","152.8","195.6"],"遍历存放dom的数组":["99.17"],"找出最后变化节点的时间":["99.17"],"用该时间点减去":["99.17"],"performance":["99.17","115.0","151.4","152.30"],"timing":["99.17"],"navigationstart":["99.17","286.3"],"或事件":["99.18"],"在该回调中添加对应的函数即可":["99.18"],"entry":["99.19","195.7","216.4","219.6"],"bread":["99.21"],"transportdata":["99.22"],"send":["99.22"],"加载资源报错":["99.23"],"上报对应的资源报错信息":["99.23"],"通过这些异步的捕获":["99.23"],"了解监控平台的整体流程":["99.23"],"安装与使用":["99.23"],"npm官网搜索":["99.23"],"文件外":["100.0"],"还会额外生成一个":["100.0"],"所有映射点":["100.1"],"mappings":["100.1"],"aaaa":["100.1"],"iaam":["100.1"],"gaag":["100.1"],"uaac":["100.1"],"caaq":["100.1"],"eaac":["100.1"],"iac5b":["100.1"],"oaao":["100.1"],"caac":["100.1"],"本小节的代码仓库":["100.2"],"的还原流程":["100.2"],"从服务器获取指定":["100.2"],"一个":["100.2"],"的实例":["100.2","223.1"],"表示一个已解析的源映射":["100.2"],"一般我们只需要定位到":["100.3"],"函数的堆栈信息":["100.3"],"所以使用":["100.3"],"库的时候":["100.3"],"只取":["100.3"],"数组中的第一个元素":["100.3"],"最终代码":["100.3"],"originalpositionfor":["100.4"],"还原后的":["100.4"],"result":["100.4","148.2","206.8"],"结果为":["100.4"],"文件中得到对应的源码并展示":["100.5"],"前端录屏":["100.5"],"每":["100.6"],"个":["100.6","115.0"],"重新制作快照":["100.6"],"播放示例":["100.6"],"timestamp":["100.7","151.5","207.16"],"保证回放顺序":["100.7"],"回放时":["100.7"],"会创建一个":["100.7"],"iframe":["100.7","133.9"],"作为承载事件回放的容器":["100.7"],"针对首屏":["100.7"],"快照进行重建":["100.7"],"在遍历":["100.7"],"length":["100.8","110.2","127.31","153.12","159.2","159.5","159.13","169.4","173.91","174.12","174.16","236.6","241.4","241.8","243.2","285.1"],"slice":["100.8","173.98","286.37","286.38","286.40","286.63","291.2","295.2"],"zip":["100.9"],"不上报":["100.9"],"清空录屏":["100.9"],"此时子元素的1rem就相当于10px":["101.1"],"项目重启":["101.3"],"基于scale的适配方案":["101.3","101.5"],"在css3中":["101.3"],"我们可以使用transform属性的scale":["101.3"],"方法来实现元素的缩放效果":["101.3"],"缩放":["101.3"],"指的是":["101.3"],"缩小":["101.3"],"qq图片20220927112000":["101.5"],"screen":["101.5","147.3"],"container":["101.5","113.6","150.12","279.4"],"img":["101.5","150.12","175.16","177.10","286.65"],"debounce":["102.0"],"这时候还得靠依赖预构建":["102.0"],"预构建将":["102.0"],"整体转换为一个模块":["102.0"],"这样我们就只需要发起一个":["102.0"],"请求了":["102.0"],"总结一下":["102.0"],"依赖预构建为我们解决了以下三个头痛的问题":["102.0"],"兼容其他规范":["102.0"],"不同的第三方依赖包会有不同的导出格式":["102.0"],"重写导入路径":["102.0"],"或重写为":["102.0"],"fef37e66":["102.0"],"以便浏览器能够正确导入":["102.0"],"网络性能优化":["102.0"],"会将内部有众多依赖关系的":["102.0"],"模块转换为一个模块":["102.0"],"提高页面的加载性能":["102.0"],"对不同内容的处理":["102.0"],"学习一项技术":["102.0"],"我们最好单独使用它":["102.0"],"postcsspresetenv":["102.1"],"plugins":["102.1","102.5","154.11","205.4"],"然后我们来写一些特别的样式":["102.1"],"width":["102.1","122.11","147.3","153.7","153.11","286.71"],"clamp":["102.1"],"100px":["102.1","106.24","106.27","168.7"],"shader":["102.2"],"const":["102.2","107.2","109.6","112.2","127.6","127.41","133.2","173.22","181.0","195.7","243.1","248.1","250.1","286.1"],"field":["102.3"],"browserslist":["102.5"],"推荐的值":["102.5"],"targets":["102.5"],"ie":["102.5","172.0"],"同时我们还可以通过":["102.5"],"构建配置选项":["102.5"],"自定义构建过程":["102.5"],"rollupoptions":["102.5"],"直接调整底层的":["102.5"],"脚手架搭建简单的demo":["103.0"],"前端服务运行在localhost或者https下":["103.0"],"node需要redis进行数据缓存":["103.0"],"这是由于浏览器的安全策略限制":["103.1"],"必须授权摄像头或麦克风才能允许返回设备id和设备标签":["103.1"],"在获取了音视频之后":["103.2"],"获取的设备列表的详细信息已经出现":["103.2"],"我们就可以获取指定设备的音视频数据":["103.2"],"视频高度":["103.3","104.0"],"constrainulong":["103.3"],"视频宽度":["103.3","104.0"],"在开始之前需要科普一下webrtc的工作方式":["103.4"],"我们常见有三种webrtc的网络结构":["103.4"],"mesh":["103.4"],"mcu":["103.4"],"我们该怎么建立呢":["103.5"],"光说不做假把式":["103.5"],"接下来":["103.5"],"userid":["103.6"],"昵称":["103.6"],"nick":["103.6"],"io":["103.7","179.36"],"connection":["103.7","126.3"],"async":["103.7","179.18","179.29"],"setlocaldescription":["103.8"],"sdp":["103.9"],"rtcsessiondescriptioninit":["103.9"],"await":["103.9","103.16","283.5","286.44","286.51"],"peerconnect":["103.9"],"addicecandidate":["103.10"],"接下来b也会获取到ice候选信息":["103.10"],"同理需要发送给a":["103.10"],"到这里你就可以见到两个视频建立的p2p链接了":["103.11"],"到这里为止只是建立了视频的一对一链接":["103.11"],"但是我们可以通过这些操作进行复制":["103.11"],"就能进行多对多的连接了":["103.11"],"多对多连接":["103.11"],"到上面为止":["103.12"],"我们实现了成员的记录":["103.12"],"广播和删除":["103.12"],"接下来是需要实现一个成员列表的接口":["103.12"],"提供给前端项目调用":["103.12"],"ice":["103.13"],"track":["103.13","206.1","206.8","245.1"],"peer等其他代码":["103.13"],"接下来的步骤其实就是和一对一是一样的了":["103.15"],"后面还需要发起offer的人处理对应peer的offer":["103.15"],"以及ice候选":["103.15"],"还有流进行挂载播放":["103.15"],"handleanswer":["103.15"],"应答方回复":["103.15"],"会话的一部分被传输":["103.16"],"navigator":["103.16","286.58"],"先将真实的视频每隔":["104.0"],"40ms":["104.0"],"一次":["104.0"],"画到画布上":["104.0"],"这样的话":["104.0"],"画布就会不断的更新":["104.0"],"能达到":["104.0"],"帧的效果":["104.0"],"这样能保证我们的视频流是非常流畅的":["104.0"],"一般来说":["104.0"],"人眼舒适放松时可视帧数是每秒":["104.0"],"帧":["104.0"],"高度集中精神时不超过":["104.0"],"电影院里的":["104.0"],"电影一般是":["104.0"],"帧的":["104.0"],"3d":["104.0","136.2"],"帧以上":["104.0"],"画到画布后":["104.0"],"我们也相应的要通过":["104.0"],"方法拿到真实视频的图像数据":["104.0"],"然后每一帧都要与设置好的背景色进行比较":["104.0"],"比较后的差值达到设定的阈值的像素":["104.0"],"就要扣除":["104.0"],"替换为之前拿到的背景图的像素":["104.0"],"看到这里":["104.0"],"如果以前看过我的文章":["104.0"],"大家一定很眼熟":["104.0"],"这个计算颜色差的逻辑与我之前写的":["104.0"],"我用":["104.0"],"张图片合成我们美好的瞬间":["104.0"],"用来做合成图的逻辑是一样的":["104.0"],"首先需要明白的一点就是":["104.0"],"rgb":["104.0","106.29"],"的色域是一个":["104.0"],"维的空间":["104.0"],"我们可以通过计算两个点之间的距离来判断两个颜色的差异":["104.0"],"距离越小":["104.0"],"颜色差异越小":["104.0"],"而这只需要我们中学时期学过的":["104.0"],"欧式距离":["104.0"],"公式就可以了":["104.0"],"我们把它转化为颜色差的计算公式如下":["104.0"],"计算颜色差":["104.0"],"colordiff":["104.0"],"color1":["104.0"],"color2":["104.0"],"g":["104.0","127.39","184.16","235.4","241.1","241.10","286.28","295.10"],"sqrt":["104.0","106.25"],"然后再将处理后的图像数据画到虚拟视频的画布上":["104.0"],"capturestream":["104.0"],"将画布转换为视频流":["104.0"],"最后将视频流赋值给虚拟视频的":["104.0"],"代码如下":["104.0"],"将视频写到":["104.0"],"drawvideotocanvas":["104.0"],"realvideocanvas":["104.0"],"realvideoctx":["104.0"],"virtualvideocanvas":["104.0"],"virtualvideoctx":["104.0"],"每隔":["104.0"],"100ms":["104.0"],"将真实的视频写到":["104.0"],"并获取视频的图像数据":["104.0"],"setinterval":["104.0","156.23","176.17"],"获取":["104.0","178.6"],"中的图像数据":["104.0"],"realvideoimagedata":["104.0"],"处理真实视频的图像数据":["104.0"],"将其写到虚拟视频的":["104.0"],"processframedrawtovirtualvideo":["104.0"],"从":["104.0","168.11","175.21"],"中获取视频流并在":["104.0"],"virtualvideo":["104.0"],"中播放":["104.0"],"getstreamfromvirtualvideocanvas":["104.0"],"逐像素计算与要处理的目标颜色的差值":["104.0"],"如果差值小于容差":["104.0"],"中的":["106.2","179.43","195.7","204.3"],"注释":["106.2"],"单行注释":["106.2"],"多行":["106.2"],"推延至":["106.3"],"规范":["106.3"],"文件头里定义的":["106.4"],"规则里指定的字符编码":["106.4"],"link":["106.4","143.4","177.10","178.7","286.55"],"标签里的":["106.4"],"ie5":["106.5","179.7"],"以下":["106.5","195.7"],"可以通过":["106.5","154.1","253.0"],"操作":["106.5"],"声明":["106.7"],"用户样式表中的":["106.7"],"声明s":["106.7"],"理解层叠性的时候需要结合":["106.7"],"selectors":["106.8"],"的元素":["106.9"],"不推荐使用":["106.9"],"属性以指定值":["106.9"],"元素中为尾的元素":["106.11"],"父元素仅有该元素的元素":["106.11"],"标签中指定顺序索引的标签":["106.11"],"只有在需要覆盖全站或外部":["106.13"],"的特定页面中使用":["106.13"],"永远不要在你的插件中使用":["106.13"],"其他属性":["106.14"],"cursor":["106.14","279.4"],"对于其他默认不继承的属性也可以通过以下几个属性值来控制继承行为":["106.14"],"继承父元素对应属性的计算值":["106.14"],"initial":["106.14"],"应用该属性的默认值":["106.14"],"的默认值是":["106.14"],"000":["106.14"],"该浮动元素之前占用的空间将被别的元素填补":["106.15"],"另外浮动之后所占用的区域不会和别的元素之间发生重叠":["106.15"],"使用绝对定位":["106.15"],"或者固定定位":["106.15"],"现在高版本的浏览器基本上默认都是使用标准盒模型":["106.16"],"而像":["106.16"],"ie6":["106.16"],"这种老古董才是默认使用":["106.16"],"盒模型的":["106.16"],"css3":["106.16","195.4"],"对外显示":["106.17"],"决定了该元素本身是如何布局的":["106.17"],"即参与何种格式化上下文":["106.17"],"将不会生效":["106.18"],"设置竖直方向上的":["106.18"],"是行内块元素":["106.18"],"因为替换元素比如":["106.19"],"设计的初衷就仅仅是通过":["106.19"],"把内容替换成图片":["106.19"],"完全没考虑过会把它当成容器":["106.19"],"格栅格式化上下文":["106.20"],"其中":["106.20","122.8","156.13"],"中了":["106.21"],"contain":["106.21","232.4"],"demo3":["106.21"],"标签产生的内联盒子":["106.22"],"formatting":["106.22"],"contextsifc":["106.22"],"应用场景":["106.22","150.15"],"水平居中":["106.22"],"当一个块要在环境中水平居中时":["106.22"],"设置其为":["106.22"],"普通节点的层叠等级优先由其所在的层叠上下文决定":["106.23"],"层叠等级的比较只有在当前层叠上下文中才有意义":["106.23"],"脱离当前层叠上下文的比较就变得无意义了":["106.23"],"层叠顺序":["106.23"],"在同一个层叠上下文中如果有多个元素":["106.23"],"那么他们之间的层叠顺序是怎么样的呢":["106.23"],"以下这个列表越往下层叠优先级越高":["106.23"],"视觉上的效果就是越容易被用户看到":["106.23"],"不会被其他元素覆盖":["106.23"],"层叠上下文的":["106.23"],"的子节点":["106.23"],"标准流内块级非定位的子节点":["106.23"],"浮动非定位的子节点":["106.23"],"标准流内行内非定位的子节点":["106.23"],"这里的":["106.24"],"就是表示长度的单位":["106.24"],"长度单位除了":["106.24"],"外":["106.24","133.5","173.81"],"比较常用的还有":["106.24"],"来说":["106.25"],"它的像素密度为":["106.25"],"326ppi":["106.25"],"设备独立像素":["106.25"],"dip":["106.25"],"是特别针对":["106.25"],"对于如上一个结构的":["106.26"],"由于根元素":["106.26"],"会是":["106.27"],"这样有什么好处呢":["106.27"],"好处就是方便写样式":["106.27"],"比如从设计图量出来的":["106.27"],"高度是":["106.27"],"50px":["106.27"],"那我们写样式的时候就可以直接写":["106.27"],"5rem":["106.27"],"每个从设计图量出来的尺寸只要除于":["106.27"],"即可得到当前元素的":["106.27"],"值":["106.27","121.6","177.11"],"都不用经过计算":["106.27"],"vmax":["106.28"],"取":["106.28"],"中值较小的":["106.28"],"颜色":["106.29"],"hsl":["106.29"],"先锋":["106.30"],"eric":["106.30"],"meyer":["106.30"],"如下这张图是":["106.30"],"个基础色":["106.30"],"又叫":["106.30"],"截止到目前为止":["106.30"],"设置一条边有颜色":["106.31"],"然后紧挨着的":["106.31"],"边是透明":["106.31"],"且宽度是有颜色边的一半":["106.31"],"直角三角形":["106.31"],"然后紧挨着的任何一边透明即可":["106.31"],"看下示例":["106.31"],"border":["106.32","170.8","170.14"],"是有效的":["106.33"],"在第":["106.33"],"代":["106.33"],"颜色标准中":["106.33"],"新增了一种新的函数写法":["106.33"],"即可以把":["106.33"],"中值的分隔逗号改成空格":["106.33"],"而把":["106.33"],"hsla":["106.34"],"查询条件取反":["106.35"],"整个查询匹配的时候才生效":["106.35"],"常用语兼容旧浏览器":["106.35"],"使用时候必须指定媒体类型":["106.35"],"逗号或者":["106.35"],"or":["106.35","216.2"],"查询条件满足一项即可匹配":["106.35"],"媒体查询还支持众多的媒体特性":["106.35"],"使得它可以写出很复杂的查询条件":["106.35"],"用户设备的最小高度为680px或为纵向模式的屏幕设备":["106.35"],"上图这个是使用":["106.36"],"自定义属性配合":["106.36"],"实现的动态调整元素的":["106.36"],"bfc":["106.38","179.6"],"来清除":["106.38"],"最好用":["106.39"],"overflow":["106.39","153.5","153.6","153.7"],"实际使用的时候需要设置为空字符串":["106.40"],"让它的高度为":["106.40"],"从而父元素的高度都是由实际的子元素撑开":["106.40"],"该方式基本上是现在人人都在用的清除浮动的方案":["106.40"],"的区别":["106.41"],"这个是他写那篇文章的翻译版":["106.41"],"让我们谈一谈":["106.41"],"文章介绍到":["106.41"],"只是一个很小的css文件":["106.41"],"但它在默认的":["106.41"],"元素样式上提供了跨浏览器的高度一致性":["106.41"],"相比于传统的":["106.41"],"是一种现代的":["106.41"],"准备的优质替代方案":["106.41"],"现在已经有很多知名的框架和网站在使用它了":["106.41"],"的具体样式可以看这里":["106.41"],"区别于":["106.41"],"ios":["106.42"],"做了兼容处理":["106.42"],"感兴趣的可以去阅读下":["106.42"],"codepen":["106.43"],"demo":["106.43","114.14","141.8"],"一致达到垂直居中":["106.44"],"calc":["106.45","106.51"],"table":["106.46"],"cell":["106.46","190.4"],"方法五":["106.46","106.49"],"flex":["106.46","106.49"],"方法四":["106.48"],"grid":["106.48"],"设置父级背景图片":["106.50"],"auto":["106.51","153.5","153.6","153.7","156.3"],"方法一":["106.51"],"方法二":["106.51"],"电脑传统耳机孔2":["107.2"],"通过适配器我们成功将":["107.2"],"耳机插入到了电脑传统耳机孔":["107.2"],"让我们再用":["107.2"],"改写一下":["107.2"],"sec9":["107.4"],"although":["107.4"],"check":["107.4","173.52","179.50","214.1","251.2"],"six":["107.4"],"instead":["107.4","206.2","216.2"],"eight":["107.4"],"since":["107.4","175.12","179.44","236.5"],"trace":["107.4","152.24"],"connect":["107.4","178.5"],"提供的接口不会改变":["107.5"],"最直接的当然是去每个页面加就好了":["108.1"],"但上报数据的逻辑是一致的":["108.1"],"一个一个加有些傻了":["108.1"],"然后在业务代码中调用即可":["108.3"],"最终的业务代码可能会装饰很多层":["108.3"],"最终才传给小程序":["108.3"],"如果不想要":["108.4"],"新增的功能":["108.4"],"只需要把":["108.4"],"这个装饰器去掉":["108.4"],"调用":["108.4","176.6"],"新增逻辑":["109.1"],"provided":["109.4","219.10"],"accessing":["109.4"],"其内部持有":["109.6"],"的对象":["109.6","173.28"],"当调用":["109.6","173.27"],"再去实例化对象":["109.6"],"实现了对象的延迟加载":["109.6"],"当然也带来了坏处":["109.6"],"可能会导致第一次调用":["109.6"],"的时候比较耗时":["109.6"],"在这个示例下是否引入代理模式":["109.6"],"就看实际场景下的取舍了":["109.6"],"我们再用":["109.6"],"来改写一下":["109.6"],"导入":["109.7","179.26"],"因为还需要导出":["109.7"],"所以将导入的重命名为":["109.7"],"然后在请求前将":["109.7"],"塞入到":["109.7"],"还没更新":["110.2"],"findindex":["110.2"],"splice":["110.2","179.56","245.3","286.12"],"listi":["110.2"],"通过观察者模式我们将获取地址后的操作解耦了出来":["110.3"],"未来有新增模块只需要注册观察者即可":["110.3"],"很复杂的时候":["110.3"],"通过观察者模式会使得未来的改动变得清晰":["110.3"],"不会影响到":["110.3"],"三个模块已经实现了解耦":["111.1"],"但仍需要维护":["111.1"],"这个数组来注册观察者":["111.1"],"同时还需要知道各个模块提供了什么方法用于回调":["111.1"],"我们可以使用发布订阅模式":["111.1"],"我们通过":["111.2"],"将不同的事件保存为不同的数组":["111.2"],"的时候得到对应的数组去调用即可":["111.2"],"看下例子":["111.2"],"windliang":["111.2"],"writepost":["111.2"],"xiaoming":["111.2"],"update":["111.2","216.3","217.7","218.4","232.2","253.0"],"我收到了":["111.2"],"并且点了个赞":["111.2"],"xiaoyang":["111.2"],"只有":["111.4"],"会执行":["111.4"],"后边两句就会错过第一次的":["111.4"],"因为执行一次":["111.4"],"就把缓存清空了":["111.4"],"之前有了一次":["111.4"],"modulename":["112.1"],"主接口异常":["112.1"],"stringify":["112.1","126.4","231.5"],"这个代码的话看了就想打人":["112.1"],"未来新增一种弹窗类型的话":["112.1"],"我们需要到":["112.1"],"关键字的":["112.2"],"即使现在有了":["112.2"],"也依然只是基于原型的语法糖":["112.2"],"底层和":["112.2"],"的类是完全不同的":["112.2"],"此外":["112.2"],"中函数是一等公民":["112.2"],"可以当作参数传入和返回":["112.2"],"因此实现策略模式我们完全不需要去定一个类":["112.2"],"然后通过生成的对象调用方法":["112.2"],"中我们只需要将函数传入即可":["112.2"],"activity":["112.3"],"balance":["112.3"],"nothing":["112.4"],"need":["112.4","218.4","230.2","232.2"],"validate":["112.4"],"getvalidationmethod":["112.4"],"策略模式应用":["112.4"],"策略模式的体现就是":["112.4"],"方法了":["112.4"],"让我们看一下实现":["112.4"],"validators":["112.4"],"导入所有策略":["112.4"],"internalruleitem":["112.4"],"已经有了就直接返回":["112.4"],"快速开始":["113.0"],"从仓库中取出项目镜像":["113.1"],"随便复制就可以了":["113.1"],"once":["113.1","148.2"],"anywhere":["113.1"],"不用再关注版本":["113.1"],"高可用策略":["113.2"],"备份":["113.2"],"容灾":["113.2"],"迁移":["113.2"],"弹性":["113.2"],"负载":["113.2"],"动态":["113.2"],"与虚拟机相比":["113.2"],"容器更轻量且速度更快":["113.2"],"因为它利用了":["113.2"],"linux":["113.2","260.1"],"底层操作系统在隔离的环境中运行":["113.2"],"虚拟机的":["113.2"],"创建了一个非常牢固的边界":["113.2"],"以防止应用程序突破它":["113.2"],"会在计算机上设置一个资源隔离的环境":["113.3"],"然后将打包的应用程序和关联的文件复制到":["113.3"],"namespace":["113.3"],"内的文件系统中":["113.3"],"此时环境的配置就完成了":["113.3"],"操作系统上安装":["113.4"],"虚拟机":["113.4"],"然后在虚拟机内运行容器":["113.4"],"镜像是一个可执行包":["113.4"],"其包含运行应用程序所需的代码":["113.4"],"运行时":["113.4"],"库":["113.4","175.12","184.27"],"环境变量和配置文件":["113.4"],"insecure":["113.5"],"registries":["113.5"],"experimental":["113.5"],"debug":["113.5"],"82b31f98dce6":["113.6"],"7df6efaf9592":["113.6"],"successfully":["113.6"],"built":["113.6"],"tagged":["113.6"],"镜像制作成功":["113.6"],"我们来查看一下容器":["113.6"],"ls":["113.6"],"grep":["113.6","114.13"],"我们打出了一个":["113.6"],"133mb":["113.6"],"的项目镜像":["113.6"],"about":["113.6"],"minute":["113.6"],"ago":["113.6"],"镜像也有好坏之分":["113.6"],"后续我们将介绍如何优化":["113.6"],"这里可以先暂时忽略":["113.6"],"运行容器":["113.6"],"这里解释一下参数":["113.6"],"设置容器在后台运行":["113.6"],"表示端口映射":["113.6"],"把本机的":["113.6"],"端口映射到":["113.6"],"端口":["113.6"],"这样外网就能通过本机的":["113.6"],"端口访问了":["113.6"],"设置容器名":["113.6"],"实现数据的持久化和同步":["113.7"],"指定容器中多个需要被挂载的目录":["113.7"],"会把这些目录映射到宿主机的多个随机目录上":["113.7"],"指定容器中的":["113.7"],"目录挂载到宿主机上的":["113.7"],"这种形式可以手动指定宿主机上的目录":["113.7"],"设置工作目录":["113.7"],"设置之后":["113.7"],"guide":["113.8"],"dockerfile":["113.8"],"best":["113.8","152.30","279.10"],"practices":["113.8","152.30"],"可以从镜像仓库拉取和推送镜像":["114.3"],"技术的三大核心概念":["114.3"],"与":["114.5","179.1","179.37","205.2"],"查看版本":["114.6"],"项目没啥问题":["114.8"],"我们对项目进行打包":["114.8"],"出现下面的信息说明拉取nginx镜像成功":["114.10"],"复制到":["114.12"],"vue查看镜像":["114.13"],"可以看到我们刚才打印的docker":["114.15"],"vue的容器id为b6c49793ad48":["114.15"],"跟上面的容器idb6c49793ad48ccfc106fab63f988881a1467ae25b5c4c9cee87ad4f3515f9607对应":["114.15"],"默认是取了前12位":["114.15"],"去查看对应的静态文件":["114.16"],"盖房子":["114.17"],"了":["114.17","175.22","206.6"],"拎包入住":["114.17"],"这也是":["114.17"],"ufs":["114.18"],"uts":["114.19"],"隔离hostname":["114.19"],"mongo":["114.21"],"965553e202a4":["114.21"],"weeks":["114.21"],"363mb":["114.21"],"centos":["114.21"],"alpine":["114.24"],"nginx":["114.24"],"command":["114.27"],"rm":["114.28"],"删除容器":["114.28"],"br":["114.29"],"commercial":["114.29"],"available":["114.29"],"at":["114.29","170.14"],"em":["114.29"],"cpu":["114.30"],"mem":["114.30"],"limit":["114.30"],"net":["114.30"],"o":["114.30","127.33"],"pids":["114.30"],"新建配置文件为":["114.32"],"yaml":["114.32"],"内容如下":["114.32"],"services":["114.32"],"但这个方案有非常大的缺陷":["115.0"],"很难避免推送浏览器已经拥有的子资源":["115.0"],"其实很多资源在浏览器第一次请求到就已经缓存下来了":["115.0"],"这种":["115.0"],"过度推动":["115.0"],"会导致网络带宽的使用效率降低":["115.0"],"从而显着阻碍性能优势":["115.0"],"总体而言":["115.0"],"数据显示":["115.0"],"实际上对整个网络的性能产生了负面影响":["115.0"],"宣布将在下一个主要版本":["115.0"],"中将删除对其的支持":["115.0"],"removi":["115.0"],"新提案":["115.0"],"use":["115.0"],"刚刚夭折不久":["115.0"],"又计划提供新一个新的":["115.0"],"是的就叫":["115.0"],"它可以让开发者更轻松的使用":["115.0"],"访问任意异步数据源":["115.0"],"正常情况下我们在":["115.0"],"中请求异步数据一般要借助":["115.0"],"对应的函数就要使用":["115.0"],"isediting":["115.0"],"db":["115.0"],"posts":["115.0"],"section":["115.0"],"noteeditor":["115.0"],"而新增的":["115.0"],"你可以类比为":["115.0"],"正如":["115.0"],"只能在":["115.0"],"函数内部使用一样":["115.0"],"组件和":["115.0"],"内部使用":["115.0"],"而且你可以嵌套在条件":["115.0"],"块和循环中使用":["115.0"],"而无需将逻辑拆分为单独的组件":["115.0"],"这使得我们在":["115.0"],"中编写异步代码变得非常灵活":["115.0"],"shouldincludeauthor":["115.0"],"fetchnote":["115.0"],"byline":["115.0"],"author":["115.0"],"fetchnoteauthor":["115.0"],"authorid":["115.0"],"displayname":["115.0"],"第一个可以在条件语句中使用的原生hook诞生了":["115.0"],"acdlite":["115.0"],"lerna":["115.0"],"v6":["115.0"],"曾经是最流行的":["115.0"],"monorepo":["115.0"],"工具之一":["115.0"],"在去年":["115.0"],"的核心作者提到了":["115.0"],"learn":["115.0","130.4"],"已经基本不再维护":["115.0"],"在今年":["115.0"],"nrwl":["115.0"],"宣布接管了":["115.0"],"随后":["115.0"],"接管":["115.0"],"后发布了第一个全新的正式版本":["115.0"],"推出了新的网站":["115.0"],"并宣布让":["115.0"],"的速度提高了":["115.0"],"倍":["115.0"],"复活了":["115.0"],"带来了哪些新东西":["115.0"],"支持识别渲染阻塞资源":["115.0"],"对页面性能的可靠洞察对于我们构建好的用户体验是至关重要的":["115.0"],"在以前":["115.0"],"我们通常会依靠一些复杂的启发式方法来确定资源是否阻塞页面的渲染":["115.0"],"新增了一个":["115.0"],"renderblockingstatus":["115.0"],"这个属性会提供来自浏览器的直接信号":["115.0"],"用于识别阻塞页面渲染的资源":["115.0"],"直到它们被下载下来":["115.0"],"下面的代码片段显示了如何获取所有资源的列表并使用新的":["115.0"],"属性列出所有阻塞页面渲染的资源":["115.0"],"获取所有资源":["115.0"],"getentriesbytype":["115.0"],"过滤出阻塞渲染的资源":["115.0"],"blocking":["115.0","206.8"],"优化这些阻塞资源的加载方式":["115.0"],"改为异步加载或增加一些预渲染优化":["115.0"],"对于我们网站的":["115.0"],"vitals":["115.0"],"是非常有帮助的":["115.0"],"大家可以用起来了":["115.0"],"最近带来了哪些有意思的新东西":["115.0"],"turbopack":["115.0"],"大会上":["115.0"],"伴随着":["115.0"],"的发布":["115.0"],"也推出了一个新的工具":["115.0"],"是针对":["115.0"],"优化的增量打包工具":["115.0"],"的创建者":["115.0"],"tobias":["115.0"],"koppers":["115.0"],"团队使用":["115.0"],"rust":["115.0"],"编写":["115.0"],"在刚推出的时候":["115.0"],"给出了一份性能测试数据":["115.0"],"数据对常见的打包工具的性能做了对比":["115.0"],"结果显示":["115.0"],"的性能比":["115.0"],"快":["115.0","149.4"],"比":["115.0"],"此数据一出":["115.0"],"在前端圈引起了巨大的争议":["115.0"],"的作者尤雨溪也亲自回应数据不是很客观":["115.0"],"我们现在在":["115.0"],"官网看到的最新数据已经有了变化":["115.0"],"测试基准也可以随意调整":["115.0"],"处理":["115.0","139.4","207.6"],"组组件":["115.0"],"可以发现在最新的测试中":["115.0"],"仍然有着不错的性能优势":["115.0"],"目前只用于":["115.0"],"未来还会推出独立的":["115.0"],"并支持其他框架":["115.0"],"svelte":["115.0"],"turbo":["115.0"],"pack":["115.0"],"浏览器存储新提案":["115.0"],"storage":["115.0","133.5","195.2","197.4"],"buckets":["115.0"],"多年来":["115.0"],"生态系统中已经发展出很多可用于存储的":["115.0"],"indexeddb":["115.0"],"localstorage":["115.0"],"shownotification":["115.0"],"reflog":["116.1"],"记录了":["116.1"],"列出系统配置":["116.2"],"email":["116.3"],"youremail":["116.3"],"查看远程仓库的详细信息":["117.1"],"show":["117.1","119.4","142.5"],"修改某个远程仓库在本地的简称":["117.1"],"rename":["117.1"],"old":["117.1"],"arch":["117.2"],"执行储藏时":["118.2"],"添加message信息":["118.2"],"例如应用并删除第二个":["118.4"],"的命令":["119.4"],"但是可以通过取消该储藏的补丁达到同样的效果":["119.4"],"同样的":["119.4"],"renamed":["119.5"],"或者注释写错了":["119.8"],"可以撤销上一次提交":["119.8"],"如git":["119.9"],"命令即可":["119.10"],"连":["119.10"],"s以及":["119.10"],"m选项都不需要":["119.10"],"直接给出标签名字即可":["119.10"],"将标签推送到远程仓库中":["119.10"],"将特性分支server提交的改变在基底分支master上重演一遍":["119.11"],"使用rebase操作最大的好处是像在单个分支上操作的":["119.11"],"提交的修改历史也是一根线":["119.11"],"如果想把基于一个特性分支上的另一个特性分支变基到其他分支上":["119.11"],"可以使用":["119.11","175.5","175.11","179.7"],"onto操作":["119.11"],"onto":["119.11","148.3"],"的特定版本中允许有什么":["120.0"],"不允许有什么":["120.0"],"在渲染解析页面的时候":["120.0"],"浏览器会根据这些规则检查页面的有效性并采取相应的措施":["120.0"],"doctype":["120.1"],"可用":["120.3"],"compatmode":["120.3"],"来获取":["120.3"],"css1compat":["120.3"],"标准模式":["120.3"],"严格模式":["120.3"],"是默认模式":["120.3"],"浏览器按照":["120.3"],"不存在或形式不正确会导致文档以混杂模式呈现":["120.4"],"html5":["120.4"],"没有严格和混杂之分":["120.4"],"告诉文档使用哪种字符编码":["121.0"],"itemprop":["121.0"],"元素提供用户定义的元数据":["121.0"],"name属性":["121.0"],"abc":["121.1","127.20","127.22"],"的宽度为设备宽度":["121.4"],"为设备宽度与":["121.4"],"搜索引擎索引此网页":["121.5"],"follow":["121.5"],"前者表示要表示的元数据的":["121.6"],"名称":["121.6"],"后者是元数据的":["121.6"],"头部中也设置了这个属性":["121.7"],"并且和":["121.7"],"中设置的有冲突":["121.7"],"那么哪一个优先呢":["121.7"],"答案是":["121.7"],"来打开dns对a标签的提前解析":["121.9"],"headers":["121.10","173.57"],"lang":["122.0"],"en":["122.0"],"定义当前文档显示的语言":["122.0"],"定义语言为英文":["122.0"],"zh":["122.0"],"cn定义语言为中文":["122.0"],"提倡使用":["122.0"],"定义en就是英文网页":["122.0"],"定义zh":["122.0"],"cn就是中文网页":["122.0"],"对于文档显示来说":["122.0"],"定义en也可以显示中文文档":["122.0"],"同理定义zh":["122.0"],"cn也可以显示英文文档":["122.0"],"定义最小的标题":["122.1"],"文本在一个段落中会根据浏览器的大小自动换行":["122.2"],"只是简单开始新的一行":["122.4"],"用来装内容":["122.5"],"布局网页":["122.5"],"特点":["122.5"],"div用来布局":["122.5"],"但是一行只能放一个div":["122.5"],"大盒子":["122.5"],"设置图片高度":["122.6"],"设置图像的边框粗细":["122.6"],"当前目录下的某目录或某文件":["122.7"],"下一级路径":["122.7"],"某文件目录的下一级":["122.7"],"self":["122.8","218.8"],"为默认值":["122.8"],"在当前窗口打开页面":["122.8"],"lt":["122.9","172.0"],"大于号":["122.9"],"用于定义表格中的单元格":["122.10"],"必须嵌套在":["122.10"],"规定单元格与单元格之间的空白":["122.11"],"默认2像素":["122.11"],"像素值或百分比":["122.11"],"规定表格的宽度":["122.11"],"tbody":["122.12"],"td":["122.13"],"自定义列表":["122.14"],"之间相当于一个容器":["122.15","122.16"],"可以容纳所有元素":["122.15","122.16"],"对应多个":["122.17"],"和提示信息":["122.18"],"3个部分构成":["122.18"],"用于指定表单的名称":["122.19"],"以区分同一个页面中的多个表单域":["122.19"],"写表单元素之前":["122.19"],"textarea文本域元素":["122.20"],"规定input元素的值":["122.21"],"checked":["122.21"],"规定此input元素首次加载时应当被选中":["122.21"],"maxiength":["122.21"],"正整数":["122.21"],"规定输入字段中的字符的最大长度":["122.21"],"较少使用":["122.21"],"多使用正则表达式":["122.21"],"label标签的":["122.22"],"for属性":["122.22"],"中定义select":["122.23"],"selected":["122.23"],"显示的行数":["122.24"],"在开发中不会使用":["122.24"],"x₀":["123.0"],"equiv":["123.1"],"refresh":["123.1","159.9","159.13"],"juejin":["123.1","263.6","296.4"],"cn":["123.1","146.1","263.6","296.4"],"上面的代码将在":["123.1"],"秒后将用户重定向到":["123.1"],"掘金":["123.1"],"拨打电话或邮件":["123.1"],"需要一个链接来拨打":["123.1"],"电话":["123.1"],"或发送":["123.1"],"邮件":["123.1"],"tel":["123.1"],"12345678910":["123.1"],"mailto":["123.1"],"转而执行后续代码":["124.0"],"当其他线程完成时":["124.0"],"将事先传递的回调西数包装成任务":["124.0"],"加入到消息队列的未尾排队":["124.0"],"instanceof":["125.0","173.98","286.4"],"regexp":["125.0","127.41","286.55"],"cloneobj":["125.0"],"constructor":["125.0","179.21","179.23","292.1","293.1"],"实现一个递归拷贝":["125.0"],"x":["125.9","129.6","138.21","173.95"],"我爱你":["126.2"],"port":["126.3","206.15"],"fontend":["126.4"],"substring":["126.5"],"向前台写cookie":["126.5"],"writehead":["126.5"],"set":["126.5","129.7","173.43","206.8","223.0","228.2","250.1","252.6"],"l":["126.5","152.6"],"a123456":["126.5"],"path":["126.5","142.11","167.1"],"html同域":["126.6"],"内容为空":["126.6"],"createelement":["126.7","172.0","195.8"],"hellob":["126.8"],"三":["126.8","175.12"],"2018年6月":["127.1"],"es2018":["127.1"],"包含了异步循环":["127.1"],"生成器":["127.1"],"我们使用也比较普遍":["127.2"],"遂不进行说明":["127.2"],"es6之后的语言风格跟es5以前的差异比较大":["127.2"],"所以单独拎出来做个记录":["127.2"],"es6":["127.2","173.66","173.95","184.9"],"es2015":["127.2"],"vm231":["127.3"],"assignment":["127.3","231.1"],"constant":["127.3","214.1"],"variable":["127.3","214.2","230.2"],"写法如下":["127.6"],"非常的简单":["127.10"],"但是要注意的是扩展操作符只能用于可迭代对象":["127.10"],"如果是下面的情况":["127.10"],"是会报错的":["127.10"],"key1":["127.10"],"value1":["127.10"],"处理逻辑":["127.12"],"url1":["127.12"],"url2":["127.12"],"可以改写成":["127.12"],"对象":["127.16","129.4","176.7","178.6","181.0","217.3"],"并没有被添加进":["127.16"],"中":["127.16","173.32","178.7","193.7","195.4","200.12","205.3","221.8"],"delete":["127.16","131.8","131.9","216.3","249.1"],"从集合中删除":["127.16"],"即使值是undefined":["127.17"],"keep":["127.18","217.7"],"waiting":["127.18"],"ab":["127.20","138.40"],"split":["127.21","195.9","287.4"],"的自然对数":["127.23"],"log10":["127.23"],"返回以10为底的n的对数":["127.23"],"log2":["127.23"],"返回以2为底的n的对数":["127.23"],"sinh":["127.23"],"返回n的双曲正弦":["127.23"],"返回以索引值和属性值为遍历器的对象":["127.24"],"es2016及更早":["127.27"],"syntaxerror":["127.27"],"malformed":["127.27"],"character":["127.27"],"q":["127.33"],"同样地":["127.33"],"在使用剩余参数时":["127.33"],"会抛出":["127.33"],"必须实例化":["127.34"],"worker":["127.34","133.3"],"wake":["127.35"],"唤醒等待队列中正在数组指定位置的元素上等待的线程":["127.35"],"返回值为成功唤醒的线程数量":["127.35"],"islockfree":["127.35"],"可以用来检测当前系统是否支持硬件级的原子操作":["127.35"],"subclass":["127.36"],"num":["127.37","287.4"],"unicode":["127.38"],"反向断言和正向断言的行为一样":["127.39"],"只是方向相反":["127.39"],"abc123":["127.39"],"presentation":["127.40"],"ufe0f":["127.40"],"gu":["127.40"],"匹配所有的箭头字符":["127.40"],"regexarrows":["127.40"],"arrows":["127.40"],"re":["127.41"],"等价于":["127.41","127.45"],"opt":["127.42"],"这里有一点小提示":["127.43"],"assign":["127.43"],"函数会触发":["127.43"],"setters":["127.43"],"而展开语法则不会":["127.43"],"acc":["127.45"],"才是标准方法":["127.46"],"只是别名":["127.46"],"在某些引擎里":["127.46"],"例如chrome":["127.46"],"有以下的等式":["127.46"],"全局":["127.48"],"foo":["127.48","214.2"],"st2":["127.49"],"abs":["127.50"],"foobar":["127.51","286.57"],"不是严格相等的":["127.52"],"但是宽松相等的":["127.52"],"出来以后":["127.52"],"js的原始类型便增加到了7个":["127.52"],"my":["127.54"],"loadpageinto":["127.54"],"官方的解释":["128.0"],"每个任务有不同的类型":["128.0"],"同类型的任务必须在同一个队列":["128.0"],"不同的任务可以属于不同的队列":["128.0"],"不同任务队列有不同的优先级":["128.0"],"字符串属性就被称为":["129.1"],"常规属性":["129.1"],"properties":["129.1"],"也就是说":["129.1","148.0","173.41"],"不要使用for":["129.3"],"in遍历数组":["129.3"],"generator":["129.4","154.8","179.31"],"以及字符串":["129.4"],"但是不能遍历对象":["129.4"],"因为没有迭代器对象":["129.4"],"但如果想遍历对象的属性":["129.4"],"arguments":["129.6","214.3","243.2"],"调用自定义迭代钩子":["129.7"],"并为每个不同属性的值执行语句":["129.7"],"非自定义属性":["129.7"],"of循环可以使用的范围包括数组":["129.7"],"被":["130.2","173.89","208.4"],"作为单独的值进行序列化时":["130.2"],"eee":["130.3"],"08t07":["130.5"],"circle":["130.9","170.14"],"anonymous":["130.9","219.6"],"第三个参数":["130.10"],"场景不多":["130.10"],"但是用的好的话会非常方便":["130.10"],"是一个数组":["130.12"],"数组的值代表将被序列化成":["130.12"],"p2":["132.3","132.4"],"settimeout":["132.4","176.17","179.17","205.15","286.37"],"要发送消息时只需要调用实例上的postmessage方法即可":["133.1"],"postmessage":["133.1","148.1","206.15"],"mydata":["133.1","133.5"],"我们需要在页面监听":["133.2"],"发送来的消息":["133.2"],"tab":["133.2","133.5"],"还是使用":["133.3"],"service":["133.3","144.4"],"的消息中转站":["133.3"],"抑或是些":["133.3"],"tricky":["133.3"],"的storage事件":["133.3"],"其都是":["133.3"],"广播模式":["133.3","133.5"],"一个页面将消息通知给一个":["133.3"],"中央站":["133.3"],"再由":["133.3"],"通知给各个页面":["133.3"],"receive":["133.4","133.5"],"要发送消息时":["133.5"],"只需向":["133.5"],"存储数据即可":["133.5"],"小憩一下":["133.5"],"我们又了解了":["133.5"],"共享存储":["133.5"],"长轮询":["133.5"],"每个节点":["133.6"],"页面":["133.6","155.0","202.19"],"都肩负起了传递消息的责任":["133.6"],"也就是我说的":["133.6"],"口口相传":["133.6"],"而消息就在这个树状结构中流转了起来":["133.6"],"显然":["133.6","173.31"],"的模式存在一个问题":["133.6"],"如果页面不是通过在另一个页面内的window":["133.6"],"open打开的":["133.6"],"例如直接在地址栏输入":["133.6"],"或从其他网站链接过来":["133.6"],"这个联系就被打破了":["133.6"],"除了上面这六个常见方法":["133.6"],"其他":["133.7"],"收到通知后":["133.7"],"则会将该消息同步给所属的页面":["133.7"],"对于收到的":["133.7"],"广播消息":["133.7"],"通知给所属的业务页面":["133.7"],"onmessage":["133.7","206.15"],"而对于非同源页面":["133.9"],"则可以通过嵌入同源":["133.9"],"网页内容也跟随变化":["134.1"],"两者结合起来则为我们提供了体验良好的单页面web应用":["134.1"],"网页内容改变":["134.2"],"它们的区别最明显的就是hash会在浏览器地址后面增加":["134.2"],"号":["134.2"],"地址栏中的哈希值也会发生改变":["134.3"],"设置":["134.3","179.51"],"会在当前url后加上":["134.3"],"popstate":["134.4"],"每当":["134.4"],"对象出现变化时":["134.4"],"就会触发":["134.4","221.10"],"仅仅调用pushstate":["134.4"],"方法或replacestate":["134.4"],"并不会触发该事件":["134.4"],"只有用户点击浏览器倒退按钮和前进按钮":["134.4"],"或者使用":["134.4"],"javascript":["134.4","173.52","175.12","178.7","193.7","281.2"],"调用history":["134.4"],"方法时才会触发":["134.4"],"该事件只针对同一个文档":["134.4"],"如果浏览历史的切换":["134.4"],"导致加载不同的文档":["134.4"],"该事件也不会触发":["134.4"],"页面第一次加载的时候":["134.4"],"浏览器不会触发popstate事件":["134.4"],"使用的时候":["134.4"],"可以为popstate事件指定回调函数":["134.4"],"回调函数的参数是一个":["134.4"],"则会带有":["135.0"],"毫秒的最少时间":["135.0"],"这样在计时时间少于":["135.0"],"空格符对应的编码是":["136.1"],"3fa":["136.2","136.8"],"3d1":["136.2","136.8"],"26b":["136.2"],"u5f20":["136.2"],"e5":["136.4"],"bc":["136.4","136.7","219.3"],"a0":["136.4","136.7"],"e4":["136.4","136.7"],"encodeuricomponent":["136.6"],"用于参数的传递":["136.6"],"b8":["136.7"],"2f":["136.8"],"2flocalhost":["136.8"],"3a8080":["136.8"],"2faa":["136.8"],"所以两个文件使用的是同一个inode":["137.0"],"第二列是权限信息":["137.0"],"第四列是拥有者":["137.0"],"第六列是文件内容大小":["137.0"],"除了文件名不一样之外":["137.0"],"硬链接创建的文件跟源文件的所有元信息完全一样":["137.0"],"第三列表示链接数":["137.0"],"目前链接数为2":["137.0"],"由于硬链接文件和源文件使用同一个inode":["137.0"],"并指向同一块文件数据":["137.0"],"除文件名之外的所有信息都是一样的":["137.0"],"所以这两个文件是等价的":["137.0"],"可以说是互为硬链接文件":["137.0"],"修改任意一个文件":["137.0"],"可以看到另外一个文件的内容也会同步变化":["137.0"],"软链接":["137.0"],"准确来说叫符号链接":["137.0"],"symbolic":["137.0"],"一般又叫软链接":["137.0"],"soft":["137.0"],"与硬链接共用一个inode不同":["137.0"],"软链接会创建新的inode":["137.0"],"并指向源文件":["137.0"],"可以理解软链接就是windows系统中的桌面快捷方式":["137.0"],"创建软链接的命令和硬链接很像":["137.0"],"多了":["137.0"],"参数":["137.0","178.1","178.8"],"跟原文件名和文件数据块关联":["137.1"],"所以文件找不到了":["137.2"],"但实际上文件数据还存在硬盘中":["137.2"],"所以经常能看到网上有一些帮助恢复误删的文件的工具":["137.2"],"有人可能说":["137.5"],"使用软链接不也可以吗":["137.5"],"是的":["137.5"],"但不太好":["137.5"],"不能对不同的文件系统的文件创建硬链接":["137.6"],"软链接类似于windows的快捷方式":["137.6"],"有独立的inode":["137.6"],"可以对文件夹或不同文件系统的文件创建软链接":["137.6"],"检测系统中是否安装某个软件":["138.2"],"也可使用":["138.6"],"aux":["138.6"],"进行测试":["138.9","143.2"],"reopen":["138.13"],"s":["138.14","156.24","166.7","195.8","217.7","287.6","295.9"],"agent":["138.21","175.9"],"客户端agent信息":["138.21"],"format":["138.22"],"目录格式":["138.22"],"只能用于":["138.23"],"options":["138.27","186.3","259.2"],"md5":["138.31"],"加密算法":["138.31"],"prefer":["138.31"],"优先采取服务器算法":["138.31"],"上述配置表示只有":["138.34"],"访问该目录":["138.35"],"禁止其它所有":["138.35"],"条件语句中不能使用别名":["138.38"],"若有需求":["138.38"],"backup":["138.39"],"其余":["138.39"],"均不可用时":["138.39"],"使用这个":["138.39"],"100k":["138.40"],"限速为":["138.40"],"100kb":["138.40"],"秒":["138.40","152.2"],"这里可用":["138.40"],"命令进行压测":["138.40"],"number":["138.40","232.3","286.13"],"对客户端访问授权":["139.1"],"上网进行认证":["139.1"],"代理可以记录用户访问记录":["139.1"],"服务器是内网":["139.2"],"负载均衡":["139.2"],"第三方":["139.3"],"fair":["139.3"],"tomcat":["139.4"],"jsp":["139.4"],"do":["139.4","243.1","251.2"],"这些常用的全局变量":["140.0"],"我在之前的":["140.0"],"前端模块化发展历程":["140.0"],"一文中介绍过":["140.0"],"自执行函数也是前端模块化的实现方案之一":["140.0"],"在早期前端没有模块化系统的时代":["140.0"],"自执行函数可以很好的解决命名空间的问题":["140.0"],"并且模块依赖的其他模块都可以通过参数传递进来":["140.0"],"amd":["140.0"],"规范也都是依赖自执行函数实现的":["140.0"],"在模块系统中":["140.0"],"每个文件就是一个模块":["140.0"],"每个模块外面会自动套一个函数":["140.0"],"并且定义了导出方式":["140.0"],"同时也定义了导入方式":["140.0"],"modulea":["140.0"],"就可以保证模块的独立性了":["140.3"],"require代码实现":["140.3"],"介绍r":["140.3"],"f":["140.4","284.9"],"给模块添加缓存":["140.5"],"添加缓存也比较简单":["140.5"],"就是文件加载的时候将文件放入缓存在":["140.5"],"再去加载模块时先看缓存中是否存在":["140.5"],"如果存在直接使用":["140.5"],"如果不存在再去重新嘉爱":["140.5"],"加载之后再放入缓存":["140.5"],"从缓存中读取":["140.5"],"如果存在":["140.5","195.8"],"直接返回结果":["140.5"],"添加缓存":["140.5"],"省略模块后缀名":["140.5"],"自动给模块添加后缀名":["140.5"],"实现省略后缀名加载模块":["140.5"],"其实也就是如果文件没有后缀名的时候遍历一下所有的后缀名看一下文件是否存在":["140.5"],"function2":["141.2"],"f1":["141.2"],"function1":["141.2"],"isasyncfunc":["141.2"],"isasyncfunc2":["141.2"],"isequal":["141.3"],"hostnames":["141.4"],"ip绑定的语言数组为":["141.4"],"主机的平台":["141.6"],"主机的平台名称":["141.6"],"为路径的第一个字符":["141.8"],"则此命令返回空字符串":["141.8"],"pathstring":["141.8"],"返回路径字符串的对象":["141.8"],"与path":["141.8"],"format相反":["141.8"],"pathobj":["141.8"],"nodejs":["141.8"],"xxpackagename":["142.11"],"要改回默认源":["142.12"],"弃用信息":["142.18"],"audit":["142.26"],"不慌不燥不急不忙":["142.27"],"doctor":["142.29"],"特别是需要调试的npm包不止一个":["143.1"],"且彼此之间需要联调":["143.1"],"好啦":["143.5"],"通过上边两步":["143.5"],"我觉得逻辑上先unlink包再删掉全局link可能更合理些":["143.6"],"packagename":["143.7","143.9"],"到这里其实就ok了":["143.8"],"文件作为":["144.1"],"脚本来执行":["144.1"],"则相当于执行了":["144.1"],"最后的":["144.1"],"作为参数传入":["144.1","252.7"],"目录下的文件表示软连接":["144.1"],"那这个bin目录下的那些软连接文件是哪里来的呢":["144.1"],"ps1":["144.5"],"xxx就是安装到到全局目录":["144.6"],"如果全局目录还是没找到":["144.6"],"那么就从":["144.6"],"作为npm的使用者":["145.2"],"我们常用的依赖是dependencies和devdependencies":["145.2"],"修订号归":["145.3"],"patch":["145.3","222.2"],"修订号加":["145.3"],"prerelease":["145.5"],"yuchengkai":["146.1"],"照片使用":["146.2","171.0"],"jpeg":["146.2","171.0"],"将多个图标文件整合到一张图片中":["146.2","171.0"],"example":["146.3"],"但是要确保该页面大概率会被用户在之后打开":["146.4"],"否则就是白白浪费资源去渲染":["146.4"],"这样图片就会去下载资源":["146.6"],"否则每次请求都会带上主站的":["146.7"],"标签的坐标和窗口尺寸":["147.0"],"使用intersection":["147.0"],"observer这个接口":["147.0"],"滚动距离":["147.1"],"pageyoffset":["147.1"],"20221103104751579":["147.2"],"获取节点的坐标":["147.2"],"相对于窗口的坐标":["147.2"],"第二种":["147.3"],"获取屏幕固定宽高":["147.3"],"202205270028510":["147.5"],"第二种方式":["147.5","151.12"],"替换":["147.5","206.4"],"imglazyload":["147.5"],"imgs":["147.5"],"dataset":["147.5"],"triger":["147.5"],"validateform":["148.0"],"showspinner":["148.0"],"savetodatabase":["148.0"],"updateui":["148.0"],"sendanalytics":["148.0"],"该函数":["148.0"],"调用了另外5个函数":["148.0"],"包括验证表单":["148.0"],"展示加载的动画":["148.0"],"发送数据到后端等":["148.0"],"理论上讲":["148.0"],"这是很合理的架构":["148.0"],"如果需调试这些功能":["148.0"],"也只需要在项目中查找每个函数即可":["148.0"],"然而":["148.0","175.13"],"这样也有问题":["148.0"],"就是js并不是为每个方法开辟一个单独的任务":["148.0"],"因为这些方法都包含在":["148.0"],"savesetting":["148.0"],"这个函数中":["148.0"],"也就是说这五个方法在一个任务中执行":["148.0"],"重点提示":["148.0","148.4"],"js遵循执行才编译的原理":["148.0"],"只有一个任务结束才会执行下一个任务":["148.0"],"不论这个任务会阻塞主线程多久":["148.0"],"而且虽然单独处理每个数据耗时很短":["148.1"],"但整个数组可能花费特别长的时间":["148.1"],"综合来看":["148.1"],"settimeout就不能算是特别有效的工具":["148.1"],"除了":["148.1"],"的方式":["148.1"],"确有一些api能够允许延迟代码到随后的任务中执行":["148.1"],"其中一个方式便是使用":["148.1"],"yielding":["148.2","206.16"],"monolithic":["148.2"],"now":["148.2","156.24","178.4"],"broken":["148.2"],"up":["148.2","214.2"],"into":["148.2","214.2","235.4","241.1","241.10","251.2"],"five":["148.2"],"separate":["148.2"],"ampmdash":["148.2"],"has":["148.3","248.1"],"been":["148.3","214.2"],"reached":["148.3"],"yield":["148.3"],"stop":["148.3","223.2","255.0"],"execution":["148.3"],"current":["148.3","156.4","156.23","159.2"],"loop":["148.3"],"and":["148.3","195.9","256.8"],"move":["148.3","235.4","286.33"],"iteration":["148.3"],"continue":["148.3","256.4"],"来编排每个方法":["148.4"],"关键的用户侧任务优先级别高":["148.4"],"当然用户并不知道的任务按照background的级别":["148.4"],"这就可以up和提高优先级":["148.4"],"这是如何使用":["148.4"],"的非常简单的例子":["148.4"],"可以用不同的":["148.4"],"taskcontroller":["148.4"],"对象来区分":["148.4"],"这样能在不同的人物之间共享优先级别":["148.4"],"也能为不同的":["148.4"],"的实例变更优先级":["148.4"],"supported":["148.4","219.10"],"browsers":["148.4","241.1","241.10"],"以及使用yield且不中断":["148.5"],"不使用yield":["148.5"],"出现了长耗时任务":["148.5"],"短任务数量变多了":["148.5"],"而且还能被其他不相关的任务打断":["148.5"],"使用yield且不中断":["148.5"],"里面的短任务更多":["148.5"],"但是执行顺序是固定的":["148.5"],"上面便是三种情况的效果图":["148.5"],"方法时":["148.5"],"任务能在每次让步停止后重新开始":["148.5"],"使用scheduler":["148.5"],"yield的好处是不中断":["148.5"],"也就意味着如果是在一连串任务中yield":["148.5"],"那么从yield的时间点开始":["148.5"],"其他编排好的任务的执行会继续":["148.5"],"这就能避免第三方js脚本代码阻塞代码的执行":["148.5"],"bbbbb":["149.4"],"是因为通过临时变量":["149.4"],"减少访问内存速度":["149.4"],"浏览器解析到img标签的src有值":["150.1"],"才会去发起请求":["150.1"],"那么就可以让图片需要展示时":["150.1"],"src中的图片地址值赋值给src属性值":["150.4"],"元素右边到视窗左边的距离":["150.5"],"innerheight":["150.5"],"当我们继续滚动直到出现页面底部":["150.6"],"通过开发者工具看到如下的截图":["150.6"],"等到我们看":["150.7"],"时就直接里面显示":["150.7"],"preimg1":["150.10"],"preimg2":["150.10"],"可能一次性加载较多的图片":["150.15"],"电商搜索产品时图片展示":["150.15"],"某次发布后的性能情况怎么样":["151.1"],"是否发布后对性能有影响":["151.1"],"感知到业务出错的概率":["151.1"],"内产生下一帧":["151.2"],"最大化空闲时间":["151.2"],"页面加载时长不超过":["151.2"],"主要利用window":["151.3"],"即从页面开始加载":["151.4"],"一直到用户可以自由输入或操作页面的时间":["151.4"],"四":["151.4","166.7"],"performance基础":["151.4"],"measurement":["151.5"],"开始时间的高精度":["151.5"],"其是":["151.5"],"chrome":["151.5","152.20","173.55","177.5"],"则返回关闭时":["151.7"],"的时间":["151.7"],"第一个字节时间":["151.7"],"如果传输层在开始请求之后失败并且连接被重开":["151.7"],"该属性将会被数制成新的请求的相对应的发起时间":["151.7"],"返回浏览器与服务器开始安全链接的握手时间":["151.7"],"则返回0":["151.7"],"unloadeventend":["151.7"],"不同点如下":["151.8"],"表示导航类型":["151.9"],"取值为为":["151.9"],"navigate":["151.9"],"prerender":["151.9"],"首次交互时间":["151.12"],"指页面":["151.12"],"事件触发的开始时间":["151.12"],"这时候页面可以交互":["151.12"],"首屏时间":["151.12"],"有两种方式":["151.12"],"第一种通过计算首屏区域内的所有图片加载时间":["151.12"],"然后取其最大值":["151.12"],"mutationobserver":["151.12"],"事件":["151.13","152.8","207.8"],"判断该":["151.13"],"的高度是否大于":["151.13"],"或者大于指定值":["151.13"],"如果大于了":["151.13"],"就表示主要内容已经渲染出来":["151.13"],"如果网页加载时间超过":["152.2"],"两倍":["152.3"],"autoanything":["152.3"],"将页面加载时间缩短一半时":["152.3"],"他们的销售额增长了":["152.3"],"保住":["152.5"],"2s":["152.5"],"的差距":["152.5"],"看似微乎其微":["152.5"],"文档被完全加载和解析完成之后":["152.6"],"事件被触发":["152.6"],"无需等待样式":["152.6"],"图像和子框架的完成加载":["152.6"],"onloaded":["152.6"],"当依赖的资源":["152.6"],"全部加载完毕之后才会触发":["152.6"],"是所有布局偏移分数的汇总":["152.6"],"凡是在页面完整生命周期内预料之外的布局偏移都包括":["152.6"],"打印出这几个关键指标":["152.7"],"lighthouse02":["152.7"],"到此为止":["152.7"],"我们知道了":["152.7"],"1441112693101":["152.8"],"且资源也准备就绪的时间":["152.8"],"1441112693214":["152.8"],"事件发送给文档":["152.8"],"也即":["152.8"],"回调函数开始执行的时间":["152.8"],"注意如果没有绑定":["152.8"],"值为":["152.8","195.8","286.52"],"事件的回调函数执行完毕的时间":["152.8"],"loadeventend":["152.8"],"1441112693215":["152.8"],"按照字母排序":["152.8"],"ready":["152.9"],"时间":["152.9","152.17","168.19"],"contentful":["152.11"],"paint":["152.11"],"耗时":["152.12","193.8"],"有木有那种一看就明白":["152.13"],"更简单":["152.13"],"那么接下来介绍的就是使用":["152.13"],"面板工具":["152.14"],"interactions":["152.15"],"总体报告":["152.15"],"点击第二个按钮":["152.16"],"紫色":["152.17"],"rendering":["152.17"],"表示样式计算和布局":["152.17"],"重排":["152.17","171.0"],"绿色":["152.17"],"painting":["152.17","152.20"],"表示重绘时间":["152.17"],"灰色":["152.17"],"other":["152.17","206.8","214.2","232.4"],"表示其它事件花费的时间":["152.17"],"绘制阶段":["152.18"],"结束后的图层合成操作":["152.18"],"光栅化线程池":["152.18"],"用来让":["152.18"],"执行光栅化的任务":["152.18"],"可以直观看到何时启动":["152.18"],"加速":["152.18"],"在勾选后":["152.18"],"就会显示折线图":["152.18"],"invalidate":["152.20"],"更改导致页面布局失效时触发":["152.20"],"页面布局计算执行时触发":["152.20"],"recalculate":["152.20"],"重新计算元素样式时触发":["152.20"],"scroll":["152.20"],"内嵌的视窗滚动时触发":["152.20"],"链接":["152.21"],"点击之后可以定位到相应操作对应的":["152.21"],"中也能看到":["152.22"],"无明显的区别":["152.22"],"我们还有一个更加":["152.23"],"便捷":["152.23"],"的工具":["152.23"],"它自动帮我们分析好了性能":["152.23"],"生成对应":["152.24"],"面板的数据":["152.24"],"方案":["152.25"],"lighthouse04":["152.25"],"lighthouse05":["152.26"],"当然可以":["152.29"],"我们再来用":["152.29"],"categories":["152.30"],"分析类别包括":["152.30"],"accessibility":["152.30"],"pwa":["152.30"],"seo":["152.30","175.22"],"throttling":["152.30"],"虚拟列表的实现分两种":["153.2"],"一种是列表项高度固定的情况":["153.2"],"itemheight":["153.4"],"滚动位置":["153.4"],"onscroll":["153.5","153.6","153.7","286.38"],"处理渲染异步导致的白屏现象":["153.5"],"改为同步更新":["153.5"],"但可能会有性能问题":["153.5"],"可以做":["153.5"],"节流":["153.5"],"优化":["153.5"],"列表项高度固定":["153.8"],"虚拟列表实现":["153.8","153.12"],"containerheight":["153.8","153.12"],"一推导公式为":["153.10"],"resetheight":["153.12"],"列表项高度动态":["153.12"],"itemcount":["153.12"],"getitemheight":["153.12"],"itemdata":["153.12"],"优化代码运行性能":["154.0"],"由于babel":["154.1"],"loader对文件的转化是非常耗时的":["154.1"],"所以缩小构建范围首先就是缩小需要babel":["154.1"],"loader处理的文件范围":["154.1"],"include":["154.1","154.8","206.14","256.8"],"三个配置项来命中":["154.1"],"bbb":["154.2"],"sum":["154.2"],"但实际上我们很少看到有这样的写法":["154.2"],"为什么呢":["154.2"],"这是因为上面开发我们会使用其他":["154.2"],"的工作就是根据":["154.3"],"传给它的信息以及":["154.3"],"的配置决定是刷新浏览器呢还是进行模块热更新":["154.3"],"当然如果仅仅是刷新浏览器":["154.3"],"也就没有后面那些步骤了":["154.3"],"hotmodulereplacement":["154.3"],"runtime":["154.3","154.20"],"是客户端":["154.3"],"的中枢":["154.3"],"它接收到上一步传递给他的新模块的":["154.3"],"它通过":["154.3"],"jsonpmaintemplate":["154.3"],"向":["154.3"],"端发送":["154.3"],"服务端返回一个":["154.3"],"该":["154.3"],"包含了所有要更新的模块的":["154.3"],"以":["154.4","154.5","154.10","154.17","254.5"],"为模板创建文件":["154.4","154.5","154.10","154.17"],"新的html文件有两个特点":["154.4","154.5","154.10","154.17"],"内容和源文件一致":["154.4","154.5","154.10","154.17"],"自动引入打包生成的js等资源":["154.4","154.5","154.10","154.17"],"缓存目录":["154.5","154.10"],"cachelocation":["154.5","154.10"],"eslintcache":["154.5","154.10"],"动态导入输出资源命名方式":["154.7"],"assetmodulefilename":["154.7"],"media":["154.7","154.8"],"ext":["154.7","154.8"],"字体等资源命名方式":["154.7"],"注意用hash":["154.7"],"clean":["154.7"],"代码分割配置":["154.7"],"splitchunks":["154.7"],"chunks":["154.7"],"ttf":["154.8","195.4"],"woff2":["154.8"],"asset":["154.8"],"hash":["154.8","177.11","195.9","286.43"],"query":["154.8","167.1"],"排除node":["154.8"],"modules代码不编译":["154.8"],"也可以用包含":["154.8"],"thread":["154.8"],"webpack":["154.9","154.13","173.95"],"已经默认开启了这个功能":["154.9"],"提取css成单独文件":["154.10","154.16","154.17"],"定义输出文件名和目录":["154.10","154.16","154.17"],"js会发生覆盖":["154.11"],"实际上会直接报错的":["154.11"],"filename":["154.11"],"对所有模块都进行分":["154.12"],"修改配置":["154.12"],"cachegroups":["154.12"],"组":["154.12"],"哪些模块要打包到一个组":["154.12"],"defaultvendors":["154.12"],"组名":["154.12"],"需要打包到一起的模块":["154.12"],"priority":["154.12"],"权重":["154.12"],"越大越高":["154.12"],"reuseexistingchunk":["154.12"],"如果当前":["154.12"],"chunk":["154.12","193.1"],"包含已从主":["154.12"],"bundle":["154.12","195.9"],"中拆分出的模块":["154.12"],"则它将被重用":["154.12"],"而不是生成新的模块":["154.12"],"计算":["154.13"],"eslint会对动态导入语法报错":["154.14"],"需要修改eslint配置文件":["154.14"],"webpackchunkname":["154.14"],"这是webpack动态导入模块命名的方式":["154.14"],"将来就会作为":["154.14"],"的值显示":["154.14"],"sourcetype":["154.15"],"rules":["154.15"],"var":["154.15","173.3"],"css压缩":["154.16","154.17"],"optimization":["154.16","154.17"],"css压缩也可以写到optimization":["154.16","154.17"],"minimizer里面":["154.16","154.17"],"效果一样的":["154.16","154.17"],"当生产模式会默认开启terserplugin":["154.16","154.17"],"但是我们需要进行其他配置":["154.16","154.17"],"就要重新写了":["154.16"],"parallel":["154.16","177.9"],"压缩图片":["154.16"],"implementation":["154.16"],"imagemingenerate":["154.16"],"gifsicle":["154.16"],"interlaced":["154.16"],"rel":["154.17","178.7"],"preload兼容性更好":["154.17"],"prefetch兼容性更差":["154.17"],"这里将一种最常用的":["154.19"],"添加externalstype":["154.19"],"修改externals配置":["154.19"],"将jquery的值改为数组":["154.19"],"截屏2022":["154.19"],"07":["154.19"],"thead":["154.20"],"多进程处理":["154.20"],"任务":["154.20"],"速度更快":["154.20"],"需要注意的是":["154.20"],"进程启动通信都有开销的":["154.20"],"要在比较多代码处理时使用才有效果":["154.20"],"减少代码体积":["154.20"],"tree":["154.20","219.6","226.1","233.0"],"shaking":["154.20"],"剔除了没有使用的多余代码":["154.20"],"让代码体积更小":["154.20"],"插件对":["154.20"],"进行处理":["154.20"],"让辅助代码从中引入":["154.20"],"而不是每个文件都生成辅助代码":["154.20"],"从而体积更小":["154.20"],"externals":["154.20"],"对需要分割的代码进行cdn资源引用":["154.20"],"减少代码的体积":["154.20"],"但同时会增加带宽":["154.20"],"文件路径":["155.0"],"组件的路径最终都是代码的一部分":["155.0"],"一律放各个分包":["155.2"],"wxss内的样式":["155.3"],"这个时候必须得借助工程化的手段":["155.5"],"才能达成压缩代码的目的":["155.5"],"示例":["155.6"],"编译后":["155.6"],"除了非独立分包可以依赖主包外":["155.8"],"分包之间不能互相使用自定义组件或进行":["155.8"],"require":["155.8"],"本地图片替换成cdn图片":["155.9"],"wxml结构精简":["155.9"],"进阶":["155.9"],"呢":["156.1"],"这样明显增加了性能开销":["156.1"],"我们的理想状态肯定不希望做无关的渲染":["156.1"],"所以我们做自定义":["156.1"],"的时候一定要注意":["156.1"],"需要":["156.1","178.1"],"减少性能开销":["156.1"],"我们为组件加入":["156.1"],"usememo":["156.1","178.6"],"试试":["156.1"],"margintop":["156.2"],"切换":["156.2","156.10"],"props":["156.2","178.3","178.5","209.8","209.12"],"primary":["156.2"],"overflowy":["156.3"],"notifynestedsubs":["156.4"],"我们可以看到":["156.7"],"当我们做无关的":["156.7"],"state":["156.7","166.5","166.6","190.6","208.5","209.8"],"改变的时候":["156.7"],"正常的函数也会刷新":["156.7"],"但":["156.7"],"没有刷新":["156.7"],"从而增强了渲染的性能":["156.7"],"useeffect":["156.7"],"onclick":["156.10","156.24","205.15"],"unmount":["156.10","216.6"],"的值就是7":["156.11"],"也就是说数据是响应式的":["156.11"],"那么我们可不可以将":["156.11"],"也写成":["156.11"],"的呢":["156.11"],"我可以自由设置":["156.11"],"count的值":["156.11"],"并且可以随时获取到count的最新值":["156.11"],"而不是通过":["156.11"],"我们来想想怎么去实现一个具备":["156.11"],"至于优化这一块":["156.12"],"使用上文说的":["156.12"],"usecreation":["156.12","156.26"],"就好":["156.12"],"再配合":["156.12"],"的形式":["156.13"],"可以是":["156.13"],"任意类型":["156.13"],"所以我们使用":["156.13"],"有不熟悉的小伙伴可以看看我的这篇文章":["156.13"],"一篇让你完全够用ts的指南":["156.13"],"又推销一遍":["156.13"],"有点打广告":["156.13"],"别在意":["156.13"],"再来说下":["156.13"],"form":["156.14","162.0","173.87"],"onsubmit":["156.14"],"preventdefault":["156.14"],"input":["156.14"],"onchange":["156.14"],"submit":["156.14"],"增加":["156.14"],"删除":["156.14","171.0","238.0","275.2"],"这里把":["156.15"],"默认设置成了":["156.15"],"至于为什么要这么写":["156.15"],"都会执行":["156.16"],"所以为了全面支持":["156.16"],"动态变化":["156.16"],"防止没有":["156.17"],"这个属性":["156.17"],"加1":["156.18"],"监听键盘事件":["156.18"],"效果":["156.19"],"gif":["156.19"],"cleartimeout":["156.20"],"clearinterval":["156.21","156.23","159.2"],"分等":["156.22"],"开始":["156.24"],"round":["156.24"],"在判断什么情况下来更新所对应的值":["156.26"],"明确入参与出参的具体意义":["156.26"],"最终打印的结果是hello":["157.0"],"会在开发中产生很多的问题":["157.1"],"在react18之后":["157.2"],"默认所有的操作都被放到了批处理中":["157.2"],"异步处理":["157.2"],"1668432810427":["157.2"],"如果希望代码可以同步拿到":["157.2"],"则需要执行特殊的flushsync操作":["157.2"],"flushsync":["157.2","205.12"],"结果按照":["158.1","164.1"],"里面的顺序依次打出":["158.1","164.1"],"发送请求的函数可以直接使用fetch即可":["158.1","164.1"],"否则则是取":["158.2","164.2"],"需要定义一个":["158.2","164.2"],"count":["158.2","164.2","282.2"],"计数器来判断是否已全部请求完成":["158.2","164.2"],"因为没有考虑请求是否请求成功":["158.2","164.2"],"所以请求成功或报错都应把结果保存在":["158.2","164.2"],"集合中":["158.2","164.2"],"完成了":["158.3","164.3"],"maxnum和urls":["158.3","164.3"],"length取最小进行调用":["158.3","164.3"],"times":["158.3","164.3"],"min":["158.3","164.3"],"这个在实际开发中会遇见的前端控制并发请求的需求就实现完成了":["158.5","164.5"],"代码相对来说没有太大的难度":["158.5","164.5"],"只要把一些特殊情况给考虑完全":["158.5","164.5"],"最后的实现也就没什么太大问题":["158.5","164.5"],"08":["159.0"],"再次请求服务端的数据":["159.1"],"这时由于服务端的数据发生了更新":["159.1"],"所以会给客户端返回最新的数据":["159.1"],"classname":["159.2","159.9","159.13","286.33","286.38"],"我们通常在实现轮询时不会拿到上一个请求的结果后立即发送第二个请求":["159.3"],"这就导致了即使服务端的数据更新了":["159.3"],"我们客户端还是需要一段时间才能拿到最新的数据":["159.3"],"客户端在收到服务端的回复后":["159.4"],"立即再次向服务端发送新的请求":["159.4"],"这次服务端在接收到客户端的请求后":["159.4"],"同样等待了一段时间":["159.4"],"这次好运的是服务端的数据发生了更新":["159.4"],"latestevents":["159.5"],"finally":["159.5","223.2","256.4","286.70"],"触发下次加载":["159.5"],"虽然http的keep":["159.6"],"alive字段可以解决一部分问题":["159.6"],"不过每次拿到数据后客户端都需要重新subscribe":["159.6"],"如果服务端支持升级协议的话":["159.8"],"会给客户端发送一个switching":["159.8"],"protocal的响应":["159.8"],"ol":["159.9"],"某些代理层软件":["159.10"],"如nginx":["159.10"],"默认配置的长连接时间是有限制的":["159.10"],"可能只有几十秒":["159.10"],"再通过这个连接将数据推送给客户端":["159.12"],"这里需要指出的是和websocket长连接不同":["159.12"],"sse的连接是":["159.12"],"单向的":["159.12"],"和websocket一样会遇到代理层配置的问题":["159.14"],"配置错误的话":["159.14"],"aa":["160.0"],"这几种情况":["162.0"],"可以禁止用户访问这些对象":["162.0"],"这两种方式":["162.0"],"需要创建script或form标签":["162.0"],"依然可以通过禁止开发者操作dom的方式解决":["162.0"],"不需要单独处理":["162.0"],"如何禁用三方库调接口呢":["162.0"],"三方库很多":["162.0"],"没办法全部列出来":["162.0"],"来进行逐一排除":["162.0"],"禁止调接口的路好像也被封死了":["162.0"],"最终方案":["162.0"],"沙箱":["162.0"],"sandbox":["162.0"],"通过上面的分析":["162.0"],"传统的思路确实解决不了当前的需求":["162.0"],"阻止开发者操作dom和调接口":["162.0"],"沙箱说":["162.0"],"这个我熟啊":["162.0"],"拦截隔离这类的活":["162.0"],"我最拿手了":["162.0"],"是一种安全机制":["162.0"],"为运行中的程序提供隔离环境":["162.0"],"通常用于执行未经测试或不受信任的程序或代码":["162.0"],"它会为待执行的程序创建一个独立的执行环境":["162.0"],"内部程序的执行不会影响到外部程序的运行":["162.0"],"打印结果":["162.1"],"不是最外层的全局变量":["162.1"],"这个沙箱有一个明显的问题":["162.1"],"found":["162.2","219.6"],"没那么简陋的沙箱":["162.2"],"littlepoorsandbox":["162.2"],"将":["162.2","195.4","195.7"],"指向手动构造的全局代理对象":["162.2"],"返回true":["162.3"],"获取当前提供上下文对象中的变量":["162.3"],"如果返回false":["162.3"],"会继续向上层作用域链中查找":["162.3"],"使用with关键字":["162.3"],"来改变作用域":["162.3"],"将指定的上下文对象":["162.3"],"添加到待执行代码作用域的顶部":["162.3"],"makesandbox":["162.3"],"待执行的代码code":["162.3","286.69"],"获取document对象":["162.3","286.69"],"经过小伙伴的指导":["162.3","286.69"],"现在我们的计算器插件只能对":["163.0"],"进行操作":["163.0"],"如果一个插件作者想要添加一些高级的功能":["163.0"],"内存":["163.0","173.51"],"按钮或者一种追踪历史记录的方法":["163.0"],"他们可能做不到":["163.0"],"这里需要权衡":["163.0"],"给插件作者太多权利可能会影响项目的稳定性":["163.0"],"但太少的权利可能使他们很难解决他们的问题":["163.0"],"还能做什么":["163.0"],"还可以做很多事情来改进我们的系统":["163.0"],"例":["163.0","172.0"],"如果插件作者忘记定义名称或返回值":["163.0"],"我们可以添加错误处理来通知他们":["163.0"],"扩展插件的范围":["163.0"],"目前":["163.0"],"插件仅可以添加一个":["163.0"],"我们可以为某些生命周期事件注册回调":["163.0"],"扩展插件注册机制":["163.0"],"仅支持一次注册一个":["163.0"],"我们可以使其支持批量注册":["163.0"],"的一种为了提高用户体验":["166.0"],"的有效时间":["166.1"],"当他一提交时":["166.1"],"便发现因为":["166.1"],"的过期":["166.1"],"需要重新登录":["166.1"],"这样势必会造成用户的使用感觉极差":["166.1"],"如此环境下":["166.1"],"就是为了平衡这一矛盾而诞生的":["166.2"],"经常频繁的使用":["166.2"],"暴露的几率很大":["166.2"],"那我们就给他设置短的过期时间":["166.2"],"提升安全性":["166.2"],"使用的不频繁":["166.2"],"暴露几率相比较":["166.2"],"小很多":["166.2"],"我们需要给他设置较长的过期时间":["166.2"],"h":["166.3"],"保存refreshtoken的有效时间戳":["166.3"],"一般设置为1d以上":["166.3"],"监控refreshtoken有无过期":["166.4"],"switch":["166.5","166.6"],"无效的refreshtoken":["166.5"],"valueof":["166.7"],"secret":["166.7"],"前端如何实现":["166.7"],"身份凭证过期":["166.8"],"请重新登录":["166.8"],"对响应错误做点什么":["166.8"],"网络错误":["166.8"],"没有信息":["166.8"],"pathname":["166.8"],"以便刷新后构造新的请求":["166.9"],"同时由于promise链式调用的效果":["166.9"],"的结果就是最终的请求结果":["166.9"],"重新获取":["166.9"],"方法示例":["167.0"],"后端为了减少处理请求的压力":["167.2"],"通常会让一个接口支持同时查询多条数据的能力":["167.2"],"然后从map中取出对应promise的resolve然后执行":["167.3"],"则有可能为了在超时前执行函数而打乱执行顺序":["168.2"],"单击":["168.3"],"esc":["168.3"],"退出当前状态":["168.3"],"div1":["168.7"],"margin":["168.7"],"如果有空闲时间":["168.11"],"则执行步骤10":["168.11"],"requestidlecallback回调函数队列中取第一个":["168.11"],"在微任务执行后执行":["168.13"],"requestidlecallback是在浏览器渲染后有空闲时间时执行":["168.13"],"如果刚好是自己的知识盲区不妨帮忙点赞支持一下":["168.15"],"下面我们分开介绍两个api":["168.16"],"在正式开始之前我们不妨先学习一下如何使用":["168.16"],"该方法需要传入一个回调函数作为参数":["168.17"],"该回调函数会在浏览器下一次重绘之前执行":["168.17"],"在两秒后停止动画":["168.19"],"调用参数是先前调用":["168.20"],"was":["168.23","206.5","219.6"],"really":["168.23"],"slow":["168.23"],"clearalert":["168.23"],"一个window或者worker":["168.24"],"是没有办法在":["168.25"],"开始采用这样的机制":["168.26"],"已经实现":["168.26"],"具体请参考以下内容":["168.26"],"一直以来":["168.26"],"不同浏览器中出现这种最小延迟的情况有所不同":["168.26"],"例如firefox":["168.26"],"从其他地方调用了setinterval":["168.26"],"或者在嵌套函数调用settimeout":["168.26"],"不一定会执行":["168.28"],"看浏览器空闲时间":["168.28"],"不需考虑多余的问题":["169.2"],"且即便在前端页面保存对应图片":["169.2"],"监听":["169.4"],"createobserver":["169.4"],"watermarkel":["169.4"],"observer":["169.4"],"mutationslist":["169.4"],"removednodes":["169.4"],"currstyle":["169.4"],"getattribute":["169.4"],"证明被删除了":["169.4"],"在这里插入图片描述":["170.1","170.13"],"径向渐变通过指定渐变的中心":["170.4"],"椭圆所在的位置":["170.4"],"和结束形状":["170.4"],"透明色占据0rpx":["170.5"],"drop":["170.6"],"shadow":["170.6"],"2px":["170.6"],"rgba":["170.6"],"after":["170.8","170.12","206.8","216.5","217.7"],"4内圆角":["170.10"],"上边20rpx":["170.11"],"position位置":["170.11"],"card":["170.11"],"003":["170.11"],"red":["170.12"],"20rpx":["170.14"],"webkit":["170.14"],"mask":["170.14"],"radial":["170.14"],"gradient":["170.14"],"center":["170.14","172.0"],"c5":["170.15"],"487rpx":["170.15"],"解决filter":["170.15"],"导致border":["170.15"],"radius生效":["170.15"],"translate3d":["170.15"],"184rpx":["170.15"],"212rpx":["170.15"],"如何触发重排和重绘":["171.0"],"任何改变用来构建渲染树的信息都会导致一次重排或重绘":["171.0"],"更新dom节点":["171.0"],"通过display":["171.0"],"none隐藏一个dom节点":["171.0"],"触发重排和重绘":["171.0"],"通过visibility":["171.0"],"hidden隐藏一个dom节点":["171.0"],"只触发重绘":["171.0"],"因为没有几何变化":["171.0"],"移动或者给页面中的dom节点添加动画":["171.0"],"添加一个样式表":["171.0"],"调整样式属性":["171.0"],"用户行为":["171.0"],"例如调整窗口大小":["171.0"],"改变字号":["171.0"],"或者滚动":["171.0"],"重绘与重排的区别":["171.0"],"部分渲染树":["171.0"],"或者整个渲染树":["171.0"],"需要重新分析并且节点尺寸需要重新计算":["171.0"],"表现为重新生成布局":["171.0"],"重新排列元素":["171.0"],"重绘":["171.0"],"由于节点的几何属性发生改变或者由于样式发生改变":["171.0"],"例如改变元素背景色时":["171.0"],"屏幕上的部分内容需要更新":["171.0"],"表现为某些元素的外观被改变":["171.0"],"单单改变元素的外观":["171.0"],"肯定不会引起网页重新生成布局":["171.0"],"但当浏览器完成重排之后":["171.0"],"将会重新绘制受到此次重排影响的部分":["171.0"],"重排和重绘代价是高昂的":["171.0"],"它们会破坏用户体验":["171.0"],"并且让ui展示非常迟缓":["171.0"],"而相比之下重排的性能影响更大":["171.0"],"在两者无法避免的情况下":["171.0"],"一般我们宁可选择代价更小的重绘":["171.0"],"不一定会出现":["171.0"],"必然会出现":["171.0"],"如何优化图片":["171.0"],"对于很多装饰类图片":["171.0"],"尽量不用图片":["171.0"],"因为这类修饰图片完全可以用":["171.0"],"去代替":["171.0"],"对于移动端来说":["171.0"],"屏幕宽度就那么点":["171.0"],"完全没有必要去加载原图浪费带宽":["171.0"],"一般图片都用":["171.0"],"cdn":["171.0"],"加载":["171.0","177.8"],"可以计算出适配屏幕的宽度":["171.0"],"然后去请求相应裁剪好的图片":["171.0"],"小图使用":["171.0"],"base64":["171.0","195.4"],"雪碧图":["171.0"],"选择正确的图片格式":["171.0"],"对于能够显示":["171.0"],"webp":["171.0"],"格式的浏览器尽量使用":["171.0"],"因为":["171.0","177.10","220.5","229.0"],"格式具有更好的图像数据压缩算法":["171.0"],"能带来更小的图片体积":["171.0"],"而且拥有肉眼识别无差异的图像质量":["171.0"],"缺点就是兼容性并不好":["171.0"],"其实对于大部分图标这类图片":["171.0"],"完全可以使用":["171.0"],"代替":["171.0","286.37"],"你能描述一下渐进增强和优雅降级之间的不同吗":["171.0"],"渐进增强":["171.0"],"progressive":["171.0"],"enhancement":["171.0"],"针对低版本浏览器进行构建页面":["171.0"],"保证最基本的功能":["171.0"],"然后再针对高级浏览器进行效果":["171.0"],"交互等改进和追加功能达到更好的用户体验":["171.0"],"优雅降级":["171.0"],"graceful":["171.0"],"degradation":["171.0"],"一开始就构建完整的功能":["171.0"],"然后再针对低版本浏览器进行兼容":["171.0"],"区别":["171.0"],"优雅降级是从复杂的现状开始":["171.0"],"并试图减少用户体验的供给":["171.0"],"而渐进增强则是从一个非常基础的":["171.0"],"能够起作用的版本开始":["171.0"],"并不断扩充":["171.0"],"以适应未来环境的需要":["171.0"],"降级":["171.0"],"功能衰减":["171.0"],"意味着往回看":["171.0"],"而渐进增强则意味着朝前看":["171.0"],"同时保证其根基处于安全地带":["171.0"],"新增了那些东西":["171.0"],"新增东西众多":["171.0"],"这里列举出一些关键的新增内容":["171.0"],"选择器":["171.0"],"盒子模型属性":["171.0"],"tt":["172.0"],"u":["172.0","219.3"],"big":["172.0"],"对可选用性产生负面影响的元素":["172.0"],"frameset":["172.0"],"noframes":["172.0"],"怎么处理html5新标签兼容问题":["172.0"],"主要有两种方式":["172.0"],"实现标签被识别":["172.0"],"tagname":["172.0"],"方法可以让浏览器识别新的标签":["172.0"],"浏览器支持新标签后":["172.0"],"还可以为新标签添加css样式":["172.0"],"用javascript解决":["172.0"],"使用html5的shim框架":["172.0"],"head":["172.0","200.12","286.2"],"标签中调用以下代码":["172.0"],"endif":["172.0"],"如何实现在一张图片上的某个区域做到点击事件":["172.0"],"我们可以通过图片热区技术":["172.0"],"插入一张图片":["172.0"],"并设置好图像的有关参数":["172.0"],"标记中设置参数":["172.0"],"usemap":["172.0"],"以表示对图像地图的引用":["172.0"],"用":["172.0","181.0","195.4","209.15","286.37"],"标记设定图像地图的作用区域":["172.0"],"并取名":["172.0"],"分别用":["172.0"],"area":["172.0"],"标记针对相应位置互粉出多个矩形作用区域":["172.0"],"并设定好链接参数":["172.0"],"shape":["172.0"],"poly":["172.0"],"coords":["172.0"],"在答案中":["173.1"],"加入了":["173.1"],"来判断调用方式":["173.1"],"中的所有代码均处于严格模式之下":["173.1"],"无论是构造函数本身":["173.1"],"还是原型方法":["173.1"],"都使用了严格模式":["173.1"],"利用es6的set去重":["173.2"],"适配范围广":["173.2"],"效率一般":["173.2"],"以及暂时性死区的知识":["173.3"],"和以前的":["173.3"],"关键字不一样":["173.3"],"无法在":["173.3"],"解析":["173.4","177.9","179.5"],"主要考察的是数组相关的知识":["173.4"],"对象上面有一个属性":["173.4"],"接下来开始执行异步代码":["173.5"],"那么大家时间没写":["173.5"],"就都是相同的":["173.5"],"所以谁先被放入到异步队列":["173.5"],"谁就先执行":["173.5"],"所以先打印出":["173.5"],"然后是":["173.5"],"接下来执行之前":["173.5"],"得到":["173.6"],"之后为这个":["173.7"],"绑定了点击事件":["173.7"],"点击后打印出":["173.7"],"箭头函数":["173.8","173.23","173.90"],"使用圣杯模式实现继承":["173.9"],"在子类上面添加方法":["173.9"],"的上下文":["173.10","173.76"],"会直接调用":["173.11"],"会创建一个新函数":["173.11"],"任务队列中的任务又可以被分为":["173.12"],"种类型":["173.12"],"macrotask":["173.12"],"与微任务":["173.12"],"浏览器和":["173.13"],"环境下":["173.13"],"微任务任务队列的执行时机不同":["173.13"],"端":["173.13"],"微任务在事件循环的各个阶段之间执行":["173.13"],"浏览器端":["173.13"],"微任务在事件循环的宏任务执行完之后执行":["173.13"],"v11":["173.13"],"版本于":["173.13"],"年":["173.13"],"月":["173.13"],"主要有以下变化":["173.13"],"v8":["173.13"],"总而言之":["173.14","173.47"],"就是将":["173.14","173.47"],"argn":["173.14","173.47"],"如果全部成功":["173.15"],"状态变为":["173.15"],"resolved":["173.15","236.4"],"返回值将组成一个数组传给回调":["173.15"],"只有有一个失败":["173.15"],"状态就变为":["173.15"],"会被绑定到指定参数的对象上":["173.16"],"一般通过上下文对象调用函数时":["173.16"],"会被绑定到该对象上":["173.16"],"在箭头函数中":["173.16"],"又被称之为伪经典模式":["173.17"],"结合了两种模式的优点":["173.17"],"传参和复用":["173.17"],"可以继承父类原型上的属性":["173.17"],"可以传参":["173.17"],"可复用":["173.17"],"每个新实例引入的构造函数属性是私有的":["173.17"],"一旦事件对象到达事件目标":["173.18"],"该阶段的事件监听器就要对它进行处理":["173.18"],"如果一个事件对象类型被标志为不能冒泡":["173.18"],"那么对应的事件对象在到达此阶段时就会终止传播":["173.18"],"匿名自执行函数":["173.19","173.73"],"结果缓存":["173.19","173.73"],"事件处理程序":["173.20"],"而不必给每个可单击的元素分别添加事件处理程序":["173.20"],"事件冒泡":["173.20"],"bubbling":["173.20"],"是指事件开始时由最具体的元素":["173.20"],"语句和":["173.21"],"语句里面的":["173.21"],"也属于块作用域":["173.21"],"在以前没有块作用域的时候":["173.21"],"声明的变量或者使用":["173.22"],"声明的常量":["173.22"],"super":["173.23"],"关键字":["173.24","176.6"],"箭头函数不具有":["173.24"],"原型对象":["173.24"],"而普通函数具有":["173.24"],"访问方式":["173.25"],"原始值":["173.25","184.4"],"访问到的是值":["173.25"],"引用值":["173.25"],"访问到的是引用地址":["173.25"],"比较方式":["173.25"],"比较的是值":["173.25","173.37"],"比较的是地址":["173.25","173.37"],"的操作都会返回":["173.26"],"函数作用域里面所声明的变量只在函数中提供访问使用":["173.27"],"是一个表示":["173.28"],"空对象指针":["173.28"],"转为数值时为":["173.28"],"典型用法是":["173.28"],"作为函数的参数":["173.28"],"表示该函数的参数不是对象":["173.28"],"作为对象原型链的终点":["173.28"],"的原始值":["173.28"],"nan":["173.28"],"终于让":["173.30"],"对于异步操作有了终极解决方案":["173.30"],"实际上":["173.30"],"只是生成器的一种语法糖而已":["173.30"],"简化了外部执行器的代码":["173.30"],"同时利用":["173.30"],"属性也只适用于外部脚本文件":["173.31"],"并告诉浏览器立即下载文件":["173.31"],"但与":["173.31"],"不同的是":["173.31"],"标记为":["173.31"],"的脚本并不保证按照指定它们的先后顺序执行":["173.31"],"所以总结起来":["173.31"],"两者之间最大的差异就是在于脚本下载完之后何时执行":["173.31"],"是最接近我们对于应用脚本加载和执行的要求的":["173.31"],"queue":["173.32"],"当主线程的执行栈清空之后会读取任务队列中的回调函数":["173.32"],"当任务队列被读取完毕之后":["173.32"],"当试图访问一个对象的属性时":["173.33"],"它不仅仅在该对象上搜寻":["173.33"],"还会搜寻该对象的原型":["173.33"],"以及该对象的原型的原型":["173.33"],"如果上一级也没有":["173.34"],"就再一层一层向上寻找":["173.34"],"直到找到全局作用域还是没找到":["173.34"],"就宣布放弃":["173.34"],"闭包的缺点":["173.35"],"因为闭包的作用域链会引用包含它的函数的活动对象":["173.35"],"导致这些活动对象不会被销毁":["173.35"],"题答案":["173.36","173.49","173.50","173.53","173.60","173.71","173.86","173.88","173.97"],"动态属性":["173.37"],"无法添加动态属性":["173.37"],"参考答案":["173.38"],"然后返回目标对象":["173.40"],"而检测是基于原型链进行查找的":["173.41"],"有没有在对象":["173.41"],"它们":["173.42"],"然后它访问并":["173.42"],"所有来自它们的引用":["173.42"],"然后它访问标记的对象并标记它们的引用":["173.42"],"所有被访问的对象都被记住":["173.42"],"以便以后不再访问同一个对象两次":["173.42"],"新增元编程相关":["173.43"],"reflect":["173.43"],"gc":["173.44"],"回收掉":["173.44"],"提供的接口与":["173.44"],"相同":["173.44"],"当我们的回调函数嵌套的层数过多时":["173.45"],"就会导致代码横向发展":["173.45"],"child3":["173.46"],"即":["173.48","177.14"],"2n":["173.48","288.2"],"秒内执行":["173.48"],"外部排序法":["173.51"],"指将需要处理的所有数据都加载到":["173.51"],"内部存储器":["173.51"],"中进行排序":["173.51"],"外部排序":["173.51"],"数据量过大":["173.51"],"socket":["173.52"],"事件回调":["173.52"],"的运行机制如下":["173.52"],"引擎解析":["173.52"],"脚本":["173.52"],"用来定义常量":["173.54"],"使用时必须初始化":["173.54"],"即必须赋值":["173.54"],"那么闭包就会产生":["173.55"],"且在":["173.55"],"中使用这个执行上下文":["173.55"],"的函数名代指闭包":["173.55"],"一般如何产生闭包":["173.55"],"reqcount":["173.57"],"举个数组":["173.58"],"myarr":["173.58"],"在数组中有空项的时候":["173.59"],"方法会将中的空项进行移除":["173.59"],"reject2":["173.61"],"defineproperty方式可以代理到自身":["173.62"],"代理之后使用对象本身即可":["173.62"],"也可以代理到别的对象身上":["173.62"],"代理之后需要使用代理对象":["173.62"],"新增了":["173.63"],"extends":["173.63","184.14","249.0"],"递归容易造成爆栈":["173.64"],"中返回的内容":["173.65"],"获取的是":["173.65"],"函数中":["173.65"],"类型是在":["173.66"],"的二进制全部为":["173.67"],"自然前三位也是":["173.67"],"所以执行":["173.67"],"从上述过程可以看出":["173.69"],"就认为":["173.69"],"中的原始值":["173.70"],"数字和字符串":["173.70"],"是不可更改的":["173.70"],"引用类型是可以直接改变其值的":["173.70"],"题":["173.72"],"同一个值又被赋值给另一个变量":["173.74"],"这个引用类型值的引用次数加1":["173.74"],"当包含这个引用类型值的变量又被赋值成另一个值了":["173.74"],"那么这个引用类型值的引用次数减":["173.74"],"当引用次数变成":["173.74"],"查找特定属性的时候":["173.75"],"我们先去这个对象里去找":["173.75"],"如果没有的话就去它的原型对象里面去":["173.75"],"如果还是没有的话再去向原型对象的原型对象里去寻找":["173.75"],"proto":["173.77","204.6"],"来访问到":["173.77"],"我们可以想象任何被提升的东西都会被移动到顶部":["173.78"],"但是实际上你的代码并不会被修改":["173.78"],"函数声明也会被提升":["173.78"],"但是被提升到了最顶端":["173.78"],"没有歧义的情况下":["173.79"],"不会影响结果的情况下":["173.79"],"等于自身":["173.80"],"所以可以将":["173.80"],"是一个指针":["173.81"],"指向存储对象的内存处":["173.81"],"即按址访问":["173.81"],"引用类型除":["173.81"],"还包括":["173.81"],"也有可能是面试官故意挖的一个坑":["173.83"],"的结果":["173.84"],"也会调用所有的":["173.84"],"pure":["173.85","206.5","249.2"],"main3":["173.87"],"export与export":["173.87"],"default的区别及联系":["173.87"],"default均可用于导出常量":["173.87"],"模块等":["173.87"],"如果":["173.89","174.25","204.5","209.3","209.4"],"那么面试官极大可能针对箭头函数展开二次提问":["173.90"],"询问你箭头函数有哪些特性":["173.90"],"中的函数还有一个":["173.91"],"具体的新增特性可以参阅前面第":["173.92"],"数据":["173.93","175.20"],"转换布尔":["173.93"],"数据类型":["173.93"],"hello":["173.93","295.4","295.6"],"转换数值":["173.93"],"如果你的函数没有任何返回值":["173.94"],"那么它很可能就具有副作用":["173.94"],"那么我们如何移除这个副作用呢":["173.94"],"其实不需要修改外部的":["173.94"],"变量":["173.94"],"我们只需要在函数中将验证的结果":["173.94"],"出来":["173.94"],"ensure":["173.95"],"版本中的代码分割":["173.95"],"es":["173.95"],"告诉面试官例如哪个哪个部分是怎么怎么实现的":["173.96"],"并针对这部分的源码实现":["173.96"],"bound":["173.98"],"callable":["173.98"],"aargs":["173.98"],"array":["173.98","214.2","236.7","286.16"],"ftobind":["173.98"],"fnop":["173.98"],"fbound":["173.98"],"concat":["173.98","174.25"],"infinity":["173.99"],"条件不成立":["174.4"],"找出所有满足条件且不重复的三元组合":["174.6"],"实现将数组反转的效果":["174.20"],"反转为":["174.20"],"交换位置":["174.21"],"不是目前的头部元素":["174.22"],"则交换两者":["174.22"],"将其向后移动一个位置":["174.23"],"重新组合数组":["174.24"],"有一方为空":["174.25"],"则直接将另一方的所有元素依次添加到result中":["174.25"],"将子节点放到父节点的":["174.29"],"children中":["174.29"],"如果该节点有子节点":["174.33"],"继续添加进入栈顶":["174.33"],"结果存在再返回":["174.40"],"测试":["174.40","177.5"],"递归判断右子树是否符合二叉查找树的规则":["174.44"],"求返回获得利润的最大值":["174.50"],"fee":["174.51"],"存数据":["174.52"],"关键代码":["174.52"],"重新计算min":["174.52"],"分两种情况":["174.52"],"如果后面继续涨":["174.52"],"则默认继续持有":["174.52"],"若后面跌":["174.52"],"计算第n项的值":["174.54"],"求返回滑动窗口最大值":["174.58"],"k":["174.59","283.11"],"新值不为最大值时":["174.60"],"window已剔除掉比新值小的值":["174.60"],"窗口是从0开始移动":["174.60"],"当移动的距离大于等于目标范围后":["174.60"],"findarrnode":["174.64"],"arr":["174.64"],"找到符合条件最后一项的下标":["174.64"],"这样才能保证数组的顺序是正确的":["174.64"],"参数类型":["175.0"],"get参数只允许ascii字符":["175.0"],"的参数传递支持更多的数据类型":["175.0"],"如文件":["175.0"],"post和put请求的区别":["175.0"],"put请求是向服务器端发送数据":["175.0"],"从而修改数据的内容":["175.0"],"但是不会增加数据的种类等":["175.0"],"referer":["175.2"],"发出请求的页面的url":["175.2"],"走路去的":["175.4"],"3g网速":["175.4"],"骑膜拜去的":["175.4"],"wifi":["175.4"],"骑电动车去的":["175.4"],"4g":["175.4"],"骑小牛牌电动车去的":["175.4"],"小黄人把取回的外卖送到你家门口":["175.4"],"设置请求方法和地址":["175.4"],"liulongbin":["175.4"],"login":["175.4","195.0"],"post请求才需要设置":["175.4"],"onreadystatechange":["175.5"],"onreadystatechange触发时机":["175.5"],"readstate状态变化":["175.5"],"成功后提示":["175.6"],"修改图片路径":["175.6"],"模拟鼠标点击":["175.7"],"触发注册的onclick事件":["175.7"],"默认点击事件":["175.7"],"头信息压缩":["175.9"],"实现了头信息压缩":["175.9"],"由于":["175.9","207.3","217.1"],"协议不带状态":["175.9"],"每次请求都必须附上所有信息":["175.9"],"请求的很多字段都是重复的":["175.9"],"一模一样的内容":["175.9"],"每次请求都必须附带":["175.9"],"这会浪费很多带宽":["175.9"],"也影响速度":["175.9"],"对这一点做了优化":["175.9"],"引入了头信息压缩机制":["175.9"],"一方面":["175.9"],"头信息使用":["175.9"],"gzip":["175.9"],"compress":["175.9","195.9"],"压缩后再发送":["175.9"],"另一方面":["175.9"],"客户端和服务器同时维护一张头信息表":["175.9"],"所有字段都会存入这个表":["175.9"],"生成一个索引号":["175.9"],"以后就不发送同样字段了":["175.9"],"只发送索引号":["175.9"],"这样就能提高速度了":["175.9"],"osi的七层模型是什么":["175.10"],"iso于1978年开发的一套标准架构iso模型":["175.10"],"被引用来说明数据通信协议的结构和功能":["175.10"],"osi在功能上可以划分为两组":["175.10"],"网络群组":["175.10"],"物理层":["175.10"],"数据链路层":["175.10"],"网络层":["175.10"],"使用者群组":["175.10"],"传输层":["175.10"],"会话层":["175.10"],"表示层":["175.10"],"应用层":["175.10"],"osi":["175.10"],"七层网络模型":["175.10"],"四层概念模型":["175.10"],"对应网络协议":["175.10"],"rtsp":["175.10"],"tftp":["175.10"],"简单文本传输协议":["175.10"],"nfs":["175.10"],"数域筛法":["175.10"],"数据加密":["175.10"],"wais":["175.10"],"广域信息查询系统":["175.10"],"telnet":["175.10"],"internet远程登陆服务的标准协议":["175.10"],"rlogin":["175.10"],"snmp":["175.10"],"网络管理协议":["175.10"],"gopher":["175.10"],"smtp":["175.10"],"简单邮件传输协议":["175.10"],"域名系统":["175.10"],"传输控制协议":["175.10"],"udp":["175.10"],"用户数据报协议":["175.10"],"网际层":["175.10"],"地域解析协议":["175.10"],"rarp":["175.10"],"akp":["175.10"],"uucp":["175.10"],"copy":["175.10","195.7"],"fddi":["175.10"],"光纤分布式数据接口":["175.10"],"ethernet":["175.10"],"arpanet":["175.10"],"pdn":["175.10"],"公用数据网":["175.10"],"slip":["175.10"],"串行线路网际协议":["175.10"],"ppp":["175.10"],"点对点协议":["175.10"],"通过拨号或专线方建立点对点连接发送数据":["175.10"],"其中高层":["175.10"],"4层":["175.10"],"定义了应用程序的功能":["175.10"],"下面三层":["175.10"],"1层":["175.10"],"主要面向通过网络的端到端的数据流":["175.10"],"二":["175.10"],"什么是https协议":["175.10"],"超文本传输安全协议":["175.10"],"hypertext":["175.10"],"transfer":["175.10"],"protocol":["175.10"],"简称":["175.10"],"是一种通过计算机网络进行安全通信的传输协议":["175.10"],"https经由http进行通信":["175.10"],"利用ssl":["175.10"],"tls来加密数据包":["175.10"],"https的主要目的是提供对网站服务器的身份认证":["175.10"],"保护交换数据的隐私与完整性":["175.10"],"http协议采用":["175.10"],"信息":["175.10"],"存在":["175.10"],"信息窃听":["175.10"],"信息篡改":["175.10"],"信息劫持":["175.10"],"的风险":["175.10"],"为了解决这样的问题":["175.11"],"在浏览器中能明显看到from":["175.12"],"cache字样":["175.12"],"强缓存失效":["175.12"],"进入协商缓存阶段":["175.12"],"首先验证etagetag可以保证每一个资源是唯一的":["175.12"],"资源变化都会导致etag变化":["175.12"],"服务器根据客户端上送的if":["175.12"],"match值来判断是否命中缓存":["175.12"],"协商缓存last":["175.12"],"modify":["175.12"],"since阶段":["175.12"],"客户端第一次请求资源时":["175.12"],"服务服返回的header中会加上last":["175.12"],"modify是一个时间标识该资源的最后修改时间":["175.12"],"再次请求该资源时":["175.12"],"request的请求头中会包含if":["175.12"],"该值为缓存之前返回的last":["175.12"],"服务器收到if":["175.12"],"since后":["175.12"],"根据资源的最后修改时间判断是否命中缓存":["175.12"],"浏览器安全":["175.12"],"有哪些可能引起前端安全的问题":["175.12"],"跨站脚本":["175.12"],"site":["175.12"],"scripting":["175.12"],"种代码注":["175.12"],"为了与":["175.12"],"区分所以被称作":["175.12"],"早期常":["175.12"],"络论坛":["175.12"],"起因是":["175.12"],"站没有对":["175.12"],"户的输":["175.12"],"严格的限制":["175.12"],"使得攻击者可以将脚本上传到帖":["175.12"],"让其他":["175.12"],"浏览到有恶意脚本的":["175.12"],"其注":["175.12"],"式很简单包括但不限于":["175.12"],"flash":["175.12"],"iframe的滥":["175.12"],"iframe中的内容是由第三":["175.12"],"来提供的":["175.12"],"默认情况下他们不受控制":["175.12"],"他们可以在iframe中运":["175.12"],"javascirpt脚本":["175.12"],"flash插件":["175.12"],"弹出对话框等等":["175.12"],"这可能会破坏前端":["175.12"],"户体验":["175.12"],"跨站点请求伪造":["175.12"],"forgeries":["175.12"],"csrf":["175.12","184.29"],"指攻击者通过设置好的陷阱":["175.12"],"强制对已完成认证的":["175.12"],"户进":["175.12"],"预期的个":["175.12"],"信息或设定信息等某些状态更新":["175.12"],"属于被动攻击":["175.12"],"恶意第三":["175.12"],"论是后端服务器应":["175.12"],"还是前端应":["175.12"],"开发":["175.12","177.5"],"绝":["175.12"],"多数时候都是在借助开发框架和各种类库进":["175.12"],"快速开发":["175.12"],"旦第三":["175.12"],"库被植":["175.12"],"恶意代码很容易引起安全问题":["175.12"],"网络劫持有哪几种":["175.12"],"如何防范":["175.12"],"络劫持分为两种":["175.12"],"dns劫持":["175.12"],"输":["175.12"],"京东被强制跳转到淘宝这就属于dns劫持":["175.12"],"dns强制解析":["175.12"],"通过修改运营商的本地dns记录":["175.12"],"来引导":["175.12"],"户流量到缓存服务器":["175.12"],"302跳转的":["175.12"],"通过监控":["175.12"],"络出":["175.12"],"的流量":["175.12"],"分析判断哪些内容是可以进":["175.12"],"劫持处理的":["175.12"],"再对劫持的内存发起302跳转的回复":["175.12"],"引导":["175.12"],"户获取内容":["175.12"],"http劫持":["175.12"],"歌但是":["175.12"],"直有贪玩蓝":["175.12"],"告":["175.12"],"由于http明":["175.12"],"传输":["175.12"],"运营商会修改你的http响应内容":["175.12"],"即加":["175.12"],"样式表及图片":["175.13"],"如何阻塞文档解析":["175.13"],"理论上":["175.13"],"既然样式表不改变":["175.13"],"也就没有必要停下文档的解析等待它们":["175.13"],"存在一个问题":["175.13"],"脚本执行时可能在文档的解析过程中请求样式信息":["175.13"],"如果样式还没有加载和解析":["175.13"],"脚本将得到错误的值":["175.13"],"显然这将会导致很多问题":["175.13"],"如果浏览器尚未完成":["175.13"],"cssom":["175.13"],"使用nginx反向代理":["175.14"],"在一个站点登陆之后":["175.14"],"localstorage受到同源策略的限制":["175.15"],"即端口":["175.15"],"协议":["175.15","175.19"],"脚本不能够操作访问操作其他域下的":["175.16"],"当前域下":["175.16"],"无法发送跨域请求":["175.16"],"同源政策的目的主要是为了保证用户的信息安全":["175.16"],"它只是对":["175.16"],"脚本的一种限制":["175.16"],"并不是对浏览器的限制":["175.16"],"对于一般的":["175.16"],"或者script":["175.16"],"就可以跨源通信了":["175.17"],"存在被":["175.18"],"攻击的可能":["175.18"],"主机":["175.19"],"端口号":["175.19"],"也可以设置为":["175.19"],"响应":["175.20"],"然后服务器对这个":["175.21"],"对":["175.21","258.10"],"进行双重验证":["175.21"],"服务器在用户访问网站页面时":["175.21"],"向请求域名注入一个cookie":["175.21"],"内容为随机字符串":["175.21"],"然后当用户再次向服务器发送请求的时候":["175.21"],"中取出这个字符串":["175.21"],"添加到":["175.21"],"参数中":["175.21"],"然后服务器通过对":["175.21"],"中的数据和参数中的数据进行比较":["175.21"],"来进行验证":["175.21"],"在设置":["175.21"],"hold":["175.22"],"住一段时间等有新的信息或者超时再返回":["175.22"],"客户端收到服务器的应答后继续轮询":["175.22"],"可以看到长轮询比短轮询可以减少大量无用的请求":["175.22"],"并且客户端接收取新消息也会实时不少":["175.22"],"请求对性能的优化是很有利的":["175.22"],"所以他是短轮询上的一个优化":["175.22"],"终归来讲还是一个":["175.22"],"只是进行了变化而已":["175.22"],"而且如果客户端不请求":["175.22"],"服务端有数据的话":["175.22"],"也会一直累积在那":["175.22"],"不能实现实时的双向通信":["175.22"],"此时的":["175.22"],"也就":["175.22"],"应需而生":["175.22"],"前端怎么做seo优化":["175.22"],"什么是seo":["175.22"],"search":["175.22"],"engine":["175.22"],"oldvnode":["176.1"],"中对应的":["176.1"],"最后在":["176.2"],"执行完毕后再把标记设置为":["176.2"],"关键":["176.2"],"表示可以执行下一次循环了":["176.2"],"当定时器没有执行的时候标记永远是":["176.2"],"在开头被":["176.2"],"键值可以是任意的":["176.3"],"键名所指向的对象可以被垃圾回收":["176.3"],"此时键名是无效的":["176.3"],"不能遍历":["176.3"],"方法有":["176.3"],"firstelementchild":["176.4"],"广度优先遍历的非递归写法":["176.4"],"istypeof":["176.5"],"在子类构造函数中":["176.6"],"后":["176.6","258.5"],"才可使用":["176.6"],"否则报错":["176.6"],"捕获错误":["176.9"],"不能":["176.9"],"错误需要通过回调函数来捕获":["176.10"],"函数库使用":["176.11"],"如果多个异步操作没有依赖性而使用":["176.12"],"执行结果是":["176.13"],"二者相互建立联系后":["176.15"],"完成tcp三次握手":["176.15"],"为了保证后续的握手是为了应答上一个握手":["176.16"],"每次握手都会带一个标识":["176.16"],"seq":["176.16"],"绑定的事件":["176.17"],"解压压缩包到当前项目的":["176.19"],"相关的":["177.0"],"领域人才也是十分的吃香":["177.0"],"精通hybrid":["177.0"],"更大的权限":["177.1"],"并使用双":["177.1"],"双线程的模式隔离了":["177.1"],"js逻辑":["177.1"],"ui渲染":["177.1"],"形成了特殊的开发模式":["177.1"],"加强了":["177.1"],"进行配置和开发":["177.2"],"hybrid技术中双端的交互原理":["177.2"],"便是基于":["177.2"],"后使用该方法便可调用并获取函数返回值":["177.3"],"mwebview":["177.3"],"valuecallback":["177.3"],"客户端引用":["177.4"],"首屏加载快":["177.4"],"可离线化使用":["177.4"],"预上线":["177.5"],"能大大提高项目稳定性与问题排查":["177.5"],"开发模式":["177.5"],"能连接pc":["177.5"],"进行代码调试":["177.5"],"具有开发调试入口":["177.5"],"可以使用同样的":["177.5"],"加载开发时的本地代码":["177.5"],"eval":["177.6"],"执行编译后的代码":["177.6"],"继续递归引用模块内部依赖":["177.6"],"实际情况并不是使用模板字符串":["177.6"],"这里是为了代码的可读性":["177.6"],"imported":["177.6"],"分析":["177.7"],"引用":["177.7"],"文件与对应的资源":["177.7"],"的兼容性处理":["177.7"],"具有众多功能":["177.7"],"添加前缀":["177.7"],"单位转换":["177.7","179.8"],"sass":["177.7"],"css预处理器":["177.7"],"自动加载模块":["177.8"],"并引入":["177.8"],"extract":["177.8"],"mini":["177.8"],"抽离样式":["177.8"],"生成":["177.8"],"defineplugin":["177.8"],"定义全局变量":["177.8"],"optimize":["177.8"],"moudles":["177.9"],"避免编译第三方库中已经被编译过的代码":["177.9"],"cachedirectory":["177.9"],"可以缓存编译结果":["177.9"],"避免多次重复编译":["177.9"],"多进程并发":["177.9"],"uglify":["177.9"],"可多进程并发压缩":["177.9"],"提高压缩速度":["177.9"],"happypack":["177.9"],"多进程并发文件的":["177.9"],"第三方库模块缓存":["177.9"],"dllplugin":["177.9"],"dllreferenceplugin":["177.9"],"可以提前进行打包并缓存":["177.9"],"避免每次都重新编译":["177.9"],"使用分析":["177.9"],"减少使用通配符与属性选择器":["177.10"],"减少不必要的多余属性":["177.10"],"动画属性":["177.10","179.9"],"实现动画":["177.10"],"动画时脱离文档流":["177.10"],"开启硬件加速":["177.10"],"优先使用":["177.10"],"动画":["177.10"],"替代原生":["177.10"],"数量":["177.10"],"避免不必要的节点或嵌套":["177.10"],"避免":["177.10"],"空标签":["177.10"],"能减少服务器压力":["177.10"],"缓存技术":["177.11"],"放于自己的服务器上":["177.11"],"打包后的图片":["177.11"],"等资源上传到":["177.11"],"文件带上":["177.11"],"由于浏览器对单个域名请求的限制":["177.11"],"可以将资源放在多个不同域的":["177.11"],"分割异步":["177.12"],"全栈基础":["177.12"],"其实我觉得并不能讲前端的天花板低":["177.12"],"只是说前端是项更多元化的工作":["177.12"],"它需要涉及的知识面很广":["177.12"],"你能发现":["177.12"],"从最开始的简单页面到现在":["177.12"],"就会默认访问到":["177.13"],"users":["177.13"],"files":["177.13"],"访问限制":["177.13"],"可以制定一系列的规则进行访问的控制":["177.13"],"例如直接通过":["177.13"],"限制":["177.13","179.41"],"屏蔽":["177.13"],"的访问":["177.13"],"允许":["177.13"],"deny":["177.13"],"解决跨域":["177.13"],"其实跨域是":["177.13"],"浏览器的安全策略":["177.13"],"这意味着只要不是通过浏览器":["177.13"],"就可以绕开跨域的问题":["177.13"],"容器可以理解成镜像的实例":["177.14"],"这样我们便可以创建":["177.14"],"操作容器":["177.14"],"一旦创建后":["177.14"],"就可以简单理解成一个轻量级的操作系统":["177.14"],"可以在内部进行各种操作":["177.14"],"例如运行":["177.14"],"拉取":["177.14"],"基于镜像的分层结构":["177.14"],"容器是":["177.14"],"以镜像为基础底层":["177.14"],"在上面封装了一层":["177.14"],"容器的存储层":["177.14"],"存储空间的生命周期与容器一致":["177.14"],"该层存储层会随着容器的销毁而销毁":["177.14"],"尽量避免往容器层写入数据":["177.14"],"这里就主要列举一些":["178.0"],"这是个浏览器提供的事件循环空闲期的回调函数":["178.1"],"pollyfill":["178.1"],"而且拥有":["178.1"],"deadline":["178.1"],"限制执行事件":["178.1"],"以继续切分任务":["178.1"],"高优先级的任务交给":["178.1"],"类似于这样的方式":["178.1"],"当有空闲时间时":["178.1"],"我们执行一个组件渲染":["178.1"],"把任务塞到一个个碎片时间中去":["178.1"],"while":["178.1","204.6","206.14"],"timeremaining":["178.1"],"didtimeout":["178.1"],"nextcomponent":["178.1"],"performwork":["178.1"],"优先级策略":["178.1"],"文本框输入":["178.1"],"的变化":["178.2"],"prevprops":["178.2"],"重新获取数据":["178.2"],"fetchdata":["178.2"],"setstate":["178.2","205.12"],"对象即可":["178.3"],"newstate":["178.3"],"使用函数式":["178.3"],"可以用于避免":["178.3"],"的批量更新的逻辑":["178.3"],"传入的函数将会被":["178.3"],"顺序调用":["178.3"],"注意事项":["178.3"],"中多次连续调用会被优化为一次":["178.3"],"当组件已被销毁":["178.3"],"end":["178.4"],"componentdidmount":["178.4"],"组件渲染时间为":["178.4"],"ms":["178.4","217.7"],"可以将重复的逻辑进行抽象":["178.4"],"context":["178.5","178.6"],"传入组件中":["178.5"],"一个高阶组件":["178.5"],"可以方便在":["178.5"],"组件中使用":["178.5"],"mapstatetoprops":["178.5"],"进行筛选后使用":["178.5"],"注入组件":["178.5"],"根据":["178.5","179.54"],"mapdispatchtoprops":["178.5"],"创建方法":["178.5"],"当组件调用时使用":["178.5"],"触发对应的":["178.5"],"的拆分与重构":["178.5"],"随着项目越大":["178.5"],"如果将所有状态的":["178.5"],"全部写在一个函数中":["178.5"],"usecontext":["178.6"],"usereducer":["178.6"],"类似于":["178.6"],"redux":["178.6"],"思想的实现":["178.6"],"但其并不足以替代":["178.6"],"可以理解成一个组件内部的":["178.6"],"并不是持久化存储":["178.6"],"会随着组件被销毁而销毁":["178.6"],"属于组件内部":["178.6"],"各个组件是相互隔离的":["178.6"],"单纯用它并无法共享数据":["178.6"],"配合":["178.6"],"的全局性":["178.6"],"可以完成一个轻量级的":["178.6"],"easy":["178.6"],"peasy":["178.6"],"usecallback":["178.6"],"缓存回调函数":["178.6"],"避免传入的回调每次都是新的函数实例而导致依赖组件重新渲染":["178.6"],"具有性能优化的效果":["178.6"],"用于缓存传入的":["178.6"],"避免依赖的组件每次都重新渲染":["178.6"],"useref":["178.6","208.3"],"获取组件的真实节点":["178.6"],"uselayouteffect":["178.6","205.5"],"dom更新同步钩子":["178.6"],"用法与":["178.6"],"只是区别于执行时间点的不同":["178.6"],"csspath":["178.7"],"stylesheet":["178.7"],"进行":["178.7","254.2"],"数据脱水":["178.7"],"为了把服务端获取的数据同步到前端":["178.7"],"主要是将数据序列化后":["178.7"],"插入到":["178.7"],"返回给前端":["178.7"],"serialize":["178.7"],"initstate":["178.7"],"getstate":["178.7"],"status":["178.7"],"状态共享":["178.8"],"数据的传递使用复制或全新对象":["178.8"],"遵守数据不可变原则":["178.8"],"避免从函数内部":["178.8"],"改变外部状态":["178.8"],"例如改变了全局作用域或父级作用域上的变量值":["178.8"],"可能会导致其它单位错误":["178.8"],"避免在单元函数内部执行一些":["178.8"],"副作用":["178.8"],"应该将这些操作抽离成更独立的工具单元":["178.8"],"日志输出":["178.8"],"读写文件":["178.8"],"网络请求":["178.8"],"调用外部进程":["178.8"],"调用有副作用的函数":["178.8"],"高阶函数":["178.8"],"是指":["178.8"],"以函数为参数":["178.8"],"返回一个新的增强函数":["178.8"],"的一类函数":["178.8"],"它通常用于":["178.8"],"将逻辑行为进行":["178.8"],"隔离抽象":["178.8"],"便于快速复用":["178.8"],"如处理数据":["178.8"],"兼容性等":["178.8"],"函数组合":["178.8"],"将一系列单元函数列表组合成功能更强大的函数":["178.8"],"函数增强":["178.8"],"快速地拓展函数功能":["178.8"],"函数式编程的好处":["178.8"],"函数副作用小":["178.8"],"所有函数独立存在":["178.8"],"没有任何耦合":["178.8"],"复用性极高":["178.8"],"不关注执行时间":["178.8"],"执行顺序":["178.8"],"命名等":["178.8"],"能专注于数据的流动与处理":["178.8"],"能有效提高稳定性与健壮性":["178.8"],"追求单元化":["178.8"],"粒度化":["178.8"],"使其重构和改造成本降低":["178.8"],"可拓展性较好":["178.8"],"mdn":["179.1"],"规范中均只支持":["179.1"],"的高度时":["179.2"],"浮动子元素也参与计算":["179.2"],"文字层不会被浮动层覆盖":["179.2"],"环绕于周围":["179.2"],"应用":["179.2"],"阻止":["179.2"],"重叠":["179.2"],"可以包含浮动元素":["179.2"],"层叠上下文在z轴上的排序":["179.3"],"在同一层叠上下文中":["179.3"],"层叠等级才有意义":["179.3"],"水平垂直居中":["179.4"],"从右往左":["179.5"],"父级设置高度":["179.6"],"以上才能使用":["179.7"],"条件语句":["179.8"],"自动前缀":["179.8"],"mixin复用":["179.8"],"回到第一帧":["179.9"],"同时运用":["179.9"],"animationend":["179.9"],"领域有自己的见解和经验":["179.10"],"反而会为相当的加分和脱颖而出":["179.10"],"其实实例上并不是真正有":["179.11"],"这个指针":["179.11"],"它其实是从原型链上获取的":["179.11"],"hasownproperty":["179.11","285.5"],"则进行添加该属性":["179.12"],"如果需要修改原型的属性时":["179.12"],"则可以用":["179.12"],"开始执行函数中的代码":["179.13"],"被挂起":["179.13"],"函数执行完后":["179.13"],"ec":["179.14","219.3"],"结果打印":["179.15"],"ƒ":["179.15"],"scopr":["179.16"],"包裹":["179.17"],"通过第三个参数传入":["179.17"],"异步加载":["179.18"],"symbol":["179.19","286.55"],"retrun":["179.20"],"借用":["179.22"],"属于":["179.26"],"异步":["179.26"],"的语法糖":["179.29"],"babel中是基于":["179.29"],"实现":["179.29"],"getuserbyasync":["179.29"],"通过解析转化成的":["179.30"],"random":["179.33","285.2","286.19"],"数组拆解":["179.33"],"flat":["179.33"],"重复写入相同的值无法触发":["179.34"],"会受到浏览器隐身模式等的限制":["179.34"],"设置共享":["179.34"],"宏任务":["179.35"],"网络异步线程":["179.35"],"settimout":["179.36"],"结合":["179.37"],"dom树":["179.37"],"style树":["179.37"],"生成渲染树":["179.37"],"offsetheight":["179.38"],"offsettop":["179.38"],"offsetleft":["179.38"],"scrollwidth":["179.38"],"scrollheight":["179.38"],"scrolltop":["179.38"],"scrollleft":["179.38"],"getcomputedstyle":["179.38"],"极限优化时":["179.39"],"修改样式可将其":["179.39"],"后修改":["179.39"],"体积限制为":["179.40"],"5m":["179.40"],"indexdb":["179.40"],"服务器":["179.40"],"received":["179.41","218.5"],"同源限制":["179.41"],"无法使用":["179.41"],"体积超过25":["179.42"],"标记清除算法":["179.42"],"标记存活的对象":["179.42"],"未被标记的则被释放":["179.42"],"增量标记":["179.42"],"小模块标记":["179.42"],"在代码执行间隙执":["179.42"],"会影响性能":["179.42"],"并发标记":["179.42"],"timeline":["179.43"],"进行内存标记":["179.43"],"可视化查看内存的变化情况":["179.43"],"最后一次修改时间":["179.44"],"上一次返回的last":["179.44"],"如果一致":["179.44"],"则直接返回":["179.44"],"通知浏览器使用缓存":["179.44"],"如不一致":["179.44"],"则服务端返回新的资源":["179.44"],"请求语法错误":["179.45"],"要求身份认证":["179.45"],"拒绝请求":["179.45"],"大数据":["179.46"],"更多编码类型":["179.46"],"onopen":["179.47"],"包后":["179.48"],"发送":["179.48"],"setimmediate":["179.50","179.53"],"则前往":["179.50"],"cors":["179.51"],"不被第三方网站请求":["179.52"],"请求校验":["179.52"],"框架":["179.52"],"任务的实现":["179.53"],"messagechannel":["179.53"],"渲染":["179.54"],"vdom":["179.54"],"出的":["179.54"],"patchs":["179.54"],"挂载成真实的":["179.54"],"更新节点实现":["179.54"],"funtion":["179.54"],"queuewatcher":["179.54"],"nexttick":["179.54"],"清空队列":["179.54"],"遍历队列中所有修改":["179.54"],"cb":["179.55","256.5","283.6"],"标记删除":["179.56"],"标记新增和移动":["179.56"],"view":["179.58"],"其实算法方面在前端的实际项目中涉及得并不多":["179.59"],"但还是需要精通一些基础性的算法":["179.59"],"一些公司还是会有这方面的需求和考核":["179.59"],"退回重新选择":["179.60"],"分支限界法":["179.60"],"将arr":["179.61"],"依次插入有序段中":["179.61"],"放在右边":["179.62"],"希尔排序":["179.62"],"访问该父节点的右子节点":["179.64"],"后序遍历":["179.64"],"不平衡":["179.65"],"假币在天平上较轻的一组":["179.65"],"函数式组件的特性":["180.0"],"无状态":["180.0"],"无生命周期":["180.0"],"无this":["180.0"],"因此性能会高一点":["180.0"],"正常的一个组件是一个类继承了vue":["180.0"],"函数式组件":["180.0"],"就是一个普通的函数":["180.0"],"二十二":["180.0"],"组件的传值方式有哪些":["180.0"],"props和emit":["180.0"],"父组件向子组件传递数据":["180.0"],"通过prop传递":["180.0"],"子组件传递数据给父组件是通过emit":["180.0"],"子组件传递数据给父组件是通过emit事件":["180.0"],"parent":["180.0","217.7","219.6"],"children获取当前组件的父组件和当前组件的子组件":["180.0"],"attrs和attrs和attrs和listeners":["180.0"],"父组件通过provide提供":["180.0"],"子组件通过inject注入变量":["180.0"],"ref获取实例":["180.0"],"eventbus平级组件数据传递":["180.0"],"vuex":["180.0"],"二十三":["180.0"],"attrs是为了解决什么问题出现的":["180.0"],"主要作用是为了实现批量传递数据":["180.0"],"provide":["180.0"],"inject更适合应用在插件中":["180.0"],"主要实现跨级数据传递":["180.0"],"二十四":["180.0"],"的内容":["180.1"],"借助webpack的分包策略":["180.2"],"alive来缓存组件":["180.2"],"虚拟滚动":["180.2"],"时间分片等策略":["180.2"],"打包优化":["180.2"],"三十六":["180.2"],"谈谈你对vuex的理解":["180.2"],"vuex是专门为vue提供的全局状态管理系统":["180.2"],"用于多个组件中的数据共享":["180.2"],"数据缓存":["180.2"],"无法持久化":["180.2"],"mutation":["180.2"],"主要修改状态":["180.2"],"同步执行":["180.2"],"action":["180.2"],"执行业务代码":["180.2"],"方便复用":["180.2"],"逻辑可以为异步":["180.2"],"不能直接修改状态":["180.2"],"为数组":["181.0"],"isarray":["181.0"],"isvalidarrayindex":["181.0"],"修改数组的长度":["181.0"],"避免索引":["181.0"],"数组长度导致splcie":["181.0"],"执行有误":["181.0"],"利用数组的splice变异方法触发响应式":["181.0"],"已经存在":["181.0"],"直接修改属性值":["181.0"],"ob":["181.0"],"本身就不是响应式数据":["181.0"],"直接赋值":["181.0"],"对属性进行响应式处理":["181.0"],"definereactive":["181.0"],"notify":["181.0"],"我们阅读以上源码可知":["181.0"],"的实现原理是":["181.0"],"如果目标是数组":["181.0"],"直接使用数组的":["181.0"],"方法触发相应式":["181.0"],"如果目标是对象":["181.0"],"会先判读属性是否存在":["181.0"],"对象是否是响应式":["181.0"],"最终如果要对属性进行响应式处理":["181.0"],"则是通过调用":["181.0"],"方法进行响应式处理":["181.0"],"方法就是":["181.0"],"在初始化对象时":["181.0"],"给对象属性采用":["181.0"],"动态添加":["181.0"],"的功能所调用的方法":["181.0"],"虚拟":["181.0"],"的优缺点":["181.0"],"保证性能下限":["181.0"],"框架的虚拟":["181.0"],"需要适配任何上层":["181.0"],"可能产生的操作":["181.0"],"它的一些":["181.0"],"操作的实现必须是普适的":["181.0"],"所以它的性能并不是最优的":["181.0"],"但是比起粗暴的":["181.0"],"操作性能要好很多":["181.0"],"因此框架的虚拟":["181.0"],"至少可以保证在你不需要手动优化的情况下":["181.0"],"依然可以提供还不错的性能":["181.0"],"即保证性能的下限":["181.0"],"无需手动操作":["181.0"],"我们不再需要手动去操作":["181.0"],"只需要写好":["181.0"],"的代码逻辑":["181.0"],"框架会根据虚拟":["181.0"],"数据双向绑定":["181.0"],"帮我们以可预期的方式更新视图":["181.0"],"极大提高我们的开发效率":["181.0"],"跨平台":["181.0"],"本质上是":["181.0"],"与平台强相关":["181.0"],"相比之下虚拟":["181.0"],"可以进行更方便地跨平台操作":["181.0"],"例如服务器渲染":["181.0"],"weex":["181.0"],"开发等等":["181.0"],"无法进行极致优化":["181.0"],"虽然虚拟":["181.0"],"合理的优化":["181.0"],"足以应对绝大部分应用的性能需求":["181.0"],"但在一些性能要求极高的应用中虚拟":["181.0"],"无法进行针对性的极致优化":["181.0"],"实现原理":["181.0"],"的实现原理主要包括以下":["181.0"],"对象模拟真实":["181.0"],"树":["181.0"],"对真实":["181.0"],"进行抽象":["181.0"],"算法":["181.0"],"比较两棵虚拟":["181.0"],"树的差异":["181.0"],"pach":["181.0"],"将两个虚拟":["181.0"],"对象的差异应用到真正的":["181.0"],"如果对以上":["181.0"],"个部分还不是很了解的同学":["181.0"],"可以查看本文作者写的另一篇详解虚拟":["181.0"],"的文章":["181.0"],"深入剖析":["181.0"],"vue核心之虚拟dom":["181.0"],"有什么作用":["181.0"],"是为":["181.0"],"vnode":["181.0","217.3","217.7","228.3","252.6"],"的唯一标记":["181.0"],"通过这个":["181.0"],"我们的":["181.0"],"操作可以更准确":["181.0"],"更快速":["181.0"],"过程可以概括为":["181.0"],"oldch":["181.0"],"newch":["181.0"],"各有两个头尾的变量":["181.0"],"oldstartindex":["181.0"],"oldendindex":["181.0"],"newstartindex":["181.0"],"newendindex":["181.0"],"它们会新节点和旧节点会进行两两对比":["181.0"],"即一共有4种比较方式":["181.0"],"和oldstartindex":["181.0"],"如果以上":["181.0"],"种比较都没匹配":["181.0"],"如果设置了key":["181.0"],"就会用":["181.0"],"再进行比较":["181.0"],"在比较的过程中":["181.0"],"遍历会往中间靠":["181.0"],"一旦":["181.0"],"startidx":["181.0"],"endidx":["181.0"],"表明":["181.0"],"至少有一个已经遍历完了":["181.0"],"就会结束比较":["181.0"],"具体有无":["181.0"],"过程":["181.0","206.11"],"可以查看作者写的另一篇详解虚拟":["181.0"],"的作用是":["181.0"],"更准确":["181.0"],"因为带":["181.0"],"就不是就地复用了":["181.0"],"samenode":["181.0"],"对比中可以避免就地复用的情况":["181.0"],"所以会更加准确":["181.0"],"的唯一性生成":["181.0"],"对象来获取对应节点":["181.0"],"比遍历方式更快":["181.0"],"源码如下":["181.0"],"exampleinterface2":["183.2"],"元组类型":["183.4"],"yuanzu":["183.4"],"test实际为":["183.5"],"typescript并不直接在浏览器上运行":["184.1"],"需要编译器编译成纯javascript来运行":["184.1"],"更健壮":["184.2"],"自动联想":["184.3"],"与接口不同":["184.4"],"类型别名还可以用于其他类型":["184.4"],"如基本类型":["184.4"],"我们不希望类型检查器对这些值进行检查而是直接让它们通过编译阶段的检查":["184.5"],"strictnullchecks":["184.6"],"标记":["184.6"],"只能赋值给":["184.6"],"personalintl":["184.7"],"interface":["184.8","184.29"],"person":["184.8"],"中箭头函数中的":["184.9"],"getstring":["184.10"],"world":["184.11","295.4","295.6"],"在声明类的时候":["184.11"],"一般类中都会包含":["184.11"],"数据结构":["184.15"],"分隔符不会改变数值字面量的值":["184.16"],"使人更容易读懂数字":["184.16"],"ts2307":["184.17"],"cannot":["184.17"],"find":["184.17"],"的每个参数必须能在":["184.18"],"里找到对应类型的参数":["184.18"],"参数的名字相同与否无所谓":["184.18"],"只看它们的类型":["184.18"],"参数可以少但是不能多":["184.18"],"xiaohong":["184.20"],"就只支持函数参数的逆变":["184.22"],"不会影响到全局声明":["184.25"],"同名的interface和class会自动聚合":["184.26"],"需要编写同名的":["184.27"],"baseurl":["184.28"],"helper":["184.28","215.2","252.5"],"关键字将属性设置为只读的":["184.30"],"获取一个变量或对象的类型":["184.31"],"的作用是取t的属性":["184.32"],"此属性同样也存在与u":["184.32"],"overwrite":["184.32"],"所以任何现有的":["185.1"],"程序可以不加改变的在":["185.1"],"下工作":["185.1"],"为了保证兼容性":["185.1"],"名字只在该区域内有效":["185.3"],"其他区域可重复使用该名字而不冲突":["185.3"],"元组":["185.3"],"而弱或动态类型的结构则是":["185.4"],"那么它的类型被视作默认的动态":["185.5"],"在编写":["185.7"],"的文件的时候就会自动编译成":["185.7"],"es5":["186.1"],"compileroptions":["186.2","236.1"],"设置与编译流程相关的选项":["186.2"],"用于解析非相对模块名称的基目录":["186.3"],"模块名到基于":["186.3"],"的路径映射的列表":["186.3"],"rootdirs":["186.3"],"根文件夹列表":["186.3"],"其组合内容表示项目运行时的结构内容":["186.3"],"typeroots":["186.3"],"包含类型声明的文件列表":["186.3"],"需要包含的类型声明文件名列表":["186.3"],"allowsyntheticdefaultimports":["186.3"],"允许从没有设置默认导出的模块中默认导入":["186.3"],"sourceroot":["186.3"],"指定调试器应该找到":["186.3"],"文件而不是源文件的位置":["186.3"],"maproot":["186.3"],"指定调试器应该找到映射文件而不是生成文件的位置":["186.3"],"inlinesourcemap":["186.3"],"keyof":["187.0"],"检查键是否存在":["187.0"],"我们声明了一个与ref属性名称相同的变量sectionref":["190.0"],"然后我们通过":["190.0"],"不过也有人喜欢这种不加修饰的":["191.0"],"因人而异吧":["191.0"],"处理模块":["191.1"],"比原来的好一点":["191.1"],"但是progressplugin配置不只是handler这一个":["191.1"],"如果大家感兴趣可以去试试看":["191.2"],"这是包的地址www":["191.2"],"细心的朋友肯定发现了":["191.2"],"webpack5之前好像是在devserver中添加quit":["191.3"],"最后项目yarn":["191.3"],"start一下":["191.3"],"如果文章中有什么错误":["191.4"],"都可以评论让我改正":["191.4"],"结论":["192.1","192.2","192.3"],"牵一发动全身":["192.1"],"只改了一个文件":["192.1"],"当规则为chunkhash时":["192.2"],"当规则为":["192.3"],"最终输出":["193.1"],"集合":["193.1"],"输出":["193.1"],"preset":["193.2"],"env来完成的":["193.2"],"将ast转换成es5":["193.2"],"提供更多工程化工具的配置项":["193.3"],"模块处理完毕后":["193.4"],"最后再根据后处理相关配置项":["193.4"],"合并模块资源":["193.4"],"注入运行时依赖":["193.4"],"优化产物结构等":["193.4"],"这些配置项与打包流程强相关":["193.4"],"建议学习时多关注它们对主流程的影响":["193.4"],"stats":["193.5"],"用于精确地控制编译过程的日志内容":["193.5"],"在做比较细致的性能调试时非常有用":["193.5"],"infrastructurelogging":["193.5"],"静态分析程序流":["193.6"],"判断那些模块和变量未被使用或者引用":["193.6"],"代码注":["193.7"],"操作去加载":["193.7"],"可以看至u每个loader和plugin执行耗时":["193.8"],"整个打包耗时":["193.8"],"每个plugin和":["193.8"],"语句中读取与合并参数":["193.9"],"并初始化需要使用的插件和配置插件等执行环境所需要的参数":["193.9"],"初始化完成后会调用compiler的run来真正启动webpack编译构建过程":["193.9"],"webpack的构建流程包括compile":["193.9"],"make":["193.9","216.3","236.1"],"而言":["193.10"],"它实质上是一个转换器":["193.10"],"将a文件编译成b文件":["193.10"],"操作的是":["193.10"],"线程":["194.1"],"逻辑层":["194.1"],"采用":["194.1"],"线程运行":["194.1"],"但是渲染层需要有逻辑层的数据才能把界面渲染出来":["194.2"],"如果渲染层初始化工作较快完成":["194.2"],"就要等逻辑层的指令才能进行下一步工作":["194.2"],"因此逻辑层与渲染层需要有一定的机制保证时序正确":["194.2"],"只需要将后台态的小程序切换到前台":["194.4"],"这个过程就是热启动":["194.4"],"每次冷启动时":["194.5"],"都会检查是否有更新版本":["194.5"],"如果发现有新版本":["194.5"],"官方提供的登录能力":["195.0"],"checksession":["195.0"],"校验用户当前的session":["195.0"],"key是否有效":["195.0"],"authorize":["195.0"],"再向小程序客户端返回自定义登录态":["195.2"],"小程序客户端缓存":["195.2"],"session":["195.3"],"用于解密":["195.3"],"getuserinfo返回的敏感数据":["195.3"],"getsetting":["195.3"],"获取用户的授权情况":["195.3"],"如果用户已经授权":["195.3"],"直接调用":["195.3"],"nth":["195.4","288.2"],"empty":["195.4","214.3","236.2"],"iconfont":["195.4"],"建议":["195.4"],"的特性都可以做一下尝试":["195.4"],"尺寸单位":["195.4"],"rpx":["195.4"],"responsive":["195.4"],"pixel":["195.4"],"可以根据屏幕宽度进行自适应":["195.4"],"规定屏幕宽为":["195.4"],"750rpx":["195.4"],"公式":["195.4"],"dswidth":["195.4"],"screenheightofrpx":["195.4"],"screenwidth":["195.4"],"screenheight":["195.4"],"rpxtopx":["195.4"],"pxtorpx":["195.4"],"设备":["195.4"],"rpx换算px":["195.4"],"屏幕宽度":["195.4"],"px换算rpx":["195.4"],"iphone5":["195.4"],"1rpx":["195.4"],"42px":["195.4"],"34rpx":["195.4"],"iphone6":["195.4"],"5px":["195.4"],"2rpx":["195.4"],"552px":["195.4"],"81rpx":["195.4"],"可以了解一下":["195.4"],"pr2rpx":["195.4"],"这个库":["195.4"],"样式导入":["195.4"],"语句可以导入外联样式表":["195.4"],"后跟需要导入的外联样式表的相对路径":["195.4"],"表示语句结束":["195.4"],"内联样式":["195.4"],"静态的样式统一写到":["195.4"],"接收动态的样式":["195.4"],"在运行时会进行解析":["195.4"],"请尽量避免将静态的样式写进":["195.4"],"以免影响渲染速度":["195.4"],"全局样式与局部样式":["195.4"],"定义在":["195.4"],"中的样式为全局样式":["195.4"],"作用于每一个页面":["195.4"],"文件中定义的样式为局部样式":["195.4"],"只作用在对应的页面":["195.4"],"并会覆盖":["195.4"],"中相同的选择器":["195.4"],"截止20180810":["195.4"],"小程序未来有计划支持字体":["195.4"],"参考微信公开课":["195.4"],"小程序开发与平时":["195.4"],"web开发类似":["195.4"],"也可以使用字体图标":["195.4"],"无论本地还是远程地址都不行":["195.4"],"值则都是可以显示的":["195.4"],"文件转换成":["195.4"],"打开这个平台":["195.4"],"transfonter":["195.4"],"fonts":["195.4"],"加载ttf格式的那个文件":["195.4"],"将下边的":["195.4"],"encode":["195.4"],"改为":["195.4"],"convert":["195.4","251.2"],"按钮进行转换":["195.4"],"转换后点击":["195.4"],"由于小程序线上环境需要在项目管理里配置请求域名":["195.5"],"而这个域名不是我们需要的请求域名":["195.5"],"没必要浪费一个域名位置":["195.5"],"所以打开不验证域名":["195.5"],"tsl":["195.5"],"必定会重新生成":["195.6"],"从而再一次导致用户信息解密失败":["195.6"],"性能优化":["195.6"],"我们知道view部分是运行在webview上的":["195.6"],"所以前端领域的大多数优化方式都有用":["195.6"],"加载优化":["195.6"],"preload":["195.6"],"代码包的大小是最直接影响小程序加载启动速度的因素":["195.6"],"代码包越大不仅下载速度时间长":["195.6"],"业务代码注入时间也会变长":["195.6"],"所以最好的优化方式就是减少代码包的大小":["195.6"],"series":["195.6"],"px2rpx":["195.7"],"这两部分的文档中又详细的介绍":["195.7"],"推荐和小程序一样":["195.7"],"放到页面入口处":["195.7"],"到对应的生成位置":["195.7"],"这部分内容来源于":["195.7"],"通常习惯是":["195.7"],"你需要在你的入口文件中":["195.7"],"这才能被我们的":["195.7"],"识别为这是一个配置":["195.7"],"需要写成":["195.7"],"vueapp":["195.7"],"这个是我们约定的额外的配置":["195.7"],"这个字段下的数据会被填充到":["195.7"],"calendar":["195.7"],"will":["195.7","206.16"],"be":["195.7","195.9","206.5","206.16","216.6","236.5","236.6"],"filled":["195.7"],"backgroundtextstyle":["195.7"],"light":["195.7"],"navigationbarbackgroundcolor":["195.7"],"455a73":["195.7"],"navigationbartitletext":["195.7"],"美团汽车票":["195.7"],"navigationbartextstyle":["195.7"],"fff":["195.7"],"这个时候":["195.7"],"我们会根据":["195.7"],"的页面数据":["195.7"],"自动填充到":["195.7"],"字段也是可以自定义的":["195.7"],"约定带有":["195.7"],"符号开头的页面":["195.7"],"会放到数组的最前面":["195.7"],"scoped":["195.7"],"中对":["195.7"],"的处理方式是给每个样式加一个":["195.7"],"来标记":["195.7"],"然后在":["195.7"],"中也给每条":["195.7"],"rule":["195.7"],"后添加":["195.7"],"最终可以形成一个":["195.7"],"作用域空间":["195.7"],"在微信小程序中目前是不支持":["195.7"],"选择器的":["195.7"],"所以我们做了一点改动":["195.7"],"把":["195.7","221.2"],"上的":["195.7"],"直接写到了":["195.7"],"里":["195.7"],"函数应该长下面这样":["195.8"],"创建一个":["195.8"],"元素":["195.8"],"添加属性":["195.8"],"m":["195.8","219.3","220.4"],"静态节点":["195.8"],"此处对应":["195.8"],"数组索引为":["195.8"],"空的文本节点":["195.8"],"三元表达式":["195.8"],"判断":["195.8"],"是否存在":["195.8"],"元素里面有文本":["195.8"],"如果不存在":["195.8"],"其中的":["195.8"],"就是vue对象的":["195.8"],"创建元素":["195.8"],"renderstatic":["195.8"],"渲染静态节点":["195.8"],"createtextvnode":["195.8"],"创建文本dom":["195.8"],"转换为字符串":["195.8"],"instance":["195.8","218.4","220.2","221.7","232.2"],"initrender":["195.8"],"component":["195.8","220.2"],"so":["195.8","195.9","206.8","216.6","217.7","218.4","232.2"],"that":["195.8","195.9","218.4","232.2"],"contenthash":["195.9"],"we":["195.9","230.2","251.2"],"using":["195.9"],"possible":["195.9","216.2","256.8"],"duplicated":["195.9","252.6"],"different":["195.9"],"can":["195.9","206.8","206.16","216.6","218.4","232.2","236.5","248.1"],"deduped":["195.9"],"hashedmoduleidsplugin":["195.9"],"order":["195.9"],"prevent":["195.9"],"being":["195.9","212.1","216.3","245.3"],"whenever":["195.9"],"页面的生命周期":["196.1"],"组件的生命周期":["196.1"],"小程序有未处理的":["196.6"],"拒绝时触发":["196.6"],"如定时器或者播放音乐":["196.7"],"onunload":["196.7"],"监听页面卸载":["196.8"],"它们并非与组件有很强的关联":["196.9"],"但有时组件需要获知":["196.9"],"以便组件内部处理":["196.9"],"这样的生命周期称为":["196.9"],"组件所在页面的生命周期":["196.9"],"程序后台运":["196.12"],"定时间":["196.12"],"或系统资源占":["196.12"],"重定向":["196.13"],"wx":["196.13"],"redirectto":["196.13"],"或关闭当前":["196.13"],"再次进入":["196.14"],"小程序未销毁":["196.14"],"执行上面的顺序":["196.14"],"可以通过微信官方提供的登录能力方便地获取微信提供的用户身份标识":["197.1"],"快速建立小程序内的用户体系":["197.1"],"作为这个用户在这个小程序的唯一标识":["197.2"],"小程序把":["197.4"],"存到":["197.4"],"里面":["197.4","204.1"],"下次请求时":["197.4"],"先从":["197.4"],"则发起完整的登录流程":["197.6"],"如果不过期":["197.6"],"下载到的小程序代码包不是小程序的源代码":["198.2"],"而是编译":["198.2"],"压缩":["198.2"],"这会感觉到明显的卡顿":["198.5"],"所以子包也不建议拆的太大":["198.5"],"当然我们可以采用子包预加载技术":["198.5"],"除此之外":["198.6"],"对于一些独立的模块我们尽可能抽离出来":["198.6"],"这是因为自定义组件的更新并不会影响页面上其他元素的更新":["198.6"],"各个组件也将具有各自独立的逻辑空间":["198.6"],"及时反馈":["198.8"],"快捷":["199.1"],"显示购买成功":["199.2"],"微信支付公众号下发支付凭证":["199.2"],"统一下单接口返回的":["199.4"],"参数值":["199.4"],"签名类型":["199.4"],"signtype":["199.4"],"签名":["199.4"],"比较明显的特征为从页面右侧向左划入一个新的页面":["200.1"],"并且我们可以同时看到两个页面":["200.1"],"native":["200.1","236.1"],"主要做了什么":["200.1"],"native层除了做一些资源的动态注入":["200.1"],"还负责着很多的事情":["200.1"],"请求的转发":["200.1"],"单线程":["200.2"],"架构":["200.2"],"js代码无法阻塞":["200.2"],"注意边界":["200.3"],"和容错处理":["200.3"],"在这个架构下不好去用某个webview中的serviceworker去管理所有的小程序页面":["200.5"],"得益于客户端系统有javascript":["200.5"],"的解释引擎":["200.5"],"在ios下使用内置的":["200.5"],"javascriptcore框架":["200.5"],"用户可以同时看到":["200.6"],"两个页面":["200.6"],"最大页面栈数量":["200.7"],"防止产生过多的":["200.7"],"可以自动适配所有大小的屏幕":["200.8"],"而不必使用一些第三方插件进行响应式布局":["200.8"],"wxss文件会先通过wcsc可执行程序文件编译成js文件":["200.10"],"并不是直接编译成css文件":["200.10"],"基础设备宽度":["200.11"],"编译后的代码是通过eval方法注入执行的":["200.12"],"兼容问题":["200.14"],"比如小程序不支持的一些属性":["200.14"],"如果不支持":["200.14"],"半运行讲的是vue整体的特性都会在逻辑层中运行":["200.15"],"为了符合小程序的渲染框架":["200.15"],"修改了vue的框架":["200.15"],"通讯方式只能通过setdata到渲染层":["200.16"],"需要在开发者工具提交小程序的代码包":["201.1"],"然后在小程序后台发布小程序":["201.1"],"编译器则会提示上传代码成功":["201.4"],"提交审核成功之后如下图":["201.5"],"因此可以考虑自动化构建部署":["201.8"],"就是将从开发到部署的一系列流程变成自动化":["201.8"],"衔接连贯":["201.8"],"在构建失败时能够告知开发者":["201.8"],"全部以栈的形式进行管理":["202.1"],"relaunch":["202.3"],"以提高加载速度":["202.4"],"当页面特别多时":["202.4"],"这样的跳转":["202.7"],"可以避免跳转前页面占据运行内存":["202.7"],"但返回时页面需要重新加载":["202.7"],"获取当前的页面栈":["202.12"],"决定需要返回几层则设置对象的delta属性即可":["202.12"],"返回上一页面":["202.18"],"relanch":["202.18","202.19"],"除了微信小程序":["203.1"],"还有百度小程序":["203.1"],"微信小程序":["203.1"],"支付宝小程序":["203.1"],"原":["203.2"],"的体验":["203.2"],"易":["203.2"],"且安全的微信数据开放":["203.2"],"效和简单的开发":["203.2"],"这些是js":["203.2"],"sdk做不到的":["203.2"],"标签被稍微修改成了":["203.3"],"wxml":["203.3"],"标签":["203.3"],"开发门槛低":["203.5"],"降低兼容性限制":["203.5"],"小程序要面对很多来自微信的限制":["203.6"],"从功能接口":["203.6"],"axios的所有":["204.0"],"源码":["204.0"],"都在":["204.0"],"lib":["204.0"],"文件加下":["204.0"],"从上代码可以看出":["204.1"],"其实是个工厂函数":["204.1"],"通过返回实例上的create函数可以创建新的实例":["204.1"],"这样一个好处就是用户除了可以使用默认配置外还可以覆盖默认配置":["204.1"],"在之前版本的代码中":["204.1"],"函数并不在":["204.1"],"而是放在":["204.1"],"因为后续取值的时候也是两个为一组取":["204.2"],"刚好对应":["204.2"],"函数对应的两个参数":["204.2"],"我们现在再来看请求的执行":["204.2"],"语句块的代码":["204.2"],"默认执行if语句块里的代码":["204.2"],"原因后面再来讲解":["204.2"],"我们可以看到定义了一个":["204.2"],"数组来存放要执行的函数":["204.2"],"默认有两个值":["204.2"],"第一个是":["204.2"],"第二个是":["204.2"],"现在暂时不去看":["204.2"],"是怎么样的":["204.2"],"只要明白这个函数是可以发起请求就行了":["204.2"],"通过上面代码处理":["204.2"],"之后变成这样了":["204.2"],"请求拦截函数":["204.2"],"响应拦截函数":["204.2"],"之后使用":["204.2"],"链式调用执行函数":["204.2"],"这样就使得请求拦截函数始终在发起请求前执行":["204.2"],"响应拦截函数在请求之后执行":["204.2"],"再来看看刚刚问题":["204.2"],"为什么默认执行if语句里面的代码":["204.2"],"看":["204.2"],"这个判断条件":["204.2"],"为挂起状态":["204.3"],"等待":["204.3"],"接着会执行":["204.3"],"函数就是实例化":["204.3"],"时传入函数":["204.3"],"参数是一个函数":["204.3"],"这个函数就是":["204.3"],"调用这个函数后":["204.3"],"该函数会":["204.3"],"实例的":["204.3"],"同时传入":["204.3"],"实例对象":["204.3"],"就会变为":["204.3"],"fulfilled":["204.3"],"中的代码将会执行":["204.3"],"遍历订阅列表":["204.3"],"执行取消函数":["204.3"],"请求会被逐个取消":["204.3"],"在xhr":["204.3"],"js文件中":["204.3"],"定义了一个":["204.3"],"这个函数在请求完成后会执行":["204.3"],"用于移除取消请求的监听":["204.3"],"在发送请求前会检查是否有传入取消请求的配置":["204.3"],"如果有配置":["204.3"],"则会给":["204.3"],"赋值为一个函数":["204.3"],"这个函数就是用于真正取消请求的函数":["204.3"],"这个函数还会":["204.3"],"掉axios请求的":["204.3"],"被赋值后会把":["204.3"],"这个函数添加到":["204.3"],"实例中的":["204.3"],"订阅列表中":["204.3"],"同源策略虽然可以防护":["204.4"],"但多少还有点缺陷":["204.4"],"比如来之搜索引擎的访问":["204.4"],"而在请求头上加":["204.4"],"狗头保命":["204.5"],"当然第二条也可以说不算缺点":["204.5"],"硬凑的":["204.5"],"getprototypeof":["204.6"],"它允许多版本混用共存":["205.0"],"可以说是为更远的未来版本做准备了":["205.0"],"并没有起作用":["205.2"],"如果要阻止冒泡":["205.2"],"可以使用原生的":["205.2"],"阻止同级冒泡":["205.2"],"这样文字就可以显示了":["205.2"],"v17":["205.2"],"由于事件委托到根目录root节点":["205.2"],"属于上下级关系":["205.2"],"所以可以直接使用":["205.2"],"切换为":["205.3"],"但请注意":["205.3"],"这并未影响冒泡行为":["205.3"],"或者用":["205.5"],"原生错误栈生成的":["205.7"],"所以在生产环境也能按sourcemap":["205.7"],"还原回来":["205.7"],"且支持点击跳到源码位置":["205.7"],"testing":["205.8"],"先不展开了有兴趣的可去查阅相关资料":["205.9"],"指开启":["205.10"],"后才能使用的特性":["205.10"],"usedeferredvalue":["205.10"],"usetransition":["205.10"],"退出批处理":["205.12"],"强制同步执行更新":["205.12"],"会以函数为作用域":["205.12"],"函数内部的多个":["205.12"],"仍然是批量更新":["205.12"],"handleautobatching":["205.12"],"fallback":["205.13","218.8"],"spinner":["205.13"],"comments":["205.13","212.1"],"具体可参考文章":["205.13"],"react无法自动识别":["205.14"],"所以它提供了":["205.14"],"让我们手动指定哪些更新是紧急的":["205.14"],"哪些是非紧急的":["205.14"],"从而让我们改善用户交互体验":["205.14"],"紧急的更新":["205.14"],"直观感觉这有点像":["205.15"],"而防抖节流其实本质也是":["205.15"],"这样一看":["205.16"],"直观就是延迟显示状态":["205.16"],"那用防抖节流有什么区别呢":["205.16"],"如果使用防抖节流":["205.16"],"比如延迟300ms显示则意味着所有用户都要延时":["205.16"],"在渲染内容较少":["205.16"],"用户cpu性能较好的情况下也是会延迟300ms":["205.16"],"而且你要根据实际情况来调整延迟的合适值":["205.16"],"这里涉及到":["205.17"],"ssr":["205.17","241.1","241.10"],"部分知识":["205.17"],"这里不展开了":["205.17"],"subscribe":["205.19"],"getsnapshot":["205.19"],"则执行的优先级":["206.0"],"越高":["206.0"],"并不是单纯的":["206.0"],"而是判定两次更新任务的时间是否":["206.0"],"小于10ms":["206.0"],"来决定是否":["206.0"],"复用":["206.0"],"上一次的更新时间":["206.0"],"scheduler":["206.0","256.4","258.8"],"running":["206.1","255.0","256.4"],"task":["206.1"],"which":["206.1","218.5"],"probably":["206.1"],"what":["206.1"],"temporary":["206.1"],"removing":["206.1"],"concept":["206.1"],"discrete":["206.1"],"discreteeventcontext":["206.1"],"用户block的类型事件":["206.1"],"userblockingschedulerpriority":["206.1","206.8"],"通过findupdatelane函数重新计算lane":["206.1"],"findupdatelane":["206.1"],"inputdiscretelanepriority":["206.1"],"根据优先级计算法则计算lane":["206.1"],"schedulerlanepriority":["206.1"],"schedulerprioritytolanepriority":["206.1"],"decoupleupdatepriorityfromscheduler":["206.1"],"strategy":["206.1"],"select":["206.1"],"retrylanepriority":["206.2","206.3"],"findretrylane":["206.2"],"idlelanepriority":["206.2"],"idlelanes":["206.2"],"transitionhydrationpriority":["206.3"],"transitionpriority":["206.3"],"selectivehydrationlanepriority":["206.3"],"forceupdate":["206.4","206.5"],"强制更新":["206.4"],"scheduled":["206.5"],"inside":["206.5","236.4","236.5"],"functions":["206.5"],"should":["206.5"],"zero":["206.5"],"协调阶段":["206.6"],"greater":["206.8"],"considered":["206.8","214.2"],"even":["206.8"],"immediateschedulerpriority":["206.8","206.9"],"lowest":["206.8"],"per":["206.8"],"them":["206.8"],"early":["206.8"],"needed":["206.8"],"rootswithpendingdiscreteupdates":["206.8"],"可以中断更新":["206.8"],"只要调用ensurerootisscheduled":["206.8"],"performconcurrentworkonroot":["206.8","206.9"],"异步任务调用":["206.9"],"schedulerprioritylevel":["206.9"],"laneprioritytoschedulerpriority":["206.9"],"所以任务类型为同步的时候":["206.9"],"不管":["206.9"],"线程空闲与否":["206.9"],"都会走到":["206.9"],"进而走":["206.9"],"workloopsync":["206.9"],"而在":["206.9"],"每一次在执行":["206.10"],"之前都会关注一下":["206.10"],"reconcilechildren":["206.11"],"completework":["206.11"],"commitmutationeffects":["206.11"],"insertorappendplacementnodeintocontainer":["206.11"],"这里将详细解读":["206.11"],"doesn":["206.12","218.4","232.2","243.2"],"spawn":["206.12"],"completeunitofwork":["206.12"],"workinprogress":["206.12"],"这里就不去拆分的太细":["206.13"],"只有有想法便会单独出一篇文章讲述这个的细节":["206.13"],"但是最后都会去调用":["206.13"],"record":["206.14"],"errored":["206.14"],"spent":["206.14"],"working":["206.14"],"continuing":["206.14"],"actualduration":["206.14"],"mark":["206.14","252.6"],"兄弟层指针":["206.14"],"port2":["206.15"],"port1":["206.15"],"performworkuntildeadline":["206.15"],"告知scheduler开始调度":["206.15"],"scheduledhostcallback":["206.15"],"ismessagelooprunning":["206.15"],"创建了消息通道":["206.15"],"当发现":["206.15"],"线程空闲时":["206.15"],"通知":["206.15"],"开始调度":["206.15"],"函数功能为处理":["206.15"],"调度开始时间更新到结束时间":["206.15"],"这里我们要关注一下设备帧速率":["206.15"],"forceframerate":["206.15"],"fps":["206.15"],"observed":["206.16","248.1"],"beginwork":["206.17"],"的遍历执行更新":["206.17"],"独特的事件处理":["207.1"],"onclickcapture":["207.2"],"阻止事件默认行为":["207.3"],"这个方法并非是原生事件的":["207.3"],"事件源":["207.3","207.10"],"事件触发":["207.4"],"到事件执行一系列过程":["207.4"],"合成的事件":["207.5"],"是由":["207.5"],"合成":["207.5"],"changeeventplugin":["207.6"],"插件处理":["207.7"],"在事件绑定阶段":["207.8"],"如果发现有":["207.8"],"所以对于不同事件需要不同的事件插件处理":["207.9"],"也是独立组建的":["207.10"],"这样更利于一个":["207.11"],"下存在多个应用":["207.11"],"所以不进行手动绑定的情况下直接获取到的this是undefined":["207.12"],"这里可以使用实验性的属性初始化语法":["207.12"],"也就是直接在组件声明箭头函数":["207.12"],"箭头函数不会创建自己的this":["207.12"],"react自己实现了一套事件机制":["207.13"],"自己模拟了事件冒泡和捕获的过程":["207.13"],"采用了事件代理":["207.13"],"最后执行真正在document上挂载的事件":["207.14"],"所有的react事件都将无法被注册":["207.15"],"stoppropagation":["207.16"],"ispropagationstopped":["207.16"],"否则使用attachevent":["207.17"],"兼容ie":["207.17"],"给document注册原生事件回调为dispatchevent":["207.17"],"registrationname":["207.18"],"如果阻止了冒泡":["207.19"],"停止遍历":["207.19"],"否则通过executedispatch执行合成事件":["207.19"],"和事件类型从listenerbink中取出回调函数":["207.20"],"返回带有合成事件参数的回调函数":["207.20"],"放弃面向对象编程":["208.1"],"拥抱函数式编程":["208.1"],"第三种形态是函数组件的更新":["208.2"],"既然与":["208.2"],"之间的桥已经建好了":["208.2"],"那么组件再更新":["208.2"],"第一次hook复用":["208.3"],"第二次hook复用":["208.3"],"第二次复用时候已经发现":["208.3"],"里面保存了更新的信息":["208.4"],"都会创建一个更新函数":["208.4"],"比如如上的":["208.4"],"本质上就是":["208.4"],"那么值得注意一点是":["208.4"],"当前的":["208.4"],"fiber":["208.4"],"绑定了固定的参数传入":["208.4"],"队列中":["208.5"],"然后判断如果当前的":["208.5"],"正在更新":["208.5"],"那么也就不需要再更新了":["208.5"],"反之":["208.5"],"说明当前":["208.5"],"没有更新任务":["208.5"],"那么会拿出上一次":["208.5"],"layouteffect":["208.7"],"会形成一个副作用链表":["208.7"],"绑定在函数组件":["208.7"],"updatequeue":["208.7"],"为什么":["208.7"],"会这么设计呢":["208.7"],"首先对于类组件有componentdidmount":["208.7"],"componentdidupdate":["208.7"],"固定的生命周期钩子":["208.7"],"在render结束后就运行":["208.9"],"useeffect在大部分场景下都比class的方式性能更好":["208.9"],"阻塞了浏览器的绘制":["208.10"],"或者组件实例":["208.12"],"或者保存一些状态等":["208.12"],"创建ref对象":["208.13"],"创建和更新过程":["208.14"],"初始化会执行第一个函数得到想要缓存的值":["208.16"],"将值缓存到":["208.16"],"更新流程就是对比两次的":["208.17"],"dep":["208.17","246.4"],"是否发生变化":["208.17"],"如果没有发生变化":["208.17"],"直接返回缓存值":["208.17"],"会产生一个全新的props":["209.1"],"到此":["209.1"],"purecomponent":["209.2","209.6"],"改变numberb":["209.3"],"首先把":["209.3"],"组件对应的":["209.3"],"挂载到组件实例的":["209.3"],"属性下":["209.3"],"控制渲染":["209.3"],"组件":["209.3","217.4"],"的返回值":["209.4"],"中有依赖项改变":["209.4"],"返回值作为新的值记录到":["209.5"],"的绑定方法":["209.6"],"还是指向同一个内存空间":["209.7"],"想要解决这个问题也容易":["209.7"],"浅拷贝就可以解决":["209.7"],"将如上":["209.7"],"changeobjnumber":["209.7"],"这么修改":["209.7"],"会浅比较":["209.8"],"是否相等":["209.8"],"或者老":["209.9"],"判断对应的新":["209.9"],"或新":["209.9"],"有没有与之对应并且相等的":["209.9"],"来确定是否更新组件":["209.10"],"是一个函数":["209.11"],"可以根据一次更新中":["209.11"],"相当于仅比较":["209.12"],"版本的":["209.12"],"第三种情况就是越是靠近":["209.13"],"根组件越值得注意":["209.13"],"根组件渲染会波及到整个组件树重新":["209.13"],"memo":["209.14"],"可以吗":["209.15"],"parsechildren":["210.0","239.5"],"textmodes":["210.0","239.5"],"transformslotoutlet":["210.1"],"transformelement":["210.1"],"trackslotscopes":["210.1"],"transformtext":["210.1"],"transformon":["210.1"],"hoists":["210.2"],"temps":["210.2","240.1"],"cached":["210.2"],"hoiststatic":["211.0"],"再次遍历节点":["211.0"],"找到所有可以被静态提升的节点和属性":["211.0"],"修改他们对应的":["211.0"],"rest":["212.1"],"节点的父节点":["213.0"],"包含了":["213.0"],"branch":["214.0","215.2","252.5"],"hasdynamictextchild":["214.1"],"interpolation":["214.1","215.2"],"compound":["214.1","214.2","214.3"],"expression":["214.1","215.2","226.1"],"getconstanttype":["214.1","215.1"],"constanttypes":["214.1"],"pass":["214.1"],"directly":["214.1"],"templatetextchildnode":["214.1"],"isreferenced":["214.2"],"islocal":["214.2"],"isstaticpropertykey":["214.2"],"wrapped":["214.2"],"compat":["214.2"],"needprefix":["214.2"],"canprefix":["214.2"],"isstaticproperty":["214.2"],"shorthand":["214.2"],"property":["214.2"],"rewrite":["214.2"],"unless":["214.2"],"pointing":["214.2"],"isconstant":["214.2"],"also":["214.2","222.4"],"sub":["214.2"],"better":["214.2"],"support":["214.2"],"except":["214.2"],"invoke":["214.2"],"an":["214.2","214.3"],"strings":["214.2"],"have":["214.2","252.5"],"prefixed":["214.2"],"codegen":["214.2"],"callargs":["214.3"],"whitespace":["214.3"],"space":["214.3","241.1","241.10"],"could":["214.3","232.4"],"save":["214.3"],"bytes":["214.3"],"如果一个节点是一个元素节点":["215.1"],"会通过":["215.1"],"getvnodehelper":["215.2"],"simple":["215.2","259.2"],"静态提升是空间换时间的优化手段":["215.3"],"相比于被占用的内存成本":["215.3"],"开启或者禁用":["216.1"],"的功能":["216.1"],"cachedvnode":["216.2"],"clone":["216.2"],"reused":["216.2"],"going":["216.2"],"mutate":["216.2"],"clonevnode":["216.2"],"sscontent":["216.2"],"returned":["216.2","251.2"],"cloned":["216.2"],"due":["216.2"],"attr":["216.2"],"fallthrough":["216.2"],"scopeid":["216.2"],"may":["216.2","252.5"],"final":["216.2"],"mounted":["216.2","236.2"],"caching":["216.2"],"pending":["216.2"],"transition":["216.3"],"recursively":["216.3","256.8"],"settransitionhooks":["216.3"],"avoid":["216.3","222.4","251.2","252.6"],"fresh":["216.3","235.4"],"kept":["216.3"],"alive":["216.3","217.7"],"freshest":["216.3"],"prune":["216.4","216.5"],"oldest":["216.4"],"reset":["216.6"],"shapeflag":["216.6","232.3","232.4"],"it":["216.6","218.4","218.8","222.4","232.2","236.1"],"可以是工厂函数":["217.0"],"也可以是一个对象":["217.0"],"会将参数标准化成一个对象":["217.0"],"并且把":["217.0"],"属性指向这个函数":["217.0"],"主要做了三件事":["217.0"],"其实就是一个组件对象":["217.1"],"setup函数返回的是一个函数":["217.1"],"获取它的真实组件对象":["217.2"],"resolvecomp":["217.2"],"如果组件对象":["217.2"],"onerror":["217.4"],"timed":["217.7"],"iskeepalive":["217.7"],"force":["217.7","252.3"],"异步组件通过闭包的技巧确保了":["217.8"],"多个异步组件同时加载":["217.8"],"只发送一次请求":["217.8"],"比如普通元素节点":["218.2"],"properly":["218.4","232.2"],"unmounted":["218.4","232.2"],"later":["218.4","232.2"],"events":["218.4","232.2"],"bitmap":["218.5"],"feature":["218.5","222.3"],"suspense":["218.5","222.3","236.4"],"issuspense":["218.5"],"isteleport":["218.5"],"teleport":["218.5","232.4"],"stateful":["218.5"],"isfunction":["218.5","236.2","243.2","252.3"],"toraw":["218.5","221.3"],"placeholder":["218.8"],"hydration":["218.8"],"todo":["218.8"],"handle":["218.8"],"defined":["218.8"],"subtree":["218.8"],"createvnode":["218.8"],"但是会在入口函数中进行重写":["218.9"],"函数都是与":["218.10"],"会递归执行组件的渲染":["218.11"],"无论组件嵌套的多深":["218.11"],"都可以完成整个组件树的渲染":["218.11"],"应用程序的入口":["218.11"],"设置组件实例":["219.1"],"设置并运行带有副作用的渲染函数":["219.1"],"isunmounted":["219.3"],"isdeactivated":["219.3"],"bm":["219.3"],"bu":["219.3"],"um":["219.3","220.6"],"bum":["219.3"],"da":["219.3","284.72"],"rtg":["219.3"],"rtc":["219.3"],"sp":["219.3"],"setupresult":["219.4","252.4"],"asyncdep":["219.6"],"but":["219.6","219.10"],"boundary":["219.6"],"must":["219.6","236.6"],"nested":["219.6"],"之间访问":["219.8"],"option":["219.10"],"组件的初始化结果":["219.15"],"丰富了组件的实例和渲染上下文":["219.15"],"钩子函数":["220.0"],"deactivated":["220.1"],"onerrorcaptured":["220.1"],"errorcaptured":["220.1"],"onrendertracked":["220.1"],"there":["220.2"],"active":["220.2","256.4"],"associated":["220.2"],"injection":["220.2"],"apis":["220.2"],"prefetch":["220.3"],"会检测组件实例是否有已注册的":["220.4"],"quenepostrendereffect":["220.5","220.6"],"父组件的更新不一定会导致子组件的更新":["220.5"],"把它":["220.6"],"推入数组":["220.6"],"组件的销毁是组件更新的一个分支逻辑":["220.6"],"也是在":["220.6"],"阻止错误向上传播":["220.7"],"可以在根组件":["220.7"],"注册一个":["220.7"],"在此我们可以注入一些生命周期钩子函数执行自己的代码逻辑":["220.8"],"normalizedprop":["221.1"],"booleanindex":["221.1"],"gettypeindex":["221.1"],"boolean":["221.1"],"stringindex":["221.1"],"booleanflags":["221.1"],"shouldcast":["221.1"],"shouldcasttrue":["221.1"],"是否合法":["221.2"],"变成响应式的":["221.2"],"postfix":["221.3"],"shouldskipattr":["221.3"],"rawcurrentprops":["221.3"],"getinvalidtypemessage":["221.4"],"然后也需要更新":["221.7"],"子组件实例的":["221.7"],"只需要对比":["221.8"],"动态的":["221.8"],"性能更好":["221.9"],"已经响应式处理":["221.11"],"当组件传入的":["221.11"],"逻辑":["222.2"],"internals":["222.3"],"suspenseimpl":["222.3"],"queued":["222.4"],"double":["222.4"],"updating":["222.4"],"same":["222.4"],"flush":["222.4"],"patchelement":["222.5"],"大于":["222.9"],"或e2":["222.10"],"则同步过程结束":["222.10"],"直接删除旧子树从索引":["222.11"],"开始到索引":["222.11"],"部分到节点":["222.11"],"整个更新过程":["222.12"],"利用来":["222.12"],"树的深度遍历":["222.12"],"通过递归执行":["222.12"],"修改逻辑":["223.0"],"在构造器内部":["223.1"],"finalizedepmarkers":["223.2"],"stopped":["223.2","255.0"],"运行内部的":["224.0"],"effect":["224.0","259.2"],"对象的":["225.0","258.8"],"cref":["225.4"],"computedrefimpl":["225.4"],"temp":["226.1"],"codegennode":["226.1","240.1"],"gennode":["226.1"],"repeat":["227.1"],"original":["227.1"],"based":["227.1"],"generated":["227.1"],"ssrhelpers":["228.1"],"guardreactiveprops":["228.2"],"handlers":["228.2"],"tohandlers":["228.2"],"camelize":["228.2"],"capitalize":["228.2"],"handler":["228.2"],"tohandlerkey":["228.2"],"tracking":["228.2","236.5"],"setblocktracking":["228.2"],"pushscopeid":["228.2"],"nodetypes":["228.3"],"hoisted":["228.3"],"annotation":["228.3"],"adding":["230.2"],"validassetid":["230.2"],"genifstatement":["231.1"],"genassignmentexpression":["231.1"],"sequence":["231.1"],"gensequenceexpression":["231.1"],"genreturnstatement":["231.1"],"gennullableargs":["231.2"],"接下来根据":["231.4"],"deindent":["231.6"],"conditional":["231.7","252.5"],"disabletracking":["232.1"],"patchflag":["232.3","233.0","252.3"],"dynamicprops":["232.3","236.6"],"anything":["232.4"],"shapeflags":["232.4"],"hostparentnode":["232.4"],"cases":["232.4","245.3"],"actually":["232.4"],"这样在运行阶段就可收集到所有动态节点":["233.0"],"形成一个":["233.0"],"在patch":["233.0"],"可以用":["234.2"],"prod":["235.4"],"devtoolsinitapp":["235.4"],"getexposeproxy":["235.4"],"remount":["235.4"],"your":["235.4"],"creation":["235.4"],"logic":["235.4"],"factory":["235.4"],"instances":["235.4"],"each":["235.4"],"createmyapp":["235.4"],"resolveasset":["236.0"],"directives":["236.0"],"extra":["236.1"],"nif":["236.1"],"sure":["236.1"],"via":["236.1"],"iscustomelement":["236.1"],"objectdirective":["236.2"],"enumerable":["236.4"],"vueparentcomponent":["236.4"],"enter":["236.4"],"hook":["236.4","256.8"],"disable":["236.5"],"lifecycle":["236.5"],"they":["236.5"],"potentially":["236.5"],"called":["236.5"],"present":["236.6"],"non":["236.6"],"propstoupdate":["236.6"],"prev":["236.6"],"unmountchildren":["236.6","236.7"],"dynamic":["236.7","252.3"],"keyed":["236.7"],"unkeyed":["236.7"],"会在它":["237.0"],"挂载":["237.0"],"根节点":["238.0"],"最后还会处理空白字符":["238.0"],"compilescript":["239.2"],"ists":["239.3"],"expressionplugins":["239.3"],"对象的根节点其实是一个虚拟节点":["239.4"],"不会映射到一个具体节点":["239.4"],"还包含了一些其他属性":["239.4"],"createsimpleexpression":["240.1"],"otherwise":["241.1","241.10"],"condensed":["241.1","241.10"],"single":["241.1","241.10"],"consecutive":["241.1","241.10"],"whitespaces":["241.1","241.10"],"down":["241.1","241.10"],"normalize":["241.1","241.10"],"newlines":["241.1","241.10"],"rendered":["241.1","241.10"],"advancepositionwithmutation":["241.4"],"getcursor":["241.7"],"errorcodes":["241.8","256.4"],"tolowercase":["241.8"],"first":["241.8"],"startswith":["241.8"],"warndeprecation":["241.9"],"getselection":["241.9"],"elementtypes":["241.9"],"slot":["241.9","252.7"],"节点数组能够映射整个模版的":["241.12"],"offset":["242.1"],"originalsource":["242.1"],"work":["243.1"],"parentprovides":["243.1"],"原型链":["243.15"],"的方式实现了层层查找组件提供的":["243.15"],"对应数据":["243.15"],"依赖注入还是有负面影响":["243.15"],"组件的渲染中就是让组件访问的数据一旦被修改":["244.0"],"就会自动触发组件的重新渲染":["244.0"],"默认":["245.0"],"并执行":["245.1"],"函数收集依赖":["245.1"],"对象属性访问的时候才会判断子属性的类型":["245.1"],"元素都进行代理":["245.2"],"做依赖收集":["245.2","258.9","258.11"],"tracked":["245.3"],"leads":["245.3"],"infinite":["245.3"],"loops":["245.3"],"pop":["245.3","286.49"],"unshift":["245.3"],"新收集的":["246.1"],"然后看递归的深度是否超过了":["246.3"],"maxmarkerbirts":["246.3"],"如果超过":["246.3"],"执行老的":["246.3"],"优化了减少对于":["246.4"],"依赖集合的操作":["246.4"],"内部通过":["246.5"],"与运算":["246.5"],"createsetter":["247.0"],"函数的返回值":["247.0"],"最核心部分就是":["247.1"],"就是根据":["247.2"],"函数支持传入一个配置参数":["247.3"],"以支持更多的功能":["247.3"],"指向本身":["247.4"],"isreadonly":["248.0","250.1"],"corresponding":["248.1"],"existingproxy":["248.1"],"specific":["248.1"],"targettype":["248.1"],"proxyhandler":["248.2"],"deepreadonly":["249.0"],"unwrapnestedrefs":["249.0"],"接着返回了":["250.0"],"refimpl":["250.0"],"newval":["250.1"],"usedirectvalue":["250.1"],"createdep":["250.2"],"trackoptypes":["250.2"],"isref":["250.3"],"createreactiveobject":["251.0"],"isobject":["251.2"],"well":["251.2"],"here":["251.2"],"invalid":["251.2"],"再渲染":["252.1"],"则执行":["252.2"],"normalizechildren":["252.2","252.6"],"patchflags":["252.3"],"attached":["252.5"],"createslots":["252.5"],"respect":["252.5"],"rawslots":["252.5"],"wrapping":["252.6"],"在执行":["252.7"],"插槽函数的时候":["252.7"],"如果想要在插槽渲染时使用子组件的渲染函数":["252.8"],"可以通过作用于插槽":["252.8"],"的自定义事件":["253.0"],"在事件回调函数中完成对数据的修改":["253.0"],"在自定义组件的场景中":["253.0"],"是用的":["254.2"],"flow":["254.2"],"类型检查的":["254.2"],"在复杂场景下的支持不好":["254.2"],"导入的模块":["254.3"],"打上标记":["254.3"],"在压缩阶段删除":["254.3"],"未使用的模块":["254.3"],"中递归响应":["254.4"],"好处是":["254.4"],"真正访问到的内部对象才会变成响应式":["254.4"],"将性能优化到":["254.5"],"mixins":["254.6"],"变量命名容易冲突":["254.6"],"少走弯路":["254.7"],"只需从缓存中调用即可":["254.9"],"无需再次更新":["254.9"],"会被直接":["254.10"],"innerhtml":["254.10"],"就不需要再创建对象":["254.10"],"编译单个包的时候":["254.11"],"会从每个包的":["254.11"],"生成代码":["254.13"],"与平台无关的转换插件":["254.13"],"专门针对浏览器的转换插件":["254.14"],"解析都是这里实现的":["254.16"],"事件等的管理":["254.18"],"后的代码体积":["254.23"],"itself":["255.0","256.8"],"defer":["255.0"],"也就是开始执行任务的时候":["256.1"],"会递增":["256.1"],"在执行任务的时候又有新的任务进来":["256.1"],"只需要":["256.1"],"和queue":["256.1"],"中未执行的任务对比":["256.1"],"无论是":["256.1"],"callwitherrorhandling":["256.4"],"checkrecursiveupdates":["256.5"],"sort":["256.6"],"getid":["256.6"],"postflushindex":["256.6"],"thus":["256.8"],"triggering":["256.8"],"sources":["256.8"],"内部会创建副作用函数":["257.2"],"可以直接监听多个响应式对象":["258.1"],"数组的形式":["258.1"],"任意一个响应式对象更新后":["258.1"],"不是发出警告":["258.2"],"告诉用户":["258.2"],"应该使用":["258.2"],"会判断每个数组元素类型":["258.3"],"不满足上面条件":["258.3"],"则在非生产环境下":["258.3"],"发出警告":["258.3"],"类型不合法":["258.3"],"的一个配置选项":["258.4"],"第一次执行的时候如果旧值没变化":["258.5"],"执行完回调函数":["258.5"],"queuepreflushcb":["258.6"],"getter":["258.9"],"watcher":["258.10","259.3"],"也会移除组件":["258.10"],"effects":["258.10"],"然后在数据发生变化的时候":["258.11"],"被销毁的时候":["259.3"],"warpdotdev":["260.0"],"号称自己":["260.0"],"reinvent":["260.0"],"也就是重新定义了终端":["260.0"],"用过":["260.0"],"用户还需要等待一段时间":["260.1"],"其实":["260.1"],"版也是刚刚公测":["260.1"],"keyboard":["260.2"],"shortcuts":["260.2"],"中找得到":["260.2"],"键入":["260.2"],"关键字即可":["260.2"],"可调整为自己喜欢的快捷键":["260.2"],"我目前设置的是":["260.2"],"比如说我问它":["260.2"],"how":["260.2"],"many":["260.2"],"lines":["260.2"],"were":["260.2"],"changed":["260.2"],"至于快捷键配置":["260.3"],"如果不确定有哪些快捷键可以尝试":["260.3"],"直接点击":["260.3"],"顶部的这个温馨提示":["260.3"],"真的是改变了我对终端":["260.4"],"的认知":["260.4"],"目前找了对外的国内":["262.0"],"有两个":["262.0"],"饿了么":["262.0"],"elemecdn":["262.0"],"知乎":["262.0"],"大部分人无法体验到":["263.0"],"这里我分享一下注册的攻略":["263.0"],"activate":["263.1"],"美元进去":["263.2"],"这里的区号默认是你代理的":["263.3"],"然后再刚刚填写手机号码的页面填入申请的手机号":["263.4"],"选择合适的费用即可":["263.6"],"本文转自":["263.6"],"不同页面":["265.0"],"不同框架":["265.0"],"不同css预处理器":["265.0"],"不同像素单位":["265.0"],"相关甚至还会帮你把脚手架搭建好":["265.0"],"直接下载安装依赖使用即可":["265.0"],"有点牛呀":["265.0"],"好在哪":["265.0"],"笔者在这之前觉得想象中的":["265.0"],"ai":["265.0"],"生成前端代码的功能一直都挺简陋":["265.0"],"用起来不会到达我的预期":["265.0"],"到底能不能解决我的痛点":["265.0"],"其实我是有以下固有思想的":["265.0"],"生成代码就是很简单的帮你把":["265.0"],"写完嘛但是我们不同框架又不能生成":["265.0"],"生成代码的变量名肯定不好看":["265.0"],"生成的代码肯定固定了宽高":["265.0"],"难不成还会给我自动生成脚手架":["265.1"],"结果一试":["265.1"],"还真给我生成了脚手架":["265.1"],"只需要安装依赖即可":["265.1"],"标签输出为循环列表":["265.2"],"选项即可自动根据当前选择的框架生成对应的循环遍历语法":["265.2"],"数据绑定":["265.3"],"进行可视化修改即可":["265.3"],"我们可以看到它的全部写法都改成了变量动态渲染":["265.3"],"好赞":["265.4"],"去找到更合适自己使用":["265.5"],"的使用方法可以":["265.5"],"大量减少开发时间":["265.5"],"从而去做":["265.5"],"更有意义的事情":["265.5"],"很多人会很排斥":["265.5"],"觉得没自己写的好":["265.5"],"但是时代已经变啦":["265.5"],"rocks":["269.0"],"sheet":["271.1"],"最初iterm2的样子":["275.1"],"bottles":["275.2"],"bottle":["275.2"],"domain":["275.2"],"taps":["275.2"],"cask":["275.2"],"还原":["275.2"],"这一行配置":["275.2"],"有时候我们需要修改下markdown源码":["276.0"],"此时可以通过":["276.0"],"切换到源码模式来实现":["276.0"],"marktext的代码样式支持确实不错":["276.0"],"看看我们平时常用的java代码样式":["276.0"],"比typora更炫酷":["276.0"],"canvas":["279.5"],"光标特效仙女棒":["279.6"],"光标之泡泡":["279.6"],"charset":["279.7"],"utf":["279.7"],"csstext":["279.8"],"fixed":["279.8"],"onresize":["279.8"],"onmousemove":["279.8"],"clientx":["279.8"],"clienty":["279.8"],"onmouseout":["279.8"],"semantic":["279.9"],"viewed":["279.10"],"通过js来控制一系列的css动画顺序执行":["281.2"],"使css3动画变得非常简单和优雅":["281.2"],"visionmedia":["281.2"],"velocity":["281.2"],"一个功能齐全的":["281.2"],"动画套件":["281.2"],"jq22":["281.3"],"info1890":["281.3"],"limarquee":["281.3"],"binnng":["281.4"],"info1124":["281.5"],"设置延时调用later":["283.4"],"true在开始边界调用":["283.4"],"lock":["283.6"],"使用方式":["283.6"],"为return":["283.6"],"没有注册这个事件":["283.7"],"execute":["283.7"],"复制一份":["283.7"],"如果是函数":["283.10"],"直接执行函数":["283.10"],"同步任务":["283.10"],"同时把函数返回值作为promise的成功状态参数":["283.10"],"如果是基本类型和对象":["283.10"],"直接把参数作为promise的成功状态参数":["283.10"],"actionsk":["283.11"],"如果延迟执行不存在":["283.12"],"且没有设定结尾边界不执行选项":["283.12"],"w":["284.14"],"mkv":["284.22"],"rmvb":["284.22"],"mp4":["284.22"],"bmp":["284.23"],"tif":["284.23"],"048":["284.39"],"西藏":["284.40"],"江西":["284.40"],"广东":["284.40"],"福建":["284.40"],"台湾":["284.40"],"udc1d":["284.49","284.66"],"udc20":["284.49","284.66"],"ud873":["284.49","284.66"],"udea1":["284.49","284.66"],"ufe44":["284.53"],"u3014":["284.53"],"u3015":["284.53"],"u2026":["284.53"],"u2014":["284.53"],"013":["284.65"],"udeb0":["284.66"],"x7e":["284.76"],"nestedcomments":["285.14"],"imgwidth":["286.1"],"offsetwidth":["286.1","286.71"],"contains":["286.7"],"unique":["286.8"],"parentnode":["286.9"],"scrollto":["286.10"],"english":["286.13"],"英文":["286.13"],"chinese":["286.13"],"中文":["286.13"],"u4e00":["286.13"],"元素处于焦点返回true":["286.24"],"反之返回false":["286.24"],"单行代码":["286.26"],"前端世界":["286.26"],"age":["286.28"],"getfullyear":["286.28"],"getmonth":["286.28","287.2"],"是不滚动的":["286.33"],"lineheight":["286.33"],"requestidlecallback":["286.37"],"浏览器空闲执行下一批渲染":["286.37"],"得到最新的渲染列表":["286.37"],"renderlist":["286.38"],"渲染区间":["286.38"],"使用document":["286.39"],"getfileextension3":["286.40"],"字节":["286.42"],"作为区分每个切片的编号":["286.43"],"后端会以此作为切片的文件名称":["286.43"],"此名称也应该与后端约定好":["286.43"],"后端会以此作为切片文件的内容":["286.43"],"upload":["286.44"],"所有切片上传成功后后":["286.46"],"再告诉后端所有切片都已完成":["286.46"],"mergefilechunks":["286.46"],"uploadinput":["286.47"],"uploadbtn":["286.47"],"来以":["286.52"],"键值对的形式来接受":["286.52"],"来接受":["286.53"],"attribute":["286.55"],"navy":["286.55"],"009926":["286.55"],"bullet":["286.55"],"useragent":["286.58"],"mobile":["286.58"],"则跳转到":["286.64"],"隐藏所有":["286.65"],"special":["286.66"],"设置黑名单":["286.69"],"新添加image字段":["286.69"],"禁止使用new":["286.69"],"image来调接口":["286.69"],"移除临时标签":["286.71"],"02":["287.1"],"padstartzero":["287.4"],"03":["287.7"],"items":["288.2"],"queryselectorall":["288.2"],"li":["288.2"],"今年":["288.4"],"岁":["288.4"],"sport":["288.4"],"005":["291.4"],"۱۲۳":["291.5"],"۴۵۶":["291.5"],"۷۹":["291.5"],"322342436423":["291.5"],"pow":["291.6"],"tofixed":["291.6"],"esrever":["295.3"],"si":["295.3"],"dispatchevent":["296.2"],"newwindow":["296.3"]},{"0":["19.9","60.0","61.0","87.3","87.24","87.26","96.2","100.3","113.6","138.31","173.74","236.1","246.5","286.30","286.59"],"1":["1.12","23.75","23.79","65.4","86.8","87.26","118.4","127.20","127.37","127.39","138.31","147.2","153.10","286.40","288.2","295.2"],"2":["52.17","95.42","96.6","106.27","119.9","122.5","122.19","127.37","132.3","132.4","154.15","173.13","178.4","284.42","286.2","286.40"],"3":["47.9","60.0","81.7","95.42","96.6","100.2","122.13","122.16","127.33","131.1","152.17","170.11","173.13","173.87","178.4","206.4","222.11","284.44","284.45"],"4":["45.6","67.2","76.3","81.2","87.26","100.2","100.7","131.5","131.6","137.6","173.1","173.13","173.19","173.25","173.37","173.73","173.87","177.13","195.8","279.9","284.16"],"5":["81.4","92.0","96.5","100.4","127.32","127.49","144.1","150.2","152.20","152.24","154.11","154.16","154.17","173.13","177.13","178.4","206.15","285.2"],"6":["96.6","127.39","152.20"],"7":["7.13","154.3","173.13","284.47"],"8":["36.5","113.0","114.21","122.0","140.5","154.3","156.24","173.24","205.4","286.10","286.56"],"9":["127.15","154.3","173.24"],"10":["1.13","127.1","154.3","178.7","216.2","216.3","216.4","284.84"],"11":["48.27","130.9","173.43","175.9","175.13","295.4"],"12":["123.1","152.3","173.43"],"13":["67.3","123.1","130.9","152.3"],"14":["115.0","175.16"],"16":["7.13","106.26","154.19"],"17":["38.4","46.5","184.18"],"18":["2.3","87.3","205.13","205.16"],"19":["172.0","284.64"],"20":["136.1","154.12","172.0","284.6"],"21":["179.32"],"22":["152.8","154.19","172.0"],"23":["127.39","136.8","159.5","159.9","171.0"],"24":["141.6"],"25":["185.6","260.2"],"26":["195.9"],"27":["87.39","172.0"],"28":["154.19","172.0","181.0"],"29":["181.0","284.39"],"30":["7.8","65.30"],"31":["69.10","159.5","284.38"],"33":["172.0"],"34":["69.10","172.0"],"36":["172.0"],"38":["159.13","172.0"],"39":["172.0"],"41":["172.0"],"44":["159.13"],"46":["172.0"],"50":["61.12","153.8"],"51":["159.9"],"52":["172.0"],"53":["152.2","172.0"],"56":["154.19","172.0"],"57":["172.0"],"60":["7.13"],"61":["172.0"],"64":["89.9"],"69":["87.24"],"75":["172.0"],"76":["172.0"],"80":["114.32","275.2"],"82":["172.0"],"83":["172.0"],"85":["172.0"],"89":["136.4","136.7"],"100":["10.6","69.10","172.0","279.8","287.8"],"101":["172.0","184.16"],"108":["115.0"],"110":["172.0"],"113":["172.0"],"114":["287.1"],"115":["172.0"],"116":["172.0"],"117":["172.0"],"120":["288.1"],"125":["206.15"],"127":["138.31","172.0"],"130":["172.0"],"131":["172.0"],"132":["172.0"],"133":["172.0"],"138":["101.5"],"139":["172.0"],"141":["172.0"],"145":["172.0"],"146":["106.30"],"159":["172.0"],"160":["106.25"],"165":["170.15"],"188":["281.3"],"189":["284.35"],"200":["125.9","286.59"],"204":["19.9"],"206":["29.3"],"212":["287.8"],"253":["101.5"],"255":["115.0"],"281":["101.5"],"300":["153.8"],"322":["291.5"],"324":["184.16"],"333":["170.15"],"342":["291.5"],"400":["166.8","167.4"],"403":["138.36"],"404":["134.4","166.8","179.45"],"408":["29.5"],"423":["291.5"],"436":["291.5"],"500":["101.5","179.45"],"666":["90.0"],"690":["10.6"],"802":["47.9"],"905":["10.6"],"999":["10.6","106.21","286.55"],"1000":["7.14","100.9","103.14","165.2","206.15"],"1234":["152.18"],"2000":["165.2"],"2003":["173.82"],"2019":["127.1"],"2795":["204.1"],"3000":["154.4","154.5","154.7","154.8","154.10","154.16","154.17","165.2"],"3002":["138.31"],"3579":["284.39"],"3600":["141.6"],"4096":["102.5"],"5581":["127.31"],"6000":["115.0"],"6553":["284.61"],"8000":["114.32"],"8080":["195.9"],"10000":["206.0"],"123456":["175.4"],"703078":["25.5"],"990073":["286.55"],"3377342":["0.1"],"9235140":["0.0"],"20282930":["43.14"],"138993691":["43.14"],"1297807229":["101.5"],"3828610143":["101.5"],"0b13108":["0.0"],"修改博客前缀":["0.0"],"ac2c279":["0.0"],"修改下载依赖命令":["0.0"],"0946f15":["0.0"],"html":["0.0","65.36","97.2","99.9","195.9","241.8","286.13"],"0a304a1":["0.0"],"test":["0.0","57.7","81.6","87.12","100.8","107.4","139.4","162.3","173.98","204.2"],"2f7a97e":["0.0"],"trst":["0.0"],"41597e4":["0.0"],"update":["0.0","72.5","206.2"],"deploy":["0.0"],"pages":["0.0"],"yml":["0.0","68.8"],"b54cc51":["0.0"],"65fd04f":["0.1"],"增加http模块":["0.1"],"53676d7":["0.1"],"字节面试题":["0.1"],"d7c68d4":["0.1"],"browser":["0.1","219.10"],"完善":["0.1"],"999eb15":["0.1"],"chrome":["0.1","99.10","106.34","162.0","173.64","177.10","181.0","279.10"],"0976f4f":["0.1"],"create":["0.1","173.46","214.3","243.1"],"readme":["0.1"],"ef8f3d7":["0.1"],"footer":["0.1","69.10"],"f065b83":["0.1"],"hooks":["0.1","216.2"],"5e3e734":["0.1"],"http知识":["0.1"],"浏览器常考":["0.1"],"54b33b0":["0.1"],"5c43dae":["0.1"],"init":["0.1","169.4"],"5502a8d":["0.1"],"9bfed3f":["0.1"],"4b10938":["0.1"],"75ac916":["0.1"],"a1ffff1":["0.1"],"428487b":["0.1"],"eb78195":["0.1"],"页面通信":["0.1"],"aab3186":["0.1"],"forin":["0.1"],"forof":["0.1"],"7df62a0":["0.1"],"stringify":["0.1","126.5","134.4","178.7"],"47cc708":["0.1"],"e0d029f":["0.1"],"843c059":["0.1"],"35ab749":["0.1"],"ts面试题":["0.1"],"316fd2c":["0.1"],"dc9ae32":["0.1"],"eed211a":["0.1"],"2ef68cb":["0.1"],"响应式原理完结":["0.1"],"98c8a33":["0.1"],"reactive":["0.1","245.1"],"响应式原理补充":["0.1"],"be25c21":["0.1"],"wacher":["0.1"],"design":["0.1"],"5a9ca55":["0.1"],"计算属性":["0.1"],"4b6107b":["0.1"],"watch监听器源码":["0.1"],"1bc635e":["0.1"],"webpack面试题完善":["0.1"],"42f144e":["0.1"],"实际场景应用缓存策略":["1.0"],"网络请求":["1.1"],"fetch":["1.1","204.3","286.69"],"正常请求":["1.1"],"中获取的内容":["1.2"],"大概率是不存储在内存中的":["1.3"],"反之优先":["1.3"],"当前系统内存使用率高的话":["1.3"],"文件优先存储进硬盘":["1.3"],"相同地址的资源一旦被硬盘缓存下来":["1.4"],"就不会再次去请求数据":["1.4"],"连接":["1.5"],"也就是说能使用同样的缓存":["1.5"],"中的缓存只能被使用一次":["1.5"],"浏览器可以拒绝接受已经存在的资源推送":["1.5"],"你可以给其他域名推送资源":["1.5"],"受限于本地时间":["1.9"],"如果修改了本地时间":["1.9"],"可能会造成缓存失效":["1.9"],"还能设置缓存失效时间等等":["1.10"],"接下来我们就来学习一些常见指令的作用":["1.10"],"并且更新浏览器缓存有效期":["1.11"],"出现了":["1.12"],"etag":["1.12"],"值的":["1.13"],"作为缓存时间":["1.13"],"inode":["1.16"],"就排除了":["1.16"],"match的值和etag字段的值不匹配":["1.17"],"从而去请求最新的资源文件":["1.17"],"改变":["1.18"],"但是文件内容没有更改":["1.18"],"但是能显著减少响应数据大小":["1.20"],"否则就一直使用缓存":["1.21"],"1h":["1.22"],"建立管道":["2.2"],"准备读取响应体数据":["2.2"],"读取响应体数据":["2.2"],"传输完成":["2.2"],"确认提交":["2.2"],"收到确认信息":["2.2"],"提交信息":["2.2"],"页面解析和资源加载":["2.2"],"页面完成加载":["2.2"],"地址栏的":["2.3"],"url":["2.3","98.7","138.40","173.13"],"前进后退的历史状态":["2.3"],"并更新web页面":["2.3"],"此时的web页面是空白页":["2.3"],"渲染进程对文档进行页面解析和子资源加载":["2.3"],"通过htm":["2.3"],"解析器转成dom":["2.3"],"tree":["2.3"],"二叉树类似结构的东西":["2.3"],"css按照css":["2.3"],"规则和css解释器转成cssom":["2.3"],"两个tree结合":["2.3"],"形成render":["2.3"],"不包含html的具体元素和元素要画的具体位置":["2.3"],"通过layout可以计算出每个元素具体的宽高颜色位置":["2.3"],"结合起来":["2.3"],"开始绘制":["2.3"],"最后显示在屏幕中新页面显示出来":["2.3"],"一个站点":["3.1"],"一个进程":["3.1"],"节省进程数量":["3.1"],"减少内存占用":["3.1"],"有点空间换时间的意思":["3.2"],"gui更新会被保存在一个队列中等到js引擎空闲时立即被执行":["3.4"],"导致页面渲染加载阻塞":["3.5"],"当js引擎空闲时才会去执行":["3.6"],"用来绘制基本的浏览器窗口内控件":["4.2"],"如输入框":["4.2"],"按钮":["4.2"],"单选按钮等":["4.2"],"根据浏览器不同绘制的视觉效果也不同":["4.2"],"但功能都是一样的":["4.2"],"chrome的blink":["4.6"],"webkit的分支":["4.6"],"box2":["5.2"],"childlist":["5.5","169.4"],"还可以监听大小变化":["5.6"],"还支持对":["5.8"],"performance":["5.8","181.0","218.5"],"录制行为的监听":["5.8"],"对象":["5.9","129.7","173.82","204.3"],"监听":["5.9"],"时间点":["5.9"],"时间段":["5.9"],"resource":["5.9"],"资源加载耗时":["5.9"],"这三种记录时间的行为":["5.9"],"这些是错误监听无法监听到但对了解网页运行情况很有用的数据":["5.10"],"了":["5.11","9.1","27.15","61.8","64.15","98.4","106.27","113.6"],"可以让我们更全面的了解网页":["5.12"],"app":["5.12","96.1","97.2","101.5","206.8","260.2"],"的运行情况":["5.12"],"每个块的位图后":["6.1"],"生成一个个":["6.1"],"指引":["6.1"],"quad":["6.1"],"信息":["6.1","177.5"],"指引会标识出每个位图应该画到屏幕的哪个位置":["6.1"],"以及会考虑到旋转":["6.1"],"缩放等变形":["6.1"],"变形发生在合成线程":["6.1"],"与渲染主线程无关":["6.1"],"效率高的本质原因":["6.1"],"合成线程会把":["6.1"],"提交给":["6.1"],"由":["6.1","60.0"],"进程产生系统调用":["6.1"],"硬件":["6.1"],"完成最终的屏幕成像":["6.1"],"最终决定获取属性立即":["6.3"],"的变化":["6.5"],"相对于作为":["7.0"],"parent":["7.0","133.7"],"的":["7.0","61.8","156.7","173.64","206.11","206.14","208.16","275.2"],"而言":["7.0"],"进程的主":["7.1"],"当然对父子合成器进行调度的部分仍然是在":["7.1"],"发送给":["7.2"],"再发送给":["7.2"],"的这个过程的耗时":["7.2"],"像传统的":["7.3"],"translate3d":["7.3","153.6"],"hack":["7.3"],"和新的":["7.3"],"属性":["7.3","106.4","127.18","186.3","204.3","216.7"],"will":["7.3","214.2"],"change":["7.3","97.47"],"并最终到达":["7.4"],"display":["7.4","89.13"],"未来也可以直接发给":["7.4"],"执行这些":["7.5"],"指令完成网页在窗口上占据的可见区域的绘制":["7.5"],"内核动画":["7.6"],"每一帧都是由":["7.6"],"生成":["7.6","64.12"],"都需要产生一个新的":["7.6"],"包含了大量的图层变更":["7.7"],"也会导致触发的瞬间卡顿":["7.7"],"页端事先对图层结构进行优化可以避免这个问题":["7.7"],"帧以上的水平":["7.8"],"我们就需要对动画在渲染流水线的每个重要环节进行性能计算":["7.8"],"需要知道这些环节最长允许的耗时上限和网页影响这些环节耗时的主要原因":["7.8"],"虽然实际上很难完全锁定":["7.8"],"但是一般来说性能分析":["7.8"],"优化还是会以":["7.8"],"帧为目标来倒推各个环节的最大耗时":["7.8"],"如果是场景比较复杂的":["7.8"],"以":["7.8"],"帧为目标帧率是一个合理的诉求":["7.8"],"线程本身不会被真正运行光栅化任务的":["7.9"],"线程所阻塞":["7.9"],"合成器动画性能分析和优化指南":["7.9"],"是异步并发的":["7.10"],"在":["7.10","19.14","61.5","95.16","106.34","110.2","151.13","156.6","177.7","196.9"],"输出":["7.10","173.98"],"n":["7.10","55.2","214.1"],"的时候":["7.10","106.25","144.1","208.4"],"已经可以开始输出下一帧":["7.10"],"js":["7.11","87.15","173.31","173.79","179.42","219.10","220.5"],"加载图片或者其它内容":["7.11"],"并频繁地对":["7.11"],"dom":["7.11","87.25","106.5","178.6","206.14","216.1","232.4"],"树进行操作":["7.11"],"网页的图层树非常复杂":["7.11"],"并且其结构在合成器动画过程中频繁发生变化":["7.11"],"导致大量的光栅化任务在":["7.11"],"线程运行":["7.11"],"因为前者可以认为是后者的一个简化版本":["7.12"],"所以这一章主要讨论":["7.12"],"动画":["7.12"],"帧的非合成器动画":["7.13"],"只需要保证其中每个":["7.13"],"的耗时总和小于":["7.13"],"毫秒即可":["7.13"],"当然实际的状况下":["7.13"],"在移动设备上很难实现这么多线程完全并发运行":["7.13"],"加上过多线程带来的互相通讯的开销":["7.13"],"使得每个":["7.13"],"的最大允许耗时实际上是小于":["7.13"],"毫秒的":["7.13"],"所以每一帧超过":["7.14"],"个":["7.14","106.21","106.30","154.12"],"游戏":["7.14"],"性能阻塞的瓶颈有很大概率会出现在":["7.14"],"也就是":["7.14","156.11","178.5"],"cpu":["7.14","175.12"],"上":["7.14","138.26","138.33","195.9","204.1","208.16","262.0"],"而不是":["7.14","51.2","65.10"],"防止用户刷新页面之后丢失了一些参数":["8.11"],"有两个同源的iframe元素的话":["8.15"],"这两个iframe的":["8.15"],"是可以互通的":["8.15"],"groupcollapsed":["10.4"],"times":["10.4"],"log":["10.4","10.7","19.11","58.5","64.12","103.8","110.2","125.9","126.3","126.5","127.37","132.2","132.3","132.4","158.4","164.4","173.57","173.58","175.4","177.5","179.29","182.2","286.30","286.46"],"groupend":["10.4","10.8","10.11","10.13"],"all":["10.4","74.6","76.3","107.4","148.0","154.7","154.16","154.17","231.1","286.44"],"is":["10.5","16.0","64.7","126.5","127.10","195.8","195.9","206.2","228.2"],"empty":["10.5","221.3"],"prismstyle":["10.6"],"createelement":["10.6","103.17","195.7"],"beautified":["10.6"],"highlighted":["10.6"],"color":["10.6","95.40","123.1","168.7","179.9","195.4","288.2"],"black":["10.6"],"text":["10.6","90.0","95.40","241.7","252.3"],"shadow":["10.6","97.35","106.36","170.11","171.0"],"1px":["10.6","106.21","170.11"],"white":["10.6","97.35"],"family":["10.6"],"consolas":["10.6"],"monaco":["10.6"],"andale":["10.6"],"mono":["10.6"],"monospace":["10.6"],"direction":["10.6"],"ltr":["10.6"],"align":["10.6"],"left":["10.6","61.12","61.13","286.33"],"space":["10.6","97.35"],"word":["10.6","97.22","171.0"],"spacing":["10.6","97.22"],"normal":["10.6"],"moz":["10.6"],"tab":["10.6","61.8","134.4"],"size":["10.6","195.4","216.2","216.3"],"webkit":["10.6"],"hyphens":["10.6"],"none":["10.6","25.8","89.13","102.1"],"ms":["10.6"],"media":["10.6"],"print":["10.6"],"padding":["10.6"],"1em":["10.6"],"margin":["10.6"],"5em":["10.6"],"overflow":["10.6","153.11"],"auto":["10.6","97.26","101.5","153.11"],"not":["10.6","91.0","127.10","127.33","206.2","206.15","214.3","218.4","219.6","226.1","232.2","235.4","243.2"],"background":["10.6","97.35","168.7","170.14"],"f5f2f0":["10.6"],"border":["10.6","92.0"],"radius":["10.6","171.0"],"3em":["10.6"],"prolog":["10.6"],"doctype":["10.6","99.9"],"cdata":["10.6"],"slategray":["10.6"],"namespace":["10.6","95.47"],"opacity":["10.6","97.35","179.9"],"number":["10.6","10.11","115.0","156.14","188.0"],"attr":["10.6"],"name":["10.6","64.7","64.19","65.27","82.1","98.8","119.6","127.46","179.57","184.21"],"operator":["10.6"],"entity":["10.6","23.90"],"a67f59":["10.6"],"hsla":["10.6","171.0"],"value":["10.6","19.6","173.56","175.4","177.3","179.55","190.0","216.2","216.3","216.4","221.1","235.4"],"keyword":["10.6"],"07a":["10.6"],"regex":["10.6"],"e90":["10.6"],"weight":["10.6"],"bold":["10.6"],"cursor":["10.6","91.0"],"help":["10.6"],"head":["10.6","107.4"],"appendchild":["10.6","10.9","126.7"],"call":["10.7","10.10","162.2","179.22","179.25","195.8","232.4"],"document":["10.7","178.6","178.7","179.41"],"stylesheets":["10.7"],"console":["10.7","19.11","64.12","103.8","125.9","126.3","126.5","132.2","132.3","132.4","166.3","173.57","173.58","175.4","179.29","206.1","206.15","286.30","286.46","286.51"],"reload":["10.7","195.7"],"parsefloat":["10.8"],"table":["10.8","10.11","10.13","177.10"],"in":["10.9","22.13","65.29","65.30","96.14","99.12","100.8","127.42","205.16","227.1","236.1","241.8","286.55"],"use":["10.9","96.1","97.10","148.4","195.7","206.8","219.10"],"body":["10.9","23.90","64.8","99.9","126.7","279.7"],"of":["10.11","102.5","220.2"],"redirects":["10.11"],"that":["10.11","148.0","218.5","235.4"],"have":["10.11","127.33","226.1"],"taken":["10.11","217.7"],"place":["10.11","148.0"],"redirectcount":["10.11"],"return":["10.12","53.3","53.6","53.9","64.7","64.10","81.1","103.12","107.2","112.2","112.3","131.8","131.9","140.0","174.8","174.21","174.22","174.23","174.29","174.48","174.52","174.60","176.9","176.18","218.4","218.8","219.3","219.4","221.3","225.4","230.2","232.2","239.3","241.1","241.3","241.7","241.10","249.0","252.4","256.8","259.2","284.84","286.12","286.15","286.19","286.31","286.42","286.43","286.71","287.2","287.3","291.6","296.1"],"比较两个window对象":["10.14"],"多出来就是新增的对象":["10.14"],"这是不是比手动更改方便多了":["11.2"],"listener":["11.4"],"也会变到":["11.6"],"elements":["11.6"],"标签":["11.6","106.27","286.65"],"这样断点就会变为橙色":["11.7"],"并且只有当符合表达式的情况时断点才会被执行":["11.7"],"图片":["12.0","13.0","19.14","20.3","21.5","21.7","22.16","22.26","23.14","23.87","23.88","25.3","29.6","65.33","71.22","71.23","71.24","84.4","96.7","121.4","151.2","167.4","185.7","193.9","198.5","220.8","222.7","222.12","265.1","265.2","265.5"],"但你想去掉里面的敏感信息":["15.0"],"now":["16.0","103.17","115.0","206.1"],"enabled":["16.0"],"break":["16.0","177.13","179.61"],"或者可以被视为表达式的":["17.0"],"strings":["17.0"],"第三次":["18.0"],"通过使用这些变量来操作对应的数据":["18.0"],"不用再担心影响到他们原来的值":["18.0"],"捕获":["19.2","19.3"],"true":["19.2","62.15","62.18","69.3","72.5","87.20","99.13","123.1","125.2","127.35","127.42","154.18","169.4","171.0","173.13","177.9","178.3","195.7","206.5","212.1","216.5","231.7","252.5","256.8","275.2","283.2","283.4","283.12","285.5","285.7","286.13","286.66","286.68","287.7"],"节省内存":["19.4"],"不需要给子节点注销事件":["19.4"],"但是表单并不会获取新的内容":["19.5"],"所以可以发起跨域请求":["19.5"],"同时也说明了跨域并不能完全阻止":["19.5"],"因为请求毕竟是发出去了":["19.5"],"接下来我们将来学习几种常见的方式来解决跨域的问题":["19.5"],"xxx":["19.6","75.6","145.6","154.8"],"会在发送请求时出现两种情况":["19.7"],"分别为":["19.7","27.12"],"简单请求和复杂请求":["19.7"],"xmlhttprequest":["19.8","107.4","286.69"],"upload":["19.8"],"属性访问":["19.8"],"statuscode":["19.9"],"setheader":["19.9"],"length":["19.9","52.18","64.8","69.10","95.25","140.5","153.8","221.3","286.38","295.2"],"end":["19.9","126.5"],"表示二级域名都相同就可以实现跨域":["19.10"],"验证通过":["19.11"],"的请求中携带":["19.13"],"same":["19.13","206.8","228.2"],"site":["19.13"],"规定浏览器不能在跨域请求中携带":["19.13"],"csrf":["19.13"],"application":["19.14"],"看到":["19.14"],"已经启动了":["19.14"],"中也可以发现我们所需的文件已被缓存":["19.14"],"当我们重新刷新页面可以发现我们缓存的数据是从":["19.14"],"中读取的":["19.14"],"闭包通常跟楼上的函数上下文一起入栈":["20.2"],"它不是一个上下文结构":["20.2"],"但保存着内部函数创建时所引用的外部函数变量":["20.2"],"一般不用":["20.4"],"在上下文中":["20.7"],"变量的访问从词法环境栈顶开始":["20.7"],"所以第一个console访问到的是3":["20.7"],"当块状作用域中代码执行完毕后":["20.7"],"对应变量空间将从词法环境中弹出":["20.7"],"所以第二个console访问到的是2":["20.7"],"第三个console访问到的是变量环境中的1":["20.7"],"所以我们可以发现":["20.9"],"词法作用域实现的关键还是js的分阶段执行":["20.9"],"因为是编译阶段决定所以不可能是动态作用域":["20.9"],"只能按照代码书写位置决定访问顺序":["20.9"],"但给bar函数留下了一个闭包对象":["20.10"],"这个闭包背在了bar函数身上":["20.10"],"当bar函数编译生成上下文的时候一同被加载至调用栈":["20.10"],"bar":["20.12","64.26","127.51"],"我们在foo函数中执行嵌套函数bar的时候":["20.12"],"bar中的this不会继承foo函数":["20.12"],"而是根据bar":["20.12"],"的调用方式选择默认绑定为window对象":["20.12"],"于是a最终打印的是全局变量1":["20.12"],"所以":["20.12","22.18","37.3","46.3","106.26","207.3"],"把this和作用域链区别对待是十分重要的":["20.12"],"避免混淆":["20.12"],"也就是图中的第四个步骤":["21.1"],"也可以嵌入到任何c":["21.2"],"应用程序中":["21.2"],"一旦在执行过程中":["21.3"],"对象的结构被动态修改了":["21.3"],"那么优化之后的代码势必会变成无效的代码":["21.3"],"这时候优化编译器就需要执行反优化操作":["21.3"],"经过反优化的代码":["21.3"],"下次执行时就会回退到解释器解释执行":["21.3"],"在后续的处理过程中":["21.6"],"比如语义分析阶段":["21.6"],"会添加一些信息":["21.6"],"在词法分析的基础上将单词序列组合成抽象语法树":["21.7"],"继续执行函数":["21.8"],"剩下的代码":["21.8"],"整个过程经历的状态分别是":["21.8"],"执行moment":["21.8"],"暂停moment":["21.8"],"执行studyreact":["21.8"],"恢复moment":["21.8"],"并遮盖外部":["21.10"],"全局":["21.10"],"作用域中的同名变量":["21.10"],"or":["21.15","148.4","181.0","219.10","221.1","236.1","243.2","256.8"],"function":["21.15","64.24","81.1","81.6","96.12","107.2","134.3","134.4","173.81","175.4","178.6"],"reference":["21.15"],"这些名称直接对应于其绑定对象的属性名称":["21.16"],"在浏览器环境下就是保存对象的key":["21.16"],"value在windows上":["21.16"],"所以对象环境记录不存在不可变绑定":["21.16"],"而在定义前使用":["21.17"],"javascript引擎会通过作用域链的查找方式一层一层往上找":["21.17"],"而global的上一层作用域为null":["21.17"],"所以会有":["21.17"],"的报错":["21.17"],"函数声明和变量声明都会被提升":["21.17"],"但是值得注意的细节是":["21.17"],"在重复声明的代码中":["21.17"],"函数会被首先提升":["21.17"],"然后才是变量":["21.17"],"就是前面讲到的eval语法和with语法":["21.18"],"这会导致性能下降":["21.18"],"o系统工作":["22.1"],"cpu是不工作":["22.1"],"有电荷代表1":["22.11"],"无电荷代表0":["22.11"],"如下图":["22.11","84.3","113.6","173.9","179.30"],"你都不用去考虑寄存器":["22.12"],"存储体这些事":["22.12"],"这部分的总结":["22.12"],"time":["22.13"],"comipler":["22.13"],"余数为1是二进制数的最高位的数码":["22.16"],"我们具体举一个例子":["22.17"],"得到的整数依次是":["22.18"],"由此":["22.18"],"大家肯定能看出来":["22.18"],"整数部分出现了无限循环":["22.18"],"复制代码":["22.18"],"所以0":["22.19"],"1和0":["22.19"],"2都无法完美转化为二进制":["22.19"],"所以它们相加当然不是0":["22.19"],"3了":["22.19"],"再js里面":["22.21"],"数字都是用双精度的浮点数":["22.21"],"所以学习浮点数对我们理解js的数字有帮助":["22.21"],"阶码就是多少次方":["22.22"],"你肯定是要完全掌握的":["22.23"],"存储体上的数据":["22.24"],"只需要1000ns":["22.24"],"因为cache是高速存储器":["22.24"],"跟cpu交互速度就比cpu跟主存交互速度快很多":["22.24"],"接下里":["22.24"],"进入最后一节":["22.24"],"略过对总线知识的学习":["22.24"],"o设备的演变":["22.24"],"最后来看一下第三阶段":["22.27"],"大体上就理解了局域网和广域网":["23.1"],"但吞吐量不能超过最大速率":["23.6"],"主要负责处理传输来的数据":["23.14"],"我们可以总结下数据链路层主要功能":["23.22"],"还是div字符串呢":["23.25"],"对于我们理解局域网比较有帮助":["23.28"],"其接收者为一个":["23.30"],"并且其目的地址的最高字节的低位为０":["23.30"],"相与得到相同的网络地址":["23.39"],"牛b":["23.40"],"喝口水":["23.40"],"继续":["23.40"],"比如路由器":["23.44"],"的优点":["23.44"],"就是数据报":["23.45"],"这个字段只检验数据报的首部":["23.46"],"但不包括数据部分":["23.46"],"目的地址和源地址都是ip地址":["23.46"],"目的地址是通过dns查询得来的":["23.46"],"较长的分组在分片后":["23.48"],"某片在原分组中的相对位置":["23.48"],"主机号都是1":["23.50"],"也就是8个1":["23.50"],"代表255":["23.50"],"所以192":["23.50"],"255表示本网段的广播地址":["23.50"],"第四行":["23.50"],"大家最熟悉不过了":["23.50"],"127作为网络号":["23.50"],"主机号非全0或1":["23.50"],"比如说127":["23.50"],"1代表本机":["23.50"],"称为环回地址":["23.50"],"经过路由转换":["23.51"],"转换成内网的192":["23.51"],"168网段的私有地址":["23.51"],"到":["23.52"],"主要是帮助我们划分子网的":["23.52"],"了解到这里对我们前端就够了":["23.52"],"源主机收到这个arp响应数据包后":["23.54"],"将得到的目的主机的ip地址和mac地址添加到自己的arp列表中":["23.54"],"并利用此信息开始数据的传输":["23.54"],"如果源主机一直没有收到arp响应数据包":["23.54"],"表示arp查询失败":["23.54"],"路由器里可以开启这个服务":["23.55"],"探测主机是否能找到目的主机":["23.58"],"超出这个限度":["23.59"],"缓冲队列容纳不下":["23.59"],"包就会被丢到":["23.59"],"马上就要到对前端最重要的传输层和应用层知识了":["23.59"],"准备接招":["23.59"],"适用于小文件":["23.60"],"还是给b":["23.61"],"比如视频会议":["23.63"],"udp首部较小":["23.63"],"只有8字节":["23.63"],"而tcp由20字节":["23.63"],"这也是减少网络传输开销的一方面":["23.63"],"端口不可达":["23.64"],"的差错报文":["23.64"],"tcp将应用层的数据变为了这样的字节进行发送":["23.65"],"比如玩过node同学":["23.65"],"知道一个buffer":["23.65"],"buffer就是字节流":["23.65"],"数据偏移指的是tcp报文段的数据起始处举例tcp报文段的起始处有多远":["23.66"],"6个控制位介绍如下":["23.66"],"告诉接收tcp模块紧要指针域指着紧要数据":["23.67"],"要正式发数据了":["23.68"],"ack是确认码":["23.68"],"意思是收到了服务器的确认请求了":["23.68"],"客户端的最后一个ack报文在传输的时候丢失":["23.69"],"服务器并没有接收到这个报文":["23.69"],"这个候时候服务器就会超时重传这个fin消息":["23.69"],"然后客户端就会重新返回最后一个ack报文":["23.69"],"完成关闭":["23.69"],"如果不等待这两个时间周期":["23.69"],"服务器重传的那条消息就不会收到":["23.69"],"服务器就因为接收不到客户端的信息而无法正常关闭":["23.69"],"为什么不能用两次握手进行连接":["23.70"],"客户端都没有反应":["23.71"],"则认为客户端故障":["23.71"],"关闭连接":["23.71"],"对于客户端来说":["23.72"],"他已经建立起连接了":["23.72"],"并且已经知道服务器的接收和发送能力是正常的":["23.72"],"所以也就可以携带数据了":["23.72"],"重传时间是动态改变的":["23.73"],"依据的是rtts":["23.73"],"加权平均往返时间":["23.73"],"字节的数据报来通知接收方重新声明它希望接收的下一字节及发送方的滑动窗口大小":["23.75"],"的窗口基于字节":["23.77"],"但是这里设窗口的大小单位为报文段":["23.77"],"然后重新执行慢开始":["23.78"],"而快恢复":["23.79"],"就有可能使客户端的机器产生大量的处于time":["23.84"],"wait状态tcp连接":["23.84"],"world":["23.88"],"wide":["23.88"],"web":["23.88","99.10","200.1","204.3"],"之所以在浏览器里输入百度网址时":["23.88"],"能看见百度网提供的网页":["23.88"],"就是因为您的个人浏览器和百度网的服务器之间使用的是http协议在交流":["23.88"],"万维网使用统一资源定位符作为标识符来访问资源":["23.88"],"实体的主体部分":["23.90"],"实体的主体部分包含一个由任意数据组成的数据块":["23.90"],"并不是所有的报文都包含实体的主体部分":["23.90"],"有时":["23.90"],"报文只是以一个crlf结束":["23.90"],"下面是常用头部":["23.90"],"authorization":["23.91","166.9"],"包含了客户端提供给服务器":["23.91"],"以便对其自身进行认证的数据":["23.91"],"cookie":["23.91","25.6"],"客户端用它向服务器传送数据":["23.91"],"以便服务器对客户端进行标识":["23.92"],"modified":["23.93","27.11"],"这个实体最后一次被修改的日期和时间":["23.93"],"postmessage":["24.3","24.5","126.2","127.34","168.26","175.12","179.51"],"中进行了调用":["24.4"],"这样实现了跨域":["24.4"],"http响应头之后":["24.5"],"浏览器将会允许跨域请求":["24.5"],"proxy代理":["24.5"],"目前常用方式":["24.5"],"通过服务器设置代理":["24.5"],"利用h5新特性window":["24.5"],"需要配合适当的":["25.2"],"type":["25.2","99.13","107.4","123.1","154.6","241.3","243.1"],"食用":["25.2"],"然后我分别访问三个路由":["25.3"],"效果差异":["25.3"],"二":["25.3","147.0"],"项目升级了":["25.3"],"需要客户":["25.3"],"清空缓存":["25.3"],"control":["25.4","179.51"],"这个响应头":["25.4"],"是前端的必知技能":["25.4"],"简单来说":["25.5"],"每次请求资源前前端会写代前一次的响应":["25.5"],"hash":["25.5"],"问询服务端":["25.5"],"资源是否发生过变化":["25.5"],"从而达到准确缓存的效果":["25.5"],"本文不赘述":["25.5"],"如果有兴趣":["25.5"],"可以参考此文":["25.5"],"juejin":["25.5","115.0","195.9"],"cn":["25.5","115.0","195.9"],"三":["25.6","166.2"],"我的":["25.6"],"不可能这么可爱":["25.6"],"的各种异常":["25.7"],"全靠它":["25.7"],"支持属性包括":["25.8"],"strict":["25.8","97.17","195.7"],"lax":["25.8"],"分别表示":["25.8"],"完全不能跨域携带":["25.8"],"只允许从外站导航到源站时携带":["25.8"],"跨域也行":["25.8"],"不限制":["25.8"],"是否有路径的限制":["25.9"],"是否有":["25.9"],"httponly":["25.9","126.5"],"逐一排查下来":["25.9"],"问题不难解决":["25.9"],"来确保数据的传输":["26.1"],"确保网站的真实性":["26.1"],"ip":["26.2"],"不能再同一个":["26.2"],"上绑定多个域名":["26.2"],"ipv4":["26.2"],"资源支持不了这种消耗":["26.2"],"服务器通过自己的私钥解密出会话密钥":["26.4"],"服务器通过会话密钥加密与客户端之间的通信":["26.4"],"比http协议安全":["26.5"],"多用于无副作用":["27.1"],"幂等的场景":["27.1"],"例如搜索关键字":["27.1"],"多用于副作用":["27.1"],"不幂等的场景":["27.1"],"例如注册":["27.1"],"支持更多的编码类型且不对数据类型限制":["27.2"],"warning":["27.5","251.2"],"在内容中可能存在错误":["27.5"],"请求某个内容的一部分":["27.7"],"referer":["27.7"],"表示浏览器所访问的前一个页面":["27.7"],"te":["27.7"],"传输编码方式":["27.7"],"获取资源需要的验证信息":["27.9"],"last":["27.11","214.2","260.2"],"内容的最后修改时间":["27.11"],"对称加密和非对称加密":["27.12"],"这时候两端就都知道秘钥是什么了":["27.14"],"rtt":["27.15"],"后面恢复连接不需要":["27.15"],"所以其与":["28.1"],"之间有质的不同":["28.1"],"http2":["29.2","175.9"],"升级":["29.2"],"部分内容":["29.3"],"服务器成功处理了部分请求":["29.3"],"但请求者应继续使用原有位置来进行以后的请求":["29.4"],"请求超时":["29.5"],"服务器等候请求时发生超时":["29.5"],"协议版本":["29.6"],"如果接收方正好也有数据要发给发送方":["30.1"],"应答包也可方在数据包中捎带过去":["30.1"],"是把自己从当局者变成旁观者":["31.1"],"从整体上检视并反思已经发生的事件":["31.1"],"并对未来提供指导的过程":["31.1"],"然后设法放大这个主要原因":["31.4"],"避免重复犯错":["31.5"],"值得一提的是":["31.5"],"我们常说那些的歇后语":["31.5"],"本质上就是前人在复盘之后的智慧传承":["31.5"],"既然复盘这么重要":["31.5"],"那么怎么复盘才是正确的姿势呢":["31.5"],"无论如何我们都要感谢那些乐于分享自己经历的人":["31.7"],"从某种意义上来说":["31.7"],"他们是人类智慧的传承者":["31.7"],"所以看完本文应该做什么呢":["31.7"],"才能知道如何改进":["31.9"],"不会因为信息不完整而做出错误的判断":["31.9"],"像一个局外人一样冷眼旁观正在复盘的事情":["31.15"],"是为了行动":["31.16"],"行动之后":["31.16"],"不要忘了复盘":["31.16"],"复盘失败和复盘成功一样重要":["31.17"],"我们不应该对此有差别心":["31.17"],"这其实是一种复盘的方法":["31.18"],"不知道是我的思路错了":["32.1"],"还是解决中疏漏了哪个步骤":["32.1"],"你有空帮忙看看不":["32.1"],"二不来声谢谢":["32.2"],"很闹心的":["32.2"],"重复提问":["32.2"],"大佬说了不懂框架":["32.2"],"啦":["32.2"],"下次可以注意点":["32.2"],"要不然就像你每天被人问":["32.2"],"有女票吗":["32.2"],"问多几次":["32.2"],"你会不会想砍了它啊":["32.2"],"只要结果":["32.2"],"过分了吧":["32.2"],"大佬成为百度中转站不说":["32.2"],"还要帮你提炼解决方法":["32.2"],"破口大骂":["32.2"],"这":["32.2","41.10"],"英文":["32.3"],"不认识英文的话":["32.3"],"技术框架等技术要素":["33.1"],"这样看来其根本没有理清架构的深层含义":["33.1"],"也":["33.1"],"有一些架构师只专注对底层技术的研究":["33.1"],"以为打造一个卓越的系统是非常牛逼的事":["33.1"],"情":["33.1"],"可是他忽略了软件系统的价值是以解决业务问题的能力":["33.1"],"支撑业务增长的能力为":["33.1"],"衡量标准":["33.1"],"所以最后生产出了很多对组织":["33.1"],"对业务没有帮助的系统":["33.1"],"降低实现这一类需求的复杂性":["33.2"],"对我们的产品满意":["34.2"],"及早获得高管和组织的支持":["36.5"],"笔者写作本章的目的":["37.0"],"就是为了同大家分享飞轮思维的内涵和外延":["37.0"],"让大家对飞轮思维有所认识":["37.0"],"获得构建自己的飞轮的基本能力":["37.0"],"如果在看过本章之后":["37.0"],"你能把飞轮思维应用到生活当中":["37.0"],"那将是笔者的莫大荣幸":["37.0"],"言归正传":["37.0"],"作为文章的第一个例子":["37.0"],"我们将考察一家坚持使用":["37.0"],"最后取得成功的公司":["37.0"],"一网打尽":["37.1"],"在这本描写亚马逊的发展历程的书里":["37.1"],"有对推动飞轮的事情有详细的叙述":["37.1"],"限于篇幅":["37.1"],"本文就不再展开了":["37.1","44.5"],"总之":["37.1","44.3"],"就是靠着推动这个飞轮的转动":["37.1"],"亚马逊走出了2000年前后的互联网泡沫":["37.1"],"即便是后来从电商转型为云服务提供商":["37.1"],"亚马逊始终都没有改变这个飞轮的基本结构":["37.1"],"他们十年如一地推动着这个飞轮":["37.1"],"最终取得了巨大的商业成功":["37.1"],"有了服务费":["37.2"],"我们才能接入更多的渠道":["37.2"],"为了推动这个飞轮的转动":["37.2"],"在过去我们已经做了大量的工作":["37.2"],"在飞轮能够完全自驱地转动起来之前":["37.2"],"我想我们还会继续推动下去":["37.2"],"大家可以思考一下":["37.2"],"自己从事的行业有没有类似的飞轮系统":["37.2"],"除了用在商业上之外":["37.2"],"飞轮思维还可以用在个人成长中":["37.2"],"以笔者的经历为例":["37.2"],"虽然自己当时不知道":["37.2"],"但是我在公司的第一个年头确实就用到了":["37.2"],"亚马逊的业务不可能在瞬间停止":["37.3"],"而我的个人成长已经和团队绑定了":["37.3"],"秤砣离不开秤杆":["37.3"],"不可能在瞬间就找个人完成替换":["37.3"],"除非我们能接受巨大的代价":["37.3"],"和推动飞轮转动一样":["37.3"],"让飞轮停止转动必然是一个非常缓慢的过程":["37.3"],"讽刺的是":["37.3"],"绝大多数人根本就没有考虑过如何让飞轮停止的问题":["37.3"],"然而":["37.3"],"如果你想成为一名优秀的工程师":["37.3"],"我的建议是有始有终且善始善终":["37.3"],"在想好如何开始的同时就一并想好如何结束":["37.3"],"痛点":["38.3"],"如何让他们高效":["38.3"],"尽可能满足他们的需求":["38.3"],"还是服务的一部分":["38.4"],"准入的门槛是什么":["38.4"],"如果达不到要求":["38.4"],"是否可以通过合作的关系解决":["38.4"],"提高系统的重用性":["38.5"],"为用户带尽可能多的价值":["38.6"],"作为工程实践当中的一种重要思维工具":["39.1"],"在背后支持灰度思维的底层逻辑":["39.1"],"是科学实践中的怀疑精神":["39.1"],"怀疑精神要求我们对我们现有的经验都保持持怀疑态度":["39.1"],"对我们利用这些经验在脑海里的推演持怀疑态度":["39.1"],"因为这些推演并不代表实际情况":["39.1"],"只有实际操作过":["39.1"],"看到了客观世界的实际结果":["39.1"],"我们才能做最后的判断":["39.1"],"那么":["39.1","44.2","204.2"],"具体到实操层面":["39.1"],"我们应该如何使用":["39.1"],"呢":["39.1"],"也就无法使用灰度思维了":["39.3"],"当然这种问题已经超出本文所讨论的范畴和作者的能力":["39.3"],"这里就不再展开了":["39.3"],"为了更好的理解":["39.4"],"灰度思维":["39.4"],"不妨让我们看几个例子":["39.4"],"我们才会全量开放这个新模块":["39.6"],"我们可以立即回切流量":["39.7"],"非常安全便捷":["39.7"],"下面":["39.8","44.2","133.5"],"我们再几个在生活中使用灰度思维的例子":["39.8"],"此时放弃的成本也不会太高":["39.11"],"不要被这种计量给pua了":["39.13"],"提问":["40.1"],"请在不违反当前公司原则的情况下回答":["40.3"],"如果我的问题你不方便回答可以直接告诉我":["40.3"],"参考话术":["40.5"],"我接下来描述的问题如果你有任何不清楚的都可以随时打断我":["40.5"],"第三个是小程序":["40.6"],"主要是微信小程序":["40.6"],"我们采用自己研发的脚手架":["40.6"],"基于原生模式开发":["40.6"],"最终组成了我入职时看到的这个罗马":["41.0"],"我想":["41.0"],"如果我不曾问师兄":["41.0"],"或者师兄未曾说起":["41.0"],"谁会想到这么多系统组成的支付系统的前身尽然是一个只有几千行代码的模块呢":["41.0"],"最后":["41.0","104.0","133.2","133.4","148.5","158.5","164.5","195.4"],"师兄拧灭烟头":["41.0"],"转头看着我":["41.0"],"一字一顿地说":["41.0"],"罗马并非是一天建成的":["41.0"],"罗马是一步步迭代出来的":["41.0"],"甚至":["41.0"],"大家都没有想过要建一个罗马出来":["41.0"],"迭代思维是一种我们与生俱来的本能思维":["41.1"],"在目标和方法都不是很明确的复杂情况下":["41.1"],"它要求我们一小步一小步地去尝试和改进":["41.1"],"直至成功":["41.1"],"当然":["41.1","41.3","44.2","172.0"],"在使用迭代思维之前":["41.1"],"我们先要摒弃成人之后才学会的急功近利的心理趋向":["41.1"],"保持平和的心态":["41.1"],"重新回到最自然的状态":["41.1"],"渐进地前进":["41.1"],"到这里":["41.1"],"关于迭代思维的介绍就结束了":["41.1"],"下一节":["41.1"],"我们将会介绍一种应用了迭代思维的工具":["41.1"],"pdca循环":["41.1"],"如果能够严格执行pdca循环":["41.2"],"那么从理论上":["41.2"],"当pdca循环的次数达到一定的数量":["41.2"],"我们一定可以趋于完美":["41.2"],"这正是迭代思维的精髓所在":["41.2"],"pdca的例子":["41.2"],"为了更好地理解pdca循环":["41.2"],"这里列举三个比较典型的例子":["41.2"],"因为这个pdca主要是来指导执行的":["41.3"],"所以这是一个执行式的pdca":["41.3"],"下面再举一个计划式pdca的例子":["41.3"],"中的其中一篇文章":["41.4"],"你现在看到的这篇文章":["41.4"],"它的写作过程对我来说就是在推进一个小的pdca循环":["41.4"],"这是一个执行式的pdca循环":["41.4"],"研究动作应该发生在c阶段":["41.5"],"为了达成我们的计划":["41.5"],"我们真的需要这么复杂的系统吗":["41.5"],"使用pdca的要点":["41.5"],"作为一切的开始":["41.6"],"p阶段非常非常非常的重要":["41.6"],"但是pdca不能解决所有的问题":["41.7"],"此时就需要另外一种迭代工具":["41.7"],"和灵活机动的应对能力":["41.8"],"重在":["41.8"],"人":["41.8"],"和":["41.8","44.4","50.1","68.1","97.57","98.4","100.1","121.0","129.7","141.8","152.6","156.7","156.13","156.26","173.13","177.8","178.1","206.9"],"公司":["41.8"],"的对抗":["41.8"],"在日常的工作和生活中":["41.8"],"我们可以交替使用pdca循环和ooda":["41.8"],"如果是管理需要长期执行的日常工作和生活":["41.8"],"那么pdca循环一定是首选":["41.8"],"如果在pdca的实际执行阶段":["41.8"],"我们发现自己所面对的是一个瞬息万变的环境":["41.8"],"则可以切换到ooda循环":["41.8"],"也是一件需要慢慢磨练和迭代的事情":["41.9"],"这本身就可以使用迭代思维来优化":["41.9"],"笃定地做":["41.10"],"忘我地做":["41.10"],"就是迭代思维":["41.10"],"时间管理":["42.0"],"同测试组织就各种测试需求进行紧密协作":["42.1"],"不只是填补一个职位":["42.2"],"汉族":["43.3"],"少数名族":["43.3"],"所属族":["43.3"],"白天和黑夜":["43.6"],"软和硬等等":["43.6"],"这时你可以试着加一个类别":["43.7"],"其他":["43.7"],"因为安徽人比较多":["43.11"],"以及从我的角度去评价以及建议":["43.13"],"zhuanlan":["43.14"],"p":["43.14","123.1","279.8"],"但是这个故障排查的过程不可谓不曲折":["44.1"],"给我留下的印象不可谓不深刻":["44.1"],"这么多年过去了":["44.1"],"在看过这么多的故障之后":["44.1"],"我深深意识到":["44.1"],"一个工程师若是没有防错思维和防错设计的加持":["44.1"],"想要走远真的很难":["44.1"],"废话不说":["44.1"],"故事开始":["44.1"],"这样的自检其实更合理一些":["44.2"],"复制一份数据":["44.2"],"我知道你肯定能想到了更优雅的防错方案":["44.2"],"若是的话":["44.2"],"欢迎在评论区里留言让我们知道":["44.2"],"可以看到":["44.2","49.2","102.1","111.3"],"这是一个典型的没有考虑防错设计的小错误导致大问题的例子":["44.2"],"如果我是面试官":["44.2"],"那么我一定会把这个案例作为一个考题来检查面试者的设计能力":["44.2"],"我的故事到此就结束了":["44.2"],"到了这里":["44.2"],"我想你已经对防错设计的重要性有一个初步的认识了":["44.2"],"不妨让我们聊一点深入的话题":["44.2"],"很多时候我们都是在前人已经设计好的产品":["44.3"],"规范":["44.3"],"上修修补补":["44.3"],"此时我们当然也可以使用防错思维和防错设计":["44.3"],"但是已有的设计已经在那里了":["44.3"],"其中难免存在着固有的设计缺陷":["44.3"],"这难免会让使用防错设计的成本增加不少":["44.3"],"不过这不是不使用防错设计的理由":["44.3"],"作为一名力争卓越的工程师":["44.3"],"一旦我们开始设计":["44.3"],"我们就得考虑这个设计被错误理解和错误使用的可能性":["44.3"],"并且想方设法避免这种可能性在我们的生活和工作中发生":["44.3"],"这就是防错思维":["44.3"],"而防错思维的具体应用":["44.3"],"就是防错设计":["44.3"],"在本文中二者含义相同":["44.4"],"清单革命":["44.5"],"一书":["44.5"],"这本书对checklist有详细的介绍":["44.5"],"通过上面的例子可以看到":["44.5"],"即便你没有完全意识到":["44.5"],"但是防错设计和防错思维在我们的生活中早已经无处不在":["44.5"],"如果你也遇到过类似的防错设计":["44.5"],"不妨在在评论区留个言让大家知道":["44.5"],"好了":["44.5","113.5"],"看了这么多别人的防错设计":["44.5"],"那么对于一名软件工程师来说":["44.5"],"他":["44.5"],"她该如何做防错设计呢":["44.5"],"在软件设计的四个层次中的任意一个层次上":["44.6"],"我们可以在事前":["44.6"],"事中":["44.6"],"事后三个环节上进行防错":["44.6"],"具体如下":["44.6"],"显然就不会出错":["44.7"],"我们管这个叫失败降级":["44.8"],"的问题能够在事中和事后快速发现和处理":["44.9"],"我们就认为这个产品已经比较健壮了":["44.9"],"金融科技的信息系统要求只会更高":["44.9"],"在理想状态下":["44.9"],"最好能够通过设计解决100":["44.9"],"的问题最好的防错":["44.9"],"毕竟":["44.9"],"最好的防错就是第一次就把事情做对":["44.9"],"不要一上来就和客户谈技术":["45.5"],"首先要深入了解新产品领域下客户的背景":["45.5"],"把自己放在客户的问题领域中":["45.5"],"竭尽所能帮助合作伙伴获得成功":["45.6"],"为了说明萌新和老手之间的这种巨大的差别":["46.1"],"不妨让我分享一个我自己的故事":["46.1"],"为了一劳永逸地解决问题":["46.2"],"不管是哪个具体领域的工程师":["46.2"],"都必须掌握根因思维":["46.2"],"但是":["46.2","84.4","205.16"],"知道是一回事":["46.2"],"应用又是另一回事":["46.2"],"那么根因思维该如何使用呢":["46.2"],"这个根因必然也是立场扭曲的产物":["46.3"],"无法为后续的改进提供指导":["46.3"],"第四":["46.3"],"一定要有改进措施并有所行动":["46.3"],"同复盘思维一样":["46.3"],"分析根因的目的很明确":["46.3"],"就是要让问题不再发生":["46.3"],"根因分析之后一定要有改进措施和实际的实施动作":["46.3"],"要能看到实际结果":["46.3"],"否则":["46.3"],"我们对根因分析做得再漂亮":["46.3"],"那都是纸上谈兵":["46.3"],"以上":["46.3","114.17"],"就是对根因分析法":["46.3"],"why分析法的所有介绍":["46.3"],"虽然本节只是简单介绍了5":["46.3"],"但是本节的内容已经足以让我们将5":["46.3"],"why分析法应用在我们的工作和生活当中":["46.3"],"原因":["46.4"],"和次要矛盾":["46.4"],"的主要方面":["46.4"],"至于如何寻找这些原因":["46.4"],"又如何做剔除和裁剪":["46.4"],"这除了需要大量的实验外":["46.4"],"还需要分析者有足够的耐心":["46.4"],"作者的能力有限":["46.4"],"也就只能写到这里了":["46.4"],"根因思维的完整路径应该是由果索因然后再由因推果":["46.5"],"经过这样的两轮思考":["46.5"],"我们才敢说我对这个问题的认识已经足够全面和深刻了":["46.5"],"往往才是我们遇到的问题里最大的根因":["46.6"],"那就是":["46.7","95.16"],"根因":["46.7"],"ip中被纳入到应用层中":["47.4"],"asp":["47.5"],"主要协议":["47.6"],"tcp":["47.6","51.2","113.6"],"udp":["47.6"],"arp":["47.7"],"rarp":["47.7"],"ospf":["47.7"],"ppp":["47.8"],"stp":["47.8"],"1时":["48.1"],"表示当前报文段是一个同意建立连接的应答报文":["48.1"],"fin":["48.1"],"该字段为一表示此报文段是一个释放连接的请求报文":["48.1"],"此时开始等待客户端发送数据":["48.3"],"syn":["48.6"],"包":["48.6"],"一般会重试五次":["48.6"],"在建立连接中可能会遇到":["48.6"],"flood":["48.6"],"攻击":["48.6","178.7"],"遇到这种情况你可以选择调低重试次数或者干脆在不能处理的情况下拒绝请求":["48.6"],"仍旧可以发送数据给":["48.9","50.16"],"包的发送":["48.10"],"如果确认应答因为网络问题一直没有到达":["48.11"],"那么会造成":["48.11"],"不能正常关闭":["48.11"],"就来继续学习相对高效的协议吧":["48.16"],"只能回复":["48.18"],"这样就会造成发送端重复发送数据的情况":["48.18"],"防止出现接收方带宽已满":["48.19"],"但是发送方还一直发送数据的情况":["48.19"],"链接":["48.20","96.7","195.4"],"所以有一个阈值限制":["48.22"],"当窗口大小大于阈值时就会启动拥塞避免算法":["48.22"],"启动拥塞避免算法":["48.23"],"这时发送端认为这个分段接收端已经顺利接收":["48.27"],"接下来会退出快恢复阶段":["48.27"],"完成三次握手":["49.1"],"握手过程中传送的包里不包含数据":["49.1"],"三次握手完毕后":["49.1"],"客户端与服务器才正式开始传送数据":["49.1"],"最长报文段寿命":["49.2"],"的时间后":["49.2"],"当客户端撤销相应的tcb后":["49.2"],"才进入closed状态":["49.2"],"服务器只要收到了客户端发出的确认":["49.2"],"立即进入closed状态":["49.2"],"同样":["49.2"],"撤销tcb后":["49.2"],"就结束了这次的tcp连接":["49.2"],"服务器结束tcp连接的时间要比客户端早一些":["49.2"],"实时性更好":["50.0"],"以标识对应层所用的通信协议":["50.1"],"接下去介绍tcp":["50.1"],"中有两个具有代表性的传输层协议":["50.1"],"报文头就传递给应用层":["50.4","51.1"],"不会任何拼接操作":["50.4","51.1"],"udp只会把想发的数据报文一股脑的丢给对方":["50.7"],"并不在意数据有无安全完整到达":["50.7"],"的至少二十字节要少得多":["50.8"],"在传输数据报文时是很高效的":["50.8"],"流就是指不间断的数据结构":["50.9"],"你可以把它想象成排水管中的水流":["50.9"],"从而产生错误":["50.13"],"将会被重传":["50.23"],"适用于要求可靠传输的应用":["50.28"],"例如文件传输":["50.28"],"邮件的发送与接收等":["50.29"],"ssh":["50.31"],"secure":["50.31"],"shell":["50.31","68.10"],"用于替代安全性差的telnet":["50.31"],"用于加密安全登陆用":["50.31"],"动态配置ip地址":["50.32"],"地址解析协议":["50.33"],"用于动态解析以太网硬件的地址":["50.33"],"可以选用tcp":["50.34"],"更加的轻便":["51.0"],"字段":["51.3","138.40"],"该字段用于发现头部信息和数据中的错误":["51.3"],"传输来的准确":["51.6"],"但是也能在很多实时性要求高的地方有所作为":["51.6"],"你不能重复利用这个数组中同样的元素":["52.1"],"对应的数组下标就是我们想要的答案":["52.4"],"的索引组合就是这道题的答案啦":["52.5"],"键值对存储我们可以用":["52.5"],"es6":["52.5","127.52","173.39","179.23","181.0"],"里的":["52.5"],"来做":["52.5"],"如果图省事":["52.5"],"直接用对象字面量来定义也没什么问题":["52.5"],"若没有对应差值":["52.6"],"则记录当前值":["52.6"],"来保存":["52.7"],"中的元素":["52.7"],"由于容器本身就是":["52.11"],"所以此时不必做任何额外的操作":["52.11"],"注意":["52.13","99.10","133.4"],"答案中不可以包含重复的三元组":["52.13"],"说明右侧的数偏大了":["52.15"],"右指针左移":["52.15"],"相加之和小于0":["52.15"],"说明左侧的数偏小了":["52.15"],"左指针右移":["52.15"],"若右指针元素重复":["52.16"],"返回结果数组":["52.16"],"ceil":["52.17"],"中":["53.3","69.10","110.2","122.10","138.23","204.2","205.4","206.9"],"null":["53.3","64.9","127.52","130.3","173.68","176.18","212.1","218.8","232.1","256.6","259.2","286.7","291.1","294.1"],"左":["53.6","53.9","174.44"],"right":["53.10","170.2"],"字符串匹配算法等":["54.2"],"this":["55.1","55.2","64.7","173.90","179.33","195.7"],"把结果放入原数组":["55.1"],"foreach":["55.1","55.2","64.24","214.2"],"i":["55.1","88.2","107.4","113.6","175.12","204.2","221.3","284.20","284.22","284.23","284.26","284.62","284.69"],"前一位置赋值为当前元素":["55.3"],"push":["56.4","59.1","68.10","88.2","100.9","119.10","218.4","232.1","232.2","236.2","279.8","286.72"],"的小写字母":["57.2"],"字符串的最大长度是50000":["57.2"],"这样一来":["57.3"],"删掉":["57.3"],"之后":["57.3","178.2"],"左右指针所指的内部区间是回文的":["57.3"],"外部区间也是回文的":["57.3"],"可以认为整个字符串就是一个回文字符串了":["57.3"],"默认返回":["57.4","173.28"],"你可以假设所有单词都是由小写字母":["57.6"],"组成的":["57.6"],"new":["57.7","64.7","140.0","173.2","174.20","227.1"],"regexp":["57.7","173.81"],"只要数组中有一个匹配正则表达式的字符串":["57.7"],"就返回true":["57.7"],"some":["57.7"],"item":["57.7","96.14","179.33","181.0","286.37"],"c":["59.1","175.8","188.0"],"同样提供了类似的语法":["60.0"],"h1":["60.0"],"em":["60.0","106.24"],"h2":["60.0","159.5","159.13"],"使用":["60.0","74.0","177.8","178.6"],"则是第一级标题":["60.0"],"字符则是第二级标题":["60.0"],"底线长度任意":["60.0"],"水平线":["60.0"],"thematic":["60.0"],"个空格的缩进及三或多个":["60.0"],"字符组成的行":["60.0"],"形成水平线":["60.0"],"hr":["60.0","177.10"],"最终的效果跟":["61.0"],"差不多":["61.0"],"接下来介绍下三种方案的具体实现":["61.0"],"方案中的代码都以":["61.0"],"vue2":["61.0","181.0"],"vue":["61.0","154.2","162.0","179.52","195.8","220.5"],"cli3":["61.0"],"搭建的":["61.0"],"项目为例":["61.0"],"因为是":["61.0"],"demo":["61.0","99.23","106.22","106.36","173.98"],"图表的一些细节就没有过多细致的调整了":["61.0"],"vwh09":["61.2"],"还是以":["61.3"],"作为宽高的":["61.3"],"就会自动适应不同分辨率的屏幕":["61.3"],"styles":["61.5"],"中使用":["61.5"],"template":["61.5","61.6","61.9","96.14","100.6","241.9"],"class":["61.5","61.6","61.9","97.13","156.7","179.23"],"box":["61.5","61.6","97.35","106.36"],"文件中使用":["61.6"],"div":["61.6","61.9","81.1","96.14","100.6","159.5","178.6","179.2","286.2"],"切换动态更新图表数据":["61.8"],"在更新数据时一定不要用":["61.8"],"dispose":["61.8"],"方法先将图表移除":["61.8"],"再重新绘制":["61.8"],"因为":["61.8"],"指令中挂载到的图表实例还是旧的":["61.8"],"就监听不到新的":["61.8"],"元素的":["61.8"],"更新数据只需要用":["61.8"],"setoption":["61.8"],"方法重新设置配置项即可":["61.8"],"调用":["61.9","173.52"],"chartsdom":["61.9"],"ref":["61.9","100.6","156.15","218.5","228.2","286.37"],"chart":["61.9"],"v":["61.9","88.2","96.14","113.6","114.6","180.0","195.7","265.0","279.8"],"resize":["61.9","97.35","152.20","176.2"],"03":["61.11","159.9","159.13"],"absolute":["61.12","61.13"],"top":["61.12","61.13"],"png":["61.13","64.17","64.18","64.21","64.22","67.8","68.7","68.10","89.6","99.3","99.22","102.1","152.3","154.19","159.5","159.9","159.13","162.3","175.10","190.2","190.4","263.3","275.1"],"接下来利用":["61.13"],"绝对定位":["61.13"],"将图表定位到中间位置":["61.13"],"css":["61.13","97.32","106.19","106.20","106.42","195.4"],"position":["61.13","100.8","241.6"],"具体可查大屏自适应终极解决方案":["61.14"],"rem03":["61.16"],"代码":["61.17","68.10","152.21","193.7"],"动态的计算":["61.17"],"html根元素的font":["61.17"],"屏幕变化后":["61.17","61.18"],"图表自动调整和图表字体":["61.17"],"间距":["61.17","61.18"],"位移等的自适应":["61.17"],"至此":["61.18","65.11","73.0","104.0"],"页面就已经可以实现":["61.18"],"自适应了":["61.18"],"第三点":["61.18"],"屏幕变化":["61.18"],"图表自适应":["61.18"],"图表自动调整字体":["61.18"],"位移等":["61.18"],"此处参考上面":["61.18"],"vm":["61.18","140.2","195.7"],"vh":["61.18","106.24"],"的实现方式即可":["61.18"],"在此就不重复赘述了":["61.18"],"数据大屏rem适配方案":["61.19"],"就是arguments的值":["62.5"],"computed为true表示":["62.6"],"false表示":["62.6"],"的注释就通过这三个属性":["62.9"],"visitor":["62.10"],"所以使用":["62.11"],"直接删除节点":["62.12","62.15"],"remove":["62.13"],"匹配上直接返回不进行操作":["62.14"],"如果没有前缀节点和后缀节点":["62.15"],"所以测试1存在后缀注释":["62.16"],"测试4存在前缀注释":["62.16"],"所以测试1和测试4没有被删除":["62.16"],"那么我们怎么判断呢":["62.16"],"trailreserve":["62.17"],"我们修改完进行测试":["62.17"],"发现测试1":["62.17"],"已经被删除":["62.17"],"belongcurrentline":["62.18"],"leadingreserve":["62.18"],"在一个肯定陈述句中":["63.0"],"将一个人比作一个猪":["63.0"],"显然不合适":["63.0"],"因此找出第二个错误":["63.0"],"在上面这个简单的例子中":["63.0"],"其实和ast的生成和应用就颇为相似":["63.0"],"ast是源代码的抽象语法结构的树状表现形式":["63.0"],"简单点就是一个深度嵌套对象":["63.0"],"这个对象能够描述我们书写代码的所有信息":["63.0"],"释义":["64.2"],"针对当前分支的访问就完成了":["64.4"],"接着会依次exit":["64.4"],"退出":["64.4"],"节点":["64.4","176.1","206.9"],"这个过程是由内向外的":["64.4"],"为了能够处理到":["64.4"],"exit":["64.4","86.8","214.0"],"访问器最终会做成这个样子":["64.4"],"容错处理":["64.7"],"如果我们什么都没有匹配到":["64.7"],"说明这个token不在我们的解析范围内":["64.7"],"throw":["64.7","140.5","189.0"],"typeerror":["64.7","127.10"],"dont":["64.7"],"know":["64.7"],"what":["64.7"],"character":["64.7","230.2"],"现在我们创建ast":["64.8"],"树的最根层就是program":["64.8"],"program":["64.8"],"然后我们通过调用walk遍历tokens将tokens内的对象":["64.8"],"转化为ast的节点":["64.8"],"完成ast的构建":["64.8"],"已经遍历到尽头了":["64.9"],"执行exit":["64.9"],"我们从ast开始进行节点遍历":["64.9"],"因为ast没有父节点所以传入null":["64.9"],"那么就使用":["64.10"],"将":["64.10","65.36","99.14","193.1"],"包裹":["64.10"],"因为js中顶层的":["64.10"],"是有效语句":["64.10"],"if":["64.10","148.4","175.4","175.5","180.0"],"core":["64.11","116.4","154.20"],"的编译器":["64.11"],"核心":["64.11"],"api":["64.11","99.10","151.5","156.1","177.2","177.13","195.3","195.6","195.7","204.3"],"都在这里面":["64.11"],"比如常见的":["64.11"],"并实现了插件功能":["64.11"],"先安装":["64.11"],"yarn":["64.11"],"d":["64.11","89.5","89.6","95.7","97.20","97.33","97.38","97.58","102.0","104.0","125.9","131.1","131.3","131.4","195.8","284.65","284.66"],"里面就包含了":["64.11"],"types等":["64.11"],"result":["64.12","64.22","100.8","115.0","287.1"],"打印结果":["64.13","162.3","167.4"],"符合预期":["64.13"],"是不是so":["64.13"],"easy":["64.13"],"targetsource":["64.14","64.17"],"plugins":["64.14","64.17","64.18","64.21","64.22","102.4","191.1"],"使用插件":["64.14","64.17","64.21"],"code":["64.14","64.17","64.18","64.21","64.22","100.4","115.0","127.50","154.20","166.8","226.1","275.2"],"opts":["64.15"],"输出文件的相对路径":["64.15"],"relativename":["64.15"],"relative":["64.15","153.11"],"dirname":["64.15"],"replace":["64.15","89.5","230.2"],"g":["64.15","80.3","230.2","279.8"],"兼容window":["64.15"],"模拟环境":["64.15"],"效果":["64.15","64.18","64.19","64.21","64.22","156.3","156.18"],"再也不怕找不到自己的":["64.15"],"transform":["64.17","64.22","92.0","101.3","241.9"],"运行效果":["64.17"],"image":["64.17","64.18","64.21","64.22","68.7","89.6","152.20","162.3","171.0","173.9","173.51","177.13","275.1","276.0","286.69"],"其实各种大大小小的规则":["64.17"],"都是基于此":["64.17"],"大同小异":["64.17"],"就是这么简单":["64.17"],"generateuid":["64.18"],"在当前作用域内生成一个新的uid":["64.18"],"并且不会和任何本地定义的变量冲突的标识符":["64.18"],"rename":["64.18"],"进行":["64.18"],"命名":["64.18"],"代码中的变量命名已经经过压缩":["64.18"],"导入声明importdefaultspecifier":["64.19"],"importdefaultspecifier":["64.19"],"local":["64.19"],"导入模块source":["64.19"],"stringliteral":["64.19"],"imported":["64.19"],"replacewithmultiple":["64.19"],"替换当前节点":["64.19"],"最终打包结果只有19kb了":["64.19"],"本节将从三种常见场景出发":["64.20"],"由易到难":["64.20"],"带大家吃透其中的原理":["64.20"],"typescript":["64.21","64.22","72.5","181.0"],"解析的参数":["64.21"],"这样才能识别ts语法":["64.21"],"parseropts":["64.22"],"第五步":["64.23"],"a的形参类型跟a的实参类型进行比较":["64.23"],"b的形参类型跟b的实参类型进行比较":["64.23"],"理清思路很简单是不是":["64.23"],"其实并不复杂":["64.23"],"最佳实践":["64.23","113.0"],"node":["64.24","95.32","286.61"],"增加更细节的使用场景分类":["65.1"],"对monorepo支持更加的友好":["65.1"],"srv":["65.10"],"runner和配置均已成功":["65.11"],"打开setting":["65.11"],"cicd页面可以看到如下提示":["65.11"],"在docker中我们也可以看到正在运行的runner":["65.11"],"如下":["65.11","196.9"],"暂时无法在飞书文档外展示此内容":["65.11"],"general":["65.12"],"pipelines中":["65.12"],"我们可以自定义设置ci设置文件的路径":["65.12"],"默认如下":["65.12"],"我们可以用":["65.16"],"进行注释":["65.16"],"file":["65.18"],"首先让我们先来介绍下关键字":["65.18"],"然后再看一份完整的配置demo进行详解":["65.18"],"script":["65.21","286.2"],"echo":["65.21"],"note":["65.23"],"中如果定义多个jobs":["65.23"],"这些jobs是并行执行的":["65.23"],"别的stage中的为依次执行":["65.23"],"failure":["65.26"],"在配置时只能存在一个":["65.28"],"否则会报错":["65.28"],"other":["65.29","66.3","107.4","148.0"],"cases":["65.29"],"week":["65.30"],"start":["65.30","67.3","114.23","114.27"],"6的版本后才支持":["65.32"],"所以有些公司的gitlab版本还是不支持":["65.32"],"stage的任务":["65.35"],"那么默认就会跳过":["65.35"],"按照成功处理":["65.35"],"job5可以按照如下方式触发":["65.35"],"pipeline界面点击run":["65.35"],"pipeline":["65.35"],"选择branch":["65.35"],"然后再点击run":["65.35"],"以下为输出结果":["65.35"],"copy":["65.36","216.2","222.4"],"package":["65.36","97.2","102.0"],"json":["65.36","97.2","102.0","115.0","126.5","134.4","205.4","254.11","275.2"],"lock":["65.36"],"registry":["65.36"],"https":["65.36","101.5","102.5","173.13","177.13","195.9"],"bnpm":["65.36"],"byted":["65.36"],"org":["65.36","87.32","102.5","117.1","127.40","191.1"],"加入":["65.36"],"app下":["65.36"],"build一下":["65.36"],"dist":["65.36","70.0","97.61","219.10"],"dir":["65.36","119.3"],"放入":["65.36"],"nginx":["65.36","114.32","275.2"],"nginx是一款轻量级的web服务器":["65.36"],"usr":["65.36"],"share":["65.36","113.5"],"耦合度没有jenkins低":["66.1"],"a":["66.3","67.3","89.13","103.17","129.6","133.5","173.95","195.7","195.8","204.2"],"different":["66.3","206.1"],"test2":["66.3"],"并行的":["66.4"],"前端叫做异步":["66.4"],"尽量减少人工的介入":["67.0"],"它可应用在包括开发分支在内的多个分支上":["67.1"],"让gitlab去执行自动化流程":["67.2"],"打包构建":["67.2"],"提交代码":["67.2"],"触发钩子执行自动化构建发布":["67.2"],"镜像名称":["67.3","68.3"],"常用docker指令操作":["67.3"],"name命名容器":["67.3"],"p映射端口比如8088":["67.3"],"v映射当前文件夹到镜像中的文件夹":["67.3"],"d后台运行容器":["67.3"],"ps":["67.3","67.8","113.6"],"查看容器":["67.3"],"images":["67.3"],"查看所有镜像":["67.3"],"rm":["67.3","117.1"],"容器id":["67.3"],"删除容器":["67.3"],"rmi":["67.3"],"镜像id":["67.3"],"删除镜像":["67.3"],"运行容器":["67.3"],"stop":["67.3"],"停止容器":["67.3"],"到这一步":["67.3"],"就先完成了docker":["67.3"],"nginx部署前端项目了":["67.3"],"接下来是配置自动化构建发布":["67.3"],"pub中的内容copy到authorized":["67.6"],"keys中":["67.6"],"做免密登录":["67.6"],"查看日志":["67.7"],"logs":["67.7"],"alpine":["67.8","114.32"],"latest":["67.8"],"如果您选择docker作为执行程序":["67.8"],"则会要求您为未在以下项目中定义一个的项目使用默认映像":["67.8"],"这里就输入alpine":["67.8"],"latest就行了":["67.8"],"到这一步服务器上就配置完成了":["67.8"],"想要看自己的gitlab":["67.8"],"runner启动没有":["67.8"],"可以输入docker":["67.8"],"a查看":["67.8"],"rav":["67.10"],"delete":["67.10","107.4","127.17","176.3","235.4","294.1"],"server":["67.10","141.4"],"path":["67.10","113.7","144.6"],"同步打包后的文件夹里的内容到nginx指定的静态资源文件夹":["67.10"],"上述为dev环境配置":["67.10"],"生产环境同理配置即可":["67.10"],"服务器公钥":["67.11"],"项目上线更为省心":["67.17"],"命令能看到":["68.1"],"client":["68.1","119.11"],"就启动成功了":["68.1"],"服务器本地目录":["68.3"],"容器内目录":["68.3"],"记得改默认密码":["68.4"],"这个默认密码文件在24小时后会自动删除":["68.4"],"重启方式":["68.6"],"目录挂载":["68.6"],"后面就是编写":["68.8"],"来提供给我们":["68.8"],"相应的配置":["68.8"],"它会按照我们编写的这个文件来执行相应的操作":["68.8"],"指定相应执行的":["68.10"],"命令":["68.10","74.10","114.29"],"之后流水线就会自动根据这个文件执行":["68.10"],"执行的情况可以在下图地方查看":["68.10"],"default":["68.12","81.1","89.13","96.1","102.0","102.4","138.39","153.5","153.6","153.7","153.11","154.12","154.16","154.17","156.2","156.3","156.5","156.9","156.10","156.14","156.17","156.20","156.21","156.23","156.24","159.2","159.5","159.9","159.13","166.8","215.2","221.1","231.1","283.11","283.12","285.2","286.13","295.1"],"var":["68.13","106.6","170.8","170.12","170.14","195.7"],"sock":["68.13"],"到此":["68.13"],"所有的流程都已经完成":["68.13"],"我们完成了代码提交后":["68.13"],"自动去执行打包编译":["68.13"],"部署到相应的容器的操作":["68.13"],"如果各位伙伴有什么问题可以联系我":["68.13"],"也可以评论区交流哦":["68.13"],"singlequote":["69.3"],"arrowparens":["69.3","95.13"],"avoid":["69.3","232.4"],"规范提交信息":["69.8"],"no":["69.9","69.10","212.1","222.4"],"edit":["69.9"],"这是一个规范配置":["69.9"],"标识采用什么规范来执行消息校验":["69.9"],"这个默认是angular的提交规范":["69.9"],"breaking":["69.10"],"非兼容性说明":["69.10"],"关联关闭的issue":["69.10"],"例如":["69.10","173.69"],"confirmcommit":["69.10"],"确定提交说明":["69.10"],"yes":["69.10","86.1"],"allowbreakingchanges":["69.10"],"特性":["69.10"],"limit":["69.10"],"subjectlimit":["69.10"],"将原来commit配置":["69.10"],"变更为自定义配置":["69.10"],"然后提交":["69.10"],"跑一遍测试用例":["69.13"],"部署到":["70.0"],"jamesives":["70.0","97.61"],"action":["70.0","72.0","97.61"],"releases":["70.0"],"v3":["70.0","115.0"],"access":["70.0","195.4","251.2"],"token":["70.0","100.8","195.2","195.4"],"secrets":["70.0"],"branch":["70.0","97.61","231.1"],"gh":["70.0"],"folder":["70.0","97.61"],"docs":["70.0","127.40","195.9"],"vuepress":["70.0"],"项目下":["71.3"],"微前端":["71.3","207.11"],"微服务是另一种解决方案":["71.3"],"在建立父子关系前":["71.5"],"没有差异的":["71.5"],"位于的文件夹路径":["71.6"],"因为父子信息不存在这里":["71.7"],"只存在爸爸那里":["71.7"],"去更新它":["71.12"],"提交的都是submodule的变更":["71.13"],"你会在主项目仓库看到diff":["71.16"],"你可能需要提交主项目更新":["71.16"],"跟主仓库记录的保持一致时":["71.19"],"也可以使用该方法":["71.19"],"一些其它团队的submodule我们没必要安装":["71.21"],"就不必执行init和update了":["71.21"],"submodule下载的路径":["71.25"],"可以运行一个自定义的脚本或者运行一个":["72.0"],"动作":["72.0","72.5"],"所谓动作":["72.0"],"是一个可复用的扩展":["72.0"],"用于简化你的工作流":["72.0"],"查看":["72.1"],"可复用工作流":["72.1"],"触发工作流的事件":["72.2"],"当一个任务需要另外一个任务的时候":["72.3"],"它会等到依赖的任务完成再执行":["72.3"],"市场找已经实现好的动作":["72.4"],"static":["72.5","97.13"],"list":["72.5","97.35","102.5","159.13"],"force":["72.5","86.1"],"debug":["72.5"],"在这个例子里":["72.5"],"我们定义了一个名为":["72.5"],"的工作流":["72.5"],"指定代码提交到分支":["72.5"],"才触发工作流":["72.5"],"任务下只有一个名为":["72.5"],"运行在":["72.5"],"具体的步骤下":["72.5"],"也只有一个名为":["72.5"],"的步骤":["72.5"],"使用了":["72.5","178.7"],"而":["72.5","87.12","106.41","109.1","113.2","178.6","193.4","205.15","206.9"],"里的内容则是该动作需要的一些参数":["72.5"],"拷贝目录和文件":["73.0"],"cp":["73.0"],"r":["73.0"],"此时我们再运行":["73.0"],"代码提交到":["73.0"],"就可以在仓库的":["73.0"],"中看到运行记录":["73.0"],"执行时间大概一分钟左右":["73.0"],"的代码就会自动同步":["73.0"],"我们实现了":["73.0"],"与":["73.0","206.5"],"代码仓库的同步":["73.0"],"自带的":["74.0"],"cmd":["74.0","114.23","275.2"],"可能会遇到比较多的问题":["74.0"],"的具体步骤如下":["74.1"],"并且参数必须严格是":["74.3"],"source":["74.3","126.2","154.7","154.8","154.10","154.16","154.17","177.9","256.8"],"destination":["74.3"],"options":["74.3","97.26","100.9","102.5","107.4"],"的格式":["74.3"],"即配置项放在最后面":["74.3"],"把":["74.3"],"从":["74.3","205.4"],"挪到":["74.3"],"里面去执行":["74.3"],"规避":["74.3"],"没归档完毕覆盖率报告就被清空的问题":["74.3"],"postcover":["74.6"],"run":["74.6","96.6","102.0","113.5","224.0"],"parallel":["74.6","76.3","154.10","154.17"],"的跨平台兼容":["74.7"],"具体步骤如下":["74.7"],"下使用大多数":["74.10"],"按先后顺序串起来即可":["75.1"],"你就没办法直接结束启动到后台的进程":["75.3"],"open":["76.3","154.4","154.5","154.7","154.8","154.10","154.16","154.17","296.2"],"for":["76.3","96.14","113.8","138.21","148.2","158.3","164.3","180.0","265.0"],"preview":["76.3"],"cover":["76.3","195.4"],"serve":["76.3"],"zshrc":["77.1"],"开始安装之前自动删除node":["78.0"],"modules文件夹":["78.0"],"不会更改package":["78.0"],"json和package":["78.0"],"执行":["79.0","113.6","162.0","179.42","179.50","205.20","246.3","258.8"],"中的信息生成依赖树":["80.2"],"具体是怎么生成依赖树的呢":["80.2"],"下面会详细介绍":["80.2"],"参数即可":["80.3"],"中的内容一致但是实际上安装依赖的版本不一致而造成":["80.4"],"bug":["80.4","106.41","115.0","206.2"],"出现的情况":["80.4"],"操作流程":["81.0"],"render":["81.1","176.18","178.2","236.1","286.37"],"xbutton":["81.1","81.6"],"classname":["81.1","159.5"],"测试":["81.1"],"根目录会生成一个":["81.2"],"目录":["81.2","97.4","176.19"],"这时打包工作已经完成":["81.2"],"不过还有几个坑我们后面来填":["81.2"],"require":["81.3","227.1"],"umd":["81.3"],"cjs":["81.3","87.13"],"files":["81.3","97.22"],"经过上面操作我们的准备工作已经完成":["81.3"],"完成以上操作后一个":["81.4"],"包就算是发布成功了":["81.4"],"但是还没完":["81.4"],"测试图片":["81.5"],"使用问题":["81.5"],"类型问题":["81.5"],"onclick":["81.6","89.13"],"void":["81.6","177.3","236.2"],"module":["81.6","154.18","177.9","177.13","184.17"],"xz":["81.6"],"button":["81.6","89.13"],"props":["81.6","231.4"],"jsx":["81.6"],"element":["81.6","127.33","214.0","219.3"],"然后重新打包即可":["81.6"],"最后在使用这个包的项目中重新下载一次这个包就不会出现类型问题和样式问题了":["81.7"],"使用到其他项目里面":["82.0"],"而不用做任何修改":["82.0"],"删除时运行需要的命令":["83.2"],"t":["83.4"],"子命令":["83.5"],"分隔符":["84.1"],"意指要给":["84.1"],"实际指向的命令传递额外的参数":["84.1"],"只会列出最后那个":["84.3"],"scripts":["84.4","102.0"],"声明阅读起来不那么整齐美观":["84.4"],"简单举例如下":["84.5"],"这就是没有消息是最好的消息的由来":["84.7"],"哈哈":["84.7"],"默认不会覆盖修改里面已经存在的信息":["86.1"],"可以使用":["86.1","178.4"],"f":["86.1","101.5","279.8"],"意指":["86.1"],"或者使用":["86.1"],"告诉":["86.1"],"直接跳过参数问答环节":["86.1"],"快速生成":["86.1"],"version":["86.2","154.18","195.8","219.6"],"环境下可能略有不同":["86.3"],"稍后再讲":["86.3"],"如果不带任何参数执行":["86.3"],"它会列出可执行的所有命令":["86.3"],"single":["86.7","206.8"],"semi":["86.7"],"always":["86.7","95.13","195.8"],"系统配置":["87.0"],"第三方配置":["87.0"],"interfaces":["87.5"],"官网上更好地检索到此项目":["87.6"],"增加曝光率":["87.6"],"issues":["87.8","97.49"],"src":["87.12","162.3","175.6","206.9"],"等目录下的文件不需要跟随发布":["87.12"],"脚本的后缀名都改成":["87.13"],"不过两种模块规范最好不要混用":["87.13"],"会产生异常报错":["87.13"],"此时会按照":["87.16"],"的顺序来查找入口文件":["87.16"],"style":["87.17","87.42","89.13"],"用户引入时只需":["87.17"],"通常配置为":["87.18"],"里的包":["87.28"],"或者一个被修改过的第三方包时":["87.28"],"打包依赖会比普通依赖更好用":["87.28"],"是":["87.39","254.4"],"的最新版本":["87.39"],"versions":["87.41"],"es":["87.42"],"lib":["87.42"],"时触发":["87.43"],"可以把":["87.43"],"放到这些钩子方法中":["87.43"],"tags":["88.2","119.10"],"else":["88.2","141.4","169.4","173.56","174.29","179.61","219.3","219.10","236.1","250.2","287.6"],"undefined的情况":["88.2"],"yellow":["88.2"],"can":["88.2","148.4","218.5","236.1","252.3"],"see":["88.2","148.4"],"the":["88.2","221.1","223.2","255.0","260.2"],"first":["88.2","220.2"],"leaf":["88.2"],"falling":["88.2"],"是一个树的从主干到节点的数据流向":["89.1"],"了解了这个之后":["89.4"],"我们需要做菜单页面权限的时候就需要去考虑两块":["89.4"],"并且是对应的":["89.4"],"这里之所以用页面跳转":["89.5"],"因为路由的重新设置需要页面重新刷新才可以生效":["89.5"],"getcaptcha":["89.5"],"logout":["89.5"],"false":["89.5","89.6","125.7","125.8","127.14","127.25","147.4","178.2","184.22","195.7","206.2","212.1","214.1","223.2","228.3","229.0","240.1","242.1","248.0","255.0","283.1"],"currentauthority":["89.5"],"guest":["89.5"],"pathname":["89.5"],"search":["89.5"],"reducers":["89.5"],"添加service":["89.5"],"request":["89.5","103.12"],"查询菜单权限":["89.5"],"async":["89.5","97.13","220.2"],"codes":["89.5"],"rescodes":["89.5"],"查询页面按钮权限":["89.5"],"getauthority":["89.5"],"添加authorizedbutton":["89.6"],"readme文件github":["89.6"],"com":["89.6","96.11","101.5","116.3","146.3","162.3","177.13","195.7"],"rodchen":["89.6"],"kin":["89.6"],"按钮权限扩展":["89.6"],"链接权限控制":["89.6"],"背景":["89.6","171.0"],"页面上有需要控制跳转链接的权限":["89.6"],"有权限则可以跳转":["89.6"],"没有权限则不能跳转":["89.6"],"pnga":["89.6"],"公共model添加新的state":["89.6"],"codeauthorityobject":["89.6"],"通过redux":["89.6"],"devtool":["89.6","154.7","154.8","154.10","154.16","154.17"],"查看到codeauthorityobject的状态值为":["89.6"],"code值":["89.6"],"value的值为true":["89.6"],"true代表":["89.6"],"有权限":["89.6"],"false代表无权限":["89.6"],"主要用于开发人员自己做相关处理":["89.6"],"需要控制的按钮code":["89.6"],"通过其他方式扩展进行code计算":["89.6"],"发送请求获取权限":["89.6"],"获取数据进行数据控制":["89.6"],"按钮数据权限":["89.6"],"demo分支":["89.6"],"github":["89.6","95.20","97.1","97.59","195.7","204.1"],"demo代码":["89.6"],"按钮对他来说是不可见的":["89.8"],"可审核":["89.9"],"可完结":["89.9"],"span":["89.13"],"inline":["89.13"],"export":["89.13","96.1","102.0","102.4","112.3","153.5","153.6","153.7","153.11","156.2","156.3","156.10","156.14","156.17","156.21","156.23","156.24","159.2","159.5","159.9","159.13","166.5","166.6","228.1","283.11","283.12"],"调用方式":["89.13"],"authoriedbutton":["89.13"],"record":["89.13"],"handleupdatemodalvisible":["89.13"],"getnotduplicatearraybyid":["89.13"],"selectedrows":["89.13"],"decoration":["90.0","97.35"],"hover":["90.0"],"allowed":["91.0"],"最小高度":["91.0"],"min":["91.0"],"solid":["92.0","106.21"],"scaley":["92.0","101.3"],"图标样式":["92.0"],"iconstyle":["92.0"],"include":["92.0"],"pseudoclasscontent":["92.0"],"伪类展示内容":["92.0"],"前端处理":["93.4"],"其他的业务字段文本全部由应用接口处理":["93.4"],"按照你喜欢的来就行":["95.1"],"工程化":["95.3"],"i18n":["95.8"],"ally":["95.8"],"国际化":["95.8","95.42"],"parser":["95.9","97.20"],"我们还需要一个触发git":["95.16"],"commit验证的入口":["95.16"],"git":["95.16","97.50","97.52"],"hook":["95.16"],"commit":["95.16","206.14","208.7"],"msg":["95.16"],"阶段出发commitlint的命令即可":["95.16"],"我们可以手动添加githook":["95.16"],"也可以配置自动添加":["95.16"],"这些与路径相关的字段":["95.20"],"esbuild":["95.20"],"io":["95.20"],"content":["95.20","121.0","169.3"],"typ":["95.20"],"路径映射":["95.20"],"vite配置":["95.20"],"ssr配置":["95.21"],"路由":["95.22"],"使用vite":["95.22"],"ssr内置路由功能即可":["95.22"],"ssr客户端路由跟react":["95.22"],"router类似":["95.22"],"内部根据historyapi实现了一套路由跳转的逻辑":["95.22"],"window":["95.23","99.14","152.6","168.26","176.2","179.41","296.2"],"location":["95.23"],"origin":["95.23","119.10","126.2","171.0","179.51"],"跨域代理":["95.23"],"vite自带了跨域代理功能":["95.23"],"但是只在开发期间生效":["95.23"],"如果我们希望测试或正式环境代理的话":["95.23"],"配置":["95.23","97.25","177.9"],"http":["95.23","97.11","138.31","138.39","139.4","162.3","173.13","275.2"],"proxy":["95.23","138.31","139.4","180.2"],"middleware":["95.23"],"变体":["95.25"],"告诉tailwind后面紧接的是长度单位":["95.25"],"screens":["95.26"],"639px":["95.28"],"最后引入autoprefix":["95.29"],"modules":["95.32","95.33","97.36"],"antd":["95.32","95.33"],"autoprefixer":["95.32","95.33"],"会被转化":["95.36"],"首先准备两套css变量":["95.37"],"colorprimary":["95.40"],"primary":["95.40"],"这样我们就可以这样写tailwind了":["95.40"],"antd组件会有明显的颜色闪动":["95.42"],"我们没有在网页刚加载时设置html的class":["95.42"],"这些问题说起来比较复杂":["95.42"],"暂时跳过哈":["95.42"],"有兴趣可以看仓库":["95.42"],"在用户增长缓慢的今天":["95.42"],"如果我们跳出破圈去外面看看":["95.42"],"或许有新的机会":["95.42"],"国际化就是为了更多新的机会":["95.42"],"我们需要考虑三个国际化":["95.42"],"文本国际化":["95.42"],"antd组件国际化":["95.42"],"dayjs国际化":["95.42"],"pagecontext":["95.45","95.46"],"renderpage":["95.45"],"pagetype":["95.45","95.46"],"此时服务端就能根据":["95.45"],"获取到客户端语言进行相应处理了":["95.45"],"createapp":["95.46","96.1"],"locale":["95.46"],"获取客户端i18n实例":["95.46"],"其中包含语言资源":["95.46"],"changelanguage":["95.46"],"layout":["95.46","179.37"],"page":["95.46"],"pageprops":["95.46"],"key":["95.47","96.14","156.14","159.2","159.5","159.9","159.13","195.4","286.37","286.38","286.72"],"项目地址":["95.49"],"github仓库地址":["95.49"],"vercel在线地址":["95.49"],"比较慢":["95.49"],"请耐心":["95.49"],"然后":["96.1"],"我们在main":["96.1"],"ts文件中引入vue":["96.1"],"如下所示":["96.1"],"mount":["96.1","96.6"],"的组件库":["96.2"],"可以帮助开发者快速的开发网站":["96.2"],"如果你使用过element":["96.2"],"ui":["96.2","115.0","179.36"],"那么可以快速的过渡到element":["96.2"],"除了element":["96.2"],"支持vue":["96.2"],"的ui框架还有很多":["96.2"],"在项目的根目录下安装element":["96.2"],"命令如下":["96.2"],"config":["96.4","102.0","154.18","204.1"],"globalproperties":["96.4"],"option":["96.4","181.0"],"store":["96.5"],"mixins":["96.5"],"其中":["96.5","133.7","156.6","275.2"],"import是一个可以按需引入样式的库":["96.5"],"集成":["96.5","97.2","97.11"],"tailwindcss":["96.5"],"您已经完成了所有步骤":["96.6"],"现在":["96.6","99.10","181.0"],"当您运行":["96.6"],"dev":["96.6","102.0","206.1","214.3","215.2","243.2","260.2"],"就可以在您的":["96.6"],"and":["96.6","218.4","218.5","232.2","251.2"],"vite":["96.6"],"项目中使用了":["96.6"],"集成mock":["96.6"],"颜色等":["96.7"],"tojsonschema":["96.10"],"一个工具库mock":["96.10"],"random":["96.10"],"其中我们经常使用到的就是mock":["96.10"],"和mock":["96.10"],"nuysoft":["96.11"],"moc":["96.11"],"success":["96.12","199.4"],"res":["96.12","103.8","132.2","132.3","221.1"],"cname":["96.13"],"更多mock":["96.13"],"random工具库提供的数据":["96.13"],"显示数据":["96.14"],"index":["96.14","97.2","102.0","127.39","140.5","174.64","179.3","243.1"],"users":["96.14"],"commitlint":["97.1"],"提交规范":["97.1"],"actions":["97.1"],"自动部署":["97.1"],"工具函数目录":["97.2"],"views":["97.2"],"页面组件目录":["97.2"],"main":["97.2","148.0"],"tests":["97.2"],"单元测试目录":["97.2"],"jsconfig":["97.2"],"javascript":["97.2","123.1","175.16","179.10","217.0"],"路由工具":["97.2"],"根据路由配置的实际情况":["97.4"],"需要在":["97.4"],"下创建":["97.4"],"用来存储页面组件":["97.4"],"pinia":["97.5"],"全局状态管理工具":["97.5"],"开发中需要将不同功能所对应的状态":["97.7"],"拆分到不同的":["97.7"],"好处如同路由模块一样":["97.7"],"tdesign":["97.8"],"next":["97.8","216.2","216.3","216.4","231.1"],"组件库":["97.8"],"axios":["97.11","166.7"],"工具":["97.11","97.41","152.13"],"登录":["97.13"],"username":["97.13","113.6","175.4"],"用户名":["97.13"],"password":["97.13","175.4"],"密码":["97.13"],"returns":["97.13"],"login":["97.13","113.6"],"把每个业务模型独立成一个":["97.13"],"声明一个类通过其属性和方法来实现这个模型相关的数据获取":["97.13"],"这样可以大大提升代码的可读性与可维护性":["97.13"],"不需要额外配置":["97.14"],"math":["97.17","206.15"],"javascriptenabled":["97.17"],"单元测试":["97.18"],"自动部署等":["97.18"],"让其更完善":["97.18"],"更健壮":["97.18"],"是针对":["97.19"],"escript":["97.19"],"的一款代码检测工具":["97.19"],"它可以检测项目中编写不规范的代码":["97.19"],"如果写出不符合规范的代码会被警告":["97.19"],"由此我们就可以借助于":["97.19"],"强大的功能来统一团队的编码规范":["97.19"],"则不用额外安装插件":["97.21","97.34"],"强制剩余和扩展运算符及其表达式之间有空格":["97.22"],"rest":["97.22","127.1"],"spread":["97.22","127.1"],"声明那些声明后不再被修改的变量":["97.22"],"强制箭头函数的箭头前后使用一致的空格":["97.22"],"overrides":["97.22"],"要求组件名称总是多个单词":["97.22"],"multi":["97.22"],"component":["97.22","195.4","241.9"],"names":["97.22","113.6"],"configuring":["97.22"],"等语言":["97.23"],"基本上前端能用到的文件格式它都可以搞定":["97.23"],"是当下最流行的代码格式化工具":["97.23"],"中每个属性占一行":["97.26"],"singleattributeperline":["97.26"],"关于更多配置项信息":["97.26"],"请前往":["97.26"],"官网查看":["97.26"],"ico":["97.28"],"ignore":["97.28","231.1"],"最后形成优先级":["97.30"],"配置规则":["97.30"],"先进的":["97.32"],"代码检查器":["97.32"],"linter":["97.32"],"可以帮助你规避":["97.32"],"代码中的错误并保持一致的编码风格":["97.32"],"repeat":["97.35"],"clip":["97.35","171.0"],"filter":["97.35","170.11","177.13","214.1","241.1","241.10","286.33"],"outline":["97.35"],"visibility":["97.35"],"transition":["97.35","206.8","216.2"],"standard":["97.39","107.4"],"recommended":["97.39"],"规则校验":["97.40"],"则禁止提交":["97.40"],"实现这一功能":["97.40"],"需要借助":["97.40","173.51"],"可能会造成大量文件出现":["97.41"],"错误":["97.41"],"显然这不是我们想要的结果":["97.41"],"所以只需要用":["97.41"],"修复此次写的代码":["97.41"],"而不去影响其他的代码":["97.41"],"此时需要借助":["97.41"],"lint":["97.41","115.0"],"staged":["97.41"],"而不会影响到其他文件":["97.42"],"md":["97.44"],"组成":["97.46"],"用动词开头":["97.47"],"第一人称现在时表述":["97.47"],"代替":["97.47"],"changed":["97.47"],"或":["97.47","173.93","177.11","178.3","186.3"],"changes":["97.47"],"第一个字母小写":["97.47"],"结尾不加句号":["97.47"],"或一系列":["97.49"],"cz":["97.50"],"实现规范提交":["97.50"],"一款工程性更强":["97.50"],"轻量级":["97.50"],"高度自定义":["97.50"],"标准输出格式的":["97.50"],"commitizen":["97.50"],"适配器":["97.50"],"官方网站":["97.50"],"conventional":["97.57"],"cli":["97.57"],"工具来实现":["97.57"],"本项目完整代码托管在":["97.59"],"仓库":["97.59","114.3","177.14"],"欢迎点亮小星星":["97.59"],"入门教程":["97.60"],"v4":["97.61"],"部署打包目录":["97.61"],"密钥名":["97.61"],"分支":["97.61"],"通过此链接":["97.61"],"elanyoung":["97.61"],"即可访问本项目":["97.61"],"总结下来":["98.1"],"数据埋点其实要考虑的就是":["98.1"],"用户行为":["98.1"],"错误警告":["98.1"],"页面性能":["98.1"],"三个核心方面":["98.1"],"而点击按钮次数就属于是":["98.2"],"互动式触发埋点":["98.2"],"便于去了解这个功能按钮的使用情况":["98.2"],"react":["98.3","154.2","166.7","206.2","206.11"],"组件时发生的错误":["98.3"],"ttfb":["98.4","99.10"],"指的是浏览器开始收到服务器响应数据的时间":["98.4"],"后台处理时间":["98.4"],"重定向时间":["98.4"],"是反映服务端响应速度的重要指标":["98.4"],"时间如果超过":["98.4"],"500ms":["98.4"],"用户在打开网页的时就会感觉到明显的等待":["98.4"],"理解了":["98.4"],"为什么要做前端数据埋点":["98.4"],"前端数据埋点所需要统计数据的方方面面":["98.4"],"接下来我们就需要设计一个自己的":["98.4"],"前端数据埋点":["98.4"],"sdk":["98.4"],"当前应用唯一标识":["98.6"],"baseurl":["98.6"],"数据发送的地址":["98.6"],"用户行为上报":["98.7"],"actionreport":["98.7"],"网络状况上报":["98.7"],"networkreport":["98.7"],"错误警告上报":["98.7"],"errorreport":["98.7"],"上报用户行为":["98.7","99.11"],"中主要用于计算用户停留在页面上的时间":["98.8"],"timeonpage":["98.8"],"刷新任务队列":["98.8"],"首次输入延迟时间":["98.9"],"首次内容渲染时间":["98.9"],"首次最大内容渲染时间":["98.9"],"首个字节到达时间":["98.9"],"获取得到的数据大致如下":["98.9"],"上报错误警告":["98.9"],"something":["98.13"],"went":["98.13"],"wrong":["98.13"],"children":["98.13","214.2","252.2"],"使用错误边界组件":["98.13"],"mywidget":["98.13"],"定位源码":["99.0"],"播放录屏":["99.0"],"记录用户行为":["99.0"],"所以监控平台只把报错前10s的视频保存下来":["99.2"],"单次录屏时长也可以自定义":["99.2"],"也可以提升页面的打开速度":["99.3"],"设计思路":["99.3"],"一个完整的前端监控平台包括三个部分":["99.3"],"数据采集与上报":["99.3","99.17"],"数据分析和存储":["99.3"],"数据展示":["99.3"],"system":["99.3","116.2"],"代码运行错误":["99.5"],"语法错误等":["99.5"],"异步错误等":["99.5"],"静态资源加载错误":["99.5"],"接口请求报错":["99.5"],"可以捕获promise中的错误":["99.6"],"preventdefault阻止传播":["99.6"],"不会在控制台打印":["99.6"],"preventdefault":["99.6"],"来捕获常规代码的报错":["99.7"],"被捕获的错误会通过":["99.7"],"输出而避免应用崩溃":["99.7"],"可以在":["99.7","99.8","99.14","102.0","115.0"],"中将捕获的错误上报":["99.7","99.8"],"handleerror方法用来处理错误并上报":["99.7","99.8"],"handleerror":["99.7","99.8"],"同vue项目的处理类似":["99.8"],"react项目中":["99.8"],"绕过":["99.9"],"将错误抛出":["99.9"],"load":["99.10"],"事件触发的时间":["99.10"],"loadeventend":["99.10","152.9"],"时间结束时的时间":["99.10"],"后来":["99.10"],"被废弃":["99.10"],"通过":["99.10","106.22","113.5","147.5","148.1","178.3","206.1","276.0"],"performanceobserver":["99.10"],"来获取":["99.10"],"旧的":["99.10"],"返回的是一个":["99.10"],"unix":["99.10"],"类型的绝对时间":["99.10"],"和用户的系统时间相关":["99.10"],"分析的时候需要再次计算":["99.10"],"而新的":["99.10"],"返回的是一个相对时间":["99.10"],"可以直接用来分析":["99.10"],"开发团队提供了":["99.10"],"vitals":["99.10"],"库":["99.10","123.1"],"方便来计算各性能数据":["99.10"],"不支持safari浏览器":["99.10"],"关于":["99.10","133.6"],"fp":["99.10"],"fcp":["99.10"],"lcp":["99.10"],"cls":["99.10"],"fid":["99.10"],"等性能指标的含义和计算方式":["99.10"],"我在":["99.10"],"历时8个月":["99.10"],"10万字前端知识体系总结":["99.10"],"工程化篇":["99.10"],"中有详细的讲解":["99.10"],"这里不再赘述":["99.10","113.4"],"用户行为数据采集":["99.10"],"用户行为包括":["99.10"],"页面路由变化":["99.10"],"鼠标点击":["99.10"],"资源加载":["99.10"],"接口调用":["99.10"],"代码报错等行为":["99.10"],"1668760485550":["99.11"],"reportdata":["99.11","99.13"],"uuid":["99.11"],"a6481683":["99.11"],"6d2e":["99.11"],"4bd8":["99.11"],"bba1":["99.11"],"64819d8cce8c":["99.11"],"getstack":["99.11"],"original":["99.12"],"wrapped":["99.12"],"typeof":["99.12"],"上报":["99.13"],"一个真实的页面中":["99.14"],"资源加载大多数是逐步进行的":["99.14"],"有些资源本身就做了延迟加载":["99.14"],"有些是需要用户发生交互后才会去请求一些资源":["99.14"],"如果我们只关注首页资源":["99.14"],"onload":["99.14","152.6","152.9","175.4"],"事件中去收集":["99.14"],"如果要收集所有的资源":["99.14"],"需要通过定时器反复地去收集":["99.14"],"并且在一轮收集结束后":["99.14"],"通过调用":["99.14"],"clearresourcetimings":["99.14"],"里的信息清空":["99.14"],"避免在下一轮收集时取到重复的资源":["99.14"],"个性化指标":["99.14"],"entrytypes":["99.15"],"longtask":["99.15"],"得出首屏的加载时间":["99.17"],"监控sdk":["99.17"],"监控sdk的作用":["99.17"],"install":["99.23","102.0"],"jpg":["99.23","152.8","162.2"],"仓库地址":["99.23"],"监控后台":["99.23"],"map":["100.0","154.7","154.8","154.10","154.16","154.17","156.14","159.2","159.5","159.9","159.13","173.43","177.9","195.4","265.0","286.37"],"的文件":["100.0"],"文件里包含了原始代码及其映射信息":["100.0"],"可以利用它反解出报错信息的源码":["100.0"],"gaac":["100.1"],"aacb":["100.1"],"caaa":["100.1"],"是关键字段":["100.1"],"下文的还原示例中将用到":["100.1"],"给它一个文件位置来查询有关原始文件位置的信息":["100.2"],"输入报错发生的行和列":["100.2"],"可以得到源码对应原始文件名":["100.2"],"从源文件的":["100.2"],"字段中":["100.2"],"获取对应的源码信息":["100.2"],"接下来的重点就变为":["100.2"],"如何获取报错发生的原始文件名":["100.2"],"取stackframe数组中的第一个元素":["100.3"],"let":["100.3","109.6","134.3","162.3","176.6"],"获取对应的原始文件名":["100.3"],"并上报":["100.3"],"最终拿到的源码":["100.4"],"监控通过":["100.5"],"rrweb":["100.5"],"提供了前端录屏的功能":["100.5"],"player":["100.6"],"的同时":["100.7"],"根据序列化后的节点数据构建出实际的":["100.7"],"可以监听的用户行为包括":["100.7"],"鼠标移动":["100.7"],"鼠标交互":["100.7"],"页面滚动":["100.7"],"视窗变化":["100.7"],"用户输入等":["100.7"],"通过添加相应的监听事件来实现":["100.7"],"unzipstr":["100.8"],"decode":["100.8","152.20"],"对象或数组进行json转换":["100.8"],"try":["100.8"],"parse":["100.8","178.7"],"catch":["100.8","127.54","166.3","286.53"],"error":["100.8","115.0","127.51","140.5","166.3","173.56","189.0","206.1","206.15","286.51","286.53","286.54"],"unexpected":["100.8"],"o":["100.8","125.9","175.12"],"at":["100.8","126.5","127.25"],"如果没有转换成功":["100.8"],"代表值为基本数据":["100.8"],"直接赋值":["100.8"],"recordcanvas":["100.9"],"默认每10s重新制作快照":["100.9"],"checkouteverynms":["100.9"],"recordscreentime":["100.9"],"放大":["101.3"],"的意思":["101.3"],"scalex":["101.3"],"x":["101.3","179.12","181.0","284.46"],"沿x轴方向缩放":["101.3"],"y":["101.3"],"沿y轴方向缩放":["101.3"],"scale":["101.3","179.9"],"同时沿x轴和y轴缩放":["101.3"],"img2":["101.5","156.2"],"baidu":["101.5"],"it":["101.5","148.4","195.8","206.16","226.1","235.4","252.3","256.4"],"u":["101.5"],"fm":["101.5"],"fmt":["101.5"],"jpeg":["101.5"],"w":["101.5","230.2"],"h":["101.5","195.7","279.8"],"alt":["101.5","150.12"],"抛开脚手架工具":["102.0"],"使用起来也非常的简单":["102.0"],"直接在项目中安装":["102.0"],"给个配置就可以了":["102.0"],"当然不给也可以":["102.0"],"会使用内置的默认配置":["102.0"],"npm":["102.0","114.27","195.4"],"defineconfig":["102.0","102.5"],"为了方便使用":["102.0"],"添加启动和打包命令":["102.0"],"build":["102.0","113.5","114.8","193.9","252.6"],"然后在根目录下新建一个":["102.0"],"项目就跑起来了":["102.0"],"200px":["102.1"],"user":["102.1","113.7","166.9","195.8","239.3"],"select":["102.1"],"打开浏览器":["102.1"],"已经帮我们处理好了":["102.1"],"65d5424bcd65769abee4f8bd790424e":["102.1"],"整体来说":["102.1"],"还是非常实用的":["102.1"],"可以帮助我们处理各种各样的":["102.1"],"问题":["102.1"],"assetsinlinelimit":["102.5"],"修改图片转":["102.5"],"base64":["102.5"],"的阈值":["102.5"],"4kb":["102.5"],"rollupjs":["102.5"],"guide":["102.5"],"en":["102.5","127.40"],"big":["102.5"],"获取音视频":["103.0"],"要实现实时音视频第一步当然是要能获取到视频流":["103.0"],"在这里我们使用浏览器提供的api":["103.0"],"mediadevices来进行摄像头流的捕获":["103.0"],"接下来我们介绍如何请求摄像头和麦克风":["103.1"],"详情可以见":["103.2"],"这里介绍一下getusermedia的参数constraints":["103.2"],"width":["103.3"],"sfu":["103.4"],"关于这三种模式的区别可以查看":["103.4"],"文章来了解":["103.4"],"在这里由于设备的限制":["103.4"],"我们采用mesh的方案来进行开发":["103.4"],"用我们的项目创建一个来试试":["103.5"],"可以查看chrome的控制台":["103.6"],"检查ws的链接情况":["103.6"],"如果出现跨域":["103.6"],"请查看socket":["103.6"],"io的server配置并开启cors配置":["103.6"],"callback":["103.7","206.5"],"status":["103.7"],"ok":["103.7"],"any":["103.8","185.4","225.4","231.1","250.3"],"setremotedescription":["103.9"],"待a设置完成之后便可以建立链接":["103.10"],"代码同上":["103.10"],"b接下来会收到流添加的事件":["103.10"],"这个事件会有两次":["103.10"],"分别是音频和视频的数据":["103.10"],"在开始我们需要知道":["103.11"],"一个人和另一个人建立连接双方都需要创建自己的peerconnection":["103.11"],"对于多人的情况":["103.11"],"首先我们需要知道进入的房间里面当前的人数":["103.11"],"给每个人都创建一个rtcpeer":["103.11"],"同时收到的人也回复这个offer给发起的人":["103.11"],"对于后进入的人":["103.11"],"需要让已经创建音视频的人给后进入的人创建新的offer":["103.11"],"基于上面的流程":["103.11"],"我们现在先实现一个成员列表的接口":["103.11"],"reply":["103.12"],"set":["103.13","173.2","174.20","195.4","222.3","248.1"],"data":["103.14","126.3","166.8","173.57","239.5"],"peerconnectlist":["103.15"],"warn":["103.15","222.3","243.2"],"获取失败":["103.15"],"处理播放":["103.15"],"处理ice候选":["103.15"],"到目前为止":["103.15"],"就实现了一个基于mesh的webrtc的多对多通信":["103.15"],"在这里附上了一个完整的demo可供参考":["103.15"],"socketserver":["103.15"],"fontpage":["103.15"],"基于webrtc的屏幕录制":["103.15"],"href":["103.17"],"download":["103.17"],"录屏":["103.17"],"date":["103.17","115.0","173.81"],"click":["103.17","156.14"],"则将该像素设置为背景图片中的对应像素":["104.0"],"如果差值小于阈值":["104.0"],"bgr":["104.0"],"bgg":["104.0"],"bgb":["104.0"],"bga":["104.0"],"计算与背景色的差值":["104.0"],"diff":["104.0","178.2","222.11"],"backgroundcolor":["104.0"],"当差值小于设定的阈值":["104.0"],"allowance":["104.0"],"将处理后的图像数据写到虚拟视频的":["104.0"],"putimagedata":["104.0"],"计算颜色差异":["104.0"],"rgba1":["104.0"],"rgba2":["104.0"],"需要扣除的背景色":["104.0"],"容差值":["104.0"],"两个变量是由外部控制的":["104.0"],"这样我们就可以在页面上通过滑动条或是其他的组件来动态改变容差":["104.0"],"通过取色器来动态改变需要扣除的背景色":["104.0"],"我们就可以实现一个简单的背景替换的功能了":["104.0"],"这里只是简单的实现了一个背景替换的功能":["104.0"],"实际上":["104.0","148.3"],"我们还可以通过更多的技术手段来实现更加复杂的功能":["104.0"],"比如":["104.0","152.18","154.2","195.4","207.8"],"目前只是针对纯色的背景进行了替换":["104.0"],"如果复杂的背景":["104.0"],"我们可以通过图像分割的方式来实现背景替换":["104.0"],"tensorflow":["104.0"],"中的":["104.0","140.0","195.4"],"身体分割":["104.0"],"bodypix":["104.0"],"或者是说":["104.0"],"对于视频中的人脸":["104.0"],"face":["104.0","171.0","195.4"],"来检测人脸":["104.0"],"并将人脸替换为其他的图片":["104.0"],"从而实现一个简单的换脸功能":["104.0"],"对于视频中的人体":["104.0"],"来检测人体":["104.0"],"并将人体替换为其他的图片":["104.0"],"从而实现一个简单的换装功能":["104.0"],"等等":["104.0","115.0","173.81","177.12","193.4","193.5"],"后续我都在这个专栏中安排":["104.0"],"可以见得":["104.0"],"用":["104.0"],"相关的知识来结合一些其他相关技术":["104.0"],"可以实现非常多的有趣的项目":["104.0"],"可玩性非常强":["104.0"],"这作为我专栏的第一篇":["104.0"],"主要是想通过这篇文章来介绍一下":["104.0"],"相关的知识":["104.0"],"以及":["104.0","217.0"],"相关的一些应用场景":["104.0"],"希望能够帮助到大家":["104.0"],"本来还想写下":["104.0"],"1v1":["104.0"],"视频聊天的实现":["104.0"],"但是由于时间关系":["104.0"],"我把它放到第二篇来写吧":["104.0"],"我已经放到了":["104.0"],"我的前端公园合集仓库中":["104.0"],"这两天抽空写完":["104.0"],"大家也可以":["104.0"],"follow":["104.0"],"一下我的":["104.0"],"谢谢大家":["104.0"],"文件中":["106.2"],"除了注释":["106.2"],"规则集以及":["106.2"],"外":["106.2"],"定义的一些别的东西都将被浏览器忽略":["106.2"],"除了以上这几个之外":["106.3"],"下面还将对几个比较生涩的":["106.3"],"进行介绍":["106.3"],"该条已在":["106.4"],"html5":["106.4","171.0"],"中废除":["106.4"],"默认是":["106.4"],"动态引入样式表改变样式":["106.5"],"import不可以":["106.5"],"选择器的优先级以及继承性来理解":["106.7"],"比如针对同一个选择器":["106.7"],"定义在后面的声明会覆盖前面的":["106.7"],"作者定义的样式会比默认继承的样式优先级更高":["106.7"],"开头的元素":["106.9"],"标签中指定逆序索引的标签":["106.11"],"标签中为首的标签":["106.11"],"标签中为尾标签":["106.11"],"父元素仅有该标签的标签":["106.11"],"永远不要在全站范围的":["106.13"],"代码中使用":["106.13"],"unset":["106.14"],"如果属性是默认可以继承的":["106.14"],"则取":["106.14"],"的效果":["106.14"],"否则同":["106.14"],"revert":["106.14"],"效果等同于":["106.14"],"兼容性差":["106.14"],"fixed":["106.15"],"也会使得元素脱离文档流":["106.15"],"且空出来的位置将自动被后续节点填补":["106.15"],"中新增了一个属性":["106.16"],"sizing":["106.16"],"允许开发者来指定盒子使用什么标准":["106.16"],"它有":["106.16"],"个值":["106.16"],"标准盒模型":["106.16"],"对内显示":["106.17"],"其实就相当于把该元素当成了容器":["106.17"],"规定了其内部子元素是如何布局的":["106.17"],"参与何种格式化上下文":["106.17"],"不单独占满一行":["106.18"],"可以看成是能够在一行里进行左右排列的块元素":["106.18"],"参考":["106.19","106.21","106.23","106.40"],"原理":["106.19","106.21"],"你所不知道的":["106.19"],"格式化上下文":["106.19"],"中扮演着非常重要的角色":["106.20"],"因为它们直接影响了网页布局":["106.20"],"所以需要深入理解其原理":["106.20"],"10px":["106.21"],"针对以上":["106.21"],"示例":["106.21"],"可以结合这个":["106.21"],"应用示例":["106.21"],"配合观看更佳":["106.21"],"formatting":["106.21"],"context":["106.21","195.8"],"则会在外层产生":["106.22"],"则可以使其水平居中":["106.22"],"垂直居中":["106.22"],"创建一个":["106.22"],"用其中一个元素撑开父元素的高度":["106.22"],"然后设置其":["106.22"],"vertical":["106.22"],"middle":["106.22"],"其他行内元素则可以在此父元素下垂直居中":["106.22"],"偷个懒":["106.22"],"和图我就不做了":["106.22"],"0的子节点":["106.23"],"如何比较两个元素的层叠等级":["106.23"],"比较两个元素就是按照上图的介绍的层叠顺序进行比较":["106.23"],"如果不在同一个层叠上下文中的时候":["106.23"],"那就需要比较两个元素分别所处的层叠上下文的等级":["106.23"],"如果两个元素都在同一个层叠上下文":["106.23"],"且层叠顺序相同":["106.23"],"则在":["106.23"],"中定义越后面的层叠等级越高":["106.23"],"彻底搞懂css层叠上下文":["106.23"],"rem":["106.24"],"vw":["106.24"],"那他们有什么区别呢":["106.24"],"又应该在什么时候使用它们呢":["106.24"],"android设备而衍生出来的":["106.25"],"原因是安卓屏幕的尺寸繁多":["106.25"],"因此为了显示能尽量和设备无关":["106.25"],"而提出的这个概念":["106.25"],"它是基于屏幕密度而计算的":["106.25"],"认为当屏幕密度是":["106.25"],"的字体大小是":["106.26"],"标签最终计算出来后的字体大小会是":["106.26"],"64px":["106.26"],"非常方便":["106.27","127.11"],"偷偷告诉你":["106.27"],"如果你把上面那串计算":["106.27"],"代码中的":["106.27"],"替换成":["106.27"],"那在计算":["106.27"],"的时候就不需要除于":["106.27"],"从设计图量出多大":["106.27"],"就直接写多少个":["106.27"],"中值较大的":["106.28"],"颜色关键字总共有":["106.30"],"这里可以查看":["106.30"],"完整的色彩关键字列表":["106.30"],"需要注意的是如果声明的时候的颜色关键字是错误的":["106.30"],"浏览器会忽略它":["106.30"],"增大点击区域":["106.31"],"常常在移动端的时候点击的按钮的区域特别小":["106.31"],"但是由于现实效果又不太好把它做大":["106.31"],"所以常用的一个手段就是通过透明的边框来增大按钮的点击区域":["106.31"],"btn":["106.31"],"5px":["106.31"],"中的逗号改成":["106.33"],"不透明度的红色可以这样写":["106.33"],"另外还把":["106.33"],"的写法合并到":["106.33"],"函数中了":["106.33"],"即":["106.33"],"可以直接写带不透明度的颜色":["106.33"],"小提示":["106.34"],"devtools":["106.34"],"中可以按住":["106.34"],"shift":["106.34"],"鼠标左键可以切换颜色的表示方式":["106.34"],"height":["106.35","147.3"],"680px":["106.35"],"orientation":["106.35"],"portrait":["106.35"],"常见需求":["106.35"],"具体可以看这个":["106.36"],"codepen":["106.36"],"clear":["106.38","118.5","127.16","127.17"],"来清除浮动并不完美":["106.39"],"当元素有阴影或存在下拉菜单的时候会被截断":["106.39"],"所以该方法使用比较局限":["106.39"],"非常通用":["106.40"],"css中的浮动和清除浮动":["106.40"],"梳理一下":["106.40"],"有如下特点":["106.41"],"几乎为所有标签都设置了默认样式":["106.41"],"则是有选择性的保护了部分有价值的默认值":["106.41"],"修复了很多浏览器的":["106.41"],"而这是":["106.41"],"没做到的":["106.41"],"不会让你的调试工具变的杂乱":["106.41"],"相反":["106.41","141.8"],"由于设置了很多默认值":["106.41"],"所以在浏览器调试工具中往往会看到一大堆的继承样式":["106.41"],"显得很杂乱":["106.41"],"是模块化的":["106.41"],"所以可以选择性的去掉永远不会用到的部分":["106.41"],"比如表单的一般化":["106.41"],"有详细的说明文档":["106.41"],"整块文本溢出省略特性探究":["106.42"],"配合示例阅读效果更佳":["106.43"],"100px":["106.44"],"方法六":["106.46"],"grid":["106.46","106.49","106.51"],"方法三":["106.51"],"flex":["106.51"],"方法四":["106.51"],"records":["107.1","107.3"],"此时就可以通过适配器模式进行转换":["107.1"],"表格列表":["107.3"],"get":["107.4","166.9","175.21","176.3","195.8"],"post":["107.4","115.0","195.9","263.6"],"put":["107.4"],"browsers":["107.4"],"这里就可以用到装饰器模式了":["108.1"],"没有再定义类和接口":["108.2"],"中用函数直接表示":["108.2"],"原始的":["108.2"],"方法返回一个奶茶对象":["108.2"],"然后又定义了三个装饰函数":["108.2"],"传入一个奶茶对象":["108.2"],"返回一个装饰后的对象":["108.2"],"ce":["108.3","219.3"],"即可":["108.4","156.12","156.13","167.3","178.5"],"所以使用代理模式还是使用装饰器模式":["108.4"],"取决于我们是要把所有功能包装后最终产出一个对象给业务方使用":["108.4"],"还是提供许多功能":["108.4"],"让业务方自由组合":["108.4"],"如果只是一个请求的话就按上边这样改就可以了":["109.1"],"但如果是多个请求一个一个这样去改就有些傻了":["109.1"],"那直接去改":["109.1"],"模块":["109.1","173.55","173.87","217.0"],"也是不行的":["109.1"],"增加":["109.1"],"字段只是我们负责业务的改变":["109.1"],"模块是所有业务线所共用的":["109.1"],"我们并不能直接去改变它":["109.1"],"此时就需要代理模式了":["109.1"],"整体思想是一样的":["109.6"],"但":["109.6"],"不用定义接口":["109.6"],"也不用定义类":["109.6"],"看起来精简了不少":["109.6"],"只需要实现和原对象一样的返回即可":["109.6"],"的时候给":["109.7"],"进行赋值":["109.7"],"这样在实际业务中":["109.7"],"如果需要":["109.7"],"我们只需要从新写的":["109.7"],"引入":["109.7"],"其他什么都不需要改动":["109.7"],"可以看到各个模块和获取地址模块耦合严重":["110.1"],"模块有变化或者有新增模块":["110.1"],"都需要深入到获取地址的代码去修改":["110.1"],"一不小心可能就改出问题了":["110.1"],"此时就需要观察者模式了":["110.1"],"我们可以直接将":["110.2"],"方法传给":["110.2"],"同时采取推模式":["110.2"],"的时候直接将数据传给观察者":["110.2"],"看起来会简洁很多":["110.2"],"的逻辑":["110.3"],"必要的话也可以把":["110.3"],"抽离到一个新的文件作为一个新模块":["110.3"],"防止让一个文件变得过于臃肿":["110.3"],"让":["111.1"],"三个模块解耦的更加彻底":["111.1"],"并且转发了":["111.2"],"xiaogang":["111.2"],"并且收藏":["111.2"],"新文章":["111.2"],"观察者模式":["111.2","180.2"],"balabala":["111.2"],"模块不再需要关心观察者有谁":["111.3"],"它只需要向":["111.3"],"发射更新事件即可":["111.3"],"每个模块内部自己如果需要地址信息":["111.3"],"只需要订阅相关事件":["111.3"],"然后传入回调函数即可":["111.3"],"同样只有":["111.4"],"对于实际场景":["111.4"],"我们还需要根据情况继续进行调整":["111.4"],"内部去补一个":["112.1"],"一不小心可能就会影响到原有的逻辑":["112.1"],"并且随着迭代函数会越来越大":["112.1"],"但其实每种弹窗是相互独立的":["112.1"],"我们并不关心其他弹窗的逻辑":["112.1"],"此时":["112.1"],"就需要策略模式了":["112.1"],"strategiesstrategy":["112.2"],"上边主要演示了思想":["112.2"],"实际开发中":["112.2"],"我们完全可以把每种策略分文件单独写然后再":["112.2"],"import":["112.2","173.95"],"相对于":["112.2"],"写法简单了很多":["112.2"],"我们不需要定义各个类":["112.2"],"只需要用一个对象来存储所有策略":["112.2"],"再提供一个调用策略的函数":["112.2"],"甚至这个函数也可以直接省略":["112.2"],"cash":["112.3"],"poptypestype":["112.3"],"得到相应的":["112.4"],"gettype":["112.4"],"undefined":["112.4","127.24","127.39","127.42","127.52","156.2","156.24","212.1","219.4","226.1","252.4"],"之后接下来只需要遍历相应的":["112.4"],"然后校验就可以了":["112.4"],"常规操作":["113.0"],"兼容":["113.1"],"部署等问题":["113.1"],"彻底解决了":["113.1"],"上线即崩":["113.1"],"无休止构建":["113.1"],"的尴尬":["113.1"],"而容器的边界不那么强大":["113.2"],"物理机部署不能充分利用资源":["113.2"],"造成资源浪费":["113.2"],"虚拟机方式部署":["113.2"],"虚拟机本身会占用大量资源":["113.2"],"导致资源浪费":["113.2"],"另外虚拟机性能也很差":["113.2"],"而容器化部署比较灵活":["113.2"],"且轻量级":["113.2"],"性能较好":["113.2"],"虚拟机属于虚拟化技术":["113.2"],"docker":["113.2"],"这样的容器技术":["113.2"],"属于轻量级的虚拟化":["113.2"],"会执行我们预先指定的命令":["113.3"],"运行应用程序":["113.3"],"镜像不包含任何动态数据":["113.3"],"其内容在构建之后也不会被改变":["113.3"],"容器是镜像的":["113.4"],"运行时实例":["113.4"],"更多关于":["113.4"],"的原理":["113.4"],"可以查看":["113.4","177.5"],"工作原理及容器化简易指南":["113.4"],"安装桌面端":["113.5"],"桌面端":["113.5"],"桌面端操作非常简单":["113.5"],"先去官网下载":["113.5"],"我们可以方便的操作":["113.5"],"clone":["113.5","204.0"],"克隆一个项目":["113.5"],"打包镜像":["113.5"],"运行实例":["113.5"],"共享镜像":["113.5"],"准备工作就绪":["113.5"],"下面可以大展身手了":["113.5"],"是我们上面构建的镜像名字":["113.6"],"补充一点":["113.6"],"在控制台":["113.6"],"我们可以通过":["113.6","156.3","166.1"],"查看刚运行的":["113.6"],"id":["113.6","150.12","167.3","239.2"],"控制台会输出":["113.6"],"command":["113.6"],"created":["113.6","241.9"],"ports":["113.6","114.32"],"ab1375befb0b":["113.6"],"minutes":["113.6"],"up":["113.6","114.32"],"如果你使用桌面端":["113.6"],"那么打开":["113.6"],"dashboard":["113.6"],"就可以看到容器列表了":["113.6"],"访问项目":["113.6"],"因为我们映射了本机":["113.6"],"所以执行":["113.6"],"curl":["113.6"],"或者打开浏览器":["113.6"],"访问":["113.6","138.35"],"发布镜像":["113.6"],"如果你想为社区贡献力量":["113.6"],"那么需要将镜像发布":["113.6"],"方便其他开发者使用":["113.6"],"发布镜像需要如下步骤":["113.6"],"登陆":["113.6"],"dockerhub":["113.6"],"注册账号":["113.6"],"命令行执行":["113.6"],"之后输入我们的账号密码":["113.6"],"进行登录":["113.6"],"推送镜像之前":["113.6"],"需要打一个":["113.6"],"repository":["113.6","114.3","177.14"],"全流程结束":["113.6"],"以后我们要使用":["113.6"],"再也不需要":["113.6"],"搬石头":["113.6"],"砍木头":["113.6"],"画图纸":["113.6"],"盖房子":["113.6"],"拎包入住":["113.6"],"这也是":["113.6"],"独特魅力所在":["113.6","114.17"],"的工作目录都会同步变更":["113.7"],"指定运行命令时所使用的用户":["113.7"],"为了安全和权限起见":["113.7"],"根据要执行的命令选择不同用户":["113.7"],"group":["113.7"],"arg":["113.7","231.3"],"设置构建镜像是要传递的参数":["113.7"],"sss":["113.7"],"更多操作":["113.7"],"请移步官方使用文档":["113.7"],"writing":["113.8"],"dockerfiles":["113.8"],"容器":["114.3"],"一并安装":["114.5"],"用本地的":["114.12"],"配置来替换":["114.12"],"镜像里的默认配置":["114.12"],"可以看到我们构建了一个项目镜像":["114.13"],"在docker中也可以查看生成的镜像":["114.13"],"同样的也可以在桌面端看到":["114.15"],"正在运行的docker容器":["114.15"],"就是如何使用docker去运行一个基础项目的示例":["114.17"],"隔离uid":["114.19"],"gid":["114.19"],"9f38484d220f":["114.21"],"months":["114.21"],"202mb":["114.21"],"thank":["114.29"],"using":["114.29","206.5","206.15","218.5","220.2"],"那如果要进入容器环境中呢":["114.29"],"exec":["114.29"],"sh":["114.29"],"00":["114.30","284.39","287.6"],"395mib":["114.30"],"796gib":["114.30"],"08":["114.30"],"632b":["114.30"],"27kb":["114.30"],"0b":["114.30"],"此时可通过":["114.32"],"启动容器":["114.32"],"whatwg":["115.0"],"新增了":["115.0"],"标准通过定义存储的持久化":["115.0"],"容量估算":["115.0"],"过期时间等能力来整合这些":["115.0"],"从存储桶中访问":["115.0"],"inboxdb":["115.0"],"resolve":["115.0","283.7"],"inboxbucket":["115.0"],"messages":["115.0"],"onupgradeneeded":["115.0"],"migration":["115.0"],"onsuccess":["115.0"],"onerror":["115.0"],"reject":["115.0","173.65","283.7"],"从存储桶中使用":["115.0"],"draftfile":["115.0"],"draftsbucket":["115.0"],"createfile":["115.0"],"attachment":["115.0"],"txt":["115.0"],"plain":["115.0"],"lastmodified":["115.0"],"cache":["115.0"],"inboxcache":["115.0"],"caches":["115.0"],"attachments":["115.0"],"它的出现将统一所有浏览器存储":["115.0"],"支持新的":["115.0"],"satisfies":["115.0"],"操作符":["115.0"],"在使用":["115.0","173.59"],"类型推断的时候":["115.0"],"有很多情况下会让我们面临两难的选择":["115.0"],"我们即希望确保某些表达式能够匹配某些类型":["115.0"],"但也希望保留这个表达式的特定类型用来类型推断":["115.0"],"这就让我们陷入了两难的境地":["115.0"],"我们用更严格了类型约束了写出":["115.0"],"的可能性":["115.0"],"但是却失去了类型推断的能力":["115.0"],"关键字就是用来解决这个问题的":["115.0"],"它既能让我们验证表达式的类型是否与某个类型匹配":["115.0"],"也可以保留基于值进行类型推断的能力":["115.0"],"colors":["115.0"],"red":["115.0","170.14","195.4","288.2"],"green":["115.0"],"blue":["115.0"],"rgb":["115.0"],"palette":["115.0"],"rad":["115.0"],"可以捕获到错别字":["115.0"],"00ff00":["115.0"],"string":["115.0","127.52","177.3","184.29","216.3","216.4"],"都可以调用":["115.0"],"touppercase":["115.0","295.8"],"重点新特性解读":["115.0"],"发布第一个稳定版本":["115.0"],"是一个使用":["115.0"],"编写的格式化和":["115.0"],"可以用于":["115.0"],"markdown":["115.0"],"的格式化":["115.0"],"相比传统的":["115.0"],"它的处理速度非常快":["115.0"],"300毫秒":["115.0"],"1秒":["115.0"],"内处理":["115.0"],"个文件":["115.0"],"但是它的野心不止于此":["115.0"],"它的目标是将数十种前端语言工具":["115.0"],"eslint":["115.0","193.7","206.15"],"prettier":["115.0"],"jest":["115.0"],"统一为一个从头开始构建的易于使用的工具":["115.0"],"tools":["115.0"],"nuxt":["115.0"],"稳定版发布":["115.0"],"nuxt3":["115.0"],"vue3":["115.0","181.0"],"nitro":["115.0"],"等现代框架重写":["115.0"],"具有一流的":["115.0"],"经过两年多研究":["115.0"],"社区反馈":["115.0"],"创新和实验":["115.0"],"终于发布稳定版本":["115.0"],"视口单位":["115.0"],"为了解决移动端网页滚动时":["115.0"],"动态工具栏自动收缩的问题":["115.0"],"工作组规定了视口的各种状态":["115.0"],"large":["115.0"],"viewport":["115.0"],"大视口":["115.0"],"视口大小假设任何动态工具栏都是收缩状态":["115.0"],"small":["115.0"],"小视口":["115.0"],"视口大小假设任何动态工具栏都是扩展状态":["115.0"],"新的视口也分配了单位":["115.0"],"代表":["115.0"],"的单位以":["115.0"],"lv":["115.0"],"为前缀":["115.0"],"lvw":["115.0"],"lvh":["115.0"],"lvi":["115.0"],"lvb":["115.0"],"lvmin":["115.0"],"lvmax":["115.0"],"sv":["115.0"],"svw":["115.0"],"svh":["115.0"],"svi":["115.0"],"svb":["115.0"],"svmin":["115.0"],"svmax":["115.0"],"另外还有一个":["115.0"],"dynamic":["115.0","214.3"],"动态视口":["115.0"],"当动态工具栏展开时":["115.0"],"动态视口等于小视口的大小":["115.0"],"当动态工具栏被缩回时":["115.0"],"动态视口等于大视口的大小":["115.0"],"相应的":["115.0"],"它的视口单位以":["115.0"],"dv":["115.0"],"dvw":["115.0"],"dvh":["115.0"],"dvi":["115.0"],"dvb":["115.0"],"dvmin":["115.0"],"dvmax":["115.0"],"各大浏览器均已经对新的视口单位提供了支持":["115.0"],"发布新的":["115.0"],"布局单位":["115.0"],"sveltekit":["115.0"],"是一个用":["115.0"],"构建":["115.0"],"应用程序的框架":["115.0"],"可以满足不同规模的应用开发":["115.0"],"提供了非常灵活和体验良好的基于文件系统的路由架构":["115.0"],"组件框架":["115.0"],"因其出色的性能和易用性而受到开发者喜爱":["115.0"],"经过两年的开发":["115.0"],"已正式发布":["115.0"],"现在可用于生产环境":["115.0"],"它提供了服务端渲染":["115.0"],"路由管理":["115.0"],"针对":["115.0"],"的代码分割":["115.0"],"以及针对不同":["115.0"],"serverless":["115.0"],"平台生成不同代码的适配器等功能":["115.0"],"如果你想加入高质量前端交流群":["115.0"],"或者你有任何其他事情想和我交流也可以添加我的个人微信":["115.0"],"这些事件里哪些让你印象最深":["115.0"],"哪些你觉得很重要但是我文中没有提到":["115.0"],"欢迎在评论区和我留言":["115.0"],"如果这篇文章帮助到了你":["115.0"],"欢迎点赞和关注":["115.0"],"本文转自":["115.0","195.9"],"7186454731785994301":["115.0"],"heading":["115.0","195.9"],"如有侵权":["115.0","195.9","263.6"],"请联系删除":["115.0","195.9","263.6"],"的历史操作":["116.1"],"editor":["116.4","275.2"],"vi":["116.4"],"如":["117.1","156.14","156.18","175.10"],"移除远程仓库":["117.1"],"目录下所有扩展名为":["117.2"],"注明储藏名称":["118.2"],"方便查找":["118.2"],"查看其他储藏做的改动":["118.3"],"删除所有储藏的stash":["118.5"],"如果你沒有指定具体的某个储藏":["119.4"],"会选择最近的储藏":["119.4"],"amend":["119.8"],"将本地所有的标签全部推送到远程仓库中":["119.10"],"feature":["119.11","148.4","220.2"],"sub":["119.11"],"使用rebase操作应该遵循的原则是":["119.11"],"一旦分支中的提交对象发布到公共仓库":["119.11"],"就千万不要对该分支进行rebase操作":["119.11"],"常见的":["120.0"],"声明":["120.0"],"标准解析渲染页面":["120.3"],"在标准模式中":["120.3"],"浏览器以其支持的最高标准呈现页面":["120.3"],"backcompat":["120.3"],"怪异模式":["120.3"],"混杂模式":["120.3"],"quick":["120.3"],"浏览器使用自己的方式解析渲染页面":["120.3"],"在怪异模式中":["120.3"],"页面以一种比较宽松的向后兼容的方式显示":["120.3"],"因此也就没有严格模式与混杂模式的区别":["120.4"],"有相对宽松的语法":["120.4"],"实现时":["120.4"],"已经尽可能大的实现了向后兼容":["120.4"],"一起使用":["121.0","156.1"],"前者表示要表示的元数据的":["121.0"],"名称":["121.0"],"后者是元数据的":["121.0"],"值":["121.0","171.0"],"大小之间的缩放比例":["121.4"],"搜索引擎继续通过此网页的链接索引搜索其它的网页":["121.5"],"所有允许的值都是特定":["121.6"],"头部的名称":["121.6"],"开发者偏好":["121.7"],"元素":["121.7"],"优先于web服务器设置":["121.7"],"http头":["121.7"],"来设置缓存策略":["121.10"],"meta":["122.0","286.55"],"charset":["122.0"],"utf":["122.0"],"在标签内":["122.0"],"使用标签的charset属性规定该html文档应该使用哪种字符编码":["122.0"],"是万国码":["122.0"],"包含了全世界所有国家需要用到的字符":["122.0"],"一定要写":["122.0"],"否则乱码":["122.0"],"常用标签":["122.0"],"段落和段落之间有空隙":["122.2"],"行之间没有太大的空隙":["122.4"],"后面不能放东西":["122.5"],"否则转到下一行显示":["122.5"],"span标签用来布局":["122.5"],"一行上可以多个span":["122.5"],"小盒子":["122.5"],"宽度和高度设置一个就行":["122.6"],"另外的会等比例缩放":["122.6"],"避免失真":["122.6"],"属性不分先后顺序":["122.6"],"均以空格分开":["122.6"],"上一级路径":["122.7"],"所需文件位于当前目录的上一级":["122.7"],"blank":["122.8"],"为在新窗口中打开页面":["122.8"],"gt":["122.9"],"规定表格的高度":["122.11"],"这些属性要写到table里去":["122.11"],"但是实际开发并不常用":["122.11"],"后面会通过css来设置":["122.11"],"删除多余的单元格":["122.13"],"无序列表会带有自己的样式属性":["122.15"],"但在实际使用时":["122.15"],"我们会使用css来设置":["122.15"],"有序列表或带有自己的样式属性":["122.16"],"但在实际使用时会使用css来设置":["122.16"],"是并列关系":["122.17"],"应该有个表单把他们进行包含":["122.19"],"表单域是":["122.19"],"实现多选一":["122.21"],"有相同name即可":["122.21"],"因为name的属性相同":["122.21"],"所以只有一个能被选中":["122.21"],"必须有相同name":["122.21"],"一般将name设置为name":["122.21"],"如果被选中":["122.21"],"则在数组name中添加一个元素":["122.21"],"单选和多选框可以设置checked":["122.21"],"在打开的时候就默认选中这个按钮":["122.21"],"应当与相关元素的":["122.22"],"id属性相同":["122.22"],"时":["122.23","133.5","168.26","173.74","178.7"],"当前项即为默认选中项":["122.23"],"都是用css开改变大小":["122.24"],"datalist":["123.0"],"允许我们将自动完成建议添加到元素中":["123.0"],"email":["123.1"],"mail":["123.1"],"添加颜色选择器":["123.1"],"想要向您的网站添加":["123.1"],"颜色选择器":["123.1"],"您只需要一行":["123.1"],"不需要花哨的":["123.1"],"甚至也不需要":["123.1"],"input":["123.1","127.39"],"可编辑内容":["123.1"],"只需将属性添加到元素即可使任何内容":["123.1"],"可编辑":["123.1"],"contenteditable":["123.1"],"这是一段可编辑的话":["123.1"],"等待主线程调度执行":["124.0"],"在这种异步模式下":["124.0"],"浏览器永不阻塞":["124.0"],"从而最大限度的保证了单线程的流畅运行":["124.0"],"上面例子中":["125.0"],"obj1是原始对象":["125.0"],"obj2是赋值操作得到的对象":["125.0"],"obj3浅拷贝得到的对象":["125.0"],"obj4深拷贝得到的对象":["125.0"],"通过下面的表格":["125.0"],"我们可以很清晰看到他们对原始数据的影响":["125.0"],"浅拷贝的实现方式":["125.0"],"深拷贝的实现方式":["125.5"],"对象存在循环引用的情况":["125.9"],"我不爱你":["126.2","126.3"],"message":["126.3","127.54"],"send":["126.3","179.47"],"上述代码经过两次跨域":["126.4"],"值得注意的是浏览器向代理服务器发送请求":["126.4"],"也遵循同源策略":["126.4"],"最后在index":["126.4"],"html文件打印出":["126.4"],"脚本无法读取":["126.5"],"write":["126.5"],"running":["126.5","223.2"],"port":["126.5","154.4","154.5","154.7","154.8","154.10","154.16","154.17","195.9"],"总结":["126.6","154.11","167.4","177.6","178.8"],"通过iframe的src属性由外域转向本地域":["126.6"],"跨域数据即由iframe的window":["126.6"],"name从外域传递到本地域":["126.6"],"这个就巧妙地绕过了浏览器的跨域访问限制":["126.6"],"但同时它又是安全操作":["126.6"],"idontloveyou":["126.7"],"cors支持所有类型的http请求":["126.8"],"是跨域http请求的根本解决方案":["126.8"],"jsonp只支持get请求":["126.8"],"jsonp的优势在于支持老式浏览器":["126.8"],"以及可以向不支持cors的网站请求数据":["126.8"],"不管是node中间件代理还是nginx反向代理":["126.8"],"主要是通过同源策略对服务器不加限制":["126.8"],"日常工作中":["126.8"],"用得比较多的跨域方案是cors和nginx反向代理":["126.8"],"新的正则表达式特性和":["127.1"],"语法":["127.1"],"2019年6月":["127.1"],"es2019":["127.1","127.44"],"es6是一次重大的革新":["127.2"],"比起过去的版本":["127.2"],"改动比较大":["127.2"],"本文仅对常用的api以及语法糖进行讲解":["127.2"],"变量提升":["127.3"],"全局变量":["127.3"],"重复声明":["127.3"],"重新赋值":["127.3"],"暂时死区":["127.3"],"块作用域":["127.3"],"只声明不初始化":["127.3"],"看":["127.5"],"是不是简洁了不少":["127.5"],"是不是方便很多":["127.8"],"array":["127.10","173.81"],"iterable":["127.10"],"对象已经被删除了":["127.16"],"清空整个":["127.16"],"wm3已被清空":["127.17"],"当然也不是什么都可以被代理的":["127.18"],"如果对象带有":["127.18"],"configurable":["127.18"],"writable":["127.18"],"则代理失效":["127.18"],"gi":["127.22"],"cosh":["127.23"],"返回n的双曲余弦":["127.23"],"tanh":["127.23"],"返回n的双曲正切":["127.23"],"asinh":["127.23"],"返回n的反双曲正弦":["127.23"],"acosh":["127.23"],"返回n的反双曲余弦":["127.23"],"atanh":["127.23"],"返回n的反双曲正切":["127.23"],"数组空位":["127.24"],"es6明确将数组空位转为":["127.24"],"或者":["127.24","173.21","173.64","173.65","177.10"],"es7":["127.24","195.4"],"es2016":["127.24"],"escape":["127.27"],"sequence":["127.27"],"es8":["127.27"],"es2017":["127.27"],"may":["127.33"],"comma":["127.33"],"对于指定大小的数组":["127.35"],"如果当前系统支持硬件级的原子操作":["127.35"],"则返回":["127.35","151.9","173.10","173.76"],"否则就意味着对于该数组":["127.35"],"对象中的各原子操作都只能用锁来实现":["127.35"],"此函数面向的是技术专家":["127.35"],"es9":["127.36"],"es2018":["127.36"],"groups":["127.39"],"具体的属性列表可查看":["127.40"],"developer":["127.40"],"mozilla":["127.40"],"us":["127.40"],"flags":["127.41","214.1"],"所以不能替换也不能模拟":["127.43"],"如果存在相同的属性名":["127.43"],"只有最后一个会生效":["127.43"],"结束":["127.44","281.2"],"es10":["127.44","127.52"],"但这是非常低效的":["127.45"],"在每次迭代中":["127.45"],"它创建一个必须被垃圾收集的新临时数组":["127.45"],"并且它将元素从当前的累加器数组复制到一个新的数组中":["127.45"],"而不是将新的元素添加到现有的数组中":["127.45"],"native":["127.50"],"boolean":["127.52","241.1","241.10"],"symbol":["127.52","235.4","243.1"],"err":["127.54"],"textcontent":["127.54","178.7"],"在一次事件循环中":["128.0"],"由浏览器自行决定取哪一个队列的任务":["128.0"],"但浏览器必须有一个微队列":["128.0"],"微队列的任务一定具有最高的优先级":["128.0"],"必须优先调度执行":["128.0"],"in会先按照排序属性的数字大小从小到大依次遍历":["129.1"],"然后再遍历常规属性":["129.1"],"常规属性遍历顺序可能不是实际的内部顺序":["129.1"],"你可以用for":["129.4"],"in循环":["129.4"],"这也是它的本职工作":["129.4"],"或搭配内建的object":["129.4"],"keys":["129.4","140.5","214.1"],"方法使用":["129.4"],"b":["129.6","133.5","195.8","214.2"],"结构":["129.7","241.12"],"某些类似数组的对象":["129.7"],"generator":["129.7","173.43"],"以及字符串":["129.7"],"都会返回":["130.2"],"973z":["130.5"],"这也就是为什么用序列化去实现深拷贝时":["130.9"],"遇到循环引用的对象会抛出错误的原因":["130.9"],"第九大特性的例子中对":["130.10"],"参数不明白的同学先别急":["130.10"],"其实很简单":["130.10"],"我们马上就会在下面的学习中弄懂":["130.10"],"字符串的属性名":["130.12"],"apply":["131.10","219.3","245.3"],"concat":["131.10","174.24","174.33","279.8"],"的具体的使用方式可以看这篇":["133.1"],"3分钟速览":["133.1"],"前端广播式通信":["133.1"],"from":["133.2","173.95","252.6"],"当需要同步消息时":["133.2"],"可以调用":["133.2"],"controller":["133.2"],"mydata":["133.2","133.4"],"可以是一个":["133.3"],"实例":["133.3"],"一个":["133.3"],"或是":["133.3"],"下面我们会看到另外两种跨页面通信方式":["133.3"],"我把它称为":["133.3","133.5"],"共享存储":["133.3"],"轮询模式":["133.3"],"当要跨页面通信时":["133.4"],"只需给":["133.4"],"postmessage即可":["133.4"],"如果使用addeventlistener来添加":["133.4"],"的消息监听":["133.4"],"需要显式调用messageport":["133.4"],"start方法":["133.4"],"即上文中的sharedworker":["133.4"],"如果使用onmessage绑定监听则不需要":["133.4"],"这种模式":["133.5"],"也许你会认为长轮询没有监听模式优雅":["133.5"],"但实际上":["133.5"],"有些时候使用":["133.5"],"的形式时":["133.5"],"不一定要搭配长轮询":["133.5"],"在多":["133.5"],"场景下":["133.5"],"我们可能会离开":["133.5"],"到另一个":["133.5"],"中操作":["133.5"],"过了一会我们从":["133.5"],"切换回":["133.5"],"希望将之前在":["133.5"],"中的操作的信息同步回来":["133.5"],"这时候":["133.5"],"其实只用在":["133.5"],"中监听visibilitychange这样的事件":["133.5"],"来做一次信息同步即可":["133.5"],"我会再介绍一种通信方式":["133.5"],"口口相传":["133.5"],"模式":["133.5","171.0"],"其实还有一种":["133.6"],"第七种":["133.6"],"做法是通过":["133.6"],"websocket":["133.6","175.9","175.12","286.69"],"这类的":["133.6"],"服务器推":["133.6"],"技术来进行同步":["133.6"],"这好比将我们的":["133.6"],"中央站":["133.6"],"从前端移到了后端":["133.6"],"与其他":["133.6"],"技术":["133.6"],"不了解的同学可以阅读这篇":["133.6"],"各类":["133.6"],"技术原理与实例":["133.6"],"polling":["133.6"],"comet":["133.6"],"sse":["133.6","175.9"],"下图就是使用":["133.7"],"的非同源页面间通信模式图":["133.7"],"同源跨域通信方案":["133.7"],"可以使用文章第一部分提到的某种技术":["133.7"],"桥":["133.9"],"将非同源页面通信转换为同源页面通信":["133.9"],"而history可以自定义地址":["134.2"],"addeventlistener":["134.3","134.4","156.14"],"监听hash变化":["134.3"],"点击浏览器的前进后退会触发":["134.3"],"event":["134.4","156.14","167.4"],"事件对象":["134.4"],"它的":["134.4"],"属性指向当前的":["134.4"],"e":["134.4","153.7","153.11","176.2"],"相当于":["134.4","171.0"],"点击查看":["134.4"],"通过history":["134.4"],"实现页面":["134.4"],"切换的功能":["134.4"],"致命的缺点就是当改变页面地址后":["134.4"],"强制刷新浏览器时":["134.4"],"如果后端没有做准备的话":["134.4"],"会报错":["134.4"],"因为刷新是拿当前地址去请求服务器的":["134.4"],"如果服务器中没有相应的响应":["134.4"],"会出现":["134.4"],"页面":["134.4"],"毫秒时又带来了偏差4":["135.0"],"受事件循环的影响":["135.0"],"计时器的回调函数只能在主线程空闲时运行":["135.0"],"因此又带来了偏差":["135.0"],"u4e09":["136.2"],"26c":["136.2","136.7","136.8"],"3daaa":["136.2","136.7"],"b8":["136.4"],"参数包含特殊字符可能会造成间断":["136.6"],"26b":["136.8"],"3d2":["136.8"],"3d3":["136.8"],"对应的nodejs的":["137.0"],"symlink":["137.0"],"创建软链接之后":["137.0"],"源文件inode的链接数还是1":["137.0"],"创建了新的inode":["137.0"],"软链接指向源文件":["137.0"],"执行ls":["137.0"],"li看一下":["137.0"],"软链接的inode":["137.0"],"number跟源文件的不一样":["137.0"],"权限一列开头为小写l":["137.0"],"表示软链":["137.0"],"链接数为1":["137.0"],"大小为8个字节":["137.0"],"没错":["137.0"],"软链文件也有大小":["137.0"],"不过一般很小":["137.0"],"毕竟只是一个快捷方式":["137.0"],"对比":["137.0"],"软链接inode链接数为1":["137.2"],"删除软链接则系统释放该inode":["137.2"],"因为一旦源文件移动位置或者重命名":["137.5"],"软链接就失效了":["137.5"],"硬链接和软链接修改文件内容都会同步到源文件":["137.6"],"因为本质上它们都是指向源文件的数据block":["137.6"],"用于查找文件中符合条件的字符串":["138.2"],"两者显示风格不同":["138.6"],"forwarded":["138.21"],"获得用户ip":["138.21"],"othe":["138.22"],"成功":["138.22"],"即配置成功":["138.22"],"后端部分":["138.29"],"此时前后端同域":["138.29"],"以此解决跨域问题":["138.29"],"用来在后端获取用户发送过来的请求头":["138.29"],"我们看图说话":["138.29"],"第一行输出为没配置该指令":["138.29"],"第二行为配置了该指令":["138.29"],"pass":["138.31","138.39","139.4","232.4"],"permanent":["138.32"],"可访问该资源":["138.34"],"否则403报错":["138.34"],"其生效顺序为谁先触发谁起作用":["138.35"],"可采取折中方案":["138.38"],"重定向移动端网址":["138.38"],"接入负载均衡相关配置":["138.39"],"redirect":["138.39"],"k":["138.40"],"一共发送多少请求":["138.40"],"同时发送多少请求":["138.40"],"keep":["138.40","216.3","256.4"],"alive":["138.40"],"上网行为管理":["139.1"],"对外隐藏用户信息":["139.1"],"通过反向代理服务器来优化网站的负载":["139.2"],"promise":["140.0","173.43","283.7","286.44"],"require加载模块":["140.0"],"依赖":["140.0"],"fs":["140.0"],"模块来加载模块文件":["140.0"],"readfile":["140.0"],"读取到的是一个字符串":["140.0"],"javascrpt":["140.0"],"中可以通过":["140.0"],"eval":["140.0","177.9"],"的方式来将一个字符串转换成":["140.0"],"代码来运行":["140.0"],"存在一个":["140.2"],"虚拟环境的概念":["140.2"],"用来运行额外的":["140.2"],"文件":["140.2","154.11","154.20","185.7","193.10"],"他可以保证":["140.2"],"执行的独立性":["140.2"],"不会被外部所影响":["140.2"],"equire":["140.3"],"代码实现之前先来回顾两个":["140.3"],"模块的用法":["140.3"],"因为下面会用得到":["140.3"],"获取所有后缀名":["140.5"],"extnames":["140.5"],"object":["140.5","173.46","214.1","218.5"],"存储原始文件路径":["140.5"],"oldpath":["140.5"],"findext":["140.5"],"ext":["140.5"],"递归追加后缀名":["140.5"],"判断文件是否存在":["140.5"],"整理实现步骤":["140.5"],"返回当前正在使用的ip地址":["141.4"],"servers":["141.4"],"getservers":["141.4"],"current":["141.4","216.5"],"主机的x正常运行时间":["141.6"],"format":["141.8"],"pathobject":["141.8"],"从对象中返回路径字符串":["141.8"],"pathstr":["141.8"],"我们已经可以在主项目里使用位于本地的npm包了":["143.5"],"它又是怎么知道这条软连接是执行哪里的呢":["144.1"],"就帮我们把这种软连接配置好了":["144.1"],"其实这种软连接相当于一种映射":["144.1"],"执行npm":["144.1"],"就会到":["144.1"],"bin中找对应的映射文件":["144.1"],"然后再找到相应的js文件来执行":["144.1"],"环境变量中查找有没有其他同名的可执行程序":["144.6"],"剩下三种依赖则是作为包的发布者才会使用到的字段":["145.2"],"显示的设置版本号时":["145.3"],"版本号必须符合semver规范":["145.3"],"允许在版本号前加上个v标识":["145.3"],"也就是使预发布版本号加一":["145.5"],"雪碧图":["146.2"],"实现了图片懒加载":["146.6"],"平白消耗流量":["146.7"],"标签是否出现在可视范围":["147.0"],"前置知识":["147.0"],"documentelement":["147.1"],"获取":["147.1","156.13"],"相对于文档的坐标":["147.2"],"加上当前页面滚动":["147.2"],"屏幕宽度":["147.3"],"屏幕高度":["147.3"],"允许你追踪目标元素与其祖先元素或视窗的交叉状态":["147.5"],"属性来判断是否出现":["147.5"],"添加交叉监听":["147.5"],"给每个img添加监听":["147.5"],"取消交叉监听":["147.5"],"img出现时给src赋值":["147.5"],"并取消监听":["147.5"],"四":["147.5"],"性能提升效果":["147.5"],"为了放大对比效果":["147.5"],"特意选择了体积较大的图像文件":["147.5"],"首先是没有懒加载时的加载时间":["147.5"],"一共花了20":["147.5"],"7s":["147.5"],"五张图片一共19":["147.5"],"4m":["147.5"],"20221103112657840":["147.5"],"使用懒加载后":["147.5"],"首次只加载前三张图片":["147.5"],"一共花了5":["147.5"],"03s":["147.5"],"三张图片8":["147.5"],"20221103120837216":["147.5"],"while":["148.0","173.64","206.9","214.0"],"level":["148.0"],"calls":["148.0"],"functions":["148.0","195.8"],"work":["148.0"],"takes":["148.0","206.15"],"thread":["148.0"],"这个函数调用5个函数":["148.0"],"这个函数的执行看起来就像一个特别长的长的任务":["148.0"],"在很多场景中":["148.0"],"单个函数耗时可能会超过50ms":["148.0"],"从而使得整体任务耗时更长":["148.0"],"如果测试场景比较差":["148.0"],"特别是在":["148.0"],"资源受限":["148.0"],"场景下测试的设备":["148.0"],"每个函数可能耗时都会更久":["148.0"],"接下来":["148.0"],"将会分享优化的策略":["148.0"],"替代定时器":["148.1"],"也可以使用":["148.1"],"requestidlecallback":["148.1"],"但是需要注意这个api编排的任务的优先级别最低":["148.1"],"而且只会在浏览器空闲时才会执行":["148.1"],"当主线程繁忙时":["148.1"],"这个api编排的任务可能永远不会执行":["148.1"],"one":["148.2"],"each":["148.2"],"现在能看到":["148.2"],"savesetting":["148.2"],"这个函数内的函数现在成为了单独的任务":["148.2"],"通过使用":["148.2"],"这种方式":["148.2"],"和手动写":["148.2"],"这种定时器方式相比":["148.2"],"在工程上有跟多的好处":["148.2"],"让步的时间点变成了声明式":["148.2"],"因此这种代码写起来更容易":["148.2"],"阅读和理解也更轻松":["148.2"],"使用这种方式":["148.3"],"通过结合时间来兼容不支持":["148.3"],"的浏览器":["148.3"],"尤其是使用截止时间或者在特定时间点":["148.3"],"让工作能在适当时候中断":["148.3"],"不论是通过让步于用户输入还是在特定时间节点":["148.3"],"几个api的差异":["148.3"],"目前提到的api对于拆解任务都有帮助":["148.3"],"但也有弊端":["148.3"],"让步与主线程则意味着延迟代码稍后执行":["148.3"],"即该部分代码被添加到稍后的事件队列中去了":["148.3"],"如果能控制页面中所有的代码":["148.3"],"就可以编排各个任务的优先级":["148.3"],"但是第三方js脚本可能不会服从安排":["148.3"],"也不可能真正意义上给所有的任务排优先级":["148.3"],"而是只能让他们成堆":["148.3"],"或者是让步于特定的用户交互行为":["148.3"],"幸运的是":["148.3"],"有一个专门编排优先级的api正在开发中":["148.3"],"相信能够解决这些问题":["148.3"],"you":["148.4","220.2"],"detection":["148.4"],"available":["148.4"],"consider":["148.4","206.5"],"polyfill":["148.4"],"并不是所有浏览器都支持":["148.4"],"可以检测是否空":["148.4"],"或者考虑使用":["148.4"],"结语":["148.5"],"虽然管理任务富有挑战":["148.5"],"但管理任务却能受益颇多":["148.5"],"网站能有更快的用户交互体验":["148.5"],"管理和调优没有万灵药":["148.5"],"但确有一系列不同的技巧":["148.5"],"最后总结重申一下":["148.5"],"管理任务时主要需要考虑以下几点":["148.5"],"遇到关键任务和用户侧的任务需要让步于主线程":["148.5"],"使用isinputpending来让步主线程让用户可以与页面交互":["148.5"],"适应posttask来调整任务的优先级":["148.5"],"每个函数尽可能地减少活动":["148.5"],"使用以上一个或多个方法":["148.5"],"就能够将应用中的任务进行管理":["148.5"],"根据用户需要调整优先级":["148.5"],"同时能保证相对不那么重要的工作得以继续执行":["148.5"],"这样给创造更好的用户体验":["148.5"],"网站响应更快":["148.5"],"使用更令人愉悦":["148.5"],"通过临时指针":["149.4"],"tmp":["149.4"],"来进行访问达到优化":["149.4"],"才对其src赋值真正的图片地址":["150.1"],"视窗高度":["150.5"],"innerwidth":["150.5","176.2"],"视窗宽度":["150.5"],"那么就体验会好很多":["150.7"],"参考视频讲解":["150.7"],"进入学习":["150.7","206.1"],"preimg3":["150.10"],"观看漫画时":["150.15"],"每次切换的下一张图片提前加载":["150.15"],"业务的稳定性怎么样":["151.1"],"秒":["151.2"],"performance实现":["151.3"],"接口可以获取到当前页面中与性能相关的信息":["151.4"],"以通过调用只读属性":["151.4"],"来获得":["151.4"],"添加的一个非标准扩展":["151.5"],"这个属性提供了一个可以获取到基本内存使用情况的对象":["151.5"],"不应该使用这个非标准的":["151.5"],"onresourcetimingbufferfull":["151.5"],"当浏览器的资源时间性能缓冲区已满时会触发":["151.5"],"返回unload处理完成时间":["151.7"],"如果当前url与上一个url是同源":["151.7"],"则返回的值是指上一个页面卸载到这个页面用户代理开始前时间":["151.7"],"如果与上一个不同域或者没有上一个url":["151.7"],"unloadeventstart":["151.7"],"返回unload开始处理时间":["151.7"],"则返回的值是指上一个页面卸载到这个页面用户代理后时间":["151.7"],"workerstart":["151.9"],"如果有":["151.9"],"worker":["151.9","173.13"],"的开始时间":["151.9"],"来监听首屏所有元素变化情况":["151.12"],"并记录时间":["151.12"],"最后取其最大值":["151.12"],"会去掉得分相同重复的值":["151.12"],"算出的时间需要加上":["151.12"],"可交互时间":["151.12"],"目前系统采用第二种实现方式":["151.12"],"如果第二种取不到":["151.12"],"但该值会比实际首屏时间要小":["151.12"],"也称用户完全可交互时间":["151.12"],"即整个页面首屏完全渲染出来":["151.12"],"用户完全可以交互":["151.12"],"一般首屏时间小于页面完全加载时间":["151.12"],"该指标值可以衡量页面访问速度":["151.12"],"可计算首屏时间":["151.13"],"某个专利":["151.13"],"loading":["151.13"],"状态下循环判断当前页面高度是否大于屏幕高度":["151.13"],"若大于":["151.13"],"则获取到当前页面的屏幕图像":["151.13"],"通过逐像素对比来判断页面渲染是否已满屏":["151.13"],"则会有":["152.2"],"的用户放弃移动网站的访问":["152.2"],"09":["152.3","159.5","159.9","159.13"],"但这":["152.5"],"浏览器实际上可以做非常多的事情":["152.5"],"接下来让我们来看看如何对一个网站进行性能分析":["152.5"],"布局偏移发生在任意时间":["152.6"],"当一个可见元素改变了它的位置":["152.6"],"从一个渲染帧到下一个":["152.6"],"webvitals02":["152.6"],"思考":["152.6"],"ready":["152.6"],"有什么区别":["152.6","175.10"],"上面介绍了":["152.6"],"种性能指标":["152.6"],"大家没必要搞懂每一个指标的定义":["152.6"],"我们来看看我们需要关注的":["152.6"],"核心的几个性能指标":["152.6"],"这三大指标是比较核心的":["152.7"],"但是如果我们想知道更多的":["152.7"],"性能指标测定方式":["152.7"],"我们该怎么做呢":["152.7"],"我们接着看":["152.7"],"第一次看这么多的属性":["152.8"],"大家心里一定和这张图片一样懵逼":["152.8"],"这是什么鬼":["152.8"],"咱们不慌":["152.8"],"先来一张图解释下页面加载的几个":["152.8"],"关键时刻":["152.8"],"01":["152.8","291.4"],"starttime":["152.11"],"navigationstart":["152.11"],"微秒":["152.12"],"在本地如何分析自己网站的性能":["152.13"],"精确到毫秒级的分析":["152.15"],"以及按调用层级":["152.15"],"事件分类的整理":["152.15"],"开始分析":["152.16"],"白色":["152.17"],"idle":["152.17","152.20"],"表示空闲时间":["152.17"],"net":["152.17"],"每条彩色横杠表示一种资源":["152.17"],"横杠越长":["152.17"],"检索资源所需的时间越长":["152.17"],"每个横杠的浅色部分表示等待时间":["152.17"],"从请求资源到第一个字节下载完成的时间":["152.17"],"通过该图我们可以看到页面中的内存使用的情况":["152.18"],"heap":["152.18"],"堆":["152.18"],"如果曲线一直在增长":["152.18"],"则说明存在内存泄露":["152.18"],"如果相当长的一段时间":["152.18"],"内存曲线都是没有下降的":["152.18"],"这里是有发生内存泄露的可能的":["152.18"],"其实在火焰图这块":["152.18"],"我们主要关心上诉的":["152.18"],"核心的点就够了":["152.18"],"另外如果想分析":["152.18"],"内存泄漏":["152.18"],"可以勾选":["152.18"],"composite":["152.20"],"layers":["152.20"],"的渲染引擎完成图片层合并时触发":["152.20"],"一个图片资源完成解码后触发":["152.20"],"一个图片被修改尺寸后触发":["152.20"],"paint":["152.20","206.16"],"合并后的层被绘制到对应显示区域后触发":["152.20"],"stystem":["152.20"],"系统用时":["152.20"],"空闲时间":["152.20"],"使用它可以比较方便地":["152.21"],"定位到具体的代码":["152.21"],"还给出了":["152.23"],"优化建议":["152.23"],"主要针对":["152.24"],"个方面":["152.24","181.0"],"做了分析":["152.24"],"去实现":["152.29"],"吧":["152.29"],"限流方式":["152.30"],"provide当前设备环境":["152.30"],"devtools开发模式":["152.30"],"simulate模拟手机":["152.30"],"form":["152.30","179.56"],"factor":["152.30"],"支持设备":["152.30"],"mobile":["152.30"],"desktop":["152.30","286.58"],"另一种是列表项高度动态的情况":["153.2"],"scrolltop":["153.4"],"0px":["153.6"],"px":["153.6"],"target":["153.7","153.11","173.24","176.2","177.13"],"itemcount":["153.8"],"itemheight":["153.8"],"onscroll":["153.11"],"要应用规则的文件":["154.1"],"用include去命中需要被babel":["154.1"],"loader处理的文件":["154.1"],"exclude去排除不需要被处理的文件":["154.1"],"从而缩小了":["154.1"],"处理文件的范围":["154.1"],"来解决":["154.2"],"他们在处理文件的时候已经帮我们做了处理":["154.2"],"这里我们来简单了解下hmr的原理":["154.2"],"面试时面试官最喜欢问原理性问题了":["154.2"],"获取到更新列表后":["154.3"],"该模块再次通过":["154.3"],"jsonp":["154.3"],"获取到最新的模块代码":["154.3"],"这就是上图中":["154.3"],"步骤":["154.3"],"而第":["154.3"],"步是决定":["154.3"],"成功与否的关键步骤":["154.3"],"在该步骤中":["154.3"],"hotmoduleplugin":["154.3"],"将会对新旧模块进行对比":["154.3"],"决定是否更新模块":["154.3"],"在决定更新模块后":["154.3"],"检查模块之间的依赖关系":["154.3"],"更新模块的同时更新模块间的依赖引用":["154.3"],"最后一步":["154.3"],"当":["154.3"],"失败后":["154.3"],"回退到":["154.3"],"操作":["154.3"],"也就是进行浏览器刷新来获取最新打包代码":["154.3"],"开发服务器":["154.4","154.5"],"devserver":["154.4","154.5","154.7","154.8","154.10","154.16","154.17"],"host":["154.4","154.5","154.7","154.8","154.10","154.16","154.17"],"localhost":["154.4","154.5","154.7","154.8","154.10","154.16","154.17"],"启动服务器域名":["154.4","154.5","154.7","154.8","154.10","154.16","154.17"],"启动服务器端口号":["154.4","154.5","154.7","154.8","154.10","154.16","154.17"],"是否自动打开浏览器":["154.4","154.5","154.7","154.8","154.10","154.16","154.17"],"hot":["154.4","154.5","195.7"],"开启hmr功能":["154.4","154.5"],"使用文件缓存":["154.6"],"对所有模块都进行分割":["154.7","154.16","154.17"],"其他内容用默认配置即可":["154.7","154.16","154.17"],"mode":["154.7","154.8","154.10","154.16","154.17","205.10"],"production":["154.7","154.8","154.10","154.16","154.17"],"开启多进程":["154.8"],"workers":["154.8"],"数量":["154.8"],"cachedirectory":["154.8"],"开启babel编译缓存":["154.8"],"无需其他配置":["154.9"],"css压缩":["154.10"],"optimization":["154.10","175.22"],"css压缩也可以写到optimization":["154.10"],"minimizer里面":["154.10"],"效果一样的":["154.10"],"当生产模式会默认开启terserplugin":["154.10"],"但是我们需要进行其他配置":["154.10"],"就要重新写了":["154.10","154.17"],"优化代码运行性能":["154.10","154.20"],"运行指令":["154.11","154.12","154.13","154.16"],"npx":["154.11","154.12","154.13","154.16"],"此时在":["154.11"],"目录我们能看到输出了两个":["154.11"],"配置了几个入口":["154.11"],"至少输出几个":["154.11"],"其他没有写的配置会使用上面的默认值":["154.12"],"minsize":["154.12"],"我们定义的文件体积太小了":["154.12"],"所以要改打包的最小文件体积":["154.12"],"minchunks":["154.12"],"此时我们会发现生成":["154.12"],"其中有一个就是提取的公共模块":["154.12"],"我们可以发现":["154.13"],"一旦通过":["154.13"],"动态导入语法导入模块":["154.13"],"模块就被代码分割":["154.13"],"同时也能按需加载了":["154.13"],"then":["154.14","206.8"],"count":["154.14"],"不能使用":["154.15","195.4"],"定义变量":["154.15"],"jpegtran":["154.16","154.17"],"progressive":["154.16","154.17"],"optipng":["154.16","154.17"],"optimizationlevel":["154.16","154.17"],"svgo":["154.16","154.17"],"prefixids":["154.16","154.17"],"sortattrs":["154.16","154.17"],"params":["154.16","154.17","283.1","283.2"],"xmlnsorder":["154.16","154.17"],"alphabetical":["154.16","154.17"],"代码分割配置":["154.16","154.17"],"splitchunks":["154.16","154.17"],"chunks":["154.16","154.17"],"观察打包输出":["154.16"],"文件名称":["154.16"],"压缩图片":["154.17"],"implementation":["154.17","227.1"],"imagemingenerate":["154.17"],"gifsicle":["154.17"],"interlaced":["154.17"],"exports":["154.18","195.7"],"智能预设":["154.18"],"能够编译es6语法":["154.18"],"presets":["154.18"],"按需加载core":["154.18"],"js的polyfill":["154.18"],"usebuiltins":["154.18"],"usage":["154.18"],"corejs":["154.18"],"proposals":["154.18"],"split":["154.20","179.33"],"对代码进行分割成多个":["154.20"],"从而使单个文件体积更小":["154.20"],"并行加载":["154.20"],"并通过":["154.20"],"动态导入语法进行按需加载":["154.20"],"从而达到需要使用时才加载该资源":["154.20"],"不用时不加载资源":["154.20"],"preload":["154.20"],"prefetch":["154.20"],"对代码进行提前加载":["154.20"],"等未来需要使用时就能直接使用":["154.20"],"从而用户体验更好":["154.20"],"进行兼容性处理":["154.20"],"让我们代码能运行在低版本浏览器":["154.20"],"对需引用代码":["154.20"],"优化手段":["155.0"],"基础":["155.0"],"特性将允许通过一些配置和新的接口":["155.8"],"使部分跨分包的内容可以等待下载后异步使用":["155.8"],"从而一定程度上解决这个限制":["155.8"],"文件路径压缩":["155.9"],"原子css":["155.9"],"类名压缩":["155.9"],"img3":["156.1","156.20"],"发现此时就已经解决了这个问题":["156.1"],"所以要非常注意一点":["156.1"],"一个好用的自定义":["156.1"],"一定要配合":["156.1"],"usecallback":["156.1"],"等":["156.1","176.17","195.4"],"marginleft":["156.2","156.24"],"gif":["156.2","156.3","156.10","156.14","156.18","156.20","156.21","159.0","162.3"],"我们可以看到":["156.2"],"当点击切换按钮的时候":["156.2"],"没有经过":["156.2"],"封装的函数会再次刷新":["156.2"],"而经过":["156.2"],"包裹的函数不会被再次刷新":["156.2"],"可以获取当前元素的所有属性":["156.2"],"并且返回一个可变的ref对象":["156.2"],"并且这个对象":["156.2"],"只有current属性":["156.2"],"可设置initialvalue":["156.2"],"从上述可知":["156.3"],"来获取对应元素的相关属性":["156.3"],"以此来做一些操作":["156.3"],"img1":["156.3"],"我们看到":["156.4"],"用重新赋值的方法":["156.4"],"改变了缓存的数据源":["156.4"],"减少了不必要的更新":["156.4"],"如过采取":["156.4"],"usestate":["156.4","208.5"],"势必会重新渲染":["156.4"],"判断是否更新值通过":["156.6"],"来判断":["156.6"],"通过存储在":["156.6"],"下的":["156.6"],"旧值":["156.6"],"新传入的":["156.6"],"新值":["156.6"],"来做对比":["156.6"],"判断两数组的数据是否一致":["156.6"],"来确定是否更新":["156.6"],"相信各位小伙伴已经用的熟的不能再熟了":["156.7"],"我们可以使用":["156.7"],"来模拟下":["156.7"],"componentdidmount":["156.7"],"componentwillunmount":["156.7","178.3"],"的功能":["156.7","175.10"],"效果如下":["156.10","156.14"],"img5":["156.10"],"特点的":["156.11"],"userective":["156.11"],"提出以下疑问":["156.11"],"感兴趣的":["156.11"],"可以先自行思考一下":["156.11"],"这个钩子的出入参该怎么设定":["156.11"],"如何将数据制作成响应式":["156.11"],"毕竟普通的操作无法刷新视图":["156.11"],"如何使用":["156.11"],"ts":["156.11","166.2","166.7","243.1"],"去写":["156.11"],"完善其类型":["156.11"],"如何更好的去优化":["156.11"],"useref":["156.12","156.15"],"来放":["156.12"],"initialstate":["156.12"],"拦截这块":["156.13"],"我们只需要拦截":["156.13"],"设置":["156.13","171.0"],"设置这块":["156.13"],"需要改变是图":["156.13"],"也就是说需要":["156.13"],"使用useupdate来强制刷新":["156.13"],"获取这块":["156.13"],"需要判断其是否为对象":["156.13"],"是的话继续递归":["156.13"],"不是的话返回就行":["156.13"],"ul":["156.14"],"li":["156.14","159.2","159.5","159.9","159.13"],"useuse":["156.14"],"案例2":["156.14"],"useeventlistener":["156.14","156.26"],"缘由":["156.14"],"我们监听各种事件的时候需要做监听":["156.14"],"监听点击事件":["156.14"],"键盘事件":["156.14"],"滚动事件等":["156.14"],"我们将其统一封装起来":["156.14"],"方便后续调用":["156.14"],"说白了就是在":["156.14"],"的基础上进行封装":["156.14"],"我们先来想想在此基础上需要什么":["156.14"],"首先":["156.14","180.0"],"的入参可分为三个":["156.14"],"第一个":["156.14"],"是事件":["156.14"],"keydown":["156.14"],"第二个回调函数":["156.14"],"所以不需要出参":["156.14"],"第三个就是目标":["156.14"],"是某个节点还是全局":["156.14"],"在这里需要注意一点就是在":["156.14"],"销毁的时候需要移除对应的监听事件":["156.14"],"是因为我们用":["156.15"],"拿到的值都是":["156.15"],"才会有这个":["156.16"],"的诞生":["156.16"],"removeeventlistener":["156.17"],"在这里只用":["156.17"],"是因为":["156.17"],"在更新和初始化的情况下都需要使用":["156.17"],"必须要防止没有":["156.17"],"这个属性的情况":["156.17"],"监听的目标有可能没有加载出来":["156.17"],"useevent":["156.18"],"我们可以利用":["156.18"],"这个钩子去封装其他钩子":["156.18"],"鼠标悬停":["156.18"],"长按事件":["156.18"],"鼠标位置等":["156.18"],"在这里在举一个鼠标悬停的小例子":["156.18"],"案例3":["156.19"],"有关时间的hooks":["156.19"],"在这里主要介绍有关时间的三个hooks":["156.19"],"分别是":["156.19"],"usetimeout":["156.19"],"useinterval":["156.19"],"usecountdown":["156.19"],"效果展示":["156.20","156.21"],"img4":["156.21"],"formattedres":["156.22"],"as":["156.23","195.9","205.11","225.4","226.1","231.1","250.3"],"停止":["156.24","281.2"],"可见setstate是异步的操作":["157.0"],"我们并不能在执行完setstate之后立马拿到最新的state的结果":["157.0"],"组件嵌套时影响子组件中的状态":["157.1"],"遇到到这个问题时你会怎么来做":["158.1","164.1"],"遇到这个问题还是先来分析一下这个问题的设计思路":["158.1","164.1"],"中的顺序需和":["158.2","164.2"],"中的保持一致":["158.2","164.2"],"好":["158.2","164.2"],"我的设计思路就是这样的":["158.2","164.2"],"下面就要来开始开发工作啦":["158.2","164.2"],"希望看完这篇文章之后你也能轻松掌握前端控制并发数量的问题":["158.5","164.5"],"栓q":["158.5","164.5"],"轮询":["159.0"],"客户端在拿到数据后等待一下然后继续发送请求":["159.1"],"如此反复":["159.1","159.4"],"ol":["159.2","159.5","159.13"],"打开chrome的devtools我们发现":["159.2"],"前端每隔3s向后端请求一次":["159.2"],"请求得相当频繁":["159.2"],"并且在后端没有产生新数据的时候":["159.2"],"很多请求的返回值是空的":["159.2"],"也就是说":["159.2"],"大多数的网络资源都被浪费了":["159.2"],"请求有很多空响应":["159.2"],"这对于一些数据实时性要求高的应用例如im系统是致命的":["159.3"],"服务端给客户端返回了最新的数据":["159.4"],"客户端在拿到结果后再次发送下一个请求":["159.4"],"值得注意的是":["159.5"],"这个时候":["159.5","175.12"],"我们打开浏览器的调试工具可以发现浏览器每一次发出的请求都不会立马收到回复":["159.5"],"而是pending一段时间后":["159.5"],"大概是5秒":["159.5"],"才会有结果":["159.5"],"并且结果里面都是有数据的":["159.5"],"截屏2022":["159.5","159.9","159.13"],"04":["159.5"],"上午8":["159.5"],"因此相对于websocket和sse它多了一个发送新请求的阶段":["159.6"],"对实时性和性能还是有影响的":["159.6"],"它们之间后面都是基于websocket协议来通信了":["159.8"],"打开chrome的网络调试工具点击ws":["159.9"],"你会发现客户端和服务端只有一个websocket连接":["159.9"],"它们所有的通信都是发生在这个连接上面的":["159.9"],"下午5":["159.9"],"这个时候客户端需要自动重连":["159.10"],"要想突破这个限制你就需要将从客户端到服务端之间所有的代理层的配置都改掉":["159.10"],"在现实中这可能是不可行的":["159.10"],"也就是说它":["159.12"],"不允许客户端向服务端发送消息":["159.12"],"打开chrome的网络调试工具":["159.13"],"会发现http请求变成了eventstream类型":["159.13"],"而且服务端给客户端所有的事件推送都在这个连接上":["159.13"],"而无需建立新的连接":["159.13"],"下午6":["159.13"],"客户端需要不断和服务端进行重连":["159.14"],"dasdsadas":["160.0"],"前端沙箱的使用场景":["162.0"],"浏览器打开的每个页面就是一个沙箱":["162.0"],"保证彼此独立互不影响":["162.0"],"请求回来的字符串时或引入不知名第三方":["162.0"],"库时":["162.0"],"可能需要创造一个沙箱来执行这些代码":["162.0"],"模板表达式的计算是运行在一个沙箱中":["162.0"],"模板字符串中的表达式只能获取部分全局对象":["162.0"],"详情见源码":["162.0"],"微前端框架":["162.0"],"qiankun":["162.0"],"为了实现js隔离":["162.0"],"在多种场景下均使用了沙箱":["162.0"],"沙箱的多种实现方式":["162.0"],"先聊下":["162.0"],"with":["162.0","218.5"],"这个关键字":["162.0"],"作用在于改变作用域":["162.0"],"可以将某个对象添加到作用域链的顶部":["162.0"],"with对于沙箱的意义":["162.0"],"可以实现所有变量均来自可靠或自主实现的上下文环境":["162.0"],"而不会从全局的执行环境中取值":["162.0"],"相当于做了一层拦截":["162.0"],"实现隔离的效果":["162.0"],"若提供的ctx上下文对象中":["162.1"],"没有找到某个变量时":["162.1"],"代码仍会沿着作用域链一层层向上查找":["162.1"],"假如上文示例中的":["162.1"],"对象没有设置":["162.1"],"foo属性":["162.1"],"打印的结果还是外层作用域的":["162.1"],"执行func":["162.2"],"报错":["162.2"],"uncaught":["162.2"],"执行结果":["162.2"],"新添加image字段":["162.3"],"禁止使用new":["162.3"],"image来调接口":["162.3"],"将globalproxy对象":["162.3","286.69"],"添加到新环境作用域链的顶部":["162.3","286.69"],"持续优化":["162.3"],"经过与评论区小伙伴的交流":["162.3"],"可以通过":["162.3","173.39"],"调接口":["162.3"],"确实是个漏洞":["162.3"],"不需要创建dom":["162.3"],"发送图片请求":["162.3"],"img":["162.3","175.6"],"www":["162.3","177.13"],"设计你的插件系统":["163.0"],"如果你的项目比较大":["163.0"],"那么可以参考一些开源的插件架构":["163.0"],"例如jquery":["163.0"],"d3":["163.0"],"ckeditor或者其它":["163.0"],"当然你也可以熟悉js的设计模式":["163.0"],"或者阅读addy":["163.0"],"osmani的":["163.0"],"学习js设计模式":["163.0"],"这为你提供了许多优秀的插件架构选项":["163.0"],"了解这些选项可以帮助你更好地平衡使用你项目所有人的需求":["163.0"],"除了设计模式外":["163.0"],"你还可以利用优秀的软件开发原则来做出这类决策":["163.0"],"如前面提到的":["163.0"],"开闭原则":["163.0"],"松耦合":["163.0"],"还有一些其它相关的原则":["163.0"],"得墨忒耳定律":["163.0"],"依赖注入等":["163.0"],"看起来很多":["163.0"],"但作为一个插件系统设计者":["163.0"],"你必须得研究":["163.0"],"因为没有什么比让每个人都重写他们的插件更痛苦":["163.0"],"当你改变你开源项目的插件架构时":["163.0"],"将使你的开源项目失去信任":["163.0"],"会大大降低开发者为你的项目作出贡献的热度":["163.0"],"以及安全性的解决方案":["166.0"],"refreshtoken":["166.1"],"应运而生":["166.1"],"来刷新":["166.1"],"的有效期":["166.1"],"以提升用户使用感受":["166.2"],"后端如何实现":["166.2"],"技术栈":["166.2","166.7"],"koa":["166.2"],"mysql2":["166.2"],"加密使用的是":["166.2"],"jsonwebtoken":["166.2"],"token时间戳的判断使用的是":["166.2"],"dayjs":["166.2"],"refresh":["166.3","166.9"],"用户登录失败":["166.3"],"返回新的token给前端":["166.4"],"await":["166.5","166.6","173.30","220.2"],"无效的token":["166.6"],"mobx":["166.7"],"通用错误":["166.8"],"通用提示":["166.8"],"headers":["166.9","204.2"],"bearer":["166.9"],"更换authorization为refreshtoken":["166.9"],"query":["167.0"],"题目分析":["167.1"],"考察知识点":["167.4"],"loop":["167.4"],"防抖":["167.4","180.2"],"这是一个很常见的业务问题":["167.4"],"考察面试者的动手实践能力":["167.4"],"请点击当前屏幕":["168.3"],"获取ric的相关参数":["168.3"],"cornflowerblue":["168.7"],"流程回到步骤9":["168.11"],"直到requestidlecallback回调函数队列清空或当前帧没有空闲时间":["168.11"],"流程回到步骤1":["168.11"],"如果requestidlecallback设置了第二个参数timeout":["168.13"],"则会在超时后的下一帧强制执行":["168.13"],"requestanimationframe":["168.19"],"执行动画":["168.19"],"方法时候返回的id":["168.20"],"在后续的调用不会重用同一个定时器编号":["168.24"],"但是不同的对象使用独立的编号池":["168.24"],"ms范围内执行某个回调的":["168.25"],"这里我们提到时间范围的概念":["168.25"],"这里就不得不提到":["168.25"],"最小延迟时间的概念":["168.25"],"嵌套级别达到特定深度时":["168.26"],"都会出现超时延迟":["168.26"],"那么浏览器中实现0ms延时的定时器":["168.26"],"这里就需要用":["168.26"],"这个并不在本次内容介绍中说明":["168.26"],"可能会执行多次":["168.28"],"拿到的仍然不是原图片":["169.2"],"部分代码如下":["169.3"],"after":["169.3"],"disconnect":["169.4"],"attributes":["169.4"],"observe":["169.4"],"subtree":["169.4"],"初始化":["169.4","178.7"],"启动监控":["169.4"],"定义指令配置项":["169.4"],"椭圆":["170.4"],"的大小和形状来指定":["170.4"],"渐变颜色默认第一个颜色位置是0":["170.4"],"最后一个颜色位置是100":["170.4"],"将优惠券的背景修改为渐变色试试":["170.8"],"c1":["170.8","170.12"],"orange":["170.8"],"c2":["170.8","170.12"],"ff2e63":["170.8"],"linear":["170.8","170.12"],"35deg":["170.8"],"drop":["170.11"],"2px":["170.11"],"rgba":["170.11","171.0"],"在这里插入图片描述":["170.12","170.14","206.14","206.16"],"背景设置为渐变色":["170.12"],"to":["170.12","179.56","206.15","219.6"],"transparent":["170.14"],"页面的背景色":["170.14"],"bg":["170.14"],"130rpx":["170.15"],"25rpx":["170.15"],"214rpx":["170.15"],"35px":["170.15"],"484rpx":["170.15"],"35rpx":["170.15"],"文本效果":["171.0"],"颜色":["171.0"],"新增":["171.0"],"渐变":["171.0"],"线性渐变":["171.0"],"径向渐变":["171.0"],"字体":["171.0"],"font":["171.0","195.4"],"2d":["171.0"],"3d转换":["171.0"],"过渡与动画":["171.0"],"keyframes":["171.0"],"多列布局":["171.0"],"媒体查询":["171.0"],"隐藏页面中的某个元素的方法有哪些":["171.0"],"隐藏类型":["171.0"],"屏幕并不是唯一的输出机制":["171.0"],"比如说屏幕上看不见的元素":["171.0"],"隐藏的元素":["171.0"],"其中一些依然能够被读屏软件阅读出来":["171.0"],"因为读屏软件依赖于可访问性树来阐述":["171.0"],"为了消除它们之间的歧义":["171.0"],"我们将其归为三大类":["171.0"],"完全隐藏":["171.0"],"元素从渲染树中消失":["171.0"],"不占据空间":["171.0"],"视觉上的隐藏":["171.0"],"屏幕中不可见":["171.0"],"语义上的隐藏":["171.0"],"读屏软件不可读":["171.0"],"但正常占据空":["171.0"],"新增属性":["171.0"],"posoition":["171.0"],"为":["171.0","178.4","179.24","204.2"],"通过设置":["171.0"],"等值":["171.0"],"将其移出可视区域":["171.0"],"99999px":["171.0"],"将其移出可视区域范围":["171.0"],"可视区域占位":["171.0"],"语义上隐藏":["171.0"],"aria":["171.0"],"可见":["171.0"],"a元素除了用于导航外":["172.0"],"还有什么作用":["172.0"],"href属性中的url可以是浏览器支持的任何协议":["172.0"],"所以a标签可以用来手机拨号":["172.0"],"tel":["172.0"],"也可以用来发送短信":["172.0"],"sms":["172.0"],"还有邮件等等":["172.0"],"a元素最常见的就是用来做":["172.0"],"锚点":["172.0"],"下载文件":["172.0"],"锚点可以在点击时快速定位到一个页面的某个位置":["172.0"],"而下载的原理在于a标签所对应的资源浏览器无法解析":["172.0"],"于是浏览器会选择将其下载下来":["172.0"],"你知道seo中的tdk吗":["172.0"],"在seo中":["172.0"],"tdk其实就是":["172.0"],"description":["172.0"],"keywords":["172.0"],"这三个标签":["172.0"],"title表示标题标签":["172.0"],"description是描述标签":["172.0"],"keywords是关键词标签":["172.0"],"中的原型方法是不可被枚举的":["173.1"],"定义原型方法使用了属性描述符":["173.1"],"让其不可枚举":["173.1"],"原型上的方法不允许通过":["173.1"],"原型方法中加入了":["173.1"],"书写简单":["173.2"],"声明变量之前访问到该变量":["173.3"],"所以在":["173.3","206.12"],"的地方就会报错":["173.3"],"的值在初始化的时候会被初始化为":["173.4"],"之后就完全是考察数组以及数组方法的使用了":["173.4"],"行放入到异步队列里面的":["173.5"],"先执行":["173.5"],"函数里面的同步代码":["173.5"],"然后是最后一个异步":["173.5"],"之后直接短路了":["173.6"],"返回":["173.6"],"那句话":["173.7"],"是移除点击事件":["173.7"],"当调用实例化对象的":["173.7"],"方法时":["173.7"],"点击事件就会被移除":["173.7"],"只会从自己的作用域链的上一层继承":["173.8","173.23"],"在上面的代码中":["173.9"],"我们在":["173.9"],"方法中创建了一个中间层":["173.9"],"之后让":["173.9"],"的原型和父类的原型指向同一地址":["173.9"],"再让子类的原型指向这个":["173.9"],"的实例化对象来实现了继承":["173.9"],"这样我们的继承":["173.9"],"属性就不会像之前那样实例对象上一份":["173.9"],"原型对象上一份":["173.9"],"拥有两份":["173.9"],"圣杯模式继承是目前":["173.9"],"继承的最优解":["173.9"],"最后我再画个图帮助大家理解":["173.9"],"组合模式":["173.9"],"伪经典模式":["173.9"],"下的继承示意图":["173.9"],"20210808102111003":["173.9"],"圣杯模式下的继承示意图":["173.9"],"20210808101303180":["173.9"],"如果该函数没有返回对象":["173.10","173.76"],"当这个新函数被调用时":["173.11"],"的第一个参数将作为它运行时的":["173.11"],"之后的一序列参数将会在传递的实参前传入作为它的参数":["173.11"],"microtask":["173.12"],"宏任务可以理解为每次执行栈所执行的代码就是一个宏任务":["173.12"],"包括每次从事件队列中获取一个事件回调并放到执行栈中所执行的任务":["173.12"],"微任务可以理解为当前宏任务执行结束后立即执行的任务":["173.12"],"引擎更新至版本":["173.13"],"tls":["173.13"],"模块默认使用":["173.13"],"wheswg":["173.13"],"解析器":["173.13"],"隐藏子进程的控制台窗口默认改为了":["173.13"],"freebsd":["173.13"],"不再支持":["173.13"],"增加了多线程":["173.13"],"threads":["173.13"],"rejected":["173.15","173.89"],"返回值将直接传递给回调":["173.15"],"的返回值":["173.15"],"也是新的":["173.15"],"的指向是由外层":["173.16"],"函数或全局":["173.16"],"作用域来决定的":["173.16"],"调用了两次父类构造函数":["173.17"],"耗内存":["173.17"],"子类的构造函数会代替原型上的那个父类构造函数":["173.17"],"寄生组合式继承":["173.17"],"圣杯模式":["173.17"],"修复了组合继承的问题":["173.17"],"事件对象以一个与捕获阶段相反的方向从事件目标传播经过其祖先节点传播到":["173.18"],"这个阶段被称之为冒泡阶段":["173.18"],"在此阶段注册的事件监听器会对相应的冒泡事件进行处理":["173.18"],"封装":["173.19","173.73"],"实现类和继承":["173.19","173.73"],"文档中嵌套层次最深的那个节点":["173.20"],"接收":["173.20"],"然后逐级向上传播到较为不具体的节点":["173.20"],"文档":["173.20"],"循环中声明的变量会泄露成全局变量":["173.21"],"其次就是":["173.21"],"中的内层变量可能会覆盖外层变量":["173.21"],"块级作用域的出现解决了这些问题":["173.21"],"只能在块作用域里访问":["173.22"],"不能跨块访问":["173.22"],"super":["173.24"],"动态属性":["173.25"],"无法添加动态属性":["173.25"],"可以添加动态属性":["173.25","173.37"],"变量赋值":["173.25","173.37"],"赋值的是值":["173.25","173.37"],"赋值的是地址":["173.25","173.37"],"和任何值都不相等":["173.26"],"包括它自己本身":["173.26"],"函数的时候":["173.27"],"就会产生一个":["173.27"],"变量被声明了":["173.28"],"但没有赋值时":["173.28"],"就等于":["173.28"],"调用函数时":["173.28"],"应该提供的参数没有提供":["173.28"],"该参数等于":["173.28"],"对象没有赋值的属性":["173.28"],"该属性的值为":["173.28"],"函数没有返回值时":["173.28"],"替代":["173.30"],"yield":["173.30"],"替代生成器的":["173.30"],"号":["173.30"],"是立即下载但延迟执行":["173.31"],"加载后续文档元素的过程将和脚本的加载并行进行":["173.31"],"异步":["173.31","178.5"],"但是脚本的执行要在所有元素解析完成之后":["173.31"],"domcontentloaded":["173.31"],"事件触发之前完成":["173.31"],"是立即下载并执行":["173.31"],"加载和渲染后续文档元素的过程将和":["173.31"],"脚本的加载与执行并行进行":["173.31"],"主线程接着执行":["173.32"],"从而进入一个无限的循环":["173.32"],"这就是事件循环":["173.32"],"依次层层向上搜索":["173.33"],"直到找到一个名字匹配的属性或到达原型链的末尾":["173.33"],"这种一层一层的关系":["173.34"],"就是作用域链":["173.34"],"因此会占用更多的内存":["173.35"],"新提供的方法":["173.39"],"isarray":["173.39"],"方法进行的是浅拷贝":["173.40"],"拷贝的是对象的属性的引用":["173.40"],"而不是对象本身":["173.40"],"proto":["173.41"],"原型链上":["173.41"],"如果有就返回":["173.41"],"否则返回":["173.41"],"以此类推":["173.42"],"直到有未访问的引用":["173.42"],"可以从根访问":["173.42"],"为止":["173.42"],"除标记的对象外":["173.42"],"所有对象都被删除":["173.42"],"数据结构":["173.43"],"生成器":["173.43"],"对象不同的是":["173.44"],"的键是不可枚举的":["173.44"],"不提供列出其键的方法":["173.44"],"列表是否存在取决于垃圾回收器的状态":["173.44"],"是不可预知的":["173.44"],"的出现就是为了解决回调地狱的问题":["173.45"],"constructor":["173.46"],"次":["173.48"],"节流如字面意思":["173.48"],"会稀释函数的执行频率":["173.48"],"无法全部加载到内存中":["173.51"],"外部存储":["173.51"],"文件等":["173.51"],"进行排序":["173.51"],"20210813134746501":["173.51"],"解析后的代码":["173.52"],"库负责":["173.52"],"的执行":["173.52"],"它将不同的任务分配给不同的线程":["173.52"],"形成一个":["173.52"],"以异步的方式将任务的执行结果返回给":["173.52"],"引擎":["173.52"],"引擎再将结果返回给用户":["173.52"],"而且不能修改":["173.54"],"返回函数":["173.55"],"函数当做参数传递":["173.55"],"闭包的应用场景":["173.55"],"柯里化":["173.55"],"bind":["173.55","179.28","210.1","219.3","283.6"],"异步操作成功":["173.56"],"使用函数":["173.58"],"上面的代码中":["173.59"],"数组中第三项是空值":["173.59"],"后会对空项进行移除":["173.59"],"参考答案":["173.61"],"直播课或者录播课进行解析":["173.61"],"proxy方式只能代理到proxy实例对象上":["173.62"],"这一点在其它说法中是proxy对象不需要侵入对象就可以实现代理":["173.62"],"实际上object":["173.62"],"defineproperty方式也可以不侵入":["173.62"],"关键字":["173.63"],"直接使用该关键字就能够实现继承":["173.63"],"尾部调用可以解决递归的这个问题":["173.64"],"v8":["173.64"],"引擎做了尾部调用优化":["173.64"],"我们在写代码的时候也要注意尾部调用写法":["173.64"],"递归的爆栈问题可以通过将递归改写成枚举的方式来解决":["173.64"],"就是通过":["173.64"],"来代替递归":["173.64"],"里面新添加的基本数据类型":["173.66"],"值会返回":["173.67"],"需要注意的是":["173.69"],"只能用来判断两个对象是否属于实例关系":["173.69"],"而不能判断一个对象实例具体属于哪种类型":["173.69"],"返回的也会是":["173.69"],"比较":["173.70"],"基本类型的比较是值的比较":["173.70"],"只要它们的值相等就认为他们是相等的":["173.70"],"引用数据类型的比较是引用的比较":["173.70"],"看其的引用是否指向同一个对象":["173.70"],"说明没办法访问这个值了":["173.74"],"当垃圾收集器下一次运行时":["173.74"],"它就会释放引用次数是0的值所占的内存":["173.74"],"这个操作被委托在整个原型链上":["173.75"],"这个就是我们说的原型链":["173.75"],"所以将位于所有变量声明之上":["173.78"],"在编译阶段变量和函数声明会被放入内存中":["173.78"],"但是你在代码中编写它们的位置会保持不变":["173.78"],"中首选":["173.79"],"进行逻辑比较":["173.79"],"方法看作是加强版的严格相等":["173.80"],"等着你往里面跳":["173.83"],"返回的结果则是所有":["173.84"],"中最先返回的结果":["173.84"],"不关心是成功还是失败":["173.84"],"你可以在其它文件或模块中通过":["173.87"],"常量":["173.87"],"名的方式":["173.87"],"将其导入":["173.87"],"以便能够对其进行使用":["173.87"],"在一个文件或模块中":["173.87"],"import可以有多个":["173.87"],"default仅有一个":["173.87"],"通过export方式导出":["173.87"],"在导入时要加":["173.87"],"default则不需要":["173.87"],"表达式会抛出异常值":["173.89"],"特点之类的问题":["173.90"],"返回的是函数形参的个数":["173.91"],"题":["173.92"],"这样":["173.94","254.3"],"函数就不会修改任何外部的状态了":["173.94"],"引入的模块化":["173.95"],"支持import":["173.95"],"来引入另一个":["173.95"],"可以发表一些自己的看法和感想":["173.96"],"jack":["173.98"],"rose":["173.98"],"getname":["173.98"],"这里的":["173.98"],"指向":["173.98","179.26"],"运用":["173.98"],"方法更改":["173.98"],"another2":["173.98"],"这里":["173.98"],"指向了":["173.98"],"对象了":["173.98"],"自定义方法和自带的flat返回结果一致":["173.99"],"timeend":["173.99"],"将该值存起来":["174.4"],"continue":["174.12","215.2","256.5","256.6"],"比较相同位置的数字大小":["174.12"],"这里去重是解决str中有重复的字母":["174.20"],"比如str为":["174.20"],"aacd":["174.20"],"找不到对应值":["174.29"],"说明是根结点":["174.29"],"直接插到根数组中":["174.29"],"右子树都符合要求":["174.44"],"则是一个二叉查找树":["174.44"],"回溯算法":["174.48"],"不符合要求":["174.48"],"退回来":["174.48"],"换一条路再试":["174.48"],"叶子节点直接pop":["174.48"],"子节点中的所有的节点递归完成后再pop":["174.48"],"pop":["174.48","179.13","228.2"],"则以后面的价格重新买入":["174.52"],"以后再往后移动一次":["174.60"],"就要写入当前窗口的最大值":["174.60"],"lastindexof":["174.64","286.40"],"存储对应的值":["174.64"],"unshift":["174.64"],"对dp进行截取":["174.64"],"保证只取最大项之前的数据":["174.64"],"也就是说无论进行多少次put操作":["175.0"],"其结果并没有不同":["175.0"],"可以理解为时":["175.0"],"更新数据":["175.0"],"post请求是向服务器端发送数据":["175.0"],"该请求会改变数据的种类等资源":["175.0"],"它会创建新的内容":["175.0"],"可以理解为是":["175.0"],"创建数据":["175.0"],"常见的http请求头和响应头":["175.1"],"agent":["175.2"],"浏览器的用户代理字符串":["175.2"],"表示后面的文档属于什么mime类型":["175.3"],"参数格式":["175.4"],"admin":["175.4"],"onreadystatechange":["175.4"],"onreadystatechange会触发多次":["175.4","175.5"],"一般需要判断xhr":["175.4","175.5"],"readstate":["175.4","175.5"],"才获取响应数据":["175.4","175.5"],"readystate":["175.4"],"responsetext":["175.4","175.5"],"恭喜您":["175.6"],"上传头像成功":["175.6"],"iptfile":["175.7"],"函数接收一个":["175.8"],"函数作为参数":["175.8"],"服务器推送":["175.9"],"允许服务器未经请求":["175.9"],"主动向客户端发送资源":["175.9"],"这叫做服务器推送":["175.9"],"使用服务器推送提前给客户端推送必要的资源":["175.9"],"这样就可以相对减少一些延迟时间":["175.9"],"这里需要注意的是":["175.9"],"下服务器主动推送的是静态资源":["175.9"],"以及使用":["175.9"],"等方式向客户端发送即时数据的推送是不同的":["175.9"],"什么是队头堵塞":["175.9"],"队头阻塞是由":["175.9"],"基本的":["175.9"],"应答":["175.9"],"模型所导致的":["175.9"],"规定报文必须是":["175.9"],"一发一收":["175.9"],"这就形成了一个先进先出的":["175.9"],"串行":["175.9"],"队列":["175.9"],"队列里的请求是没有优先级的":["175.9"],"只有入队的先后顺序":["175.9"],"排在最前面的请求会被最优先处理":["175.9"],"如果队首的请求因为处理的太慢耽误了时间":["175.9"],"那么队列里后面的所有请求也不得不跟着一起等待":["175.9"],"结果就是其他的请求承担了不应有的时间成本":["175.9"],"造成了队头堵塞的现象":["175.9"],"而协议tls":["175.10"],"ssl具有":["175.10"],"身份验证":["175.10"],"信息加密":["175.10"],"完整性校验":["175.10"],"可以避免此类问题发生":["175.10"],"安全层的主要职责就是":["175.10"],"对发起的http请求的数据进行加密操作":["175.10"],"对接收到的http的内容进行解密操作":["175.10"],"ssl的工作原理":["175.10"],"tls全称":["175.10"],"安全传输层协议":["175.10"],"transport":["175.10"],"layer":["175.10"],"security":["175.10"],"及其前身":["175.10"],"安全套接层":["175.10"],"sockets":["175.10"],"缩写作ssl":["175.10"],"是介于tcp和http之间的一层安全协议":["175.10"],"不影响原有的tcp协议和http协议":["175.10"],"所以使用https基本上不需要对http页面进行太多的改造":["175.10"],"ssl的功能实现主要依赖三类基本算法":["175.10"],"散列函数hash":["175.10"],"对称加密":["175.10"],"非对称加密":["175.10"],"这三类算法的作用如下":["175.10"],"散列算法用来验证信息的完整性":["175.10"],"对称加密算法采用协商的秘钥对数据加密":["175.10"],"非对称加密实现身份认证和秘钥协商":["175.10"],"微信图片":["175.10","190.2","190.4"],"20221001151505":["175.10"],"非对称加密是什么":["175.10"],"对称加密和非对称加密是安全传输层里的加密算法":["175.10"],"对称加密的特点是文件加密和解密使用相同的密钥":["175.10"],"即加密密钥也可以用作解密密钥":["175.10"],"这种方法在密码学中叫做对称加密算法":["175.10"],"对称加密算法使用起来简单快捷":["175.10"],"密钥较短":["175.10"],"且破译困难":["175.10"],"通信的双":["175.10"],"都使":["175.10"],"同":["175.10"],"个秘钥进":["175.10"],"加密":["175.10"],"解密":["175.10"],"两个人事先约定的暗号":["175.10"],"就属于对称加密":["175.10"],"计算量小":["175.10"],"加密速度快":["175.10"],"加密效率高":["175.10"],"在数据传送前":["175.10"],"发送方和接收方必须商定好秘钥":["175.10"],"然后双方保存好秘钥":["175.10"],"如果一方的秘钥被泄露":["175.10"],"那么加密信息也就不安全了":["175.10"],"最不安全的地方":["175.10"],"就在于第一开始":["175.10"],"互相约定密钥的时候":["175.10"],"传递密钥":["175.10"],"使用场景":["175.10"],"本地数据加密":["175.10"],"通信":["175.10"],"网络传输等":["175.10"],"通信的双方使用不同的秘钥进行加密解密":["175.10"],"即秘钥对":["175.10"],"私钥":["175.10"],"公钥":["175.10"],"特征":["175.10"],"私钥可以解密公钥加密的内容":["175.10"],"公钥可以解密私钥加密的内容":["175.10"],"非对称加密的特点是":["175.10"],"非对称加密与对称加密相比其安全性更好":["175.10"],"加密和解密花费时间长":["175.10"],"速度慢":["175.10"],"只适合对少量数据进行加密":["175.10"],"会话前期":["175.10"],"ca":["175.10"],"数字证书":["175.10","175.11"],"登录认证等":["175.10"],"数字证书是什么":["175.10"],"使用一种":["175.10"],"算法来对公钥和其他信息进行加密":["175.10"],"生成一个信息摘要":["175.10"],"然后让有公信力的认证中心":["175.10"],"用它的私钥对消息摘要加密":["175.10"],"形成签名":["175.10"],"最后将原始的信息和签名合在一起":["175.10"],"称为":["175.10"],"当接收方收到数字证书的时候":["175.10"],"先根据原始信息使用同样的":["175.10"],"算法生成一个摘要":["175.10"],"然后使用公证处的公钥来对数字证书中的摘要进行解密":["175.10"],"最后将解密的摘要和生成的摘要进行对比":["175.10"],"就能发现得到的信息是否被更改了":["175.10"],"dns劫持由于涉嫌违法":["175.12"],"已经被监管起来":["175.12"],"现在很少会有dns劫持":["175.12"],"http劫持依然":["175.12"],"常盛":["175.12"],"最有效的办法就是全站https":["175.12"],"将http加密":["175.12"],"这使得运营商":["175.12"],"法获取明":["175.12"],"就":["175.12"],"法劫持你的响应内容":["175.12"],"进程与线程的概念":["175.12"],"从本质上说":["175.12"],"进程和线程都是":["175.12"],"工作时间片的一个描述":["175.12"],"进程描述了":["175.12"],"在运行指令及加载和保存上下文所需的时间":["175.12"],"放在应用上来说就代表了一个程序":["175.12"],"线程是进程中的更小单位":["175.12"],"描述了执行一段指令所需的时间":["175.12"],"进程是资源分配的最小单位":["175.12"],"线程是cpu调度的最小单位":["175.12"],"进程和线程的区别":["175.12"],"进程可以看做独立应用":["175.12"],"线程不能":["175.12"],"资源":["175.12"],"进程是cpu资源分配的最小单位":["175.12"],"是能拥有资源和独立运行的最小单位":["175.12"],"线程是建立在进程的基础上的一次程序运行单位":["175.12"],"一个进程中可以有多个线程":["175.12"],"通信方面":["175.12"],"线程间可以通过直接共享同一进程中的资源":["175.12"],"而进程通信需要借助":["175.12"],"进程间通信":["175.12"],"调度":["175.12"],"进程切换比线程切换的开销要大":["175.12"],"线程是cpu调度的基本单位":["175.12"],"线程的切换不会引起进程切换":["175.12"],"但某个进程中的线程切换到另一个进程中的线程时":["175.12"],"会引起进程切换":["175.12"],"系统开销":["175.12"],"由于创建或撤销进程时":["175.12"],"系统都要为之分配或回收资源":["175.12"],"如内存":["175.12"],"其开销远大于创建或撤销线程时的开销":["175.12"],"同理":["175.12"],"在进行进程切换时":["175.12"],"涉及当前执行进程":["175.12"],"环境还有各种各样状态的保存及新调度进程状态的设置":["175.12"],"而线程切换时只需保存和设置少量寄存器内容":["175.12"],"开销较小":["175.12"],"如何实现浏览器内多个标签页之间的通信":["175.12"],"实现多个标签页之间的通信":["175.12"],"本质上都是通过中介者模式来实现的":["175.12"],"因为标签页之间没有办法直接通信":["175.12"],"因此我们可以找一个中介者":["175.12"],"让标签页和中介者进行通信":["175.12"],"然后让这个中介者来进行消息的转发":["175.12"],"通信方法如下":["175.12"],"协议":["175.12"],"协议可以实现服务器推送":["175.12"],"所以服务器就可以用来当做这个中介者":["175.12"],"标签页通过向服务器发送数据":["175.12"],"然后由服务器向其他标签页推送转发":["175.12"],"shareworker":["175.12"],"的方式":["175.12"],"会在页面存在的生命周期内创建一个唯一的线程":["175.12"],"并且开启多个页面也只会使用同一个线程":["175.12"],"这个时候共享线程就可以充当中介者的角色":["175.12"],"标签页间通过共享一个线程":["175.12"],"然后通过这个共享的线程来实现数据的交换":["175.12"],"localstorage":["175.12"],"我们可以在一个标签页对":["175.12"],"的变化事件进行监听":["175.12"],"然后当另一个标签页修改数据的时候":["175.12"],"我们就可以通过这个监听事件来获取到数据":["175.12"],"对象就是充当的中介者的角色":["175.12"],"方法":["175.12"],"如果我们能够获得对应标签页的引用":["175.12"],"就可以使用postmessage":["175.12"],"进行通信":["175.12"],"为什么需要浏览器缓存":["175.12"],"对于浏览器的缓存":["175.12"],"主要针对的是前端的静态资源":["175.12"],"在发起请求之后":["175.12"],"拉取相应的静态资源":["175.12"],"并保存在本地":["175.12"],"如果服务器的静态资源没有更新":["175.12"],"那么在下次请求的时候":["175.12"],"就直接从本地读取即可":["175.12"],"如果服务器的静态资源已经更新":["175.12"],"那么我们再次请求的时候":["175.12"],"就到服务器拉取新的资源":["175.12"],"这样就大大的减少了请求的次数":["175.12"],"提高了网站的性能":["175.12"],"这就要用到浏览器的缓存策略了":["175.12"],"所谓的":["175.12"],"浏览器缓存":["175.12","181.0"],"指的是浏览器将用户请求过的静态资源":["175.12"],"存储到电脑本地磁盘中":["175.12"],"当浏览器再次访问时":["175.12"],"就可以直接从本地加载":["175.12"],"不需要再去服务端请求了":["175.12"],"的下载和构建":["175.13"],"而我们却想在此时运行脚本":["175.13"],"那么浏览器将延迟":["175.13"],"脚本执行和文档的解析":["175.13"],"直至其完成":["175.13"],"在这种情况下":["175.13"],"浏览器会先下载和构建":["175.13"],"然后再执行":["175.13"],"最后再继续文档的解析":["175.13"],"浏览器本地存储的方式":["175.13"],"往其他网站写cookie":["175.14"],"服务端的session存储到一个节点":["175.14"],"cookie存储sessionid":["175.14"],"主机地址有任何一个不相同":["175.15"],"都不会访问":["175.15"],"脚本请求都不会有跨域的限制":["175.16"],"这是因为这些操作都不会通过响应结果来进行可能出现安全问题的操作":["175.16"],"指的是浏览器不能执行其他网站的脚本":["175.16"],"它是由浏览器的同源策略造成的":["175.16"],"是浏览器对":["175.16"],"施加的安全限制":["175.16"],"防止他人恶意攻击网站":["175.16"],"跨域问题其实就是浏览器的同源策略造成的":["175.16"],"如何解决跨越问题":["175.16"],"缺乏安全性保证":["175.18"],"需要服务端配合改造":["175.18"],"表示可以传递给任意窗口":["175.19"],"如果要指定和当前窗口同源的话设置为":["175.19"],"属性的时候设置":["175.21"],"samesite":["175.21"],"限制":["175.21"],"不能作为被第三方使用":["175.21"],"从而可以避免被攻击者利用":["175.21"],"一共有两种模式":["175.21"],"一种是严格模式":["175.21"],"在严格模式下":["175.21"],"在任何情况下都不可能作为第三方":["175.21"],"在宽松模式下":["175.21"],"可以被请求是":["175.21"],"请求":["175.21","204.3"],"且会发生页面跳转的请求所使用":["175.21"],"即搜索引擎优化":["175.22"],"seo是随着搜索引擎的出现而来的":["175.22"],"两者是相互促进":["175.22"],"互利共生的关系":["175.22"],"seo的存在就是为了提升网页在搜索引擎自然搜索结果中的收录数量以及排序位置而做的优化行为":["175.22"],"而优化的目的就是为了提升网站在搜索引擎中的权重":["175.22"],"增加对搜索引擎的友好度":["175.22"],"使得用户在访问网站时能排在前面":["175.22"],"为什么要做seo":["175.22"],"提高网站的权重":["175.22"],"增强搜索引擎友好度":["175.22"],"以达到提高排名":["175.22"],"增加流量":["175.22"],"改善":["175.22"],"潜在":["175.22"],"用户体验":["175.22"],"促进销售的作用":["175.22"],"网站结构布局优化":["175.22"],"尽量简单":["175.22"],"控制首页链接数量":["175.22"],"网页层级不要太深":["175.22"],"控制页面大小":["175.22"],"减少http请求":["175.22"],"提高网站的加载速度":["175.22"],"尽量使用语义化标签":["175.22"],"利用浏览器缓存":["175.22"],"innerheight":["176.2"],"has":["176.3","214.2","216.5","230.2"],"声明会提升":["176.6"],"但不会初始化赋值":["176.6"],"foo":["176.6"],"进入暂时性死区":["176.6"],"类似于":["176.6"],"const":["176.6","231.1","283.12"],"声明变量":["176.6"],"会导致性能上的降低":["176.12"],"构造函数是同步执行的":["176.13"],"方法是异步执行的":["176.13"],"后续的ack都会对这个seq进行加一来进行确认":["176.16"],"答":["176.18"],"技术和相关的实战经验":["177.0"],"也是面试中一项大大的加分项":["177.0"],"混合程度":["177.1"],"属于第一种方案的优化版本":["177.1"],"用户体验好于常规":["177.1"],"方案":["177.1"],"且通常依托的平台也能提供更为友好的开发调试体验以及功能":["177.1"],"需要依托于特定的平台的规范限定":["177.1"],"的一些":["177.2"],"和特性":["177.2"],"override":["177.3"],"public":["177.3","195.8"],"onreceivevalue":["177.3"],"此处为":["177.3"],"返回的结果":["177.3"],"开发":["177.4","177.9"],"调试成本变高":["177.4"],"需要多端合作":["177.4"],"且会增加":["177.4"],"包体积":["177.4"],"具备日志系统":["177.5"],"详细内容由兴趣的童鞋可以看文章":["177.5"],"hybrid":["177.5"],"app技术解析":["177.5"],"原理篇":["177.5"],"实战篇":["177.5"],"webpack":["177.5","181.0"],"模块机制":["177.6"],"自己实现了一套模拟模块的机制":["177.6"],"将其包裹于业务代码的外部":["177.6"],"从而提供了一套模块机制":["177.6"],"文件编译":["177.6"],"规定了一套编译规则":["177.6"],"以管道的形式对文件字符串进行处理":["177.6"],"中新增了许多语法":["177.7"],"提高了开发效率":["177.7"],"编写原则":["177.7"],"单一原则":["177.7"],"每个":["177.7"],"只做一件事":["177.7"],"链式调用":["177.7"],"会按顺序链式调用每个":["177.7"],"统一原则":["177.7"],"遵循":["177.7"],"制定的设计规则和结构":["177.7"],"输入与输出均为字符串":["177.7"],"各个":["177.7"],"完全独立":["177.7"],"即插即用":["177.7"],"assets":["177.8"],"代码去重":["177.8"],"bundle":["177.8","177.9"],"analyzer":["177.8","177.9"],"代码分析":["177.8"],"compression":["177.8"],"gzip":["177.8","181.0","195.9"],"happypack":["177.8"],"使用多进程":["177.8"],"加速代码构建":["177.8"],"environmentplugin":["177.8"],"定义环境变量":["177.8"],"analyse":["177.9"],"对打包后的文件进行分析":["177.9"],"寻找可优化的地方":["177.9"],"profile":["177.9"],"对各个编译阶段耗时进行监控":["177.9"],"寻找耗时最多的地方":["177.9"],"cheap":["177.9"],"生产":["177.9"],"hidden":["177.9"],"项目性能优化":["177.9","181.0"],"为空时":["177.10"],"浏览器仍然会发起请求":["177.10"],"ie":["177.10"],"向页面所在的目录发送请求":["177.10"],"safari":["177.10"],"firefox":["177.10"],"向页面本身发送请求":["177.10"],"opera":["177.10"],"不执行任何操作":["177.10"],"图片提前":["177.10"],"指定宽高":["177.10"],"脱离文档流":["177.10"],"能有效减少因图片加载导致的页面回流":["177.10"],"语义化标签":["177.10"],"有利于":["177.10","206.0"],"seo":["177.10"],"与浏览器的解析时间":["177.10"],"减少使用":["177.10"],"进行布局":["177.10"],"避免使用":["177.10"],"br":["177.10"],"可以绕开该限制":["177.11"],"服务器缓存":["177.11"],"将不变的数据":["177.11"],"页面缓存到":["177.11"],"内存":["177.11"],"远程存储":["177.11"],"redis等":["177.11"],"数据缓存":["177.11"],"通过各种存储将不常变的数据进行缓存":["177.11"],"缩短数据的获取时间":["177.11"],"其实整个领域是在不断地往外拓张":["177.12"],"在许多的大厂的面试中":["177.12"],"具备一定程度的":["177.12"],"服务端知识":["177.12"],"运维知识":["177.12"],"甚至数学":["177.12"],"图形学":["177.12"],"设计":["177.12"],"都可能是你占得先机的法宝":["177.12"],"所以只要通过在同域下启动一个":["177.13"],"服务":["177.13"],"转发请求即可":["177.13"],"重写请求并代理到对应域名下":["177.13"],"rewrite":["177.13"],"cross":["177.13"],"图片处理":["177.13"],"ngx":["177.13"],"这个模块":["177.13"],"可以作为一层图片服务器的代理":["177.13"],"在访问的时候":["177.13"],"对图片进行特定的操作":["177.13"],"例如裁剪":["177.13"],"旋转":["177.13"],"压缩等":["177.13"],"本地代理":["177.13"],"绕过白名单限制":["177.13"],"例如我们在接入一些第三方服务时经常会有一些域名白名单的限制":["177.13"],"如果我们在本地通过":["177.13"],"进行开发":["177.13"],"便无法完成功能":["177.13"],"这里我们可以做一层本地代理":["177.13"],"便可以直接通过指定域名访问本地开发环境":["177.13"],"toutiao":["177.13"],"容器中的数据的持久化管理主要由两种方式":["177.14"],"数据卷":["177.14"],"volume":["177.14"],"一种可以在多个容器间共享的特殊目录":["177.14"],"其处于容器外层":["177.14"],"并不会随着容器销毁而删除":["177.14"],"挂载主机目录":["177.14"],"直接将一个主机目录挂载到容器中进行写入":["177.14"],"为了便于镜像的使用":["177.14"],"提供了类似于":["177.14"],"的仓库机制":["177.14"],"在仓库中包含着各种各样版本的镜像":["177.14"],"官方服务是":["177.14"],"hub":["177.14"],"可以快速地从仓库中拉取各种类型的镜像":["177.14"],"也可以基于某些镜像进行自定义":["177.14"],"甚至发布到仓库供社区使用":["177.14"],"中独有的概念":["178.0"],"本次调度结束需完成的任务":["178.1"],"动画过渡":["178.1"],"交互反馈":["178.1"],"数据更新":["178.1","221.8"],"不会显示但以防将来会显示的任务":["178.1"],"tips":["178.1","178.7","260.3"],"其实可以算是一种编程思想":["178.1"],"在其它语言中也有许多应用":["178.1"],"ruby":["178.1"],"核心思想是":["178.1"],"任务拆分和协同":["178.1"],"主动把执行权交给主线程":["178.1"],"使主线程有时间空挡处理其他高优先级任务":["178.1"],"当遇到进程阻塞的问题时":["178.1"],"异步调用":["178.1"],"缓存策略":["178.1"],"是三个显著的解决思路":["178.1"],"感谢":["178.1","179.11"],"pengyuan":["178.1"],"童鞋":["178.1","179.11"],"在评论中指出了几个":["178.1"],"中最核心的理念":["178.1"],"感恩":["178.1"],"必须加条件":["178.2"],"否则将进入死循环":["178.2"],"可以在更新之前获取最新的渲染数据":["178.2"],"它的调用是在":["178.2"],"之前":["178.2"],"默认每次调用":["178.2"],"一定会最终走到":["178.2"],"阶段":["178.2"],"但可以通过":["178.2"],"的生命钩子返回":["178.2"],"来直接阻止后面的逻辑执行":["178.2"],"通常是用于做条件渲染":["178.2"],"优化渲染的性能":["178.2"],"如果再次调用":["178.3"],"会报错警告":["178.3"],"通常有两种解决办法":["178.3"],"将数据挂载到外部":["178.3"],"传入":["178.3"],"如放到":["178.3"],"redux":["178.3"],"父级中":["178.3"],"在组件内部维护一个状态量":["178.3"],"isunmounted":["178.3"],"中标记为":["178.3"],"前进行判断":["178.3"],"使用注意":["178.4"],"纯函数":["178.4"],"增强函数应为纯函数":["178.4"],"避免侵入修改元组件":["178.4"],"避免用法污染":["178.4"],"理想状态下":["178.4"],"应透传元组件的无关参数与事件":["178.4"],"尽量保证用法不变":["178.4"],"命名空间":["178.4"],"增加特异性的组件名称":["178.4"],"这样能便于开发调试和查找问题":["178.4"],"引用传递":["178.4"],"如果需要传递元组件的":["178.4"],"refs":["178.4"],"引用":["178.4"],"forwardref":["178.4"],"静态方法":["178.4"],"元组件上的静态方法并无法被自动传出":["178.4"],"会导致业务层无法调用":["178.4"],"解决":["178.4","179.42"],"函数导出":["178.4"],"静态方法赋值":["178.4"],"重新渲染":["178.4"],"由于增强函数每次调用是返回一个新组件":["178.4"],"因此如果在":["178.4"],"中使用增强函数":["178.4"],"就会导致每次都重新渲染整个hoc":["178.4"],"而且之前的状态会丢失":["178.4"],"将会":["178.5"],"难以维护":["178.5"],"可以将":["178.5"],"进行拆分":["178.5"],"函数分解":["178.5"],"最终再使用":["178.5"],"combinereducers":["178.5"],"进行重构合并":["178.5"],"由于":["178.5"],"是一个严格的纯函数":["178.5"],"因此无法在":["178.5"],"中进行数据的请求":["178.5"],"需要先获取数据":["178.5"],"再":["178.5"],"下面是三种不同的异步实现":["178.5"],"redex":["178.5"],"thunk":["178.5"],"saga":["178.5"],"observable":["178.5","181.0"],"属于异步执行":["178.6"],"并不会等待":["178.6"],"真正渲染后执行":["178.6"],"则会真正渲染后才触发":["178.6"],"可以获取更新后的":["178.6"],"自定义钩子":["178.6"],"usexxxxx":["178.6"],"基于":["178.6","181.0"],"可以引用其它":["178.6"],"这个特性":["178.6"],"我们可以编写自定义钩子":["178.6"],"如上面的":["178.6"],"又例如":["178.6"],"我们需要每个页面自定义标题":["178.6"],"usetitle":["178.6"],"title":["178.6","279.7"],"home":["178.6","195.4"],"我是首页":["178.6"],"这里比较特别的有两点":["178.7"],"序列化":["178.7"],"替代了":["178.7"],"保证数据的安全性":["178.7"],"避免代码注入和":["178.7"],"xss":["178.7"],"进行传输":["178.7"],"可以获得更快的加载速度":["178.7"],"数据吸水":["178.7"],"以脱水后的数据为初始化数据":["178.7"],"同步创建":["178.7"],"hydratedel":["178.7"],"getelementbyid":["178.7"],"hydrated":["178.7"],"hydratedata":["178.7"],"使用初始":["178.7"],"state":["178.7","216.2"],"更易于做单元测试":["178.8"],"函数式编程其实是一种编程思想":["178.8"],"它追求更细的粒度":["178.8"],"将应用拆分成一组组极小的单元函数":["178.8"],"组合调用操作数据流":["178.8"],"它提倡着":["178.8"],"数据不可变":["178.8"],"谨慎对待函数内的":["178.8"],"依赖外部":["178.8"],"其实我们很难也不需要在面试过程中去完美地阐述出整套思想":["178.8"],"这里也只是浅尝辄止":["178.8"],"一些个人理解而已":["178.8"],"博主也是初级小菜鸟":["178.8"],"停留在表面而已":["178.8"],"只求对大家能有所帮助":["178.8"],"轻喷":["178.8"],"我个人觉得":["178.8"],"这些编程范式之间":["178.8"],"其实并不矛盾":["178.8"],"各有各的":["178.8"],"优劣势":["178.8"],"理解和学习它们的理念与优势":["178.8"],"合理地":["178.8"],"设计融合":["178.8"],"将优秀的软件编程思想用于提升我们应用":["178.8"],"所有设计思想":["178.8"],"最终的目标一定是使我们的应用更加":["178.8"],"解耦颗粒化":["178.8"],"易拓展":["178.8"],"开发更为高效和安全":["178.8"],"有一些库能让大家很快地接触和运用函数思想":["178.8"],"underscore":["178.8"],"rxjs":["178.8"],"清除内部浮动":["179.2"],"清除浮动的原理是两个":["179.2"],"都位于同一个":["179.2"],"区域之中":["179.2"],"自适应两栏布局":["179.2"],"可以阻止元素被浮动元素覆盖":["179.2"],"的优先级最高":["179.3"],"动态引入":["179.7"],"不行":["179.7"],"面试中一般不会重点考察该点":["179.8"],"一般介绍下自己在实战项目中的经验即可":["179.8"],"尽量使用动画属性进行动画":["179.9"],"能拥有较好的性能表现":["179.9"],"translate":["179.9"],"rotate":["179.9"],"skew":["179.9"],"刘博海":["179.11"],"brian":["179.11"],"此处感谢":["179.11"],"caihaihong":["179.11"],"童鞋的指出":["179.11"],"放大来看":["179.11"],"我画了张图供大家彻底理解":["179.11"],"但是这样会造成所有继承于该对象的实例的属性发生改变":["179.12"],"移除出执行栈":["179.13"],"控制权交还全局上下文":["179.13"],"继续执行":["179.13"],"称为活动对象":["179.14"],"便自上而下形成一条":["179.16"],"链式作用域":["179.16"],"块级作用域":["179.17"],"让变量成为自己上下文的属性":["179.17"],"避免共享":["179.17"],"但执行时会阻塞元素渲染":["179.18"],"无法拷贝":["179.19"],"递归进行逐一赋值":["179.19"],"则返回该值":["179.20"],"的语法糖":["179.23"],"extends":["179.23"],"prototype":["179.25","179.33","179.54","195.8"],"值拷贝":["179.26"],"导出值变化不会影响导入值":["179.26"],"内存地址":["179.26"],"导入值会随导出值而变化":["179.26"],"fetchuser":["179.29"],"转换成":["179.31"],"es5":["179.31","181.0"],"tostring":["179.33","184.10","230.2"],"浏览器":["179.33"],"与不断轮询脏检查":["179.34"],"setinterval":["179.34"],"借助服务端或者中间层实现":["179.34"],"定时器线程":["179.35"],"rendering":["179.36"],"布局":["179.37"],"gpu":["179.37"],"painting":["179.37"],"像素绘制页面":["179.37"],"getboundingclientrect":["179.38"],"scrollto":["179.38"],"回流必定触发重绘":["179.38"],"重绘不一定触发回流":["179.38"],"重绘的开销较小":["179.38"],"回流的代价较高":["179.38"],"避免多次触发上面提到的那些会触发回流的方法":["179.39"],"可以的话尽量用":["179.39"],"变量存住":["179.39"],"分布式缓存":["179.40"],"redis":["179.40"],"数据库":["179.40"],"alert":["179.41"],"confirm":["179.41"],"无法加载本地资源":["179.41"],"最新技术":["179.42"],"不阻塞":["179.42"],"压缩算法":["179.42"],"将内存中清除后导致的碎片化对象往内存堆的一端移动":["179.42"],"内存的碎片化":["179.42"],"找出异常点":["179.43"],"服务端与网络":["179.43"],"缺点":["179.44"],"周期性修改":["179.44"],"但内容未变时":["179.44"],"会导致缓存失效":["179.44"],"最小粒度只到":["179.44"],"s":["179.44","195.7","206.1","206.2","226.1"],"以内的改动无法检测到":["179.44"],"的优先级高于":["179.44"],"资源不存在":["179.45"],"服务器错误":["179.45"],"两者详细对比如下图":["179.46"],"onmessage":["179.47"],"双方进入":["179.48"],"established":["179.48"],"closed":["179.49"],"close":["179.50"],"callbacks":["179.50"],"allow":["179.51","243.1"],"settimeout":["179.53","283.12"],"依赖局部更新节点":["179.54"],"销毁实例实现":["179.54"],"destory":["179.54"],"beforedestory":["179.54"],"自身及子节点":["179.54"],"删除依赖":["179.54"],"删除监听":["179.54"],"destoryed":["179.54"],"before":["179.55","220.2"],"callhook":["179.55"],"beforeupdate":["179.55","216.2"],"move":["179.56"],"建议大家还是需要稍微准备下":["179.59"],"这属于加分题":["179.59"],"不定步数的插入排序":["179.62"],"插入排序":["179.62"],"口诀":["179.62"],"插冒归基稳定":["179.62"],"快选堆希不稳定":["179.62"],"稳定性":["179.62"],"同大小情况下是否可能会被交换位置":["179.62"],"虚拟dom的diff":["179.62"],"不稳定性会导致重新渲染":["179.62"],"访问相邻的右节点":["179.64"],"访问父节点":["179.64"],"插入与删除节点":["179.64"],"for和v":["180.0"],"if哪个优先级更高":["180.0"],"不能在同一个标签中使用":["180.0"],"先处理v":["180.0"],"再处理v":["180.0"],"如果同时遇到的时候":["180.0"],"应该考虑先用计算属性处理数据":["180.0"],"在进行v":["180.0"],"可以减少循环次数":["180.0"],"二十五":["180.0"],"mode是如何实现的":["180.0"],"在组件上用的v":["180.0"],"model":["180.0","210.1"],"是model和callback":["180.0"],"在普通元素上用v":["180.0"],"会生成指令":["180.0"],"还可能因为不同的元素":["180.0"],"生成value和input":["180.0"],"生成change和radio":["180.0"],"生成change和checked":["180.0"],"指令在什么时候会调用":["180.0"],"源码":["180.0"],"二十六":["180.0"],"vue的普通slot以及作用域slot的区别":["180.0"],"三十七":["180.2"],"vue中使用了哪些设计模式":["180.2"],"单例模式":["180.2"],"new多次":["180.2"],"只有一个实例":["180.2"],"工场模式":["180.2"],"传入参数就可以创建实例":["180.2"],"虚拟节点的创建":["180.2"],"发布订阅模式":["180.2"],"eventbus":["180.2"],"watch和dep":["180.2"],"代理模式":["180.2"],"data属性":["180.2"],"节流":["180.2"],"中介者模式":["180.2"],"vuex":["180.2"],"策略模式":["180.2"],"外观模式":["180.2"],"createkeytooldidx":["181.0"],"beginidx":["181.0"],"isdef":["181.0"],"你有对":["181.0"],"项目进行哪些优化":["181.0"],"如果没有对":["181.0"],"项目没有进行过优化总结的同学":["181.0"],"可以参考本文作者的另一篇文章":["181.0"],"实践指南":["181.0"],"文章主要介绍从":["181.0"],"个大方面":["181.0"],"个小方面详细讲解如何进行":["181.0"],"项目的优化":["181.0"],"代码层面的优化":["181.0"],"区分使用场景":["181.0"],"遍历必须为":["181.0"],"添加":["181.0"],"且避免同时使用":["181.0"],"长列表性能优化":["181.0"],"事件的销毁":["181.0"],"图片资源懒加载":["181.0"],"路由懒加载":["181.0"],"第三方插件的按需引入":["181.0"],"优化无限列表性能":["181.0"],"预渲染":["181.0"],"层面的优化":["181.0"],"对图片进行压缩":["181.0"],"减少":["181.0"],"转为":["181.0"],"的冗余代码":["181.0"],"提取公共代码":["181.0"],"模板预编译":["181.0"],"提取组件的":["181.0"],"优化":["181.0"],"sourcemap":["181.0"],"构建结果输出分析":["181.0"],"项目的编译优化":["181.0"],"基础的":["181.0"],"技术的优化":["181.0"],"开启":["181.0"],"压缩":["181.0"],"cdn":["181.0"],"的使用":["181.0"],"查找性能瓶颈":["181.0"],"对于即将到来的":["181.0"],"特性你有什么了解的吗":["181.0"],"正走在发布的路上":["181.0"],"的目标是让":["181.0"],"核心变得更小":["181.0"],"更快":["181.0"],"更强大":["181.0"],"增加以下这些新特性":["181.0"],"监测机制的改变":["181.0"],"将带来基于代理":["181.0"],"实现":["181.0"],"提供全语言覆盖的反应性跟踪":["181.0"],"这消除了":["181.0"],"当中基于":["181.0"],"的实现所存在的很多限制":["181.0"],"只能监测属性":["181.0"],"不能监测对象":["181.0"],"检测属性的添加和删除":["181.0"],"检测数组索引和长度的变更":["181.0"],"weakmap":["181.0"],"weakset":["181.0"],"新的":["181.0"],"还提供了以下特性":["181.0"],"用于创建":["181.0"],"的公开":["181.0"],"这为中小规模场景提供了简单轻量级的跨组件状态管理解决方案":["181.0"],"默认采用惰性观察":["181.0"],"不管反应式数据有多大":["181.0"],"都会在启动时被观察到":["181.0"],"如果你的数据集很大":["181.0"],"这可能会在应用启动时带来明显的开销":["181.0"],"只观察用于渲染应用程序最初可见部分的数据":["181.0"],"更精确的变更通知":["181.0"],"强制添加新属性将导致依赖于该对象的":["181.0"],"收到变更通知":["181.0"],"只有依赖于特定属性的":["181.0"],"才会收到通知":["181.0"],"不可变的":["181.0"],"我们可以创建值的":["181.0"],"不可变":["181.0"],"版本":["181.0"],"即使是嵌套属性":["181.0"],"除非系统在内部暂时将其":["181.0"],"解禁":["181.0"],"这个机制可用于冻结":["181.0"],"传递或":["181.0"],"状态树以外的变化":["181.0"],"更好的调试功能":["181.0"],"我们可以使用新的":["181.0"],"rendertracked":["181.0","220.1"],"rendertriggered":["181.0"],"钩子精确地跟踪组件在什么时候以及为什么重新渲染":["181.0"],"模板":["181.0"],"模板方面没有大的变更":["181.0"],"只改了作用域插槽":["181.0"],"的机制导致作用域插槽变了":["181.0"],"父组件会重新渲染":["181.0"],"把作用域插槽改成了函数的方式":["181.0"],"这样只会影响子组件的重新渲染":["181.0"],"提升了渲染的性能":["181.0"],"同时":["181.0"],"对于":["181.0","206.0"],"函数的方面":["181.0"],"也会进行一系列更改来方便习惯直接使用":["181.0"],"来生成":["181.0"],"vdom":["181.0"],"对象式的组件声明方式":["181.0"],"中的组件是通过声明的方式传入一系列":["181.0"],"的结合需要通过一些装饰器的方式来做":["181.0"],"虽然能实现功能":["181.0"],"但是比较麻烦":["181.0"],"修改了组件的声明方式":["181.0"],"改成了类式的写法":["181.0"],"这样使得和":["181.0"],"的结合变得很容易":["181.0"],"此外":["181.0"],"的源码也改用了":["181.0"],"来写":["181.0"],"其实当代码的功能复杂之后":["181.0"],"必须有一个静态类型系统来做一些辅助管理":["181.0"],"也全面改用":["181.0"],"来重写了":["181.0"],"更是使得对外暴露的":["181.0"],"更容易结合":["181.0"],"静态类型系统对于复杂代码的维护确实很有必要":["181.0"],"其它方面的更改":["181.0"],"的改变是全面的":["181.0"],"上面只涉及到主要的":["181.0"],"还有一些其他的更改":["181.0"],"支持自定义渲染器":["181.0"],"从而使得":["181.0"],"可以通过自定义渲染器的方式来扩展":["181.0"],"而不是直接":["181.0"],"fork":["181.0"],"源码来改的方式":["181.0"],"fragment":["181.0","286.37"],"多个根节点":["181.0"],"protal":["181.0"],"其他部分渲染组建内容":["181.0"],"针对一些特殊的场景做了处理":["181.0"],"treeshaking":["181.0"],"提供了更多的内置功能":["181.0"],"说说你使用":["181.0"],"框架踩过最大的坑是什么":["181.0"],"怎么解决的":["181.0"],"arr":["182.2","286.30"],"联合类型":["184.4"],"元组":["184.4"],"和它们各自":["184.6"],"没有任何类型":["184.6"],"一个函数如果没有返回值":["184.6"],"那么返回值可以定义为void":["184.6"],"sayhi":["184.7"],"age":["184.8"],"是一致的":["184.9"],"公共方法和属性可以访问":["184.10"],"构造函数":["184.11"],"对构造函数中的属性进行类型声明":["184.11"],"类中的方法":["184.11"],"类型关系":["184.15"],"求幂":["184.16"],"与接口的兼容性有区别":["184.18"],"原因参考第":["184.18"],"问":["184.18"],"eat":["184.20"],"则支持双向协变":["184.22"],"ts文件":["184.27"],"utils":["184.28"],"只读属性必须在声明时或构造函数里被初始化":["184.30"],"是用u的属性覆盖t的相同属性":["184.32"],"在编译阶段需要编译器编译成纯":["185.1"],"来运行":["185.1"],"是为大型应用之开发而设计的语言":["185.1"],"元组合并了不同类型的对象":["185.3"],"相当于一个可以装不同类型数据的数组":["185.3"],"类型":["185.4","185.5","286.52"],"更多的区别如下图所示":["185.7"],"的代码":["186.1"],"生成单个":["186.3"],"soucemaps":["186.3"],"而不是将":["186.3"],"sourcemaps":["186.3","195.9"],"生成不同的文件":["186.3"],"inlinesources":["186.3"],"将代码与":["186.3"],"生成到一个文件中":["186.3"],"要求同时设置了":["186.3"],"其他选项":["186.3"],"experimentaldecorators":["186.3"],"启用装饰器":["186.3"],"emitdecoratormetadata":["186.3"],"为装饰器提供元数据的支持":["186.3"],"获取某种类型的所有键":["187.0"],"返回联合类型":["187.0"],"的形式即可获取该div元素":["190.0"],"ref循环调用setrefaction方法":["190.2"],"该方法会默认接收一个el参数":["190.2"],"这个参数就是我们需要获取的div元素":["190.2"],"20221015193242":["190.2"],"此时可以通过state":["190.2"],"reflist":["190.2"],"的形式获取子元素dom":["190.2"],"通过对子组件添加了ref属性":["190.4"],"并声明了一个与ref属性名称相同的变量cellref":["190.4"],"此时可以通过emit将cellref":["190.4"],"value作为一个dom引用传递出去":["190.4"],"20221015193830":["190.4"],"那么接下来看看怎么实现的":["191.0"],"还有其他配置":["191.1"],"如果想要了解可以看webpack官网":["191.1"],"docschina":["191.1"],"pro":["191.1"],"打包结束还没有优化":["191.2"],"还是这个样子":["191.2"],"这时候就需要这个插件了":["191.2"],"这下控制台干净了":["191.3"],"不过这也是最基础的配置":["191.3"],"就是不知道配置这些会不会对编译速度变慢":["191.3"],"所以我也就配置了一些基础的内容":["191.3"],"会导致打包后所有文件的hash值都改变":["192.1"],"所以当打包名称设置为hash时":["192.1"],"整个项目文件是一致的":["192.1"],"修改其中一个会导致所有跟着一起改":["192.1"],"打包后的hash值会根据入口文件的不用而不一样":["192.2"],"当某个入口文件修改后重新打包":["192.2"],"会导致本入口文件关联的所有文件的hash值都修改":["192.2"],"但是不会影响到其他入口文件的hash值":["192.2"],"每个文件的hash值都是根据自身内容而生成":["192.3"],"当某个文件内容修改时":["192.3"],"打包后只会修改其本身的hash值":["192.3"],"不会影响其他文件的hash值":["192.3"],"写出到外部文件系统":["193.1"],"通过循环伪递归的方式拿到所有模块的所有依赖并都转换成es5":["193.2"],"决定了项目入口":["193.4"],"则决定产物最终往哪里输出":["193.4"],"决定了怎么找到模块":["193.4"],"决定了如何解读模块内容":["193.4"],"用于控制日志输出方式":["193.5"],"例如可以通过该配置将日志输出到磁盘文件":["193.5"],"进而删除对应代码":["193.6"],"检查":["193.7"],"可视化webpack输出文件的体积":["193.8"],"业务组件":["193.8"],"依赖第三方模块":["193.8"],"seal":["193.9"],"emit阶段":["193.9"],"执行完这些阶段就完成了构建过程":["193.9"],"比如将a文件编译成b文件":["193.10"],"单纯的是一个文件转换过程":["193.10"],"脚本":["194.1"],"在这个环境下执行的都是有关小程序业务逻辑的代码":["194.1","200.5"],"在每个小程序页面的生命周期中":["194.2"],"存在着若干次页面数据通信":["194.2"],"将会异步下载新版本的代码包":["194.5"],"并同时用客户端本地的包进行启动":["194.5"],"即新版本的小程序需要等下一次冷启动才会应用上":["194.5"],"提前向用户发起授权请求":["195.0"],"getuserinfo":["195.0"],"获取用户基本信息":["195.0"],"登录流程设计":["195.0"],"以下从笔者接触过的几种登录流程来做阐述":["195.0"],"自定义登录态":["195.2"],"后续调用接口时携带该登录态作为用户身份标识即可":["195.2"],"获取用户最新的信息":["195.3"],"用户未授权":["195.3"],"在界面中显示一个按钮提示用户登入":["195.3"],"当用户点击并授权后就获取到用户的最新信息":["195.3"],"获取到用户数据后可以进行展示或者发送给自己的后端":["195.3"],"下载":["195.4"],"复制下载的压缩文件中的":["195.4"],"stylesheet":["195.4"],"的内容到":["195.4"],"并且将":["195.4"],"icomoon":["195.4"],"除了":["195.4"],"所有的代码也复制到":["195.4"],"并将i选择器换成":["195.4"],"icon":["195.4"],"50px":["195.4"],"小程序提供了一系列组件用于开发业务功能":["195.4"],"按照功能与html5的标签进行对比如下":["195.4"],"小程序的组件基于web":["195.4"],"component标准":["195.4"],"使用polymer框架实现web":["195.4"],"目前native实现的组件有":["195.4"],"cavnas":["195.4"],"video":["195.4"],"textarea":["195.4"],"native组件层在":["195.4"],"层之上":["195.4"],"这目前带来了一些问题":["195.4"],"实现的组件会遮挡其他组件":["195.4"],"渲染出来的视图在滚动时":["195.4"],"实现的组件需要更新位置":["195.4"],"这会带来性能问题":["195.4"],"在安卓机器上比较明显":["195.4"],"小程序原生组件":["195.4"],"可以覆盖":["195.4"],"但是也有一下弊端":["195.4"],"比如在":["195.4"],"上覆盖":["195.4"],"就会发现坐标系不统一处理麻烦":["195.4"],"目前小程序的问题或限制":["195.4"],"包含但不限于":["195.4"],"小程序仍然使用":["195.4"],"并非原生渲染":["195.4"],"部分原生":["195.4"],"服务端接口返回的头无法执行":["195.4"],"依赖浏览器环境的":["195.4"],"库不能使用":["195.4"],"但是可以自搭构建工具或者使用":["195.4"],"mpvue":["195.4"],"未来官方有计划支持":["195.4"],"可以自己用babel":["195.4"],"webpack自搭或者使用":["195.4"],"不支持使用自己的字体":["195.4"],"未来官方计划支持":["195.4"],"可以用":["195.4"],"的方式来使用":["195.4"],"小程序不能发朋友圈":["195.4"],"可以通过保存图片到本地":["195.4"],"发图片到朋友前":["195.4"],"二维码可以使用b接口":["195.4"],"获取二维码":["195.4"],"小程序接口的限制":["195.4"],"接口":["195.4"],"scene":["195.4"],"最大32个可见字符":["195.4"],"ac":["195.4"],"接口总共生成的码数量限制为":["195.4"],"000":["195.4"],"请谨慎调用":["195.4"],"真机扫描二维码只能跳转到线上版本":["195.4"],"所以测试环境下只可通过开发者工具的通过二维码编译进行调试":["195.4"],"没有发布到线上版本的小程序页面路径会导致生成二维码失败":["195.4"],"需要先将添加了页面的小程序发布到线上版本":["195.4"],"小程序推送只能使用":["195.4"],"服务通知":["195.4"],"而且需要用户主动触发提交":["195.4"],"formid":["195.4"],"只有7天有效期":["195.4"],"现在的做法是在每个页面都放入form并且隐藏以此获取更多的":["195.4"],"后端使用原则为":["195.4"],"优先使用有效期最短的":["195.4"],"小程序大小限制":["195.4"],"2m":["195.4"],"分包总计不超过":["195.4"],"8m":["195.4"],"转发":["195.4"],"分享":["195.4"],"小程序不能拿到成功结果":["195.4"],"原来可以":["195.4"],"小游戏造的孽":["195.4"],"拿到相同的":["195.4"],"必须绑在同一个开放平台下":["195.4"],"开放平台绑定限制":["195.4"],"50个移动应用":["195.4"],"10个网站":["195.4"],"50个同主体公众号":["195.4"],"5个不同主体公众号":["195.4"],"50个同主体小程序":["195.4"],"5个不同主体小程序":["195.4"],"公众号关联小程序":["195.4"],"所有公众号都可以关联小程序":["195.4"],"一个公众号可关联10个同主体的小程序":["195.4"],"3个不同主体的小程序":["195.4"],"一个小程序可关联500个公众号":["195.4"],"公众号一个月可新增关联小程序13次":["195.4"],"小程序一个月可新增关联500次":["195.4"],"一个公众号关联的10个同主体小程序和3个非同主体小程序可以互相跳转":["195.4"],"品牌搜索不支持金融":["195.4"],"医疗":["195.4"],"小程序授权需要用户主动点击":["195.4"],"小程序不提供测试":["195.4"],"安卓系统下":["195.4"],"小程序授权获取用户信息之后":["195.4"],"删除小程序再重新获取":["195.4"],"并重新授权":["195.4"],"得到旧签名":["195.4"],"导致第一次授权失败":["195.4"],"开发者工具上":["195.4"],"授权获取用户信息之后":["195.4"],"如果清缓存选择全部清除":["195.4"],"则即使使用了wx":["195.4"],"checksession":["195.4"],"并且在session":["195.4"],"key有效期内":["195.4"],"授权获取用户信息也会得到新的session":["195.4"],"小程序http2支持情况":["195.4"],"等选项请求该接口":["195.5"],"通过抓包工具表现与模拟器相同":["195.5"],"wechatimg14":["195.5"],"小程序加载的三个阶段的表示":["195.6"],"优化方式":["195.6"],"代码压缩":["195.6"],"及时清理无用代码和资源文件":["195.6"],"减少代码包中的图片等资源文件的大小和数量":["195.6"],"分包加载":["195.6"],"首屏加载的体验优化建议":["195.6"],"提前请求":["195.6"],"异步数据请求不需要等待页面渲染完成":["195.6"],"利用缓存":["195.6"],"利用":["195.6"],"storage":["195.6"],"对异步请求数据进行缓存":["195.6"],"二次启动时先利用缓存数据渲染页面":["195.6"],"在进行后台更新":["195.6"],"避免白屏":["195.6"],"先展示页面骨架页和基础内容":["195.6"],"及时反馈":["195.6"],"即时地对需要用户等待的交互操作给出反馈":["195.6"],"避免用户以为小程序无响应":["195.6"],"container":["195.7"],"23e58823":["195.7"],"生产出的内容是":["195.7"],"compiler会利用ast预编译生成一个render":["195.7"],"function用以生成virtual":["195.7"],"self":["195.7","296.2"],"c创建虚拟节点":["195.7"],"参考https":["195.7"],"meituan":["195.7"],"dianping":["195.7"],"blob":["195.7"],"master":["195.7"],"packages":["195.7","206.9"],"l3606":["195.7"],"以及https":["195.7"],"l3680":["195.7"],"staticclass":["195.7"],"attrs":["195.7"],"mpcomid":["195.7"],"staticrenderfns的作用是静态渲染":["195.7"],"在更新时不会进行patch":["195.7"],"优化性能":["195.7"],"而staticrenderfns是个空数组":["195.7"],"staticrenderfns":["195.7"],"withstripped":["195.7"],"esexports":["195.7"],"harmony":["195.7"],"accept":["195.7"],"rerender":["195.7"],"54ad9125":["195.7"],"we":["195.8","231.1"],"proper":["195.8"],"inside":["195.8","214.3","243.2"],"args":["195.8","220.3"],"order":["195.8","219.6"],"normalizationtype":["195.8"],"alwaysnormalize":["195.8"],"internal":["195.8"],"used":["195.8","236.1","243.2"],"by":["195.8","195.9","218.5"],"templates":["195.8"],"normalization":["195.8"],"applied":["195.8"],"written":["195.8"],"调用compilewxml方法生产wxml模板":["195.8"],"这个方法最终会调用":["195.8"],"js的compiletowxml方法将第一步compile出来的模板转成小程序的wxml模板":["195.8"],"以上解答了问题1":["195.8"],"env":["195.9"],"不将资源聚合放在":["195.9"],"assetspublicpath":["195.9"],"off":["195.9"],"many":["195.9"],"popular":["195.9"],"hosts":["195.9"],"such":["195.9"],"在小程序开发者工具中不需要自动打开浏览器":["195.9"],"autoopenbrowser":["195.9"],"proxytable":["195.9"],"because":["195.9"],"paths":["195.9"],"buggy":["195.9"],"参考链接":["195.9"],"以上内容部分来自":["195.9"],"微信小程序架构分析":["195.9"],"微信小程序架构解析":["195.9"],"2018微信公开课第七季上海站":["195.9"],"小程序专场":["195.9"],"小程序中使用iconfont":["195.9"],"微信小程序的下一步":["195.9"],"支持npm":["195.9"],"小程序云":["195.9"],"可视化编程":["195.9"],"支持分包":["195.9"],"使用mpvue开发微信小程序的最佳实践":["195.9"],"用vue":["195.9"],"js开发微信小程序":["195.9"],"开源框架mpvue解析":["195.9"],"learnvue":["195.9"],"如果你想学习到更多的前端知识":["195.9"],"面试技巧或者一些我个人的感悟":["195.9"],"可以关注我的公众号一起学习":["195.9"],"6844903670589423623":["195.9"],"onthemechange":["196.6"],"系统切换主题时触发":["196.6"],"监听页面卸载":["196.7"],"每当组件方法抛出错误时执行":["196.8"],"pagelifetimes":["196.9"],"定义段中定义":["196.9"],"页面被隐藏":["196.10"],"过":["196.12"],"会被销毁":["196.12"],"返回上":["196.13"],"navigateback":["196.13"],"触发onunload":["196.13"],"小程序被销毁":["196.14"],"onlaunch重新开始执行":["196.14"],"从而实现登陆功能":["197.1"],"里面读取":["197.4"],"然后带给服务端":["197.4"],"服务端对比":["197.4"],"对应的记录":["197.4"],"然后校验有效期":["197.4"],"则继续使用本地保存的自定义登录态":["197.6"],"打包之后的代码包":["198.2"],"并不需要等到用户点击到子包页面后在下载子包":["198.5"],"每个组件都分别拥有自己的独立的数据":["198.6"],"setdata调用":["198.6"],"paysign":["199.4"],"调用成功回调":["199.4"],"失败回调":["199.4"],"fail":["199.4"],"接口调用结束回调":["199.4"],"complete":["199.4"],"离线存储":["200.1"],"组件渲染等等":["200.1"],"界面主要由成熟的":["200.1"],"技术渲染":["200.1"],"辅之以大量的接口提供丰富的客户端原生能力":["200.1"],"的展示":["200.2"],"不要因为接口报错导致页面一直空白":["200.3"],"在安卓则是用腾讯x5内核提供的jscore环境":["200.5"],"可以创建一个单独的线程去执行":["200.5"],"webview":["200.7"],"设备实际宽度":["200.11"],"这样的话完成了wxss的一整套流程":["200.12"],"预编译框架要进行兼容":["200.14"],"最终达到了这个目的":["200.15"],"react最终需要操作dom":["200.16"],"构建成功后能够告知测试和实施人员":["201.8"],"可参考如下流程图":["201.8"],"则不推荐使用":["202.4"],"增加了返回页面的显示时间":["202.7"],"关闭所有页面":["202.18"],"打开到应用内的某个页面":["202.18"],"只留下新的页面":["202.19"],"抖音小程序":["203.1"],"都是每个平台自己开发的":["203.1"],"都是有针对性平台的应用程序":["203.1"],"需要设计一个全新的小程序系统":["203.2"],"对于小程序的开发":["203.2"],"提供一个简单":["203.2"],"高效的应用开发框架和丰富的组件及api":["203.2"],"帮助开发者开发出具有原生体验的服务":["203.2"],"因此可以说":["203.3"],"小程序页面本质上就是网页":["203.3"],"甚至到类别内容":["203.6"],"都要接受微信的管控":["203.6"],"建议":["204.0"],"下来仔细阅读":["204.0"],"既":["204.1"],"为什么这么修改呢":["204.1"],"可以看看":["204.1"],"上的这个pr":["204.1"],"这么写是为了能更方便的在有多个域名的复杂的项目提供更深层次的构建":["204.1"],"默认值为":["204.2"],"如果在请求拦截器中没有配置":["204.2"],"的情况下这个值会被设置为":["204.2"],"是用于设置请求拦截器是否为同步执行":["204.2"],"使用代码如下":["204.2"],"am":["204.2"],"only":["204.2","227.1","236.6","243.2"],"header":["204.2"],"是用来控制请求拦截器是否为同步执行的":["204.2"],"我们一般情况下使用是不用配置这个的":["204.2"],"那什么时候需要配置呢":["204.2"],"假如请求拦截器是异步的":["204.2"],"其实默认就是异步的":["204.2"],"而请求的":["204.2"],"又是在请求拦截堆栈后面":["204.2"],"所以当主线程被阻塞时":["204.2"],"请求发起时机就会被延迟":["204.2"],"所以想要避免发起请求时机会延迟这个问题":["204.2"],"可以设置请求拦截器是同步执行的":["204.2"],"所以会默认情况是会执行":["204.2"],"语句块里的代码":["204.2"],"后面的代码就是请求拦截器同步执行的代码":["204.2"],"这里就不多赘述啦":["204.2"],"被":["204.3"],"后这个函数被执行":["204.3"],"你会发":["204.3"],"现取消请求的方式有两种":["204.3"],"一种是":["204.3"],"本身自己实现的":["204.3"],"还有一种是":["204.3"],"这种用的是":["204.3"],"的原生的abortcontroller":["204.3"],"官网的第一句话是这么说的":["204.3"],"abortcontroller":["204.3"],"接口表示一个控制器对象":["204.3"],"允许你根据需要中止一个或多个":["204.3"],"所以它不仅可以取消":["204.3"],"发起的请求":["204.3"],"发起的可以用这个api取消":["204.3"],"详情查看":["204.3"],"abortable":["204.3"],"fetch除了":["204.3"],"还有":["204.3"],"是一个构造函数":["204.3"],"有一个":["204.3"],"属性用于存储用户调用取消函数时的错误提示":["204.3"],"当用户取消请求时":["204.3"],"会把":["204.3"],"实例对象传递给取消函数":["204.3"],"在错误处可以捕获这个对象实例":["204.3"],"并且":["204.3"],"原型上有个":["204.3"],"可以用于判断":["204.3"],"抛出的错误是否是由于取消请求而导致的":["204.3"],"就是个很简单的函数":["204.3"],"用于判断是否是":["204.3"],"是目前一种更有效的防护策略":["204.4"],"详情参考这篇博文":["204.4"],"如何防止csrf攻击":["204.4"],"做的越智能":["204.5"],"那么它的体积也就不会这么小了":["204.5"],"也不是每个人都需要如此复杂的功能":["204.5"],"这也是编写库时要去明确以及取舍的啦":["204.5"],"阻止":["205.2"],"方法可以阻止监听同一事件的其他事件监听器被调用":["205.2"],"这种更新不仅方便了局部使用":["205.2"],"的项目":["205.2"],"还可以用于项目的渐进式升级":["205.2"],"解决不同版本的":["205.2"],"组件嵌套使用时":["205.2"],"无法正常工作的问题":["205.2"],"事件总是冒泡的":["205.3"],"中会继续保持":["205.3"],"因为通常它是一个更有用的默认值":["205.3"],"修改":["205.4"],"tsconfig":["205.4"],"具体配置可见ts官方文档":["205.4"],"compileroptions":["205.4"],"开始":["205.4"],"会将两个插件默认集成在":["205.4"],"rumtime":["205.4"],"可以保证回调函数同步执行":["205.5"],"这样就能确保":["205.5"],"此时还是最后的值":["205.5"],"想详细了解的可见该":["205.7"],"pr":["205.7"],"library":["205.8"],"更新":["205.9"],"可阅读参考":["205.10"],"htmlelement":["205.11"],"中新的":["205.13"],"架构":["205.13"],"开启并发更新":["205.14"],"非紧急的更新":["205.14"],"这里有个比较好的在线例子":["205.14"],"可以直接感受到":["205.14"],"的优化":["205.14"],"区别是防抖节流是控制了执行频率":["205.15"],"让渲染次数减少了":["205.15"],"v18的":["205.15"],"则没有减少渲染的次数":["205.15"],"是否延迟取决于计算机的性能":["205.16"],"感兴趣可以看下这篇文章":["205.16"],"在线例子":["205.16"],"可以阅读该篇文章理解":["205.17"],"为了生成唯一id":["205.17"],"react18专门引入了新hook":["205.17"],"getserversnapshot":["205.19"],"initialtimems":["206.0"],"其实各位猜想一下":["206.0"],"10ms":["206.0"],"级别的任务间隙时间":["206.0"],"几乎是可以忽略不计的":["206.0"],"那么这里就可以视为同样的任务":["206.0"],"不需要有很大的性能开销":["206.0"],"批量更新":["206.0"],"just":["206.1","206.8","232.4"],"logging":["206.1"],"when":["206.1","206.8","214.2"],"assess":["206.1"],"getcurrentupdatelanepriority":["206.1"],"nolanepriority":["206.1","206.3"],"expected":["206.1"],"match":["206.1"],"根据计算得到的":["206.1"],"计算更新的优先级":["206.1"],"相关参考视频讲解":["206.1"],"获得所有执行任务的调度优先级":["206.1"],"计算":["206.1"],"作为更新中的优先级":["206.1"],"remaining":["206.2"],"priorities":["206.2"],"valid":["206.2"],"updates":["206.2"],"invariant":["206.2"],"invalid":["206.2","221.4","222.3","248.1"],"idlehydrationlanepriority":["206.3"],"idlelanepriority":["206.3"],"offscreenlanepriority":["206.3"],"captureupdate":["206.4"],"xx更新":["206.4"],"就是单纯的给每一个任务进行包装":["206.4"],"作为一个个体推入到更新队列中":["206.4"],"side":["206.5"],"effects":["206.5","236.5"],"componentdidupdate":["206.5"],"这一步就是把需要更新的对象":["206.5"],"更新队列关联起来":["206.5"],"assigning":["206.8"],"requestupdatelane":["206.8"],"assume":["206.8"],"being":["206.8"],"updated":["206.8","216.5"],"common":["206.8"],"probably":["206.8"],"huge":["206.8"],"deal":["206.8"],"might":["206.8"],"more":["206.8"],"stuff":["206.8"],"together":["206.8"],"than":["206.8","206.15"],"necessary":["206.8"],"mostrecentlyupdatedroot":["206.8"],"只要":["206.9"],"workinprogress":["206.9"],"fiber":["206.9"],"不为":["206.9"],"则会一直循环执行":["206.9"],"performunitofwork":["206.9"],"中会去执行":["206.9"],"beginwork":["206.9"],"completework":["206.9"],"也就是上一章里面说的":["206.9"],"流程去创建每一个":["206.9"],"reconciler":["206.9"],"reactfiberworkloop":["206.9"],"old":["206.9"],"也就是说的":["206.10"],"过程可中断的意思":["206.10"],"v17":["206.11"],"版本的":["206.11"],"diff算法":["206.11"],"虚拟dom到真实dom的创建":["206.11"],"函数生命钩子":["206.11"],"的执行流程等":["206.11"],"reactcurrentowner":["206.12"],"里面":["206.12"],"每一次执行":["206.12"],"进行workingprogress更新":["206.12"],"当遍历完毕整棵fiber树之后便会执行":["206.12"],"reconcilechildren":["206.13"],"siblingfiber":["206.14"],"otherwise":["206.14"],"thing":["206.14"],"case":["206.14"],"throws":["206.14"],"ve":["206.14"],"reached":["206.14"],"root":["206.14","214.0"],"workinprogressrootexitstatus":["206.14"],"rootincomplete":["206.14"],"rootcompleted":["206.14"],"他的作用便是逐层收集":["206.14"],"树上已经被打上的副作用标签":["206.14"],"一直收集到":["206.14"],"上面以便于在":["206.14"],"阶段进行":["206.14"],"增删改":["206.14"],"evade":["206.15"],"babel":["206.15"],"positive":["206.15"],"int":["206.15"],"between":["206.15"],"forcing":["206.15"],"frame":["206.15"],"rates":["206.15"],"higher":["206.15"],"supported":["206.15"],"yieldinterval":["206.15"],"floor":["206.15","285.12"],"reset":["206.15","206.16"],"framerate":["206.15"],"give":["206.16"],"chance":["206.16"],"needspaint":["206.16"],"的节点":["206.17"],"那么到这里这一章就讲述完毕了":["206.17"],"下一章讲一讲react的diff算法":["206.17"],"onchangecapture":["207.2"],"也是独立组建的":["207.3"],"也是单独处理的":["207.3","207.10"],"等多个事件合成":["207.5"],"处理":["207.7"],"应用于事件触发阶段":["207.7"],"根据不同事件使用不同的插件":["207.7"],"就会找到对应的原生事件数组":["207.8"],"逐一绑定":["207.8"],"它只会从自己的作用域链的上一层继承this":["207.12"],"因此这样我们在react事件中获取到的就是组件本身了":["207.12"],"批量更新等方法":["207.13"],"并且抹平了各个浏览器的兼容性问题":["207.13"],"react合成的syntheticevent采用了事件池":["207.16"],"这样做可以大大节省内存":["207.16"],"而不会频繁的创建和销毁事件对象":["207.16"],"另外":["207.16"],"不管在什么浏览器环境下":["207.16"],"浏览器会将该事件类型统一创建为合成事件":["207.16"],"从而达到了浏览器兼容的目的":["207.16"],"统一的事件分发机制":["207.17"],"释放处理完成的事件":["207.19"],"就需要":["208.2"],"去获取或者更新维护状态":["208.2"],"类型不同":["208.3"],"那么已经直接报错了":["208.3"],"所以开发的时候一定注意":["208.3"],"顺序一致性":["208.3"],"所以当用户触发":["208.4"],"能够直观反映出来自哪个":["208.4"],"的更新":["208.4"],"最后把":["208.4"],"返回给开发者使用":["208.4"],"这一次":["208.5"],"进行对比":["208.5"],"如果相同":["208.5"],"那么直接退出更新":["208.5"],"如果不相同":["208.5"],"那么发起更新调度任务":["208.5"],"这就解释了":["208.5"],"为什么函数组件":["208.5"],"改变相同的值":["208.5"],"组件不更新了":["208.5"],"用于执行初始化":["208.7"],"更新的副作用逻辑":["208.7"],"但是对于函数组件":["208.7"],"可能存在多个":["208.7"],"把这些":["208.7"],"独立形成链表结构":["208.7"],"阶段统一处理和执行":["208.7"],"对象的创建和复用过程":["208.14"],"如果发生变化":["208.17"],"执行第一个参数函数":["208.17"],"重新生成缓存值":["208.17"],"缓存下来":["208.17"],"供开发者使用":["208.17"],"函数使命完成了":["209.1"],"shouldcomponentupdate":["209.2"],"变化了":["209.3"],"证明":["209.3"],"children的props":["209.3"],"那么通过":["209.3"],"返回新的":["209.3"],"并重新赋值给":["209.3"],"如果没有变化":["209.3"],"那么直接返回缓存的":["209.3"],"返回的重新执行":["209.4"],"产生的值":["209.4"],"否则取上一次缓存值":["209.4"],"或者配合其他hooks一起使用":["209.6"],"这样就是重新创建了一个":["209.7"],"所以浅比较会不相等":["209.7"],"组件就会更新了":["209.7"],"还有一点值得注意的就是":["209.8"],"的权重":["209.8"],"会大于":["209.8"],"这个相等是浅比较":["209.9"],"如果有一个不对应或者不相等":["209.9"],"是否相同决定原始组件是否重新渲染":["209.11"],"purecomponent":["209.12"],"同样适合类组件和函数组件":["209.12"],"一是浪费性能":["209.13"],"二是可能执行":["209.13"],"useeffect":["209.13"],"componentwillreceiveprops":["209.13"],"等钩子":["209.13"],"造成意想不到的情况发生":["209.13"],"可以制定私有化的渲染空间":["209.14"],"答案是当然可以了":["209.15"],"getselection":["210.0","239.5","241.3","241.7"],"transformbind":["210.1"],"transformmodel":["210.1"],"compat":["210.2","218.4","232.2","235.4"],"filters":["210.2"],"为根节点创建":["211.0"],"并保留":["211.0"],"转换":["211.0"],"ast节点过程中创建的一些上下文数据":["211.0"],"createvnodecall":["212.1","214.1"],"iscomponent":["212.1","241.9"],"noop":["212.1","231.1"],"转换过程中调用的一些辅助函数":["213.0"],"和修改":["213.0"],"对象的函数":["213.0"],"traversechildren":["214.0"],"transforms":["214.0","239.3"],"exitfnsi":["214.0"],"special":["214.1","219.3"],"negative":["214.1"],"mutually":["214.1"],"exclusive":["214.1"],"patchflagnames":["214.1","214.3"],"bitwise":["214.1"],"flagnames":["214.1"],"join":["214.1","286.19","287.4"],"stringifydynamicpropnames":["214.1"],"disabletracking":["214.1"],"instead":["214.2","219.10"],"compoundexpressionnode":["214.2"],"sort":["214.2"],"offset":["214.2","241.6"],"due":["214.2","218.4","232.2"],"leadingtext":["214.2"],"advancepositionwithclone":["214.2"],"ret":["214.2"],"createcompoundexpression":["214.2"],"mark":["214.3"],"flag":["214.3"],"gets":["214.3"],"patched":["214.3"],"block":["214.3"],"ssr":["214.3"],"getconstanttype":["214.3"],"constanttypes":["214.3"],"constant":["214.3"],"patchflags":["214.3","218.4","232.2","252.5"],"codegennode":["214.3","241.9"],"createcallexpression":["214.3"],"helper":["214.3"],"获取节点的常量类型":["215.1"],"consttype":["215.2"],"compound":["215.2"],"child":["215.2"],"isstring":["215.2"],"issymbol":["215.2"],"exhaustivecheck":["215.2","231.1"],"never":["215.2","231.1"],"性能方面的提升会给用户带来更多的收益":["215.3"],"组件更新的时候":["216.1"],"会判断上述的值是否改变":["216.1"],"通过移动":["216.1"],"节点的方式实现对应功能":["216.1"],"normalized":["216.2"],"beforemount":["216.2"],"over":["216.2","222.4"],"recursively":["216.2"],"settransitionhooks":["216.2"],"fresh":["216.2"],"make":["216.2","220.2","231.1"],"freshest":["216.2"],"add":["216.2"],"oldest":["216.2","216.3"],"entry":["216.2","216.3"],"parseint":["216.2","216.3"],"values":["216.2","216.3","216.4"],"issuspense":["216.2","216.3"],"prune":["216.3"],"prunecacheentry":["216.3","216.4"],"unmounted":["216.3","216.6"],"been":["216.5"],"flush":["216.5"],"deep":["216.5","236.2"],"properly":["216.6"],"resetshapeflag":["216.6"],"决定要缓存哪些子组件":["216.7"],"以及最大的缓存组件的个数":["216.7"],"渲染占位节点":["217.0"],"加载异步":["217.0"],"获取组件对象":["217.0"],"以及重新渲染组件":["217.0"],"这个函数就是该组件的渲染函数":["217.1"],"普通的异步组件初次会被渲染成一个注释节点":["217.1"],"不是函数类型":["217.2"],"也不是对象类型":["217.2"],"抛出错误":["217.2"],"就可以渲染了":["217.3"],"函数":["217.4","222.12","224.0","256.1"],"返回错误信息":["217.4"],"into":["217.7"],"account":["217.7"],"queuejob":["217.7"],"如果已经被加载的异步组件被再次初始化":["217.8"],"直接获取对应的组件返回并渲染":["217.8"],"组件节点等":["218.2"],"hydration":["218.4","232.2"],"considered":["218.4","232.2"],"handler":["218.4","232.2"],"caching":["218.4","232.2"],"hydrate":["218.4","232.2"],"convertlegacyvmodelprops":["218.4","232.2"],"definelegacyvnodeproperties":["218.4","232.2"],"was":["218.5"],"made":["218.5"],"lead":["218.5"],"unnecessary":["218.5"],"overhead":["218.5"],"should":["218.5","219.10"],"avoided":["218.5"],"marking":["218.5"],"markraw":["218.5"],"shallowref":["218.5"],"ncomponent":["218.5"],"processcommentnode":["218.8"],"popwarningcontext":["218.8"],"平台相关的":["218.10"],"可以通过他渲染":["218.11"],"根组件":["218.11"],"进而完成整个应用的渲染":["218.11"],"并最终将其挂载到某个":["218.11"],"容器中":["218.11"],"渲染流程":["218.11"],"createdevrendercontext":["219.3"],"custom":["219.3"],"handling":["219.3"],"rendered":["219.6"],"does":["219.6","226.1"],"support":["219.6"],"yet":["219.6"],"finishcomponentsetup":["219.6"],"函数的执行结果":["219.9"],"esm":["219.10"],"bundler":["219.10"],"configure":["219.10"],"your":["219.10"],"alias":["219.10"],"global":["219.10"],"happen":["219.10"],"后续执行组件的渲染的时候":["219.15"],"可以从实例和渲染上下文获取所需数据":["219.15"],"onrendertriggered":["220.1"],"renderttiggered":["220.1"],"execution":["220.2"],"setup":["220.2","236.1","243.2"],"suspense":["220.2"],"are":["220.2"],"sure":["220.2","231.1"],"register":["220.2"],"statement":["220.2"],"unknown":["220.3"],"quenepostrendereffect":["220.4"],"更新的颗粒度是":["220.5"],"组件级别的":["220.5"],"nexttick":["220.6"],"之后执行的":["220.6"],"会等待当前任务执行之后":["220.6"],"在同一个事件循环内执行所有的":["220.6"],"umounted":["220.6"],"用于捕获所有子孙组件的错误":["220.7"],"根据错误类型":["220.7"],"上报错误信息":["220.7"],"统计":["220.7"],"needs":["221.1"],"casting":["221.1"],"hasown":["221.1"],"然后添加到实例的":["221.2"],"instance":["221.2"],"props上":["221.2"],"castvalues":["221.3"],"obj":["221.3"],"resolvepropvalue":["221.3"],"failed":["221.4","236.1"],"静态的":["221.8"],"会跳过":["221.8"],"更新过程只需要修改最外层属性":["221.9"],"的再次执行":["221.10"],"从而导致子组件的重新渲染":["221.10"],"数据发生变化":["221.11"],"会触发子组件的重新渲染":["221.11"],"setref":["222.3"],"needed":["222.4"],"properties":["222.4"],"el":["222.4","236.5"],"mountchildren":["222.7"],"元素子节点":["222.7"],"一般会有":["222.7"],"三种情况":["222.7"],"纯文本":["222.7"],"数组":["222.7","286.52"],"和空":["222.7"],"vnode数组":["222.7"],"空":["222.7"],"则同步过程结束":["222.9"],"未知子序列":["222.11"],"完成整个组件树的更新":["222.12"],"reactiveeffect":["223.1"],"方式创建了副作用实例":["223.1"],"effect":["223.1","225.4"],"itself":["223.2"],"defer":["223.2"],"cleanup":["223.2","255.0"],"重新计算":["224.0"],"进一步执行":["225.0","231.4"],"computed":["225.0"],"getter":["225.0"],"ontrack":["225.4"],"ontrigger":["225.4"],"sourcemapgenerator":["226.1","227.1"],"tojson":["226.1"],"method":["226.1"],"but":["226.1"],"types":["226.1"],"lazy":["227.1","251.2"],"non":["227.1","252.6"],"builds":["227.1"],"setsourcecontent":["227.1"],"genimports":["228.1"],"genhoists":["228.1"],"popscopeid":["228.2"],"ctx":["228.2"],"withctx":["228.2"],"unref":["228.2"],"isref":["228.2"],"memo":["228.2"],"withmemo":["228.2"],"ismemosame":["228.2"],"gennode":["228.3","231.2","231.6"],"所以函数名":["229.0"],"最后执行了":["229.0"],"ident函数":["229.0"],"代码最后一行有两个空格缩进":["229.0"],"temp":["230.1"],"specific":["230.2"],"searchvalue":["230.2"],"replacevalue":["230.2"],"charcodeat":["230.2"],"unhandled":["231.1"],"exhaust":["231.1"],"possible":["231.1"],"的值":["231.4"],"继续生成代码":["231.4"],"vnode的属性":["231.4"],"如果是对象表达式":["231.4"],"会递归执行":["231.4"],"genexpression":["231.4"],"遇到条件表达式的节点会执行":["231.6"],"genconditionalexpression":["231.6"],"without":["231.7"],"isblock":["232.3"],"here":["232.4"],"parentnode":["232.4"],"阶段更新组件的时候":["233.0"],"可以遍历":["233.0"],"只对比动态节点":["233.0"],"达到性能优化":["233.0"],"devtoolsunmountapp":["235.4"],"provide":["235.4"],"provides":["235.4"],"property":["235.4"],"overwritten":["235.4"],"installappcompatproperties":["235.4"],"slice":["236.1","241.4"],"be":["236.1","241.9","252.3"],"traverse":["236.2","258.3"],"oldvalue":["236.2"],"needcalltransitionhooks":["236.4"],"pendingbranch":["236.4"],"persisted":["236.4"],"beforeenter":["236.4"],"hostinsert":["236.4"],"onvnodemounted":["236.4"],"pausetracking":["236.5","245.3"],"callwithasyncerrorhandling":["236.5"],"errorcodes":["236.5"],"directive":["236.5"],"resettracking":["236.5","245.3"],"hostsetelementtext":["236.6"],"unoptimized":["236.6"],"onvnodeupdated":["236.6"],"onvnodeunmounted":["236.7"],"过程中执行指令对应的钩子函数":["237.0"],"合并一些空白字符":["238.0"],"已经在生产环境下删除注释节点":["238.0"],"提升后续的编译效率":["238.0"],"mockid":["239.2"],"generate":["239.3"],"会在后续转换到时候赋值":["239.4"],"在生成代码的时候用到":["239.4"],"loc":["240.1","241.3"],"locstub":["240.1"],"desired":["241.1","241.10"],"configuration":["241.1","241.10"],"comments":["241.1","241.10"],"ispretag":["241.1","241.10"],"leading":["241.1","241.10"],"per":["241.1","241.10"],"grouping":["241.1","241.10"],"nodetypes":["241.3","241.7"],"column":["241.6"],"line":["241.6"],"eof":["241.8"],"comment":["241.8"],"like":["241.8"],"isspecialtemplatedirective":["241.9"],"during":["241.9"],"phase":["241.9"],"inpre":["242.1"],"invpre":["242.1"],"onwarn":["242.1"],"doesn":["243.1"],"injection":["243.2"],"found":["243.2"],"components":["243.2"],"会将应用程序组件与他们当前的组织方式耦合起来":["243.15"],"使得重构变得非常麻烦":["243.15"],"但是如何是组件库的场景":["243.15"],"依赖注入是非常方便的":["243.15"],"直接可以在入口组件进行注入":["243.15"],"实现数据驱动":["244.0"],"决定是否要递归执行":["245.1"],"还是收集过的":["246.1"],"逻辑":["246.3"],"没超过":["246.3"],"initdepmarkers":["246.3"],"给依赖打标记":["246.3"],"自然的性能提高了":["246.4"],"的结果是否大于":["246.5"],"来判断当前层级依赖是否已经收集过了":["246.5"],"中找到所有相关的副作用函数":["247.2"],"并遍历执行一次":["247.2"],"执行被包装的原始函数":["247.4"],"fn":["247.4","259.3"],"mutablehandlers":["248.0"],"mutablecollectionhandlers":["248.0"],"reactivemap":["248.0"],"collection":["248.1"],"readonlycollectionhandlers":["249.0"],"readonlymap":["249.0"],"对象的实例":["250.0"],"haschanged":["250.1"],"triggerrefvalue":["250.1"],"shallowcollectionhandlers":["251.0"],"shallowreactivemap":["251.0"],"also":["251.2"],"need":["251.2"],"circular":["251.2"],"dependency":["251.2"],"标准化传入的参数":["252.2"],"so":["252.3"],"moved":["252.3"],"around":["252.3"],"createtextvnode":["252.3"],"vnodenormalizedchildren":["252.3"],"setupstatefulcomponent":["252.4"],"slotflags":["252.5"],"stable":["252.5"],"bail":["252.5"],"scopeid":["252.5"],"slotscopeids":["252.5"],"distinguish":["252.6"],"scoped":["252.6"],"slots":["252.6"],"ones":["252.6"],"ns":["252.6"],"通过这种方式":["252.7"],"就可以把子组件的数据传递到父组件定义的插槽函数了":["252.7"],"让子组件渲染的时候":["252.8"],"通过函数参数方式传递子组件的数据":["252.8"],"参数的方式传入多个":["253.0"],"并且可以添加多个自定义修饰符":["253.0"],"重构的":["254.2"],"vue3的体积是根据":["254.3"],"项目中使用到的功能来变化的":["254.3"],"无脑递归":["254.4"],"动态节点数量":["254.5"],"相关":["254.5"],"很大的性能突破":["254.5"],"x中":["254.9"],"绑定事件每次触发都要重新生成全新的function去更新":["254.9"],"然后根据对象渲染":["254.10"],"支持多根节点组件":["254.10"],"中读取相关编译配置":["254.11"],"最终编译生成不同的目标文件":["254.11"],"还是":["256.1"],"queuecb":["256.1"],"最终都会执行":["256.1"],"queueflush":["256.1"],"currentflushpromise":["256.2","256.4"],"resolvedpromise":["256.2"],"flushpostflushcbs":["256.4"],"postflushcb":["256.4"],"queued":["256.4"],"jobs":["256.4"],"flushing":["256.4"],"until":["256.4"],"drains":["256.4"],"pendingpostflushcbs":["256.4"],"splice":["256.5"],"checkrecursiveupdates":["256.6"],"activepostflushcbspostflushindex":["256.6"],"watcher":["256.8"],"runner":["257.2"],"都会执行回调函数":["258.1"],"watcheffect":["258.2"],"函数被":["258.3"],"函数包装一个":["258.3"],"再把":["258.5"],"更新成":["258.5"],"为了做下一次的对比":["258.5"],"方式在组件更新之前执行":["258.6"],"如果组件没挂载":["258.6"],"就在组件挂载之前通过一定的调度执行":["258.6"],"job":["258.8"],"求的新值":["258.9"],"饮用":["258.10"],"以某种调度方式执行回调函数":["258.11"],"watchoptionsbase":["259.2"],"watchstophandle":["259.2"],"onstop":["259.3"],"两者都会执行注册的无效回调函数":["259.3"],"的小伙伴是不是对这句口号似曾相识":["260.0"],"是的":["260.0"],"editing":["260.0"],"redefined":["260.0"],"也就是重新定义了代码编辑器":["260.0"],"我这份攻略绝壁是热乎乎的":["260.1"],"想要第一时间关注":["260.1"],"版本信息的话":["260.1"],"可以戳下图中提到的链接填写自己的邮箱":["260.1"],"commits":["260.2"],"解决的第二个痛点是增加协作功能":["260.2"],"不过由于我目前没有邀请其他用户参与":["260.2"],"还无法使用共享功能":["260.2"],"后面有小伙伴体验的话":["260.2"],"可以通过我分享的链接下载试一波":["260.2"],"referral":["260.2"],"welcome":["260.3"],"就可以了":["260.3"],"太特喵的炫酷了":["260.4"],"zhimg":["262.0"],"都是部署在国内阿里云的":["262.0"],"速度都还不错":["262.0"],"如下图所示":["262.0"],"可以放心使用":["262.0"],"7173447848292253704":["263.6"],"不同的手机端看的效果会差很多":["265.0"],"平时习惯了":["265.0"],"wx":["265.0"],"遍历列表":["265.0"],"这种生成代码肯定全部给你平铺出来吧":["265.0"],"但是当我使用过":["265.0"],"之后发现确实他可以解决我们很多的重复编写前端页面代码的场景":["265.0"],"而且也打消了我对这类":["265.0"],"生成前端页面代码功能的一些固有思想":["265.0"],"就如它的":["265.0"],"所说":["265.0"],"可以说是很贴心了":["265.1"],"确实是很智能了":["265.2"],"这就很符合我们平时编码的套路了":["265.3"],"我还是那句话":["265.5"],"所有东西都是一个辅助":["265.5"],"一个工具":["265.5"],"它提供了这些优质的功能而使用的好不好是看使用者本身的":["265.5"],"欢迎大家去使用一下":["265.5"],"支持国产":["265.5"],"最后再":["275.2"],"就会从之前已经下载好的文件进行安装了":["275.2"],"六":["275.2"],"七":["275.2"],"vscode":["275.2"],"下载地址":["275.2"],"fira":["275.2"],"什么是fira":["275.2"],"先上图":["275.2"],"如何安装":["275.2"],"原文参考":["275.2"],"下载字体":["275.2"],"我这边选择手动下载":["275.2"],"手动编辑":["275.2"],"settings":["275.2"],"设置字体":["275.2"],"fontligatures":["275.2"],"如果设置没有效果":["275.2"],"重启一下vscode就行了":["275.2"],"八":["275.2"],"内网穿透":["275.2"],"ngrok":["275.2"],"访问地址":["275.2"],"xxxxxx":["275.2"],"80是本地启动的服务端口号":["275.2"],"marktext也是支持文件上传的":["276.0"],"可以上传到sm":["276.0"],"ms图床和github上去":["276.0"],"左下角设置按钮":["276.0"],"uploader":["276.0"],"进行设置即可":["276.0"],"marktext还能支持各种图表":["276.0"],"比如通过如下代码我们可以生成一张时序图":["276.0"],"网页鼠标点击特效":["279.1"],"爱心":["279.1"],"笑脸":["279.6"],"点击后出现烟花效果":["279.6"],"6e3":["279.8"],"包括诸如淡入淡出":["281.2"],"滚动":["281.2"],"翻转等动画效果":["281.2"],"julianshapiro":["281.2"],"jquery无缝滚动插件":["281.3"],"vcomments":["282.2"],"使用方式":["283.1","283.2","283.4","283.8","283.10","283.12"],"cb":["283.4","283.12"],"3e2":["283.4","283.12"],"1e3":["283.5"],"的一个promise":["283.6"],"特殊说明":["283.6"],"组件上使用时请注意this指向":["283.6"],"建议使用方式":["283.6"],"executefc":["283.7"],"fetchdata":["283.10"],"9挂学警港澳":["284.32","284.33","284.34"],"海南":["284.40"],"香港":["284.40"],"澳门":["284.40"],"dxx":["284.45"],"udeb0":["284.49"],"ud87a":["284.49","284.66"],"udfe0":["284.49","284.66"],"uff5e":["284.53"],"ufe4f":["284.53"],"uffe5":["284.53"],"imgheight":["286.1"],"offsetheight":["286.1"],"insertbefore":["286.9"],"u9fa5":["286.13"],"lower":["286.13"],"小写":["286.13"],"upper":["286.13"],"大写":["286.13"],"html标记":["286.13"],"不是引用类型直接返回":["286.14"],"a2ce5b":["286.22"],"ffffff":["286.27"],"getdate":["286.28"],"verticalalign":["286.33"],"bottom":["286.33"],"float":["286.33"],"存储滚动的数字":["286.33"],"bigdata":["286.37"],"hold":["286.38"],"interactive":["286.39"],"监听dom是否加载完成":["286.39"],"上传完成":["286.46"],"上传":["286.47"],"zoom":["286.48"],"放大缩小相应倍数":["286.48"],"built":["286.55"],"builtin":["286.55"],"0086b3":["286.55"],"deletion":["286.55"],"fdd":["286.55"],"addition":["286.55"],"dfd":["286.55"],"emphasis":["286.55"],"e34155":["286.63"],"23606797749979":["286.67"],"globalproxy":["286.69"],"removechild":["286.71"],"product":["286.72"],"datepadzero":["287.3"],"喜欢的运动是":["288.4"],"后面可以根据需要":["288.4"],"继续往下添加重载方法":["288.4"],"0211363285087005":["291.3"],"jpy":["291.5"],"释放内存":["294.1"],"siht":["295.3"],"tolowercase":["295.10"]}]'},t={"0.0":{t:"<small>3.0.1 (2024-04-08)</small>",p:`
✨新增(components): 新增了注册chartgpt (09a7b00)
✨新增(config): 更新lock  ...`,l:"CHANGELOG/index.html",a:"small-3-0-1-2024-04-08-small"},"0.1":{t:"1.0.0 (2022-11-20)",p:`
⚡️性能(webpack): 修复令牌 (ab89e15)
✨新增(components): 新增补充组件 (542888 ...`,l:"CHANGELOG/index.html#_1-0-0-2022-11-20",a:"_1-0-0-2022-11-20"},"1.0":{t:"# 浏览器的缓存策略",p:`缓存可以说是性能优化中简单高效的一种优化方式了，它可以显著减少网络传输所带来的损耗。
对于一个数据请求来说，可以分为发起网络 ...`,l:"basic-quality/browser/browser/browser-cache/index.html",a:"浏览器的缓存策略"},"1.1":{t:"缓存位置",p:`从缓存位置上来说分为四种，并且各自有优先级，当依次查找缓存且都没有命中的时候，才会去请求网络
Service Worker  ...`,l:"basic-quality/browser/browser/browser-cache/index.html#缓存位置",a:"缓存位置"},"1.2":{t:"Service Worker",p:"Service Worker 的缓存与浏览器其他内建的缓存机制不同，它可以让我们自由控制缓存哪些文件、如何匹配缓存、如何读取 ...",l:"basic-quality/browser/browser/browser-cache/index.html#service-worker",a:"service-worker"},"1.3":{t:"Memory Cache",p:`!图片
Memory Cache 也就是内存中的缓存，读取内存中的数据肯定比磁盘快。但是内存缓存虽然读取高效，可是缓存持续性 ...`,l:"basic-quality/browser/browser/browser-cache/index.html#memory-cache",a:"memory-cache"},"1.4":{t:"Disk Cache",p:"Disk Cache 也就是存储在硬盘中的缓存，读取速度慢点，但是什么都能存储到磁盘中，比之 Memory Cache 胜在 ...",l:"basic-quality/browser/browser/browser-cache/index.html#disk-cache",a:"disk-cache"},"1.5":{t:"Push Cache",p:"Push Cache 是 HTTP/2 中的内容，当以上三种缓存都没有命中时，它才会被使用。并且缓存时间也很短暂，只在会话（ ...",l:"basic-quality/browser/browser/browser-cache/index.html#push-cache",a:"push-cache"},"1.6":{t:"网络请求 fetch",p:`如果所有缓存都没有命中的话，那么只能发起请求来获取资源了。
`,l:"basic-quality/browser/browser/browser-cache/index.html#网络请求-fetch",a:"网络请求-fetch"},"1.7":{t:"缓存策略",p:`通常浏览器缓存策略分为两种：强缓存和协商缓存，并且缓存策略都是通过设置 HTTP Header 来实现的。
`,l:"basic-quality/browser/browser/browser-cache/index.html#缓存策略",a:"缓存策略"},"1.8":{t:"强缓存",p:"强缓存可以通过设置两种 HTTP Header 实现：Expires 和 Cache-Control 。强缓存表示在缓存期间 ...",l:"basic-quality/browser/browser/browser-cache/index.html#强缓存",a:"强缓存"},"1.9":{t:"Expires",p:`Expires: Wed, 22 Oct 2018 08:41:00 GMT
Expires 是 HTTP/1 的产物，表示 ...`,l:"basic-quality/browser/browser/browser-cache/index.html#expires",a:"expires"},"1.10":{t:"Cache-control",p:`!图片
Cache-control: max-age=30
Cache-Control 出现于 HTTP/1.1，优先级高于 ...`,l:"basic-quality/browser/browser/browser-cache/index.html#cache-control",a:"cache-control"},"1.11":{t:"协商缓存",p:`!图片
如果缓存过期了，就需要发起请求验证资源是否有更新。协商缓存可以通过设置两种 HTTP Header 实现：Last- ...`,l:"basic-quality/browser/browser/browser-cache/index.html#协商缓存",a:"协商缓存"},"1.12":{t:"Last-Modified 和 If-Modified-Since",p:"Last-Modified 表示本地文件最后修改日期，If-Modified-Since 会将 Last-Modified  ...",l:"basic-quality/browser/browser/browser-cache/index.html#last-modified-和-if-modified-since",a:"last-modified-和-if-modified-since"},"1.13":{t:"ETag 和 If-None-Match",p:"ETag 类似于文件指纹，If-None-Match 会将当前 ETag 发送给服务器，询问该资源 ETag 是否变动，有变 ...",l:"basic-quality/browser/browser/browser-cache/index.html#etag-和-if-none-match",a:"etag-和-if-none-match"},"1.14":{t:"last-modified 和 etag 有什么区别",p:"",l:"basic-quality/browser/browser/browser-cache/index.html#last-modified-和-etag-有什么区别",a:"last-modified-和-etag-有什么区别"},"1.15":{t:"last-modified",p:`
静态文件的 last-modified 一般会根据文件的最后修改时间生成

`,l:"basic-quality/browser/browser/browser-cache/index.html#last-modified",a:"last-modified"},"1.16":{t:"etag",p:`
是根据文件的内容有没有变化进行更新
如果仅仅是修改时间变了 但是内容没变 不会更新
当文件更改时，etag 值必须改变。
 ...`,l:"basic-quality/browser/browser/browser-cache/index.html#etag",a:"etag"},"1.17":{t:"Etag主要为了解决Last-Modified无法解决的一些问题",p:`
一些文件也许周期性的更改,但是它的内容并不改变(仅仅改变的是修改时间),这个时候我们不希望客户端认为这个文件被修改了,而重 ...`,l:"basic-quality/browser/browser/browser-cache/index.html#etag主要为了解决last-modified无法解决的一些问题",a:"etag主要为了解决last-modified无法解决的一些问题"},"1.18":{t:"如果 http 响应头中 ETag 值改变了，是否意味着文件内容一定已经更改 ？",p:`不一定，由服务器中 ETag 的生成算法决定。
比如 nginx 中的 etag 由 last_modified 与 con ...`,l:"basic-quality/browser/browser/browser-cache/index.html#如果-http-响应头中-etag-值改变了-是否意味着文件内容一定已经更改",a:"如果-http-响应头中-etag-值改变了-是否意味着文件内容一定已经更改"},"1.19":{t:"实际场景应用缓存策略",p:`单纯了解理论而不付诸于实践是没有意义的，接下来我们来通过几个场景学习下如何使用这些理论。
`,l:"basic-quality/browser/browser/browser-cache/index.html#实际场景应用缓存策略",a:"实际场景应用缓存策略"},"1.20":{t:"频繁变动的资源",p:"对于频繁变动的资源，首先需要使用 Cache-Control: no-cache 使浏览器每次都请求服务器，然后配合 ETa ...",l:"basic-quality/browser/browser/browser-cache/index.html#频繁变动的资源",a:"频繁变动的资源"},"1.21":{t:"代码文件",p:`这里特指除了 HTML 外的代码文件，因为 HTML 文件一般不缓存或者缓存时间很短。
一般来说，现在都会使用工具来打包代码 ...`,l:"basic-quality/browser/browser/browser-cache/index.html#代码文件",a:"代码文件"},"1.22":{t:"示例 nginx",p:`# 强缓存时效为30s，30s后默认使用协商缓存，此时缓存时效优先级 &gt; max-age
location / {
  ...`,l:"basic-quality/browser/browser/browser-cache/index.html#示例-nginx",a:"示例-nginx"},"2.0":{t:"# 从输入一个 URL 地址到浏览器完成渲染的整个过程",p:"",l:"basic-quality/browser/browser/browser-open-url/index.html",a:"从输入一个-url-地址到浏览器完成渲染的整个过程"},"2.1":{t:"简单版",p:"",l:"basic-quality/browser/browser/browser-open-url/index.html#简单版",a:"简单版"},"2.2":{t:"这里可以按照进程来分",p:`
浏览器主进程： 用户输入判断

处理输入信息
判断是 URL 还是 关键字
如果是关键字 会按照默认地址组装出一个 URL ...`,l:"basic-quality/browser/browser/browser-open-url/index.html#这里可以按照进程来分",a:"这里可以按照进程来分"},"2.3":{t:"复杂版",p:`
用户输入URL，浏览器会根据用户输入的信息判断是搜索还是网址，如果是搜索内容，就将搜索内容+默认搜索引擎合成新的URL；如 ...`,l:"basic-quality/browser/browser/browser-open-url/index.html#复杂版",a:"复杂版"},"3.0":{t:"# 浏览器进程",p:"",l:"basic-quality/browser/browser/browser-process/index.html",a:"浏览器进程"},"3.1":{t:"浏览器四大进程",p:`
Browser进程：浏览器的主进程（负责协调、主控），只有一个。

负责浏览器界面显示，与用户交互。如前进，后退等
负责各 ...`,l:"basic-quality/browser/browser/browser-process/index.html#浏览器四大进程",a:"浏览器四大进程"},"3.2":{t:"浏览器多进程的优势",p:`相比于单进程浏览器，多进程有如下优点：

避免单个page crash影响整个浏览器
避免第三方插件crash影响整个浏览器 ...`,l:"basic-quality/browser/browser/browser-process/index.html#浏览器多进程的优势",a:"浏览器多进程的优势"},"3.3":{t:"渲染进程包括哪些线程",p:"",l:"basic-quality/browser/browser/browser-process/index.html#渲染进程包括哪些线程",a:"渲染进程包括哪些线程"},"3.4":{t:"GUI渲染线程 （渲染主线程）",p:`
负责渲染浏览器界面，解析HTML，CSS，构建DOM树和 RenderObject 树，布局和绘制等。
当界面需要重绘（R ...`,l:"basic-quality/browser/browser/browser-process/index.html#gui渲染线程-渲染主线程",a:"gui渲染线程-渲染主线程"},"3.5":{t:"JS引擎线程(单线程)",p:`
也称为JS内核，负责处理Javascript脚本程序。（例如常常听到的谷歌浏览器的V8引擎，新版火狐的JaegerMonk ...`,l:"basic-quality/browser/browser/browser-process/index.html#js引擎线程-单线程",a:"js引擎线程-单线程"},"3.6":{t:"事件触发线程",p:`
归属于渲染进程而不是JS引擎，用来控制事件轮询（可以理解，JS引擎自己都忙不过来，需要浏览器另开线程协助）
当JS引擎执行 ...`,l:"basic-quality/browser/browser/browser-process/index.html#事件触发线程",a:"事件触发线程"},"3.7":{t:"定时触发器线程",p:`
定时器setInterval与setTimeout所在线程
浏览器定时计数器并不是由JavaScript引擎计数的,（因为 ...`,l:"basic-quality/browser/browser/browser-process/index.html#定时触发器线程",a:"定时触发器线程"},"3.8":{t:"异步http请求线程",p:`
用于处理请求XMLHttpRequest，在连接后是通过浏览器新开一个线程请求。如ajax，是浏览器新开一个http线程
 ...`,l:"basic-quality/browser/browser/browser-process/index.html#异步http请求线程",a:"异步http请求线程"},"4.0":{t:"# 浏览器缓存机浏览器的组成 & 内核组成制",p:"",l:"basic-quality/browser/browser/composition/index.html",a:"浏览器缓存机浏览器的组成-内核组成制"},"4.1":{t:"浏览器组成",p:"",l:"basic-quality/browser/browser/composition/index.html#浏览器组成",a:"浏览器组成"},"4.2":{t:"主要由7部分组成",p:`
User Interface（用户界面）：所能看到的界面部分；
Browser engine（浏览器引擎）：在用户界面和渲 ...`,l:"basic-quality/browser/browser/composition/index.html#主要由7部分组成",a:"主要由7部分组成"},"4.3":{t:"内核",p:`主要分成两部分：渲染引擎(layout engineer或Rendering Engine)和JS引擎
`,l:"basic-quality/browser/browser/composition/index.html#内核",a:"内核"},"4.4":{t:"渲染引擎",p:`
负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入CSS等），以及计算网页的显示方式，然后会输出至显示器 ...`,l:"basic-quality/browser/browser/composition/index.html#渲染引擎",a:"渲染引擎"},"4.5":{t:"JS引擎",p:`
解析和执行javascript来实现网页的动态效果
最开始渲染引擎和JS引擎并没有区分的很明确，后来JS引擎越来越独立，内 ...`,l:"basic-quality/browser/browser/composition/index.html#js引擎",a:"js引擎"},"4.6":{t:"常见的浏览器内核有哪些",p:`
Trident内核：IE,MaxThon,TT,The World,360,搜狗浏览器等。[又称MSHTML]
Gecko ...`,l:"basic-quality/browser/browser/composition/index.html#常见的浏览器内核有哪些",a:"常见的浏览器内核有哪些"},"5.0":{t:"# 浏览器的 5 种 Observer",p:"",l:"basic-quality/browser/browser/observer/index.html",a:"浏览器的-5-种-observer"},"5.1":{t:"IntersectionObserver",p:"",l:"basic-quality/browser/browser/observer/index.html#intersectionobserver",a:"intersectionobserver"},"5.2":{t:"一个元素从不可见到可见，从可见到不可见",p:"IntersectionObserver 可以监听一个元素和可视区域相交部分的比例，然后在可视比例达到某个阈值的时候触发回调 ...",l:"basic-quality/browser/browser/observer/index.html#一个元素从不可见到可见-从可见到不可见",a:"一个元素从不可见到可见-从可见到不可见"},"5.3":{t:"这有啥用？",p:"这太有用了。我们在做一些数据采集的时候，希望知道某个元素是否是可见的，什么时候可见的，就可以用这个 api 来监听，还有做图 ...",l:"basic-quality/browser/browser/observer/index.html#这有啥用",a:"这有啥用"},"5.4":{t:"MutationObserver",p:"",l:"basic-quality/browser/browser/observer/index.html#mutationobserver",a:"mutationobserver"},"5.5":{t:"监听一个普通 JS 对象的变化，我们会用 Object.defineProperty 或者 Proxy",p:`而监听元素的属性和子节点的变化，我们可以用 MutationObserver：
MutationObserver 可以监听对 ...`,l:"basic-quality/browser/browser/observer/index.html#监听一个普通-js-对象的变化-我们会用-object-defineproperty-或者-proxy",a:"监听一个普通-js-对象的变化-我们会用-object-defineproperty-或者-proxy"},"5.6":{t:"这有啥用？",p:"比如文章水印被人通过 devtools 去掉了，那么就可以通过 MutationObserver 监听这个变化，然后重新加上 ...",l:"basic-quality/browser/browser/observer/index.html#这有啥用",a:"这有啥用"},"5.7":{t:"ResizeObserver",p:"",l:"basic-quality/browser/browser/observer/index.html#resizeobserver",a:"resizeobserver"},"5.8":{t:"窗口我们可以用 addEventListener 监听 resize 事件，那元素呢？",p:`元素可以用 ResizeObserver 监听大小的改变，当 width、height 被修改时会触发回调。
const r ...`,l:"basic-quality/browser/browser/observer/index.html#窗口我们可以用-addeventlistener-监听-resize-事件-那元素呢",a:"窗口我们可以用-addeventlistener-监听-resize-事件-那元素呢"},"5.9":{t:"PerformanceObserver",p:`浏览器提供了 performance 的 api 用于记录一些时间点、某个时间段、资源加载的耗时等。
我们希望记录了 per ...`,l:"basic-quality/browser/browser/observer/index.html#performanceobserver",a:"performanceobserver"},"5.10":{t:"ReportingObserver",p:`当浏览器运行到过时（deprecation）的 api 的时候，会在控制台打印一个过时的报告:
浏览器还会在一些情况下对网页 ...`,l:"basic-quality/browser/browser/observer/index.html#reportingobserver",a:"reportingobserver"},"5.11":{t:"总结",p:"监听用户的交互行为，我们会用 addEventListener 来监听 click、mousedown、keydown、in ...",l:"basic-quality/browser/browser/observer/index.html#总结",a:"总结"},"5.12":{t:"浏览器提供了这 5 种 Observer",p:`
IntersectionObserver：监听元素可见性变化，常用来做元素显示的数据采集、图片的懒加载
MutationO ...`,l:"basic-quality/browser/browser/observer/index.html#浏览器提供了这-5-种-observer",a:"浏览器提供了这-5-种-observer"},"6.0":{t:"# 浏览器渲染原理",p:"",l:"basic-quality/browser/browser/render/index.html",a:"浏览器渲染原理"},"6.1":{t:"浏览器是如何渲染页面",p:`
当浏览器的网络线程收到 HTML 文档，会产生一个渲染任务，并将其传递给渲染主线程的消息队列。
在事件循环机制的作用下，渲 ...`,l:"basic-quality/browser/browser/render/index.html#浏览器是如何渲染页面",a:"浏览器是如何渲染页面"},"6.2":{t:"渲染流水线",p:`!图片
`,l:"basic-quality/browser/browser/render/index.html#渲染流水线",a:"渲染流水线"},"6.3":{t:"什么是 reflow? 回流",p:`
reflow 的本质就是重新计算 layout 树。
当进行了会影响布局树的操作后，需要重新计算布局树，会引发 layou ...`,l:"basic-quality/browser/browser/render/index.html#什么是-reflow-回流",a:"什么是-reflow-回流"},"6.4":{t:"什么是 repaint? 重绘",p:`
repaint 的本质就是重新根据分层信息计算了绘制指令
当改动了可见样式后，就需要重新计算，会引发 repaint。
由 ...`,l:"basic-quality/browser/browser/render/index.html#什么是-repaint-重绘",a:"什么是-repaint-重绘"},"6.5":{t:"为什么 transform 性能高",p:`
因为 transform 既不会影响布局也不影响绘制指令，它影响的只是渲染流程的最后一个「draw」阶段
由于 draw  ...`,l:"basic-quality/browser/browser/render/index.html#为什么-transform-性能高",a:"为什么-transform-性能高"},"7.0":{t:"# 浏览器渲染流水线解析",p:`1. 渲染流水线
!Browser Render Pipeline
上图显示了 Chrome 一个高度简化后的渲染流水线示意 ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html",a:"浏览器渲染流水线解析"},"7.1":{t:"1.1 进程与线程",p:"一个 Chrome 浏览器一般会有一个 Browser 进程，一个 GPU 进程，和多个 Renderer 进程，通常每个  ...",l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_1-1-进程与线程",a:"_1-1-进程与线程"},"7.2":{t:"1.2 帧",p:"所有的渲染流水线都会有帧的概念，帧这个概念抽象描述了渲染流水线下级模块往上级模块输出的绘制内容相关数据的封装。我们可以看到  ...",l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_1-2-帧",a:"_1-2-帧"},"7.3":{t:"1.1.1 Main Frame",p:"Main Frame 包含了对网页内容的描述，主要以绘图指令的形式，或者可以简单理解为某个时间点对整个网页的一个矢量图快照（ ...",l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_1-1-1-main-frame",a:"_1-1-1-main-frame"},"7.4":{t:"1.2.2 Compositor Frame",p:"Layer Compositor 接收 Blink 生成的 Main Frame，并转换成合成器内部的图层树结构（因为图层化 ...",l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_1-2-2-compositor-frame",a:"_1-2-2-compositor-frame"},"7.5":{t:"1.2.3 GL Frame",p:"Display Compositor 将 Compositor Frame 的每个 Draw Quad 绘制指令转换一个 G ...",l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_1-2-3-gl-frame",a:"_1-2-3-gl-frame"},"7.6":{t:"1.3 调度",p:"Chrome 渲染流水线的调度是基于请求和状态机响应，调度的最上级中枢运行在 Browser UI 线程，它按显示器的 VS ...",l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_1-3-调度",a:"_1-3-调度"},"7.7":{t:"2.1 合成器动画",p:`合成器动画又可以分为两类：

合成器本身触发并运行的，比如最常见的网页惯性滚动，包括整个网页或者某个页内可滚动元素的滚动；
 ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_2-1-合成器动画",a:"_2-1-合成器动画"},"7.8":{t:"2.2 非合成器动画",p:`非合成器动画也可以分为两类：

使用 CSS Translation 或者 Animation API 创建的动画，但是无法 ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_2-2-非合成器动画",a:"_2-2-非合成器动画"},"7.9":{t:"3.1 光栅化机制",p:"在对动画性能进行分析之前，需要先说明一下目前的 Chrome 的光栅化机制。合成器会监控是否需要安排新的光栅化任务，当需要光 ...",l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_3-1-光栅化机制",a:"_3-1-光栅化机制"},"7.10":{t:"4.1 动画流水线",p:`!Compositor Animation

上图显示了合成器动画的渲染流水线示意图，根据 Android WebView  ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_4-1-动画流水线",a:"_4-1-动画流水线"},"7.11":{t:"4.2 动画耗时分析",p:`
Begin Frame 的耗时一般很短，大概 1 ～ 2 毫秒左右；
Draw 的耗时也不长，一般不超过 5 毫秒，耗时主 ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_4-2-动画耗时分析",a:"_4-2-动画耗时分析"},"7.12":{t:"4.3 动画性能优化 Checklist",p:`根据上述的耗时分析，我们可以给出一个页端优化合成器动画性能的简单 Checklist：

检查网页的图层结构是否合理，包括深 ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_4-3-动画性能优化-checklist",a:"_4-3-动画性能优化-checklist"},"7.13":{t:"5.1 动画流水线",p:`!Blink Animation
从上图可以看出非合成器动画的流水线比合成器动画更长更复杂，并且非合成器动画的后半段跟合成器 ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_5-1-动画流水线",a:"_5-1-动画流水线"},"7.14":{t:"5.2 动画耗时分析和优化指南",p:`
JavaScipt 的耗时是由页端自己的逻辑决定的，一般超过 10 毫秒就基本上很难实现 60 帧的非合成器动画了；
Ma ...`,l:"basic-quality/browser/browser/render-pipeline-parsing/index.html#_5-2-动画耗时分析和优化指南",a:"_5-2-动画耗时分析和优化指南"},"8.0":{t:"# 浏览器存储",p:"",l:"basic-quality/browser/browser/storage/index.html",a:"浏览器存储"},"8.1":{t:"cookie vs localStorage vs sessionStorage",p:"",l:"basic-quality/browser/browser/storage/index.html#cookie-vs-localstorage-vs-sessionstorage",a:"cookie-vs-localstorage-vs-sessionstorage"},"8.2":{t:"cookie",p:`
cookie是客户端的解决方案，是一种网络服务器存储在计算机或移动设备上的纯文本文件，是服务器发送到Web浏览器上的一小块 ...`,l:"basic-quality/browser/browser/storage/index.html#cookie",a:"cookie"},"8.3":{t:"cookie的用处",p:`
会话管理：用户账号密码
个性化：用户偏好设置
追踪：记录和分析用户行为

`,l:"basic-quality/browser/browser/storage/index.html#cookie的用处",a:"cookie的用处"},"8.4":{t:"cookie的特点",p:`
大小限制在4KB以内
都会消耗网络的带宽
不加密则不安全
使用JS操作Cookie比较复杂

`,l:"basic-quality/browser/browser/storage/index.html#cookie的特点",a:"cookie的特点"},"8.5":{t:"localStorage",p:`只读的localStorage允许访问一个Document的对象Storage，存储的数据将保存在浏览器会话中。
addev ...`,l:"basic-quality/browser/browser/storage/index.html#localstorage",a:"localstorage"},"8.6":{t:"异同",p:"",l:"basic-quality/browser/browser/storage/index.html#异同",a:"异同"},"8.7":{t:"生命周期",p:`
cookie：可设置失效时间，没有设置的话，默认是关闭浏览器后失效
localStorage：除非被手动清除，否则将会永久 ...`,l:"basic-quality/browser/browser/storage/index.html#生命周期",a:"生命周期"},"8.8":{t:"存放数据大小",p:`
cookie：4KB左右
localStorage和sessionStorage：可以保存5MB的信息。

`,l:"basic-quality/browser/browser/storage/index.html#存放数据大小",a:"存放数据大小"},"8.9":{t:"http请求",p:`
cookie：每次都会携带在HTTP头中，如果使用cookie保存过多数据会带来性能问题
localStorage和ses ...`,l:"basic-quality/browser/browser/storage/index.html#http请求",a:"http请求"},"8.10":{t:"易用性",p:`
cookie：需要程序员自己封装，源生的Cookie接口不友好
localStorage和sessionStorage：源 ...`,l:"basic-quality/browser/browser/storage/index.html#易用性",a:"易用性"},"8.11":{t:"应用场景",p:`
从安全性来说，因为每次http请求都会携带cookie信息，这样无形中浪费了带宽，所以cookie应该尽可能少的使用，另外 ...`,l:"basic-quality/browser/browser/storage/index.html#应用场景",a:"应用场景"},"8.12":{t:"浏览器支持情况",p:`localStorage和sessionStorage是html5才应用的新特性，可能有些浏览器并不支持，这里要注意。
se ...`,l:"basic-quality/browser/browser/storage/index.html#浏览器支持情况",a:"浏览器支持情况"},"8.13":{t:"localStorage和sessionStorage",p:"",l:"basic-quality/browser/browser/storage/index.html#localstorage和sessionstorage",a:"localstorage和sessionstorage"},"8.14":{t:"两者的共同点在于",p:`
存储大小均为5M左右
都有同源策略限制
仅在客户端中保存，不参与和服务器的通信

`,l:"basic-quality/browser/browser/storage/index.html#两者的共同点在于",a:"两者的共同点在于"},"8.15":{t:"两者的不同点在于",p:`
生命周期 —— 数据可以存储多少时间

localStorage: 存储的数据是永久性的，除非用户人为删除否则会一直存在。 ...`,l:"basic-quality/browser/browser/storage/index.html#两者的不同点在于",a:"两者的不同点在于"},"9.0":{t:"# $i  控制台中安装插件",p:"",l:"basic-quality/browser/chrome-dev/skills/$i-install/index.html",a:"i-控制台中安装插件"},"9.1":{t:"下载插件",p:"https://chrome.google.com/webstore/detail/console-importer/hga ...",l:"basic-quality/browser/chrome-dev/skills/$i-install/index.html#下载插件",a:"下载插件"},"9.2":{t:"注意 有的网站屏蔽了",p:"",l:"basic-quality/browser/chrome-dev/skills/$i-install/index.html#注意-有的网站屏蔽了",a:"注意-有的网站屏蔽了"},"10.0":{t:"# 浏览器代码片段",p:"",l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html",a:"浏览器代码片段"},"10.1":{t:"使用方式",p:`
打开开发者工具
command + p 打开搜索
! + 代码片段的名字 选择某个代码片段

`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#使用方式",a:"使用方式"},"10.2":{t:"添加代码片段",p:`
打开开发者工具
选择 source 选项卡 或者 源代码选项卡
选择 Snippets 或者代码段
新建代码段 取个名字
 ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#添加代码片段",a:"添加代码片段"},"10.3":{t:"分享我自己常用的代码片段",p:"",l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#分享我自己常用的代码片段",a:"分享我自己常用的代码片段"},"10.4":{t:"colors",p:`获取页面所有的颜色
// allcolors.js
// https://github.com/bgrins/devtool ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#colors",a:"colors"},"10.5":{t:"cookies",p:`获取页面所有的 cookies
// viewcookies.js
// https://github.com/bgrins ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#cookies",a:"cookies"},"10.6":{t:"cssprettifier",p:`css 格式化
// cssprettifier.js
// https://github.com/bgrins/devto ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#cssprettifier",a:"cssprettifier"},"10.7":{t:"cssreload",p:`页面 css 颜色重新随机加载
// cssreload.js
// https://github.com/bgrins/d ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#cssreload",a:"cssreload"},"10.8":{t:"formcontrols",p:`页面所有的 from 表单和表格打印
// formcontrols.js
// https://github.com/bg ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#formcontrols",a:"formcontrols"},"10.9":{t:"jq",p:`给当前环境添加 jq
// jquerify.js
// https://github.com/bgrins/devtool ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#jq",a:"jq"},"10.10":{t:"log",p:`增加 log 方法
// log.js
// https://github.com/bgrins/devtools-snip ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#log",a:"log"},"10.11":{t:"performance",p:`打印当前页面的 performance
// performance.js
// https://github.com/bg ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#performance",a:"performance"},"10.12":{t:"tags",p:`获取页面所有的 标签数量
function getTagCount() {
  const tags = document. ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#tags",a:"tags"},"10.13":{t:"urlquerystring",p:`获取当前路径的拼接参数
// querystringvalues.js
// https://github.com/bgri ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#urlquerystring",a:"urlquerystring"},"10.14":{t:"varglobal",p:`在console中打印全局变量，用于检测全局变量的内存泄露。
/*
 log-globals
 by Sindre Sorh ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-Snippets/index.html#varglobal",a:"varglobal"},"11.0":{t:"# DevTools Tips",p:"",l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html",a:"devtools-tips"},"11.1":{t:"Elements",p:"这个功能肯定是大家经常用到的，我们可以通过它来可视化所有的 DOM 标签，可以查看任何 DOM 的属性，接下来我们就来学习一 ...",l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html#elements",a:"elements"},"11.2":{t:"Element 状态",p:"你可能会在开发中遇到这么一个场景：给一个 a 标签设置了多种状态下的样式，但是如果手动去改变状态的话就有点麻烦，这时候这个  ...",l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html#element-状态",a:"element-状态"},"11.3":{t:"快速定位 Element",p:"通常页面都是可以滚动的，那么如果想查看的元素不在当前窗口的话，你还需要滚动页面才能找到元素，这时候这个 Tips 就能帮你解 ...",l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html#快速定位-element",a:"快速定位-element"},"11.4":{t:"DOM 断点",p:"给 JS 打断点想必各位都听过，但是 DOM 断点知道的人应该就少了。如果你想查看一个 DOM 元素是如何通过 JS 更改的 ...",l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html#dom-断点",a:"dom-断点"},"11.5":{t:"查看事件",p:"我们还可以通过 DevTools 来查看页面中添加了多少的事件。假如当你发现页面滚动起来有性能上的问题时，就可以查看一下有多 ...",l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html#查看事件",a:"查看事件"},"11.6":{t:"找到之前查看过的 DOM 元素",p:"不知道你是否遇到过这样的问题，找不到之前查看过的 DOM 元素在哪里了，需要一个个去找这就有点麻烦了，这时候你就可以使用这个 ...",l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html#找到之前查看过的-dom-元素",a:"找到之前查看过的-dom-元素"},"11.7":{t:"Debugging",p:`给 JS 打断点想必大家都会，但是打断点也是有一个不为人知的 Tips 的。
for (let index = 0; ind ...`,l:"basic-quality/browser/chrome-dev/skills/DevTools-tips/index.html#debugging",a:"debugging"},"12.0":{t:"# 使用 control (按钮) 来移动元素",p:"如果你只是想移动你当前选中的元素，在 DOM 结构中往上挪一点或者往下挪一点，而不是拖动和放置，你同样可以使用[ctrl]  ...",l:"basic-quality/browser/chrome-dev/skills/control/index.html",a:"使用-control-按钮-来移动元素"},"13.0":{t:"# 拖动 & 放置 元素",p:"当你想看看页面的某一部分在 DOM 树的不同位置的显示效果时，只需要拖动放置它(到指定的位置)，就像在机器上的其他任何地方一 ...",l:"basic-quality/browser/chrome-dev/skills/drag-element/index.html",a:"拖动-放置-元素"},"14.0":{t:"# $0",p:"",l:"basic-quality/browser/chrome-dev/skills/get-element/index.html",a:"_0"},"14.1":{t:"首先选中某个元素",p:`然后在 控制台 直接  $0 就可以拿到
`,l:"basic-quality/browser/chrome-dev/skills/get-element/index.html#首先选中某个元素",a:"首先选中某个元素"},"15.0":{t:"# 快速隐藏元素  h",p:`
通过 'h' 来隐藏元素
按一下 'h' 就可以隐藏你在元素面板中选择的元素。再次按下 'h' 可以使它出现。某些的时候这 ...`,l:"basic-quality/browser/chrome-dev/skills/hidden-element/index.html",a:"快速隐藏元素-h"},"16.0":{t:"# 将下方代码粘贴到 浏览器控制台中 运行即可",p:`var Vue, walker, node;
walker = document.createTreeWalker(docu ...`,l:"basic-quality/browser/chrome-dev/skills/open-prod-vue-devtool/index.html",a:"将下方代码粘贴到-浏览器控制台中-运行即可"},"17.0":{t:"# elements， logs， sources & network 中的查找",p:"DevTools 中的前4个主要的面板，每一个都支持 [ctrl] + [f] 快捷方式，你可以使用对应的查询方式来查找信息 ...",l:"basic-quality/browser/chrome-dev/skills/search/index.html",a:"elements-logs-sources-network-中的查找"},"18.0":{t:"# Store as global (存储为一个全局变量)",p:`
如果你在 console 中打印了一堆数据 (例如你在 App 中计算出来的一个数组) ，然后你想对这些数据做一些额外的操 ...`,l:"basic-quality/browser/chrome-dev/skills/store-global/index.html",a:"store-as-global-存储为一个全局变量"},"19.0":{t:"# 浏览器基础知识点及常考面试题",p:"",l:"basic-quality/browser/interview-questions/index.html",a:"浏览器基础知识点及常考面试题"},"19.1":{t:"事件机制",p:`涉及面试题：事件的触发过程是怎么样的？知道什么是事件代理嘛？
`,l:"basic-quality/browser/interview-questions/index.html#事件机制",a:"事件机制"},"19.2":{t:"事件触发三阶段",p:`事件触发有三个阶段：

window 往事件触发处传播，遇到注册的捕获事件会触发
传播到事件触发处时触发注册的事件
从事件触 ...`,l:"basic-quality/browser/interview-questions/index.html#事件触发三阶段",a:"事件触发三阶段"},"19.3":{t:"注册事件",p:"通常我们使用 addEventListener 注册事件，该函数的第三个参数可以是布尔值，也可以是对象。对于布尔值 useC ...",l:"basic-quality/browser/interview-questions/index.html#注册事件",a:"注册事件"},"19.4":{t:"事件代理",p:`如果一个节点中的子节点是动态生成的，那么子节点需要注册事件的话应该注册在父节点上
&lt;ul id=&quot;ul&qu ...`,l:"basic-quality/browser/interview-questions/index.html#事件代理",a:"事件代理"},"19.5":{t:"跨域",p:`涉及面试题：什么是跨域？为什么浏览器要使用同源策略？你有几种方式可以解决跨域问题？了解预检请求嘛？
因为浏览器出于安全考虑， ...`,l:"basic-quality/browser/interview-questions/index.html#跨域",a:"跨域"},"19.6":{t:"JSONP",p:"JSONP 的原理很简单，就是利用 script 标签没有跨域限制的漏洞。通过 script 标签指向一个需要访问的地址并提 ...",l:"basic-quality/browser/interview-questions/index.html#jsonp",a:"jsonp"},"19.7":{t:"CORS",p:`CORS 需要浏览器和后端同时支持。IE 8 和 9 需要通过 XDomainRequest 来实现。
浏览器会自动进行 C ...`,l:"basic-quality/browser/interview-questions/index.html#cors",a:"cors"},"19.8":{t:"简单请求",p:`以 Ajax 为例，当满足以下条件时，会触发简单请求

使用下列方法之一：


GET
HEAD
POST


Conten ...`,l:"basic-quality/browser/interview-questions/index.html#简单请求",a:"简单请求"},"19.9":{t:"复杂请求",p:`那么很显然，不符合以上条件的请求就肯定是复杂请求了。
对于复杂请求来说，首先会发起一个预检请求，该请求是 option 方法 ...`,l:"basic-quality/browser/interview-questions/index.html#复杂请求",a:"复杂请求"},"19.10":{t:"document.domain",p:`该方式只能用于二级域名相同的情况下，比如 a.test.com 和 b.test.com 适用于该方式。
只需要给页面添加  ...`,l:"basic-quality/browser/interview-questions/index.html#document-domain",a:"document-domain"},"19.11":{t:"postMessage",p:`这种方式通常用于获取嵌入页面中的第三方页面数据。一个页面发送消息，另一个页面判断来源并接收消息
// 发送消息端
windo ...`,l:"basic-quality/browser/interview-questions/index.html#postmessage",a:"postmessage"},"19.12":{t:"存储",p:`涉及面试题：有几种方式可以实现存储功能，分别有什么优缺点？什么是 Service Worker？
`,l:"basic-quality/browser/interview-questions/index.html#存储",a:"存储"},"19.13":{t:"cookie，localStorage，sessionStorage，indexDB",p:`我们先来通过表格学习下这几种存储方式的区别



特性
cookie
localStorage
sessionStorage ...`,l:"basic-quality/browser/interview-questions/index.html#cookie-localstorage-sessionstorage-indexdb",a:"cookie-localstorage-sessionstorage-indexdb"},"19.14":{t:"Service Worker",p:"Service Worker 是运行在浏览器背后的独立线程，一般可以用来实现缓存功能。使用 Service Worker的话 ...",l:"basic-quality/browser/interview-questions/index.html#service-worker",a:"service-worker"},"20.0":{t:"# JS运行9大概念",p:"",l:"basic-quality/browser/v8/js-run/index.html",a:"js运行9大概念"},"20.1":{t:"记住这张图",p:`!图片
`,l:"basic-quality/browser/v8/js-run/index.html#记住这张图",a:"记住这张图"},"20.2":{t:"解释这张图",p:`
首先，我打算对这张图中要表达的内容做一个综述，然后再分别举例解释上述概念。
一段JS代码的执行分为编译阶段和执行阶段。
在 ...`,l:"basic-quality/browser/v8/js-run/index.html#解释这张图",a:"解释这张图"},"20.3":{t:"概念1：变量提升",p:`foo()
function foo() {
  console.log('foo')
}

console.log(a)
 ...`,l:"basic-quality/browser/v8/js-run/index.html#概念1-变量提升",a:"概念1-变量提升"},"20.4":{t:"概念2：执行上下文",p:`执行上下文就是JS代码的执行环境，在JS编译阶段创建，用于变量的存储和查询。JS中存在三种执行上下文：

全局执行上下文：编 ...`,l:"basic-quality/browser/v8/js-run/index.html#概念2-执行上下文",a:"概念2-执行上下文"},"20.5":{t:"概念3：调用栈",p:`
多个执行上下文会放在一个栈结构中进行管理，由于该结构可以表达函数的调用关系，因此被称作函数调用栈，简称调用栈。
在执行上下 ...`,l:"basic-quality/browser/v8/js-run/index.html#概念3-调用栈",a:"概念3-调用栈"},"20.6":{t:"概念4：作用域",p:`作用域是变量的定义区域，等同于执行上下文。不同类型的作用域访问范围不同。ES6以前，JS只有两种作用域：

函数作用域：函数 ...`,l:"basic-quality/browser/v8/js-run/index.html#概念4-作用域",a:"概念4-作用域"},"20.7":{t:"概念5：块状作用域",p:`var因为变量提升不支持块状作用域，所谓块状就是一对大括号组成的区域，比如：
//if块
if(1){}

//while块 ...`,l:"basic-quality/browser/v8/js-run/index.html#概念5-块状作用域",a:"概念5-块状作用域"},"20.8":{t:"概念6：作用域链",p:`
作用域链是不同作用域之间的变量查找顺序。
在上下文内部，从词法环境栈顶开始，从栈顶到栈底，再到变量环境。
在上下文之间，通 ...`,l:"basic-quality/browser/v8/js-run/index.html#概念6-作用域链",a:"概念6-作用域链"},"20.9":{t:"概念7：词法作用域",p:`
词法作用域指代的是我们刚才描述的JS中应用的变量查找规则，所以词法作用域全称应该是词法作用域链。
为什么叫词法作用域呢？
 ...`,l:"basic-quality/browser/v8/js-run/index.html#概念7-词法作用域",a:"概念7-词法作用域"},"20.10":{t:"概念8：闭包",p:"在执行上下文之间，有时会插入一个闭包，因为根据词法作用域的规则，内部函数总是可以访问其外部函数中声明的变量，如果外部函数在返 ...",l:"basic-quality/browser/v8/js-run/index.html#概念8-闭包",a:"概念8-闭包"},"20.11":{t:"概念9：this",p:"",l:"basic-quality/browser/v8/js-run/index.html#概念9-this",a:"概念9-this"},"20.12":{t:"首先我们讨论一下为什么要有this？",p:`var a = 1
var obj = {
  a: 2,
  foo: function() {
    console. ...`,l:"basic-quality/browser/v8/js-run/index.html#首先我们讨论一下为什么要有this",a:"首先我们讨论一下为什么要有this"},"21.0":{t:"# JavaScript是怎么被运行起来的?",p:"",l:"basic-quality/browser/v8/start/index.html",a:"javascript是怎么被运行起来的"},"21.1":{t:"Web应用的生命周期",p:`典型客户端Web应用的生命周期从用户在浏览器地址栏输入一串 URL，或单击一个链接开始。
首先当我们输入了URL,www.b ...`,l:"basic-quality/browser/v8/start/index.html#web应用的生命周期",a:"web应用的生命周期"},"21.2":{t:"什么是v8",p:`

v8是谷歌的开源高性能JavaScript和WebAssembly引擎,使用c++编写。目前主要使用于 Chrome 浏 ...`,l:"basic-quality/browser/v8/start/index.html#什么是v8",a:"什么是v8"},"21.3":{t:"V8 是怎么执行 JavaScript 代码的",p:`参考下面的流程图，以及官方的流程图
!图片
!图片

首先Blink将ja代码交给v8引擎,以ASCLL,LATIN1,UT ...`,l:"basic-quality/browser/v8/start/index.html#v8-是怎么执行-javascript-代码的",a:"v8-是怎么执行-javascript-代码的"},"21.4":{t:"Ignition解释器",p:"Ignition是一台寄存器机器，每个字节码将其输入和输出指定为显式寄存器操作数，这与堆栈机器相反，在堆栈机器中，每个字节码 ...",l:"basic-quality/browser/v8/start/index.html#ignition解释器",a:"ignition解释器"},"21.5":{t:"Turbofan 优化编译器",p:"TurboFan 将尖端的中间表示与多层翻译和优化管道相结合，以生成比以前使用 CrankShaft JIT 更优质的机器代 ...",l:"basic-quality/browser/v8/start/index.html#turbofan-优化编译器",a:"turbofan-优化编译器"},"21.6":{t:"什么是抽象语法树",p:`
在计算机科学中，抽象语法树（Abstract Syntax Tree，AST），或简称语法树（Syntax tree），是 ...`,l:"basic-quality/browser/v8/start/index.html#什么是抽象语法树",a:"什么是抽象语法树"},"21.7":{t:"抽象语法书生成过程",p:"词法分析 : 词法分析，也称之为扫描（scanner），简单来说就是把一段代码进行拆分，一个一个字母的来读取字符，然后与定义 ...",l:"basic-quality/browser/v8/start/index.html#抽象语法书生成过程",a:"抽象语法书生成过程"},"21.8":{t:"什么是执行上下文",p:`
执行上下文是一种规范，用于跟踪ECMAScript实现对代码的运行时评估。
全局执行上下文在 V8 的生存周期内是不会被销 ...`,l:"basic-quality/browser/v8/start/index.html#什么是执行上下文",a:"什么是执行上下文"},"21.9":{t:"执行上下文的类型",p:`
全局执行上下文: 这是默认的或基本的执行上下文。任何不在函数内部的代码位于全局执行上下文中。他在编译阶段便创建一个 Glo ...`,l:"basic-quality/browser/v8/start/index.html#执行上下文的类型",a:"执行上下文的类型"},"21.10":{t:"骗人的小鬼",p:`eval函数:在Eval函数内部执行的代码也会获得它自己的执行上下文
function foo(str, age) {
   ...`,l:"basic-quality/browser/v8/start/index.html#骗人的小鬼",a:"骗人的小鬼"},"21.11":{t:"执行栈",p:`

执行栈,在其他编程语言中也被用为调用栈,是一个具有后进先出数据结构的栈，它用于存储代码执行期间创建的所有执行上下文。

 ...`,l:"basic-quality/browser/v8/start/index.html#执行栈",a:"执行栈"},"21.12":{t:"如何创建执行上下文",p:`执行上下文的创建分为两个阶段,第一阶段是创建阶段,第二个阶段是执行阶段
`,l:"basic-quality/browser/v8/start/index.html#如何创建执行上下文",a:"如何创建执行上下文"},"21.13":{t:"执行阶段",p:`执行阶段所要理解的东西不是很多,在这里先提前说了。
在这个阶段，所有这些变量的赋值都完成了，代码也最终执行了。
`,l:"basic-quality/browser/v8/start/index.html#执行阶段",a:"执行阶段"},"21.14":{t:"创建阶段",p:"在创建阶段,V8引擎只是扫描所有代码,但是不执行。它创建作用域,并且为其作用域内的每个变量和函数都分配内存。之后还初始化th ...",l:"basic-quality/browser/v8/start/index.html#创建阶段",a:"创建阶段"},"21.15":{t:"什么是 词法环境(Lexical Environments)",p:"中文理解就是词法环境是一种规范类型，用于根据ECMAScript代码的词法嵌套结构定义标识符与特定变量和函数的关联。词汇环境 ...",l:"basic-quality/browser/v8/start/index.html#什么是-词法环境-lexical-environments",a:"什么是-词法环境-lexical-environments"},"21.16":{t:"什么是 环境记录(Environment Records)",p:`环境记录是在词法环境中存放变量和函数声明的地方。
环境记录可分为两种类型:
声明性环境记录:声明性环境变量存储了作用域中的变 ...`,l:"basic-quality/browser/v8/start/index.html#什么是-环境记录-environment-records",a:"什么是-环境记录-environment-records"},"21.17":{t:"全局环境记录(Global Environment Records)",p:`全局环境记录在逻辑上是单个记录，但它被指定为封装对象环境记录和声明性环境记录的组合。
全局环境记录的对象环境记录组件包含所有 ...`,l:"basic-quality/browser/v8/start/index.html#全局环境记录-global-environment-records",a:"全局环境记录-global-environment-records"},"21.18":{t:"什么是作用域",p:"作用域是一套规则,用于确定在何处以及如何查找变量(标识符)。如果查找的目的对变量进行赋值,那么就会使用LHS查询,如果目的是 ...",l:"basic-quality/browser/v8/start/index.html#什么是作用域",a:"什么是作用域"},"21.19":{t:"作用域和执行上下文是什么关系",p:`执行下上下文，简单概括来说就是全局代码执行期间,JS引擎就会创建一个栈来存储管理所有的执行上下文对象。
作用域是在JavaS ...`,l:"basic-quality/browser/v8/start/index.html#作用域和执行上下文是什么关系",a:"作用域和执行上下文是什么关系"},"22.0":{t:"# 计算机组成原理",p:"",l:"basic-quality/computer-composition/index.html",a:"计算机组成原理"},"22.1":{t:"1、计算机的工作原理",p:"首先，计算机最基本的5大组成部分如下图，分别为：输入设备(比如键盘), 存储器(比如内存), 运算器(cpu), 控制器(c ...",l:"basic-quality/computer-composition/index.html#_1、计算机的工作原理",a:"_1、计算机的工作原理"},"22.2":{t:"工作原理如下",p:"",l:"basic-quality/computer-composition/index.html#工作原理如下",a:"工作原理如下"},"22.3":{t:"1.1 控制器 ---> 控制输入设备 ----> 指令流向内存",p:`当我们输入数据的时候，cpu里的控制器会让输入设备把这些指令存储到存储器(内存)上。
!图片
`,l:"basic-quality/computer-composition/index.html#_1-1-控制器-控制输入设备-指令流向内存",a:"_1-1-控制器-控制输入设备-指令流向内存"},"22.4":{t:"1.2 控制器分析指令 ---> 控制存储器 ---> 把数据送到运算器",p:`控制器分析指令之后， 此时让存储器把数据发送到运算器里(控制器和运算器都在cpu里面)
这里需要注意，存储器既能存储数据，还 ...`,l:"basic-quality/computer-composition/index.html#_1-2-控制器分析指令-控制存储器-把数据送到运算器",a:"_1-2-控制器分析指令-控制存储器-把数据送到运算器"},"22.5":{t:"1.3 控制器控制运算器做数据的运算 并且将运算结果返回存储器",p:`!图片
`,l:"basic-quality/computer-composition/index.html#_1-3-控制器控制运算器做数据的运算-并且将运算结果返回存储器",a:"_1-3-控制器控制运算器做数据的运算-并且将运算结果返回存储器"},"22.6":{t:"1.4 控制器控制存储器将结果返回给输出设备",p:`!图片
从接下来，我们更近一步，看看计算机内部，CPU是怎么跟存储器交互的。
`,l:"basic-quality/computer-composition/index.html#_1-4-控制器控制存储器将结果返回给输出设备",a:"_1-4-控制器控制存储器将结果返回给输出设备"},"22.7":{t:"2、CPU及其工作过程",p:`CPU中比较重要的两个部件是运算器和控制器，我们先来看看运算器的主要作用
`,l:"basic-quality/computer-composition/index.html#_2、cpu及其工作过程",a:"_2、cpu及其工作过程"},"22.8":{t:"2.1 运算器主要部件",p:`!图片
如上图，运算器里最重要的部件是ALU，中文叫算术逻辑单元，用来进行算术和逻辑运算的。其它的MQ,ACC这些我们不用管 ...`,l:"basic-quality/computer-composition/index.html#_2-1-运算器主要部件",a:"_2-1-运算器主要部件"},"22.9":{t:"2.2 控制器主要部件",p:`!图片
控制器中最重要的部件是CU（控制单元），只要是分析指令，给出控制信号。
IR（指令寄存器），存放当前需要执行的指令
 ...`,l:"basic-quality/computer-composition/index.html#_2-2-控制器主要部件",a:"_2-2-控制器主要部件"},"22.10":{t:"2.3 举例 - 取数指令执行过程",p:`!图片
`,l:"basic-quality/computer-composition/index.html#_2-3-举例-取数指令执行过程",a:"_2-3-举例-取数指令执行过程"},"22.11":{t:"首先，是取指令的过程如下",p:`!图片


第一步，PC，也就是存放指令地址的地方，我们要知道下一条指令是什么，就必须去存储器拿，CPU才知道接下来做什么。 ...`,l:"basic-quality/computer-composition/index.html#首先-是取指令的过程如下",a:"首先-是取指令的过程如下"},"22.12":{t:"3、计算机编程语言",p:`我们看看机器语言，怎么表示存放一个数的指令，例如下图
!图片

其中第一个0000，表示的是汇编语言里的LOAD，也就是加载 ...`,l:"basic-quality/computer-composition/index.html#_3、计算机编程语言",a:"_3、计算机编程语言"},"22.13":{t:"高级语言一般有两种方式转换为机器语言",p:`
一种是直接借助编译器，将高级语言转换为二进制代码，比如c，这样c运行起来就特别快，因为编译后是机器语言，直接就能在系统上跑 ...`,l:"basic-quality/computer-composition/index.html#高级语言一般有两种方式转换为机器语言",a:"高级语言一般有两种方式转换为机器语言"},"22.14":{t:"4、进制转换",p:`接下来4.3这个小节会解释为什么0.1 + 0.2 等于0.3
`,l:"basic-quality/computer-composition/index.html#_4、进制转换",a:"_4、进制转换"},"22.15":{t:"4.1 二进制如何转化为十进制",p:"例如2进制101.1如何转化为10进制。（有些同学觉得可以用parseInt('101.1', 2)，这个是不行的，因为pa ...",l:"basic-quality/computer-composition/index.html#_4-1-二进制如何转化为十进制",a:"_4-1-二进制如何转化为十进制"},"22.16":{t:"4.2 十进制整数转为二进制",p:"JS里面可以用toString(2)这个方法来转换。如果要用通用的方法，例如：将十进制数（29）转换成二进制数， 算法如下： ...",l:"basic-quality/computer-composition/index.html#_4-2-十进制整数转为二进制",a:"_4-2-十进制整数转为二进制"},"22.17":{t:"4.3 十进制小数转为二进制",p:`方式是采用“乘2取整，顺序排列”法。具体做法是：

用2乘十进制小数，可以得到积，将积的整数部分取出-
再用2乘余下的小数部 ...`,l:"basic-quality/computer-composition/index.html#_4-3-十进制小数转为二进制",a:"_4-3-十进制小数转为二进制"},"22.18":{t:"如: 十进制 0.25 转为二进制",p:`0.25 2 = 0.5 取出整数部分：0
0.52 = 1.0 取出整数部分1
即十进制0.25的二进制为 0.01 (  ...`,l:"basic-quality/computer-composition/index.html#如-十进制-0-25-转为二进制",a:"如-十进制-0-25-转为二进制"},"22.19":{t:"接下来看0.2",p:"0.2化二进制是 0.22=0.4,整数位为0 0.42=0.8,整数位为0 0.82=1.6,整数位为1,去掉整数位得0. ...",l:"basic-quality/computer-composition/index.html#接下来看0-2",a:"接下来看0-2"},"22.20":{t:"5、定点数和浮点数",p:`首先，什么是定点数呢？
`,l:"basic-quality/computer-composition/index.html#_5、定点数和浮点数",a:"_5、定点数和浮点数"},"22.21":{t:"5.1 定点数",p:`!图片
如上图，举例纯整数的二进制1011和-1011，如果是整数，符号位用0表示，如果是负数符号为用1表示
!图片
同理， ...`,l:"basic-quality/computer-composition/index.html#_5-1-定点数",a:"_5-1-定点数"},"22.22":{t:"5.2 浮点数",p:`浮点数怎么表示呢？
!图片
上面是十进制的科学计数法，从中我们需要了解几个概念，一个是尾数，基数和阶码

尾数必须是纯小数， ...`,l:"basic-quality/computer-composition/index.html#_5-2-浮点数",a:"_5-2-浮点数"},"22.23":{t:"所以浮点数的通用表示格式如下",p:`!图片

S代表尾数
r代表基数
j代表阶码
这里需要注意的是，浮点数的加减运算，并不是像我们上面介绍的那样简单，会经过以下 ...`,l:"basic-quality/computer-composition/index.html#所以浮点数的通用表示格式如下",a:"所以浮点数的通用表示格式如下"},"22.24":{t:"6、局部性原理和catche(缓存)",p:`先看下图
!图片
（说明一下，MDR和MAR虽然逻辑上属于主存，但是在电路实现的时候，MDR和MAR离CPU比较近）
上图是 ...`,l:"basic-quality/computer-composition/index.html#_6、局部性原理和catche-缓存",a:"_6、局部性原理和catche-缓存"},"22.25":{t:"7、I/O设备的演变",p:"",l:"basic-quality/computer-composition/index.html#_7、i-o设备的演变",a:"_7、i-o设备的演变"},"22.26":{t:"I/O是什么呢？",p:"输入/输出（Input /Output ,简称I/O），指的是一切操作、程序或设备与计算机之间发生的数据传输过程。 复制代码 ...",l:"basic-quality/computer-composition/index.html#i-o是什么呢",a:"i-o是什么呢"},"22.27":{t:"接着看第二阶段",p:`!图片

为了解决第一阶段CPU要等待I/O设备，串行的工作方式，所有I/O设备通过I/O总线来跟CPU打交道，一旦某个I/ ...`,l:"basic-quality/computer-composition/index.html#接着看第二阶段",a:"接着看第二阶段"},"22.28":{t:"第三阶段，CPU通过通道控制部件来管理I/O设备，CPU不需要帮它安排任务，只需要简单的发出启动和停止类似的命令，通道部件就会自动的安排相应的I/O设备工作",p:"",l:"basic-quality/computer-composition/index.html#第三阶段-cpu通过通道控制部件来管理i-o设备-cpu不需要帮它安排任务-只需要简单的发出启动和停止类似的命令-通道部件就会自动的安排相应的i-o设备工作",a:"第三阶段-cpu通过通道控制部件来管理i-o设备-cpu不需要帮它安排任务-只需要简单的发出启动和停止类似的命令-通道部件就会自动的安排相应的i-o设备工作"},"23.0":{t:"# 计算机网络基础知识",p:"",l:"basic-quality/computer-networks/index.html",a:"计算机网络基础知识"},"23.1":{t:"1、计算机网络概念（简单扫一眼即可）",p:"计算机网络：是一个将分散的、具有独立功能的计算机系统，通过通信设备与线路连接起来，由功能完善的软件实现资源共享和信息传递的系 ...",l:"basic-quality/computer-networks/index.html#_1、计算机网络概念-简单扫一眼即可",a:"_1、计算机网络概念-简单扫一眼即可"},"23.2":{t:"2、衡量计算机网络的性能的指标",p:`这些内容主要是为了学习后面具体的协议，以及分析这些协议的报文时，需要掌握的基本概念。
`,l:"basic-quality/computer-networks/index.html#_2、衡量计算机网络的性能的指标",a:"_2、衡量计算机网络的性能的指标"},"23.3":{t:"2.1 速率",p:"速率就是数据传输（数据是指0和1）的速率，比如你用迅雷下载，1兆每秒，来衡量目前数据传输的快慢。它是计算机网络中最重要的一个 ...",l:"basic-quality/computer-networks/index.html#_2-1-速率",a:"_2-1-速率"},"23.4":{t:"2.2 带宽",p:"在计算机网络中，网络带宽是指在单位时间（一般指的是1秒钟）内能传输的数据量，比如说你家的电信网络是100兆比特，意思是，一秒 ...",l:"basic-quality/computer-networks/index.html#_2-2-带宽",a:"_2-2-带宽"},"23.5":{t:"2.3 吞吐量",p:`吞吐量表示在单位时间内通过某个网络（或信道、接口）的数据量。
`,l:"basic-quality/computer-networks/index.html#_2-3-吞吐量",a:"_2-3-吞吐量"},"23.6":{t:"以上三点，我们举个案例",p:`
一条路每秒最多能过100辆车（宽带就相当于100辆/秒）。
而并不是每秒都会有100辆车过，假如第一秒有0辆，第二秒有10 ...`,l:"basic-quality/computer-networks/index.html#以上三点-我们举个案例",a:"以上三点-我们举个案例"},"23.7":{t:"2.4 时延",p:`时延是指数据（报文/分组/比特流）从网络（或链路）的一端传送到另一端所需的时间。单位是s。 时延分一下几种：
`,l:"basic-quality/computer-networks/index.html#_2-4-时延",a:"_2-4-时延"},"23.8":{t:"（1）发送时延",p:`!图片
就是说我跟你说话，从我开始说，到说话结束这段时间，就是发送时延。
`,l:"basic-quality/computer-networks/index.html#_1-发送时延",a:"_1-发送时延"},"23.9":{t:"（2）传播时延",p:`!图片
如gif图所示，信道上第一个比特开始，到最后一个比特达到主机接口需要的时间就是传播时延。
`,l:"basic-quality/computer-networks/index.html#_2-传播时延",a:"_2-传播时延"},"23.10":{t:"（3）排队时延",p:`
分组在经过网络传输时，要经过很多的路由器。
但分组在进入路由器后要先在输入队列中排队等待处理。
在路由器确定了转发接口后， ...`,l:"basic-quality/computer-networks/index.html#_3-排队时延",a:"_3-排队时延"},"23.11":{t:"（4）处理时延",p:"路由器或主机在收到数据包时，要花费一定时间进行处理，例如分析数据包的首部、进行首部差错检验，查找路由表为数据包选定准发接口， ...",l:"basic-quality/computer-networks/index.html#_4-处理时延",a:"_4-处理时延"},"23.12":{t:"（5）往返时间（RTT）",p:"在计算机网络中，往返时间也是一个重要的性能指标，它表示从发送方发送数据开始，到发送方收到来自接收方的确认（接受方收到数据后便 ...",l:"basic-quality/computer-networks/index.html#_5-往返时间-rtt",a:"_5-往返时间-rtt"},"23.13":{t:"（6）时延带宽积",p:`是指传播时延乘以带宽
`,l:"basic-quality/computer-networks/index.html#_6-时延带宽积",a:"_6-时延带宽积"},"23.14":{t:"3、正文开始！OSI参考模型",p:`OSI参考模型是网络互连的七层框架, 这里不详细介绍了，每一层的具体内容会在后面介绍，这里只需要有一个初步的印象。
如下图所 ...`,l:"basic-quality/computer-networks/index.html#_3、正文开始-osi参考模型",a:"_3、正文开始-osi参考模型"},"23.15":{t:"4、物理层",p:"",l:"basic-quality/computer-networks/index.html#_4、物理层",a:"_4、物理层"},"23.16":{t:"4.1 物理层有啥用？",p:"对于物理层，有人会说，这不就是网线吗，比如家里连接路由器的网线，电线杆上的光纤？其实不然，物理层更多的是规定一种标准，他并不 ...",l:"basic-quality/computer-networks/index.html#_4-1-物理层有啥用",a:"_4-1-物理层有啥用"},"23.17":{t:"那物理层到底有哪些主要任务呢？",p:`
比如说，规定了电气特性，信号的电平用+10V - +15V表示二进制的0，用-10V - -15V表示二进制的1，只要条网 ...`,l:"basic-quality/computer-networks/index.html#那物理层到底有哪些主要任务呢",a:"那物理层到底有哪些主要任务呢"},"23.18":{t:"4.2 光纤宽带上网是以什么样的形式传输数据呢？",p:`
首先计算机网卡传输出来的数据是电信号，光纤传输的是光脉冲信号，有光脉冲表示1，无光脉冲表示0。
而可见光的频率大约是10的 ...`,l:"basic-quality/computer-networks/index.html#_4-2-光纤宽带上网是以什么样的形式传输数据呢",a:"_4-2-光纤宽带上网是以什么样的形式传输数据呢"},"23.19":{t:"4.3 物理层设备中继器",p:"",l:"basic-quality/computer-networks/index.html#_4-3-物理层设备中继器",a:"_4-3-物理层设备中继器"},"23.20":{t:"为什么需要中继器呢？",p:`因为再线路上传输的信号功率会逐渐衰减，衰减到一定程度时将造成信号失真，因此会导致接收错误。
!图片
中继器可以对信号进行再生 ...`,l:"basic-quality/computer-networks/index.html#为什么需要中继器呢",a:"为什么需要中继器呢"},"23.21":{t:"5、数据链路层",p:"",l:"basic-quality/computer-networks/index.html#_5、数据链路层",a:"_5、数据链路层"},"23.22":{t:"5.1 数据链路层是做什么的呢？",p:`我们用一个小故事来举例
!图片

网络层是个大Boss， 负责给数据链路层这个小秘书下达任务，让小秘把5份文件给B公司，小秘 ...`,l:"basic-quality/computer-networks/index.html#_5-1-数据链路层是做什么的呢",a:"_5-1-数据链路层是做什么的呢"},"23.23":{t:"5.2 数据链路层的主要功能",p:"",l:"basic-quality/computer-networks/index.html#_5-2-数据链路层的主要功能",a:"_5-2-数据链路层的主要功能"},"23.24":{t:"(1) 封装成帧 数据链路层并不是无脑转发boss的信息，她要把文件编号封装一下。封装的网络数据包，在链路层就叫数据帧",p:`!图片
`,l:"basic-quality/computer-networks/index.html#_1-封装成帧-数据链路层并不是无脑转发boss的信息-她要把文件编号封装一下。封装的网络数据包-在链路层就叫数据帧",a:"_1-封装成帧-数据链路层并不是无脑转发boss的信息-她要把文件编号封装一下。封装的网络数据包-在链路层就叫数据帧"},"23.25":{t:"(2)透明传输",p:"透明传输是指不管boss下达的任何信息，比如文件里有裁掉这个秘书的信息，秘书都要原原本本的传输。帧的数据部分可能有跟帧首部完 ...",l:"basic-quality/computer-networks/index.html#_2-透明传输",a:"_2-透明传输"},"23.26":{t:"(3)差错控制",p:"差错控制是在文件送到B公司小秘书手里的时候，快递包上写着5个文件，秘书一看只有3个文件，就会让傻子重新发送有没有送到的文件。 ...",l:"basic-quality/computer-networks/index.html#_3-差错控制",a:"_3-差错控制"},"23.27":{t:"(4)差错纠正",p:`差错纠正是链路层知道1，2，3，4，5个文件，丢失的两个文件到底是哪两个，并且能通过重新发送没有的文件来纠正。
还有一些是故 ...`,l:"basic-quality/computer-networks/index.html#_4-差错纠正",a:"_4-差错纠正"},"23.28":{t:"(5)流量控制 比如说发送方发送速度特别快，接收方接收速度特别慢，会造成传输出错",p:"这里需要注意的是，传输层TCP也有流量控制功能，区别在于TCP是端到端的流量控制，链路层是点到点（比如一个路由器到下一个路由 ...",l:"basic-quality/computer-networks/index.html#_5-流量控制-比如说发送方发送速度特别快-接收方接收速度特别慢-会造成传输出错",a:"_5-流量控制-比如说发送方发送速度特别快-接收方接收速度特别慢-会造成传输出错"},"23.29":{t:"6 以太网和无线网",p:"以太网是一种局域网技术，其规定了访问控制方法、传输控制协议、网络拓扑结构、传输速率等，完成数据链路层和物理层的一些内容，它采 ...",l:"basic-quality/computer-networks/index.html#_6-以太网和无线网",a:"_6-以太网和无线网"},"23.30":{t:"6.1 以太网的帧格式",p:`!图片

其中目的地址和源地址指的是MAC地址，即设备的物理地址。MAC地址用于标示网卡，每个网卡都具有唯一的MAC 地址
 ...`,l:"basic-quality/computer-networks/index.html#_6-1-以太网的帧格式",a:"_6-1-以太网的帧格式"},"23.31":{t:"6.2 以太网的特点",p:`
无连接。发送方和接收方不建立连接。
不可靠。接收方不向发送方进行确认，差错帧直接丢弃。

`,l:"basic-quality/computer-networks/index.html#_6-2-以太网的特点",a:"_6-2-以太网的特点"},"23.32":{t:"6.3 以太网的拓扑结构",p:`跟以太网相关的拓扑结构有星型和总线型。
`,l:"basic-quality/computer-networks/index.html#_6-3-以太网的拓扑结构",a:"_6-3-以太网的拓扑结构"},"23.33":{t:"星型拓扑如下",p:`!图片
`,l:"basic-quality/computer-networks/index.html#星型拓扑如下",a:"星型拓扑如下"},"23.34":{t:"总线型拓扑如下",p:`!图片
互联网初期，以太网的总线型拓扑比较普遍。随着总线型以太网上的站点数目增多,可靠性也会随之下降,而随着大规模集成电路以 ...`,l:"basic-quality/computer-networks/index.html#总线型拓扑如下",a:"总线型拓扑如下"},"23.35":{t:"6.4 网卡",p:"计算机传出的数据，经过网卡，就会变为以太网的帧，还会完成一些链路管理（CDMA/CD的实现），以及编码和译码（编码译码我不太 ...",l:"basic-quality/computer-networks/index.html#_6-4-网卡",a:"_6-4-网卡"},"23.36":{t:"6.5 无线局域网",p:`无线局域网WLAN是利用无线电波、激光和红外线等无线通信技术来构建的局域网。
无线局域网我们只介绍一下典型的网络结构。
!图 ...`,l:"basic-quality/computer-networks/index.html#_6-5-无线局域网",a:"_6-5-无线局域网"},"23.37":{t:"6.6 CSMA/CD协议",p:`因为这个协议是以太网所使用的，所以我们只需要记住一些特点就行了。

每一个站在发送数据之前以及发送数据时以及发送数据时都要检 ...`,l:"basic-quality/computer-networks/index.html#_6-6-csma-cd协议",a:"_6-6-csma-cd协议"},"23.38":{t:"6.7 链路层的设备",p:"",l:"basic-quality/computer-networks/index.html#_6-7-链路层的设备",a:"_6-7-链路层的设备"},"23.39":{t:"（1）网桥",p:"网桥根据MAC帧的目的地址进行转发和过滤。当网桥收到一个帧时，并不会向所有接口转发此帧，而是先检查此帧的目的MAC地址，然后 ...",l:"basic-quality/computer-networks/index.html#_1-网桥",a:"_1-网桥"},"23.40":{t:"（2）以太网交换机",p:`谈到交换机，就不得不提两个概念，冲突域和广播域

冲突域： 是指同一时间只能由一台设备发送信息的范围。
广播域：如果站点发出 ...`,l:"basic-quality/computer-networks/index.html#_2-以太网交换机",a:"_2-以太网交换机"},"23.41":{t:"7、 网络层",p:`概念走一走，看一看，瞄一眼就行啦！
`,l:"basic-quality/computer-networks/index.html#_7、-网络层",a:"_7、-网络层"},"23.42":{t:"7.1 网络层概念",p:"网络层主要任务是将分组(分组的概念是大多数计算机网络都不能连续地传送任意长的数据，所以实际上网络系统把数据分割成小块，然后逐 ...",l:"basic-quality/computer-networks/index.html#_7-1-网络层概念",a:"_7-1-网络层概念"},"23.43":{t:"7.2 学习网络层需要了解的概念",p:"",l:"basic-quality/computer-networks/index.html#_7-2-学习网络层需要了解的概念",a:"_7-2-学习网络层需要了解的概念"},"23.44":{t:"7.2.1 分组交换",p:"当主机H1要向另一主机H2发送数据（报文）时，首先将数据划分成若干个等长的分组，然后将这些分组一个接一个地发往里与H1相联的 ...",l:"basic-quality/computer-networks/index.html#_7-2-1-分组交换",a:"_7-2-1-分组交换"},"23.45":{t:"7.2.2 数据报",p:"数据报是通过网络传输的数据的基本单元，包含一个报头（header）和数据本身。说白了，就是带地址的数据，比如你的写了一句微信 ...",l:"basic-quality/computer-networks/index.html#_7-2-2-数据报",a:"_7-2-2-数据报"},"23.46":{t:"7.2.3 数据报格式",p:`!图片

首部的固定部分是20字节，共20 * 8 = 160比特（1字节=8比特）
0 - 4 比特是版本号，版本有ipv ...`,l:"basic-quality/computer-networks/index.html#_7-2-3-数据报格式",a:"_7-2-3-数据报格式"},"23.47":{t:"7.2.4 IP分片",p:"",l:"basic-quality/computer-networks/index.html#_7-2-4-ip分片",a:"_7-2-4-ip分片"},"23.48":{t:"为什么要分片呢？",p:"链路层数据帧封装的数据大小是有限制的，以太网的MTU（MTU是指一种通信协议的某一层上面所能通过的最大数据包大小）是1500 ...",l:"basic-quality/computer-networks/index.html#为什么要分片呢",a:"为什么要分片呢"},"23.49":{t:"7.2.5 ip地址分类",p:`!图片
`,l:"basic-quality/computer-networks/index.html#_7-2-5-ip地址分类",a:"_7-2-5-ip地址分类"},"23.50":{t:"ip地址有5种",p:`A类：1.0.0.0~126.255.255.255 B类：128.0.0.0~191.255.255.255
C类：192 ...`,l:"basic-quality/computer-networks/index.html#ip地址有5种",a:"ip地址有5种"},"23.51":{t:"7.2.6 网络地址转换(NAT)",p:"在ip地址分类里面，我们知道私有ip地址是不能跟外网交互的，在小公司大多数计算机的地址都是192.168网段，都是私有ip地 ...",l:"basic-quality/computer-networks/index.html#_7-2-6-网络地址转换-nat",a:"_7-2-6-网络地址转换-nat"},"23.52":{t:"7.2.7 子网划分和子网掩码",p:`首先要明白，为什么要划分子网？
首先大家要知道： 总体来说，划分子网不但没有增加可用IP地址，而且减少了可用IP地址，因为每 ...`,l:"basic-quality/computer-networks/index.html#_7-2-7-子网划分和子网掩码",a:"_7-2-7-子网划分和子网掩码"},"23.53":{t:"7.3 ARP协议",p:"",l:"basic-quality/computer-networks/index.html#_7-3-arp协议",a:"_7-3-arp协议"},"23.54":{t:"为什么需要ARP协议呢？",p:`我们简单回顾一下以太网的帧的格式
!图片
上图有一个源地址和目的地址，这两个地址都是指的mac地址，mac地址是什么呢？简单 ...`,l:"basic-quality/computer-networks/index.html#为什么需要arp协议呢",a:"为什么需要arp协议呢"},"23.55":{t:"7.4 DHCP协议",p:"DHCP（动态主机配置协议）是一个局域网的网络协议。指的是由服务器控制一段lP地址范围，客户机登录服务器时就可以自动获得服务 ...",l:"basic-quality/computer-networks/index.html#_7-4-dhcp协议",a:"_7-4-dhcp协议"},"23.56":{t:"大致工作过程（了解即可）",p:`!图片
`,l:"basic-quality/computer-networks/index.html#大致工作过程-了解即可",a:"大致工作过程-了解即可"},"23.57":{t:"7.5 ICMP协议",p:`ICMP协议是一个网络层协议。 为什么我们需要ICMP协议呢？
一个新搭建好的网络，往往需要先进行一个简单的测试，来验证网络 ...`,l:"basic-quality/computer-networks/index.html#_7-5-icmp协议",a:"_7-5-icmp协议"},"23.58":{t:"ICMP协议的功能主要有",p:`
确认IP包是否成功到达目标地址
通知在发送过程中IP包被丢弃的原因 我们举一个例子：
!图片

主机H2收到主机H1的一个 ...`,l:"basic-quality/computer-networks/index.html#icmp协议的功能主要有",a:"icmp协议的功能主要有"},"23.59":{t:"7.6 网络设备路由器简介",p:`路由器是一种具有多个输入端口和多个输出端口的专用计算机，其任务是转发和分组。
如下图所示，分别由转发和分组功能的说明。
!图 ...`,l:"basic-quality/computer-networks/index.html#_7-6-网络设备路由器简介",a:"_7-6-网络设备路由器简介"},"23.60":{t:"8 传输层知识",p:"传输层是只有计算机才有的层次，主要提供是进程间逻辑通信 + 可靠传输或者不可靠的功能。比如你的QQ跟你异地女友的QQ视频聊天 ...",l:"basic-quality/computer-networks/index.html#_8-传输层知识",a:"_8-传输层知识"},"23.61":{t:"8.1 端口号有什么用",p:`端口号可以用来标识同一个主机上通信的不同应用程序（就是哪个应用程序在使用这个端口）。
那为什么一个端口只能分配给一个应用程序 ...`,l:"basic-quality/computer-networks/index.html#_8-1-端口号有什么用",a:"_8-1-端口号有什么用"},"23.62":{t:"8.2 UDP协议",p:`UDP协议是参考模型中一种无连接的传输层协议，提供面向事务的简单不可靠信息传送服务。
`,l:"basic-quality/computer-networks/index.html#_8-2-udp协议",a:"_8-2-udp协议"},"23.63":{t:"（1） UDP协议的特点",p:`

UDP是无连接的，减少开销和发送数据之前的时间延迟。大家都知道TCP的三次握手和四次分手，这个是需要时间花销的，但是UD ...`,l:"basic-quality/computer-networks/index.html#_1-udp协议的特点",a:"_1-udp协议的特点"},"23.64":{t:"（2）UDP首部",p:`!图片

16位端口号占了2B，也就是16位，说明端口号的范围是0 - 65535。源端口号可以没有，因为不希望收到对方的回 ...`,l:"basic-quality/computer-networks/index.html#_2-udp首部",a:"_2-udp首部"},"23.65":{t:"8.3 TCP协议",p:`TCP协议简单来说是一种位于传输层的，面向连接的、可靠的、基于字节流的传输层通信协议 TCP协议的特点:


TCP是面向连 ...`,l:"basic-quality/computer-networks/index.html#_8-3-tcp协议",a:"_8-3-tcp协议"},"23.66":{t:"TCP报文的首部格式",p:`如下图所示，我们看一下比较重要的一些首部字段，这里我们介绍固定的20字节的TCP首部
!图片

源端口和目的端口分别是指发送 ...`,l:"basic-quality/computer-networks/index.html#tcp报文的首部格式",a:"tcp报文的首部格式"},"23.67":{t:"控制位 作用",p:`ACK 置1时表示确认号合法，为0的时候表示数据段不包含确认信息，确认号被忽略
PSH 置1时请求的数据段在接收方得到后就可 ...`,l:"basic-quality/computer-networks/index.html#控制位-作用",a:"控制位-作用"},"23.68":{t:"8.3.3 TCP建立连接",p:`如下图所示，分别来了解一下建立连接的过程：
!图片

首先客户端要发送一个数据包告诉服务器要建立连接，根据上面我们了解到的控 ...`,l:"basic-quality/computer-networks/index.html#_8-3-3-tcp建立连接",a:"_8-3-3-tcp建立连接"},"23.69":{t:"8.3.4 TCP释放连接",p:`如下图所示，分别来了解一下释放连接的过程：
!图片

客户端发起请求，请求断开链接。FIN=1，seq=u。u是之前传送过来 ...`,l:"basic-quality/computer-networks/index.html#_8-3-4-tcp释放连接",a:"_8-3-4-tcp释放连接"},"23.70":{t:"8.3.5 TCP3次握手4次挥手常见面试题",p:`为什么连接的时候是三次握手，关闭的时候却是四次握手？

关闭连接时，服务器收到对方的FIN报文时，仅仅表示对方不再发送数据了 ...`,l:"basic-quality/computer-networks/index.html#_8-3-5-tcp3次握手4次挥手常见面试题",a:"_8-3-5-tcp3次握手4次挥手常见面试题"},"23.71":{t:"以下是网上普遍的解答",p:`
若建立连接只需两次握手，客户端并没有太大的变化，仍然需要获得服务端的应答后才进入ESTABLISHED状态，而服务端在收到 ...`,l:"basic-quality/computer-networks/index.html#以下是网上普遍的解答",a:"以下是网上普遍的解答"},"23.72":{t:"什么是SYN洪泛攻击？",p:`
SYN洪泛攻击就是利用TCP协议的特性（三次握手）。
攻击者发送TCP的 SYN，SYN是TCP三次握手中第一个数据包，而 ...`,l:"basic-quality/computer-networks/index.html#什么是syn洪泛攻击",a:"什么是syn洪泛攻击"},"23.73":{t:"8.3.6 TCP如何实现可靠传输",p:`主要通过以下四种方式实现可靠传输机制：

校验。伪首部是为了增加TCP校验和的检错能力：通过伪首部的目的IP地址来检查TCP ...`,l:"basic-quality/computer-networks/index.html#_8-3-6-tcp如何实现可靠传输",a:"_8-3-6-tcp如何实现可靠传输"},"23.74":{t:"8.3.7 TCP的流量控制",p:"",l:"basic-quality/computer-networks/index.html#_8-3-7-tcp的流量控制",a:"_8-3-7-tcp的流量控制"},"23.75":{t:"为什么需要流量控制呢？",p:`比如发送方发送速度非常快，接收方接收速度特别慢，这样就会发生严重的丢包现象。
TCP通过滑动窗口的机制来实现流量控制。简单来 ...`,l:"basic-quality/computer-networks/index.html#为什么需要流量控制呢",a:"为什么需要流量控制呢"},"23.76":{t:"8.3.8 TCP的拥塞控制",p:`这部分我也觉得文字部分太生硬了，开始我也不怎么理解，看来一个视频之后我了解了基本原理，这里我文字版和视频地址都放上来。
视频 ...`,l:"basic-quality/computer-networks/index.html#_8-3-8-tcp的拥塞控制",a:"_8-3-8-tcp的拥塞控制"},"23.77":{t:"文字版如下",p:`
如果网络出现拥塞，分组将会丢失，此时发送方会继续重传，从而导致网络拥塞程度更高。因此当出现拥塞时，应当控制发送方的速率。这 ...`,l:"basic-quality/computer-networks/index.html#文字版如下",a:"文字版如下"},"23.78":{t:"慢开始与拥塞避免",p:`
发送的最初执行慢开始，令 cwnd = 1，发送方只能发送 1 个报文段；当收到确认后，将 cwnd 加倍，因此之后发送方 ...`,l:"basic-quality/computer-networks/index.html#慢开始与拥塞避免",a:"慢开始与拥塞避免"},"23.79":{t:"快重传与快恢复",p:`
在接收方，要求每次接收到报文段都应该对最后一个已收到的有序报文段进行确认。例如已经接收到 M1 和 M2，此时收到 M4， ...`,l:"basic-quality/computer-networks/index.html#快重传与快恢复",a:"快重传与快恢复"},"23.80":{t:"9、应用层",p:"",l:"basic-quality/computer-networks/index.html#_9、应用层",a:"_9、应用层"},"23.81":{t:"9.1 应用层有啥用？",p:`应用层对应用程序的通信提供服务。

区分是发送报文还是接收报文
定义报文类型的语法，比如某字段的意思，例如http中cont ...`,l:"basic-quality/computer-networks/index.html#_9-1-应用层有啥用",a:"_9-1-应用层有啥用"},"23.82":{t:"9.2 应用层常见的模型",p:`第一种是客户端/服务器模型，也就是C/S架构。比如电子邮件、web都是。
!图片
第二种是P2P模型，每个主机既可以提供服务 ...`,l:"basic-quality/computer-networks/index.html#_9-2-应用层常见的模型",a:"_9-2-应用层常见的模型"},"23.83":{t:"9.3 短链接和长链接",p:"而TCP连接有两种工作方式：短连接方式（Short-Live Connection）和长连接方式（Long-Live Con ...",l:"basic-quality/computer-networks/index.html#_9-3-短链接和长链接",a:"_9-3-短链接和长链接"},"23.84":{t:"短连接方式",p:`
当客户端有请求时，会建立一个TCP连接，接收到服务器响应后，就断开连接。下次有请求时，再建立连接，收到响应后，再断开。如此 ...`,l:"basic-quality/computer-networks/index.html#短连接方式",a:"短连接方式"},"23.85":{t:"长连接方式",p:"\n客户端和服务器建立TCP连接后，会一直使用这条连接进行数据交互，直到没有数据传输或异常断开。在空闲期间，通常会使用``心跳 ...",l:"basic-quality/computer-networks/index.html#长连接方式",a:"长连接方式"},"23.86":{t:"9.4 DNS",p:"什么是DNS说白了就是将域名转化为ip，比如www.qq.com，这是域名，可以是网络包需要对方ip地址，域名是不能加入网络 ...",l:"basic-quality/computer-networks/index.html#_9-4-dns",a:"_9-4-dns"},"23.87":{t:"大概的通信过程如下",p:`
用户主机上运行着DNS的客户端，就是我们的PC机或者手机客户端运行着DNS客户端了
浏览器将接收到的url中抽取出域名字段 ...`,l:"basic-quality/computer-networks/index.html#大概的通信过程如下",a:"大概的通信过程如下"},"23.88":{t:"9.5 万维网和http协议",p:`万维网www是一个大规模的、联机式的信息存储所，是无数个网络站点和网页的集合。
知识盲区： 在不少人看来，互联网、因特网、万 ...`,l:"basic-quality/computer-networks/index.html#_9-5-万维网和http协议",a:"_9-5-万维网和http协议"},"23.89":{t:"URL的格式如下",p:`!图片

用户通过点击超链接获取资源，这些资源通过超文本传输协议（http）传送给使用者。
HTTP协议定义了浏览器怎样向万 ...`,l:"basic-quality/computer-networks/index.html#url的格式如下",a:"url的格式如下"},"23.90":{t:"http报文头分析",p:`!图片
下面是对各部分的简要描述：

方法(method)：客户端希望服务器对资源执行的动作，是一个单独的词，比如，GET、 ...`,l:"basic-quality/computer-networks/index.html#http报文头分析",a:"http报文头分析"},"23.91":{t:"通用头部：既可以出现在请求报文中，也可以出现在响应报文中，它提供了与报文相关的最基本的信息",p:"Connection：允许客户端和服务器指定与请求/响应连接有关的选项，http1.1默认是keep-alive Date： ...",l:"basic-quality/computer-networks/index.html#通用头部-既可以出现在请求报文中-也可以出现在响应报文中-它提供了与报文相关的最基本的信息",a:"通用头部-既可以出现在请求报文中-也可以出现在响应报文中-它提供了与报文相关的最基本的信息"},"23.92":{t:"响应头部：响应头部为客户端提供了一些额外信息，比如谁在发送响应、响应者的功能，甚至与响应相关的一些特殊指令",p:`
Age：(从最初创建开始)响应持续时间
Server：服务器应用程序软件的名称和版本
Accept-Ranges：对此资源 ...`,l:"basic-quality/computer-networks/index.html#响应头部-响应头部为客户端提供了一些额外信息-比如谁在发送响应、响应者的功能-甚至与响应相关的一些特殊指令",a:"响应头部-响应头部为客户端提供了一些额外信息-比如谁在发送响应、响应者的功能-甚至与响应相关的一些特殊指令"},"23.93":{t:"实体首部：描述主体的长度和内容，或者资源自身",p:`
Allow：列出了可以对此实体执行的请求方法
Location：告知客户端实体实际上位于何处，用于将接收端定向到资源的位置 ...`,l:"basic-quality/computer-networks/index.html#实体首部-描述主体的长度和内容-或者资源自身",a:"实体首部-描述主体的长度和内容-或者资源自身"},"23.94":{t:"实体的主体部分：该部分其实就是HTTP要传输的内容，是可选的。HTTP报文可以承载很多类型的数字数据，比如，图片、视频、HTML文档电子邮件、软件应用程序等等",p:"",l:"basic-quality/computer-networks/index.html#实体的主体部分-该部分其实就是http要传输的内容-是可选的。http报文可以承载很多类型的数字数据-比如-图片、视频、html文档电子邮件、软件应用程序等等",a:"实体的主体部分-该部分其实就是http要传输的内容-是可选的。http报文可以承载很多类型的数字数据-比如-图片、视频、html文档电子邮件、软件应用程序等等"},"24.0":{t:"# HTTP 请求跨域问题",p:"",l:"basic-quality/http/cross-domain/index.html",a:"http-请求跨域问题"},"24.1":{t:"跨域的原理跨域",p:`是指浏览器不能执行其他网站的脚本。它是由浏览器的同源策略造成的。
同源策略,是浏览器对 JavaScript 实施的安全限制 ...`,l:"basic-quality/http/cross-domain/index.html#跨域的原理跨域",a:"跨域的原理跨域"},"24.2":{t:"跨域原理",p:`即是通过各种方式，避开浏览器的安全限制。
`,l:"basic-quality/http/cross-domain/index.html#跨域原理",a:"跨域原理"},"24.3":{t:"解决方案",p:"最初做项目的时候，使用的是jsonp，但存在一些问题，使用get请求不安全，携带数据较小，后来也用过iframe，但只有主域 ...",l:"basic-quality/http/cross-domain/index.html#解决方案",a:"解决方案"},"24.4":{t:"JSONP",p:"ajax 请求受同源策略影响，不允许进行跨域请求，而 script 标签 src 属性中的链 接却可以访问跨域的 js 脚本 ...",l:"basic-quality/http/cross-domain/index.html#jsonp",a:"jsonp"},"24.5":{t:"步骤",p:`
去创建一个script标签
script的src属性设置接口地址
接口参数，必须要带一个自定义函数名，要不然后台无法返回数 ...`,l:"basic-quality/http/cross-domain/index.html#步骤",a:"步骤"},"24.6":{t:"跨域问题实际上改的是 http 里面哪个参数",p:`答：Access-Control-Allow-Origin
`,l:"basic-quality/http/cross-domain/index.html#跨域问题实际上改的是-http-里面哪个参数",a:"跨域问题实际上改的是-http-里面哪个参数"},"25.0":{t:"# HTTP请求头",p:"",l:"basic-quality/http/http-headers/index.html",a:"http请求头"},"25.1":{t:"1.1 场景",p:"如果你有了解过 Content-Disposition 这个 Response Header，那你一定知道，只需要响应头上增 ...",l:"basic-quality/http/http-headers/index.html#_1-1-场景",a:"_1-1-场景"},"25.2":{t:"1.2 介绍",p:`Content-Disposition：这个响应头可以决定内容是 预览 还是 下载。
它支持三种格式的值：

Content ...`,l:"basic-quality/http/http-headers/index.html#_1-2-介绍",a:"_1-2-介绍"},"25.3":{t:"1.3 示例",p:`为此，我特意写了一个 express 小示例。
大抵是在 express 应用下写了三个路由，如下：
const user  ...`,l:"basic-quality/http/http-headers/index.html#_1-3-示例",a:"_1-3-示例"},"25.4":{t:"2.1 场景",p:`实施：“客户反馈Bug 还是没修复。”
你：“哥，真修复了，要不你让客户清一下缓存？”
实施：“啊？客户说他不会清……”
永 ...`,l:"basic-quality/http/http-headers/index.html#_2-1-场景",a:"_2-1-场景"},"25.5":{t:"2.2 介绍",p:`Cache-Control：用来指定缓存机制。
缓存，作为前端八股文必考知识，相信大家已经耳熟能详。 常见的 Cache-C ...`,l:"basic-quality/http/http-headers/index.html#_2-2-介绍",a:"_2-2-介绍"},"25.6":{t:"2.3 实际生产如何运用？",p:`
凡是名称带有 hash 值的资源，一律可以强缓存。
（毕竟内容一旦有变化，名称的hash 也跟着变了）
凡是通过 cdn  ...`,l:"basic-quality/http/http-headers/index.html#_2-3-实际生产如何运用",a:"_2-3-实际生产如何运用"},"25.7":{t:"3.1 场景",p:`
&quot;春哥春哥，为啥我登录成功了，请求还是 401 ？&quot;


&quot;春哥春哥，为啥我存进 cooki ...`,l:"basic-quality/http/http-headers/index.html#_3-1-场景",a:"_3-1-场景"},"25.8":{t:"3.2 介绍",p:"Cookie 曾经是 Web 开发无法绕开的一道门槛，而现在它的存在感越来越弱，但海量的存量项目并不会因为技术的趋势而消失， ...",l:"basic-quality/http/http-headers/index.html#_3-2-介绍",a:"_3-2-介绍"},"25.9":{t:"3.3 开发常见问题分析",p:`

为啥你登录成功了，请求还是 401？
早期非常多的项目，使用 Cookie 作为用户身份识别的手段，比如 Spring  ...`,l:"basic-quality/http/http-headers/index.html#_3-3-开发常见问题分析",a:"_3-3-开发常见问题分析"},"26.0":{t:"# http  vs https",p:"",l:"basic-quality/http/http-https/index.html",a:"http-vs-https"},"26.1":{t:"1.http 和 https 的基本概念",p:`
http: 是一个客户端和服务器端请求和应答的标准（TCP），用于从 WWW 服务器传输超文本到本地浏览器的超文本传输协议 ...`,l:"basic-quality/http/http-https/index.html#_1-http-和-https-的基本概念",a:"_1-http-和-https-的基本概念"},"26.2":{t:"2.http 和 https 的区别及优缺点？",p:`
http 是超文本传输协议，信息是明文传输，HTTPS 协议要比 http 协议安全，https 是具有安全性的 ssl  ...`,l:"basic-quality/http/http-https/index.html#_2-http-和-https-的区别及优缺点",a:"_2-http-和-https-的区别及优缺点"},"26.3":{t:"3.https 协议的工作原理",p:"",l:"basic-quality/http/http-https/index.html#_3-https-协议的工作原理",a:"_3-https-协议的工作原理"},"26.4":{t:"客户端在使用 HTTPS 方式与 Web 服务器通信时有以下几个步骤",p:`
客户端使用 https url 访问服务器，则要求 web 服务器建立 ssl 链接。
web 服务器接收到客户端的请求之 ...`,l:"basic-quality/http/http-https/index.html#客户端在使用-https-方式与-web-服务器通信时有以下几个步骤",a:"客户端在使用-https-方式与-web-服务器通信时有以下几个步骤"},"26.5":{t:"区别",p:`
https协议需要到ca申请证书，一般免费证书较少，因而需要一定费用。
http是超文本传输协议，信息是明文传输，http ...`,l:"basic-quality/http/http-https/index.html#区别",a:"区别"},"27.0":{t:"# HTTP 及 TLS",p:"",l:"basic-quality/http/http-tls/index.html",a:"http-及-tls"},"27.1":{t:"HTTP 请求中的内容 HTTP 请求由三部分构成，分别为",p:`

请求行


首部


实体


请求行大概长这样 GET /images/logo.gif HTTP/1.1，基本由请求 ...`,l:"basic-quality/http/http-tls/index.html#http-请求中的内容-http-请求由三部分构成-分别为",a:"http-请求中的内容-http-请求由三部分构成-分别为"},"27.2":{t:"在技术上说",p:`
Get 请求能缓存，Post 不能
Post 相对 Get 安全一点点，因为Get 请求都包含在 URL 里（当然你想写到 ...`,l:"basic-quality/http/http-tls/index.html#在技术上说",a:"在技术上说"},"27.3":{t:"首部",p:`首部分为请求首部和响应首部，并且部分首部两种通用，接下来我们就来学习一部分的常用首部。
`,l:"basic-quality/http/http-tls/index.html#首部",a:"首部"},"27.4":{t:"通用首部",p:"",l:"basic-quality/http/http-tls/index.html#通用首部",a:"通用首部"},"27.5":{t:"通用字段 作用",p:`
Cache-Control 控制缓存的行为
Connection 浏览器想要优先使用的连接类型，比如 keep-alive ...`,l:"basic-quality/http/http-tls/index.html#通用字段-作用",a:"通用字段-作用"},"27.6":{t:"请求首部",p:"",l:"basic-quality/http/http-tls/index.html#请求首部",a:"请求首部"},"27.7":{t:"请求首部 作用",p:`
Accept 能正确接收的媒体类型
Accept-Charset 能正确接收的字符集
Accept-Encoding 能正 ...`,l:"basic-quality/http/http-tls/index.html#请求首部-作用",a:"请求首部-作用"},"27.8":{t:"响应首部",p:"",l:"basic-quality/http/http-tls/index.html#响应首部",a:"响应首部"},"27.9":{t:"响应首部 作用",p:`
Accept-Ranges 是否支持某些种类的范围
Age 资源在代理缓存中存在的时间
ETag 资源标识
Locatio ...`,l:"basic-quality/http/http-tls/index.html#响应首部-作用",a:"响应首部-作用"},"27.10":{t:"实体首部",p:"",l:"basic-quality/http/http-tls/index.html#实体首部",a:"实体首部"},"27.11":{t:"实体首部 作用",p:`
Allow 资源的正确请求方式
Content-Encoding 内容的编码格式
Content-Language 内容使 ...`,l:"basic-quality/http/http-tls/index.html#实体首部-作用",a:"实体首部-作用"},"27.12":{t:"TLS HTTPS 还是通过了 HTTP 来传输信息，但是信息通过 TLS 协议进行了加密。",p:`
TLS 协议位于传输层之上，应用层之下。首次进行 TLS 协议传输需要两个 RTT ，接下来可以通过 Session Re ...`,l:"basic-quality/http/http-tls/index.html#tls-https-还是通过了-http-来传输信息-但是信息通过-tls-协议进行了加密。",a:"tls-https-还是通过了-http-来传输信息-但是信息通过-tls-协议进行了加密。"},"27.13":{t:"对称加密",p:`
对称加密就是两边拥有相同的秘钥，两边都知道如何将密文加密解密。
这种加密方式固然很好，但是问题就在于如何让双方知道秘钥。因 ...`,l:"basic-quality/http/http-tls/index.html#对称加密",a:"对称加密"},"27.14":{t:"非对称加密",p:`
有公钥私钥之分，公钥所有人都可以知道，可以将数据用公钥加密，但是将数据解密必须使用私钥解密，私钥只有分发公钥的一方才知道。 ...`,l:"basic-quality/http/http-tls/index.html#非对称加密",a:"非对称加密"},"27.15":{t:"TLS 握手过程如下图",p:`!图片

客户端发送一个随机值以及需要的协议和加密方式。
服务端收到客户端的随机值，自己也产生一个随机值，并根据客户端需求的 ...`,l:"basic-quality/http/http-tls/index.html#tls-握手过程如下图",a:"tls-握手过程如下图"},"28.0":{t:"# http2.0 做了哪些改进 3.0",p:"",l:"basic-quality/http/http2-http3/index.html",a:"http2-0-做了哪些改进-3-0"},"28.1":{t:"http2.0 特性如下",p:`
二进制分帧传输
多路复用
头部压缩
服务器推送
Http3.0 相对于 Http2.0 是一种脱胎换骨的改变！
http  ...`,l:"basic-quality/http/http2-http3/index.html#http2-0-特性如下",a:"http2-0-特性如下"},"28.2":{t:"http3.0 特性如下",p:`
连接迁移
无队头阻塞
自定义的拥塞控制
前向安全和前向纠错

`,l:"basic-quality/http/http2-http3/index.html#http3-0-特性如下",a:"http3-0-特性如下"},"29.0":{t:"# http 状态码都有哪些",p:"",l:"basic-quality/http/status-code/index.html",a:"http-状态码都有哪些"},"29.1":{t:"状态码第一位数字决定了不同的响应状态，如下",p:`
1 表示消息
2 表示成功
3 表示重定向
4 表示请求错误
5 表示服务器错误

`,l:"basic-quality/http/status-code/index.html#状态码第一位数字决定了不同的响应状态-如下",a:"状态码第一位数字决定了不同的响应状态-如下"},"29.2":{t:"1xx",p:`代表请求已被接受，需要继续处理，这类响应是临时响应，只包含状态行和某些可选的响应信息，并一空行结束
常见的有：

100 （ ...`,l:"basic-quality/http/status-code/index.html#_1xx",a:"_1xx"},"29.3":{t:"2xx",p:`代表请求已成功被服务器接收，处理，并接受

200 （成功） 请求已成功，请求所希望的响应头或数据体将随此响应返回
201  ...`,l:"basic-quality/http/status-code/index.html#_2xx",a:"_2xx"},"29.4":{t:"3xx",p:`表示要完成请求，需要进一步操作，通常这些状态代码用来重定向

300 （多种选择）针对请求，服务器可执行多种操作。
301  ...`,l:"basic-quality/http/status-code/index.html#_3xx",a:"_3xx"},"29.5":{t:"4xx",p:`代表了客户端看起来可能发生了错误，妨碍了服务器的处理

400 （错误请求）服务器不理解请求的语法
401 （未授权）请求要 ...`,l:"basic-quality/http/status-code/index.html#_4xx",a:"_4xx"},"29.6":{t:"5xx",p:`表示服务器无法完成明显有效的请求。这类状态代码代表了服务器在处理请求的过程中有错误或异常状态发生

500 （服务器内部错误 ...`,l:"basic-quality/http/status-code/index.html#_5xx",a:"_5xx"},"30.0":{t:"# TCP/IP / 如何保证数据包传输的有序可靠？",p:"",l:"basic-quality/orderly-reliable-transmission/index.html",a:"tcp-ip-如何保证数据包传输的有序可靠"},"30.1":{t:"对字节流分段并进行编号然后通过 ACK 回复和超时重发这两个机制来保证",p:`
（1）为了保证数据包的可靠传递，发送方必须把已发送的数据包保留在缓冲区；
（2）并为每个已发送的数据包启动一个超时定时器； ...`,l:"basic-quality/orderly-reliable-transmission/index.html#对字节流分段并进行编号然后通过-ack-回复和超时重发这两个机制来保证",a:"对字节流分段并进行编号然后通过-ack-回复和超时重发这两个机制来保证"},"31.0":{t:"# 复盘思维",p:"",l:"basic-quality/soft-power/analyse/index.html",a:"复盘思维"},"31.1":{t:"什么是复盘？",p:`复盘，首先是一个围棋概念。在围棋中，复盘也称 “复局”。
指对局完毕后，棋手复演这盘棋的记录，以检查对局中双方招法的优劣与得 ...`,l:"basic-quality/soft-power/analyse/index.html#什么是复盘",a:"什么是复盘"},"31.2":{t:"为什么要复盘？",p:`曾子说：“吾日三省吾身：为人谋而不忠乎？与朋友交而不信乎？传不习乎？”
从曾子的角度来看，他认为每天复盘的原因，是为了做更好 ...`,l:"basic-quality/soft-power/analyse/index.html#为什么要复盘",a:"为什么要复盘"},"31.3":{t:"第一，复盘可以避免未来的失败",p:`在脑海中失败的越多，才能减少在现实中的失败。
如前文中描述的故障复盘，其实就是从线上故障中寻找原因和解法，进而避免未来再次出 ...`,l:"basic-quality/soft-power/analyse/index.html#第一-复盘可以避免未来的失败",a:"第一-复盘可以避免未来的失败"},"31.4":{t:"第二，复盘是成功的催化剂",p:"避免了失败，不代表我们一定会成功。如果想要成功，我们更要时时复盘那些成功案例。从中找出能够让我们走向成功的主要原因，并且想方 ...",l:"basic-quality/soft-power/analyse/index.html#第二-复盘是成功的催化剂",a:"第二-复盘是成功的催化剂"},"31.5":{t:"第三，复盘产生新知，新知可以传承",p:`复盘要求我们从全局视角去重新审视已经发生的事件。
在切换视角之后，即便是同一件事情也可以从中看到不同的内容，所以说复盘是一个 ...`,l:"basic-quality/soft-power/analyse/index.html#第三-复盘产生新知-新知可以传承",a:"第三-复盘产生新知-新知可以传承"},"31.6":{t:"如何复盘？",p:"",l:"basic-quality/soft-power/analyse/index.html#如何复盘",a:"如何复盘"},"31.7":{t:"首先，从复盘材料的来源看，复盘有两种方式",p:`

第一种，复盘自己的经历。


第二种，复盘别人的经历。


第一种方式-复盘自己的经历。概括下来，就是“我当时为何要这样 ...`,l:"basic-quality/soft-power/analyse/index.html#首先-从复盘材料的来源看-复盘有两种方式",a:"首先-从复盘材料的来源看-复盘有两种方式"},"31.8":{t:"其次，关于复盘的内容，可以是成功的经历，也可以是失败的经历",p:`
复盘的目的无非有二：学习成功者如何成功，学习失败者如何失败。

比如，前文故事中的故障复盘，其实就是在复盘失败的经历，避免 ...`,l:"basic-quality/soft-power/analyse/index.html#其次-关于复盘的内容-可以是成功的经历-也可以是失败的经历",a:"其次-关于复盘的内容-可以是成功的经历-也可以是失败的经历"},"31.9":{t:"再次，从复盘的过程来看，信息的全面性、客观性非常重要",p:`为了能够对整个事件有全面的把握，我们要把事件的始末梳理清楚，我们要尽可能地还原出每个人在事件中的所思所想和行动。
当然，聪明 ...`,l:"basic-quality/soft-power/analyse/index.html#再次-从复盘的过程来看-信息的全面性、客观性非常重要",a:"再次-从复盘的过程来看-信息的全面性、客观性非常重要"},"31.10":{t:"此外，复盘人数可以是一个人也可以是多人",p:`一个人复盘不难理解，毕竟有些事情只能一个人在心里慢慢复盘。
但是多人复盘却能够避免盲区，集思广益。
当然，无论一人复盘还是多 ...`,l:"basic-quality/soft-power/analyse/index.html#此外-复盘人数可以是一个人也可以是多人",a:"此外-复盘人数可以是一个人也可以是多人"},"31.11":{t:"最后，复盘一定要有指导未来的结果",p:`复盘不是空想和空谈，不能因为盘过了就抛之脑后，浪费了大量的时间，还不如不盘。
复盘之后，一定要有可以执行的动作，一定要有改进 ...`,l:"basic-quality/soft-power/analyse/index.html#最后-复盘一定要有指导未来的结果",a:"最后-复盘一定要有指导未来的结果"},"31.12":{t:"何时复盘？",p:`对于重大事件，比如故事中故障复盘，最好的复盘时间是故障发生后的一周之内，此时人们对事件的记忆还比较清晰，复盘效果最好。
对于 ...`,l:"basic-quality/soft-power/analyse/index.html#何时复盘",a:"何时复盘"},"31.13":{t:"复盘的关键点",p:`无论复盘的具体形式是怎样的，都必须遵循如下四个关键点：
`,l:"basic-quality/soft-power/analyse/index.html#复盘的关键点",a:"复盘的关键点"},"31.14":{t:"第一，复盘最怕肤浅",p:`既然是复盘，那就要想方设法弄清楚所复盘事件的前后因果，找到驱动整个事件的“底层逻辑”，要有一定的思考深度。
如果复盘只是简单 ...`,l:"basic-quality/soft-power/analyse/index.html#第一-复盘最怕肤浅",a:"第一-复盘最怕肤浅"},"31.15":{t:"第二，复盘不是追责",p:`复盘盘的是事情的始末源委，盘事情的目的是为了未来把事情做好，而不是为了给哪个人定责。
如果抱着追责的心态去复盘，那复盘的过程 ...`,l:"basic-quality/soft-power/analyse/index.html#第二-复盘不是追责",a:"第二-复盘不是追责"},"31.16":{t:"第三，复盘之后一定要有行动",p:`既然复盘是面向未来的，那么复盘之后，除了有最痛的领悟之外，一定要有行动。
若没有行动，只是在脑子里想想、嘴上说说，那怕你想出 ...`,l:"basic-quality/soft-power/analyse/index.html#第三-复盘之后一定要有行动",a:"第三-复盘之后一定要有行动"},"31.17":{t:"第四，失败要复盘，成功更要复盘",p:`我们在工作当中，更多的是复盘故障和失败，从来没有复盘过成功。
事实上，无论是成功还是失败，都只是一个事件。
如果是事件，那么 ...`,l:"basic-quality/soft-power/analyse/index.html#第四-失败要复盘-成功更要复盘",a:"第四-失败要复盘-成功更要复盘"},"31.18":{t:"其他行业的复盘工具",p:`复盘并不是互联网公司首创的，每个行业都有它的复盘方法论，这里仅列举三个例子：
第一，在我国的航天领域有所谓的“归零”，这其实 ...`,l:"basic-quality/soft-power/analyse/index.html#其他行业的复盘工具",a:"其他行业的复盘工具"},"32.0":{t:"# 提问的艺术",p:`!图片
`,l:"basic-quality/soft-power/answer/index.html",a:"提问的艺术"},"32.1":{t:"正确的提问",p:`
先自己折腾，尝试一番。如果能搞定，那感情好的；如果搞不定，这时候对问题来龙去脉有点思路了。
百度、bing、Google（ ...`,l:"basic-quality/soft-power/answer/index.html#正确的提问",a:"正确的提问"},"32.2":{t:"反例",p:`
大佬：（要介绍妹子么？回不回？）“在的，你说。”
萌新：“关于 A 这个框架中的 §№☆●◎□◆○◎★▲△■※￡¤￠℃￥ξ ...`,l:"basic-quality/soft-power/answer/index.html#反例",a:"反例"},"32.3":{t:"提问常识",p:`
要知道，Free 的正确翻译是 自由，而非 免费。即便回答你的人由时间。
要知道，愿意回答问题的人，都是 可爱 的人。
要 ...`,l:"basic-quality/soft-power/answer/index.html#提问常识",a:"提问常识"},"33.0":{t:"# 什么是架构师",p:"",l:"basic-quality/soft-power/architect/index.html",a:"什么是架构师"},"33.1":{t:"什么是架构？",p:"在我看来软件架构就是将人员、技术等资源组织起来以解决业务问题，支撑业务 增长的一种活动。可能比较抽象，我想我们可以从架构师的 ...",l:"basic-quality/soft-power/architect/index.html#什么是架构",a:"什么是架构"},"33.2":{t:"前端架构师的核心工作是降低需求增长带来的技术实现的复杂性 简称 降本增效",p:`因为运营页面需求的增长, 我们打造运营页面搭建系统来降低技术实现的复杂性
因为我们要在不同端实现相同的需求的增长, 我们开发 ...`,l:"basic-quality/soft-power/architect/index.html#前端架构师的核心工作是降低需求增长带来的技术实现的复杂性-简称-降本增效",a:"前端架构师的核心工作是降低需求增长带来的技术实现的复杂性-简称-降本增效"},"33.3":{t:"能够将业务转换成技术",p:"必须具备超强的落地能力，能够将用户的业务需求落地到技术方案，帮助研发团队开发出用户愿意使用的产品和功能。通过对业务的理解，梳 ...",l:"basic-quality/soft-power/architect/index.html#能够将业务转换成技术",a:"能够将业务转换成技术"},"33.4":{t:"能合理利用技术支撑业务",p:"",l:"basic-quality/soft-power/architect/index.html#能合理利用技术支撑业务",a:"能合理利用技术支撑业务"},"33.5":{t:"具备前瞻思维和战略思维",p:`所谓架构，我理解是综合考虑目标、业界和团队，作为合理的方案选择，既能支撑业务的发展，又能令团队满意。
`,l:"basic-quality/soft-power/architect/index.html#具备前瞻思维和战略思维",a:"具备前瞻思维和战略思维"},"34.0":{t:"# 回答的艺术",p:"",l:"basic-quality/soft-power/asking-questions/index.html",a:"回答的艺术"},"34.1":{t:"前端的应该做到",p:`
不能产品说什么就闷着头做什么 应该站到前端的角度 根据自身对业务的理解 提出专业的意见 而不是闷着头只知道写代码
要对 做 ...`,l:"basic-quality/soft-power/asking-questions/index.html#前端的应该做到",a:"前端的应该做到"},"34.2":{t:"怎么看待前端这个行业",p:`
对于前端工程师这个职位，我觉得这是和用户接触最近的一个职位，
一个产品的好坏并不是企业说的算，用户喜欢的产品才是好的产品， ...`,l:"basic-quality/soft-power/asking-questions/index.html#怎么看待前端这个行业",a:"怎么看待前端这个行业"},"35.0":{t:"# 概念化",p:`架构师通常是商业世界和技术之间的主要联系之一。
概念化，指的是通过构思，将用户的想法概念化为可以实现的事物。
`,l:"basic-quality/soft-power/conceptualization/index.html",a:"概念化"},"35.1":{t:"概念的形成",p:`当我们进入一个新的领域，它们有着与众不同的用法、发音和语境，想与这个领域建立联系，首先要充分理解这个领域的生存方式。
通产构 ...`,l:"basic-quality/soft-power/conceptualization/index.html#概念的形成",a:"概念的形成"},"35.2":{t:"正在讨论的是什么问题",p:`
所要解决的是一组什么样的问题
解决这些问题有什么常用的方案
客户希望的是什么样的结果？系统增加什么价值？
解决这些问题有什 ...`,l:"basic-quality/soft-power/conceptualization/index.html#正在讨论的是什么问题",a:"正在讨论的是什么问题"},"35.3":{t:"当对这个问题有了大致的了解之后，应该思考",p:`
真正的边界在哪里
真正的需求是什么
真正的客户是谁
存在怎么样的约束
解决方案的主要组成部分

`,l:"basic-quality/soft-power/conceptualization/index.html#当对这个问题有了大致的了解之后-应该思考",a:"当对这个问题有了大致的了解之后-应该思考"},"35.4":{t:"构思过程",p:`1.开发环境图和概率图能够为讨论的问题提供备选方案
2.在构思过程中要倾听客户的诉求
`,l:"basic-quality/soft-power/conceptualization/index.html#构思过程",a:"构思过程"},"35.5":{t:"概念具体化",p:`“二八法则”同样适用于软件开发，应该尽早制作出最小可行性产品——人们每天使用的20%的功能（关键、重要的功能）。
`,l:"basic-quality/soft-power/conceptualization/index.html#概念具体化",a:"概念具体化"},"36.0":{t:"# 估算",p:`!图片
`,l:"basic-quality/soft-power/estimate/index.html",a:"估算"},"36.1":{t:"估算要注意以下的因素",p:`
项目的成本
项目何时交付
与项目关联的风险
项目的潜在的相互依赖性
项目的未知领域
可能有什么备选方法
关于项目做了何种假 ...`,l:"basic-quality/soft-power/estimate/index.html#估算要注意以下的因素",a:"估算要注意以下的因素"},"36.2":{t:"架构方法的关键要素包括",p:`
项目相关背景信息的描述
方法与业务需求相符的说明
交付关键框图，以图形的方式说明将要构建的项目
风险、假设、问题、突出问题 ...`,l:"basic-quality/soft-power/estimate/index.html#架构方法的关键要素包括",a:"架构方法的关键要素包括"},"36.3":{t:"估算的大致流程",p:`!图片
收入登记：完成项目获得的收入。（收入）
项目估算：完成项目需要投入的成本。（成本）
项目筹资：当估算项目能获得收益时 ...`,l:"basic-quality/soft-power/estimate/index.html#估算的大致流程",a:"估算的大致流程"},"36.4":{t:"项目的类型",p:`维护、迁移、新/改进、集成、采购 （遇到迁移、新建要谨慎）
`,l:"basic-quality/soft-power/estimate/index.html#项目的类型",a:"项目的类型"},"36.5":{t:"估算策略",p:`
为未知因素和挑战指定计划
务实：不要为了获得项目而屈服
严密控制关键的因素
开发估算反馈循环
最大限度地减少组织耦合和内聚 ...`,l:"basic-quality/soft-power/estimate/index.html#估算策略",a:"估算策略"},"37.0":{t:"# 飞轮思维",p:`懈怠似乎才是常态，这是为什么呢？
因为，我们日常中的诱惑实在是太多了，而违背自己的常规生活路径的去坚持一件平常不会做的事情的 ...`,l:"basic-quality/soft-power/flywheel/index.html",a:"飞轮思维"},"37.1":{t:"亚马逊的商业飞轮",p:`起初，飞轮理论是由管理学大师吉姆·柯林斯提出的，他甚至专门写了一本名为《飞轮效应》的小册子
!5-飞轮效应.jpeg
在这本 ...`,l:"basic-quality/soft-power/flywheel/index.html#亚马逊的商业飞轮",a:"亚马逊的商业飞轮"},"37.2":{t:"飞轮思维",p:`说了这么多，到底什么是飞轮思维？
飞轮思维的核心思想是打造一个“飞轮系统”，然后通过持续推动飞轮的转动来积累足够的能量，直到 ...`,l:"basic-quality/soft-power/flywheel/index.html#飞轮思维",a:"飞轮思维"},"37.3":{t:"个人成长飞轮",p:"[从小需求做起——&gt; 高质量交付工作，自身能力提升——&gt; 获得同事信任——&gt;委以更大的需求——&gt; 获 ...",l:"basic-quality/soft-power/flywheel/index.html#个人成长飞轮",a:"个人成长飞轮"},"37.4":{t:"组合使用",p:`因为飞轮需要反复的升级和优化，所以飞轮思维可以和迭代思维组合使用。
此外，在推动飞轮时，为了减少不确定性带来的风险，我们可以 ...`,l:"basic-quality/soft-power/flywheel/index.html#组合使用",a:"组合使用"},"38.0":{t:"# 发现",p:`作为架构师，应该抓住一切机会与客户会面，双方都需要交换极其关键的信息。
`,l:"basic-quality/soft-power/found/index.html",a:"发现"},"38.1":{t:"了解客户",p:`
与销售、市场及新产品开发部门建立合作关系
与客户会谈

`,l:"basic-quality/soft-power/found/index.html#了解客户",a:"了解客户"},"38.2":{t:"与客户访问的准备",p:`
是否需要保密协议
可以以私人的方式访问他们吗
我的竞争对手有什么相关的产品

`,l:"basic-quality/soft-power/found/index.html#与客户访问的准备",a:"与客户访问的准备"},"38.3":{t:"与客户会面",p:`
客户的角色
客户所在组织的组织性质
是否理解客户的工作流程
客户这种工作方式的优劣势
是否需要与其他系统有交互或者集成
需 ...`,l:"basic-quality/soft-power/found/index.html#与客户会面",a:"与客户会面"},"38.4":{t:"了解市场",p:`a.我们进入一个市场要掌握以下因素：

我们的产品影响那些市场
整个市场的机遇是什么
解决的方案是地区性的还是全国性
这个解 ...`,l:"basic-quality/soft-power/found/index.html#了解市场",a:"了解市场"},"38.5":{t:"了解客户的客户",p:`
客户的客户是谁？他们的关注点，他们对什么比较在乎
你的产品如何帮助客户服务他们的客户
客户的销售模式
你的产品能否帮助客户 ...`,l:"basic-quality/soft-power/found/index.html#了解客户的客户",a:"了解客户的客户"},"38.6":{t:"了解你的业务",p:`
当完成一个项目时，要记下战略思路，方便下一次类似的项目可以重用
类似于“电梯演讲”每一次都是上一次的升华
为用户带尽可能多 ...`,l:"basic-quality/soft-power/found/index.html#了解你的业务",a:"了解你的业务"},"39.0":{t:"# 灰度思维",p:"",l:"basic-quality/soft-power/gray/index.html",a:"灰度思维"},"39.1":{t:"什么是灰度思维",p:`
这个世界之所以能够正常运行，很大的一部分原因就在于我们的物理定律和社会规范都是确定性的。

在确定性的世界里，太阳从东方升 ...`,l:"basic-quality/soft-power/gray/index.html#什么是灰度思维",a:"什么是灰度思维"},"39.2":{t:"首先，我们要判断问题的性质",p:"如果这个问题对于我们来说是已经解决的问题，那你多半已经轻车熟路了。除非有新的因素引入（比如，后来切库我们换了一个新的dba同 ...",l:"basic-quality/soft-power/gray/index.html#首先-我们要判断问题的性质",a:"首先-我们要判断问题的性质"},"39.3":{t:"其次，确认当前问题是否可以拆解为规模更小的等价问题",p:"只有把问题拆解成更小的问题，我们才能有效降低验证成本。同时，只有确保这些小问题是原始问题的等价问题，我们才可能从对小问题的验 ...",l:"basic-quality/soft-power/gray/index.html#其次-确认当前问题是否可以拆解为规模更小的等价问题",a:"其次-确认当前问题是否可以拆解为规模更小的等价问题"},"39.4":{t:"最后，在前面的功课都做完之后，灰度思维要求我们付诸实践",p:`在这一步，我们要设计好试验步骤并对试验结果做好假设。
比如，在dba切换的例子里，试验步骤就是我们当时拟定好的操作计划。
当 ...`,l:"basic-quality/soft-power/gray/index.html#最后-在前面的功课都做完之后-灰度思维要求我们付诸实践",a:"最后-在前面的功课都做完之后-灰度思维要求我们付诸实践"},"39.5":{t:"工作上的例子",p:"",l:"basic-quality/soft-power/gray/index.html#工作上的例子",a:"工作上的例子"},"39.6":{t:"新功能模块的灰度切流",p:`灰度切流是每个研发同学在职业生涯中都会遇到的情况，这样的例子不胜枚举，我甚至可以不重样地说上一整天。
比如，我们要发布一个支 ...`,l:"basic-quality/soft-power/gray/index.html#新功能模块的灰度切流",a:"新功能模块的灰度切流"},"39.7":{t:"蓝绿发布",p:`在代码发布的时候，并不是所有的改动都可以像前文描述的功能模块一样，有独立的开关控制流量进行灰度。
但是，这并不能阻挡工程师们 ...`,l:"basic-quality/soft-power/gray/index.html#蓝绿发布",a:"蓝绿发布"},"39.8":{t:"精益创业",p:`如果你了解精益创业，那么你一定也知道精益创业的思想背后其实也有灰度思维的影子。
精益创业的核心思想是用最小的成本验证你的点子 ...`,l:"basic-quality/soft-power/gray/index.html#精益创业",a:"精益创业"},"39.9":{t:"生活中的例子",p:"",l:"basic-quality/soft-power/gray/index.html#生活中的例子",a:"生活中的例子"},"39.10":{t:"首笔转账",p:`给别人转账时，为了避免账号输错，一般可以用一个很小的金额做一次测试转账，确定账号正确之后，再发起全额转账。
`,l:"basic-quality/soft-power/gray/index.html#首笔转账",a:"首笔转账"},"39.11":{t:"培养自己的爱好",p:`学习一门兴趣，没必要一开始就重金投入购入大量的装备，而是从入门所需的最基本原料开始。
比如，如果要学习摄影，经过前期的调研后 ...`,l:"basic-quality/soft-power/gray/index.html#培养自己的爱好",a:"培养自己的爱好"},"39.12":{t:"培养孩子的爱好",p:"家长也可以用灰度思维去帮助小孩培养兴趣。此时可以把前期报的各种兴趣班看作是看作一种灰度，家长可以想办法压低灰度的成本（比如通 ...",l:"basic-quality/soft-power/gray/index.html#培养孩子的爱好",a:"培养孩子的爱好"},"39.13":{t:"发展人际关系",p:`人际交往的过程本来就是一个相互试探的过程，试探就是灰度。
比如，臭名昭著的服从性测试就以灰度的方式展开。实际操作时，实施测试 ...`,l:"basic-quality/soft-power/gray/index.html#发展人际关系",a:"发展人际关系"},"39.14":{t:"生活处处皆可灰度",p:"最后，重要的事情值得反复提起——只要是从已知世界走向未知世界的问题，都可以使用灰度思维来处理——在做一件事情时，不妨让我们问 ...",l:"basic-quality/soft-power/gray/index.html#生活处处皆可灰度",a:"生活处处皆可灰度"},"40.0":{t:"# 前端招聘面试流程",p:`主要考察面试者编程能力（提问技术性问题）；还需要考察文化适应性和系统设计；
面试时间在30~40分钟；
`,l:"basic-quality/soft-power/interview-process/index.html",a:"前端招聘面试流程"},"40.1":{t:"1分钟：面试官大致描述下本次面试",p:"参考话术：“你好，我是今天的面试官，今天我们面试时长大概40分钟，分为以下4块内容：1、自我介绍；2、项目经历考核；3、技能 ...",l:"basic-quality/soft-power/interview-process/index.html#_1分钟-面试官大致描述下本次面试",a:"_1分钟-面试官大致描述下本次面试"},"40.2":{t:"3分钟：应聘者3分钟进行自我介绍",p:"",l:"basic-quality/soft-power/interview-process/index.html#_3分钟-应聘者3分钟进行自我介绍",a:"_3分钟-应聘者3分钟进行自我介绍"},"40.3":{t:"3~5分钟：让应聘者回答“之前都做过什么项目”、“对什么东西感兴趣”、“来第一秒有什么想法，有什么顾虑”；最近的公司职责和涉及的业务、主要技术栈、我擅长的技术、项目介绍（STAR：项目背景、任务、你的工作内容、项目亮点、结果你实现了什么学到了什么）、最近在做什么",p:`参考话术：“接下来我会问你一些业务相关问题，请在不违反当前公司原则的情况下回答，如果我的问题你不方便回答可以直接告诉我”
`,l:"basic-quality/soft-power/interview-process/index.html#_3-5分钟-让应聘者回答-之前都做过什么项目-、-对什么东西感兴趣-、-来第一秒有什么想法-有什么顾虑-最近的公司职责和涉及的业务、主要技术栈、我擅长的技术、项目介绍-star-项目背景、任务、你的工作内容、项目亮点、结果你实现了什么学到了什么-、最近在做什么",a:"_3-5分钟-让应聘者回答-之前都做过什么项目-、-对什么东西感兴趣-、-来第一秒有什么想法-有什么顾虑-最近的公司职责和涉及的业务、主要技术栈、我擅长的技术、项目介绍-star-项目背景、任务、你的工作内容、项目亮点、结果你实现了什么学到了什么-、最近在做什么"},"40.4":{t:"10~15分钟：让应聘者谈谈之前最让他感觉骄傲的一个项目",p:"面试官可以深入追问跟这个项目相关的问题。比如“这个项目最大的挑战是什么”、“几个人完成的，你在里面的角色和贡献”、“有没有出 ...",l:"basic-quality/soft-power/interview-process/index.html#_10-15分钟-让应聘者谈谈之前最让他感觉骄傲的一个项目",a:"_10-15分钟-让应聘者谈谈之前最让他感觉骄傲的一个项目"},"40.5":{t:"20分钟：具体的技术问题；（面试题）",p:`1、要有一道手写编程题：在无智能语法提示的编辑器上写（如：sublime）；
2、系统设计方面的问题：主要是让应聘者针对某个 ...`,l:"basic-quality/soft-power/interview-process/index.html#_20分钟-具体的技术问题-面试题",a:"_20分钟-具体的技术问题-面试题"},"40.6":{t:"5分钟：留给应聘者来提问",p:`我们希望应聘者较为关心的是公司文化、产品或技术，而非财务上的。
针对工作流程的参考话术：“我们采用日-周-月的工作流程，日为 ...`,l:"basic-quality/soft-power/interview-process/index.html#_5分钟-留给应聘者来提问",a:"_5分钟-留给应聘者来提问"},"41.0":{t:"# 迭代思维",p:`1.0版
师兄说，一开始的时候，我们整个支付系统只是电商系统中的小模块。就是这个代码量加起来不到一万行左右的支付模块，支持了 ...`,l:"basic-quality/soft-power/iteration/index.html",a:"迭代思维"},"41.1":{t:"迭代思维",p:`一点澄清
首先，这里我们必须纠正这个浮躁时代存在的“急于求成、一夜暴富”的错误观念。
“罗马并不是在一天建成的”。
和故事中 ...`,l:"basic-quality/soft-power/iteration/index.html#迭代思维",a:"迭代思维"},"41.2":{t:"PDCA循环",p:`什么是PDCA循环
PDCA循环首先由美国质量管理专家沃特·阿曼德·休哈特提出，而后由丰田的戴明推广，因此又称戴明环。
虽然 ...`,l:"basic-quality/soft-power/iteration/index.html#pdca循环",a:"pdca循环"},"41.3":{t:"例1",p:`在公司里，我们经常在生产环境做线上变更，比如切库、FO演练等等。在变更之前，我会做一个简单的PDCA文档，内容大概如下：

 ...`,l:"basic-quality/soft-power/iteration/index.html#例1",a:"例1"},"41.4":{t:"例2",p:`在写“工程师思维”的系列文章时，我也做了一个PDCA，大体如下：

P：写“工程师思维”系列文章，以故事的方式分享我在公司学 ...`,l:"basic-quality/soft-power/iteration/index.html#例2",a:"例2"},"41.5":{t:"例3",p:`那么，结合本文开头的故事，如果我们用PDCA循环的视角来看，建设一套庞大的支付系统需要怎么做呢？这里简单分析如下：

P：建 ...`,l:"basic-quality/soft-power/iteration/index.html#例3",a:"例3"},"41.6":{t:"1）P阶段是重中之重",p:`从PDCA循环可以看到，P阶段制定计划的合理与否，方向正确与否，直接关系到后面DCA几个阶段的正确。
我们常说“做正确的事情 ...`,l:"basic-quality/soft-power/iteration/index.html#_1-p阶段是重中之重",a:"_1-p阶段是重中之重"},"41.7":{t:"2）管理者和执行者",p:"如果你是管理者，那么在PDCA循环中，应该重点抓P阶段和C阶段。在计划阶段做好计划，让下属知道自己要干什么；在检查阶段做好检 ...",l:"basic-quality/soft-power/iteration/index.html#_2-管理者和执行者",a:"_2-管理者和执行者"},"41.8":{t:"OODA循环",p:`作为传统的迭代工具，PDCA适用于环境稳定、按部就班的事务处理场景。
然而，进入互联网时代之后，我们的工作和生活在快节奏中变 ...`,l:"basic-quality/soft-power/iteration/index.html#ooda循环",a:"ooda循环"},"41.9":{t:"应用中的组合拳",p:`本文是工程师思维的第四篇文章。截止到现在，我们已经介绍了四种工程师思维——灰度思维、复盘思维、根因思维、迭代思维。
值得一提 ...`,l:"basic-quality/soft-power/iteration/index.html#应用中的组合拳",a:"应用中的组合拳"},"41.10":{t:"本章小结",p:`胖子不是一口气吃出来的，罗马也不是一天建成的。工程师们解决问题，也不存在一蹴而就的说法。
过去所有的经验告诉我们，问题都是一 ...`,l:"basic-quality/soft-power/iteration/index.html#本章小结",a:"本章小结"},"42.0":{t:"# 管理",p:`坏消息：架构师通常被视为“管理员”的一员。
架构师的职责：（架构要平衡 业务需求和技术需求 某种意义上是开发人员与与销售人员 ...`,l:"basic-quality/soft-power/management/index.html",a:"管理"},"42.1":{t:"架构提供技术管理",p:`
管理和传达技术方向和架构方法
管理和沟通 系统的边界
帮助识别和管理项目的风险及问题
确保合适的项目治理和监管，包括标准、 ...`,l:"basic-quality/soft-power/management/index.html#架构提供技术管理",a:"架构提供技术管理"},"42.2":{t:"培养技术人才",p:`
指定架构师计划：拓展业务知识、介绍新兴技术和核心技术、架构小组讨论
建立技术论坛
鼓励技术团队成员参与当地的会议和用户组
 ...`,l:"basic-quality/soft-power/management/index.html#培养技术人才",a:"培养技术人才"},"43.0":{t:"# 结构化思维-MECE分析方法",p:"",l:"basic-quality/soft-power/mece/index.html",a:"结构化思维-mece分析方法"},"43.1":{t:"基本介绍",p:"MECE，是Mutually Exclusive Collectively Exhaustive的缩写，中文意思是“相互独立 ...",l:"basic-quality/soft-power/mece/index.html#基本介绍",a:"基本介绍"},"43.2":{t:"原则",p:`MECE即把一个工作项目分解为若干个更细的工作任务的方法。它主要有两条原则：

第一条是完整性，说的是分解工作的过程中不要漏 ...`,l:"basic-quality/soft-power/mece/index.html#原则",a:"原则"},"43.3":{t:"如果将上面人进行分类",p:`
男性，女性 【性别维度】
老年人，中年人，青年人，少年，幼儿【年龄维度】
中国人，外国人【国籍维度】
在世，离世【在世维度 ...`,l:"basic-quality/soft-power/mece/index.html#如果将上面人进行分类",a:"如果将上面人进行分类"},"43.4":{t:"步骤",p:"",l:"basic-quality/soft-power/mece/index.html#步骤",a:"步骤"},"43.5":{t:"第1步：确定范围",p:"也就是要明确当下讨论的问题到底是什么，以及我们想要达到的目的是什么。这个范围决定了问题的边界。这也让”完全穷尽“成为一种可能 ...",l:"basic-quality/soft-power/mece/index.html#第1步-确定范围",a:"第1步-确定范围"},"43.6":{t:"第2步：寻找符合MECE的切入点",p:"切入点是指你准备按什么来分，或者说大家共同的属性是什么。比如，是按颜色分、按大小分、按时间序列分还是按重要性分？在找切入点的 ...",l:"basic-quality/soft-power/mece/index.html#第2步-寻找符合mece的切入点",a:"第2步-寻找符合mece的切入点"},"43.7":{t:"第3步：考虑是否可以用MECE继续细分",p:"比如对客户的分类如果按男和女来分，的确是满足MECE原则，但仅仅这么分对于我们的营销策略有什么帮助吗？不管走到哪一步，请时刻 ...",l:"basic-quality/soft-power/mece/index.html#第3步-考虑是否可以用mece继续细分",a:"第3步-考虑是否可以用mece继续细分"},"43.8":{t:"类比划分人的问题上",p:"",l:"basic-quality/soft-power/mece/index.html#类比划分人的问题上",a:"类比划分人的问题上"},"43.9":{t:"case 1",p:`
确定我们当前思考的问题范围是全球
我们的切入点可以是：上面所说的是1，2，4，5

`,l:"basic-quality/soft-power/mece/index.html#case-1",a:"case-1"},"43.10":{t:"case 2",p:`
确定我们当前思考的问题范围是中国
我们的切入点可以是：上面所说的是1，2，4，5，6，7

`,l:"basic-quality/soft-power/mece/index.html#case-2",a:"case-2"},"43.11":{t:"case 3",p:`
假设我们当前讨论的范围是公司内部
我们的切入点可以是：1，2，4，5，6，7。还可以基于公司的一些特性进行其他的切入点。类 ...`,l:"basic-quality/soft-power/mece/index.html#case-3",a:"case-3"},"43.12":{t:"初步结论",p:`确定范围 + 关注的切入点 =》穷举问题的所有无重复无遗漏的集合。
`,l:"basic-quality/soft-power/mece/index.html#初步结论",a:"初步结论"},"43.13":{t:"切入点如何来？",p:"上面对于人的问题，这里很多都是我们可以想到的切入点，因为我们从再说一个人的时候，会有很多描述性语言，或者切入点。那么这个切入 ...",l:"basic-quality/soft-power/mece/index.html#切入点如何来",a:"切入点如何来"},"43.14":{t:"切入点：技术水平 + 业务水平 + 沟通交流 + 工作态度 + 心态 个人定位。这里的切入点是什么呢？",p:`
技术水平【本职工作能力】
业务水平【更多的是从业务串联的角度，因为这是一个检测产出的基础】
沟通交流【沟通协作，信息同步， ...`,l:"basic-quality/soft-power/mece/index.html#切入点-技术水平-业务水平-沟通交流-工作态度-心态-个人定位。这里的切入点是什么呢",a:"切入点-技术水平-业务水平-沟通交流-工作态度-心态-个人定位。这里的切入点是什么呢"},"44.0":{t:"# 防错思维",p:`
最好的防守，就是进攻。
最好的防错方式，就是一次做对。

`,l:"basic-quality/soft-power/mistake-proofing/index.html",a:"防错思维"},"44.1":{t:"如果不防错，后果很严重",p:`在之前的章节中，我介绍了“根因思维”，这是一种问题出现后进行事后补救的工程思维。
然而，经验告诉我们，问题出现事后补救的代价 ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#如果不防错-后果很严重",a:"如果不防错-后果很严重"},"44.2":{t:"一行代码让人疯狂两天",p:`事故（故事）开头，还得从当时我们维护的融资系统说起。
这个融资系统负责处理用户的融资请求。
它有一个重要的功能，就是查询融资 ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#一行代码让人疯狂两天",a:"一行代码让人疯狂两天"},"44.3":{t:"什么是防错思维",p:`人非圣贤，孰能无过？
既然犯错如此容易，那么我们必然就得考虑如何防止犯错。
在工程上，对于一个产品或者一种生产流程来说，在设 ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#什么是防错思维",a:"什么是防错思维"},"44.4":{t:"防呆不防傻,大力出奇迹",p:`防错设计还有一个称呼——防呆设计。
防呆设计的概念源于日本，是为了避免工人在生产线上犯错、减轻工人的认知负担而做的设计。
防 ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#防呆不防傻-大力出奇迹",a:"防呆不防傻-大力出奇迹"},"44.5":{t:"生活处处有防错",p:`为了让大家对防错思维和防错设计有一个更直观的认识，我们将探讨更多“防错设计”的列子。
1）有缺角的SIM卡
下图是一张SIM ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#生活处处有防错",a:"生活处处有防错"},"44.6":{t:"软件工程中的防错设计",p:`首先，确定防错的具体范围
软件工程师如何做防错设计？
这是一个很大的话题，为了让这个话题变成一个可执行的指导，首先我们应该明 ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#软件工程中的防错设计",a:"软件工程中的防错设计"},"44.7":{t:"1）事前：通过提前设计，直接消除错误",p:`比如，在产品设计阶段，我们能够预判出可能的犯错问题，此时就可以通过设计来避免问题的出现。
当然，预判的前提是设计者具有丰富的 ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#_1-事前-通过提前设计-直接消除错误",a:"_1-事前-通过提前设计-直接消除错误"},"44.8":{t:"2）事中：即使犯错也不会导致问题",p:`当然，事前拦截并不一定都能成功，所以我们希望即便在事前出了问题，在事中也不会危及系统的运行。
比如，在API服务中，我们会加 ...`,l:"basic-quality/soft-power/mistake-proofing/index.html#_2-事中-即使犯错也不会导致问题",a:"_2-事中-即使犯错也不会导致问题"},"44.9":{t:"3）事后：犯错能被快速发现和修复",p:"如果在事前和事中都没能有效防错，那么我们只能在事后进行防错布局了——因为在事后环节问题已经发生了，而我们又无法主动避免问题（ ...",l:"basic-quality/soft-power/mistake-proofing/index.html#_3-事后-犯错能被快速发现和修复",a:"_3-事后-犯错能被快速发现和修复"},"44.10":{t:"组合使用",p:"防错思维是一个非常底层的思维工具，只要涉及到设计、计划、沟通、执行等可能存在预期和实际不符的场景，防错思维就一定有用武之地。 ...",l:"basic-quality/soft-power/mistake-proofing/index.html#组合使用",a:"组合使用"},"45.0":{t:"# 合作关系",p:`项目能力——&gt;技术能力——&gt;想象力能力，前者都是后者的基础。
`,l:"basic-quality/soft-power/relations-cooperation/index.html",a:"合作关系"},"45.1":{t:"第一部分：项目能力",p:"",l:"basic-quality/soft-power/relations-cooperation/index.html#第一部分-项目能力",a:"第一部分-项目能力"},"45.2":{t:"第一章 ：合作关系",p:`合作关系是确立了相互信任的一种关系，这是即使面对对手也要一起追求某个目标的意愿。
作为架构师要与以下人建立合作关系
!图片
`,l:"basic-quality/soft-power/relations-cooperation/index.html#第一章-合作关系",a:"第一章-合作关系"},"45.3":{t:"合作关系的关键特征",p:`一致、信任、语境、协作和关系
`,l:"basic-quality/soft-power/relations-cooperation/index.html#合作关系的关键特征",a:"合作关系的关键特征"},"45.4":{t:"一致",p:`
确定要和那些人建立合作关系
找出在某些领域的思想领袖，多听取他们的意见，便于模型的搭建
确定可信的建议者
社区评审，运用社 ...`,l:"basic-quality/soft-power/relations-cooperation/index.html#一致",a:"一致"},"45.5":{t:"信任",p:`1.“报喜又报忧”是建立信任的一部分
2.对于信息得公开要谨慎，对用户的机密信息要保密
3.在 寻求指导或者批准时要披露以下 ...`,l:"basic-quality/soft-power/relations-cooperation/index.html#信任",a:"信任"},"45.6":{t:"语境",p:`1.在设计解决方案的时候，你往往不能当个孤胆英雄，要让“关键人物”参与方案的决策。方案既要满足当前的业务需求，也要
为公司下 ...`,l:"basic-quality/soft-power/relations-cooperation/index.html#语境",a:"语境"},"45.7":{t:"协作",p:`1.寻找导师：在寻找导师的时候要确定自己向从指导关系中学到什么
2.成为导师：计划自己想要实现的目标，要给被指导者停供真实的 ...`,l:"basic-quality/soft-power/relations-cooperation/index.html#协作",a:"协作"},"45.8":{t:"关系",p:`1.合作是通过关系确立和维护的。
2.躲避组织中的刻薄鬼
`,l:"basic-quality/soft-power/relations-cooperation/index.html#关系",a:"关系"},"46.0":{t:"# 根因思维",p:"",l:"basic-quality/soft-power/returning/index.html",a:"根因思维"},"46.1":{t:"初识root cause",p:`!工程师思维_10.jpg

根因，也就是一个事件的根本原因（root cause）。

判断一个工程师成熟与否的方法之一， ...`,l:"basic-quality/soft-power/returning/index.html#初识root-cause",a:"初识root-cause"},"46.2":{t:"什么是根因分析？",p:"一个问题发生了，在问题发生的那一刻，我们看到的都只是问题的外在表象，而引起问题发生的真正原因，往往被表象所掩盖，隐藏在一环套 ...",l:"basic-quality/soft-power/returning/index.html#什么是根因分析",a:"什么是根因分析"},"46.3":{t:"如何进行根因分析？",p:`实际上，应用根因思维最基本的方式，就是根因分析法。而典型的根因分析法当属丰田的5-why分析法了。
丰田5-why分析法
5 ...`,l:"basic-quality/soft-power/returning/index.html#如何进行根因分析",a:"如何进行根因分析"},"46.4":{t:"两类问题",p:`下面，我们将从日常工作和生活中遇到的两类不同类型的问题展开，继续对根因分析法的探讨。
在进入讨论之前，我想解释一下问题分类的 ...`,l:"basic-quality/soft-power/returning/index.html#两类问题",a:"两类问题"},"46.5":{t:"由果到因再由因到果",p:`通过5-why分析法，我们从结果推到了根因，我们甚至采取了行动，一劳永逸地解决了这个问题，真是皆大欢喜。
但请务必注意，这还 ...`,l:"basic-quality/soft-power/returning/index.html#由果到因再由因到果",a:"由果到因再由因到果"},"46.6":{t:"时间的洗礼",p:`
根因思维说起来似乎简单，但是实际操作起来，其实非常吃经验。

以笔者曾从事过的支付业务为例，在这个领域里，你不摸爬滚打个三 ...`,l:"basic-quality/soft-power/returning/index.html#时间的洗礼",a:"时间的洗礼"},"46.7":{t:"本章小结",p:`根因思维和根因分析法，是我们在日常中处理问题时必然会使用的思维工具。
根因思维认为引起问题的原因是由一个前后咬合的因果链构成 ...`,l:"basic-quality/soft-power/returning/index.html#本章小结",a:"本章小结"},"47.0":{t:"# 计算机网络分层结构",p:"",l:"basic-quality/structure-computer-networks/index.html",a:"计算机网络分层结构"},"47.1":{t:"一、几种分层结构",p:`!图片
`,l:"basic-quality/structure-computer-networks/index.html#一、几种分层结构",a:"一、几种分层结构"},"47.2":{t:"二、OSI参考模型",p:`

目的：支持异构网络系统的互联互通（制定一个标准）


7层结构
!图片


巧记：物链网输会示用（一个叫淑慧的人试用物联 ...`,l:"basic-quality/structure-computer-networks/index.html#二、osi参考模型",a:"二、osi参考模型"},"47.3":{t:"1. 应用层",p:`
用户与网络的界面
所有能和用户交互产生网络流量的程序
典型应用层服务：文件传输（FTP）、电子邮件（SMTP）、万维网（H ...`,l:"basic-quality/structure-computer-networks/index.html#_1-应用层",a:"_1-应用层"},"47.4":{t:"2. 表示层",p:`
处理两种通信系统中交换信息的表示方式
比如说，数据格式变换（编码格式之间的转换，使得不同主机之间即使在不同的编码格式上，也 ...`,l:"basic-quality/structure-computer-networks/index.html#_2-表示层",a:"_2-表示层"},"47.5":{t:"3. 会话层",p:`
向表示层实体/用户进程提供建立连接并在连接上有序地传输数据
建立连接（建立一个session）
建立同步（SYN）
功能一 ...`,l:"basic-quality/structure-computer-networks/index.html#_3-会话层",a:"_3-会话层"},"47.6":{t:"4. 传输层",p:`
负责主机中两个进程的通信，即端对端的通信。传输单位是报文段或用户数据报。（因为是端口号之间的通信，因此是端对端）
下面的几 ...`,l:"basic-quality/structure-computer-networks/index.html#_4-传输层",a:"_4-传输层"},"47.7":{t:"5. 网络层",p:`
主要任务：把分组从源端传送到目的端，为分组交换网上的不同主机提供通信服务。（数据过大时进行切割）（实现网际互联）
传输单位 ...`,l:"basic-quality/structure-computer-networks/index.html#_5-网络层",a:"_5-网络层"},"47.8":{t:"6. 数据链路层",p:`

把网络层传下来的数据包组装成帧。


传输单位是帧。


功能一：成帧。（定义帧的开始和结束）


功能二：差错控制。帧 ...`,l:"basic-quality/structure-computer-networks/index.html#_6-数据链路层",a:"_6-数据链路层"},"47.9":{t:"7. 物理层",p:`
将比特流转换为电信号进行传输。
物理传输单位是比特。
透明传输：不管给什么比特流，都转发。
功能一：定义接口特性。（物理上 ...`,l:"basic-quality/structure-computer-networks/index.html#_7-物理层",a:"_7-物理层"},"47.10":{t:"三、TCP/IP模型",p:`!图片
!图片
`,l:"basic-quality/structure-computer-networks/index.html#三、tcp-ip模型",a:"三、tcp-ip模型"},"47.11":{t:"四、5层参考模型",p:`!图片
!图片
`,l:"basic-quality/structure-computer-networks/index.html#四、5层参考模型",a:"四、5层参考模型"},"48.0":{t:"# TCP",p:"TCP 基本是和 UDP 反着来，建立连接断开连接都需要先需要进行握手。在传输数据的过程中，通过各种算法保证数据的可靠性，当 ...",l:"basic-quality/tcp/index.html",a:"tcp"},"48.1":{t:"头部",p:`从这个图上我们就可以发现 TCP 头部比 UDP 头部复杂的多。
!图片
对于 TCP 头部来说，以下几个字段是很重要的

 ...`,l:"basic-quality/tcp/index.html#头部",a:"头部"},"48.2":{t:"状态机",p:`TCP 的状态机是很复杂的，并且与建立断开连接时的握手息息相关，接下来就来详细描述下两种握手。
!图片
在这之前需要了解一个 ...`,l:"basic-quality/tcp/index.html#状态机",a:"状态机"},"48.3":{t:"建立连接三次握手",p:"首先假设主动发起请求的一端称为客户端，被动连接的一端称为服务端。不管是客户端还是服务端，TCP 连接建立完后都能发送和接收数 ...",l:"basic-quality/tcp/index.html#建立连接三次握手",a:"建立连接三次握手"},"48.4":{t:"第一次握手",p:`客户端向服务端发送连接请求报文段。该报文段中包含自身的数据通讯初始序号。请求发送后，客户端便进入 SYN-SENT 状态。
`,l:"basic-quality/tcp/index.html#第一次握手",a:"第一次握手"},"48.5":{t:"第二次握手",p:"服务端收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通讯初始序号，发送完成后便进入 SYN ...",l:"basic-quality/tcp/index.html#第二次握手",a:"第二次握手"},"48.6":{t:"第三次握手",p:"当客户端收到连接同意的应答后，还要向服务端发送一个确认报文。客户端发完这个报文段后便进入 ESTABLISHED 状态，服务 ...",l:"basic-quality/tcp/index.html#第三次握手",a:"第三次握手"},"48.7":{t:"断开链接四次握手",p:`!图片
TCP 是全双工的，在断开连接时两端都需要发送 FIN 和 ACK。
`,l:"basic-quality/tcp/index.html#断开链接四次握手",a:"断开链接四次握手"},"48.8":{t:"第一次握手",p:`若客户端 A 认为数据发送完成，则它需要向服务端 B 发送连接释放请求。
`,l:"basic-quality/tcp/index.html#第一次握手",a:"第一次握手"},"48.9":{t:"第二次握手",p:"B 收到连接释放请求后，会告诉应用层要释放 TCP 链接。然后会发送 ACK 包，并进入 CLOSE_WAIT 状态，此时表 ...",l:"basic-quality/tcp/index.html#第二次握手",a:"第二次握手"},"48.10":{t:"第三次握手",p:`B 如果此时还有没发完的数据会继续发送，完毕后会向 A 发送连接释放请求，然后 B 便进入 LAST-ACK 状态。
PS： ...`,l:"basic-quality/tcp/index.html#第三次握手",a:"第三次握手"},"48.11":{t:"第四次握手",p:"A 收到释放请求后，向 B 发送确认应答，此时 A 进入 TIME-WAIT 状态。该状态会持续 2MSL（最大段生存期，指 ...",l:"basic-quality/tcp/index.html#第四次握手",a:"第四次握手"},"48.12":{t:"ARQ 协议",p:"ARQ 协议也就是超时重传机制。通过确认和超时机制保证了数据的正确送达，ARQ 协议包含停止等待 ARQ 和连续 ARQ 两 ...",l:"basic-quality/tcp/index.html#arq-协议",a:"arq-协议"},"48.13":{t:"停止等待 ARQ",p:"",l:"basic-quality/tcp/index.html#停止等待-arq",a:"停止等待-arq"},"48.14":{t:"正常传输过程",p:"只要 A 向 B 发送一段报文，都要停止发送并启动一个定时器，等待对端回应，在定时器时间内接收到对端应答就取消定时器并发送下 ...",l:"basic-quality/tcp/index.html#正常传输过程",a:"正常传输过程"},"48.15":{t:"报文丢失或出错",p:"在报文传输的过程中可能会出现丢包。这时候超过定时器设定的时间就会再次发送丢失的数据直到对端响应，所以需要每次都备份发送的数据 ...",l:"basic-quality/tcp/index.html#报文丢失或出错",a:"报文丢失或出错"},"48.16":{t:"ACK 超时或丢失",p:"对端传输的应答也可能出现丢失或超时的情况。那么超过定时器时间 A 端照样会重传报文。这时候 B 端收到相同序号的报文会丢弃该 ...",l:"basic-quality/tcp/index.html#ack-超时或丢失",a:"ack-超时或丢失"},"48.17":{t:"连续 ARQ",p:"在连续 ARQ 中，发送端拥有一个发送窗口，可以在没有收到应答的情况下持续发送窗口内的数据，这样相比停止等待 ARQ 协议来 ...",l:"basic-quality/tcp/index.html#连续-arq",a:"连续-arq"},"48.18":{t:"累计确认",p:"连续 ARQ 中，接收端会持续不断收到报文。如果和停止等待 ARQ 中接收一个报文就发送一个应答一样，就太浪费资源了。通过累 ...",l:"basic-quality/tcp/index.html#累计确认",a:"累计确认"},"48.19":{t:"滑动窗口",p:`在上面小节中讲到了发送窗口。在 TCP 中，两端其实都维护着窗口：分别为发送端窗口和接收端窗口。
发送端窗口包含已发送但未收 ...`,l:"basic-quality/tcp/index.html#滑动窗口",a:"滑动窗口"},"48.20":{t:"Zero 窗口",p:"在发送报文的过程中，可能会遇到对端出现零窗口的情况。在该情况下，发送端会停止发送数据，并启动 persistent time ...",l:"basic-quality/tcp/index.html#zero-窗口",a:"zero-窗口"},"48.21":{t:"拥塞处理",p:"拥塞处理和流量控制不同，后者是作用于接收方，保证接收方来得及接受数据。而前者是作用于网络，防止过多的数据拥塞网络，避免出现网 ...",l:"basic-quality/tcp/index.html#拥塞处理",a:"拥塞处理"},"48.22":{t:"慢开始算法",p:"慢开始算法，顾名思义，就是在传输开始时将发送窗口慢慢指数级扩大，从而避免一开始就传输大量数据导致网络拥塞。想必大家都下载过资 ...",l:"basic-quality/tcp/index.html#慢开始算法",a:"慢开始算法"},"48.23":{t:"拥塞避免算法",p:`拥塞避免算法相比简单点，每过一个 RTT 窗口大小只加一，这样能够避免指数级增长导致网络拥塞，慢慢将大小调整到最佳值。
在传 ...`,l:"basic-quality/tcp/index.html#拥塞避免算法",a:"拥塞避免算法"},"48.24":{t:"快速重传",p:"快速重传一般和快恢复一起出现。一旦接收端收到的报文出现失序的情况，接收端只会回复最后一个顺序正确的报文序号。如果发送端收到三 ...",l:"basic-quality/tcp/index.html#快速重传",a:"快速重传"},"48.25":{t:"TCP Taho 实现如下**",p:`
将阈值设为当前拥塞窗口的一半
将拥塞窗口设为 1 MSS
重新开始慢开始算法

`,l:"basic-quality/tcp/index.html#tcp-taho-实现如下",a:"tcp-taho-实现如下"},"48.26":{t:"TCP Reno 实现如下**",p:`
拥塞窗口减半
将阈值设为当前拥塞窗口
进入快恢复阶段（重发对端需要的包，一旦收到一个新的 ACK 答复就退出该阶段），这种 ...`,l:"basic-quality/tcp/index.html#tcp-reno-实现如下",a:"tcp-reno-实现如下"},"48.27":{t:"TCP New Ren 改进后的快恢复",p:"TCP New Reno 算法改进了之前 TCP Reno 算法的缺陷。在之前，快恢复中只要收到一个新的 ACK 包，就会退 ...",l:"basic-quality/tcp/index.html#tcp-new-ren-改进后的快恢复",a:"tcp-new-ren-改进后的快恢复"},"48.28":{t:"总结",p:`
建立连接需要三次握手，断开连接需要四次握手
滑动窗口解决了数据的丢包、顺序不对和流量控制问题
拥塞窗口实现了对流量的控制， ...`,l:"basic-quality/tcp/index.html#总结",a:"总结"},"49.0":{t:"# TCP三次握手 TCP 四次挥手",p:"",l:"basic-quality/tcp-three-tcp-four/index.html",a:"tcp三次握手-tcp-四次挥手"},"49.1":{t:"TCP三次握手",p:`
第一次握手：建立连接时，客户端发送syn包（syn=j）到服务器，并进入SYN_SENT状态，等待服务器确认；SYN：同步 ...`,l:"basic-quality/tcp-three-tcp-four/index.html#tcp三次握手",a:"tcp三次握手"},"49.2":{t:"TCP 四次挥手",p:`
客户端进程发出连接释放报文，并且停止发送数据。释放数据报文首部，FIN=1，其序列号为seq=u（等于前面已经传送过来的数 ...`,l:"basic-quality/tcp-three-tcp-four/index.html#tcp-四次挥手",a:"tcp-四次挥手"},"50.0":{t:"# TCP和UDP的区别",p:`
TCP是面向链接的，而UDP是面向无连接的。
TCP仅支持单播传输，UDP 提供了单播，多播，广播的功能。
TCP的三次握 ...`,l:"basic-quality/tcp-udp/index.html",a:"tcp和udp的区别"},"50.1":{t:"一、TCP/IP网络模型",p:"计算机与网络设备要相互通信，双方就必须基于相同的方法。比如，如何探测到通信目标、由哪一边先发起通信、使用哪种语言进行通信、怎 ...",l:"basic-quality/tcp-udp/index.html#一、tcp-ip网络模型",a:"一、tcp-ip网络模型"},"50.2":{t:"二、UDP",p:"UDP协议全称是用户数据报协议，在网络中它与TCP协议一样用于处理数据包，是一种无连接的协议。在OSI模型中，在第四层——传 ...",l:"basic-quality/tcp-udp/index.html#二、udp",a:"二、udp"},"50.3":{t:"它有以下几个特点",p:"",l:"basic-quality/tcp-udp/index.html#它有以下几个特点",a:"它有以下几个特点"},"50.4":{t:"1. 面向无连接",p:"首先 UDP 是不需要和 TCP一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。并且也只是数据报文的搬运工 ...",l:"basic-quality/tcp-udp/index.html#_1-面向无连接",a:"_1-面向无连接"},"50.5":{t:"2. 有单播，多播，广播的功能",p:`UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。
`,l:"basic-quality/tcp-udp/index.html#_2-有单播-多播-广播的功能",a:"_2-有单播-多播-广播的功能"},"50.6":{t:"3. UDP是面向报文的",p:"发送方的UDP对应用程序交下来的报文，在添加首部后就向下交付IP层。UDP对应用层交下来的报文，既不合并，也不拆分，而是保留 ...",l:"basic-quality/tcp-udp/index.html#_3-udp是面向报文的",a:"_3-udp是面向报文的"},"50.7":{t:"4. 不可靠性",p:`首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。
并且收到什么数据就传递什么数据，并且也不 ...`,l:"basic-quality/tcp-udp/index.html#_4-不可靠性",a:"_4-不可靠性"},"50.8":{t:"5. 头部开销小，传输数据报文时是很高效的",p:`!图片
UDP 头部包含了以下几个数据：

两个十六位的端口号，分别为源端口（可选字段）和目标端口
整个数据报文的长度
整个 ...`,l:"basic-quality/tcp-udp/index.html#_5-头部开销小-传输数据报文时是很高效的",a:"_5-头部开销小-传输数据报文时是很高效的"},"50.9":{t:"三、TCP",p:"当一台计算机想要与另一台计算机通讯时，两台计算机之间的通信需要畅通且可靠，这样才能保证正确收发数据。例如，当你想查看网页或查 ...",l:"basic-quality/tcp-udp/index.html#三、tcp",a:"三、tcp"},"50.10":{t:"1. TCP连接过程",p:`!图片
如下图所示，可以看到建立一个TCP连接的过程为（三次握手的过程）:
`,l:"basic-quality/tcp-udp/index.html#_1-tcp连接过程",a:"_1-tcp连接过程"},"50.11":{t:"第一次握手",p:`客户端向服务端发送连接请求报文段。该报文段中包含自身的数据通讯初始序号。请求发送后，客户端便进入 SYN-SENT 状态。
`,l:"basic-quality/tcp-udp/index.html#第一次握手",a:"第一次握手"},"50.12":{t:"第二次握手",p:"服务端收到连接请求报文段后，如果同意连接，则会发送一个应答，该应答中也会包含自身的数据通讯初始序号，发送完成后便进入 SYN ...",l:"basic-quality/tcp-udp/index.html#第二次握手",a:"第二次握手"},"50.13":{t:"第三次握手",p:`!图片
当客户端收到连接同意的应答后，还要向服务端发送一个确认报文。客户端发完这个报文段后便进入 ESTABLISHED 状 ...`,l:"basic-quality/tcp-udp/index.html#第三次握手",a:"第三次握手"},"50.14":{t:"2. TCP断开链接",p:`!图片
TCP 是全双工的，在断开连接时两端都需要发送 FIN 和 ACK。
`,l:"basic-quality/tcp-udp/index.html#_2-tcp断开链接",a:"_2-tcp断开链接"},"50.15":{t:"第一次握手",p:`若客户端 A 认为数据发送完成，则它需要向服务端 B 发送连接释放请求。
`,l:"basic-quality/tcp-udp/index.html#第一次握手",a:"第一次握手"},"50.16":{t:"第二次握手",p:"B 收到连接释放请求后，会告诉应用层要释放 TCP 链接。然后会发送 ACK 包，并进入 CLOSE_WAIT 状态，此时表 ...",l:"basic-quality/tcp-udp/index.html#第二次握手",a:"第二次握手"},"50.17":{t:"第三次握手",p:`B 如果此时还有没发完的数据会继续发送，完毕后会向 A 发送连接释放请求，然后 B 便进入 LAST-ACK 状态。
`,l:"basic-quality/tcp-udp/index.html#第三次握手",a:"第三次握手"},"50.18":{t:"第四次握手",p:`

A 收到释放请求后，向 B 发送确认应答，此时 A 进入 TIME-WAIT 状态。


该状态会持续 2MSL（最大段 ...`,l:"basic-quality/tcp-udp/index.html#第四次握手",a:"第四次握手"},"50.19":{t:"3. TCP协议的特点",p:"",l:"basic-quality/tcp-udp/index.html#_3-tcp协议的特点",a:"_3-tcp协议的特点"},"50.20":{t:"面向连接",p:"面向连接，是指发送数据之前必须在两端建立连接。建立连接的方法是“三次握手”，这样能建立可靠的连接。建立连接，是为数据的可靠传 ...",l:"basic-quality/tcp-udp/index.html#面向连接",a:"面向连接"},"50.21":{t:"仅支持单播传输",p:`每条TCP传输连接只能有两个端点，只能进行点对点的数据传输，不支持多播和广播传输方式。
`,l:"basic-quality/tcp-udp/index.html#仅支持单播传输",a:"仅支持单播传输"},"50.22":{t:"面向字节流",p:`TCP不像UDP一样那样一个个报文独立地传输，而是在不保留报文边界的情况下以字节流方式进行传输。
`,l:"basic-quality/tcp-udp/index.html#面向字节流",a:"面向字节流"},"50.23":{t:"可靠传输",p:"对于可靠传输，判断丢包，误码靠的是TCP的段编号以及确认号。TCP为了保证报文传输的可靠，就给每个包一个序号，同时序号也保证 ...",l:"basic-quality/tcp-udp/index.html#可靠传输",a:"可靠传输"},"50.24":{t:"提供拥塞控制",p:`当网络出现拥塞的时候，TCP能够减小向网络注入数据的速率和数量，缓解拥塞
`,l:"basic-quality/tcp-udp/index.html#提供拥塞控制",a:"提供拥塞控制"},"50.25":{t:"TCP提供全双工通信",p:"TCP允许通信双方的应用程序在任何时候都能发送数据，因为TCP连接的两端都设有缓存，用来临时存放双向通信的数据。当然，TCP ...",l:"basic-quality/tcp-udp/index.html#tcp提供全双工通信",a:"tcp提供全双工通信"},"50.26":{t:"四、TCP和UDP的比较",p:"",l:"basic-quality/tcp-udp/index.html#四、tcp和udp的比较",a:"四、tcp和udp的比较"},"50.27":{t:"1. 对比",p:"",l:"basic-quality/tcp-udp/index.html#_1-对比",a:"_1-对比"},"50.28":{t:"UDP TCP",p:`
是否连接 无连接 面向连接
是否可靠 不可靠传输，不使用流量控制和拥塞控制 可靠传输，使用流量控制和拥塞控制
连接对象个数 ...`,l:"basic-quality/tcp-udp/index.html#udp-tcp",a:"udp-tcp"},"50.29":{t:"五、TCP 和 UDP 应用场景",p:`

UDP的应用场景：即时通信。面向数据报方式；网络数据大多为短消息；拥有大量客户端；对数据安全性无特殊要求；网络负担重但对 ...`,l:"basic-quality/tcp-udp/index.html#五、tcp-和-udp-应用场景",a:"五、tcp-和-udp-应用场景"},"50.30":{t:"六、运行在TCP 或UDP的应用层协议分析",p:"",l:"basic-quality/tcp-udp/index.html#六、运行在tcp-或udp的应用层协议分析",a:"六、运行在tcp-或udp的应用层协议分析"},"50.31":{t:"运行在TCP协议上的协议",p:`
HTTP（Hypertext Transfer Protocol，超文本传输协议），主要用于普通浏览。
HTTPS（HTT ...`,l:"basic-quality/tcp-udp/index.html#运行在tcp协议上的协议",a:"运行在tcp协议上的协议"},"50.32":{t:"运行在UDP协议上的协议",p:`
BOOTP（Boot Protocol，启动协议），应用于无盘设备。
NTP（Network Time Protocol， ...`,l:"basic-quality/tcp-udp/index.html#运行在udp协议上的协议",a:"运行在udp协议上的协议"},"50.33":{t:"运行在TCP和UDP协议上",p:`
DNS（Domain Name Service，域名服务），用于完成地址查找，邮件转发等工作。
ECHO（Echo Pro ...`,l:"basic-quality/tcp-udp/index.html#运行在tcp和udp协议上",a:"运行在tcp和udp协议上"},"50.34":{t:"总结",p:`
TCP向上层提供面向连接的可靠服务 ，UDP向上层提供无连接不可靠服务。
虽然 UDP 并没有 TCP 传输来的准确，但是 ...`,l:"basic-quality/tcp-udp/index.html#总结",a:"总结"},"51.0":{t:"# UDP",p:"首先 UDP 协议是面向无连接的，也就是说不需要在正式传递数据之前先连接起双方。然后 UDP 协议只是数据报文的搬运工，不保 ...",l:"basic-quality/udp/index.html",a:"udp"},"51.1":{t:"面向无连接",p:`首先 UDP 是不需要和 TCP 一样在发送数据前进行三次握手建立连接的，想发数据就可以开始发送了。
并且也只是数据报文的搬 ...`,l:"basic-quality/udp/index.html#面向无连接",a:"面向无连接"},"51.2":{t:"不可靠性",p:`首先不可靠性体现在无连接上，通信都不需要建立连接，想发就发，这样的情况肯定不可靠。
并且收到什么数据就传递什么数据，并且也不 ...`,l:"basic-quality/udp/index.html#不可靠性",a:"不可靠性"},"51.3":{t:"高效",p:"虽然 UDP 协议不是那么的可靠，但是正是因为它不是那么的可靠，所以也就没有 TCP 那么复杂了，需要保证数据不丢失且有序到 ...",l:"basic-quality/udp/index.html#高效",a:"高效"},"51.4":{t:"传输方式",p:`UDP 不止支持一对一的传输方式，同样支持一对多，多对多，多对一的方式，也就是说 UDP 提供了单播，多播，广播的功能。
`,l:"basic-quality/udp/index.html#传输方式",a:"传输方式"},"51.5":{t:"适合使用的场景",p:"UDP 虽然对比 TCP 有很多缺点，但是正是因为这些缺点造就了它高效的特性，在很多实时性要求高的地方都可以看到 UDP 的 ...",l:"basic-quality/udp/index.html#适合使用的场景",a:"适合使用的场景"},"51.6":{t:"UDP vs TCP",p:`
UDP 相比 TCP 简单的多，不需要建立连接，不需要验证数据报文，不需要流量控制，只会把想发的数据报文一股脑的丢给对端
 ...`,l:"basic-quality/udp/index.html#udp-vs-tcp",a:"udp-vs-tcp"},"52.0":{t:"# 数组",p:"",l:"data-structures-algorithms/array/index.html",a:"数组"},"52.1":{t:"Map 的妙用——两数求和问题",p:`
真题描述： 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他 ...`,l:"data-structures-algorithms/array/index.html#map-的妙用——两数求和问题",a:"map-的妙用——两数求和问题"},"52.2":{t:"示例",p:`
给定 nums = [2, 7, 11, 15], target = 9
因为 nums[0] + nums[1] = 2 ...`,l:"data-structures-algorithms/array/index.html#示例",a:"示例"},"52.3":{t:"思路分析",p:"",l:"data-structures-algorithms/array/index.html#思路分析",a:"思路分析"},"52.4":{t:"一个“淳朴”的解法",p:"这道题相信很多同学看一眼就很快能得出一个最基本的思路：两层循环来遍历同一个数组；第一层循环遍历的值记为 a，第二层循环时遍历 ...",l:"data-structures-algorithms/array/index.html#一个-淳朴-的解法",a:"一个-淳朴-的解法"},"52.5":{t:"对“淳朴”解法的反思",p:"大家以后做算法题的时候，要有这样的一种本能：当发现自己的代码里有两层循环时，先反思一下，能不能用空间换时间，把它优化成一层循 ...",l:"data-structures-algorithms/array/index.html#对-淳朴-解法的反思",a:"对-淳朴-解法的反思"},"52.6":{t:"编码实现",p:`/**
 * @param {number[]} nums
 * @param {number} target
 * @re ...`,l:"data-structures-algorithms/array/index.html#编码实现",a:"编码实现"},"52.7":{t:"合并两个有序数组",p:`
真题描述：给你两个有序整数数组 nums1 和 nums2，请你将 nums2 合并到 nums1 中，使 nums1 成 ...`,l:"data-structures-algorithms/array/index.html#合并两个有序数组",a:"合并两个有序数组"},"52.8":{t:"示例",p:`
输入:
nums1 = [1,2,3,0,0,0], m = 3 nums2 = [2,5,6], n = 3
输出:

 ...`,l:"data-structures-algorithms/array/index.html#示例",a:"示例"},"52.9":{t:"思路分析",p:"",l:"data-structures-algorithms/array/index.html#思路分析",a:"思路分析"},"52.10":{t:"标准解法",p:`这道题没有太多的弯弯绕绕，标准解法就是双指针法。首先我们定义两个指针，各指向两个数组生效部分的尾部：
!图片
每次只对指针所 ...`,l:"data-structures-algorithms/array/index.html#标准解法",a:"标准解法"},"52.11":{t:"这里有一点需要解释一下",p:"为什么是从后往前填补？因为是要把所有的值合并到 nums1 里，所以说我们这里可以把 nums1 看做是一个“容器”。但是这 ...",l:"data-structures-algorithms/array/index.html#这里有一点需要解释一下",a:"这里有一点需要解释一下"},"52.12":{t:"编码实现",p:`/**
 * @param {number[]} nums1
 * @param {number} m
 * @param  ...`,l:"data-structures-algorithms/array/index.html#编码实现",a:"编码实现"},"52.13":{t:"三数求和问题",p:`
双指针法能处理的问题多到你想不到。不信来瞅瞅两数求和它儿子——三数求和问题！
俗话说，青出于蓝而胜于蓝，三数求和虽然和两数 ...`,l:"data-structures-algorithms/array/index.html#三数求和问题",a:"三数求和问题"},"52.14":{t:"示例",p:`
给定数组 nums = [-1, 0, 1, 2, -1, -4]，
满足要求的三元组集合为： [ [-1, 0, 1], ...`,l:"data-structures-algorithms/array/index.html#示例",a:"示例"},"52.15":{t:"思路分析",p:`
三数之和延续两数之和的思路，我们可以把求和问题变成求差问题——固定其中一个数，在剩下的数中寻找是否有两个数和这个固定数相加 ...`,l:"data-structures-algorithms/array/index.html#思路分析",a:"思路分析"},"52.16":{t:"编码实现",p:`/**
 * @param {number[]} nums
 * @return {number[][]}
 */
cons ...`,l:"data-structures-algorithms/array/index.html#编码实现",a:"编码实现"},"52.17":{t:"在区间范围内统计奇数数目",p:`不能被0整除的数为奇数,那么求两个数之间的奇数个数,以0为开始,然后相减即可
//规律
var countOdds = fu ...`,l:"data-structures-algorithms/array/index.html#在区间范围内统计奇数数目",a:"在区间范围内统计奇数数目"},"52.18":{t:"去掉最低工资和最高工资后的工资平均值",p:`var average = function(salary) {
  // 先算 最大最小的和
   const sumOt ...`,l:"data-structures-algorithms/array/index.html#去掉最低工资和最高工资后的工资平均值",a:"去掉最低工资和最高工资后的工资平均值"},"53.0":{t:"# 二叉树",p:"",l:"data-structures-algorithms/binary-tree/index.html",a:"二叉树"},"53.1":{t:"前序遍历",p:"",l:"data-structures-algorithms/binary-tree/index.html#前序遍历",a:"前序遍历"},"53.2":{t:"先序遍历 递归",p:`var preorderTraversal = function (root) {
  const treeNodeList ...`,l:"data-structures-algorithms/binary-tree/index.html#先序遍历-递归",a:"先序遍历-递归"},"53.3":{t:"先序遍历 非递归",p:`var preorderTraversal = function (root, res = []) {
  const st ...`,l:"data-structures-algorithms/binary-tree/index.html#先序遍历-非递归",a:"先序遍历-非递归"},"53.4":{t:"中序遍历",p:"",l:"data-structures-algorithms/binary-tree/index.html#中序遍历",a:"中序遍历"},"53.5":{t:"中序遍历 递归",p:`var inorderTraversal = function (root) {
  const treeNodeList  ...`,l:"data-structures-algorithms/binary-tree/index.html#中序遍历-递归",a:"中序遍历-递归"},"53.6":{t:"中序遍历 非递归",p:`var inorderTraversal = function (root, res = []) {
  const sta ...`,l:"data-structures-algorithms/binary-tree/index.html#中序遍历-非递归",a:"中序遍历-非递归"},"53.7":{t:"后序遍历",p:"",l:"data-structures-algorithms/binary-tree/index.html#后序遍历",a:"后序遍历"},"53.8":{t:"后序遍历 递归",p:`var postorderTraversal = function (root) {
  const treeNodeLis ...`,l:"data-structures-algorithms/binary-tree/index.html#后序遍历-递归",a:"后序遍历-递归"},"53.9":{t:"后序遍历 非递归",p:`var postorderTraversal = function (root, res = []) {
  const s ...`,l:"data-structures-algorithms/binary-tree/index.html#后序遍历-非递归",a:"后序遍历-非递归"},"53.10":{t:"二叉树的层序遍历",p:`// 需要返回 [[1], [2,3], [4,5]]

// 时间复杂度 O(n) n为树的节点数
// 空间复杂度 O( ...`,l:"data-structures-algorithms/binary-tree/index.html#二叉树的层序遍历",a:"二叉树的层序遍历"},"53.11":{t:"二叉树的最小深度",p:`// 给一个二叉树，需要你找出其最小的深度， 从根节点到叶子节点的距离
// 时间复杂度O(n) n是树的节点数量
// 空 ...`,l:"data-structures-algorithms/binary-tree/index.html#二叉树的最小深度",a:"二叉树的最小深度"},"53.12":{t:"二叉树的最大深度",p:`// 给一个二叉树，需要你找出其最大的深度，从根节点到叶子节点的距离

// 时间复杂度 O(n) n为树的节点数
// 空 ...`,l:"data-structures-algorithms/binary-tree/index.html#二叉树的最大深度",a:"二叉树的最大深度"},"54.0":{t:"# 入门介绍",p:"",l:"data-structures-algorithms/introduction/index.html",a:"入门介绍"},"54.1":{t:"常见的数据结构",p:`数组、字典、链表、栈、队列、散列表、二叉树、堆、跳表、图、Trie树
`,l:"data-structures-algorithms/introduction/index.html#常见的数据结构",a:"常见的数据结构"},"54.2":{t:"常见的算法",p:`递归、排序、二分查找、搜索、哈希算法、贪心算法、分治算法、回溯算法、动态规划、字符串匹配算法等
`,l:"data-structures-algorithms/introduction/index.html#常见的算法",a:"常见的算法"},"55.0":{t:"# 排序",p:"",l:"data-structures-algorithms/sort/index.html",a:"排序"},"55.1":{t:"归并排序",p:`// 时间复杂度 O(nlogn) 分需要劈开数组，所以是logn， 合则是n
// 空间复杂度 O(n)
Array.pr ...`,l:"data-structures-algorithms/sort/index.html#归并排序",a:"归并排序"},"55.2":{t:"快速排序",p:`// 时间复杂度 O(nlogN)
// 空间复杂度 O(1)
Array.prototype.quickSort = fu ...`,l:"data-structures-algorithms/sort/index.html#快速排序",a:"快速排序"},"55.3":{t:"插入排序",p:`// 时间复杂度 O(n ^ 2)
Array.prototype.insertionSort = function ()  ...`,l:"data-structures-algorithms/sort/index.html#插入排序",a:"插入排序"},"55.4":{t:"选择排序",p:`// 时间复杂度：O(n ^ 2) n为数组长度
// 空间复杂度：O(1)
Array.prototype.selecti ...`,l:"data-structures-algorithms/sort/index.html#选择排序",a:"选择排序"},"55.5":{t:"冒泡排序",p:`// 时间复杂度 O(n ^ 2) n为数组长度
// 空间复杂度 O(1)
Array.prototype.bubbleS ...`,l:"data-structures-algorithms/sort/index.html#冒泡排序",a:"冒泡排序"},"56.0":{t:"# 空间复杂度",p:"",l:"data-structures-algorithms/space-complexity/index.html",a:"空间复杂度"},"56.1":{t:"含义",p:`和时间复杂度一样，空间复杂度也是用大 O 表示，比如 O(1)、 O(n)...
`,l:"data-structures-algorithms/space-complexity/index.html#含义",a:"含义"},"56.2":{t:"作用",p:`它用来定义描述算法运行过程中临时占用的存储空间大小
占用越少 代码写的就越好
`,l:"data-structures-algorithms/space-complexity/index.html#作用",a:"作用"},"56.3":{t:"O(1)： 单个变量，所以占用永远是 O(1)",p:`let i = 0
i += 1

`,l:"data-structures-algorithms/space-complexity/index.html#o-1-单个变量-所以占用永远是-o-1",a:"o-1-单个变量-所以占用永远是-o-1"},"56.4":{t:"O(n)： 声明一个数组， 添加 n 个值， 相当于占用了 n 个空间单元",p:`const arr = []
for (let i = 0; i &lt; n; i += 1) {
  arr.push( ...`,l:"data-structures-algorithms/space-complexity/index.html#o-n-声明一个数组-添加-n-个值-相当于占用了-n-个空间单元",a:"o-n-声明一个数组-添加-n-个值-相当于占用了-n-个空间单元"},"56.5":{t:"O(n^2)： 类似一个矩阵的概念，就是二维数组的意思",p:`const arr = []
for (let i = 0; i &lt; n; i += 1) {
  arr.push( ...`,l:"data-structures-algorithms/space-complexity/index.html#o-n-2-类似一个矩阵的概念-就是二维数组的意思",a:"o-n-2-类似一个矩阵的概念-就是二维数组的意思"},"57.0":{t:"# 字符串",p:"",l:"data-structures-algorithms/string/index.html",a:"字符串"},"57.1":{t:"回文字符串的衍生问题",p:"",l:"data-structures-algorithms/string/index.html#回文字符串的衍生问题",a:"回文字符串的衍生问题"},"57.2":{t:"真题描述：给定一个非空字符串 s，最多删除一个字符。判断是否能成为回文字符串",p:`
示例 1: 输入: &quot;aba&quot;
输出: True
示例 2:
输入: &quot;abca&quot; ...`,l:"data-structures-algorithms/string/index.html#真题描述-给定一个非空字符串-s-最多删除一个字符。判断是否能成为回文字符串",a:"真题描述-给定一个非空字符串-s-最多删除一个字符。判断是否能成为回文字符串"},"57.3":{t:"思路分析",p:`
如何判断自己解决回文类问题的解法是否“高效”？其中一个很重要的标准，就是看你对回文字符串的对称特性利用得是否彻底。
字符串 ...`,l:"data-structures-algorithms/string/index.html#思路分析",a:"思路分析"},"57.4":{t:"编码实现",p:`const validPalindrome = function(s) {
    // 缓存字符串的长度
    cons ...`,l:"data-structures-algorithms/string/index.html#编码实现",a:"编码实现"},"57.5":{t:"字符串匹配问题——正则表达式初相见",p:"",l:"data-structures-algorithms/string/index.html#字符串匹配问题——正则表达式初相见",a:"字符串匹配问题——正则表达式初相见"},"57.6":{t:"真题描述： 设计一个支持以下两种操作的数据结构",p:`

void addWord(word)


bool search(word)


search(word) 可以搜索文字 ...`,l:"data-structures-algorithms/string/index.html#真题描述-设计一个支持以下两种操作的数据结构",a:"真题描述-设计一个支持以下两种操作的数据结构"},"57.7":{t:"思路分析",p:`
这道题要求字符串既可以被添加、又可以被搜索，这就意味着字符串在添加时一定要被存在某处。键值对存储，我们用 Map（或对象字 ...`,l:"data-structures-algorithms/string/index.html#思路分析",a:"思路分析"},"58.0":{t:"# 时间复杂度",p:"",l:"data-structures-algorithms/time-complexity/index.html",a:"时间复杂度"},"58.1":{t:"含义",p:`其实就是一个函数，用大 O 表示， 比如 O(1)、 O(n)...
`,l:"data-structures-algorithms/time-complexity/index.html#含义",a:"含义"},"58.2":{t:"作用",p:`它的作用就是用来定义描述算法的运行时间
`,l:"data-structures-algorithms/time-complexity/index.html#作用",a:"作用"},"58.3":{t:"O(1)",p:`let i = 0
i += 1

`,l:"data-structures-algorithms/time-complexity/index.html#o-1",a:"o-1"},"58.4":{t:"O(n)： 如果是 O(1) + O(n) 则还是 O(n)",p:`for (let i = 0; i &lt; n; i += 1) {
  console.log(i)
}

`,l:"data-structures-algorithms/time-complexity/index.html#o-n-如果是-o-1-o-n-则还是-o-n",a:"o-n-如果是-o-1-o-n-则还是-o-n"},"58.5":{t:"O(n^2)： O(n) \\* O(n), 也就是双层循环，自此类推： O(n^3)",p:`for (let i = 0; i &lt; n; i += 1) {
  for (let j = 0; j &lt; n ...`,l:"data-structures-algorithms/time-complexity/index.html#o-n-2-o-n-o-n-也就是双层循环-自此类推-o-n-3",a:"o-n-2-o-n-o-n-也就是双层循环-自此类推-o-n-3"},"59.0":{t:"# 树",p:"",l:"data-structures-algorithms/tree/index.html",a:"树"},"59.1":{t:"广度优先遍历",p:`// ● 先访问离根节点最近的节点, 如果有兄弟节点就会先遍历兄弟节点，再去遍历自己的子节点
// ● 口诀
//   ○  ...`,l:"data-structures-algorithms/tree/index.html#广度优先遍历",a:"广度优先遍历"},"60.0":{t:"# hard-line-breaks",p:`软换行（Soft line breaks）
换行符不在行内代码或 HTML 标签内，前面没有两个或以上的空格，将解析为软换行 ...`,l:"engineering/Markdown/details/index.html",a:"hard-line-breaks"},"61.0":{t:"适配方案分析",p:`看了网上的各种方案，目前大家采用的大概有 3 种👇



方案
实现方式
优点
缺点




vm vh
1.按照设计稿的 ...`,l:"engineering/adapter/data-screen/index.html",a:"适配方案分析"},"61.1":{t:"方案一：vw vh",p:"",l:"engineering/adapter/data-screen/index.html#方案一-vw-vh",a:"方案一-vw-vh"},"61.2":{t:"上效果",p:`!ezgif.com-gif-maker (1).gif
当屏幕的尺寸比例刚好是 16:9 时
!vwh02.jpg
当屏幕 ...`,l:"engineering/adapter/data-screen/index.html#上效果",a:"上效果"},"61.3":{t:"实现思路",p:`按照设计稿的尺寸，将px按比例计算转为vw和vh，转换公式如下
假设设计稿尺寸为 19201080（做之前一定问清楚 ui  ...`,l:"engineering/adapter/data-screen/index.html#实现思路",a:"实现思路"},"61.4":{t:"话不多说，上代码",p:"",l:"engineering/adapter/data-screen/index.html#话不多说-上代码",a:"话不多说-上代码"},"61.5":{t:"css 方案 - sass",p:`util.scss
// 使用 scss 的 math 函数，https://sass-lang.com/documenta ...`,l:"engineering/adapter/data-screen/index.html#css-方案-sass",a:"css-方案-sass"},"61.6":{t:"css 方案 - less",p:`utils.less
@charset &quot;utf-8&quot;;

// 默认设计稿的宽度
@designWid ...`,l:"engineering/adapter/data-screen/index.html#css-方案-less",a:"css-方案-less"},"61.7":{t:"定义 js 样式处理函数",p:`// 定义设计稿的宽高
const designWidth = 1920;
const designHeight = 108 ...`,l:"engineering/adapter/data-screen/index.html#定义-js-样式处理函数",a:"定义-js-样式处理函数"},"61.8":{t:"屏幕变化后，图表自动调整",p:`这种使用方式有个弊端，就是屏幕尺寸发生变化后，需要手动刷新一下才能完成自适应调整
为了解决这个问题，你需要在各个图表中监听页 ...`,l:"engineering/adapter/data-screen/index.html#屏幕变化后-图表自动调整",a:"屏幕变化后-图表自动调整"},"61.9":{t:"图表字体、间距、位移等尺寸自适应",p:"echarts 的字体大小只支持具体数值（像素），不能用百分比或者 vw 等尺寸，一般字体不会去做自适应，当宽高比跟 ui  ...",l:"engineering/adapter/data-screen/index.html#图表字体、间距、位移等尺寸自适应",a:"图表字体、间距、位移等尺寸自适应"},"61.10":{t:"方案二：scale",p:`通过 css 的 scale 属性，根据屏幕大小，对图表进行整体的等比缩放，从而达到自适应效果
`,l:"engineering/adapter/data-screen/index.html#方案二-scale",a:"方案二-scale"},"61.11":{t:"上效果",p:`!sceen-scale.gif
当屏幕的尺寸比例刚好是 16:9 时，页面能刚好全屏展示，内容占满显示器
!sceen-d ...`,l:"engineering/adapter/data-screen/index.html#上效果",a:"上效果"},"61.12":{t:"话不多说，上代码",p:`html 部分
&lt;div className=&quot;screen-wrapper&quot;&gt;
    & ...`,l:"engineering/adapter/data-screen/index.html#话不多说-上代码",a:"话不多说-上代码"},"61.13":{t:"实现思路",p:`如何缩放
当屏幕宽高比 &lt; 设计稿宽高比，我们需要缩放的比例是屏幕宽度 / 设计稿宽度
当屏幕宽高比 &gt; 设计稿 ...`,l:"engineering/adapter/data-screen/index.html#实现思路",a:"实现思路"},"61.14":{t:"偷懒方法-插件",p:"v-scale-screen是使用 css 属性 transform 实现缩放效果的一个大屏自适应组件，通过 scale 进 ...",l:"engineering/adapter/data-screen/index.html#偷懒方法-插件",a:"偷懒方法-插件"},"61.15":{t:"方案三：rem + vw wh",p:"",l:"engineering/adapter/data-screen/index.html#方案三-rem-vw-wh",a:"方案三-rem-vw-wh"},"61.16":{t:"上效果",p:`!rem.gif
当屏幕的尺寸比例刚好是 16:9 时，页面能刚好全屏展示，内容占满显示器
!rem01.jpg
当屏幕的尺 ...`,l:"engineering/adapter/data-screen/index.html#上效果",a:"上效果"},"61.17":{t:"实现思路",p:`关于 rem
rem(font size of the root element)，是 css3 中新增的一个大小单位，即相 ...`,l:"engineering/adapter/data-screen/index.html#实现思路",a:"实现思路"},"61.18":{t:"实现方案",p:`第一点：获得 rem 的基准值

首先安装 @njleonzhang/postcss-px-to-rem 这个包

npm  ...`,l:"engineering/adapter/data-screen/index.html#实现方案",a:"实现方案"},"61.19":{t:"参考资料",p:`

推荐一个echarts 的案列网站，需要什么直接图表直接在上面去找，可以省去很多查 echarts 配置的时间
全网ec ...`,l:"engineering/adapter/data-screen/index.html#参考资料",a:"参考资料"},"62.0":{t:"# 🔥 手撕babel插件-消灭console",p:"",l:"engineering/ast/delete-console/index.html",a:"🔥-手撕babel插件-消灭console"},"62.1":{t:"窥探",p:`我们的目的是去除console.log，我们首先需要通过ast查看语法树的结构。我们以下面的console为例：

注意 因 ...`,l:"engineering/ast/delete-console/index.html#窥探",a:"窥探"},"62.2":{t:"初见AST",p:`AST是对源码的抽象，字面量、标识符、表达式、语句、模块语法、class语法都有各自的AST。
我们这里只说下本文章中所使用 ...`,l:"engineering/ast/delete-console/index.html#初见ast",a:"初见ast"},"62.3":{t:"Program",p:`
program 是代表整个程序的节点，它有 body 属性代表程序体，存放 statement 数组，就是具体执行的语句的 ...`,l:"engineering/ast/delete-console/index.html#program",a:"program"},"62.4":{t:"ExpressionStatement",p:`
statement 是语句，它是可以独立执行的单位，expression是表达式，它俩唯一的区别是表达式执行完以后有返回值 ...`,l:"engineering/ast/delete-console/index.html#expressionstatement",a:"expressionstatement"},"62.5":{t:"CallExpression",p:`
expression 是表达式，CallExpression表示调用表达式，console.log就是一个调用表达式。

 ...`,l:"engineering/ast/delete-console/index.html#callexpression",a:"callexpression"},"62.6":{t:"MemberExpression",p:`
Member Expression通常是用于访问对象成员的。他有几种形式：

a.b
a[&quot;b&quot;]
n ...`,l:"engineering/ast/delete-console/index.html#memberexpression",a:"memberexpression"},"62.7":{t:"Identifier",p:`
Identifer 是标识符的意思，变量名、属性名、参数名等各种声明和引用的名字，都是Identifer。

我们这里的c ...`,l:"engineering/ast/delete-console/index.html#identifier",a:"identifier"},"62.8":{t:"StringLiteral",p:`
表示字符串字面量。

我们这里的log就是一个字符串字面量
StringLiteral有一个属性value 表示字符串的值 ...`,l:"engineering/ast/delete-console/index.html#stringliteral",a:"stringliteral"},"62.9":{t:"公共属性",p:`
每种 AST 都有自己的属性，但是它们也有一些公共的属性：



type：AST节点的类型


start、end、lo ...`,l:"engineering/ast/delete-console/index.html#公共属性",a:"公共属性"},"62.10":{t:"如何写一个babel插件？",p:`babel插件是作用在第二阶段即transform阶段。
transform阶段有@babel/traverse，可以遍历A ...`,l:"engineering/ast/delete-console/index.html#如何写一个babel插件",a:"如何写一个babel插件"},"62.11":{t:"构造visitor方法",p:`
path 是记录遍历路径的 api，它记录了父子节点的引用，还有很多增删改查 AST 的 api

!4.jpg
+ co ...`,l:"engineering/ast/delete-console/index.html#构造visitor方法",a:"构造visitor方法"},"62.12":{t:"去除所有console",p:`我们将所有的console.log去掉

path.get 表示获取某个属性的path


path.matchesPatt ...`,l:"engineering/ast/delete-console/index.html#去除所有console",a:"去除所有console"},"62.13":{t:"增加env api",p:`一般去除console.log都是在生产环境执行 所以增加env参数

AST的第二个参数opt中有插件传入的配置

+   ...`,l:"engineering/ast/delete-console/index.html#增加env-api",a:"增加env-api"},"62.14":{t:"增加exclude api",p:"我们上面去除了所有的console，不管是error、warning、table都会清除，所以我们加一个exclude ap ...",l:"engineering/ast/delete-console/index.html#增加exclude-api",a:"增加exclude-api"},"62.15":{t:"增加commentWords api",p:`某些时候 我们希望一些console 不被删除 我们可以给他添加一些注释 比如
//no remove
console.lo ...`,l:"engineering/ast/delete-console/index.html#增加commentwords-api",a:"增加commentwords-api"},"62.16":{t:"细节完善",p:`我们大致完成了插件 我们引进项目里面进行测试
console.log(&quot;测试1&quot;);
//no remo ...`,l:"engineering/ast/delete-console/index.html#细节完善",a:"细节完善"},"62.17":{t:"对于后缀注释",p:`我们可以判断后缀注释是否与当前的调用表达式处于同一行，如果不是同一行，则不将其归纳为后缀注释
 if (hasTrailin ...`,l:"engineering/ast/delete-console/index.html#对于后缀注释",a:"对于后缀注释"},"62.18":{t:"对于前缀注释",p:"那么对于前缀注释 我们应该怎么做呢 因为我们在后缀注释的节点中添加了一个变量belongCurrentLine，表示该注释是 ...",l:"engineering/ast/delete-console/index.html#对于前缀注释",a:"对于前缀注释"},"62.19":{t:"发布到线上",p:`我现已将代码发布到线上
`,l:"engineering/ast/delete-console/index.html#发布到线上",a:"发布到线上"},"62.20":{t:"安装",p:`yarn add @parrotjs/babel-plugin-console


`,l:"engineering/ast/delete-console/index.html#安装",a:"安装"},"62.21":{t:"使用",p:`举个例子：新建.babelrc
{
    &quot;plugins&quot;:[[&quot;../dist/inde ...`,l:"engineering/ast/delete-console/index.html#使用",a:"使用"},"63.0":{t:"# AST（抽象语法树） 到底是什么？",p:"抽象语法树（Abstract Syntax Tree，AST）是源代码语法结构的一种抽象表示，它以树状的形式表现编程语言的语 ...",l:"engineering/ast/start/index.html",a:"ast-抽象语法树-到底是什么"},"64.0":{t:"# AST 广泛应用 & 手写编译器",p:`手写编译器
该小节分为两个部分：设计篇和原理篇。
设计篇侧重整体设计，原理篇则是手撕代码，侧重编码实现，在阅读过程中建议将重 ...`,l:"engineering/ast/widely-used/index.html",a:"ast-广泛应用-手写编译器"},"64.1":{t:"设计篇",p:"",l:"engineering/ast/widely-used/index.html#设计篇",a:"设计篇"},"64.2":{t:"整体流程",p:`一个完整的编译器整体执行过程可以分为三个步骤：

Parsing(解析过程)：这个过程要经词法分析、语法分析、构建AST（抽 ...`,l:"engineering/ast/widely-used/index.html#整体流程",a:"整体流程"},"64.3":{t:"Parsing(解析)",p:`解析过程分为2个步骤：词法分析、语法分析。
词法分析是使用tokenizer(分词器)或者lexer(词法分析器)，将源码拆 ...`,l:"engineering/ast/widely-used/index.html#parsing-解析",a:"parsing-解析"},"64.4":{t:"Transformation(转化)",p:"这个过程主要是改写AST（抽象语法树），或者根据当前AST（抽象语法树）生成一个新的AST（抽象语法树），这个过程可以是相同 ...",l:"engineering/ast/widely-used/index.html#transformation-转化",a:"transformation-转化"},"64.5":{t:"Code Generation(生成代码)",p:"最后就是代码生成阶段了，其实就是将生成的新AST树再转回代码的过程。大部分的代码生成器主要过程是，不断的访问Transfor ...",l:"engineering/ast/widely-used/index.html#code-generation-生成代码",a:"code-generation-生成代码"},"64.6":{t:"原理篇",p:`接下来按照上述步骤，开始手写编译器。
`,l:"engineering/ast/widely-used/index.html#原理篇",a:"原理篇"},"64.7":{t:"生成Tokens",p:"第一步: 将代码解析为tokens。这个过程需要tokenzier(分词器)函数，整体思路就是通过遍历字符串的方式，对每个字 ...",l:"engineering/ast/widely-used/index.html#生成tokens",a:"生成tokens"},"64.8":{t:"生成AST",p:`第二步： 将生成好的tokens转化为AST。现在需要定义parser函数，接收上一步处理好的tokens：
functio ...`,l:"engineering/ast/widely-used/index.html#生成ast",a:"生成ast"},"64.9":{t:"遍历和访问生成好的AST",p:"现在已经有AST了，然后我们希望能够通过访问器访问不同的节点，当遇到不同的节点的时候，调用访问器的不同函数，大致设计成这样： ...",l:"engineering/ast/widely-used/index.html#遍历和访问生成好的ast",a:"遍历和访问生成好的ast"},"64.10":{t:"Transformer转化",p:"现在已经生成好AST了。在这一步需要使用到转换器，帮助我们将刚才生成的AST转化为新的AST。在转化之前，必须要明确转化后的 ...",l:"engineering/ast/widely-used/index.html#transformer转化",a:"transformer转化"},"64.11":{t:"新代码生成",p:`最后一步： 新代码生成。到这一步就是用新的AST，遍历其每一个节点，根据指定规则生成最终新的代码。
function cod ...`,l:"engineering/ast/widely-used/index.html#新代码生成",a:"新代码生成"},"64.12":{t:"小试牛刀：使用Babel修改函数名",p:`上面铺垫了这么多，现在开始进入实战演习。
要求：借助 Babel 给函数重命名。
//源代码
const hello = ( ...`,l:"engineering/ast/widely-used/index.html#小试牛刀-使用babel修改函数名",a:"小试牛刀-使用babel修改函数名"},"64.13":{t:"初露锋芒：手写简易版babel-plugin-transform-es2015-arrow-functions",p:"接下来尝试稍微难度大一点的，手写箭头函数转换插件 babel-plugin-transform-es2015-arrow-f ...",l:"engineering/ast/widely-used/index.html#初露锋芒-手写简易版babel-plugin-transform-es2015-arrow-functions",a:"初露锋芒-手写简易版babel-plugin-transform-es2015-arrow-functions"},"64.14":{t:"崭露头角：手写复杂版babel-plugin-transform-es2015-arrow-functions",p:`在上面中，我们虽然实现了基本的转换，但还有一些场景并没有考虑进来：

比如箭头函数使用简写的语法，该如何处理？
比如箭头函数 ...`,l:"engineering/ast/widely-used/index.html#崭露头角-手写复杂版babel-plugin-transform-es2015-arrow-functions",a:"崭露头角-手写复杂版babel-plugin-transform-es2015-arrow-functions"},"64.15":{t:"初战告捷：手写一个`console.log`插件",p:"场景：在开发阶段，我们通常会打印一些console.log进行调试。但随着项目的日常迭代，console.log也越来越多， ...",l:"engineering/ast/widely-used/index.html#初战告捷-手写一个-console-log-插件",a:"初战告捷-手写一个-console-log-插件"},"64.16":{t:"大展身手：手写监控系统中的日志上传插件",p:"场景：在监控系统的日志上传过程中，我们需要往每个函数的作用域中添加一行日志执行函数，也就是这样（但这里要注意的是，函数的定义 ...",l:"engineering/ast/widely-used/index.html#大展身手-手写监控系统中的日志上传插件",a:"大展身手-手写监控系统中的日志上传插件"},"64.17":{t:"大展神威：实现简易版`ESLint`",p:"相信大家在工作中都肯定使用过 ESLint，今天我们就来扒一扒它的工作原理。本节会带着大家手写一个简易版的ESLint，整体 ...",l:"engineering/ast/widely-used/index.html#大展神威-实现简易版-eslint",a:"大展神威-实现简易版-eslint"},"64.18":{t:"一鸣惊人：实现代码压缩",p:`代码压缩一般是在项目打包上线阶段做的，平时大家可能更多的是直接使用插件，今天也来趴一趴它的工作原理。
压缩其实也很简单，就是 ...`,l:"engineering/ast/widely-used/index.html#一鸣惊人-实现代码压缩",a:"一鸣惊人-实现代码压缩"},"64.19":{t:"厚积薄发：实现按需加载插件",p:`相信大家在工作中肯定都用过 Lodash 这个工具库，它是一个一致性、模块化、高性能的 JavaScript 实用工具库。
 ...`,l:"engineering/ast/widely-used/index.html#厚积薄发-实现按需加载插件",a:"厚积薄发-实现按需加载插件"},"64.20":{t:"一战成名：实现`TypeScript`的类型校验",p:`此节难度较高，还是有一定的难度，不过既然大家都能坚持到这里，相信一定也没有问题！！！
这里先说一个题外话，项目中做TS文件的 ...`,l:"engineering/ast/widely-used/index.html#一战成名-实现-typescript-的类型校验",a:"一战成名-实现-typescript-的类型校验"},"64.21":{t:"赋值场景",p:`源代码：
var age:number=&quot;12&quot;;


校验思路：

第一步：获取拿到声明的类型（num ...`,l:"engineering/ast/widely-used/index.html#赋值场景",a:"赋值场景"},"64.22":{t:"先声明再赋值场景",p:`源代码：
let sourceCode = \`
  var age:number;
  age = &quot;12&quo ...`,l:"engineering/ast/widely-used/index.html#先声明再赋值场景",a:"先声明再赋值场景"},"64.23":{t:"泛型场景",p:`由于整体较复杂，我们此小节不写代码，整体理解思路即可，重在理解。
源代码：
  function join&lt;T, W& ...`,l:"engineering/ast/widely-used/index.html#泛型场景",a:"泛型场景"},"64.24":{t:"1、尽量避免遍历抽象语法树（AST）",p:`遍历 AST 的代价很昂贵，并且很容易做出非必要的遍历，可能是数以千计甚或上万次的多余操作。
Babel 尽可能的对此做出了 ...`,l:"engineering/ast/widely-used/index.html#_1、尽量避免遍历抽象语法树-ast",a:"_1、尽量避免遍历抽象语法树-ast"},"64.25":{t:"2、优化嵌套的访问者对象",p:`当你嵌套访问者时，直接把它们嵌套式的写进代码里看起来很合理。
const MyVisitor = {
  FunctionD ...`,l:"engineering/ast/widely-used/index.html#_2、优化嵌套的访问者对象",a:"_2、优化嵌套的访问者对象"},"64.26":{t:"3、留意嵌套结构",p:`有时候在考虑一些转换时，你可能会忘记某些结构是可以嵌套的。
举例来说，假设我们要从 Foo ClassDeclaration ...`,l:"engineering/ast/widely-used/index.html#_3、留意嵌套结构",a:"_3、留意嵌套结构"},"65.0":{t:"# GitLab CI 从入门到实践",p:"",l:"engineering/cicd/gitlab-cicd/index.html",a:"gitlab-ci-从入门到实践"},"65.1":{t:"一、Gitlab CI 是什么？",p:"现代持续的软件开发导致了开发者需要持续的build, test 和 deploy 重复的代码更改，这些重复的过程非常的繁琐， ...",l:"engineering/cicd/gitlab-cicd/index.html#一、gitlab-ci-是什么",a:"一、gitlab-ci-是什么"},"65.2":{t:"二、如何使用？",p:"",l:"engineering/cicd/gitlab-cicd/index.html#二、如何使用",a:"二、如何使用"},"65.3":{t:"Gitlab CI的使用主要需要2大步骤",p:"",l:"engineering/cicd/gitlab-cicd/index.html#gitlab-ci的使用主要需要2大步骤",a:"gitlab-ci的使用主要需要2大步骤"},"65.4":{t:"步骤一：配置runner",p:`
我们可以简单的把Gitlab runner给理解成.gitlab-ci.yml 文件内容的执行者，.gitlab-ci.y ...`,l:"engineering/cicd/gitlab-cicd/index.html#步骤一-配置runner",a:"步骤一-配置runner"},"65.5":{t:" ",p:"",l:"engineering/cicd/gitlab-cicd/index.html#",a:""},"65.6":{t:"使用shared runner",p:`无需多余操作，请确保shared runner选项被enable了即可直接使用公共runner。（如下）
!图片



`,l:"engineering/cicd/gitlab-cicd/index.html#使用shared-runner",a:"使用shared-runner"},"65.7":{t:" ",p:"",l:"engineering/cicd/gitlab-cicd/index.html#",a:""},"65.8":{t:"自己配置runner",p:`
部署Gitlab runner官方文档：Run GitLab Runner in a container | GitLab ...`,l:"engineering/cicd/gitlab-cicd/index.html#自己配置runner",a:"自己配置runner"},"65.9":{t:"A. 安装docker",p:`brew install --cask docker

`,l:"engineering/cicd/gitlab-cicd/index.html#a-安装docker",a:"a-安装docker"},"65.10":{t:"B. 启动Gitlab runner container",p:`起一个docker container来执行Gitlab Runner镜像
  docker run -d --name g ...`,l:"engineering/cicd/gitlab-cicd/index.html#b-启动gitlab-runner-container",a:"b-启动gitlab-runner-container"},"65.11":{t:"C. 注册runner到Gitlab",p:"只用docker起一个gitlab runner不能将我们当前使用的gitlab repository和上一步创建的runn ...",l:"engineering/cicd/gitlab-cicd/index.html#c-注册runner到gitlab",a:"c-注册runner到gitlab"},"65.12":{t:"步骤二：创建`.gitlab-ci.yml`文件",p:`
在mono repo的根目录创建一个文件, 命名为.gitlab-ci.yml, 并将其push到master分支。
gi ...`,l:"engineering/cicd/gitlab-cicd/index.html#步骤二-创建-gitlab-ci-yml-文件",a:"步骤二-创建-gitlab-ci-yml-文件"},"65.13":{t:"三、如何编写.gitlab-ci.yml文件？",p:`首先，让我们先来熟悉下yaml的常见写法，以及对比下它与json有什么不同。
Yaml Syntax写法详情具体请见 =&g ...`,l:"engineering/cicd/gitlab-cicd/index.html#三、如何编写-gitlab-ci-yml文件",a:"三、如何编写-gitlab-ci-yml文件"},"65.14":{t:"YAML语法",p:"",l:"engineering/cicd/gitlab-cicd/index.html#yaml语法",a:"yaml语法"},"65.15":{t:"数组写法",p:`{
    &quot;array&quot;: [&quot;red&quot;, &quot;blue&quot;, & ...`,l:"engineering/cicd/gitlab-cicd/index.html#数组写法",a:"数组写法"},"65.16":{t:"对象写法",p:`{
  &quot;student1&quot;: {
    &quot;name&quot;: &quot;小明&quo ...`,l:"engineering/cicd/gitlab-cicd/index.html#对象写法",a:"对象写法"},"65.17":{t:"流水线环节梳理",p:`流水线的流程，根据配置的.gitlab-ci.yml文件可以分为如下几个环节：


在单个的流水线任务执行之前进行配置


 ...`,l:"engineering/cicd/gitlab-cicd/index.html#流水线环节梳理",a:"流水线环节梳理"},"65.18":{t:"结构图",p:`!图片
单个流水线任务的形式可以参考如下示例，具体字段释义可以暂时忽略，会在之后详解：
# 这个my_job的任务名是可以自 ...`,l:"engineering/cicd/gitlab-cicd/index.html#结构图",a:"结构图"},"65.19":{t:"script",p:`需要被运行的脚本。以数组形式配置。
pipeline_job:
  ......
  script:
    - cd &l ...`,l:"engineering/cicd/gitlab-cicd/index.html#script",a:"script"},"65.20":{t:"before\\_script",p:`在所有的流水线任务执行之前需要执行的脚本，或者单个流水线任务中的script执行之前执行某些script
`,l:"engineering/cicd/gitlab-cicd/index.html#before-script",a:"before-script"},"65.21":{t:"variables变量",p:`在Gitlab-CI中，变量大致可分为三类：


Gitlab给我们预先定义的变量，比如CI_COMMIT_BRANCH.
 ...`,l:"engineering/cicd/gitlab-cicd/index.html#variables变量",a:"variables变量"},"65.22":{t:"image",p:"CI流水线运行环境的docker镜像(任何相关的代码运行环境镜像皆可)，比如字节某内部工具e***的镜像，里面装了nvm管理 ...",l:"engineering/cicd/gitlab-cicd/index.html#image",a:"image"},"65.23":{t:"stages",p:"Gitlab CI允许我们进行自定义的流水线阶段配置，我们可以将自己的流水线自我划分为若干stages，然后在不同的stag ...",l:"engineering/cicd/gitlab-cicd/index.html#stages",a:"stages"},"65.24":{t:"stage",p:`stage为stages的一个子项，在我们自定义单个流水线任务时可以配置
`,l:"engineering/cicd/gitlab-cicd/index.html#stage",a:"stage"},"65.25":{t:"cache",p:`缓存多个流水线任务之间共用的文件，目录， etc...
cache:
  key: cache-node-modules
  ...`,l:"engineering/cicd/gitlab-cicd/index.html#cache",a:"cache"},"65.26":{t:"retry",p:`一个job可以被重新执行的最大数量。必须是个正整数, 0-2, 2为最大值
when可设置在特定失败原因的情况下执行
job ...`,l:"engineering/cicd/gitlab-cicd/index.html#retry",a:"retry"},"65.27":{t:"only & except only: 设置流水线任务执行时机",p:`
except: 设置流水线任务不执行时机

可配置选项（常用的几个）：



&lt;分支名&gt;
特定分支change ...`,l:"engineering/cicd/gitlab-cicd/index.html#only-except-only-设置流水线任务执行时机",a:"only-except-only-设置流水线任务执行时机"},"65.28":{t:"rules:if",p:`此字段可以在单个流水线job或者workflow字段下进行配置。
rules关键词下可以进行if语句配置，如果if满足的话可 ...`,l:"engineering/cicd/gitlab-cicd/index.html#rules-if",a:"rules-if"},"65.29":{t:"workflow",p:"需要和rules配合用来控制整个pipeline的行为，比如整个流水线执行与否。整个流水线正常运行的前提是其rules配置中 ...",l:"engineering/cicd/gitlab-cicd/index.html#workflow",a:"workflow"},"65.30":{t:"when",p:`这个关键字和stage需要配合使用。如果一个stage fail掉了，那么我们应该期待下个stage怎么办呢？
(When  ...`,l:"engineering/cicd/gitlab-cicd/index.html#when",a:"when"},"65.31":{t:"tags",p:`这个是设定Gitlab 在执行脚本时使用哪个runner
`,l:"engineering/cicd/gitlab-cicd/index.html#tags",a:"tags"},"65.32":{t:"注意事项",p:"配置时有些关键字比如workflow，rules什么的会显示报错 XXX config conatins unknown k ...",l:"engineering/cicd/gitlab-cicd/index.html#注意事项",a:"注意事项"},"65.33":{t:"模块化写法",p:`
随着流水线任务的变多，把所有的任务都写在.gitlab-ci.yml文件中会显得很臃肿
解决方法是拆分多个任务到不同的模块 ...`,l:"engineering/cicd/gitlab-cicd/index.html#模块化写法",a:"模块化写法"},"65.34":{t:"四、Demo配置+运行示例",p:`
下面让我们来配合运行示例看一看文件配置是如何生效的

`,l:"engineering/cicd/gitlab-cicd/index.html#四、demo配置-运行示例",a:"四、demo配置-运行示例"},"65.35":{t:"流水线Demo1(基础用法)",p:`# .gitlab-ci.yml
# 镜像为node的环境镜像，如果用的是别的环境可以更改为别的项目环境的镜像
image: ...`,l:"engineering/cicd/gitlab-cicd/index.html#流水线demo1-基础用法",a:"流水线demo1-基础用法"},"65.36":{t:"流水线Demo2(详细示例)",p:`# .gitlab-ci.yml
image: node:latest
# # 在运行所有任务之前执行如下脚本
before ...`,l:"engineering/cicd/gitlab-cicd/index.html#流水线demo2-详细示例",a:"流水线demo2-详细示例"},"66.0":{t:"# gitlab CiCd",p:"",l:"engineering/cicd/gitlab-cicd-start/index.html",a:"gitlab-cicd"},"66.1":{t:"GitLabCI",p:`
轻量级，不需要复杂的安装手段。
配置简单，与gitlab可直接适配。
实时构建日志十分清晰，UI交互体验很好
使用 YAM ...`,l:"engineering/cicd/gitlab-cicd-start/index.html#gitlabci",a:"gitlabci"},"66.2":{t:"CI  持续集成",p:`
合并开发人员正在开发编写的所有代码一种做法
一天之内多次合并提交代码
从存储库货生产环境中进行构建和自动化测试 保证没有问 ...`,l:"engineering/cicd/gitlab-cicd-start/index.html#ci-持续集成",a:"ci-持续集成"},"66.3":{t:"CD 连续交付",p:`
通常可以自动将更改自动推送到 发布系统 随时软件发布到生产环境
持续部署 会更进一步  并自动将更改推送到生产中。

会在 ...`,l:"engineering/cicd/gitlab-cicd-start/index.html#cd-连续交付",a:"cd-连续交付"},"66.4":{t:"大致可以分为几个阶段",p:`
第一阶段  编译阶段

一般都会先build 开始编译
代码测试 单元测试
可以在本阶段进行 打包 在第二阶段直接用 但是 ...`,l:"engineering/cicd/gitlab-cicd-start/index.html#大致可以分为几个阶段",a:"大致可以分为几个阶段"},"67.0":{t:"# 基于GitLab+docker的前端自动化构建部署(CI/CD)流程",p:`什么是CI/CD？
CICD 是 持续集成（Continuous Integration）和持续部署（Continuous  ...`,l:"engineering/cicd/gitlab-docker-cicd/index.html",a:"基于gitlab-docker的前端自动化构建部署-ci-cd-流程"},"67.1":{t:"持续集成：CI",p:"持续集成指在和向远程仓库 push 代码后，在这次提交合并入主分支前进行一系列测试，构建等流程。假设现在有个应用的代码存储在 ...",l:"engineering/cicd/gitlab-docker-cicd/index.html#持续集成-ci",a:"持续集成-ci"},"67.2":{t:"持续部署：CD",p:"持续部署在持续集成的基础上更进一步，指将推送指仓库默认分支的部署至产品环境。如果这部分需要手动触发，这就是一个持续交付（Co ...",l:"engineering/cicd/gitlab-docker-cicd/index.html#持续部署-cd",a:"持续部署-cd"},"67.3":{t:"1.首先用docker+nginx部署项目",p:`docker下配置nginx部署vue项目步骤：
1.docker pull nginx 下载nginx
2.在/data  ...`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_1-首先用docker-nginx部署项目",a:"_1-首先用docker-nginx部署项目"},"67.4":{t:"2.在gitlab新建的项目的CI/CD配置中填写需要发布到服务器的相关信息",p:`

`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_2-在gitlab新建的项目的ci-cd配置中填写需要发布到服务器的相关信息",a:"_2-在gitlab新建的项目的ci-cd配置中填写需要发布到服务器的相关信息"},"67.5":{t:"2.1Gitlab上项目中CI/CD中的variables变量配置（用在.yml里的，防止代码中泄露服务器信息）",p:`!
`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_2-1gitlab上项目中ci-cd中的variables变量配置-用在-yml里的-防止代码中泄露服务器信息",a:"_2-1gitlab上项目中ci-cd中的variables变量配置-用在-yml里的-防止代码中泄露服务器信息"},"67.6":{t:"2.2接下来在服务器上操作，配置免密登录",p:"生产密钥对: ssh-keygen -t rsa，配置让gitlab服务器和前端代码服务器之间可以免密登录具体免密登录操作如 ...",l:"engineering/cicd/gitlab-docker-cicd/index.html#_2-2接下来在服务器上操作-配置免密登录",a:"_2-2接下来在服务器上操作-配置免密登录"},"67.7":{t:"2.3服务器上用docker安装gitlab-runner",p:`用docker安装gitlab-runner:
docker pull gitlab/gitlab-runner:lates ...`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_2-3服务器上用docker安装gitlab-runner",a:"_2-3服务器上用docker安装gitlab-runner"},"67.8":{t:"2.4服务器上用docker注册gitlab-runner",p:`! docker注册runner
docker run --rm -t -i -v /srv/gitlab-runner/c ...`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_2-4服务器上用docker注册gitlab-runner",a:"_2-4服务器上用docker注册gitlab-runner"},"67.9":{t:"3.将你所需要发布的项目下新建一个.gitlab-ci.yml文件，让gitlab去执行自动化流程",p:`!
`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_3-将你所需要发布的项目下新建一个-gitlab-ci-yml文件-让gitlab去执行自动化流程",a:"_3-将你所需要发布的项目下新建一个-gitlab-ci-yml文件-让gitlab去执行自动化流程"},"67.10":{t:"3.1gitlab-ci.yml文件",p:`//做缓存的
cache:
  key: \${CI_PROJECT_NAME}
  paths:
    - node_mo ...`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_3-1gitlab-ci-yml文件",a:"_3-1gitlab-ci-yml文件"},"67.11":{t:"3.2变量说明",p:`SERVER_DEMO_HOST：目标CICD服务器IP地址
SERVER_DEMO_PATH：服务器上nginx指向的静态 ...`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_3-2变量说明",a:"_3-2变量说明"},"67.12":{t:"3.3注意",p:"在webpack项目中配置导出的文件名为你需要同步的文件夹的名称，并且访问路径按需为相对路径，或者绝对路径，具体看项目需求。 ...",l:"engineering/cicd/gitlab-docker-cicd/index.html#_3-3注意",a:"_3-3注意"},"67.13":{t:"4.打包构建，提交代码，触发钩子执行自动化构建发布",p:`

`,l:"engineering/cicd/gitlab-docker-cicd/index.html#_4-打包构建-提交代码-触发钩子执行自动化构建发布",a:"_4-打包构建-提交代码-触发钩子执行自动化构建发布"},"67.14":{t:"提交代码触发CI/CD流程",p:`然后在gitlab项目中的CI/CD流水线中能看到自己的刚刚触发的CI/CD任务，如下图所示
`,l:"engineering/cicd/gitlab-docker-cicd/index.html#提交代码触发ci-cd流程",a:"提交代码触发ci-cd流程"},"67.15":{t:"!image.png",p:`点击状态或者阶段都可以进入构建发布详情页面查看内容
!image.png
`,l:"engineering/cicd/gitlab-docker-cicd/index.html#image-png",a:"image-png"},"67.16":{t:"构建：build",p:`!image.png
`,l:"engineering/cicd/gitlab-docker-cicd/index.html#构建-build",a:"构建-build"},"67.17":{t:"发布：deploy",p:`!image.png
至此，大功告成，妈妈再也不用担心我发布线上代码耗费时间和出错了
自动化构建发布（CI/CD）的优势
项 ...`,l:"engineering/cicd/gitlab-docker-cicd/index.html#发布-deploy",a:"发布-deploy"},"68.0":{t:"# 基于 Docker ( Gitlab、Gitlab Runner ) 搭建一整套自动化CI、CD流程，完成从代码提交到自动打包编译到自动部署运行",p:"",l:"engineering/cicd/gitlab-two-docker-cicd/index.html",a:"基于-docker-gitlab、gitlab-runner-搭建一整套自动化ci、cd流程-完成从代码提交到自动打包编译到自动部署运行"},"68.1":{t:"一、安装 Docker",p:`linux服务器使用curl下载快速安装的shell脚本
curl -fsSL get.docker.com -o get- ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#一、安装-docker",a:"一、安装-docker"},"68.2":{t:"二、基于 Docker 安装 Gitlab",p:"",l:"engineering/cicd/gitlab-two-docker-cicd/index.html#二、基于-docker-安装-gitlab",a:"二、基于-docker-安装-gitlab"},"68.3":{t:"1\\. 一键安装命令",p:`docker run --detach \\
  --hostname localhost \\
  --publish 443 ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_1-一键安装命令",a:"_1-一键安装命令"},"68.4":{t:"2\\. 安装完成后通过域名或服务器ip访问",p:`通过root用户登陆
root用户默认密码，通过
docker exec -it gitlab sh

shell命令方式进 ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_2-安装完成后通过域名或服务器ip访问",a:"_2-安装完成后通过域名或服务器ip访问"},"68.5":{t:"三、基于 Docker 安装 Gitlab Runner、",p:`Gitlab Runner 就是提供我们的CI、CD能力的工具。
`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#三、基于-docker-安装-gitlab-runner、",a:"三、基于-docker-安装-gitlab-runner、"},"68.6":{t:"1\\. 一键安装运行 Gitlab Runner",p:`docker run -d --name gitlab-runner --restart always \\
  -v /ho ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_1-一键安装运行-gitlab-runner",a:"_1-一键安装运行-gitlab-runner"},"68.7":{t:"2\\. 查看Gitlab Runner配置信息",p:"安装好Gitlab Runner后，它只是在容器内运行的一个服务，我们需要让它与Gitlab关联起来，此时需要注册Gitla ...",l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_2-查看gitlab-runner配置信息",a:"_2-查看gitlab-runner配置信息"},"68.8":{t:"3\\. 注册Gitlab Runner",p:`运行注册命令
docker run --rm -v /home/gitlab-runner/config:/etc/gitl ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_3-注册gitlab-runner",a:"_3-注册gitlab-runner"},"68.9":{t:"四、编写 .gitlab-ci.yml 提供CI、CD配置项",p:"",l:"engineering/cicd/gitlab-two-docker-cicd/index.html#四、编写-gitlab-ci-yml-提供ci、cd配置项",a:"四、编写-gitlab-ci-yml-提供ci、cd配置项"},"68.10":{t:"1\\. 提供前端编译、构建功能",p:`在项目根目录下创建一个.gitlab-ci.yml的文件，写入如下
image: node:16.13.2-slim

st ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_1-提供前端编译、构建功能",a:"_1-提供前端编译、构建功能"},"68.11":{t:"2\\. nginx配置文件编写",p:`在项目根目录创建nginx.conf文件，把这个文件复制到容器内作为nginx配置文件，写入以下内容
server {
   ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_2-nginx配置文件编写",a:"_2-nginx配置文件编写"},"68.12":{t:"3\\. Dockerfile文件编写",p:`在项目根目录下创建Dockerfile文件，runner会根据这个文件创建一个的docker镜像，文件写入以下内容
FROM ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_3-dockerfile文件编写",a:"_3-dockerfile文件编写"},"68.13":{t:"4\\. 使用docker自动部署前端项目",p:`首先是.gitlab-ci.yml文件编写
image: node:16.13.2-slim

stages: # 分段
  ...`,l:"engineering/cicd/gitlab-two-docker-cicd/index.html#_4-使用docker自动部署前端项目",a:"_4-使用docker自动部署前端项目"},"69.0":{t:"# Eslint + Prettier + Husky + Commitlint+ Lint-staged 规范前端工程代码规范",p:"",l:"engineering/code-specification/index.html",a:"eslint-prettier-husky-commitlint-lint-staged-规范前端工程代码规范"},"69.1":{t:"1.代码规范",p:"",l:"engineering/code-specification/index.html#_1-代码规范",a:"_1-代码规范"},"69.2":{t:"代码检查工具",p:`Eslint 项目集成
npm i eslint -D

npx eslint --init


init 命令会自动生成  ...`,l:"engineering/code-specification/index.html#代码检查工具",a:"代码检查工具"},"69.3":{t:"代码风格工具",p:`prettier 项目集成
npm i prettier eslint-config-prettier eslint-plu ...`,l:"engineering/code-specification/index.html#代码风格工具",a:"代码风格工具"},"69.4":{t:"2.git规范",p:"Git 有很多的 hooks, 让我们在不同的阶段,对代码进行不同的操作,控制提交到仓库的代码的规范性,和准确性, 以下只是 ...",l:"engineering/code-specification/index.html#_2-git规范",a:"_2-git规范"},"69.5":{t:"2.1 提交的代码规范",p:`pre-commit 描述: 通过钩子函数,判断提交的代码是否符合规范
`,l:"engineering/code-specification/index.html#_2-1-提交的代码规范",a:"_2-1-提交的代码规范"},"69.6":{t:"2.2 提交的信息规范",p:`commit-msg 描述: 通过钩子函数,判断 commit 信息是否符合规范
`,l:"engineering/code-specification/index.html#_2-2-提交的信息规范",a:"_2-2-提交的信息规范"},"69.7":{t:"2.3 提交的代码影响",p:`pre-push 描述: 通过钩子,执行测试,避免对以前的内容造成影响
`,l:"engineering/code-specification/index.html#_2-3-提交的代码影响",a:"_2-3-提交的代码影响"},"69.8":{t:"工具",p:`husky 操作 git 钩子的工具
lint-staged 本地暂存代码检查工具
commitlint commit 信息 ...`,l:"engineering/code-specification/index.html#工具",a:"工具"},"69.9":{t:"安装流程",p:`
1.安装代码校验依赖

npm i lint-staged husky -D

在package.json中添加脚本
np ...`,l:"engineering/code-specification/index.html#安装流程",a:"安装流程"},"69.10":{t:"类型 描述",p:`
build 编译相关的修改，例如发布版本、对项目构建或者依赖的改动
chore 其他修改, 比如改变构建流程、或者增加依赖 ...`,l:"engineering/code-specification/index.html#类型-描述",a:"类型-描述"},"69.11":{t:"3.测试",p:"",l:"engineering/code-specification/index.html#_3-测试",a:"_3-测试"},"69.12":{t:"单元测试",p:`jest 测试三部曲
input&amp;output
`,l:"engineering/code-specification/index.html#单元测试",a:"单元测试"},"69.13":{t:"配置jest 前往 jest 文档,根据需求添加内容",p:`
www.jestjs.cn/docs/gettin…
提交代码的测试运行

npx husky add .husky/pr ...`,l:"engineering/code-specification/index.html#配置jest-前往-jest-文档-根据需求添加内容",a:"配置jest-前往-jest-文档-根据需求添加内容"},"70.0":{t:"# GitHub Pages部署报错：JavaScript heap out of memory",p:`!image-20220309180119580
经过百度，发现原因是node使用的堆内存超出了V8引擎允许的最大值。
分析 ...`,l:"engineering/deployment/pages-js-memory/index.html",a:"github-pages部署报错-javascript-heap-out-of-memory"},"71.0":{t:"# Git Submodules 介绍",p:"",l:"engineering/git/Submodules/index.html",a:"git-submodules-介绍"},"71.1":{t:"特点",p:`
因为暴露的是源代码，引用方必须有子模块的读权限，所以适合团队内、组织内协作或个人开发。
通常允许引用方开发者修改子模块代码 ...`,l:"engineering/git/Submodules/index.html#特点",a:"特点"},"71.2":{t:"适用场景",p:`
团队、组织内部协作。
引用方时常需要修改共享代码。

`,l:"engineering/git/Submodules/index.html#适用场景",a:"适用场景"},"71.3":{t:"为什么有 submodules？",p:"解决公共代码问题。如果某些文件，在项目A和项目B中都会用到，例如组件库，那么这些文件可以作为 submodules 来管理， ...",l:"engineering/git/Submodules/index.html#为什么有-submodules",a:"为什么有-submodules"},"71.4":{t:"了解 Git Submodules",p:`有2个概念：主项目、submodule（子模块）。这两者各自都是完整的 Git 仓库。
`,l:"engineering/git/Submodules/index.html#了解-git-submodules",a:"了解-git-submodules"},"71.5":{t:"如何让一个Git仓库变为另一个Git仓库的 submodule",p:`
创建Git仓库A。
创建Git仓库B。
在Git仓库A中，通过git submodule add ...(仓库B的地址，即 ...`,l:"engineering/git/Submodules/index.html#如何让一个git仓库变为另一个git仓库的-submodule",a:"如何让一个git仓库变为另一个git仓库的-submodule"},"71.6":{t:"注意事项",p:"执行操作后，会在当前父项目下新建个文件夹，名字就是 submodule 仓库的名字。这个文件夹里面的内容，是 submodu ...",l:"engineering/git/Submodules/index.html#注意事项",a:"注意事项"},"71.7":{t:"submodule 的父子关系存在哪里",p:`关系是保存在主项目的 Git 仓库中。
被当作 submodule 的 Git 仓库，其实不知道自己变成了 submodul ...`,l:"engineering/git/Submodules/index.html#submodule-的父子关系存在哪里",a:"submodule-的父子关系存在哪里"},"71.8":{t:"submodule 的父子关系信息怎么存",p:`.gitmodules 文件
父子关系的信息保存在主项目的 .gitmodules 文件，如果不是新加 submodule， ...`,l:"engineering/git/Submodules/index.html#submodule-的父子关系信息怎么存",a:"submodule-的父子关系信息怎么存"},"71.9":{t:"submodule 的版本号",p:`主项目还保存了对应 submodule 的版本号（commit id），没有冗余存储 submodule 的代码。
`,l:"engineering/git/Submodules/index.html#submodule-的版本号",a:"submodule-的版本号"},"71.10":{t:"submodule 开发常用操作",p:"",l:"engineering/git/Submodules/index.html#submodule-开发常用操作",a:"submodule-开发常用操作"},"71.11":{t:"如何给 submodule 仓库提交更新",p:"",l:"engineering/git/Submodules/index.html#如何给-submodule-仓库提交更新",a:"如何给-submodule-仓库提交更新"},"71.12":{t:"方法一，像普通仓库一样更新",p:`之前说过，submodule 仓库也是个普通的 Git 仓库，它并不知道自己有多少个爸爸。
我们可以直接git clone  ...`,l:"engineering/git/Submodules/index.html#方法一-像普通仓库一样更新",a:"方法一-像普通仓库一样更新"},"71.13":{t:"方法二，在主项目中更新",p:`例如主项目在文件夹A，A里面包含：
.git文件夹
READMD.md主项目的ReadMe文件。
B文件夹，是个 submo ...`,l:"engineering/git/Submodules/index.html#方法二-在主项目中更新",a:"方法二-在主项目中更新"},"71.14":{t:"注意事项",p:"当你在文件夹B中做commit后，文件夹B里面就有了新的 commit id。此时主项目A中所记录的 submodule 的 ...",l:"engineering/git/Submodules/index.html#注意事项",a:"注意事项"},"71.15":{t:"如何在主项目仓库，拉取 submodule 的更新",p:"",l:"engineering/git/Submodules/index.html#如何在主项目仓库-拉取-submodule-的更新",a:"如何在主项目仓库-拉取-submodule-的更新"},"71.16":{t:"方法一，cd submodule 后 git pull",p:`在 submodule 中，所有git操作就当作一个普通的 Git 仓库就行，你可以切换分支、提交代码、拉取更新等。
这个方 ...`,l:"engineering/git/Submodules/index.html#方法一-cd-submodule-后-git-pull",a:"方法一-cd-submodule-后-git-pull"},"71.17":{t:"方法二，主项目执行git submodule update --remote [submodule文件夹相对路径]",p:`这个方法会自动拉取submodule的主分支（通常叫master或main）的最新版本。效果跟方法一一致。
如果你不带参数[ ...`,l:"engineering/git/Submodules/index.html#方法二-主项目执行git-submodule-update-remote-submodule文件夹相对路径",a:"方法二-主项目执行git-submodule-update-remote-submodule文件夹相对路径"},"71.18":{t:"注意事项，更新后需提交主项目变更",p:`当我们更新子项目后，相当于是把主项目记录的 submodule 的 commit id 给更新了，需要提交下主项目的变更。
`,l:"engineering/git/Submodules/index.html#注意事项-更新后需提交主项目变更",a:"注意事项-更新后需提交主项目变更"},"71.19":{t:"方法三，主项目执行 git submodule update [submodule文件夹相对路径]",p:"注意，这个方法会使 submodule 的分支处于主项目里指定的 commit id。可能并不是拉 submodule 的  ...",l:"engineering/git/Submodules/index.html#方法三-主项目执行-git-submodule-update-submodule文件夹相对路径",a:"方法三-主项目执行-git-submodule-update-submodule文件夹相对路径"},"71.20":{t:"如何 clone 包含 submodule 的仓库",p:"",l:"engineering/git/Submodules/index.html#如何-clone-包含-submodule-的仓库",a:"如何-clone-包含-submodule-的仓库"},"71.21":{t:"方法一，按需clone submodule",p:`
先git clone 主项目仓库并进入主项目文件夹，这时候submodule的文件夹都是空的。
执行git submodu ...`,l:"engineering/git/Submodules/index.html#方法一-按需clone-submodule",a:"方法一-按需clone-submodule"},"71.22":{t:"合并第2、3步骤",p:`第2、3步可以合并。使用以下命令：
git submodule update --init [submodule的文件夹的相 ...`,l:"engineering/git/Submodules/index.html#合并第2、3步骤",a:"合并第2、3步骤"},"71.23":{t:"方法二，一次性clone所有 submodule",p:`
先git clone 主项目仓库，这时候submodule的文件夹都是空的。
执行git submodule init。
 ...`,l:"engineering/git/Submodules/index.html#方法二-一次性clone所有-submodule",a:"方法二-一次性clone所有-submodule"},"71.24":{t:"合并第2、3步骤",p:`git submodule update --init

合并第1、2、3步骤
git clone --recurse-su ...`,l:"engineering/git/Submodules/index.html#合并第2、3步骤",a:"合并第2、3步骤"},"71.25":{t:"如何创建 submodule 关系",p:`cd到主项目，执行：
git submodule add ...(另一仓库地址，即git clone时后面那串东西)

下面 ...`,l:"engineering/git/Submodules/index.html#如何创建-submodule-关系",a:"如何创建-submodule-关系"},"72.0":{t:"# Actions",p:`GitHub Actions
GitHub Actions 是一个持续集成 (Continuous integration) ...`,l:"engineering/github/actions/index.html",a:"actions"},"72.1":{t:"Workflows（工作流）",p:"工作流是一个可配置的自动化的程序。创建一个工作流，你需要定义一个 YAML 文件，当你的仓库触发某个事件的时候，工作流就会运 ...",l:"engineering/github/actions/index.html#workflows-工作流",a:"workflows-工作流"},"72.2":{t:"事件（Events）",p:"事件是指仓库触发运行工作流的具体的行为，比如创建一个 pull request，新建一个 issue、或者推送一个 comm ...",l:"engineering/github/actions/index.html#事件-events",a:"事件-events"},"72.3":{t:"任务（Jobs）",p:"任务是在同一个运行器上执行的一组步骤（steps）。一个步骤（steps）要么是一个shell 脚本（script）要么是一 ...",l:"engineering/github/actions/index.html#任务-jobs",a:"任务-jobs"},"72.4":{t:"动作（Actions）",p:"动作是 GitHub Actions 平台的一个自定义的应用，它会执行一个复杂但是需要频繁重复的作业。使用动作可以减少重复代 ...",l:"engineering/github/actions/index.html#动作-actions",a:"动作-actions"},"72.5":{t:"运行器（Runners）",p:"一个运行器是一个可以运行工作流的服务。每一个运行器一次只运行一个单独的任务。GitHub 提供 Ubuntu Linux，M ...",l:"engineering/github/actions/index.html#运行器-runners",a:"运行器-runners"},"73.0":{t:"# 代码同步 Github 和 Gitee",p:`Gitee 导入仓库
上篇我们已经在 Github 创建了博客仓库，现在我们在 Gitee 绑定 Github 账号后，选择 ...`,l:"engineering/github/github-gitee/index.html",a:"代码同步-github-和-gitee"},"74.0":{t:"# 实现 npm script 跨平台兼容",p:"到目前为止，如果你在 Linux、Mac 平台做开发，所有的 npm script 都会顺利运行，但是 Windows 下面 ...",l:"engineering/npm/cross-platform/index.html",a:"实现-npm-script-跨平台兼容"},"74.1":{t:"文件系统操作的跨平台兼容",p:"npm script 中涉及到的文件系统操作包括文件和目录的创建、删除、移动、复制等操作，而社区为这些基本操作也提供了跨平台 ...",l:"engineering/npm/cross-platform/index.html#文件系统操作的跨平台兼容",a:"文件系统操作的跨平台兼容"},"74.2":{t:"第 1 步，添加开发依赖",p:`npm i rimraf cpr make-dir-cli -D
# npm install rimraf cpr make ...`,l:"engineering/npm/cross-platform/index.html#第-1-步-添加开发依赖",a:"第-1-步-添加开发依赖"},"74.3":{t:"第 2 步，改造涉及文件系统操作的 npm script",p:`  &quot;scripts&quot;: {
-    &quot;cover:cleanup&quot;: &quot ...`,l:"engineering/npm/cross-platform/index.html#第-2-步-改造涉及文件系统操作的-npm-script",a:"第-2-步-改造涉及文件系统操作的-npm-script"},"74.4":{t:"用 cross-var 引用变量",p:"",l:"engineering/npm/cross-platform/index.html#用-cross-var-引用变量",a:"用-cross-var-引用变量"},"74.5":{t:"第 1 步，安装 cross-var 为开发依赖",p:`npm i cross-var -D
# npm install cross-var --save-dev
# yarn a ...`,l:"engineering/npm/cross-platform/index.html#第-1-步-安装-cross-var-为开发依赖",a:"第-1-步-安装-cross-var-为开发依赖"},"74.6":{t:"第 2 步，改写引用变量 npm script，具体 diff 如下",p:` &quot;scripts&quot;: {
     &quot;cover:cleanup&quot;: &quot; ...`,l:"engineering/npm/cross-platform/index.html#第-2-步-改写引用变量-npm-script-具体-diff-如下",a:"第-2-步-改写引用变量-npm-script-具体-diff-如下"},"74.7":{t:"用 cross-env 设置环境变量",p:"在 node.js 脚本和 npm script 使用环境变量也是比较常见的，比如我们在运行测试时，需要加上 NODE_EN ...",l:"engineering/npm/cross-platform/index.html#用-cross-env-设置环境变量",a:"用-cross-env-设置环境变量"},"74.8":{t:"第 1 步，添加 cross-env 到开发依赖",p:`npm i cross-env -D
# npm install cross-env --save-dev
# yarn a ...`,l:"engineering/npm/cross-platform/index.html#第-1-步-添加-cross-env-到开发依赖",a:"第-1-步-添加-cross-env-到开发依赖"},"74.9":{t:"第 2 步，改写使用了环境变量的 npm script",p:`  &quot;scripts&quot;: {
-    &quot;test&quot;: &quot;NODE_ENV ...`,l:"engineering/npm/cross-platform/index.html#第-2-步-改写使用了环境变量的-npm-script",a:"第-2-步-改写使用了环境变量的-npm-script"},"74.10":{t:"关于 npm script 的跨平台兼容，还有几点需要大家注意",p:`
所有使用引号的地方，建议使用双引号，并且加上转义；
没做特殊处理的命令比如 eslint、stylelint、mocha、 ...`,l:"engineering/npm/cross-platform/index.html#关于-npm-script-的跨平台兼容-还有几点需要大家注意",a:"关于-npm-script-的跨平台兼容-还有几点需要大家注意"},"75.0":{t:"# 运行多个 npm script 的各种姿势",p:"",l:"engineering/npm/more-script/index.html",a:"运行多个-npm-script-的各种姿势"},"75.1":{t:"让多个 npm script 串行？&&",p:"在我们运行测试之前确保我们的代码都通过代码检查会是比较不错的实践，这也是让多个 npm script 串行的典型用例，实现方 ...",l:"engineering/npm/more-script/index.html#让多个-npm-script-串行",a:"让多个-npm-script-串行"},"75.2":{t:"让多个 npm script 并行？ &",p:"在严格串行的情况下，我们必须要确保代码中没有编码规范问题才能运行测试，在某些时候可能并不是我们想要的，因为我们真正需要的是， ...",l:"engineering/npm/more-script/index.html#让多个-npm-script-并行",a:"让多个-npm-script-并行"},"75.3":{t:"wait",p:`npm 内置支持的多条命令并行跟 js 里面同时发起多个异步请求非常类似，它只负责触发多条命令，而不管结果的收集
加上 wa ...`,l:"engineering/npm/more-script/index.html#wait",a:"wait"},"75.4":{t:"有没有更好的管理方式？  npm-run-all",p:`用如下命令将 npm-run-all 添加到项目依赖中：
`,l:"engineering/npm/more-script/index.html#有没有更好的管理方式-npm-run-all",a:"有没有更好的管理方式-npm-run-all"},"75.5":{t:"下载依赖",p:`npm i npm-run-all -D

`,l:"engineering/npm/more-script/index.html#下载依赖",a:"下载依赖"},"75.6":{t:"使用",p:`npm-run-all xxx1 xxx2 xxx3

npm-run-all 还支持通配符匹配分组的 npm script ...`,l:"engineering/npm/more-script/index.html#使用",a:"使用"},"75.7":{t:"如何让多个 npm script 并行执行？",p:`npm-run-all --parallel xxx:* 

`,l:"engineering/npm/more-script/index.html#如何让多个-npm-script-并行执行",a:"如何让多个-npm-script-并行执行"},"76.0":{t:"# 用 node.js 脚本替代复杂的 npm script",p:"",l:"engineering/npm/node/index.html",a:"用-node-js-脚本替代复杂的-npm-script"},"76.1":{t:"1. 安装 shelljs 依赖",p:`使用如下命令安装 shelljs 到项目依赖中：
npm i shelljs -D

此外，我们计划使用 chalk 来给输 ...`,l:"engineering/npm/node/index.html#_1-安装-shelljs-依赖",a:"_1-安装-shelljs-依赖"},"76.2":{t:"2. 创建 Node.js 脚本",p:`touch scripts/cover.js

`,l:"engineering/npm/node/index.html#_2-创建-node-js-脚本",a:"_2-创建-node-js-脚本"},"76.3":{t:"3. 用 Node.js 实现同等功能",p:"shelljs 为我们提供了各种常见命令的跨平台支持，比如 cp、mkdir、rm、cd 等命令，此外，理论上你可以在 No ...",l:"engineering/npm/node/index.html#_3-用-node-js-实现同等功能",a:"_3-用-node-js-实现同等功能"},"77.0":{t:"# 实现命令行自动补全",p:"当 npm script 里面积累的命令越来越多时，重度命令行用户肯定会好奇，能不能实现类似 bash、zsh 里面的命令自 ...",l:"engineering/npm/npm-auto/index.html",a:"实现命令行自动补全"},"77.1":{t:"把 npm completion 集成到 shell 中",p:`npm 自身提供了自动完成工具 completion，将其集成到 bash 或者 zsh 里也非常容易
官方文档里面的集成方 ...`,l:"engineering/npm/npm-auto/index.html#把-npm-completion-集成到-shell-中",a:"把-npm-completion-集成到-shell-中"},"77.2":{t:"更高级的自动完成",p:"人类对于效率的追求是永无止境的，工程师更是如此，npm 命令补全到目前为止显然还不够高效，能不能补全 package.jso ...",l:"engineering/npm/npm-auto/index.html#更高级的自动完成",a:"更高级的自动完成"},"77.3":{t:"1. 在 npm install 时自动根据历史安装过的包给出补全建议",p:`!图片
`,l:"engineering/npm/npm-auto/index.html#_1-在-npm-install-时自动根据历史安装过的包给出补全建议",a:"_1-在-npm-install-时自动根据历史安装过的包给出补全建议"},"77.4":{t:"2. 在 npm uninstall 时候根据 package.json 里面的声明给出补全建议",p:`!图片
`,l:"engineering/npm/npm-auto/index.html#_2-在-npm-uninstall-时候根据-package-json-里面的声明给出补全建议",a:"_2-在-npm-uninstall-时候根据-package-json-里面的声明给出补全建议"},"77.5":{t:"3. 在 npm run 时补全建议中列出命令细节",p:`!图片
`,l:"engineering/npm/npm-auto/index.html#_3-在-npm-run-时补全建议中列出命令细节",a:"_3-在-npm-run-时补全建议中列出命令细节"},"78.0":{t:"# npm ci和npm install区别",p:"npm大家肯定都使用过，可能会有一些不经常使用的命令，npm ci和npm install都可以用来安装依赖，他们之间有什么 ...",l:"engineering/npm/npm-ci/index.html",a:"npm-ci和npm-install区别"},"78.1":{t:"由此我们知道，当我们进行CI/CD或生产发布时，最好使用`npm ci`，它会严格按照package-lock.json中指定版本进行安装，并且会对比package-lock.json和package.json依赖，防止由错误的依赖版本造成的故障",p:"",l:"engineering/npm/npm-ci/index.html#由此我们知道-当我们进行ci-cd或生产发布时-最好使用-npm-ci-它会严格按照package-lock-json中指定版本进行安装-并且会对比package-lock-json和package-json依赖-防止由错误的依赖版本造成的故障",a:"由此我们知道-当我们进行ci-cd或生产发布时-最好使用-npm-ci-它会严格按照package-lock-json中指定版本进行安装-并且会对比package-lock-json和package-json依赖-防止由错误的依赖版本造成的故障"},"79.0":{t:"# 使用 npm script 的钩子",p:"为了方便开发者自定义，npm script 的设计者为命令的执行增加了类似生命周期的机制，具体来说就是 pre 和 post ...",l:"engineering/npm/npm-hook/index.html",a:"使用-npm-script-的钩子"},"80.0":{t:"# npm 安装流程",p:`!图片
`,l:"engineering/npm/npm-install/index.html",a:"npm-安装流程"},"80.1":{t:"第一步",p:"执行安装命令之后，npm 首先会去查找 npm 的配置信息。 其中，我们最熟悉的就是安装时候的源信息。npm 会在项目中查找 ...",l:"engineering/npm/npm-install/index.html#第一步",a:"第一步"},"80.2":{t:"第二步",p:"获取完配置文件之后，就会构建依赖树。 首先会检查下项目中是否有 package-lock.json 🔐文件：存在 lock ...",l:"engineering/npm/npm-install/index.html#第二步",a:"第二步"},"80.3":{t:"第三步",p:"在有了依赖树之后，就可以根据依赖树下载完整的依赖资源。 在下载之前，会先检查下是否有缓存资源，如果存在缓存资源的话，那么直接 ...",l:"engineering/npm/npm-install/index.html#第三步",a:"第三步"},"80.4":{t:"第四步",p:"会生成 package-lock.json 文件。 那么这个文件是干什么的呢？我们都知道，在 package.json 文件 ...",l:"engineering/npm/npm-install/index.html#第四步",a:"第四步"},"81.0":{t:"# npm plubilsh 发包",p:`前言

学会发包可以避免我们在项目开发中重复造轮子的现象；当我们开发了通用的组件或者工具库后可以将其发布到npm上，这样在我 ...`,l:"engineering/npm/npm-release/index.html",a:"npm-plubilsh-发包"},"81.1":{t:"1\\. 准备项目工程并编写组件",p:`
创建一个基础模板（这里我通过vite创建一个react模板，node版本要求：14.18+，16+ ）

npm: npm ...`,l:"engineering/npm/npm-release/index.html#_1-准备项目工程并编写组件",a:"_1-准备项目工程并编写组件"},"81.2":{t:"2\\. 配置vite.config.ts",p:`
下载path

npm: npm install path -D

or

yarn: yarn add path -D
 ...`,l:"engineering/npm/npm-release/index.html#_2-配置vite-config-ts",a:"_2-配置vite-config-ts"},"81.3":{t:"3\\. 配置npm",p:`
终端执行命令

npm init


根据命令行提示输入对应信息


package name: 包名，发到npm上的名称 ...`,l:"engineering/npm/npm-release/index.html#_3-配置npm",a:"_3-配置npm"},"81.4":{t:"4\\. 发布",p:`
没有npm账号的可以先去npm官网注册一个或者通过npm adduser命令注册
完成上面步骤后我们先登录npm账号，执行 ...`,l:"engineering/npm/npm-release/index.html#_4-发布",a:"_4-发布"},"81.5":{t:"5\\. 使用",p:`
在另一个项目中npm install 包名或者yarn add 包名
使用方式

import { XButton } f ...`,l:"engineering/npm/npm-release/index.html#_5-使用",a:"_5-使用"},"81.6":{t:"6\\. 填坑",p:`虽然包发布成功了，但是前面说过还有一些坑需要填，这些坑刚刚也看见了，都是在使用的时候出现的

样式问题


将包下载到另一个 ...`,l:"engineering/npm/npm-release/index.html#_6-填坑",a:"_6-填坑"},"81.7":{t:"7\\. 更新包",p:`
首先更新包版本npm version patch（因为我们是修复bug，所以我们只需更新修复版本号）
再次执行发包命令np ...`,l:"engineering/npm/npm-release/index.html#_7-更新包",a:"_7-更新包"},"82.0":{t:"# 在 npm script 中使用变量",p:"npm 为加高效的执行 npm script 做了大量的优化，创建并运行 npm script 命令 里面讲到的环境变量特性 ...",l:"engineering/npm/npm-var/index.html",a:"在-npm-script-中使用变量"},"82.1":{t:"使用预定义变量",p:"首先我们来看预定义变量，通过运行 npm run env 就能拿到完整的变量列表，这个列表非常长，这里我使用 npm run ...",l:"engineering/npm/npm-var/index.html#使用预定义变量",a:"使用预定义变量"},"83.0":{t:"# 文件变化时自动运行 npm script",p:"",l:"engineering/npm/npm-watch/index.html",a:"文件变化时自动运行-npm-script"},"83.1":{t:"单元测试自动化",p:"幸运的是，mocha 本身支持 --watch 参数，即在代码变化时自动重跑所有的测试，我们只需要在 scripts 对象中 ...",l:"engineering/npm/npm-watch/index.html#单元测试自动化",a:"单元测试自动化"},"83.2":{t:"代码检查自动化",p:"我们使用的代码检查工具 stylelint、eslint、jsonlint 不全支持 watch 模式，这里我们需要借助 o ...",l:"engineering/npm/npm-watch/index.html#代码检查自动化",a:"代码检查自动化"},"83.3":{t:"1. 安装项目依赖",p:`npm i onchange -D
# npm install onchange --save-dev
# yarn add ...`,l:"engineering/npm/npm-watch/index.html#_1-安装项目依赖",a:"_1-安装项目依赖"},"83.4":{t:"2. 添加 npm script",p:`按照如下提示添加 watch:lint 和 watch 两个子命令：
+    &quot;watch&quot;: &qu ...`,l:"engineering/npm/npm-watch/index.html#_2-添加-npm-script",a:"_2-添加-npm-script"},"83.5":{t:"关于改动的几点说明",p:`
watch:lint 里面的文件匹配模式可以使用通配符，但是模式两边使用了转义的双引号，这样是跨平台兼容的；
watch: ...`,l:"engineering/npm/npm-watch/index.html#关于改动的几点说明",a:"关于改动的几点说明"},"84.0":{t:"# 给 npm script 传递参数和添加注释",p:"",l:"engineering/npm/parameter-script/index.html",a:"给-npm-script-传递参数和添加注释"},"84.1":{t:"给 npm script 传递参数 --",p:"eslint 内置了代码风格自动修复模式，只需给它传入 --fix 参数即可，在 scripts 中声明检查代码命令的同时你 ...",l:"engineering/npm/parameter-script/index.html#给-npm-script-传递参数",a:"给-npm-script-传递参数"},"84.2":{t:"给 npm script 添加注释",p:"",l:"engineering/npm/parameter-script/index.html#给-npm-script-添加注释",a:"给-npm-script-添加注释"},"84.3":{t:"第一种",p:"package.json 中可以增加 // 为键的值，注释就可以写在对应的值里面，npm 会忽略这种键，比如，我们想要给 t ...",l:"engineering/npm/parameter-script/index.html#第一种",a:"第一种"},"84.4":{t:"第二种",p:"直接在 script 声明中做手脚，因为命令的本质是 shell 命令（适用于 linux 平台），我们可以在命令前面加上注 ...",l:"engineering/npm/parameter-script/index.html#第二种",a:"第二种"},"84.5":{t:"调整 npm script 运行时日志输出",p:"在运行 npm script 出现问题时你需要有能力去调试它，某些情况下你需要让 npm script 以静默的方式运行，这 ...",l:"engineering/npm/parameter-script/index.html#调整-npm-script-运行时日志输出",a:"调整-npm-script-运行时日志输出"},"84.6":{t:"默认日志输出级别",p:`即不加任何日志控制参数得到的输出，可能是你最常用的，能看到执行的命令、命令执行的结果。
`,l:"engineering/npm/parameter-script/index.html#默认日志输出级别",a:"默认日志输出级别"},"84.7":{t:"显示尽可能少的有用信息",p:"结合其他工具调用 npm script 的时候比较有用，需要使用 --loglevel silent，或者 --silent ...",l:"engineering/npm/parameter-script/index.html#显示尽可能少的有用信息",a:"显示尽可能少的有用信息"},"84.8":{t:"显示尽可能多的运行时状态",p:"排查脚本问题的时候比较有用，需要使用 --loglevel verbose，或者 --verbose，或者更简单的 -d 来 ...",l:"engineering/npm/parameter-script/index.html#显示尽可能多的运行时状态",a:"显示尽可能多的运行时状态"},"85.0":{t:"# 30 秒搭建一个 npm 私服库",p:"",l:"engineering/npm/private/index.html",a:"_30-秒搭建一个-npm-私服库"},"85.1":{t:"下载依赖  verdaccio",p:`sudo npm i -g verdaccio

`,l:"engineering/npm/private/index.html#下载依赖-verdaccio",a:"下载依赖-verdaccio"},"85.2":{t:"下载完成之后会提供一个命令",p:` /usr/local/lib/node_modules/verdaccio/bin/verdaccio

`,l:"engineering/npm/private/index.html#下载完成之后会提供一个命令",a:"下载完成之后会提供一个命令"},"85.3":{t:"执行",p:` /usr/local/lib/node_modules/verdaccio/bin/verdaccio

`,l:"engineering/npm/private/index.html#执行",a:"执行"},"85.4":{t:"执行之后",p:"",l:"engineering/npm/private/index.html#执行之后",a:"执行之后"},"85.5":{t:"提供一个本地服务地址",p:`http://localhost:4873/

`,l:"engineering/npm/private/index.html#提供一个本地服务地址",a:"提供一个本地服务地址"},"85.6":{t:"然后按照这个步骤 登陆",p:`npm address --registry &lt;http://localhost:4873/&gt;

`,l:"engineering/npm/private/index.html#然后按照这个步骤-登陆",a:"然后按照这个步骤-登陆"},"85.7":{t:"发布包",p:`npm publish --registry &lt;http://localhost:4873/&gt;

`,l:"engineering/npm/private/index.html#发布包",a:"发布包"},"85.8":{t:"发布一个私有域名的包",p:`npm publish --access=public

`,l:"engineering/npm/private/index.html#发布一个私有域名的包",a:"发布一个私有域名的包"},"86.0":{t:"# 初识 npm script",p:"",l:"engineering/npm/start-script/index.html",a:"初识-npm-script"},"86.1":{t:"用 npm init 快速创建项目",p:"开始探索 npm script 之前，我们先聊聊这些 scripts 所依赖的文件 package.json，以它为基础的  ...",l:"engineering/npm/start-script/index.html#用-npm-init-快速创建项目",a:"用-npm-init-快速创建项目"},"86.2":{t:"初始化 package.json 时的字段默认值是可以自己配置的",p:`我上面的默认版本号是 0.1.0，而 npm 默认的版本号是 0.0.1，可以用下面的命令去修改默认配置：
npm conf ...`,l:"engineering/npm/start-script/index.html#初始化-package-json-时的字段默认值是可以自己配置的",a:"初始化-package-json-时的字段默认值是可以自己配置的"},"86.3":{t:"用 npm run 执行任意命令",p:"npm 是如何管理和执行各种 scripts 的呢？作为 npm 内置的核心功能之一，npm run 实际上是 npm ru ...",l:"engineering/npm/start-script/index.html#用-npm-run-执行任意命令",a:"用-npm-run-执行任意命令"},"86.4":{t:"创建自定义 npm script",p:`在新项目或者任何现有项目中添加 eslint 自定义脚本的步骤如下：
`,l:"engineering/npm/start-script/index.html#创建自定义-npm-script",a:"创建自定义-npm-script"},"86.5":{t:"1. 准备被检查的代码",p:`const str = 'some value';

function fn(){
    console.log('som ...`,l:"engineering/npm/start-script/index.html#_1-准备被检查的代码",a:"_1-准备被检查的代码"},"86.6":{t:"2. 添加 eslint 依赖",p:`执行如下命令将 eslint 添加为 devDependencies：
npm install eslint -D

`,l:"engineering/npm/start-script/index.html#_2-添加-eslint-依赖",a:"_2-添加-eslint-依赖"},"86.7":{t:"3. 初始化 eslint 配置",p:`用 eslint 做检查需要配置规则集，存放规则集的文件就是配置文件，使用如下文件生成配置文件：
./node_module ...`,l:"engineering/npm/start-script/index.html#_3-初始化-eslint-配置",a:"_3-初始化-eslint-配置"},"86.8":{t:"4. 添加 eslint 命令",p:`在 package.json 的 scripts 字段中新增命令 eslint：
{
  &quot;scripts&quo ...`,l:"engineering/npm/start-script/index.html#_4-添加-eslint-命令",a:"_4-添加-eslint-命令"},"86.9":{t:"5. 运行 eslint 命令",p:`执行 npm run eslint
`,l:"engineering/npm/start-script/index.html#_5-运行-eslint-命令",a:"_5-运行-eslint-命令"},"87.0":{t:"# 解读 packager",p:`
package.json 是前端每个项目都有的 json 文件，位于项目的根目录。许多脚手架在搭建项目时也会自动帮我们自动 ...`,l:"engineering/package/package-start/index.html",a:"解读-packager"},"87.1":{t:"描述配置",p:`主要是项目的基本信息，包括名称，版本，描述，仓库，作者等，部分会展示在 npm 官网上
!图片
`,l:"engineering/package/package-start/index.html#描述配置",a:"描述配置"},"87.2":{t:"name",p:`项目的名称，如果是第三方包的话，其他人可以通过该名称使用 npm install 进行安装。
&quot;name&quot ...`,l:"engineering/package/package-start/index.html#name",a:"name"},"87.3":{t:"version",p:`项目的版本号，开源项目的版本号通常遵循 semver 语义化规范，具体规则如下图所示：
!图片
简单介绍一下：

代表主版本 ...`,l:"engineering/package/package-start/index.html#version",a:"version"},"87.4":{t:"repository",p:`项目的仓库地址以及版本控制信息。
&quot;repository&quot;: {
  &quot;type&quot;: ...`,l:"engineering/package/package-start/index.html#repository",a:"repository"},"87.5":{t:"description",p:`项目的描述，会展示在 npm 官网，让别人能快速了解该项目。
&quot;description&quot;: &quot; ...`,l:"engineering/package/package-start/index.html#description",a:"description"},"87.6":{t:"keywords",p:`一组项目的技术关键词，比如 Ant Design 组件库的 keywords 如下：
&quot;keywords&quot ...`,l:"engineering/package/package-start/index.html#keywords",a:"keywords"},"87.7":{t:"homepage",p:`项目主页的链接，通常是项目 github 链接，项目官网或文档首页。
&quot;homepage&quot;: &quot ...`,l:"engineering/package/package-start/index.html#homepage",a:"homepage"},"87.8":{t:"bugs",p:`项目 bug 反馈地址，通常是 github issue 页面的链接。
&quot;bugs&quot;: &quot;ht ...`,l:"engineering/package/package-start/index.html#bugs",a:"bugs"},"87.9":{t:"license",p:"项目的开源许可证。项目的版权拥有人可以使用开源许可证来限制源码的使用、复制、修改和再发布等行为。常见的开源许可证有 BSD、 ...",l:"engineering/package/package-start/index.html#license",a:"license"},"87.10":{t:"author",p:`项目作者。
&quot;author&quot;: &quot;minghhui&quot;,

`,l:"engineering/package/package-start/index.html#author",a:"author"},"87.11":{t:"文件配置",p:`包括项目所包含的文件，以及入口等信息。
`,l:"engineering/package/package-start/index.html#文件配置",a:"文件配置"},"87.12":{t:"files",p:`项目在进行 npm 发布时，可以通过 files 指定需要跟随一起发布的内容来控制 npm 包的大小，避免安装时间太长。
发 ...`,l:"engineering/package/package-start/index.html#files",a:"files"},"87.13":{t:"type",p:"在 node 支持 ES 模块后，要求 ES 模块采用 .mjs 后缀文件名。只要遇到 .mjs 文件，就认为它是 ES 模 ...",l:"engineering/package/package-start/index.html#type",a:"type"},"87.14":{t:"main",p:"项目发布时，默认会包括 package.json，license，README 和main 字段里指定的文件，因为 main ...",l:"engineering/package/package-start/index.html#main",a:"main"},"87.15":{t:"browser",p:"main 字段里指定的入口文件在 browser 和 Node 环境中都可以使用。如果只想在 web 端使用，不允许在 se ...",l:"engineering/package/package-start/index.html#browser",a:"browser"},"87.16":{t:"module",p:`同样，项目也可以指定 ES 模块的入口文件，这就是 module 字段的作用。
&quot;module&quot;: &q ...`,l:"engineering/package/package-start/index.html#module",a:"module"},"87.17":{t:"exports",p:`node 在 14.13 支持在 package.json 里定义 exports 字段，拥有了条件导出的功能。
expor ...`,l:"engineering/package/package-start/index.html#exports",a:"exports"},"87.18":{t:"workspaces",p:"项目的工作区配置，用于在本地的根目录下管理多个子项目。可以自动地在 npm install 时将 workspaces 下面 ...",l:"engineering/package/package-start/index.html#workspaces",a:"workspaces"},"87.19":{t:"脚本配置",p:"",l:"engineering/package/package-start/index.html#脚本配置",a:"脚本配置"},"87.20":{t:"scripts",p:`指定项目的一些内置脚本命令，这些命令可以通过 npm run 来执行。通常包含项目开发，构建 等 CI 命令，比如：
&qu ...`,l:"engineering/package/package-start/index.html#scripts",a:"scripts"},"87.21":{t:"config",p:`config 用于设置 scripts 里的脚本在运行时的参数。比如设置 port 为 3001：
&quot;config ...`,l:"engineering/package/package-start/index.html#config",a:"config"},"87.22":{t:"依赖配置",p:`项目可能会依赖其他包，需要在 package.json 里配置这些依赖的信息。
`,l:"engineering/package/package-start/index.html#依赖配置",a:"依赖配置"},"87.23":{t:"dependencies",p:`运行依赖，也就是项目生产环境下需要用到的依赖。比如 react，vue，状态管理库以及组件库等。
使用 npm instal ...`,l:"engineering/package/package-start/index.html#dependencies",a:"dependencies"},"87.24":{t:"devDependencies",p:"开发依赖，项目开发环境需要用到而运行时不需要的依赖，用于辅助开发，通常包括项目工程化工具比如 webpack，vite，es ...",l:"engineering/package/package-start/index.html#devdependencies",a:"devdependencies"},"87.25":{t:"peerDependencies",p:`同伴依赖，一种特殊的依赖，不会被自动安装，通常用于表示与另一个包的依赖与兼容性关系来警示使用者。
比如我们安装 A，A 的正 ...`,l:"engineering/package/package-start/index.html#peerdependencies",a:"peerdependencies"},"87.26":{t:"optionalDependencies",p:"可选依赖，顾名思义，表示依赖是可选的，它不会阻塞主功能的使用，安装或者引入失败也无妨。这类依赖如果安装失败，那么 npm 的 ...",l:"engineering/package/package-start/index.html#optionaldependencies",a:"optionaldependencies"},"87.27":{t:"peerDependenciesMeta",p:`同伴依赖也可以使用 peerDependenciesMeta 将其指定为可选的。
&quot;peerDependencie ...`,l:"engineering/package/package-start/index.html#peerdependenciesmeta",a:"peerdependenciesmeta"},"87.28":{t:"bundleDependencies",p:`打包依赖。它的值是一个数组，在发布包时，bundleDependencies 里面的依赖都会被一起打包。
比如指定 reac ...`,l:"engineering/package/package-start/index.html#bundledependencies",a:"bundledependencies"},"87.29":{t:"overrides",p:`overrides 可以重写项目依赖的依赖，及其依赖树下某个依赖的版本号，进行包的替换。
`,l:"engineering/package/package-start/index.html#overrides",a:"overrides"},"87.30":{t:"发布配置",p:`主要是和项目发布相关的配置。
`,l:"engineering/package/package-start/index.html#发布配置",a:"发布配置"},"87.31":{t:"private",p:`如果是私有项目，不希望发布到公共 npm 仓库上，可以将 private 设为 true。
&quot;private&qu ...`,l:"engineering/package/package-start/index.html#private",a:"private"},"87.32":{t:"publishConfig",p:`顾名思义，publishConfig 就是 npm 包发布时使用的配置。
比如在安装依赖时指定了 registry 为 ta ...`,l:"engineering/package/package-start/index.html#publishconfig",a:"publishconfig"},"87.33":{t:"系统配置",p:"和项目关联的系统配置，比如 node 版本或操作系统兼容性之类。这些要求只会起到提示警告的作用，即使用户的环境不符合要求，也 ...",l:"engineering/package/package-start/index.html#系统配置",a:"系统配置"},"87.34":{t:"engines",p:`一些项目由于兼容性问题会对 node 或者包管理器有特定的版本号要求，比如：
&quot;engines&quot;: {
 ...`,l:"engineering/package/package-start/index.html#engines",a:"engines"},"87.35":{t:"os",p:"在 linux 上能正常运行的项目可能在 windows 上会出现异常，使用 os 字段可以指定项目对操作系统的兼容性要求。 ...",l:"engineering/package/package-start/index.html#os",a:"os"},"87.36":{t:"cpu",p:`指定项目只能在特定的 CPU 体系上运行。
&quot;cpu&quot;: [&quot;x64&quot;, &quot ...`,l:"engineering/package/package-start/index.html#cpu",a:"cpu"},"87.37":{t:"第三方配置",p:`一些第三方库或应用在进行某些内部处理时会依赖这些字段，使用它们时需要安装对应的第三方库。
`,l:"engineering/package/package-start/index.html#第三方配置",a:"第三方配置"},"87.38":{t:"types 或者 typings",p:`指定 TypeScript 的类型定义的入口文件
&quot;types&quot;: &quot;./index.d.ts ...`,l:"engineering/package/package-start/index.html#types-或者-typings",a:"types-或者-typings"},"87.39":{t:"unpkg",p:`可以让 npm 上所有的文件都开启 CDN 服务。
比如 vue package.json 的 unpkg 定义为 dist ...`,l:"engineering/package/package-start/index.html#unpkg",a:"unpkg"},"87.40":{t:"jsdelivr",p:`与 unpkg 类似，vue 通过如下的配置
&quot;jsdelivr&quot;: &quot;dist/vue.gl ...`,l:"engineering/package/package-start/index.html#jsdelivr",a:"jsdelivr"},"87.41":{t:"browserslist",p:"设置项目的浏览器兼容情况。babel 和 autoprefixer 等工具会使用该配置对代码进行转换。当然你也可以使用 .b ...",l:"engineering/package/package-start/index.html#browserslist",a:"browserslist"},"87.42":{t:"sideEffects",p:`显示设置某些模块具有副作用，用于 webpack 的 tree-shaking 优化。
比如在项目中整体引入 Ant Des ...`,l:"engineering/package/package-start/index.html#sideeffects",a:"sideeffects"},"87.43":{t:"lint-staged",p:"lint-staged 是用于对 git 的暂存区的文件进行操作的工具，比如可以在代码提交前执行 lint 校验，类型检查， ...",l:"engineering/package/package-start/index.html#lint-staged",a:"lint-staged"},"88.0":{t:"# packager-version",p:"",l:"engineering/package/package-version/index.html",a:"packager-version"},"88.1":{t:"解决问题",p:`
每次提交代码自动修改 package.json 的version 版本
配合 changelog 使用更佳

`,l:"engineering/package/package-version/index.html#解决问题",a:"解决问题"},"88.2":{t:"使用方式",p:`
项目根目录增加 version.mjs 文件
下载依赖

yarn add prompts zx -D


package ...`,l:"engineering/package/package-version/index.html#使用方式",a:"使用方式"},"89.0":{t:"# 前端B端权限控制【资源权限，数据权限】",p:"",l:"engineering/permissions/tob-permissions/index.html",a:"前端b端权限控制【资源权限-数据权限】"},"89.1":{t:"1\\. 基本介绍",p:`
资源权限：菜单导航栏 &amp; 页面 &amp; 按钮 资源可见权限。
数据权限：对于页面上的数据操作，同一个人同一个页 ...`,l:"engineering/permissions/tob-permissions/index.html#_1-基本介绍",a:"_1-基本介绍"},"89.2":{t:"2\\. 权限数据录入与展示",p:"采用树结构进行处理。唯一需要处理的是父子节点的联动关系处理。这里因为不同的公司或者系统可能对于这部分的数据录入方式不同，所以 ...",l:"engineering/permissions/tob-permissions/index.html#_2-权限数据录入与展示",a:"_2-权限数据录入与展示"},"89.3":{t:"3.用户资源权限流程图",p:`!image.png
`,l:"engineering/permissions/tob-permissions/index.html#_3-用户资源权限流程图",a:"_3-用户资源权限流程图"},"89.4":{t:"4 前端权限控制",p:"前端控制权限也是分为两部分，菜单页面 与 按钮。因为前端权限控制的实现，会因为后台接口形式有所影响，但是大体方向是相同。还是 ...",l:"engineering/permissions/tob-permissions/index.html#_4-前端权限控制",a:"_4-前端权限控制"},"89.5":{t:"4.1.1 路由权限 【代码地址 demo地址】",p:`这里是有两种做法：

第一种，控制路由的配置，当然不是路由配置文件里去配置。而是生效的路由配置里去做。
第二种，完全不做这里 ...`,l:"engineering/permissions/tob-permissions/index.html#_4-1-1-路由权限-【代码地址-demo地址】",a:"_4-1-1-路由权限-【代码地址-demo地址】"},"89.6":{t:"4.1.2 路由权限 菜单可见权限",p:`参照上面的方式，这里的菜单可见权限不用做其他的操作。
4.2 按钮权限 【代码地址 demo地址】
按钮权限上就涉及到两块， ...`,l:"engineering/permissions/tob-permissions/index.html#_4-1-2-路由权限-菜单可见权限",a:"_4-1-2-路由权限-菜单可见权限"},"89.7":{t:"背景",p:"数据权限是对于业务组件内部表格组件的数据进行的数据操作权限。列表数据可能归属于不同的数据类型，所以具有不同的数据操作权限。对 ...",l:"engineering/permissions/tob-permissions/index.html#背景",a:"背景"},"89.8":{t:"总体思路",p:`场景：
比如在商品列表中，每条商品记录后面的“操作”一栏下用三个按钮：【编辑】、【上架/下架】、【删除】，而对于某一个用户， ...`,l:"engineering/permissions/tob-permissions/index.html#总体思路",a:"总体思路"},"89.9":{t:"按钮【actType】属性定义",p:"每个数据操作的按钮上加一个属性 “actType”代表这个按钮的动作类型（如：编辑、删除、审核等），这个属性是资权限的接口返 ...",l:"engineering/permissions/tob-permissions/index.html#按钮【acttype】属性定义",a:"按钮【acttype】属性定义"},"89.10":{t:"业务接口返回权限类型字段【permissionType】",p:"对于有权限控制的业务数据，列表接口或者详情接口都会返回一个“permissionType”的字段，这个字段代表当前用户对于这 ...",l:"engineering/permissions/tob-permissions/index.html#业务接口返回权限类型字段【permissiontype】",a:"业务接口返回权限类型字段【permissiontype】"},"89.11":{t:"怎么控制按钮的可用状态？",p:"现在列表上有三个按钮，【编辑】、【收货】、【完结】，它们对应的“actType”分别为2、4、64，某一条数据的permis ...",l:"engineering/permissions/tob-permissions/index.html#怎么控制按钮的可用状态",a:"怎么控制按钮的可用状态"},"89.12":{t:"前端的js数据进行&判断",p:`需要进行数据转换

data.toString(2): 将数据进行2进制转换成二进制字符串。
parseInt(permis ...`,l:"engineering/permissions/tob-permissions/index.html#前端的js数据进行-判断",a:"前端的js数据进行-判断"},"89.13":{t:"代码修改",p:`接口mock返回数据
response = [{
      &quot;type&quot;: 3,
      &quo ...`,l:"engineering/permissions/tob-permissions/index.html#代码修改",a:"代码修改"},"90.0":{t:"# 处理浏览器默认样式",p:"     html, body, ul, li, ol, dl, dd, dt, p, h1, h2, h3, h4, h5 ...",l:"engineering/project-structures/commonly-css-base/index.html",a:"处理浏览器默认样式"},"91.0":{t:"# 常用 less mixins",p:`//表单元素垂直居中对齐（也可设置顶对齐，底对齐）
.form-element-v-align(@alignment: mi ...`,l:"engineering/project-structures/commonly-less/index.html",a:"常用-less-mixins"},"92.0":{t:"# 常用scss mixins",p:`/显示多行，省略号 
@mixin ellipsis($row:1) {
    /* 显示两行，省略号 */
    te ...`,l:"engineering/project-structures/commonly-scss/index.html",a:"常用scss-mixins"},"93.0":{t:"# 整理的一些前后端协同工作",p:"",l:"engineering/project-structures/synergy/index.html",a:"整理的一些前后端协同工作"},"93.1":{t:"1. 数据字典使用",p:`数据字典提供统一查询接口

查询所有字典接口
查询单个字典数据集合
查询部分字典数据集合

结构如下
{
 'dicCode ...`,l:"engineering/project-structures/synergy/index.html#_1-数据字典使用",a:"_1-数据字典使用"},"93.2":{t:"2. BFF层说明",p:`基本结构：
数据结构基本按照页面功能结构。
举例：入库详情页面：

红色框字段：均为一级属性字段。
蓝色框为数组结构字段：蓝 ...`,l:"engineering/project-structures/synergy/index.html#_2-bff层说明",a:"_2-bff层说明"},"93.3":{t:"3. 接口查询字段需明确",p:"列表查询接口对于查询条件的匹配需要明确。是使用qp-querystring-eq还是qp-querystring-like， ...",l:"engineering/project-structures/synergy/index.html#_3-接口查询字段需明确",a:"_3-接口查询字段需明确"},"93.4":{t:"4. 接口文本展示",p:`接口返回字段 code 转换文本的方式处理。
举例：返回的订单列表当中，在数据库当中，trade表会关联存储一个用户code ...`,l:"engineering/project-structures/synergy/index.html#_4-接口文本展示",a:"_4-接口文本展示"},"93.5":{t:"5. 复杂数据结构处理",p:"",l:"engineering/project-structures/synergy/index.html#_5-复杂数据结构处理",a:"_5-复杂数据结构处理"},"93.6":{t:"6. 日期格式处理",p:"",l:"engineering/project-structures/synergy/index.html#_6-日期格式处理",a:"_6-日期格式处理"},"93.7":{t:"7. 错误文本展示",p:`错误文本展示，对于后端返回的错误信息前端如何处理。

前端显示所有后端返回的错误信息
前端不显示后端返回的错误信息
前端需要 ...`,l:"engineering/project-structures/synergy/index.html#_7-错误文本展示",a:"_7-错误文本展示"},"93.8":{t:"8. 权限处理",p:`
资源权限
数据权限
接口权限

`,l:"engineering/project-structures/synergy/index.html#_8-权限处理",a:"_8-权限处理"},"94.0":{t:"# vite-press 搭建个人博客",p:`现在几乎每个人都会有自己的博客 那么我们今天也来尝试一下
`,l:"engineering/project-structures/vite-press/index.html",a:"vite-press-搭建个人博客"},"94.1":{t:"vitepress 官网",p:`https://vitepress.vuejs.org/
`,l:"engineering/project-structures/vite-press/index.html#vitepress-官网",a:"vitepress-官网"},"94.2":{t:"创建我们自己的个人博客",p:"",l:"engineering/project-structures/vite-press/index.html#创建我们自己的个人博客",a:"创建我们自己的个人博客"},"94.3":{t:"创建项目",p:`mkdir blog &amp;&amp; cd blog &amp;&amp; npm init -y 

这样我们就创建 ...`,l:"engineering/project-structures/vite-press/index.html#创建项目",a:"创建项目"},"94.4":{t:"初始化 git",p:`git init 

`,l:"engineering/project-structures/vite-press/index.html#初始化-git",a:"初始化-git"},"94.5":{t:"下载依赖",p:`yarn add --dev vitepress vue

`,l:"engineering/project-structures/vite-press/index.html#下载依赖",a:"下载依赖"},"94.6":{t:"修改 package.json",p:`{
  ...
  &quot;scripts&quot;: {
    &quot;docs:dev&quot;: &qu ...`,l:"engineering/project-structures/vite-press/index.html#修改-package-json",a:"修改-package-json"},"94.7":{t:"就可以直接启动项目了",p:`yarn docs:dev

`,l:"engineering/project-structures/vite-press/index.html#就可以直接启动项目了",a:"就可以直接启动项目了"},"94.8":{t:"添加我们的第一个页面",p:`.
├─ docs
│  ├─ getting-started.md
│  └─ index.md
└─ package.j ...`,l:"engineering/project-structures/vite-press/index.html#添加我们的第一个页面",a:"添加我们的第一个页面"},"94.9":{t:"推荐一个博客模版",p:`https://github.com/2401345934/vitepress-template
`,l:"engineering/project-structures/vite-press/index.html#推荐一个博客模版",a:"推荐一个博客模版"},"94.10":{t:"推荐一个自己的博客",p:`https://2401345934.github.io/vite-press-blog/
感兴趣的小伙伴可以直接 fork ...`,l:"engineering/project-structures/vite-press/index.html#推荐一个自己的博客",a:"推荐一个自己的博客"},"95.0":{t:"# 手把手教你搭建一个生产级的vite SSR项目",p:`
本文不对SSR原理深入解释

!
`,l:"engineering/project-structures/vite-ssr/index.html",a:"手把手教你搭建一个生产级的vite-ssr项目"},"95.1":{t:"技术选型",p:`以上思维导图第一列是我们的目标，第二列是我选择的技术栈。
通过目标导向技术栈，每个目标都对应了许多不同的技术栈，我只是把我选 ...`,l:"engineering/project-structures/vite-ssr/index.html#技术选型",a:"技术选型"},"95.2":{t:"开始搭建",p:`有了选型了，那我们可以快速搭建项目模板了
`,l:"engineering/project-structures/vite-ssr/index.html#开始搭建",a:"开始搭建"},"95.3":{t:"初始化",p:`推荐使用 vite-plugin-ssrcli初始化项目
npm init vite-plugin-ssr@latest

 ...`,l:"engineering/project-structures/vite-ssr/index.html#初始化",a:"初始化"},"95.4":{t:"ESM",p:`我们全程使用ESM规范开发，package.json 中设置 type
&quot;type&quot;: &quot;mo ...`,l:"engineering/project-structures/vite-ssr/index.html#esm",a:"esm"},"95.5":{t:"pnpm",p:`pnpm相对npm速度快很多，且做了依赖优化。package.json中 限制只能使用 pnpm
&quot;scripts ...`,l:"engineering/project-structures/vite-ssr/index.html#pnpm",a:"pnpm"},"95.6":{t:"eslint",p:`eslint可以根据规则校验代码是否符合规范
eslint看团队或个人习惯，这里给个例子
`,l:"engineering/project-structures/vite-ssr/index.html#eslint",a:"eslint"},"95.7":{t:"安装",p:"pnpm add eslint eslint-define-config eslint-plugin-react eslin ...",l:"engineering/project-structures/vite-ssr/index.html#安装",a:"安装"},"95.8":{t:"vscode插件",p:`eslint插件ID：dbaeumer.vscode-eslint
为了方便大家都安装了这些插件，我把插件写在了 .vsco ...`,l:"engineering/project-structures/vite-ssr/index.html#vscode插件",a:"vscode插件"},"95.9":{t:"配置 (.eslintrc.cjs)",p:`const { defineConfig } = require('eslint-define-config')

modu ...`,l:"engineering/project-structures/vite-ssr/index.html#配置-eslintrc-cjs",a:"配置-eslintrc-cjs"},"95.10":{t:"eslint ignore",p:`设置不需要eslint处理的文件
*.sh
node_modules
*.woff
*.ttf
.vscode
.local ...`,l:"engineering/project-structures/vite-ssr/index.html#eslint-ignore",a:"eslint-ignore"},"95.11":{t:"prettier",p:`prettier可以格式化代码，也可按照团队或个人风格相应修改
`,l:"engineering/project-structures/vite-ssr/index.html#prettier",a:"prettier"},"95.12":{t:"安装",p:`pnpm add prettier -D

`,l:"engineering/project-structures/vite-ssr/index.html#安装",a:"安装"},"95.13":{t:"配置 (.pretterrc.cjs)",p:`/** @type {import('prettier').Config} */
module.exports = {
   ...`,l:"engineering/project-structures/vite-ssr/index.html#配置-pretterrc-cjs",a:"配置-pretterrc-cjs"},"95.14":{t:"commitlint",p:`commitlint可以根据规则检查我们的git commit是否符合规范
`,l:"engineering/project-structures/vite-ssr/index.html#commitlint",a:"commitlint"},"95.15":{t:"安装",p:`pnpm add @commitlint/config-conventional @commitlint/cli -D

`,l:"engineering/project-structures/vite-ssr/index.html#安装",a:"安装"},"95.16":{t:"配置(commitlint.config.cjs)",p:`module.exports = {
  extends: ['@commitlint/config-conventiona ...`,l:"engineering/project-structures/vite-ssr/index.html#配置-commitlint-config-cjs",a:"配置-commitlint-config-cjs"},"95.17":{t:"手动添加commit msg",p:`!
手动添加只适合咱们了解原理，为了团队协作和减少开发负担，我们尽量选择自动添加
`,l:"engineering/project-structures/vite-ssr/index.html#手动添加commit-msg",a:"手动添加commit-msg"},"95.18":{t:"自动添加commit msg",p:`目前市面上比较流行的是 husky，我个人喜欢使用 simple-git-hooks。
`,l:"engineering/project-structures/vite-ssr/index.html#自动添加commit-msg",a:"自动添加commit-msg"},"95.19":{t:"安装",p:`pnpm add simple-git-hooks -D


`,l:"engineering/project-structures/vite-ssr/index.html#安装",a:"安装"},"95.20":{t:"配置",p:`在package.json的hook中触发 simple-git-hooks 初始化
&quot;scripts&quot; ...`,l:"engineering/project-structures/vite-ssr/index.html#配置",a:"配置"},"95.21":{t:"配合tsconfig path设置路径别名",p:`resolve: {
  alias: [
    { find: '@', replacement: path.resol ...`,l:"engineering/project-structures/vite-ssr/index.html#配合tsconfig-path设置路径别名",a:"配合tsconfig-path设置路径别名"},"95.22":{t:"服务端路由与客户端路由",p:`服务端路由适合简单，页面之间没有关联的项目，页面跳转时都会经历一次服务端渲染
客户端渲染适合复杂，页面之间有关联的项目，首次 ...`,l:"engineering/project-structures/vite-ssr/index.html#服务端路由与客户端路由",a:"服务端路由与客户端路由"},"95.23":{t:"使用方式",p:`import { navigate } from 'vite-plugin-ssr/client/router'

navi ...`,l:"engineering/project-structures/vite-ssr/index.html#使用方式",a:"使用方式"},"95.24":{t:"安装",p:`pnpm add http-proxy-middleware -D


`,l:"engineering/project-structures/vite-ssr/index.html#安装",a:"安装"},"95.25":{t:"使用",p:`const proxy = import.meta.VITE_PROXY
if (proxy) {
  const { cr ...`,l:"engineering/project-structures/vite-ssr/index.html#使用",a:"使用"},"95.26":{t:"重置样式 + 引入tailwindcss",p:`@import 'antd/dist/reset.css';
@tailwind base;
@tailwind compo ...`,l:"engineering/project-structures/vite-ssr/index.html#重置样式-引入tailwindcss",a:"重置样式-引入tailwindcss"},"95.27":{t:"tailwind配置",p:"",l:"engineering/project-structures/vite-ssr/index.html#tailwind配置",a:"tailwind配置"},"95.28":{t:"响应式布局",p:`/** @type {import('tailwindcss').Config} */
module.exports = { ...`,l:"engineering/project-structures/vite-ssr/index.html#响应式布局",a:"响应式布局"},"95.29":{t:"postcss配置",p:`postcss插件执行顺序是从上到下，所以 autoprefixer（一个处理css浏览器兼容的插件）放在最后
module ...`,l:"engineering/project-structures/vite-ssr/index.html#postcss配置",a:"postcss配置"},"95.30":{t:"移动端兼容",p:`现在流行三种布局方案

响应式
pxtorem自适应
pxtoviewport自适应

`,l:"engineering/project-structures/vite-ssr/index.html#移动端兼容",a:"移动端兼容"},"95.31":{t:"响应式",p:`响应式是比较麻烦的，因为需要针对不同的分辨率增加css代码，维护成本和难度相比自适应布局更难
但tailwind使得响应式布 ...`,l:"engineering/project-structures/vite-ssr/index.html#响应式",a:"响应式"},"95.32":{t:"pxtorem方案",p:`需要配合动态rem使用。监听窗口变化同时设置rem。
pxtorem相对比pxtoviewport，前者可以做到限制最大宽度 ...`,l:"engineering/project-structures/vite-ssr/index.html#pxtorem方案",a:"pxtorem方案"},"95.33":{t:"pxtoviewport方案",p:`module.exports = {
  plugins: {
    'tailwindcss/nesting': {}, ...`,l:"engineering/project-structures/vite-ssr/index.html#pxtoviewport方案",a:"pxtoviewport方案"},"95.34":{t:"响应式 + 自适应",p:`一种奇怪的组合，但有可能真的会遇到这种需求。此时我们可以这样做：
`,l:"engineering/project-structures/vite-ssr/index.html#响应式-自适应",a:"响应式-自适应"},"95.35":{t:"第一步",p:`正常如上配置 pxtorem / pxtoviewport
`,l:"engineering/project-structures/vite-ssr/index.html#第一步",a:"第一步"},"95.36":{t:"第二步",p:`如果不希望转换，就用大写PX。如果希望转化，就用小写px
class=&quot;lg:text-[length:16PX] ...`,l:"engineering/project-structures/vite-ssr/index.html#第二步",a:"第二步"},"95.37":{t:"第三步",p:`经过pxtorem/pxtoviewport的 convertUnitOnEnd处理后，把 PX转成 px
扩展
至此，我们 ...`,l:"engineering/project-structures/vite-ssr/index.html#第三步",a:"第三步"},"95.38":{t:"light.css",p:`html {
  --color-primary: blue;
}


`,l:"engineering/project-structures/vite-ssr/index.html#light-css",a:"light-css"},"95.39":{t:"dark.css",p:`html[class*='dark'] {
  --color-primary: green;
}


`,l:"engineering/project-structures/vite-ssr/index.html#dark-css",a:"dark-css"},"95.40":{t:"tailwind dark配置",p:`const path = require('node:path')
const fs = require('fs-extra ...`,l:"engineering/project-structures/vite-ssr/index.html#tailwind-dark配置",a:"tailwind-dark配置"},"95.41":{t:"antd",p:"",l:"engineering/project-structures/vite-ssr/index.html#antd",a:"antd"},"95.42":{t:"获取当前网页的主题",p:`export enum Theme {
  dark = 'dark',
  light = 'light',
}

con ...`,l:"engineering/project-structures/vite-ssr/index.html#获取当前网页的主题",a:"获取当前网页的主题"},"95.43":{t:"文本国际化",p:`i18next有非常丰富的社区生态
由于我们是SSR国际化，所以需要在服务端跟客户端语言同步，那么服务端就需要在收到客户端请 ...`,l:"engineering/project-structures/vite-ssr/index.html#文本国际化",a:"文本国际化"},"95.44":{t:"i18next",p:"",l:"engineering/project-structures/vite-ssr/index.html#i18next",a:"i18next"},"95.45":{t:"服务端",p:`在服务端只用i18next来侦测语言，不需要locale资源
import i18next from 'i18next'
i ...`,l:"engineering/project-structures/vite-ssr/index.html#服务端",a:"服务端"},"95.46":{t:"客户端和服务端渲染",p:"服务端拿到客户端语言后，也需要注水相应的语言。此时服务端跟客户端语言已经一致了，那么服务端就可以使用客户端的i18next实 ...",l:"engineering/project-structures/vite-ssr/index.html#客户端和服务端渲染",a:"客户端和服务端渲染"},"95.47":{t:"react-i18next",p:"在 i18next 初始化的时候使用到了 react-i18next，它带来的能力是SSR(I18nextProvider) ...",l:"engineering/project-structures/vite-ssr/index.html#react-i18next",a:"react-i18next"},"95.48":{t:"国际化 vscode插件",p:`至此，国际化已经可以使用。为了更方便看到国际化的结果，我们可以使用vscode插件：lokalise.i18n-ally
`,l:"engineering/project-structures/vite-ssr/index.html#国际化-vscode插件",a:"国际化-vscode插件"},"95.49":{t:"配置",p:`.vscode/setting.json
{
  &quot;i18n-ally.localesPaths&quot;: [ ...`,l:"engineering/project-structures/vite-ssr/index.html#配置",a:"配置"},"96.0":{t:"# vue3+vite+ts+vuex+vue-router+Element-plus+tailwindcss+mock 搭建完整项目",p:"",l:"engineering/project-structures/vue3-project/index.html",a:"vue3-vite-ts-vuex-vue-router-element-plus-tailwindcss-mock-搭建完整项目"},"96.1":{t:"一，介绍",p:`Vite（法语单词，“快” 的意思）是一种新型的前端构建工具
最初是配合 Vue3.0 一起使用的，后来适配了各种前端项目， ...`,l:"engineering/project-structures/vue3-project/index.html#一-介绍",a:"一-介绍"},"96.2":{t:"2.2.2 新增路由页面",p:"为了方便演示，我们再新增两个路由页面。熟悉，创建views文件夹，把需要展示的页面创建完成。然后，我们在router/ind ...",l:"engineering/project-structures/vue3-project/index.html#_2-2-2-新增路由页面",a:"_2-2-2-新增路由页面"},"96.3":{t:"2.4.1 引入element-plus",p:"我们可以引入整个 element-plus，也可以根据需要仅引入部分组件。如果是全部引入，只需要在main.js 添加如下代 ...",l:"engineering/project-structures/vue3-project/index.html#_2-4-1-引入element-plus",a:"_2-4-1-引入element-plus"},"96.4":{t:"2.4.2 添加配置",p:"引入 Element Plus后，我们可以添加一个全局配置对象。该对象目前支持 size 与 zIndex 字段。size  ...",l:"engineering/project-structures/vue3-project/index.html#_2-4-2-添加配置",a:"_2-4-2-添加配置"},"96.5":{t:"2.4.3 配置proxy 和 alias",p:`如果要在Vite中使用alias别名配置和proxy代理配置，那么需要在vite.config.ts文件中进行单独的配置。
 ...`,l:"engineering/project-structures/vue3-project/index.html#_2-4-3-配置proxy-和-alias",a:"_2-4-3-配置proxy-和-alias"},"96.6":{t:"安装",p:"npm install -D tailwindcss@latest postcss@latest autoprefixer@ ...",l:"engineering/project-structures/vue3-project/index.html#安装",a:"安装"},"96.7":{t:"介绍",p:`mock.js 官网：mockjs.com/
目前的大部分公司的项目都是采用的前后端分离, 后端接口的开发和前端人员是同时进 ...`,l:"engineering/project-structures/vue3-project/index.html#介绍",a:"介绍"},"96.8":{t:"使用",p:"",l:"engineering/project-structures/vue3-project/index.html#使用",a:"使用"},"96.9":{t:"①下载",p:`npm install mockjs


`,l:"engineering/project-structures/vue3-project/index.html#_1下载",a:"_1下载"},"96.10":{t:"②引入",p:`Mock.js暴露了一个全局的Mock对象, 我们只需要将Mock对象引入到文件中, 调用Mock对象的方法即可
Commo ...`,l:"engineering/project-structures/vue3-project/index.html#_2引入",a:"_2引入"},"96.11":{t:"③Mock.js的规范",p:`'list|1-10': [{
  'id|+1': 1
}]


上面的代码被称为数据模板, 用于告诉Mock.js生成什 ...`,l:"engineering/project-structures/vue3-project/index.html#_3mock-js的规范",a:"_3mock-js的规范"},"96.12":{t:"Mock.mock()",p:`Mock.mock()方法是用来根据数据模板生成模拟数据, 我常用到的是以下两种传参方式:
Mock.mock(templa ...`,l:"engineering/project-structures/vue3-project/index.html#mock-mock",a:"mock-mock"},"96.13":{t:"Mock.Random",p:`Mock.Random是Mock.js提供一个工具类, 用于生成常用的几种数据.
生成布尔值
//使用@占位符的方式
 le ...`,l:"engineering/project-structures/vue3-project/index.html#mock-random",a:"mock-random"},"96.14":{t:"在 Vite2 与 Vue3 中使用Mockjs来模拟数据",p:`
安装mockjs

npm install mockjs --save-dev



安装vite-plugin-mock ...`,l:"engineering/project-structures/vue3-project/index.html#在-vite2-与-vue3-中使用mockjs来模拟数据",a:"在-vite2-与-vue3-中使用mockjs来模拟数据"},"97.0":{t:"# 从0搭建 Vite 3 + Vue 3",p:`
基础搭建
代码规范
提交规范
自动部署

`,l:"engineering/project-structures/vue3-vite/index.html",a:"从0搭建-vite-3-vue-3"},"97.1":{t:"技术栈",p:`
⚡️ Vite 3 - 构建工具（就是快！）
🖖 Vue 3 - 渐进式 JavaScript 框架
🚦 Vue Ro ...`,l:"engineering/project-structures/vue3-vite/index.html#技术栈",a:"技术栈"},"97.2":{t:"基础搭建",p:`构建项目雏形
确保你安装了最新版本的 Node.js，然后在命令行中运行以下命令：
# npm 6.x
npm create ...`,l:"engineering/project-structures/vue3-vite/index.html#基础搭建",a:"基础搭建"},"97.3":{t:"安装依赖",p:`npm i vue-router@4

`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.4":{t:"创建路由配置文件",p:`在 src/router 目录下新建 index.js 文件与 modules 文件夹
└── src/
    ├── r ...`,l:"engineering/project-structures/vue3-vite/index.html#创建路由配置文件",a:"创建路由配置文件"},"97.5":{t:"挂载路由配置",p:`在 main.js 文件中挂载路由配置
import { createApp } from 'vue';

import A ...`,l:"engineering/project-structures/vue3-vite/index.html#挂载路由配置",a:"挂载路由配置"},"97.6":{t:"安装依赖",p:`npm i pinia

`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.7":{t:"创建仓库配置文件",p:`在 src/store 目录下新建 index.js 文件与 modules 文件夹
└── src/
    ├── st ...`,l:"engineering/project-structures/vue3-vite/index.html#创建仓库配置文件",a:"创建仓库配置文件"},"97.8":{t:"挂载 Pinia 配置",p:`在 main.js 文件中挂载 Vuex 配置
import { createApp } from 'vue';

impo ...`,l:"engineering/project-structures/vue3-vite/index.html#挂载-pinia-配置",a:"挂载-pinia-配置"},"97.9":{t:"安装依赖",p:`npm i tdesign-vue-next


`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.10":{t:"基础使用",p:`import { createApp } from 'vue';

import TDesign from 'tdesign ...`,l:"engineering/project-structures/vue3-vite/index.html#基础使用",a:"基础使用"},"97.11":{t:"按需引入",p:`使用 unplugin-vue-components 和 unplugin-auto-import 来实现自动导入：
npm ...`,l:"engineering/project-structures/vue3-vite/index.html#按需引入",a:"按需引入"},"97.12":{t:"安装依赖",p:`npm i axios


`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.13":{t:"请求配置",p:`在 utils 目录下创建 request.js 文件，配置好适合自己业务的请求拦截和响应拦截：
└── src/
 ├── ...`,l:"engineering/project-structures/vue3-vite/index.html#请求配置",a:"请求配置"},"97.14":{t:"模拟演示",p:`在需要使用接口的地方，引入对应的业务模型文件，参考如下：



集成 CSS 预处理器 Less
本项目使用 CSS 预处理 ...`,l:"engineering/project-structures/vue3-vite/index.html#模拟演示",a:"模拟演示"},"97.15":{t:"安装依赖",p:`npm i less -D


`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.16":{t:"如何使用",p:`在 \`\` 样式标签中引用 lang=&quot;less&quot; 即可。




CSS 命名规范推荐 BEM 命名规范 ...`,l:"engineering/project-structures/vue3-vite/index.html#如何使用",a:"如何使用"},"97.17":{t:"全局样式",p:`在 src/style 目录下创建 variables.less 全局样式文件：
└── src/
    ├── styl ...`,l:"engineering/project-structures/vue3-vite/index.html#全局样式",a:"全局样式"},"97.18":{t:"样式穿透",p:`官方文档
在 Vue3 中，改变了以往样式穿透的语法，如果继续使用 ::v-deep、/deep/、&gt;&gt;&gt; ...`,l:"engineering/project-structures/vue3-vite/index.html#样式穿透",a:"样式穿透"},"97.19":{t:"代码规范",p:"随着前端应用逐渐变得大型化和复杂化，在同一个项目中有多个人员参与时，每个人的前端能力程度不等，他们往往会用不同的编码风格和习 ...",l:"engineering/project-structures/vue3-vite/index.html#代码规范",a:"代码规范"},"97.20":{t:"安装依赖",p:`
图片 - ESLint 本体
图片 - 改善 ESLint 规范编写体验
图片 - 适用于 Vue 文件的 ESLint  ...`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.21":{t:"安装插件",p:`Visual Studio Code 编辑器使用 ESLint 配置需要下载插件 ESLint 。
!ESLint
JetB ...`,l:"engineering/project-structures/vue3-vite/index.html#安装插件",a:"安装插件"},"97.22":{t:"创建 ESLint 配置文件",p:`在项目根目录创建 .eslintrc.js 文件，并填入以下内容：
const { defineConfig } = req ...`,l:"engineering/project-structures/vue3-vite/index.html#创建-eslint-配置文件",a:"创建-eslint-配置文件"},"97.23":{t:"创建 ESLint 过滤规则",p:`在项目根目录添加一个 .eslintignore 文件，内容如下：
dist
node_modules
!.prettier ...`,l:"engineering/project-structures/vue3-vite/index.html#创建-eslint-过滤规则",a:"创建-eslint-过滤规则"},"97.24":{t:"安装依赖",p:`npm i prettier -D

`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.25":{t:"安装插件",p:"Visual Studio Code 编辑器使用 Prettier 配置需要下载插件 Prettier - Code for ...",l:"engineering/project-structures/vue3-vite/index.html#安装插件",a:"安装插件"},"97.26":{t:"创建 Prettier 配置文件",p:`Prettier 支持多种格式的配置文件，比如 .json、.yml、.yaml、.js等。
在项目根目录创建 .prett ...`,l:"engineering/project-structures/vue3-vite/index.html#创建-prettier-配置文件",a:"创建-prettier-配置文件"},"97.27":{t:"创建 Prettier 过滤规则",p:`在项目根目录添加一个 .prettierignore 文件，内容如下：

`,l:"engineering/project-structures/vue3-vite/index.html#创建-prettier-过滤规则",a:"创建-prettier-过滤规则"},"97.28":{t:"OS",p:`.DS_Store
.idea
.editorconfig
pnpm-lock.yaml
.npmrc
Ignored su ...`,l:"engineering/project-structures/vue3-vite/index.html#os",a:"os"},"97.29":{t:"Local",p:`.husky
`,l:"engineering/project-structures/vue3-vite/index.html#local",a:"local"},"97.30":{t:"Built-files",p:`.cache
dist

解决 Prettier 和 ESLint 冲突
-----------------------

 ...`,l:"engineering/project-structures/vue3-vite/index.html#built-files",a:"built-files"},"97.31":{t:"安装依赖",p:`npm i eslint-plugin-prettier eslint-config-prettier -D


`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.32":{t:"修改 ESLint 配置文件",p:"修改 .eslintrc.js 文件，在 extends 中添加 plugin:prettier/recommended 规 ...",l:"engineering/project-structures/vue3-vite/index.html#修改-eslint-配置文件",a:"修改-eslint-配置文件"},"97.33":{t:"安装依赖",p:`
Stylelint - Stylelint 本体
stylelint-config-prettier - 关闭 Style ...`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.34":{t:"安装插件",p:`Visual Studio Code 编辑器使用 Stylelint 配置需要下载插件 Stylelint 。
!Style ...`,l:"engineering/project-structures/vue3-vite/index.html#安装插件",a:"安装插件"},"97.35":{t:"创建 Stylelint 配置文件",p:`在项目根目录创建 .stylelintrc.js 文件，并填入以下内容：
module.exports = {
  root ...`,l:"engineering/project-structures/vue3-vite/index.html#创建-stylelint-配置文件",a:"创建-stylelint-配置文件"},"97.36":{t:"创建 Stylelint 过滤规则",p:`在项目根目录添加一个 .stylelintignore 文件，内容如下：
# .stylelintignore
# 旧的不需 ...`,l:"engineering/project-structures/vue3-vite/index.html#创建-stylelint-过滤规则",a:"创建-stylelint-过滤规则"},"97.37":{t:"启用 Vue 文件支持",p:`Stylelint v14 版本默认不支持 vue 文件中的 style 代码自动检测，详情查看官方迁移指南
`,l:"engineering/project-structures/vue3-vite/index.html#启用-vue-文件支持",a:"启用-vue-文件支持"},"97.38":{t:"安装依赖",p:`
stylelint-config-html - 解析 vue 文件
postcss-html - 使用 stylelint ...`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.39":{t:"修改 Stylelint 配置文件",p:`修改 .stylelintrc.js 文件，添加如下配置：
module.exports = {
  overrides:  ...`,l:"engineering/project-structures/vue3-vite/index.html#修改-stylelint-配置文件",a:"修改-stylelint-配置文件"},"97.40":{t:"修改 Visual Studio Code 工作区配置",p:`Visual Studio Code 在 settings.json 设置文件中，增加以下代码：
{
  &quot;sty ...`,l:"engineering/project-structures/vue3-vite/index.html#修改-visual-studio-code-工作区配置",a:"修改-visual-studio-code-工作区配置"},"97.41":{t:"配置 husky",p:`
注意：本项目使用 husky 6.x 版本，6.x 版本配置方式跟之前版本有较大差异，当发现配置方法不一致时，一切以 hu ...`,l:"engineering/project-structures/vue3-vite/index.html#配置-husky",a:"配置-husky"},"97.42":{t:"配置 lint-staged",p:"lint-staged 一般结合 husky 来使用，它可以让 husky 的 hook 触发的命令只作用于 git 暂存区 ...",l:"engineering/project-structures/vue3-vite/index.html#配置-lint-staged",a:"配置-lint-staged"},"97.43":{t:"安装依赖",p:`npm i lint-staged -D


`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.44":{t:"新增配置",p:`在 package.json 里增加 lint-staged 配置项：
{
  &quot;lint-staged&quot ...`,l:"engineering/project-structures/vue3-vite/index.html#新增配置",a:"新增配置"},"97.45":{t:"修改触发命令",p:`修改 .husky/pre-commit 文件触发命令为：
npx lint-staged


!pre-commit
经过 ...`,l:"engineering/project-structures/vue3-vite/index.html#修改触发命令",a:"修改触发命令"},"97.46":{t:"提交规范",p:"多人协作项目中，在提交代码环节，也存在一种情况：不能保证每个人对提交信息的准确描述，因此会出现提交信息紊乱、风格不一致的情况 ...",l:"engineering/project-structures/vue3-vite/index.html#提交规范",a:"提交规范"},"97.47":{t:"Header",p:`Header 部分包括三个字段 type（必需）、scope（可选）和 subject（必需）。
&lt;type&gt;( ...`,l:"engineering/project-structures/vue3-vite/index.html#header",a:"header"},"97.48":{t:"Body",p:`body 是对本次 commit 的详细描述，可以分成多行。
跟 subject 类似，用动词开头，body 应该说明修改的 ...`,l:"engineering/project-structures/vue3-vite/index.html#body",a:"body"},"97.49":{t:"Footer",p:`如果本次提交的代码是突破性的变更或关闭缺陷，则 Footer 必需，否则可以省略。


突破性的变更
当前代码与上一个版本有 ...`,l:"engineering/project-structures/vue3-vite/index.html#footer",a:"footer"},"97.50":{t:"参考例子",p:`

feat
feat(browser): onUrlChange event (popstate/hashchange/p ...`,l:"engineering/project-structures/vue3-vite/index.html#参考例子",a:"参考例子"},"97.51":{t:"安装依赖",p:`npm install -D cz-git


`,l:"engineering/project-structures/vue3-vite/index.html#安装依赖",a:"安装依赖"},"97.52":{t:"指定适配器",p:`修改 package.json 文件，添加 config 指定使用的适配器
{
  &quot;scripts&quot;: ...`,l:"engineering/project-structures/vue3-vite/index.html#指定适配器",a:"指定适配器"},"97.53":{t:"自定义配置（可选）",p:`cz-git 与 commitlint 进行联动给予校验信息，所以可以编写于 commitlint 配置文件之中。
例如：( ...`,l:"engineering/project-structures/vue3-vite/index.html#自定义配置-可选",a:"自定义配置-可选"},"97.54":{t:"全局使用",p:`
全局安装的好处在于：在任何项目下都可以利用 cz 或 git cz 命令启动命令行工具，生成标准化 commit mess ...`,l:"engineering/project-structures/vue3-vite/index.html#全局使用",a:"全局使用"},"97.55":{t:"安装全局依赖",p:`npm install -g cz-git commitizen


`,l:"engineering/project-structures/vue3-vite/index.html#安装全局依赖",a:"安装全局依赖"},"97.56":{t:"全局配置适配器类型",p:`echo '{ &quot;path&quot;: &quot;cz-git&quot; }' &gt; ~/.czrc

 ...`,l:"engineering/project-structures/vue3-vite/index.html#全局配置适配器类型",a:"全局配置适配器类型"},"97.57":{t:"自定义配置（可选）",p:`方式一： 编辑 ~/.czrc 文件以 json 形式添加配置，例如：
{
  &quot;path&quot;: &quo ...`,l:"engineering/project-structures/vue3-vite/index.html#自定义配置-可选",a:"自定义配置-可选"},"97.58":{t:"安装",p:`
@commitlint/cli - Commitlint 本体
@commitlint/config-convention ...`,l:"engineering/project-structures/vue3-vite/index.html#安装",a:"安装"},"97.59":{t:"配置",p:`在项目根目录创建 commitlint.config.js 文件，并填入以下内容：
module.exports = {
  ...`,l:"engineering/project-structures/vue3-vite/index.html#配置",a:"配置"},"97.60":{t:"自动部署",p:`本章节将介绍如何使用 CI（Continuous Integration 持续集成）服务来完成项目部署工作。
常见的 CI  ...`,l:"engineering/project-structures/vue3-vite/index.html#自动部署",a:"自动部署"},"97.61":{t:"创建 GitHub 仓库",p:`因为 GitHub Actions 只对 GitHub 仓库有效，所以创建 GitHub 仓库来托管项目代码。
!创建 Gi ...`,l:"engineering/project-structures/vue3-vite/index.html#创建-github-仓库",a:"创建-github-仓库"},"98.0":{t:"# 数据埋点起步",p:"",l:"engineering/sdk/buried-point/index.html",a:"数据埋点起步"},"98.1":{t:"认识数据埋点 SDK",p:`
SDK 全称是 Software Development Kit 即 软件开发工具包，一般都是一些软件工程师为特定的软件包 ...`,l:"engineering/sdk/buried-point/index.html#认识数据埋点-sdk",a:"认识数据埋点-sdk"},"98.2":{t:"用户行为",p:`用户行为就是在网页应用中进行的一系列操作，但用户的操作有很多种，都需要记录下来是不可能的，一般需要记录用户的以下几种行为：
 ...`,l:"engineering/sdk/buried-point/index.html#用户行为",a:"用户行为"},"98.3":{t:"错误警告",p:"页面中代码运行产生的错误，可能会导致用户核心操作流程被中断，为了避免大量用户受到影响，我们需要获取 生产环境的错误数据，这样 ...",l:"engineering/sdk/buried-point/index.html#错误警告",a:"错误警告"},"98.4":{t:"页面性能",p:"页面性能其实也是前端性能优化中一个需要考虑和优化的点，毕竟如果一个网站老是发生 白屏、交互卡顿、页面资源加载时间长 等问题， ...",l:"engineering/sdk/buried-point/index.html#页面性能",a:"页面性能"},"98.5":{t:"设计前端数据埋点 SDK",p:"这里只我们考虑数据埋点的核心内容，因此不会涉及得肯定没有那么全面，而一开始也不可能设计得全面，只要保证核心功能，那么在基于核 ...",l:"engineering/sdk/buried-point/index.html#设计前端数据埋点-sdk",a:"设计前端数据埋点-sdk"},"98.6":{t:"应用的唯一标识 — options.AppId",p:"数据埋点 SDK 作为一个通用的工具集，是可供多个系统进行使用的，而这就意味着需要去保证每个应用的唯一性，一般来讲，在初始化 ...",l:"engineering/sdk/buried-point/index.html#应用的唯一标识-—-options-appid",a:"应用的唯一标识-—-options-appid"},"98.7":{t:"数据发送格式 — data",p:`由于需要收集的数据类型包含多种，最好能够定义一种比较通用的数据格式，便于更友好地进行数据收集。
这里简单定义一下数据格式，大 ...`,l:"engineering/sdk/buried-point/index.html#数据发送格式-—-data",a:"数据发送格式-—-data"},"98.8":{t:"统计 PV 和 UV — 自动触发埋点",p:"关于 PV 和 UV 在上述已经做过介绍了，本质上这两个数据统计都可在一个上报类型为 action 数据发送中获得，主要看监 ...",l:"engineering/sdk/buried-point/index.html#统计-pv-和-uv-—-自动触发埋点",a:"统计-pv-和-uv-—-自动触发埋点"},"98.9":{t:"统计用户点击按钮 — 交互式触发埋点",p:"假设我们希望记录某些按钮的使用次数的数据，可以在 document 上监听 click 事件，目的利用事件冒泡以便于不需要侵 ...",l:"engineering/sdk/buried-point/index.html#统计用户点击按钮-—-交互式触发埋点",a:"统计用户点击按钮-—-交互式触发埋点"},"98.10":{t:"全局错误",p:`全局错误，即未被捕获的错误，可以通过 window.onerror 事件来捕获，然后进行错误数据上报，大致如下：
windo ...`,l:"engineering/sdk/buried-point/index.html#全局错误",a:"全局错误"},"98.11":{t:"局部错误",p:"局部错误，即通过 try...catch、promise.then、promise.catch 等捕获的错误，大致使用如下： ...",l:"engineering/sdk/buried-point/index.html#局部错误",a:"局部错误"},"98.12":{t:"接口请求错误",p:"接口请求错误，即在二次封装请求 API 中进行请求和接收响应时的错误，为了方便这里以 axios 来举例子，我们可以在它的  ...",l:"engineering/sdk/buried-point/index.html#接口请求错误",a:"接口请求错误"},"98.13":{t:"组件级错误",p:"组件级错误，即使用 Vue / React 框架组件时发生的错误，完全可以使用它们在官方文档中提到的错误捕获方式来捕获并上报 ...",l:"engineering/sdk/buried-point/index.html#组件级错误",a:"组件级错误"},"99.0":{t:"# 从0到1搭建前端监控平台",p:`文章分成以下六部分来介绍：


自研监控平台解决了哪些痛点，实现了什么亮点功能？


相比sentry等监控方案，自研监控的 ...`,l:"engineering/sdk/monitoring-platform/index.html",a:"从0到1搭建前端监控平台"},"99.1":{t:"定位源码",p:`项目出错，要是能定位到源码就好了，可线上的项目都是打包后的代码，也不能把 .map 文件放到线上
监控平台通过 source ...`,l:"engineering/sdk/monitoring-platform/index.html#定位源码",a:"定位源码"},"99.2":{t:"播放录屏",p:"多数场景下，定位到具体的源码，就可以定位bug，但如果是用户做了异常操作，或者是在某些复杂操作下才出现的bug，仅仅通过定位 ...",l:"engineering/sdk/monitoring-platform/index.html#播放录屏",a:"播放录屏"},"99.3":{t:"记录用户行为",p:`通过 定位源码 + 播放录屏 这套组合，还原错误应该够用了，同时监控平台也提供了 记录用户行为 这种方式
假如用户做了很多操 ...`,l:"engineering/sdk/monitoring-platform/index.html#记录用户行为",a:"记录用户行为"},"99.4":{t:"监控目的",p:`!title.png
`,l:"engineering/sdk/monitoring-platform/index.html#监控目的",a:"监控目的"},"99.5":{t:"异常分析",p:`按照 5W1H 法则来分析前端异常，需要知道以下信息

What，发⽣了什么错误：JS错误、异步错误、资源加载、接口错误等
 ...`,l:"engineering/sdk/monitoring-platform/index.html#异常分析",a:"异常分析"},"99.6":{t:"错误捕获方式",p:`1）try/catch
只能捕获代码常规的运行错误，语法错误和异步错误不能捕获到
示例：
// 示例1：常规运行时错误，可以 ...`,l:"engineering/sdk/monitoring-platform/index.html#错误捕获方式",a:"错误捕获方式"},"99.7":{t:"Vue 错误",p:`Vue项目中，window.onerror 和 error 事件不能捕获到常规的代码错误
异常代码：
export defa ...`,l:"engineering/sdk/monitoring-platform/index.html#vue-错误",a:"vue-错误"},"99.8":{t:"React 错误",p:"从 react16 开始，官方提供了 ErrorBoundary 错误边界的功能，被该组件包裹的子组件，render 函数报 ...",l:"engineering/sdk/monitoring-platform/index.html#react-错误",a:"react-错误"},"99.9":{t:"跨域问题",p:"如果当前页面中，引入了其他域名的JS资源，如果资源出现错误，error 事件只会监测到一个 script error 的异常 ...",l:"engineering/sdk/monitoring-platform/index.html#跨域问题",a:"跨域问题"},"99.10":{t:"接口错误",p:"接口监控的实现原理：针对浏览器内置的 XMLHttpRequest、fetch 对象，利用 AOP 切片编程重写该方法，实现 ...",l:"engineering/sdk/monitoring-platform/index.html#接口错误",a:"接口错误"},"99.11":{t:"设计思路",p:`1、通过Breadcrumb类来创建用户行为的对象，来存储和管理所有的用户行为
2、通过重写或添加相应的事件，完成用户行为数 ...`,l:"engineering/sdk/monitoring-platform/index.html#设计思路",a:"设计思路"},"99.12":{t:"页面跳转",p:"通过监听路由的变化来判断页面跳转，路由有history、hash两种模式，history模式可以监听popstate事件，h ...",l:"engineering/sdk/monitoring-platform/index.html#页面跳转",a:"页面跳转"},"99.13":{t:"用户点击",p:`给 document 对象添加click事件，并上报
function domReplace() {
  document. ...`,l:"engineering/sdk/monitoring-platform/index.html#用户点击",a:"用户点击"},"99.14":{t:"资源加载",p:`获取页面中加载的资源信息，比如它们的 url 是什么、加载了多久、是否来自缓存等，最终生成 资源加载瀑布图
!waterfa ...`,l:"engineering/sdk/monitoring-platform/index.html#资源加载",a:"资源加载"},"99.15":{t:"long task",p:`执行时间超过50ms的任务，被称为 long task 长任务
获取页面的长任务列表：
const entryHandler ...`,l:"engineering/sdk/monitoring-platform/index.html#long-task",a:"long-task"},"99.16":{t:"memory页面内存",p:`performance.memory 可以显示此刻内存占用情况，它是一个动态值，其中：


jsHeapSizeLimit  ...`,l:"engineering/sdk/monitoring-platform/index.html#memory页面内存",a:"memory页面内存"},"99.17":{t:"首屏加载时间",p:`首屏加载时间和首页加载时间不一样，首屏指的是屏幕内的dom渲染完成的时间
比如首页很长需要好几屏展示，这种情况下屏幕以外的元 ...`,l:"engineering/sdk/monitoring-platform/index.html#首屏加载时间",a:"首屏加载时间"},"99.18":{t:"整体架构",p:`!sdkProcess.jpg
整体架构使用 发布-订阅 设计模式，这样设计的好处是便于后续扩展与维护，如果想添加新的hoo ...`,l:"engineering/sdk/monitoring-platform/index.html#整体架构",a:"整体架构"},"99.19":{t:"SDK 入口",p:`src/index.js
对外导出init事件，配置了vue、react项目的不同引入方式
vue项目在Vue.config ...`,l:"engineering/sdk/monitoring-platform/index.html#sdk-入口",a:"sdk-入口"},"99.20":{t:"事件发布与订阅",p:`通过添加监听事件来捕获错误，利用 AOP 切片编程，重写接口请求、路由监听等功能，从而获取对应的数据
src/load.js ...`,l:"engineering/sdk/monitoring-platform/index.html#事件发布与订阅",a:"事件发布与订阅"},"99.21":{t:"用户行为收集",p:`core/breadcrumb.js
创建用户行为类，stack用来存储用户行为，当长度超过限制时，最早的一条数据会被覆盖掉 ...`,l:"engineering/sdk/monitoring-platform/index.html#用户行为收集",a:"用户行为收集"},"99.22":{t:"数据上报方式",p:`支持图片打点上报和fetch请求上报两种方式
图片打点上报的优势：
1）支持跨域，一般而言，上报域名都不是当前域名，上报的接 ...`,l:"engineering/sdk/monitoring-platform/index.html#数据上报方式",a:"数据上报方式"},"99.23":{t:"数据上报时机",p:`优先使用 requestIdleCallback，利用浏览器空闲时间上报，其次使用微任务上报
!queue.png
监控SD ...`,l:"engineering/sdk/monitoring-platform/index.html#数据上报时机",a:"数据上报时机"},"100.0":{t:"# 前端录屏+定位源码",p:`web-see 前端监控方案，提供了 前端录屏+定位源码 方式，让bug无处藏身
这是前端监控的第二篇，该篇讲解如何实现错误 ...`,l:"engineering/sdk/source-bug/index.html",a:"前端录屏-定位源码"},"100.1":{t:"SourceMap 文件",p:`先了解下 SourceMap 的基本内容
例如 app.a2a3ceec.js 代码如下：
var add=function ...`,l:"engineering/sdk/source-bug/index.html#sourcemap-文件",a:"sourcemap-文件"},"100.2":{t:"source-map-js 库",p:`代码还原，这里主要使用 source-map-js 库，下面介绍下如何使用
示例代码：
import sourceMap f ...`,l:"engineering/sdk/source-bug/index.html#source-map-js-库",a:"source-map-js-库"},"100.3":{t:"error-stack-parser 库",p:`通过第一篇文章的介绍，我们知道可以通过多种方式来捕获报错
比如 error事件、unhandledrejection事件、v ...`,l:"engineering/sdk/source-bug/index.html#error-stack-parser-库",a:"error-stack-parser-库"},"100.4":{t:"示例演示",p:`下载 web-see-demo 安装并运行
1）点击 js错误 按钮，会执行 HomeView.vue 文件中的 codeE ...`,l:"engineering/sdk/source-bug/index.html#示例演示",a:"示例演示"},"100.5":{t:"流程总结",p:`!sourcemap.png
如上图所示，定位源码流程总结：
1、项目中引入监控 SDK，打包后将js文件发布到服务器上
2 ...`,l:"engineering/sdk/source-bug/index.html#流程总结",a:"流程总结"},"100.6":{t:"rrweb 使用",p:`先介绍下在vue中如何使用
录制示例：
import { record } from 'rrweb';
// events存 ...`,l:"engineering/sdk/source-bug/index.html#rrweb-使用",a:"rrweb-使用"},"100.7":{t:"rrweb 原理浅析",p:`rrweb 主要由 rrweb 、 rrweb-player 和 rrweb-snapshot 三个库组成：
1）rrweb ...`,l:"engineering/sdk/source-bug/index.html#rrweb-原理浅析",a:"rrweb-原理浅析"},"100.8":{t:"压缩数据",p:`如果一直录屏，数据量是巨大的
实测下来，录制10s的时长，数据大小约为 8M 左右（页面的不同复杂度、用户不同操作的频率都会 ...`,l:"engineering/sdk/source-bug/index.html#压缩数据",a:"压缩数据"},"100.9":{t:"何时上报录屏数据",p:`一般关注的是，页面报错的时候用户做了哪些操作，所以目前只把报错前10s的录屏上报到服务端
如何只上报报错时的录屏信息呢 ？
 ...`,l:"engineering/sdk/source-bug/index.html#何时上报录屏数据",a:"何时上报录屏数据"},"101.0":{t:"基于rem的适配方案",p:`
`,l:"engineering/vite/screen-adaptation/index.html",a:"基于rem的适配方案"},"101.1":{t:"rem是什么？",p:"rem是指相对于根元素的字体大小的单位，在日常开发过程中我们通常把根元素（html/body）的字体设置为10px,方便于我 ...",l:"engineering/vite/screen-adaptation/index.html#rem是什么",a:"rem是什么"},"101.2":{t:"适用场景",p:`不固定宽高比的Web应用，适用于绝大部分业务场景 !px2rem.gif
`,l:"engineering/vite/screen-adaptation/index.html#适用场景",a:"适用场景"},"101.3":{t:"项目实战",p:`
安装依赖

npm i postcss-pxtorem autoprefixer amfe-flexible --save ...`,l:"engineering/vite/screen-adaptation/index.html#项目实战",a:"项目实战"},"101.4":{t:"适用场景",p:`固定宽高比的Web应用，如大屏或者固定窗口业务应用 !scale.gif
`,l:"engineering/vite/screen-adaptation/index.html#适用场景",a:"适用场景"},"101.5":{t:"项目实战",p:`
新建resize.ts/js文件 !QQ图片20220927111729.png

import { ref } from ...`,l:"engineering/vite/screen-adaptation/index.html#项目实战",a:"项目实战"},"102.0":{t:"# Vite 入门篇",p:`本文为稀土掘金技术社区首发签约文章，14天内禁止转载，14天后未获授权禁止转载，侵权必究！
相信大部分兄弟都体验过 Vite ...`,l:"engineering/vite/start/index.html",a:"vite-入门篇"},"102.1":{t:"对 CSS 的处理",p:`CSS Modules
在不同模块中定义相同类名，会导致样式被覆盖，这时候就要用到 CSS module 。以 .modul ...`,l:"engineering/vite/start/index.html#对-css-的处理",a:"对-css-的处理"},"102.2":{t:"对静态资源的处理",p:`

将资源引入为 URL 。默认情况下引入一个静态资源，会返回这个资源的 URL 路径，也就是绝对路径。
import im ...`,l:"engineering/vite/start/index.html#对静态资源的处理",a:"对静态资源的处理"},"102.3":{t:"对 JSON 的处理",p:`JSON 文件可以被直接导入。同时也支持具名导入，帮助我们更好地利用 treeshaking ：
// 导入整个对象
imp ...`,l:"engineering/vite/start/index.html#对-json-的处理",a:"对-json-的处理"},"102.4":{t:"对 Vue 的处理",p:`Vite 为 Vue 提供第一优先级支持，直接使用相应的插件就好了：
Vue 3 支持：@vitejs/plugin-vue ...`,l:"engineering/vite/start/index.html#对-vue-的处理",a:"对-vue-的处理"},"102.5":{t:"对 TS 的处理",p:"Vite 天然支持引入 .ts 文件。Vite 使用 esbuild 将 TypeScript 转译到 JavaScript ...",l:"engineering/vite/start/index.html#对-ts-的处理",a:"对-ts-的处理"},"103.0":{t:"# 从0搭建一个WebRTC，实现多房间多对多通话，并实现屏幕录制",p:`为什么要使用WebRTC
WebRTC全称Web Real-Time Communication，是一种实时音视频的技术，它 ...`,l:"engineering/webRTC/screen-recording/index.html",a:"从0搭建一个webrtc-实现多房间多对多通话-并实现屏幕录制"},"103.1":{t:"enumerateDevices",p:"第一个要介绍的API是enumerateDevices，是请求一个可用的媒体输入和输出设备的列表，例如麦克风，摄像机，耳机设 ...",l:"engineering/webRTC/screen-recording/index.html#enumeratedevices",a:"enumeratedevices"},"103.2":{t:"getUserMedia",p:`这个API顾名思义，就是去获取用户的Meida的，那我们直接执行这个API来看看效果

ps: 由于掘金的代码片段的ifra ...`,l:"engineering/webRTC/screen-recording/index.html#getusermedia",a:"getusermedia"},"103.3":{t:"视频参数配置",p:`interface MediaTrackConstraintSet {
    // 画面比例
    aspectRati ...`,l:"engineering/webRTC/screen-recording/index.html#视频参数配置",a:"视频参数配置"},"103.4":{t:"音频参数配置",p:`interface MediaTrackConstraintSet {
    // 是否开启AGC自动增益，可以在原有音量 ...`,l:"engineering/webRTC/screen-recording/index.html#音频参数配置",a:"音频参数配置"},"103.5":{t:"一对一的流程",p:`我们建立一对一的链接需要知道后流程是怎么流转的，接下来上一张图，便可以清晰的了解
!1825097218-5db028f8d ...`,l:"engineering/webRTC/screen-recording/index.html#一对一的流程",a:"一对一的流程"},"103.6":{t:"初始化",p:`首先启动fastify服务，接下来在Vue项目安装socket.io-client@4然后连接服务端的socket
impo ...`,l:"engineering/webRTC/screen-recording/index.html#初始化",a:"初始化"},"103.7":{t:"创建offer",p:`开始创建RTCPeerConnection，这里采用google的公共stun服务
const peerConnect =  ...`,l:"engineering/webRTC/screen-recording/index.html#创建offer",a:"创建offer"},"103.8":{t:"处理offer",p:"B需要监听socket里面的offer事件并创建RTCPeerConnection，将这个offer设置到远端，接下来来创建 ...",l:"engineering/webRTC/screen-recording/index.html#处理offer",a:"处理offer"},"103.9":{t:"处理answer",p:`服务端广播answer
socket.on('offer', async (offer, callback) =&gt; { ...`,l:"engineering/webRTC/screen-recording/index.html#处理answer",a:"处理answer"},"103.10":{t:"处理ICE-candidate",p:`接下来A会获取到ICE候选信息，需要发送给B
peerConnect.onicecandidate = (candidate ...`,l:"engineering/webRTC/screen-recording/index.html#处理ice-candidate",a:"处理ice-candidate"},"103.11":{t:"处理音视频数据",p:`peerConnect.ontrack = (track: RTCTrackEvent) =&gt; {
    if (t ...`,l:"engineering/webRTC/screen-recording/index.html#处理音视频数据",a:"处理音视频数据"},"103.12":{t:"成员列表的接口",p:"在我们登录socket服务的时候我们在query参数里面有房间号，userId和昵称，我们可以通过redis记录对应的房间号 ...",l:"engineering/webRTC/screen-recording/index.html#成员列表的接口",a:"成员列表的接口"},"103.13":{t:"多对多初始化",p:`由于需要给每个人发送offer，需要对上面的初始化函数进行封装。
/**
 * 创建RTCPeerConnection
 * ...`,l:"engineering/webRTC/screen-recording/index.html#多对多初始化",a:"多对多初始化"},"103.14":{t:"获取成员列表",p:`上面实现了成员列表。接下来进入了对应的房间后需要轮询获取对应的成员列表
let userList = ref([]);
co ...`,l:"engineering/webRTC/screen-recording/index.html#获取成员列表",a:"获取成员列表"},"103.15":{t:"创建多对多的Offer和Answer",p:"在我们获取到视频流的时候，可以对在线列表里除了自己的人都创建一个RTCpeer，来进行一对一连接，从而达到多对多连接的效果。 ...",l:"engineering/webRTC/screen-recording/index.html#创建多对多的offer和answer",a:"创建多对多的offer和answer"},"103.16":{t:"getDisplayMedia",p:`这个API是在MediaDevices里面的一个方法，是用来获取屏幕共享的。

这个 MediaDevices  接口的 g ...`,l:"engineering/webRTC/screen-recording/index.html#getdisplaymedia",a:"getdisplaymedia"},"103.17":{t:"MediaRecorder",p:"获取到屏幕共享流后，需要使用 MediaRecorder这个api来对流进行录制，接下来我们先获取屏幕流,同时创建一个Mei ...",l:"engineering/webRTC/screen-recording/index.html#mediarecorder",a:"mediarecorder"},"104.0":{t:"# WebRTC 的应用场景",p:`
WebRTC (Web Real-Time Communications) 是一项实时通讯技术，它允许网络应用或者站点，在 ...`,l:"engineering/webRTC/start/index.html",a:"webrtc-的应用场景"},"105.0":{t:"<HomeBackgrount></HomeBackgrount>",p:"",l:"index.html",a:"homebackgrount-homebackgrount"},"106.0":{t:"!图片",p:"",l:"interview-questions/css/start/index.html",a:"图片"},"106.1":{t:"基础",p:"",l:"interview-questions/css/start/index.html#基础",a:"基础"},"106.2":{t:"语法",p:`CSS 的核心功能是将 CSS 属性设定为特定的值。一个属性与值的键值对被称为声明（declaration）。

color ...`,l:"interview-questions/css/start/index.html#语法",a:"语法"},"106.3":{t:"@规则",p:"CSS 规则是样式表的主体，通常样式表会包括大量的规则列表。但有时候也需要在样式表中包括其他的一些信息，比如字符集，导入其它 ...",l:"interview-questions/css/start/index.html#规则",a:"规则"},"106.4":{t:"@charset",p:"@charset 用于定义样式表使用的字符集。它必须是样式表中的第一个元素。如果有多个 @charset 被声明，只有第一个 ...",l:"interview-questions/css/start/index.html#charset",a:"charset"},"106.5":{t:"@import",p:`@import 用于告诉 CSS 引擎引入一个外部样式表。
link 和 @import 都能导入一个样式文件，它们有什么区 ...`,l:"interview-questions/css/start/index.html#import",a:"import"},"106.6":{t:"@supports",p:`@supports 用于查询特定的 CSS 是否生效，可以结合 not、and 和 or 操作符进行后续的操作。
/* 如果 ...`,l:"interview-questions/css/start/index.html#supports",a:"supports"},"106.7":{t:"层叠性",p:"层叠样式表，这里的层叠怎么理解呢？其实它是 CSS 中的核心特性之一，用于合并来自多个源的属性值的算法。比如说针对某个 HT ...",l:"interview-questions/css/start/index.html#层叠性",a:"层叠性"},"106.8":{t:"选择器",p:"CSS 选择器无疑是其核心之一，对于基础选择器以及一些常用伪类必须掌握。下面列出了常用的选择器。 想要获取更多选择器的用法可 ...",l:"interview-questions/css/start/index.html#选择器",a:"选择器"},"106.9":{t:"基础选择器",p:`
标签选择器：h1
类选择器：.checked
ID 选择器：#picker
通配选择器：*

属性选择器

[attr]： ...`,l:"interview-questions/css/start/index.html#基础选择器",a:"基础选择器"},"106.10":{t:"组合选择器",p:`
相邻兄弟选择器：A + B
普通兄弟选择器：A ~ B
子选择器：A &gt; B
后代选择器：A B

`,l:"interview-questions/css/start/index.html#组合选择器",a:"组合选择器"},"106.11":{t:"伪类",p:`条件伪类

:lang()：基于元素语言来匹配页面元素；
:dir()：匹配特定文字书写方向的元素；
:has()：匹配包含 ...`,l:"interview-questions/css/start/index.html#伪类",a:"伪类"},"106.12":{t:"伪元素",p:`
::before：在元素前插入内容；
::after：在元素后插入内容；

`,l:"interview-questions/css/start/index.html#伪元素",a:"伪元素"},"106.13":{t:"优先级",p:`!图片
优先级就是分配给指定的 CSS 声明的一个权重，它由匹配的选择器中的每一种选择器类型的数值决定。为了记忆，可以把权重 ...`,l:"interview-questions/css/start/index.html#优先级",a:"优先级"},"106.14":{t:"继承性",p:`!图片
在 CSS 中有一个很重要的特性就是子元素会继承父元素对应属性计算后的值。比如页面根元素 html 的文本颜色默认是 ...`,l:"interview-questions/css/start/index.html#继承性",a:"继承性"},"106.15":{t:"文档流",p:"在 CSS 的世界中，会把内容按照从左到右、从上到下的顺序进行排列显示。正常情况下会把页面分割成一行一行的显示，而每行又可能 ...",l:"interview-questions/css/start/index.html#文档流",a:"文档流"},"106.16":{t:"盒模型",p:"在 CSS 中任何元素都可以看成是一个盒子，而一个盒子是由 4 部分组成的：内容（content）、内边距（padding） ...",l:"interview-questions/css/start/index.html#盒模型",a:"盒模型"},"106.17":{t:"视觉格式化模型",p:"视觉格式化模型（Visual formatting model）是用来处理和在视觉媒体上显示文档时使用的计算规则。CSS 中 ...",l:"interview-questions/css/start/index.html#视觉格式化模型",a:"视觉格式化模型"},"106.18":{t:"outer display type",p:"对外显示方面，盒子类型可以分成 2 类：block-level box（块级盒子） 和 inline-level box（行 ...",l:"interview-questions/css/start/index.html#outer-display-type",a:"outer-display-type"},"106.19":{t:"inner display type",p:"对内方面，其实就是把元素当成了容器，里面包裹着文本或者其他子元素。container box 的类型依据 display 的 ...",l:"interview-questions/css/start/index.html#inner-display-type",a:"inner-display-type"},"106.20":{t:"格式化上下文",p:"格式化上下文（Formatting Context）是 CSS2.1 规范中的一个概念，大概说的是页面中的一块渲染区域，规定 ...",l:"interview-questions/css/start/index.html#格式化上下文",a:"格式化上下文"},"106.21":{t:"BFC",p:`块格式化上下文，它是一个独立的渲染区域，只有块级盒子参与，它规定了内部的块级盒子如何布局，并且与这个区域外部毫不相干。
!图 ...`,l:"interview-questions/css/start/index.html#bfc",a:"bfc"},"106.22":{t:"IFC",p:"IFC 的形成条件非常简单，块级元素中仅包含内联级别元素，需要注意的是当IFC中有块级元素插入时，会产生两个匿名块将父元素分 ...",l:"interview-questions/css/start/index.html#ifc",a:"ifc"},"106.23":{t:"层叠上下文",p:"在电脑显示屏幕上的显示的页面其实是一个三维的空间，水平方向是 X 轴，竖直方向是 Y 轴，而屏幕到眼睛的方向可以看成是 Z  ...",l:"interview-questions/css/start/index.html#层叠上下文",a:"层叠上下文"},"106.24":{t:"值和单位",p:`CSS 的声明是由属性和值组成的，而值的类型有许多种：

数值：长度值 ，用于指定例如元素 width、border-wid ...`,l:"interview-questions/css/start/index.html#值和单位",a:"值和单位"},"106.25":{t:"px",p:"屏幕分辨率是指在屏幕的横纵方向上的像素点数量，比如分辨率 1920×1080 意味着水平方向含有 1920 个像素数，垂直方 ...",l:"interview-questions/css/start/index.html#px",a:"px"},"106.26":{t:"em",p:`em 是 CSS 中的相对长度单位中的一个。居然是相对的，那它到底是相对的谁呢？它有 2 层意思：

在 font-size ...`,l:"interview-questions/css/start/index.html#em",a:"em"},"106.27":{t:"rem",p:`rem(root em) 和 em 一样，也是一个相对长度单位，不过 rem 相对的是 HTML 的根元素 html。
re ...`,l:"interview-questions/css/start/index.html#rem",a:"rem"},"106.28":{t:"vw/vh",p:`vw 和 vh 分别是相对于屏幕视口宽度和高度而言的长度单位：

1vw = 视口宽度均分成 100 份中 1 份的长度；
 ...`,l:"interview-questions/css/start/index.html#vw-vh",a:"vw-vh"},"106.29":{t:"颜色体系",p:`CSS 中用于表示颜色的值种类繁多，足够构成一个体系，所以这里就专门拿出一个小节来讲解它。
根据 CSS 颜色草案 中提到的 ...`,l:"interview-questions/css/start/index.html#颜色体系",a:"颜色体系"},"106.30":{t:"颜色关键字",p:"颜色关键字（color keywords）是不区分大小写的标识符，它表示一个具体的颜色，比如 white（白），黑（blac ...",l:"interview-questions/css/start/index.html#颜色关键字",a:"颜色关键字"},"106.31":{t:"transparent 关键字",p:"transparent 关键字表示一个完全透明的颜色，即该颜色看上去将是背景色。从技术上说，它是带有 alpha 通道为最小 ...",l:"interview-questions/css/start/index.html#transparent-关键字",a:"transparent-关键字"},"106.32":{t:"currentColor 关键字",p:"currentColor 会取当前元素继承父级元素的文本颜色值或声明的文本颜色值，即 computed 后的 color 值 ...",l:"interview-questions/css/start/index.html#currentcolor-关键字",a:"currentcolor-关键字"},"106.33":{t:"RGB\\[A\\] 颜色",p:`RGB[A] 颜色是由 R(red)-G(green)-B(blue)-A(alpha) 组成的色彩空间。
!图片
在 CS ...`,l:"interview-questions/css/start/index.html#rgb-a-颜色",a:"rgb-a-颜色"},"106.34":{t:"HSL\\[A\\] 颜色",p:`HSL[A] 颜色是由色相(hue)-饱和度(saturation)-亮度(lightness)-不透明度组成的颜色体系。
 ...`,l:"interview-questions/css/start/index.html#hsl-a-颜色",a:"hsl-a-颜色"},"106.35":{t:"媒体查询",p:`媒体查询是指针对不同的设备、特定的设备特征或者参数进行定制化的修改网站的样式。
你可以通过给 &lt;link&gt; 加上 ...`,l:"interview-questions/css/start/index.html#媒体查询",a:"媒体查询"},"106.36":{t:"自定义属性",p:"之前我们通常是在预处理器里才可以使用变量，而现在 CSS 里也支持了变量的用法。通过自定义属性就可以在想要使用的地方引用它。 ...",l:"interview-questions/css/start/index.html#自定义属性",a:"自定义属性"},"106.37":{t:"1px 边框解决方案",p:"Retina 显示屏比普通的屏幕有着更高的分辨率，所以在移动端的 1px 边框就会看起来比较粗，为了美观通常需要把这个线条细 ...",l:"interview-questions/css/start/index.html#_1px-边框解决方案",a:"_1px-边框解决方案"},"106.38":{t:"清除浮动",p:`什么是浮动：浮动元素会脱离文档流并向左/向右浮动，直到碰到父元素或者另一个浮动元素。
为什么要清楚浮动，它造成了什么问题？
 ...`,l:"interview-questions/css/start/index.html#清除浮动",a:"清除浮动"},"106.39":{t:"BFC 清除浮动",p:`前面介绍 BFC 的时候提到过，计算 BFC 高度的时候浮动子元素的高度也将计算在内，利用这条规则就可以清楚浮动。
假设一个 ...`,l:"interview-questions/css/start/index.html#bfc-清除浮动",a:"bfc-清除浮动"},"106.40":{t:"通过 clear 清除浮动",p:`我先把结论贴出来：
.clearfix {
    zoom: 1;
}
.clearfix::after {
    co ...`,l:"interview-questions/css/start/index.html#通过-clear-清除浮动",a:"通过-clear-清除浮动"},"106.41":{t:"消除浏览器默认样式",p:"针对同一个类型的 HTML 标签，不同的浏览器往往有不同的表现，所以在网站制作的时候，开发者通常都是需要将这些浏览器的默认样 ...",l:"interview-questions/css/start/index.html#消除浏览器默认样式",a:"消除浏览器默认样式"},"106.42":{t:"长文本处理",p:`默认：字符太长溢出了容器
!图片
字符超出部分换行
!图片
字符超出位置使用连字符
!图片
单行文本超出省略
!图片
多行文 ...`,l:"interview-questions/css/start/index.html#长文本处理",a:"长文本处理"},"106.43":{t:"水平垂直居中",p:`让元素在父元素中呈现出水平垂直居中的形态，无非就 2 种情况：

单行的文本、inline 或者 inline-block  ...`,l:"interview-questions/css/start/index.html#水平垂直居中",a:"水平垂直居中"},"106.44":{t:"单行的文本、inline 或 inline-block 元素",p:`水平居中
此类元素需要水平居中，则父级元素必须是块级元素(block level)，且父级元素上需要这样设置样式：
.par ...`,l:"interview-questions/css/start/index.html#单行的文本、inline-或-inline-block-元素",a:"单行的文本、inline-或-inline-block-元素"},"106.45":{t:"固定宽高的块级盒子",p:`方法一：absolute + 负 margin
!图片
方法二：absolute + margin auto
!图片
方法三 ...`,l:"interview-questions/css/start/index.html#固定宽高的块级盒子",a:"固定宽高的块级盒子"},"106.46":{t:"不固定宽高的块级盒子",p:"这里列了 6 种方法，参考了颜海镜 写的文章 ，其中的两种 line-height 和 writing-mode 方案看后让 ...",l:"interview-questions/css/start/index.html#不固定宽高的块级盒子",a:"不固定宽高的块级盒子"},"106.47":{t:"常用布局",p:"",l:"interview-questions/css/start/index.html#常用布局",a:"常用布局"},"106.48":{t:"两栏布局（边栏定宽主栏自适应）",p:`针对以下这些方案写了几个示例： codepen demo
方法一：float + overflow（BFC 原理）
!图片
 ...`,l:"interview-questions/css/start/index.html#两栏布局-边栏定宽主栏自适应",a:"两栏布局-边栏定宽主栏自适应"},"106.49":{t:"三栏布局（两侧栏定宽主栏自适应）",p:`针对以下这些方案写了几个示例： codepen demo
方法一：圣杯布局
!图片
方法二：双飞翼布局
!图片
方法三：fl ...`,l:"interview-questions/css/start/index.html#三栏布局-两侧栏定宽主栏自适应",a:"三栏布局-两侧栏定宽主栏自适应"},"106.50":{t:"多列等高布局",p:`结合示例阅读更佳：codepen demo
方法一：padding + 负margin
!图片
方法二：设置父级背景图片
! ...`,l:"interview-questions/css/start/index.html#多列等高布局",a:"多列等高布局"},"106.51":{t:"三行布局（头尾定高主栏自适应）",p:`列了 4 种方法，都是基于如下的 HTML 和 CSS 的，结合示例阅读效果更佳：codepen demo
&lt;div  ...`,l:"interview-questions/css/start/index.html#三行布局-头尾定高主栏自适应",a:"三行布局-头尾定高主栏自适应"},"107.0":{t:"# 适配器模式",p:"",l:"interview-questions/design-patterns/adapter/index.html",a:"适配器模式"},"107.1":{t:"场景",p:"当我们使用第三方库的时候，常常会遇到当前接口和第三方接口不匹配的情况，比如使用一个 Table 的组件，它要求我们返回的表格 ...",l:"interview-questions/design-patterns/adapter/index.html#场景",a:"场景"},"107.2":{t:"适配器模式",p:`看一下 维基百科 给的定义：

In software engineering, the adapter pattern i ...`,l:"interview-questions/design-patterns/adapter/index.html#适配器模式",a:"适配器模式"},"107.3":{t:"代码实现",p:"回到开头接口不匹配的问题上，Table 组件提供了一个 responseProcessor 的钩子，我们只需要通过这个钩子将 ...",l:"interview-questions/design-patterns/adapter/index.html#代码实现",a:"代码实现"},"107.4":{t:"更多场景",p:"除了应对数据格式不一致的问题，通过适配器模式我们还可以为上层提供统一接口，来解决兼容性问题。最典型的例子就是 jQuery  ...",l:"interview-questions/design-patterns/adapter/index.html#更多场景",a:"更多场景"},"107.5":{t:"易混设计模式",p:`适配器模式和代理模式在代码结构上很像，代理模式也是对原对象进行包装处理。区别在于它们的意图不同：


适配器模式是为了解决两 ...`,l:"interview-questions/design-patterns/adapter/index.html#易混设计模式",a:"易混设计模式"},"108.0":{t:"# 装饰器模式",p:"",l:"interview-questions/design-patterns/agent/index.html",a:"装饰器模式"},"108.1":{t:"场景",p:`微信小程序定义一个页面是通过微信提供的 Page 方法，然后传入一个配置对象进去。
Page({
  data: { //  ...`,l:"interview-questions/design-patterns/agent/index.html#场景",a:"场景"},"108.2":{t:"装饰器模式",p:`看下维基百科的定义。

装饰器（修饰）模式，是面向对象程式领域中，一种动态地往一个类别中添加新的行为的设计模式。就功能而言， ...`,l:"interview-questions/design-patterns/agent/index.html#装饰器模式",a:"装饰器模式"},"108.3":{t:"代码实现",p:"回到文章最开头的场景，我们需要为每个页面加载的时候上报一些自定义数据。其实我们只需要引入一个装饰函数，将传入的 option ...",l:"interview-questions/design-patterns/agent/index.html#代码实现",a:"代码实现"},"108.4":{t:"易混设计模式",p:`如果之前看过 代理模式
但还是有很大的不同点：
代理模式中，我们是直接将原对象封装到代理对象之中，对于业务方并不关系原始对象 ...`,l:"interview-questions/design-patterns/agent/index.html#易混设计模式",a:"易混设计模式"},"109.0":{t:"# 代理模式",p:"",l:"interview-questions/design-patterns/decorator/index.html",a:"代理模式"},"109.1":{t:"场景",p:`平常业务开发中， 对于网络请求，我们一般会封装成一个模块，并且暴露 get、post 方法供大家使用。
// src/uti ...`,l:"interview-questions/design-patterns/decorator/index.html#场景",a:"场景"},"109.2":{t:"代理模式",p:`贴一下 维基百科的一些解释：

`,l:"interview-questions/design-patterns/decorator/index.html#代理模式",a:"代理模式"},"109.3":{t:" ",p:"",l:"interview-questions/design-patterns/decorator/index.html#",a:""},"109.4":{t:"What problems can the Proxy design pattern solve?",p:`

The access to an object should be controlled.
Additional fun ...`,l:"interview-questions/design-patterns/decorator/index.html#what-problems-can-the-proxy-design-pattern-solve",a:"what-problems-can-the-proxy-design-pattern-solve"},"109.5":{t:" ",p:"",l:"interview-questions/design-patterns/decorator/index.html#",a:""},"109.6":{t:"What solution does the Proxy design pattern describe?",p:`
Define a separate Proxy object that

can be used as substitut ...`,l:"interview-questions/design-patterns/decorator/index.html#what-solution-does-the-proxy-design-pattern-describe",a:"what-solution-does-the-proxy-design-pattern-describe"},"109.7":{t:"代码实现",p:"回到最开始的场景：现在有了一个新需求，我们需要将第一次请求中，后端返回请求中的 graytype 字段塞到后续请求中的 he ...",l:"interview-questions/design-patterns/decorator/index.html#代码实现",a:"代码实现"},"110.0":{t:"# 观察者模式",p:"",l:"interview-questions/design-patterns/observer/index.html",a:"观察者模式"},"110.1":{t:"场景",p:"假设我们在开发一款外卖网站，进入网站的时候，第一步需要去请求后端接口得到用户的常用外卖地址。然后再去请求其他接口、渲染页面。 ...",l:"interview-questions/design-patterns/observer/index.html#场景",a:"场景"},"110.2":{t:"设计模式定义",p:`可以看下 维基百科的介绍：

The observer pattern is a software design patte ...`,l:"interview-questions/design-patterns/observer/index.html#设计模式定义",a:"设计模式定义"},"110.3":{t:"代码实现",p:`回到开头的场景，我们可以利用观察者模式将获取地址后的一系列后续操作解耦出来。

// 页面里有三个模块 A，B，C 需要拿到 ...`,l:"interview-questions/design-patterns/observer/index.html#代码实现",a:"代码实现"},"111.0":{t:"# 发布订阅模式",p:"",l:"interview-questions/design-patterns/release-subscription/index.html",a:"发布订阅模式"},"111.1":{t:"场景",p:"假设我们在开发一款外卖网站，进入网站的时候，第一步需要去请求后端接口得到用户的常用外卖地址。然后再去请求其他接口、渲染页面。 ...",l:"interview-questions/design-patterns/release-subscription/index.html#场景",a:"场景"},"111.2":{t:"设计模式定义",p:`回忆一下观察者模式：

The observer pattern is a software design pattern  ...`,l:"interview-questions/design-patterns/release-subscription/index.html#设计模式定义",a:"设计模式定义"},"111.3":{t:"代码实现",p:`让我们改造下开头写的观察者模式的代码：
地址模块：
import { EventBus } from &quot;./eve ...`,l:"interview-questions/design-patterns/release-subscription/index.html#代码实现",a:"代码实现"},"111.4":{t:"特殊情况",p:"实际工程中可能遇到一些特殊场景，由于 emit 一般在一个异步事件中执行，如果这个异步事件突然执行的变快了，就可能造成某个事 ...",l:"interview-questions/design-patterns/release-subscription/index.html#特殊情况",a:"特殊情况"},"112.0":{t:"# 策略模式",p:"",l:"interview-questions/design-patterns/strategy/index.html",a:"策略模式"},"112.1":{t:"场景",p:`进入一个营销活动页面，会根据后端下发的不同 type ，前端页面展示不同的弹窗。
async getMainData() { ...`,l:"interview-questions/design-patterns/strategy/index.html#场景",a:"场景"},"112.2":{t:"策略模式",p:`看下 维基百科 的定义。

策略模式作为一种软件设计模式，指对象有某个行为，但是在不同的场景中，该行为有不同的实现算法。比如 ...`,l:"interview-questions/design-patterns/strategy/index.html#策略模式",a:"策略模式"},"112.3":{t:"优化代码",p:`将所有弹窗方法从业务代码 getMainData 中抽离出来，只暴露一个打开弹窗的函数供业务调用。
import { ope ...`,l:"interview-questions/design-patterns/strategy/index.html#优化代码",a:"优化代码"},"112.4":{t:"更多场景",p:"表单验证也是一个典型场景，常用的，我们需要验证用户输入字段是否是数字、是否必填、是否是数组，还有自定义的一些验证，同样可以通 ...",l:"interview-questions/design-patterns/strategy/index.html#更多场景",a:"更多场景"},"113.0":{t:"# docker 概念",p:"富 Web 时代，应用变得越来越强大，与此同时也越来越复杂。集群部署、隔离环境、灰度发布以及动态扩容缺一不可，而容器化则成为 ...",l:"interview-questions/docker/concept/index.html",a:"docker-概念"},"113.1":{t:"一、讲个故事",p:`为了更好的理解 Docker 是什么，我们先来讲个故事：
我需要盖一个房子，于是我搬石头、砍木头、画图纸、盖房子。一顿操作， ...`,l:"interview-questions/docker/concept/index.html#一、讲个故事",a:"一、讲个故事"},"113.2":{t:"二、虚拟机与容器",p:`开始之前，我们来做一些基础知识的储备：
1.虚拟机：虚拟化硬件
虚拟机 Virtual Machine 指通过软件模拟的具有 ...`,l:"interview-questions/docker/concept/index.html#二、虚拟机与容器",a:"二、虚拟机与容器"},"113.3":{t:"三、认识 Docker",p:`!Docker
1.概念
Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的容器中， ...`,l:"interview-questions/docker/concept/index.html#三、认识-docker",a:"三、认识-docker"},"113.4":{t:"四、核心概念",p:`1.Build, Ship and Run（搭建、运输、运行）；
2.Build once, Run anywhere（一次 ...`,l:"interview-questions/docker/concept/index.html#四、核心概念",a:"四、核心概念"},"113.5":{t:"五、安装 Docker",p:`1.命令行安装
Homebrew 的 Cask 已经支持 Docker for Mac，因此可以很方便的使用 Homebre ...`,l:"interview-questions/docker/concept/index.html#五、安装-docker",a:"五、安装-docker"},"113.6":{t:"六、快速开始",p:`安装完 Docker 之后，我们先打个实际项目的镜像，边学边用。
1.首先需要大致了解一下我们将会用到的 11 个命令


 ...`,l:"interview-questions/docker/concept/index.html#六、快速开始",a:"六、快速开始"},"113.7":{t:"七、常规操作",p:`到这里，恭喜你已经完成了 Docker 的入门项目！如果还想继续深入，不妨接着往下看看。
1.参数使用


FROM

指定 ...`,l:"interview-questions/docker/concept/index.html#七、常规操作",a:"七、常规操作"},"113.8":{t:"八、最佳实践",p:`在掌握 Docker 常规操作之后，我们很容易就可以打出自己想要的项目镜像。然而不同的操作打出的镜像也是千差万别。
究竟是什 ...`,l:"interview-questions/docker/concept/index.html#八、最佳实践",a:"八、最佳实践"},"114.0":{t:"# docker 起步",p:`docker 使应用部署更加轻量，可移植，可扩展，更好的环境隔离也更大程度地避免了生产环境与测试环境不一致的巨大尴尬
`,l:"interview-questions/docker/start/index.html",a:"docker-起步"},"114.1":{t:"认识Docker",p:`!图片
`,l:"interview-questions/docker/start/index.html#认识docker",a:"认识docker"},"114.2":{t:"术语",p:`docker 的架构图如下
!图片
`,l:"interview-questions/docker/start/index.html#术语",a:"术语"},"114.3":{t:"从图中可以看出几个组成部分",p:`
docker client: 即 docker 命令行工具
docker host: 宿主机，docker daemon  ...`,l:"interview-questions/docker/start/index.html#从图中可以看出几个组成部分",a:"从图中可以看出几个组成部分"},"114.4":{t:"安装 Docker",p:"",l:"interview-questions/docker/start/index.html#安装-docker",a:"安装-docker"},"114.5":{t:"软件安装",p:`
在本地安装 docker/docker-compose，通过 Docker Desktop下载 docker 后，双击安装 ...`,l:"interview-questions/docker/start/index.html#软件安装",a:"软件安装"},"114.6":{t:"命令行安装",p:`
Homebrew 的 Cask 已经支持 Docker for Mac，因此可以很方便的使用 Homebrew Cask  ...`,l:"interview-questions/docker/start/index.html#命令行安装",a:"命令行安装"},"114.7":{t:"使用Docker启动一个vue项目",p:"",l:"interview-questions/docker/start/index.html#使用docker启动一个vue项目",a:"使用docker启动一个vue项目"},"114.8":{t:"新建项目",p:`使用Vue 脚手架构建项目
npm init vue@latest

给项目起个名字，叫做docker-demo-vue
然 ...`,l:"interview-questions/docker/start/index.html#新建项目",a:"新建项目"},"114.9":{t:"新建 Dockerfile",p:`在docker-demo-vue根目录下执行：
touch Dockerfile

此时的项目目录结构是这样的：
!图片
`,l:"interview-questions/docker/start/index.html#新建-dockerfile",a:"新建-dockerfile"},"114.10":{t:"拉取 Nginx 镜像",p:`
首先打开你的Docker，默认会启动。
控制台拉取 Nginx 镜像：

docker pull nginx

出现下面的 ...`,l:"interview-questions/docker/start/index.html#拉取-nginx-镜像",a:"拉取-nginx-镜像"},"114.11":{t:"在根目录创建 Nginx 配置文件",p:`touch default.conf

写入：
server {
    listen       80;
    serv ...`,l:"interview-questions/docker/start/index.html#在根目录创建-nginx-配置文件",a:"在根目录创建-nginx-配置文件"},"114.12":{t:"配置镜像",p:`打开Dockerfile文件，写入：
FROM nginx  
COPY dist/ /usr/share/nginx/ht ...`,l:"interview-questions/docker/start/index.html#配置镜像",a:"配置镜像"},"114.13":{t:"构建镜像",p:`Docker 通过 build 命令来构建镜像：
docker build -t docker-demo-vue .

!图 ...`,l:"interview-questions/docker/start/index.html#构建镜像",a:"构建镜像"},"114.14":{t:"运行容器",p:`docker run -d -p 3000:80 --name docker-vue docker-demo-vue

`,l:"interview-questions/docker/start/index.html#运行容器",a:"运行容器"},"114.15":{t:"参数解释",p:`
-d 设置容器在后台运行
-p 表示端口映射，把本机的 3000 端口映射到 container 的 80 端口（这样外网 ...`,l:"interview-questions/docker/start/index.html#参数解释",a:"参数解释"},"114.16":{t:"访问项目",p:`可以在浏览器中看到对应的页面，跟我们前面创建项目的时候看到的界面是一样的
也可以使用curl -v -i localhost ...`,l:"interview-questions/docker/start/index.html#访问项目",a:"访问项目"},"114.17":{t:"发布镜像",p:`
如果你想为社区贡献力量，那么需要将镜像发布，方便其他开发者使用。
发布镜像需要如下步骤：
登陆 dockerhub，注册账 ...`,l:"interview-questions/docker/start/index.html#发布镜像",a:"发布镜像"},"114.18":{t:"底层原理简介",p:`docker 底层使用了一些 linux 内核的特性，大概有 namespace，cgroups 和 ufs。
`,l:"interview-questions/docker/start/index.html#底层原理简介",a:"底层原理简介"},"114.19":{t:"namespace",p:`docker 使用 linux namespace 构建隔离的环境，它由以下 namespace 组成

pid: 隔离进程 ...`,l:"interview-questions/docker/start/index.html#namespace",a:"namespace"},"114.20":{t:"进阶技巧总结",p:"",l:"interview-questions/docker/start/index.html#进阶技巧总结",a:"进阶技巧总结"},"114.21":{t:"镜像仓库与拉取",p:`
大部分时候，我们不需要自己构建镜像，我们可以在官方镜像仓库 Docker Hub拉取镜像。
可以简单使用命令 docker ...`,l:"interview-questions/docker/start/index.html#镜像仓库与拉取",a:"镜像仓库与拉取"},"114.22":{t:"构建镜像与发布",p:`但并不是所有的镜像都可以在镜像仓库中找到，另外我们也需要为我们自己的业务应用去构建镜像。
使用 docker build 构 ...`,l:"interview-questions/docker/start/index.html#构建镜像与发布",a:"构建镜像与发布"},"114.23":{t:"Dockerfile",p:`在使用 docker 部署自己应用时，往往需要独立构建镜像。
docker 使用 Dockerfile 作为配置文件构建镜像 ...`,l:"interview-questions/docker/start/index.html#dockerfile",a:"dockerfile"},"114.24":{t:"FROM",p:`基于一个旧有的基础镜像，格式如下。
FROM &lt;image&gt; [AS &lt;name&gt;]

# 在多阶段 ...`,l:"interview-questions/docker/start/index.html#from",a:"from"},"114.25":{t:"ADD",p:`把宿主机的文件或目录加入到镜像的文件系统中。
ADD [--chown=&lt;user&gt;:&lt;group&gt; ...`,l:"interview-questions/docker/start/index.html#add",a:"add"},"114.26":{t:"RUN",p:`在镜像中执行命令，由于 ufs 的文件系统，它会在当前镜像的顶层新增一层。
RUN &lt;command&gt;

RUN ...`,l:"interview-questions/docker/start/index.html#run",a:"run"},"114.27":{t:"CMD",p:`指定容器如何启动。
一个 Dockerfile 中只允许有一个 CMD
# exec form, this is the p ...`,l:"interview-questions/docker/start/index.html#cmd",a:"cmd"},"114.28":{t:"容器",p:`镜像与容器的关系，类似于代码与进程的关系。

docker run 创建容器
docker stop 停止容器
docker ...`,l:"interview-questions/docker/start/index.html#容器",a:"容器"},"114.29":{t:"创建容器",p:`基于 nginx 镜像创建一个最简单的容器：启动一个最简单的 http 服务
使用 docker run 来启动容器，doc ...`,l:"interview-questions/docker/start/index.html#创建容器",a:"创建容器"},"114.30":{t:"容器管理",p:`docker ps 列出所有容器
$ docker ps
CONTAINER ID        IMAGE         ...`,l:"interview-questions/docker/start/index.html#容器管理",a:"容器管理"},"114.31":{t:"容器测试",p:`如果某时某个容器出现问题，可直接进入容器内部进行调试。
docker exec -it &lt;container_name ...`,l:"interview-questions/docker/start/index.html#容器测试",a:"容器测试"},"114.32":{t:"docker compose",p:"在 docker compose v2 中，使用了 docker compose 命令去替代了 docker-compose ...",l:"interview-questions/docker/start/index.html#docker-compose",a:"docker-compose"},"115.0":{t:"# 2022 年前端大事记",p:`[1-11] Chrome 开始实施私有网络控制策略
私有网络请求指的是目标服务器的 IP 地址比请求发起者获取的 IP 地 ...`,l:"interview-questions/event/2022/index.html",a:"_2022-年前端大事记"},"116.0":{t:"# git 常用命令",p:"",l:"interview-questions/git/commands/index.html",a:"git-常用命令"},"116.1":{t:"常用命令",p:`
stash：存储临时代码。
reset --soft：软回溯，回退 commit 的同时保留修改内容。
cherry-pi ...`,l:"interview-questions/git/commands/index.html#常用命令",a:"常用命令"},"116.2":{t:"查询配置信息",p:`
列出当前配置：git config --list
列出repository配置：git config --local -- ...`,l:"interview-questions/git/commands/index.html#查询配置信息",a:"查询配置信息"},"116.3":{t:"第一次使用git，配置用户信息",p:`
配置用户名：git config --global user.name &quot;your name&quot;
配置用 ...`,l:"interview-questions/git/commands/index.html#第一次使用git-配置用户信息",a:"第一次使用git-配置用户信息"},"116.4":{t:"其他配置",p:`
配置解决冲突时使用哪种差异分析工具，比如要使用vimdiff：git config --global merge.tool ...`,l:"interview-questions/git/commands/index.html#其他配置",a:"其他配置"},"117.0":{t:"# git 本地仓库上的操作&gitignore",p:"",l:"interview-questions/git/gitignore-localRepository/index.html",a:"git-本地仓库上的操作-gitignore"},"117.1":{t:"git 本地仓库上的操作",p:`
查看本地仓库关联的远程仓库：git remote；在克隆完每个远程仓库后，远程仓库默认为origin;加上-v的参数后，会 ...`,l:"interview-questions/git/gitignore-localRepository/index.html#git-本地仓库上的操作",a:"git-本地仓库上的操作"},"117.2":{t:"gitignore",p:"一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。通常都是些自动生成的文件，比如日志文件，或 ...",l:"interview-questions/git/gitignore-localRepository/index.html#gitignore",a:"gitignore"},"118.0":{t:"# 储藏 stash",p:"",l:"interview-questions/git/stash/index.html",a:"储藏-stash"},"118.1":{t:"stash 储藏",p:`git stash : 将全部未保存的代码添加到储藏
`,l:"interview-questions/git/stash/index.html#stash-储藏",a:"stash-储藏"},"118.2":{t:"保存当前代码",p:`
git stash: 快速储藏代码，默认储藏名称为&quot;WIP on branch_name ： latest_co ...`,l:"interview-questions/git/stash/index.html#保存当前代码",a:"保存当前代码"},"118.3":{t:"查看stash代码",p:`
git stash list: 查看stash列表
git stash show: 查看第一个储藏做了哪些改动(并不是改动 ...`,l:"interview-questions/git/stash/index.html#查看stash代码",a:"查看stash代码"},"118.4":{t:"应用stash代码",p:`* git stash apply stash@{num}: 应用列表中的储藏
* git stash pop: 应用第一个 ...`,l:"interview-questions/git/stash/index.html#应用stash代码",a:"应用stash代码"},"118.5":{t:"删除stash代码",p:"* git stash drop stash@{num}: 删除stash list中的储藏，例如删除第二个：git sta ...",l:"interview-questions/git/stash/index.html#删除stash代码",a:"删除stash代码"},"118.6":{t:"以stash储藏创建一个分支",p:`
创建新分支branchName，并切换到此分支，分支的状态与stash储藏时的状态一致，此时新分支应用的stash代码进了 ...`,l:"interview-questions/git/stash/index.html#以stash储藏创建一个分支",a:"以stash储藏创建一个分支"},"118.7":{t:"如图，展示了几个常用的stash命令",p:`!图片
`,l:"interview-questions/git/stash/index.html#如图-展示了几个常用的stash命令",a:"如图-展示了几个常用的stash命令"},"119.0":{t:"# git 工作区&暂存区的操作命令",p:"",l:"interview-questions/git/workspace-temporary/index.html",a:"git-工作区-暂存区的操作命令"},"119.1":{t:"工作区",p:`git init
`,l:"interview-questions/git/workspace-temporary/index.html#工作区",a:"工作区"},"119.2":{t:"从远程克隆仓库",p:`git clone XXX
`,l:"interview-questions/git/workspace-temporary/index.html#从远程克隆仓库",a:"从远程克隆仓库"},"119.3":{t:"提交",p:`
提交工作区所有文件到暂存区：git add .
提交工作区中指定文件到暂存区：git add file1 file2 .. ...`,l:"interview-questions/git/workspace-temporary/index.html#提交",a:"提交"},"119.4":{t:"撤销",p:`
删除工作区文件，并且也从暂存区删除对应文件的记录：git rm file1 file2
从暂存区中删除文件，但是工作区依然 ...`,l:"interview-questions/git/workspace-temporary/index.html#撤销",a:"撤销"},"119.5":{t:"更新文件",p:`
重命名文件，并将已改名文件提交到暂存区：git mv [file-original] [file-renamed];

`,l:"interview-questions/git/workspace-temporary/index.html#更新文件",a:"更新文件"},"119.6":{t:"查询信息",p:`
查询当前工作区所有文件的状态：git status;
比较工作区中当前文件和暂存区之间的差异，也就是修改之后还没有暂存的内 ...`,l:"interview-questions/git/workspace-temporary/index.html#查询信息",a:"查询信息"},"119.7":{t:"暂存区",p:"",l:"interview-questions/git/workspace-temporary/index.html#暂存区",a:"暂存区"},"119.8":{t:"提交文件到版本库",p:`
将暂存区中的文件提交到本地仓库中，即打上新版本：git commit -m &quot;commit_info&quot; ...`,l:"interview-questions/git/workspace-temporary/index.html#提交文件到版本库",a:"提交文件到版本库"},"119.9":{t:"查看信息",p:`
比较暂存区与上一版本的差异：git diff --cached
指定文件在暂存区和本地仓库的不同：git diff fil ...`,l:"interview-questions/git/workspace-temporary/index.html#查看信息",a:"查看信息"},"119.10":{t:"打标签",p:"Git 使用的标签有两种类型：轻量级的（lightweight）和含附注的（annotated） 。轻量级标签就像是个不会变 ...",l:"interview-questions/git/workspace-temporary/index.html#打标签",a:"打标签"},"119.11":{t:"分支管理",p:`
创建分支：git branch branch-name，如 git branch testing
从当前所处的分支切换到其 ...`,l:"interview-questions/git/workspace-temporary/index.html#分支管理",a:"分支管理"},"120.0":{t:"# DOCTYPE",p:`1.DOCTYPE 是什么
DOCTYPE 是一种通用标记语言的文档声明类型，它主要作用是告诉浏览器的解析器，应该以什么样的 ...`,l:"interview-questions/html/doctype/index.html",a:"doctype"},"120.1":{t:"HTML 5",p:"因为 HTML 5 不基于 SGML，所以不需要引用DTD，但是需要DOCTYPE来规范浏览器的行为，让浏览器按照 W3C  ...",l:"interview-questions/html/doctype/index.html#html-5",a:"html-5"},"120.2":{t:"HTML 4.01",p:"\n\nStrict 严格```\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML ...",l:"interview-questions/html/doctype/index.html#html-4-01",a:"html-4-01"},"120.3":{t:"XML 1.0 Strict 严格```",p:"&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//E ...",l:"interview-questions/html/doctype/index.html#xml-1-0-strict-严格",a:"xml-1-0-strict-严格"},"120.4":{t:"如何区分",p:`浏览器解析时到底使用严格模式还是混杂模式，与网页中的 DTD 直接相关。
严格 DTD ——严格模式 。如果文档包含严格的  ...`,l:"interview-questions/html/doctype/index.html#如何区分",a:"如何区分"},"120.5":{t:"意义",p:"严格模式与混杂模式存在的意义与其来源密切相关，如果说只存在严格模式，那么许多旧网站必然受到影响，如果只存在混杂模式，那么会回 ...",l:"interview-questions/html/doctype/index.html#意义",a:"意义"},"120.6":{t:"常见区别",p:`严格模式下 —— W3C 标准的盒模型 怪异模式下 —— IE 盒模型
`,l:"interview-questions/html/doctype/index.html#常见区别",a:"常见区别"},"121.0":{t:"# 作为前端，你必须要知道的meta标签知识",p:`概览
meta标签一般放在整个html页面的head部分，在MDN中对他这样定义：

meta是文档级元数据元素，用来表示那 ...`,l:"interview-questions/html/meta/index.html",a:"作为前端-你必须要知道的meta标签知识"},"121.1":{t:"author",p:`用来表示网页的作者的名字，例如某个组织或者机构。
&lt;meta name=&quot;author&quot; cont ...`,l:"interview-questions/html/meta/index.html#author",a:"author"},"121.2":{t:"description",p:`是一段简短而精确的、对页面内容的描述。以头条和taobao的description标签为例：
!图片
!图片
`,l:"interview-questions/html/meta/index.html#description",a:"description"},"121.3":{t:"keywords",p:"与页面内容相关的关键词，使用逗号分隔。某些搜索引擎在遇到这些关键字时，会用这些关键字对文档进行分类。 还是以头条和taoba ...",l:"interview-questions/html/meta/index.html#keywords",a:"keywords"},"121.4":{t:"viewpoint",p:`为 viewport（视口）的初始大小提供指示。目前仅用于移动设备。
可能你也发现了，我们在vscode中自动生成html的 ...`,l:"interview-questions/html/meta/index.html#viewpoint",a:"viewpoint"},"121.5":{t:"robots",p:`表示爬虫对此页面的处理行为，或者说，应当遵守的规则，是用来做搜索引擎抓取的。
它的content可以为：

all:搜索引擎 ...`,l:"interview-questions/html/meta/index.html#robots",a:"robots"},"121.6":{t:"renderer",p:`用来指定双核浏览器的渲染方式，比如360浏览器，我们可以通过这个设置来指定360浏览器的渲染方式
&lt;meta name ...`,l:"interview-questions/html/meta/index.html#renderer",a:"renderer"},"121.7":{t:"X-UA-Compatible",p:`我们最常见的http-equiv值可能就是X-UA-Compatible了，它常常长这个样子：
!图片
它是用来是做IE浏览 ...`,l:"interview-questions/html/meta/index.html#x-ua-compatible",a:"x-ua-compatible"},"121.8":{t:"content-type",p:`用来声明文档类型和字符集
!图片
`,l:"interview-questions/html/meta/index.html#content-type",a:"content-type"},"121.9":{t:"x-dns-prefetch-control",p:"一般来说，HTML页面中的a标签会自动启用DNS提前解析来提升网站性能，但是在使用https协议的网站中失效了，我们可以设置 ...",l:"interview-questions/html/meta/index.html#x-dns-prefetch-control",a:"x-dns-prefetch-control"},"121.10":{t:"cache-control、Pragma、Expires",p:`和缓存相关的设置，但是遗憾的是这些往往不生效，我们一般都通过http headers来设置缓存策略
`,l:"interview-questions/html/meta/index.html#cache-control、pragma、expires",a:"cache-control、pragma、expires"},"122.0":{t:"# HTML简介",p:`1. 什么是HTML？

超文本标记语言（Hyper Text Markup Language），是用来描述网页的一种语言。 ...`,l:"interview-questions/html/start/index.html",a:"html简介"},"122.1":{t:"标题标签",p:`通过 &lt;h1&gt; - &lt;h6&gt; 标签进行定义的。
&lt;h1&gt; 定义最大的标题。 &lt;h6 ...`,l:"interview-questions/html/start/index.html#标题标签",a:"标题标签"},"122.2":{t:"段落标签",p:`把文字有条理的分段显示，该标签用于定义段落
&lt;p&gt;我是一个段落标签&lt;/p&gt;

特点：

打空格没用， ...`,l:"interview-questions/html/start/index.html#段落标签",a:"段落标签"},"122.3":{t:"水平线标签",p:`&lt;hr /&gt;是单标签

`,l:"interview-questions/html/start/index.html#水平线标签",a:"水平线标签"},"122.4":{t:"换行标签",p:`强制文本换行
abc &lt;br/&gt; efg

显示为：
abc
efg
特点：

是个单标签
只是简单开始新的一行 ...`,l:"interview-questions/html/start/index.html#换行标签",a:"换行标签"},"122.5":{t:"文本格式化标签",p:`
突出重要性，比普通文字更重要

在网页中，有时需要把文字设置为粗体、斜体或者下划线等效果，这时就需要用到HTML中的文本格 ...`,l:"interview-questions/html/start/index.html#文本格式化标签",a:"文本格式化标签"},"122.6":{t:"图像标签",p:`用于定义html页面中的图像，是个单标签
&lt;img src=&quot;图像URL&quot; alt=&quot;图 ...`,l:"interview-questions/html/start/index.html#图像标签",a:"图像标签"},"122.7":{t:"路径",p:`
相对路径：以引用文件所在的位置为基础建立出的目录路径（文件相对于html页面的位置）
绝对路径：从盘符开始的路径（或者完整 ...`,l:"interview-questions/html/start/index.html#路径",a:"路径"},"122.8":{t:"超链接标签",p:`用于定义链接，作用是从一个页面跳转到另一个页面
anchor：锚
 &lt;a href=&quot;跳转目标&quot;  ...`,l:"interview-questions/html/start/index.html#超链接标签",a:"超链接标签"},"122.9":{t:"HTML中的注释和特殊字符",p:`        &lt;!--注释--&gt;(键盘使用ctrl+/ 快捷加注释)

常用特殊字符：



特殊字符
描述
 ...`,l:"interview-questions/html/start/index.html#html中的注释和特殊字符",a:"html中的注释和特殊字符"},"122.10":{t:"表格标签",p:`显示、展示数据，不是用来布置页面
    &lt;table&gt;
 &lt;tr&gt;
  &lt;td&gt;单元格 ...`,l:"interview-questions/html/start/index.html#表格标签",a:"表格标签"},"122.11":{t:"表头单元格标签",p:`一般表头单元格位于表格的第一行或第一列，表头单元格中的文本内容加粗居中显示
th标签 表示html表格的表头部分（table ...`,l:"interview-questions/html/start/index.html#表头单元格标签",a:"表头单元格标签"},"122.12":{t:"表格结构标签",p:`可能表格很长，为了更好的表示表格标签的语义，可以将表格分割成表格头部和表格主体两大部分。
thead标签 表格的头部区域（所 ...`,l:"interview-questions/html/start/index.html#表格结构标签",a:"表格结构标签"},"122.13":{t:"合并单元格",p:`合并单元格的方式：

跨行合并：rowspan=&quot;合并单元格的个数&quot;
跨列合并：colspan=&quo ...`,l:"interview-questions/html/start/index.html#合并单元格",a:"合并单元格"},"122.14":{t:"列表标签",p:`用来布局
特点: 整齐、整洁、有序

列表可以分为三大类：无序列表、有序列表、自定义列表

`,l:"interview-questions/html/start/index.html#列表标签",a:"列表标签"},"122.15":{t:"无序列表",p:`ul标签 表示html页面中的无序列表，一般以项目符号呈现列表项，而列表项使用 li 定义
        &lt;ul&g ...`,l:"interview-questions/html/start/index.html#无序列表",a:"无序列表"},"122.16":{t:"有序列表",p:`ol标签 用于定义有序列表，列表排序以数字来显示，并且使用 li标签 来定义列表项
        &lt;ol&gt;
  ...`,l:"interview-questions/html/start/index.html#有序列表",a:"有序列表"},"122.17":{t:"自定义列表",p:`
通常在网页底部使用。

用于对术语或者名词进行解释和描述，自定义列表的列表项前没有任何项目符号
        &lt;d ...`,l:"interview-questions/html/start/index.html#自定义列表",a:"自定义列表"},"122.18":{t:"表单标签",p:`使用表单是为了 收集用户信息
在网页中我们也要跟用户进行交互，收集用户资料，此时就需要表单

表单的组成（常见于注册页面）
 ...`,l:"interview-questions/html/start/index.html#表单标签",a:"表单标签"},"122.19":{t:"表单域",p:`包含表单元素的区域
在html标签中，form标签 用于定义表单域，以实现用户信息的收集和传递。
form标签 会把它范围内 ...`,l:"interview-questions/html/start/index.html#表单域",a:"表单域"},"122.20":{t:"表单控件（表单元素）",p:`在表单域中定义的表单元素就是 允许用户在表单中输入或选择的内容控件

input 输入表单元素
select 下拉表单元素
 ...`,l:"interview-questions/html/start/index.html#表单控件-表单元素",a:"表单控件-表单元素"},"122.21":{t:"input表单元素",p:`包含一个type属性，根据不同的type属性值，输入的字段有很多种形式
 &lt;input type=&quot;属性值& ...`,l:"interview-questions/html/start/index.html#input表单元素",a:"input表单元素"},"122.22":{t:"label标签",p:`label标签为input元素定义标注（标签）
label标签用于绑定一个表单元素，当点击label标签内的文本时，浏览器会 ...`,l:"interview-questions/html/start/index.html#label标签",a:"label标签"},"122.23":{t:"select下拉表单元素",p:`页面中如果有多个选项让用户选择，并且想要节约空间时使用。
&lt;select&gt;
 &lt;option&gt;选项1 ...`,l:"interview-questions/html/start/index.html#select下拉表单元素",a:"select下拉表单元素"},"122.24":{t:"textarea文本域标签",p:`用户输入内容较多时使用，常见于留言板、评论。
textarea标签是用于定义多行文本输入的控件。
&lt;textarea  ...`,l:"interview-questions/html/start/index.html#textarea文本域标签",a:"textarea文本域标签"},"123.0":{t:"# 13个很酷但很少有人知道的HTML元素",p:`1. meter &amp; progress
元素是显示进度条的语义正确方式。
除了在已知范围内显示标量测量值外，它还允许 ...`,l:"interview-questions/html/tag/index.html",a:"_13个很酷但很少有人知道的html元素"},"123.1":{t:"注意",p:`
建议不仅限于文本，还可以与颜色，日期，时间甚至范围输入一起使用。
虽然建议的默认样式看起来很简陋。但是我们可以使用CSS设 ...`,l:"interview-questions/html/tag/index.html#注意",a:"注意"},"124.0":{t:"# 如何理解 JS 的异步？",p:`
JS是一门单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个。
而渲染主线程承担着诸多的工作，渲染页 ...`,l:"interview-questions/js/async/index.html",a:"如何理解-js-的异步"},"125.0":{t:"# 浅拷贝与深拷贝",p:`浅拷贝与深拷贝


浅拷贝是创建一个新对象，这个对象有着原始对象属性值的一份精确拷贝。如果属性是基本类型，拷贝的就是基本类型 ...`,l:"interview-questions/js/copy/index.html",a:"浅拷贝与深拷贝"},"125.1":{t:"1.Object.assign()",p:`Object.assign() 方法可以把任意多个的源对象自身的可枚举属性拷贝给目标对象，然后返回目标对象。
let obj ...`,l:"interview-questions/js/copy/index.html#_1-object-assign",a:"_1-object-assign"},"125.2":{t:"2.函数库lodash的\\_.clone方法",p:`该函数库也有提供_.clone用来做 Shallow Copy,后面我们会再介绍利用这个库实现深拷贝。
var _ = re ...`,l:"interview-questions/js/copy/index.html#_2-函数库lodash的-clone方法",a:"_2-函数库lodash的-clone方法"},"125.3":{t:"3.展开运算符",p:"展开运算符是一个 es6 / es2015特性，它提供了一种非常方便的方式来执行浅拷贝，这与 Object.assign ( ...",l:"interview-questions/js/copy/index.html#_3-展开运算符",a:"_3-展开运算符"},"125.4":{t:"4.Array.prototype.concat()",p:`let arr = [1, 3, {
    username: 'kobe'
    }];
let arr2 = arr ...`,l:"interview-questions/js/copy/index.html#_4-array-prototype-concat",a:"_4-array-prototype-concat"},"125.5":{t:"5.Array.prototype.slice()",p:`let arr = [1, 3, {
    username: ' kobe'
    }];
let arr3 = ar ...`,l:"interview-questions/js/copy/index.html#_5-array-prototype-slice",a:"_5-array-prototype-slice"},"125.6":{t:"1.JSON.parse(JSON.stringify())",p:`let arr = [1, 3, {
    username: ' kobe'
}];
let arr4 = JSON.p ...`,l:"interview-questions/js/copy/index.html#_1-json-parse-json-stringify",a:"_1-json-parse-json-stringify"},"125.7":{t:"2.函数库lodash的\\_.cloneDeep方法",p:`该函数库也有提供_.cloneDeep用来做 Deep Copy
var _ = require('lodash');
va ...`,l:"interview-questions/js/copy/index.html#_2-函数库lodash的-clonedeep方法",a:"_2-函数库lodash的-clonedeep方法"},"125.8":{t:"3.jQuery.extend()方法",p:`jquery 有提供一個$.extend可以用来做 Deep Copy
$.extend(deepCopy, target, ...`,l:"interview-questions/js/copy/index.html#_3-jquery-extend-方法",a:"_3-jquery-extend-方法"},"125.9":{t:"4.手写递归方法",p:`递归方法实现深度克隆原理：遍历对象、数组直到里边都是基本数据类型，然后再去复制，就是深度拷贝。
有种特殊情况需注意就是对象存 ...`,l:"interview-questions/js/copy/index.html#_4-手写递归方法",a:"_4-手写递归方法"},"126.0":{t:"# 九种跨域方式实现原理",p:"",l:"interview-questions/js/cross-domain/index.html",a:"九种跨域方式实现原理"},"126.1":{t:"一、什么是跨域？",p:`
`,l:"interview-questions/js/cross-domain/index.html#一、什么是跨域",a:"一、什么是跨域"},"126.2":{t:"1.什么是同源策略及其限制内容？",p:"同源策略是一种约定，它是浏览器最核心也最基本的安全功能，如果缺少了同源策略，浏览器很容易受到XSS、CSRF等攻击。所谓同源 ...",l:"interview-questions/js/cross-domain/index.html#_1-什么是同源策略及其限制内容",a:"_1-什么是同源策略及其限制内容"},"126.3":{t:"4.websocket",p:"Websocket是HTML5的一个持久化的协议，它实现了浏览器与服务器的全双工通信，同时也是跨域的一种解决方案。WebSo ...",l:"interview-questions/js/cross-domain/index.html#_4-websocket",a:"_4-websocket"},"126.4":{t:"5\\. Node中间件代理(两次跨域)",p:`实现原理：同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略。 代理服务器，需要做以下几个步骤：
 ...`,l:"interview-questions/js/cross-domain/index.html#_5-node中间件代理-两次跨域",a:"_5-node中间件代理-两次跨域"},"126.5":{t:"6.nginx反向代理",p:`实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。
使用nginx反向代理实现跨域，是最简 ...`,l:"interview-questions/js/cross-domain/index.html#_6-nginx反向代理",a:"_6-nginx反向代理"},"126.6":{t:"7.window.name + iframe",p:"window.name属性的独特之处：name值在不同的页面（甚至不同域名）加载后依旧存在，并且可以支持非常长的 name  ...",l:"interview-questions/js/cross-domain/index.html#_7-window-name-iframe",a:"_7-window-name-iframe"},"126.7":{t:"8.location.hash + iframe",p:"实现原理： a.html欲与c.html跨域相互通信，通过中间页b.html来实现。 三个页面，不同域之间利用iframe的 ...",l:"interview-questions/js/cross-domain/index.html#_8-location-hash-iframe",a:"_8-location-hash-iframe"},"126.8":{t:"9.document.domain + iframe该方式只能用于二级域名相同的情况下，比如 `a.test.com` 和 `b.test.com` 适用于该方式**。 只需要给页面添加 `document.domain ='test.com'` 表示二级域名都相同就可以实现跨域。",p:`实现原理：两个页面都通过js强制设置document.domain为基础主域，就实现了同域。
我们看个例子：页面a.zf1. ...`,l:"interview-questions/js/cross-domain/index.html#_9-document-domain-iframe该方式只能用于二级域名相同的情况下-比如-a-test-com-和-b-test-com-适用于该方式-。-只需要给页面添加-document-domain-test-com-表示二级域名都相同就可以实现跨域。",a:"_9-document-domain-iframe该方式只能用于二级域名相同的情况下-比如-a-test-com-和-b-test-com-适用于该方式-。-只需要给页面添加-document-domain-test-com-表示二级域名都相同就可以实现跨域。"},"127.0":{t:"# 从ES6到ES10",p:"",l:"interview-questions/js/es/index.html",a:"从es6到es10"},"127.1":{t:"历史版本",p:`至发稿日为止有九个ECMA-262版本发表。其历史版本如下：

1997年6月：第一版
1998年6月：修改格式，使其与IS ...`,l:"interview-questions/js/es/index.html#历史版本",a:"历史版本"},"127.2":{t:"发展标准",p:"TC39（Technical Committee 39）是一个推动JavaScript发展的委员会，它的成语来自各个主流浏览 ...",l:"interview-questions/js/es/index.html#发展标准",a:"发展标准"},"127.3":{t:"Let 和 Const",p:"在ES6以前，JS只有var一种声明方式，但是在ES6之后，就多了let跟const这两种方式。用var定义的变量没有块级作 ...",l:"interview-questions/js/es/index.html#let-和-const",a:"let-和-const"},"127.4":{t:"类（Class）",p:`在ES6之前，如果我们要生成一个实例对象，传统的方法就是写一个构造函数，例子如下：
function Person(name ...`,l:"interview-questions/js/es/index.html#类-class",a:"类-class"},"127.5":{t:"箭头函数（Arrow function）",p:"箭头函数表达式的语法比函数表达式更简洁，并且没有自己的this，arguments，super或 new.target。这些 ...",l:"interview-questions/js/es/index.html#箭头函数-arrow-function",a:"箭头函数-arrow-function"},"127.6":{t:"函数参数默认值（Function parameter defaults）",p:`在ES6之前，如果我们写函数需要定义初始值的时候，需要这么写：
function config (data) {
    v ...`,l:"interview-questions/js/es/index.html#函数参数默认值-function-parameter-defaults",a:"函数参数默认值-function-parameter-defaults"},"127.7":{t:"模板字符串（Template string）",p:`在ES6之前，如果我们要拼接字符串，则需要像这样：
var name = 'kris'
var age = 24
var i ...`,l:"interview-questions/js/es/index.html#模板字符串-template-string",a:"模板字符串-template-string"},"127.8":{t:"解构赋值（Destructuring assignment）",p:`我们通过解构赋值, 可以将属性/值从对象/数组中取出,赋值给其他变量。
比如我们需要交换两个变量的值，在ES6之前我们可能需 ...`,l:"interview-questions/js/es/index.html#解构赋值-destructuring-assignment",a:"解构赋值-destructuring-assignment"},"127.9":{t:"模块化（Module）",p:"在ES6之前，JS并没有模块化的概念，有的也只是社区定制的类似CommonJS和AMD之类的规则。例如基于CommonJS的 ...",l:"interview-questions/js/es/index.html#模块化-module",a:"模块化-module"},"127.10":{t:"扩展操作符（Spread operator）",p:"扩展操作符可以在函数调用/数组构造时, 将数组表达式或者string在语法层面展开；还可以在构造字面量对象时, 将对象表达式 ...",l:"interview-questions/js/es/index.html#扩展操作符-spread-operator",a:"扩展操作符-spread-operator"},"127.11":{t:"对象属性简写（Object attribute shorthand）",p:`在ES6之前，如果我们要将某个变量赋值为同样名称的对象元素，则需要：
var cat = 'Miaow'
var dog = ...`,l:"interview-questions/js/es/index.html#对象属性简写-object-attribute-shorthand",a:"对象属性简写-object-attribute-shorthand"},"127.12":{t:"Promise",p:`Promise 是ES6提供的一种异步解决方案，比回调函数更加清晰明了。
Promise 翻译过来就是承诺的意思，这个承诺会 ...`,l:"interview-questions/js/es/index.html#promise",a:"promise"},"127.13":{t:"for...of",p:"for...of语句在可迭代对象（包括 Array，Map，Set，String，TypedArray，arguments  ...",l:"interview-questions/js/es/index.html#for-of",a:"for-of"},"127.14":{t:"Symbol",p:"symbol 是一种基本数据类型，Symbol()函数会返回symbol类型的值，该类型具有静态属性和静态方法。它的静态属性 ...",l:"interview-questions/js/es/index.html#symbol",a:"symbol"},"127.15":{t:"迭代器（Iterator）/ 生成器（Generator）",p:"迭代器（Iterator）是一种迭代的机制，为各种不同的数据结构提供统一的访问机制。任何数据结构只要内部有 Iterator ...",l:"interview-questions/js/es/index.html#迭代器-iterator-生成器-generator",a:"迭代器-iterator-生成器-generator"},"127.16":{t:"Set/WeakSet",p:`Set 对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用。
所以我们可以通过Set实现数组去重
const num ...`,l:"interview-questions/js/es/index.html#set-weakset",a:"set-weakset"},"127.17":{t:"Map/WeakMap",p:`Map 对象保存键值对。任何值(对象或者原始值) 都可以作为一个键或一个值。
例子如下，我们甚至可以使用NaN来作为键值：
 ...`,l:"interview-questions/js/es/index.html#map-weakmap",a:"map-weakmap"},"127.18":{t:"Proxy/Reflect",p:`Proxy 对象用于定义基本操作的自定义行为（如属性查找，赋值，枚举，函数调用等）。
Reflect 是一个内置的对象，它提 ...`,l:"interview-questions/js/es/index.html#proxy-reflect",a:"proxy-reflect"},"127.19":{t:"Regex对象的扩展",p:"",l:"interview-questions/js/es/index.html#regex对象的扩展",a:"regex对象的扩展"},"127.20":{t:"正则新增符号",p:`

i 修饰符
// i 修饰符
/[a-z]/i.test('\\u212A') // false
/[a-z]/iu.te ...`,l:"interview-questions/js/es/index.html#正则新增符号",a:"正则新增符号"},"127.21":{t:"字符串方法的实现改为调用`RegExp`方法",p:`
String.prototype.match 调用 RegExp.prototype[Symbol.match]
Stri ...`,l:"interview-questions/js/es/index.html#字符串方法的实现改为调用-regexp-方法",a:"字符串方法的实现改为调用-regexp-方法"},"127.22":{t:"正则新增属性",p:`

RegExp.prototype.sticky 表示是否有y修饰符
/hello\\d/y.sticky // true
 ...`,l:"interview-questions/js/es/index.html#正则新增属性",a:"正则新增属性"},"127.23":{t:"Math对象的扩展",p:`

二进制表示法 : 0b或0B开头表示二进制(0bXX或0BXX)


二进制表示法 : 0b或0B开头表示二进制(0bX ...`,l:"interview-questions/js/es/index.html#math对象的扩展",a:"math对象的扩展"},"127.24":{t:"Array对象的扩展",p:`

Array.prototype.from：转换具有Iterator接口的数据结构为真正数组，返回新数组。
console ...`,l:"interview-questions/js/es/index.html#array对象的扩展",a:"array对象的扩展"},"127.25":{t:"Array.prototype.includes()",p:`includes() 方法用来判断一个数组是否包含一个指定的值，根据情况，如果包含则返回 true，否则返回false。
代 ...`,l:"interview-questions/js/es/index.html#array-prototype-includes",a:"array-prototype-includes"},"127.26":{t:"幂运算符\\*\\*",p:`幂运算符**，具有与Math.pow()一样的功能，代码如下：
console.log(2**10) // 1024
con ...`,l:"interview-questions/js/es/index.html#幂运算符",a:"幂运算符"},"127.27":{t:"模板字符串（Template string）",p:`自ES7起，带标签的模版字面量遵守以下转义序列的规则：

Unicode字符以&quot;\\u&quot;开头，例如\\u00 ...`,l:"interview-questions/js/es/index.html#模板字符串-template-string",a:"模板字符串-template-string"},"127.28":{t:"async/await",p:"虽然Promise可以解决回调地狱的问题，但是链式调用太多，则会变成另一种形式的回调地狱 —— 面条地狱，所以在ES8里则出 ...",l:"interview-questions/js/es/index.html#async-await",a:"async-await"},"127.29":{t:"Object.values()",p:"Object.values()方法返回一个给定对象自身的所有可枚举属性值的数组，值的顺序与使用for...in循环的顺序相同 ...",l:"interview-questions/js/es/index.html#object-values",a:"object-values"},"127.30":{t:"Object.entries()",p:"Object.entries()方法返回一个给定对象自身可枚举属性的键值对数组，其排列与使用 for...in 循环遍历该对 ...",l:"interview-questions/js/es/index.html#object-entries",a:"object-entries"},"127.31":{t:"padStart()",p:"padStart() 方法用另一个字符串填充当前字符串(重复，如果需要的话)，以便产生的字符串达到给定的长度。填充从当前字符 ...",l:"interview-questions/js/es/index.html#padstart",a:"padstart"},"127.32":{t:"padEnd()",p:"padEnd() 方法会用一个字符串填充当前字符串（如果需要的话则重复填充），返回填充后达到指定长度的字符串。从当前字符串的 ...",l:"interview-questions/js/es/index.html#padend",a:"padend"},"127.33":{t:"函数参数结尾逗号（Function parameter lists and calls trailing commas）",p:`在ES5里就添加了对象的尾逗号，不过并不支持函数参数，但是在ES8之后，便开始支持这一特性，代码如下：
// 参数定义
fu ...`,l:"interview-questions/js/es/index.html#函数参数结尾逗号-function-parameter-lists-and-calls-trailing-commas",a:"函数参数结尾逗号-function-parameter-lists-and-calls-trailing-commas"},"127.34":{t:"ShareArrayBuffer（因安全问题，暂时在Chrome跟FireFox中被禁用）",p:"SharedArrayBuffer 对象用来表示一个通用的，固定长度的原始二进制数据缓冲区，类似于 ArrayBuffer  ...",l:"interview-questions/js/es/index.html#sharearraybuffer-因安全问题-暂时在chrome跟firefox中被禁用",a:"sharearraybuffer-因安全问题-暂时在chrome跟firefox中被禁用"},"127.35":{t:"Atomics对象",p:`Atomics对象 提供了一组静态方法用来对 SharedArrayBuffer 对象进行原子操作。
方法如下：


Ato ...`,l:"interview-questions/js/es/index.html#atomics对象",a:"atomics对象"},"127.36":{t:"Object.getOwnPropertyDescriptors()",p:"Object.getOwnPropertyDescriptors() 方法用来获取一个对象的所有自身属性的描述符。代码如下： ...",l:"interview-questions/js/es/index.html#object-getownpropertydescriptors",a:"object-getownpropertydescriptors"},"127.37":{t:"for await...of",p:"for await...of 语句会在异步或者同步可迭代对象上创建一个迭代循环，包括 String，Array，Array- ...",l:"interview-questions/js/es/index.html#for-await-of",a:"for-await-of"},"127.38":{t:"模板字符串（Template string）",p:`ES9开始，模板字符串允许嵌套支持常见转义序列，移除对ECMAScript在带标签的模版字符串中转义序列的语法限制。
不过， ...`,l:"interview-questions/js/es/index.html#模板字符串-template-string",a:"模板字符串-template-string"},"127.39":{t:"正则表达式反向(lookbehind)断言",p:`首先我们得先知道什么是断言(Assertion)。
**断言(Assertion)**是一个对当前匹配位置之前或之后的字符的 ...`,l:"interview-questions/js/es/index.html#正则表达式反向-lookbehind-断言",a:"正则表达式反向-lookbehind-断言"},"127.40":{t:"正则表达式 Unicode 转义",p:"正则表达式中的Unicode转义符允许根据Unicode字符属性匹配Unicode字符。 它允许区分字符类型，例如大写和小写 ...",l:"interview-questions/js/es/index.html#正则表达式-unicode-转义",a:"正则表达式-unicode-转义"},"127.41":{t:"正则表达式 s/dotAll 模式",p:`在以往的版本里，JS的正则的.只能匹配emoji跟行终结符以外的所有文本，例如：
let regex = /./;

reg ...`,l:"interview-questions/js/es/index.html#正则表达式-s-dotall-模式",a:"正则表达式-s-dotall-模式"},"127.42":{t:"正则表达式命名捕获组",p:"在以往的版本里，JS的正则分组是无法命名的，所以容易混淆。例如下面获取年月日的例子，很容易让人搞不清哪个是月份，哪个是年份: ...",l:"interview-questions/js/es/index.html#正则表达式命名捕获组",a:"正则表达式命名捕获组"},"127.43":{t:"对象扩展操作符",p:"ES6中添加了数组的扩展操作符，让我们在操作数组时更加简便，美中不足的是并不支持对象扩展操作符，但是在ES9开始，这一功能也 ...",l:"interview-questions/js/es/index.html#对象扩展操作符",a:"对象扩展操作符"},"127.44":{t:"Promise.prototype.finally()",p:"finally()方法会返回一个Promise，当promise的状态变更，不管是变成rejected或者fulfilled ...",l:"interview-questions/js/es/index.html#promise-prototype-finally",a:"promise-prototype-finally"},"127.45":{t:"Array.prototype.flat() / flatMap()",p:`flat() 方法会按照一个可指定的深度递归遍历数组，并将所有元素与遍历到的子数组中的元素合并为一个新数组返回。
flatM ...`,l:"interview-questions/js/es/index.html#array-prototype-flat-flatmap",a:"array-prototype-flat-flatmap"},"127.46":{t:"String.prototype.trimStart() / trimLeft() / trimEnd() / trimRight()",p:"在ES5中，我们可以通过trim()来去掉字符首尾的空格，但是却无法只去掉单边的，但是在ES10之后，我们可以实现这个功能。 ...",l:"interview-questions/js/es/index.html#string-prototype-trimstart-trimleft-trimend-trimright",a:"string-prototype-trimstart-trimleft-trimend-trimright"},"127.47":{t:"Object.fromEntries()",p:`Object.fromEntries() 方法把键值对列表转换为一个对象，它是Object.entries()的反函数。
例 ...`,l:"interview-questions/js/es/index.html#object-fromentries",a:"object-fromentries"},"127.48":{t:"Symbol.prototype.description",p:"description 是一个只读属性，它会返回Symbol对象的可选描述的字符串。与 Symbol.prototype.t ...",l:"interview-questions/js/es/index.html#symbol-prototype-description",a:"symbol-prototype-description"},"127.49":{t:"String.prototype.matchAll",p:"matchAll() 方法返回一个包含所有匹配正则表达式的结果及分组捕获组的迭代器。并且返回一个不可重启的迭代器。例子如下： ...",l:"interview-questions/js/es/index.html#string-prototype-matchall",a:"string-prototype-matchall"},"127.50":{t:"Function.prototype.toString() 返回注释与空格",p:"在以往的版本中，Function.prototype.toString()得到的字符串是去掉空白符号的，但是从ES10开始会 ...",l:"interview-questions/js/es/index.html#function-prototype-tostring-返回注释与空格",a:"function-prototype-tostring-返回注释与空格"},"127.51":{t:"try-catch",p:`在以往的版本中，try-catch里catch后面必须带异常参数，例如：
    // ES10之前
try {
      ...`,l:"interview-questions/js/es/index.html#try-catch",a:"try-catch"},"127.52":{t:"BigIntBigInt** 是一种内置对象，它提供了一种方法来表示大于 `253 - 1` 的整数。这原本是 Javascript中可以用 `Number` 表示的最大数字。BigInt 可以表示任意大的整数。",p:`可以用在一个整数字面量后面加 n 的方式定义一个 BigInt ，如：10n，或者调用函数BigInt()。
在以往的版本中 ...`,l:"interview-questions/js/es/index.html#bigintbigint-是一种内置对象-它提供了一种方法来表示大于-253-1-的整数。这原本是-javascript中可以用-number-表示的最大数字。bigint-可以表示任意大的整数。",a:"bigintbigint-是一种内置对象-它提供了一种方法来表示大于-253-1-的整数。这原本是-javascript中可以用-number-表示的最大数字。bigint-可以表示任意大的整数。"},"127.53":{t:"globalThis",p:`globalThis属性包含类似于全局对象 this值。所以在全局环境下，我们有：
globalThis === this  ...`,l:"interview-questions/js/es/index.html#globalthis",a:"globalthis"},"127.54":{t:"import 语句",p:"静态的 import 语句用于导入由另一个模块导出的绑定。无论是否声明了 严格模式，导入的模块都运行在严格模式下。在浏览器中 ...",l:"interview-questions/js/es/index.html#import-语句",a:"import-语句"},"127.55":{t:"私有元素与方法",p:`在ES10之前，如果我们要实现一个简单的计数器组件，我们可能会这么写：
// web component 写法
class  ...`,l:"interview-questions/js/es/index.html#私有元素与方法",a:"私有元素与方法"},"128.0":{t:"# 阐述一下 JS 的事件循环",p:`
事件循环又叫做消息循环，是浏览器渲染主线程的工作方式。
官方叫做 event loop  浏览器叫做 message lo ...`,l:"interview-questions/js/event-loop/index.html",a:"阐述一下-js-的事件循环"},"129.0":{t:"# for-in vs for-of",p:"",l:"interview-questions/js/forIn-forOf/index.html",a:"for-in-vs-for-of"},"129.1":{t:"for...in的特点",p:`
for … in 循环返回的值都是数据结构的 键值名(即下标)。
遍历对象返回的对象的key值,遍历数组返回的数组的下标( ...`,l:"interview-questions/js/forIn-forOf/index.html#for-in的特点",a:"for-in的特点"},"129.2":{t:"代码示例",p:`
function Foo() {
 this[99] = 'test-100'
 this[1] = 'test-1'
  ...`,l:"interview-questions/js/forIn-forOf/index.html#代码示例",a:"代码示例"},"129.3":{t:"for… in遍历数组的毛病",p:`
index索引为字符串型数字，不能直接进行几何运算
遍历顺序有可能不是按照实际数组的内部顺序
使用for… in会遍历数组 ...`,l:"interview-questions/js/forIn-forOf/index.html#for-in遍历数组的毛病",a:"for-in遍历数组的毛病"},"129.4":{t:"for… of 特点",p:`for… of 循环用来获取一对键值对中的 值,而 for… in 获取的是 键名

一个数据结构只要部署了Symbol.i ...`,l:"interview-questions/js/forIn-forOf/index.html#for-of-特点",a:"for-of-特点"},"129.5":{t:"代码示例",p:`var obj={
　　a:1,
　　b:2,
　　c:3
}
for (var key of Object.keys(ob ...`,l:"interview-questions/js/forIn-forOf/index.html#代码示例",a:"代码示例"},"129.6":{t:"for... of遍历类数组对象代码示例",p:`  // 字符串
  var str = &quot;hello&quot;;
  for (let s of str) { ...`,l:"interview-questions/js/forIn-forOf/index.html#for-of遍历类数组对象代码示例",a:"for-of遍历类数组对象代码示例"},"129.7":{t:"总结",p:`
无论是for...in还是for...of语句都是迭代一些东西。它们之间的主要区别在于它们的迭代方式。
对于for...  ...`,l:"interview-questions/js/forIn-forOf/index.html#总结",a:"总结"},"129.8":{t:"总结来说",p:`for... of 常用于遍历数组
for... in 常用于遍历对象
`,l:"interview-questions/js/forIn-forOf/index.html#总结来说",a:"总结来说"},"130.0":{t:"# JSON stringify 特性",p:"",l:"interview-questions/js/json-stringify/index.html",a:"json-stringify-特性"},"130.1":{t:"JSON.stringify()",p:"",l:"interview-questions/js/json-stringify/index.html#json-stringify",a:"json-stringify"},"130.2":{t:"JSON.stringify() 第一大特性总结",p:`
undefined、任意的函数以及 symbol 作为对象属性值时 JSON.stringify() 对跳过（忽略）它们进 ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第一大特性总结",a:"json-stringify-第一大特性总结"},"130.3":{t:"JSON.stringify() 第二大特性",p:`
非数组对象的属性不能保证以特定的顺序出现在序列化后的字符串中。

const data = {
  a: &quot;aa ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第二大特性",a:"json-stringify-第二大特性"},"130.4":{t:"JSON.stringify() 第三大特性",p:`
转换值如果有 toJSON() 函数，该函数返回什么值，序列化结果就是什么值，并且忽略其他属性的值。

JSON.stri ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第三大特性",a:"json-stringify-第三大特性"},"130.5":{t:"JSON.stringify()第四大特性",p:`
JSON.stringify() 将会正常序列化 Date 的值。

JSON.stringify({ now: new  ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第四大特性",a:"json-stringify-第四大特性"},"130.6":{t:"JSON.stringify() 第五大特性",p:`NaN 和 Infinity 格式的数值及 null 都会被当做 null。

JSON.stringify(NaN)
// ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第五大特性",a:"json-stringify-第五大特性"},"130.7":{t:"JSON.stringify() 第六大特性",p:`关于基本类型的序列化：

布尔值、数字、字符串的包装对象在序列化过程中会自动转换成对应的原始值。

JSON.stringi ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第六大特性",a:"json-stringify-第六大特性"},"130.8":{t:"JSON.stringify() 第七大特性",p:`关于对象属性的是否可枚举：

其他类型的对象，包括 Map/Set/WeakMap/WeakSet，仅会序列化可枚举的属性。 ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第七大特性",a:"json-stringify-第七大特性"},"130.9":{t:"JSON.stringify() 第八大特性",p:"我们都知道实现深拷贝最简单粗暴的方式就是序列化：JSON.parse(JSON.stringify())，这个方式实现深拷贝 ...",l:"interview-questions/js/json-stringify/index.html#json-stringify-第八大特性",a:"json-stringify-第八大特性"},"130.10":{t:"JSON.stringify() 第九大特性",p:`
所有以 symbol 为属性键的属性都会被完全忽略掉，即便 replacer 参数中强制指定包含了它们。

JSON.st ...`,l:"interview-questions/js/json-stringify/index.html#json-stringify-第九大特性",a:"json-stringify-第九大特性"},"130.11":{t:"JSON.stringify() 第二个参数和第三个参数",p:"",l:"interview-questions/js/json-stringify/index.html#json-stringify-第二个参数和第三个参数",a:"json-stringify-第二个参数和第三个参数"},"130.12":{t:"强大的第二个参数",p:`
作为函数时，它有两个参数，键（key）和值（value），函数类似就是数组方法 map、filter 等方法的回调函数，对 ...`,l:"interview-questions/js/json-stringify/index.html#强大的第二个参数",a:"强大的第二个参数"},"130.13":{t:"华丽的第三个参数",p:`
如果是一个数字, 则在字符串化时每一级别会比上一级别缩进多这个数字值的空格（最多10个空格）；
如果是一个字符串，则每一级 ...`,l:"interview-questions/js/json-stringify/index.html#华丽的第三个参数",a:"华丽的第三个参数"},"131.0":{t:"# 常用的js 函数 -手写",p:"",l:"interview-questions/js/my-js/index.html",a:"常用的js-函数-手写"},"131.1":{t:"手写 map",p:`function myMap (fn,content)  {
    let arr = Array.prototype.s ...`,l:"interview-questions/js/my-js/index.html#手写-map",a:"手写-map"},"131.2":{t:"手写 filter",p:`function myFilter (fn,content)  {
    let arr = Array.prototyp ...`,l:"interview-questions/js/my-js/index.html#手写-filter",a:"手写-filter"},"131.3":{t:"手写 some",p:`function mySome (fn,content)  {
    let arr = Array.prototype. ...`,l:"interview-questions/js/my-js/index.html#手写-some",a:"手写-some"},"131.4":{t:"手写 every",p:`function myEvery (fn,content)  {
    let arr = Array.prototype ...`,l:"interview-questions/js/my-js/index.html#手写-every",a:"手写-every"},"131.5":{t:"手写 find",p:`function myFind (fn,content)  {
    let arr = Array.prototype. ...`,l:"interview-questions/js/my-js/index.html#手写-find",a:"手写-find"},"131.6":{t:"手写 findIndex",p:`function myFindIndex (fn,content)  {
    let arr = Array.proto ...`,l:"interview-questions/js/my-js/index.html#手写-findindex",a:"手写-findindex"},"131.7":{t:"手写 new",p:`function myNew(){
  // 1. 创建一个空对象
  let targetObj={}
  let [co ...`,l:"interview-questions/js/my-js/index.html#手写-new",a:"手写-new"},"131.8":{t:"手写 call",p:`Function.prototype.myCall = function (content) {
    if(typeof ...`,l:"interview-questions/js/my-js/index.html#手写-call",a:"手写-call"},"131.9":{t:"手写 apply",p:`Function.prototype.myApply = function (content) {
    if(typeo ...`,l:"interview-questions/js/my-js/index.html#手写-apply",a:"手写-apply"},"131.10":{t:"手写 bind",p:`Function.prototype.myBind = function (context) {
  if (typeof  ...`,l:"interview-questions/js/my-js/index.html#手写-bind",a:"手写-bind"},"131.11":{t:"手写instanceof",p:`function myInstanceof(left, right) {
  let prototype = right.p ...`,l:"interview-questions/js/my-js/index.html#手写instanceof",a:"手写instanceof"},"132.0":{t:"# 手写 promise",p:"",l:"interview-questions/js/my-promise/index.html",a:"手写-promise"},"132.1":{t:"MyPromise",p:`class MyPromise {
  // 定义 promise 状态
  static PENDING = 'pendi ...`,l:"interview-questions/js/my-promise/index.html#mypromise",a:"mypromise"},"132.2":{t:"Promise.race",p:`Promise.myRace = function (promises) {
  return new Promise((r ...`,l:"interview-questions/js/my-promise/index.html#promise-race",a:"promise-race"},"132.3":{t:"Promise.any",p:`Promise.myAny = function (promises) {
  return new Promise((re ...`,l:"interview-questions/js/my-promise/index.html#promise-any",a:"promise-any"},"132.4":{t:"Promise.all",p:`Promise.myAll = function (promises) {
  return new Promise((re ...`,l:"interview-questions/js/my-promise/index.html#promise-all",a:"promise-all"},"133.0":{t:"# 跨页面通信",p:"",l:"interview-questions/js/page-communication/index.html",a:"跨页面通信"},"133.1":{t:"1. BroadCast Channel",p:"BroadCast Channel 可以帮我们创建一个用于广播的通信频道。当所有页面都监听同一频道的消息时，其中某一个页面通 ...",l:"interview-questions/js/page-communication/index.html#_1-broadcast-channel",a:"_1-broadcast-channel"},"133.2":{t:"2. Service Worker",p:"Service Worker 是一个可以长期运行在后台的 Worker，能够实现与页面的双向通信。多页面共享间的 Servi ...",l:"interview-questions/js/page-communication/index.html#_2-service-worker",a:"_2-service-worker"},"133.3":{t:"3. LocalStorage",p:"LocalStorage 作为前端最常用的本地存储，大家应该已经非常熟悉了；但StorageEvent这个与它相关的事件有些 ...",l:"interview-questions/js/page-communication/index.html#_3-localstorage",a:"_3-localstorage"},"133.4":{t:"4. Shared Worker",p:"Shared Worker 是 Worker 家族的另一个成员。普通的 Worker 之间是独立运行、数据互不相通；而多个  ...",l:"interview-questions/js/page-communication/index.html#_4-shared-worker",a:"_4-shared-worker"},"133.5":{t:"5. IndexedDB",p:"除了可以利用 Shared Worker 来共享存储数据，还可以使用其他一些“全局性”（支持跨页面）的存储方案。例如 Ind ...",l:"interview-questions/js/page-communication/index.html#_5-indexeddb",a:"_5-indexeddb"},"133.6":{t:"6. window.open + window.opener",p:"当我们使用window.open打开页面时，方法会返回一个被打开页面window的引用。而在未显示指定noopener时，被 ...",l:"interview-questions/js/page-communication/index.html#_6-window-open-window-opener",a:"_6-window-open-window-opener"},"133.7":{t:"二、非同源页面之间的通信",p:"上面我们介绍了七种前端跨页面通信的方法，但它们大都受到同源策略的限制。然而有时候，我们有两个不同域名的产品线，也希望它们下面 ...",l:"interview-questions/js/page-communication/index.html#二、非同源页面之间的通信",a:"二、非同源页面之间的通信"},"133.8":{t:"总结",p:"",l:"interview-questions/js/page-communication/index.html#总结",a:"总结"},"133.9":{t:"对于同源页面，常见的方式包括",p:`
广播模式：Broadcast Channe / Service Worker / LocalStorage + Stora ...`,l:"interview-questions/js/page-communication/index.html#对于同源页面-常见的方式包括",a:"对于同源页面-常见的方式包括"},"134.0":{t:"# 细说前端路由的hash模式和 history模式",p:"",l:"interview-questions/js/router/index.html",a:"细说前端路由的hash模式和-history模式"},"134.1":{t:"为什么要用",p:"AJAX局部刷新，导致浏览器的URL不会发生任何变化而完成了请求，从而破坏了用户浏览体验。同时本次浏览的页面内容在用户下次使 ...",l:"interview-questions/js/router/index.html#为什么要用",a:"为什么要用"},"134.2":{t:"前端路由实现方式",p:"在单页面web网页中, 单纯的浏览器地址改变, 网页不会重载，如单纯的hash网址改变网页不会变化，因此我们的路由主要是通过 ...",l:"interview-questions/js/router/index.html#前端路由实现方式",a:"前端路由实现方式"},"134.3":{t:"1.hash模式",p:"使用window.location.hash属性及窗口的onhashchange事件，可以实现监听浏览器地址hash值变化， ...",l:"interview-questions/js/router/index.html#_1-hash模式",a:"_1-hash模式"},"134.4":{t:"2.history模式",p:`概述
window.history 属性指向 History 对象，它表示当前窗口的浏览历史。当发生改变时，只会改变页面的路 ...`,l:"interview-questions/js/router/index.html#_2-history模式",a:"_2-history模式"},"135.0":{t:"# JS 中的计时器能做到精确计时吗？为什么？",p:`
不行，因为：计算机硬件没有原子钟，使用 cpu 计时器做的 所以 无法做到精确计时
操作系统的计时函数本身就有少量偏差，由 ...`,l:"interview-questions/js/timer-accurate/index.html",a:"js-中的计时器能做到精确计时吗-为什么"},"136.0":{t:"# URL 转码 和解码",p:"",l:"interview-questions/js/url-encryption-to-decrypt/index.html",a:"url-转码-和解码"},"136.1":{t:"1. escape 和 unescape",p:`
escape()不能直接用于URL编码，它的真正作用是返回一个字符的Unicode编码值。
采用unicode字符集对指定 ...`,l:"interview-questions/js/url-encryption-to-decrypt/index.html#_1-escape-和-unescape",a:"_1-escape-和-unescape"},"136.2":{t:"escape不编码字符有69个：*，+，-，.，/，@，_，0-9，a-z，A-Z",p:`escape()函数用于js对字符串进行编码，不常用。
　var url = &quot;http://localhost: ...`,l:"interview-questions/js/url-encryption-to-decrypt/index.html#escape不编码字符有69个-0-9-a-z-a-z",a:"escape不编码字符有69个-0-9-a-z-a-z"},"136.3":{t:"2. encodeURI 和 decodeURI 把URI字符串采用UTF-8编码格式转化成escape各式的字符串。",p:"",l:"interview-questions/js/url-encryption-to-decrypt/index.html#_2-encodeuri-和-decodeuri-把uri字符串采用utf-8编码格式转化成escape各式的字符串。",a:"_2-encodeuri-和-decodeuri-把uri字符串采用utf-8编码格式转化成escape各式的字符串。"},"136.4":{t:"encodeURI不编码字符有82个：!，#，$，&，'，(，)，*，+，,，-，.，/，:，;，=，?，@，_，~，0-9，a-z，A-Z",p:`
encodeURI()用于整个url编码

　　var url = &quot;http://localhost:8080 ...`,l:"interview-questions/js/url-encryption-to-decrypt/index.html#encodeuri不编码字符有82个-0-9-a-z-a-z",a:"encodeuri不编码字符有82个-0-9-a-z-a-z"},"136.5":{t:"3. encodeURIComponent 和 decodeURIComponent",p:"",l:"interview-questions/js/url-encryption-to-decrypt/index.html#_3-encodeuricomponent-和-decodeuricomponent",a:"_3-encodeuricomponent-和-decodeuricomponent"},"136.6":{t:"与encodeURI()的区别是，它用于对URL的组成部分进行个别编码，而不用于对整个URL进行编码",p:"因此，&quot;; / ? : @ &amp; = + $ , #&quot;，这些在encodeURI()中不被编码的符 ...",l:"interview-questions/js/url-encryption-to-decrypt/index.html#与encodeuri-的区别是-它用于对url的组成部分进行个别编码-而不用于对整个url进行编码",a:"与encodeuri-的区别是-它用于对url的组成部分进行个别编码-而不用于对整个url进行编码"},"136.7":{t:"例1",p:"　　var url = &quot;http://localhost:8080/pro?a=1&amp;b=张三&amp;c ...",l:"interview-questions/js/url-encryption-to-decrypt/index.html#例1",a:"例1"},"136.8":{t:"例2",p:`
　var url = &quot;&lt;http://localhost:8080/pp?a=1&amp;b&gt;=& ...`,l:"interview-questions/js/url-encryption-to-decrypt/index.html#例2",a:"例2"},"137.0":{t:"# 硬链接和软链接",p:"众所周知，Unix/Linux系统中一切皆文件。可见，文件在Linux系统中非常重要。我们平常比较直观的对于文件的感受肯定是 ...",l:"interview-questions/linux/soft-hard/index.html",a:"硬链接和软链接"},"137.1":{t:"文件重命名或文件移动",p:"文件重命名和文件移动对于Linux系统来说都是文件绝对路径的更改。对硬链接来说，文件重命名或文件移动不会改变链接指向，而对软 ...",l:"interview-questions/linux/soft-hard/index.html#文件重命名或文件移动",a:"文件重命名或文件移动"},"137.2":{t:"文件删除",p:"rm命令或者nodejs的unlink其实是将inode的链接数减1。对于前文的硬链接，删除test_hard.txt使得i ...",l:"interview-questions/linux/soft-hard/index.html#文件删除",a:"文件删除"},"137.3":{t:"链接文件和文件夹",p:`软链接可以链接文件和文件夹，但硬链接只能链接文件。
`,l:"interview-questions/linux/soft-hard/index.html#链接文件和文件夹",a:"链接文件和文件夹"},"137.4":{t:"不同文件系统创建链接",p:"软链接可以跨不同的文件系统创建，但是硬链接不行，因为硬链接是共用一个inode，而不同的文件系统有不同的inode tabl ...",l:"interview-questions/linux/soft-hard/index.html#不同文件系统创建链接",a:"不同文件系统创建链接"},"137.5":{t:"硬链接",p:`
文件备份：为了防止重要的文件被误删，文件备份是一种好的办法，但拷贝文件会带来磁盘空间的消耗。硬链接能不占用磁盘空间实现文件 ...`,l:"interview-questions/linux/soft-hard/index.html#硬链接",a:"硬链接"},"137.6":{t:"软链接",p:`
快捷方式：对于路径很深的文件，查找起来不太方便。利用软链接在桌面创建快捷方式，可以迅速打开并编辑文件。
灵活切换程序版本： ...`,l:"interview-questions/linux/soft-hard/index.html#软链接",a:"软链接"},"138.0":{t:"# 基础知识",p:"",l:"interview-questions/nginx/basis/index.html",a:"基础知识"},"138.1":{t:"基础命令",p:"",l:"interview-questions/nginx/basis/index.html#基础命令",a:"基础命令"},"138.2":{t:"列出 nginx 相关软件包",p:`yum list | grep nginx


yum list：列出所有软件清单
yum list installed：列 ...`,l:"interview-questions/nginx/basis/index.html#列出-nginx-相关软件包",a:"列出-nginx-相关软件包"},"138.3":{t:"安装 nginx",p:`yum install nginx

`,l:"interview-questions/nginx/basis/index.html#安装-nginx",a:"安装-nginx"},"138.4":{t:"查看 nginx 版本信息",p:`nginx -v

`,l:"interview-questions/nginx/basis/index.html#查看-nginx-版本信息",a:"查看-nginx-版本信息"},"138.5":{t:"列出 nginx 相关目录",p:`rpm -ql nginx

`,l:"interview-questions/nginx/basis/index.html#列出-nginx-相关目录",a:"列出-nginx-相关目录"},"138.6":{t:"全格式显示所有 nginx 运行进程",p:`ps -ef | grep nginx


ps：列出系统中当前运行的进程
-ef：-e 显示所有，-f 全格式显示，也可使 ...`,l:"interview-questions/nginx/basis/index.html#全格式显示所有-nginx-运行进程",a:"全格式显示所有-nginx-运行进程"},"138.7":{t:"开机自启",p:"",l:"interview-questions/nginx/basis/index.html#开机自启",a:"开机自启"},"138.8":{t:"设置开机自启",p:`systemctl enable nginx

`,l:"interview-questions/nginx/basis/index.html#设置开机自启",a:"设置开机自启"},"138.9":{t:"关闭开机自启",p:`systemctl disable nginx

可用 reboot 重启服务器，配合 ps -ef | grep ngin ...`,l:"interview-questions/nginx/basis/index.html#关闭开机自启",a:"关闭开机自启"},"138.10":{t:"启动 & 停止 & 重启 & 重载",p:"",l:"interview-questions/nginx/basis/index.html#启动-停止-重启-重载",a:"启动-停止-重启-重载"},"138.11":{t:"启动 nginx",p:`systemctl start nginx ｜ nginx

`,l:"interview-questions/nginx/basis/index.html#启动-nginx",a:"启动-nginx"},"138.12":{t:"停止 nginx",p:`systemctl stop nginx | nginx -s stop

`,l:"interview-questions/nginx/basis/index.html#停止-nginx",a:"停止-nginx"},"138.13":{t:"重启 nginx",p:`systemctl restart nginx | nginx -s reopen

`,l:"interview-questions/nginx/basis/index.html#重启-nginx",a:"重启-nginx"},"138.14":{t:"重载 nginx，更改 nginx 配置后需执行",p:`systemctl reload nginx | nginx -s reload

`,l:"interview-questions/nginx/basis/index.html#重载-nginx-更改-nginx-配置后需执行",a:"重载-nginx-更改-nginx-配置后需执行"},"138.15":{t:"杀死单个进程",p:`kill -9 PID（进程ID）

`,l:"interview-questions/nginx/basis/index.html#杀死单个进程",a:"杀死单个进程"},"138.16":{t:"查看 nginx 最终配置",p:`nginx -T

`,l:"interview-questions/nginx/basis/index.html#查看-nginx-最终配置",a:"查看-nginx-最终配置"},"138.17":{t:"检查配置项是否有问题，每次更改完先检查后重载",p:"",l:"interview-questions/nginx/basis/index.html#检查配置项是否有问题-每次更改完先检查后重载",a:"检查配置项是否有问题-每次更改完先检查后重载"},"138.18":{t:"当前目录下",p:`nginx -t

`,l:"interview-questions/nginx/basis/index.html#当前目录下",a:"当前目录下"},"138.19":{t:"不在当前目录",p:`nginx -t -c &lt;配置路径&gt;

`,l:"interview-questions/nginx/basis/index.html#不在当前目录",a:"不在当前目录"},"138.20":{t:"配置文件",p:`nginx.conf 文件默认配置
!图片
`,l:"interview-questions/nginx/basis/index.html#配置文件",a:"配置文件"},"138.21":{t:"上文日志格式中所涉及变量含义如下",p:`
变量 含义
$remote_addr 客户端地址
$remote_user 已经过验证的用户名
$time_local 通 ...`,l:"interview-questions/nginx/basis/index.html#上文日志格式中所涉及变量含义如下",a:"上文日志格式中所涉及变量含义如下"},"138.22":{t:"静态资源配置",p:`server {
  listen 80;
  server_name static.deeruby.com;

  loc ...`,l:"interview-questions/nginx/basis/index.html#静态资源配置",a:"静态资源配置"},"138.23":{t:"root 与 alias 区别",p:`
图中静态资源所在目录为：/home/static；root 查找静态资源的路径为其填写路径拼接 location 路径，a ...`,l:"interview-questions/nginx/basis/index.html#root-与-alias-区别",a:"root-与-alias-区别"},"138.24":{t:"autoindex",p:`开启 autoindex 可访问文件根目录
`,l:"interview-questions/nginx/basis/index.html#autoindex",a:"autoindex"},"138.25":{t:"反向代理",p:"",l:"interview-questions/nginx/basis/index.html#反向代理",a:"反向代理"},"138.26":{t:"我们在服务器上跑一个 node 项目，配置用 域名 来代替 ip + 端口 访问",p:`server {
  listen       80;
  server_name  nginx.deeruby.com;
 ...`,l:"interview-questions/nginx/basis/index.html#我们在服务器上跑一个-node-项目-配置用-域名-来代替-ip-端口-访问",a:"我们在服务器上跑一个-node-项目-配置用-域名-来代替-ip-端口-访问"},"138.27":{t:"解决跨域",p:"tips：实际工作中，解决跨域一般为后端配置 CORS，详见笔者 20分钟，巩固你的HTTP知识体系 这篇文章中 HTTP请 ...",l:"interview-questions/nginx/basis/index.html#解决跨域",a:"解决跨域"},"138.28":{t:"hosts 配置",p:`127.0.0.1       nginx.deeruby.com

`,l:"interview-questions/nginx/basis/index.html#hosts-配置",a:"hosts-配置"},"138.29":{t:"nginx 配置",p:`server {
  listen       80;
  server_name  nginx.deeruby.com;
 ...`,l:"interview-questions/nginx/basis/index.html#nginx-配置",a:"nginx-配置"},"138.30":{t:"HTTPS",p:"",l:"interview-questions/nginx/basis/index.html#https",a:"https"},"138.31":{t:"配置HTTPS",p:`server {
  listen 443 ssl;                                     ...`,l:"interview-questions/nginx/basis/index.html#配置https",a:"配置https"},"138.32":{t:"访问 HTTP 自动跳转至 HTTPS",p:`server {
  listen       80;
  server_name  sso.deeruby.com;
   ...`,l:"interview-questions/nginx/basis/index.html#访问-http-自动跳转至-https",a:"访问-http-自动跳转至-https"},"138.33":{t:"rewrite",p:`rewrite   &lt;regex&gt;    &lt;replacement&gt;       [flag]
   ...`,l:"interview-questions/nginx/basis/index.html#rewrite",a:"rewrite"},"138.34":{t:"图片防盗链",p:`
引言：referer请求头用于识别访问来源，以此来配置防盗链。
valid_referers：设置可访问资源的规则，其不允 ...`,l:"interview-questions/nginx/basis/index.html#图片防盗链",a:"图片防盗链"},"138.35":{t:"访问限制",p:`location /static {
  root /home;
  allow 39.xxx.xxx.xxx;  # al ...`,l:"interview-questions/nginx/basis/index.html#访问限制",a:"访问限制"},"138.36":{t:"禁用请求方法",p:`仅允许使用 GET、POST、HEAD、OPTIONS 这四种请求，使用其余请求返回403
if ($request_met ...`,l:"interview-questions/nginx/basis/index.html#禁用请求方法",a:"禁用请求方法"},"138.37":{t:"缓存",p:`expires 7d;  # 缓存7天
expires -1;  # 不缓存

`,l:"interview-questions/nginx/basis/index.html#缓存",a:"缓存"},"138.38":{t:"PC端和移动端使用不同项目",p:`location / {
  root /home/static/pc;
  if ($http_user_agent ~* ...`,l:"interview-questions/nginx/basis/index.html#pc端和移动端使用不同项目",a:"pc端和移动端使用不同项目"},"138.39":{t:"负载均衡",p:`upstream backserver {              # 存放负载均衡所需变量
  ip_hash;     ...`,l:"interview-questions/nginx/basis/index.html#负载均衡",a:"负载均衡"},"138.40":{t:"限速限流",p:`limit_conn 连接频率限制：TCP连接
limit_conn_zone $binary_remote_addr zo ...`,l:"interview-questions/nginx/basis/index.html#限速限流",a:"限速限流"},"138.41":{t:"其它",p:"",l:"interview-questions/nginx/basis/index.html#其它",a:"其它"},"138.42":{t:"开启gzip",p:`gzip on;

`,l:"interview-questions/nginx/basis/index.html#开启gzip",a:"开启gzip"},"139.0":{t:"# Nginx",p:"",l:"interview-questions/nginx/start/index.html",a:"nginx"},"139.1":{t:"正向代理",p:`

一个位于客户端和原始服务器(origin server)之间的服务器，为了从原始服务器取得内容，客户端向代理发送一个请求 ...`,l:"interview-questions/nginx/start/index.html#正向代理",a:"正向代理"},"139.2":{t:"反向代理",p:`

运行方式是代理服务器接受网络上的连接请求。它将请求转发给内部网络上的服务器，并将从服务器上得到的结果返回给网络上请求连接 ...`,l:"interview-questions/nginx/start/index.html#反向代理",a:"反向代理"},"139.3":{t:"负载均衡",p:`
多在高并发情况下需要使用。其原理就是将数据流量分摊到多个服务器执行，减轻每台服务器的压力，多台服务器（集群）完成工作任务， ...`,l:"interview-questions/nginx/start/index.html#负载均衡",a:"负载均衡"},"139.4":{t:"动静分离",p:`
nginx 提供的动静分离是指把动态请求和静态请求分离开，合适的服务器处理相应的请求，使整个服务器系统的性能、效率更高。
 ...`,l:"interview-questions/nginx/start/index.html#动静分离",a:"动静分离"},"140.0":{t:"# require加载器实现原理",p:`1. 概述
人们常说node并不是一门新的编程语言，他只是javascript的运行时，运行时你可以简单地理解为运行java ...`,l:"interview-questions/node/require/index.html",a:"require加载器实现原理"},"140.1":{t:"1\\. eval",p:`const name = 'yd';
const str = 'const a = 123; console.log(nam ...`,l:"interview-questions/node/require/index.html#_1-eval",a:"_1-eval"},"140.2":{t:"2\\. new Function",p:"new Function接收的是一个要执行的字符串，返回的是一个新的函数，调用这个新的函数字符串就会执行了。如果这个函数需要 ...",l:"interview-questions/node/require/index.html#_2-new-function",a:"_2-new-function"},"140.3":{t:"3\\. vm 内置模块",p:`虽然外部定义了hello，但是str是一个独立的模块，并不在hello变量，所以会直接报错。
// 引入vm模块， 不需要安 ...`,l:"interview-questions/node/require/index.html#_3-vm-内置模块",a:"_3-vm-内置模块"},"140.4":{t:"1\\. path模块",p:`用于处理文件路径。
basename: 基础路径, 有文件路径就不是基础路径，基础路劲是1.js
extname: 获取扩展 ...`,l:"interview-questions/node/require/index.html#_1-path模块",a:"_1-path模块"},"140.5":{t:"2\\. fs模块",p:"用于操作文件或者文件夹，比如文件的读写，新增，删除等。常用方法有readFile和readFileSync，分别是异步读取文 ...",l:"interview-questions/node/require/index.html#_2-fs模块",a:"_2-fs模块"},"140.6":{t:"1\\. 导入相关模块，创建一个Require方法",p:"",l:"interview-questions/node/require/index.html#_1-导入相关模块-创建一个require方法",a:"_1-导入相关模块-创建一个require方法"},"140.7":{t:"2\\. 抽离通过Module.\\_load方法，用于加载模块",p:"",l:"interview-questions/node/require/index.html#_2-抽离通过module-load方法-用于加载模块",a:"_2-抽离通过module-load方法-用于加载模块"},"140.8":{t:"3\\. Module.resolveFilename 根据相对路径，转换成绝对路径",p:"",l:"interview-questions/node/require/index.html#_3-module-resolvefilename-根据相对路径-转换成绝对路径",a:"_3-module-resolvefilename-根据相对路径-转换成绝对路径"},"140.9":{t:"4\\. 缓存模块 Module.\\_cache，同一个模块不要重复加载，提升性能",p:"",l:"interview-questions/node/require/index.html#_4-缓存模块-module-cache-同一个模块不要重复加载-提升性能",a:"_4-缓存模块-module-cache-同一个模块不要重复加载-提升性能"},"140.10":{t:"5\\. 创建模块 id: 保存的内容是 exports = 相当于this",p:"",l:"interview-questions/node/require/index.html#",a:""},"140.11":{t:"6\\. 利用tryModuleLoad(module, filename) 尝试加载模块",p:"",l:"interview-questions/node/require/index.html#_6-利用trymoduleload-module-filename-尝试加载模块",a:"_6-利用trymoduleload-module-filename-尝试加载模块"},"140.12":{t:"7\\. Module.\\_extensions使用读取文件",p:"",l:"interview-questions/node/require/index.html#_7-module-extensions使用读取文件",a:"_7-module-extensions使用读取文件"},"140.13":{t:"8\\. Module.wrap: 把读取到的js包裹一个函数",p:"",l:"interview-questions/node/require/index.html#_8-module-wrap-把读取到的js包裹一个函数",a:"_8-module-wrap-把读取到的js包裹一个函数"},"140.14":{t:"9\\. 将拿到的字符串使用runInThisContext运行字符串",p:"",l:"interview-questions/node/require/index.html#_9-将拿到的字符串使用runinthiscontext运行字符串",a:"_9-将拿到的字符串使用runinthiscontext运行字符串"},"140.15":{t:"10\\. 让字符串执行并将this改编成exports",p:"",l:"interview-questions/node/require/index.html#_10-让字符串执行并将this改编成exports",a:"_10-让字符串执行并将this改编成exports"},"141.0":{t:"# 需要了解的nodejs知识（工具模块）",p:"",l:"interview-questions/node/understand-start/index.html",a:"需要了解的nodejs知识-工具模块"},"141.1":{t:"Util",p:`Node.js 的工具模块
`,l:"interview-questions/node/understand-start/index.html#util",a:"util"},"141.2":{t:"常用的判断属性，在util.types对象",p:`
isDate：判断是否是日期格式的变量
isAnyArrayBuffer：判断是否是buffer isAsyncFunct ...`,l:"interview-questions/node/understand-start/index.html#常用的判断属性-在util-types对象",a:"常用的判断属性-在util-types对象"},"141.3":{t:"常用的方法和属性",p:`
format:格式化字符串
inspect: 将对象转为字符串
isDeepStrictEqual：判断两个字符是否强相等 ...`,l:"interview-questions/node/understand-start/index.html#常用的方法和属性",a:"常用的方法和属性"},"141.4":{t:"DNS",p:`Node.js DNS 模块用于解析域名

DNS(Domain Name System): 域名系统、

组成：他是由解析 ...`,l:"interview-questions/node/understand-start/index.html#dns",a:"dns"},"141.5":{t:"OS",p:`Node.js OS 模块提供了一些基本系统操作函数
`,l:"interview-questions/node/understand-start/index.html#os",a:"os"},"141.6":{t:"常用的方法和属性",p:`
networkInterfaces获取网络信息
cpus：获取系统的CPU内核细腻，返回个数组
totalmem：系统总共 ...`,l:"interview-questions/node/understand-start/index.html#常用的方法和属性",a:"常用的方法和属性"},"141.7":{t:"Path",p:`nodejs用来处理文件路径的工具模块，主要处理绝对路径，相对路径
`,l:"interview-questions/node/understand-start/index.html#path",a:"path"},"141.8":{t:"常用的方法和属性",p:`const path = require('path')

//属性- 平台路径的分隔符
const sep =path.s ...`,l:"interview-questions/node/understand-start/index.html#常用的方法和属性",a:"常用的方法和属性"},"142.0":{t:"# 常用操作",p:"",l:"interview-questions/npm/common-operations/index.html",a:"常用操作"},"142.1":{t:"登录",p:`npm login || npm adduser
npm login
npm adduser

`,l:"interview-questions/npm/common-operations/index.html#登录",a:"登录"},"142.2":{t:"docs 查看某个包的文档",p:"",l:"interview-questions/npm/common-operations/index.html#docs-查看某个包的文档",a:"docs-查看某个包的文档"},"142.3":{t:"查看某个包的文档",p:`npm docs [package-name]

`,l:"interview-questions/npm/common-operations/index.html#查看某个包的文档",a:"查看某个包的文档"},"142.4":{t:"查看某个包的官网",p:`npm home [package-name]

`,l:"interview-questions/npm/common-operations/index.html#查看某个包的官网",a:"查看某个包的官网"},"142.5":{t:"info  查看一个包的详细信息",p:`npm v [package-name]
# or
npm view [package-name]
npm info [pa ...`,l:"interview-questions/npm/common-operations/index.html#info-查看一个包的详细信息",a:"info-查看一个包的详细信息"},"142.6":{t:"star 收藏项目",p:"",l:"interview-questions/npm/common-operations/index.html#star-收藏项目",a:"star-收藏项目"},"142.7":{t:"主要是用来收藏项目",p:`npm star  [package-name]

`,l:"interview-questions/npm/common-operations/index.html#主要是用来收藏项目",a:"主要是用来收藏项目"},"142.8":{t:"取消收藏",p:`npm unstar [package-name]

`,l:"interview-questions/npm/common-operations/index.html#取消收藏",a:"取消收藏"},"142.9":{t:"查看收藏列表",p:`npm stars

`,l:"interview-questions/npm/common-operations/index.html#查看收藏列表",a:"查看收藏列表"},"142.10":{t:"versions 查看某个包的所有版本",p:`npm v [package-name] versions

`,l:"interview-questions/npm/common-operations/index.html#versions-查看某个包的所有版本",a:"versions-查看某个包的所有版本"},"142.11":{t:"本地开发的 npm 包如何调试",p:`npm install . -g

// 在某个项目中安装本地包
npm install ../Path/xxPackage ...`,l:"interview-questions/npm/common-operations/index.html#本地开发的-npm-包如何调试",a:"本地开发的-npm-包如何调试"},"142.12":{t:"publish 发布包",p:`首先，你得在本地登录
登录完成后，发布自己开发的工具包，只需简单的三步！
注意:使用淘宝源会报错，要改回默认源
`,l:"interview-questions/npm/common-operations/index.html#publish-发布包",a:"publish-发布包"},"142.13":{t:"记得每次发布前，修改下版本号",p:`npm version [版本号]
然后当前目录执行npm publish就好了
npm publish

`,l:"interview-questions/npm/common-operations/index.html#记得每次发布前-修改下版本号",a:"记得每次发布前-修改下版本号"},"142.14":{t:"取消发布包",p:`npm unpublish [package-name] -f

`,l:"interview-questions/npm/common-operations/index.html#取消发布包",a:"取消发布包"},"142.15":{t:"取消发布包的指定版本",p:`npm unpublish [package-name]@version

`,l:"interview-questions/npm/common-operations/index.html#取消发布包的指定版本",a:"取消发布包的指定版本"},"142.16":{t:"deprecate 弃用包",p:"",l:"interview-questions/npm/common-operations/index.html#deprecate-弃用包",a:"deprecate-弃用包"},"142.17":{t:"弃用整个包",p:`npm deprecate package-name  '弃用信息'

`,l:"interview-questions/npm/common-operations/index.html#弃用整个包",a:"弃用整个包"},"142.18":{t:"弃用包的单个版本",p:`npm deprecate package-name@version  '弃用信息'

`,l:"interview-questions/npm/common-operations/index.html#弃用包的单个版本",a:"弃用包的单个版本"},"142.19":{t:"取消弃用操作",p:"",l:"interview-questions/npm/common-operations/index.html#取消弃用操作",a:"取消弃用操作"},"142.20":{t:"将弃用消息改为空字符串即可",p:`npm deprecate package-name ''

`,l:"interview-questions/npm/common-operations/index.html#将弃用消息改为空字符串即可",a:"将弃用消息改为空字符串即可"},"142.21":{t:"其他操作",p:"",l:"interview-questions/npm/common-operations/index.html#其他操作",a:"其他操作"},"142.22":{t:"查看项目中那些包过时",p:`npm outdated

`,l:"interview-questions/npm/common-operations/index.html#查看项目中那些包过时",a:"查看项目中那些包过时"},"142.23":{t:"查看本地中那些包过时",p:`npm outdated  -g  --depth=0

`,l:"interview-questions/npm/common-operations/index.html#查看本地中那些包过时",a:"查看本地中那些包过时"},"142.24":{t:"列出 node_modules 中的所有包",p:`ls node_modules
dir node_modules

`,l:"interview-questions/npm/common-operations/index.html#列出-node-modules-中的所有包",a:"列出-node-modules-中的所有包"},"142.25":{t:"审计项目中所有包的安全漏洞",p:`npm audit

`,l:"interview-questions/npm/common-operations/index.html#审计项目中所有包的安全漏洞",a:"审计项目中所有包的安全漏洞"},"142.26":{t:"这个命令依赖 package-lock.json 文件,所以如果你用的是yarn需要使用下面的命令",p:`yarn audit

`,l:"interview-questions/npm/common-operations/index.html#这个命令依赖-package-lock-json-文件-所以如果你用的是yarn需要使用下面的命令",a:"这个命令依赖-package-lock-json-文件-所以如果你用的是yarn需要使用下面的命令"},"142.27":{t:"执行后会列出有问题的包",p:`
Critical 需要立即解决的!
High 需要尽快解决!
Moderate 在时间允许的情况下解决
Low 随便你,不 ...`,l:"interview-questions/npm/common-operations/index.html#执行后会列出有问题的包",a:"执行后会列出有问题的包"},"142.28":{t:"检测一下当前镜像源的延迟",p:`npm ping

`,l:"interview-questions/npm/common-operations/index.html#检测一下当前镜像源的延迟",a:"检测一下当前镜像源的延迟"},"142.29":{t:"检测当前 node 和 npm 存在的问题 👇",p:`npm doctor

`,l:"interview-questions/npm/common-operations/index.html#检测当前-node-和-npm-存在的问题-👇",a:"检测当前-node-和-npm-存在的问题-👇"},"143.0":{t:"# link 创建软链",p:"",l:"interview-questions/npm/link/index.html",a:"link-创建软链"},"143.1":{t:"使用软链 npm link",p:"主要是平时开发时，有npm包需要在本地调试好了再发布。发一版测一版，或者把代码复制粘贴到项目文件夹里去调试，很不优雅。软链就 ...",l:"interview-questions/npm/link/index.html#使用软链-npm-link",a:"使用软链-npm-link"},"143.2":{t:"1. 什么是软链？",p:`简单说就是为开发的模块(待发布的npm包)创造一个全局链接，在主项目里链接这个依赖的模块，进行测试。
`,l:"interview-questions/npm/link/index.html#_1-什么是软链",a:"_1-什么是软链"},"143.3":{t:"2. 如何创建、使用、去除软链？",p:"",l:"interview-questions/npm/link/index.html#_2-如何创建、使用、去除软链",a:"_2-如何创建、使用、去除软链"},"143.4":{t:"2.1 先在对应npm包的文件创建一个全局的链接",p:`cd ~/projects/package-project npm link

`,l:"interview-questions/npm/link/index.html#_2-1-先在对应npm包的文件创建一个全局的链接",a:"_2-1-先在对应npm包的文件创建一个全局的链接"},"143.5":{t:"2.2 然后再想要使用该包的项目里使用这个软链",p:`Tips: 注意这里的packageName一定要对应你的npm包package.json里的name字段值。
cd ~/p ...`,l:"interview-questions/npm/link/index.html#_2-2-然后再想要使用该包的项目里使用这个软链",a:"_2-2-然后再想要使用该包的项目里使用这个软链"},"143.6":{t:"2.3 用完了如何去除软链呢？",p:"下边两步的顺序，我自己试了下，颠倒顺序其实也没报错。但是既然有同学提出来了，我觉得逻辑上先unlink包再删掉全局link可 ...",l:"interview-questions/npm/link/index.html#_2-3-用完了如何去除软链呢",a:"_2-3-用完了如何去除软链呢"},"143.7":{t:"2.31 先在使用npm包的项目的文件目录下解除特定的链接",p:`npm unlink packageName

`,l:"interview-questions/npm/link/index.html#_2-31-先在使用npm包的项目的文件目录下解除特定的链接",a:"_2-31-先在使用npm包的项目的文件目录下解除特定的链接"},"143.8":{t:"2.32 再在npm包所在的文件目录下去除全局链接",p:`npm unlink

到这里其实就OK了
`,l:"interview-questions/npm/link/index.html#_2-32-再在npm包所在的文件目录下去除全局链接",a:"_2-32-再在npm包所在的文件目录下去除全局链接"},"143.9":{t:"2.33 强制解除创建的某个特定全局链接",p:`sudo npm rm --global packageName

`,l:"interview-questions/npm/link/index.html#_2-33-强制解除创建的某个特定全局链接",a:"_2-33-强制解除创建的某个特定全局链接"},"143.10":{t:"2.34 查看所有创建的全局链接名称",p:`npm ls --global --depth 0

`,l:"interview-questions/npm/link/index.html#_2-34-查看所有创建的全局链接名称",a:"_2-34-查看所有创建的全局链接名称"},"144.0":{t:"# npm run xxx",p:"",l:"interview-questions/npm/npm-run-xxx/index.html",a:"npm-run-xxx"},"144.1":{t:"运行 npm run xxx 的时候发生了什么？",p:`
pm run xxx的时候，首先会去项目的package.json文件里找scripts 里找对应的xxx，然后执行 xx ...`,l:"interview-questions/npm/npm-run-xxx/index.html#运行-npm-run-xxx-的时候发生了什么",a:"运行-npm-run-xxx-的时候发生了什么"},"144.2":{t:"node_modules/bin中 有三个vue-cli-service文件。为什么会有三个文件呢？",p:"",l:"interview-questions/npm/npm-run-xxx/index.html#node-modules-bin中-有三个vue-cli-service文件。为什么会有三个文件呢",a:"node-modules-bin中-有三个vue-cli-service文件。为什么会有三个文件呢"},"144.3":{t:"unix 系默认的可执行文件，必须输入完整文件名",p:`vue-cli-service
`,l:"interview-questions/npm/npm-run-xxx/index.html#unix-系默认的可执行文件-必须输入完整文件名",a:"unix-系默认的可执行文件-必须输入完整文件名"},"144.4":{t:"windows cmd 中默认的可执行文件，当我们不添加后缀名时，自动根据 pathext 查找文件",p:`vue-cli-service.cmd
`,l:"interview-questions/npm/npm-run-xxx/index.html#windows-cmd-中默认的可执行文件-当我们不添加后缀名时-自动根据-pathext-查找文件",a:"windows-cmd-中默认的可执行文件-当我们不添加后缀名时-自动根据-pathext-查找文件"},"144.5":{t:"Windows PowerShell 中可执行文件，可以跨平台",p:`vue-cli-service.ps1
`,l:"interview-questions/npm/npm-run-xxx/index.html#windows-powershell-中可执行文件-可以跨平台",a:"windows-powershell-中可执行文件-可以跨平台"},"144.6":{t:"总结",p:`
运行 npm run xxx的时候，npm 会先在当前目录的 node_modules/.bin 查找要执行的程序，如果找 ...`,l:"interview-questions/npm/npm-run-xxx/index.html#总结",a:"总结"},"145.0":{t:"# npm",p:"",l:"interview-questions/npm/start/index.html",a:"npm"},"145.1":{t:"npm 中的依赖包",p:"",l:"interview-questions/npm/start/index.html#npm-中的依赖包",a:"npm-中的依赖包"},"145.2":{t:"依赖包分类",p:`
dependencies - 业务依赖
devDependencies - 开发依赖
peerDependencies - ...`,l:"interview-questions/npm/start/index.html#依赖包分类",a:"依赖包分类"},"145.3":{t:"项目版本号管理",p:"package.json中的version字段代表的是该项目的版本号。每当项目发布新版本时，需要将version字段进行相应 ...",l:"interview-questions/npm/start/index.html#项目版本号管理",a:"项目版本号管理"},"145.4":{t:"预发版本",p:"",l:"interview-questions/npm/start/index.html#预发版本",a:"预发版本"},"145.5":{t:"当前版本号为 1.2.3",p:`npm version prepatch  // 版本号变为 1.2.4-0，也就是 1.2.4 版本的第一个预发布版本
n ...`,l:"interview-questions/npm/start/index.html#当前版本号为-1-2-3",a:"当前版本号为-1-2-3"},"145.6":{t:"在git环境中，执行npm version修改完版本号以后，还会默认执行git add->git commit->git tag操作",p:`
如果git工作区还有未提交的修改，npm version将会执行失败，可以加上-f/--force后缀来强制执行。
如果不 ...`,l:"interview-questions/npm/start/index.html#在git环境中-执行npm-version修改完版本号以后-还会默认执行git-add-git-commit-git-tag操作",a:"在git环境中-执行npm-version修改完版本号以后-还会默认执行git-add-git-commit-git-tag操作"},"146.0":{t:"# HTML优化",p:"",l:"interview-questions/performance-optimization/html/index.html",a:"html优化"},"146.1":{t:"DNS 预解析",p:`DNS 解析也是需要时间的，可以通过预解析的方式来预先获得域名所对应的 IP。
&lt;link rel=&quot;dns ...`,l:"interview-questions/performance-optimization/html/index.html#dns-预解析",a:"dns-预解析"},"146.2":{t:"图片加载优化",p:"对于能够显示 WebP 格式的浏览器尽量使用 WebP 格式。因为 WebP 格式具有更好的图像数据压缩算法，能带来更小的图 ...",l:"interview-questions/performance-optimization/html/index.html#图片加载优化",a:"图片加载优化"},"146.3":{t:"预加载",p:`
元素的 rel 属性的属性值preload能够让你在你的HTML页面中 元素内部书写一些声明式的资源获取请求，可以指明哪些 ...`,l:"interview-questions/performance-optimization/html/index.html#预加载",a:"预加载"},"146.4":{t:"预渲染",p:`可以通过预渲染将下载的文件预先在后台渲染，可以使用以下代码开启预渲染
&lt;link rel=&quot;prerende ...`,l:"interview-questions/performance-optimization/html/index.html#预渲染",a:"预渲染"},"146.5":{t:"懒执行",p:`
懒执行就是将某些逻辑延迟到使用时再计算。该技术可以用于首屏优化，对于某些耗时逻辑并不需要在首屏就使用的，就可以使用懒执行。 ...`,l:"interview-questions/performance-optimization/html/index.html#懒执行",a:"懒执行"},"146.6":{t:"懒加载",p:`
懒加载就是将不关键的资源延后加载。
懒加载的原理就是只加载自定义区域（通常是可视区域，但也可以是即将进入可视区域）内需要加 ...`,l:"interview-questions/performance-optimization/html/index.html#懒加载",a:"懒加载"},"146.7":{t:"CDN",p:"我们可以将静态资源尽量使用 CDN 加载，由于浏览器对于单个域名有并发请求上限，可以考虑使用多个 CDN 域名。并且对于 C ...",l:"interview-questions/performance-optimization/html/index.html#cdn",a:"cdn"},"147.0":{t:"# 图片懒加载",p:`一、实现原理
&lt;img&gt;标签本身有一个loading属性来决定是否执行懒加载，但是实测中发现该属性在Edge浏览 ...`,l:"interview-questions/performance-optimization/img-lazy/index.html",a:"图片懒加载"},"147.1":{t:"1、浏览器屏幕坐标系",p:`!image-20221103101645081
存在两种坐标系：

相对于窗口window，从窗口的（顶部，左部）开始计算 ...`,l:"interview-questions/performance-optimization/img-lazy/index.html#_1、浏览器屏幕坐标系",a:"_1、浏览器屏幕坐标系"},"147.2":{t:"2、获取节点坐标：getBoundingClinetRect",p:"方法 elem.getBoundingClientRect() 返回最小矩形的窗口坐标，该矩形将 elem 作为内建 DOM ...",l:"interview-questions/performance-optimization/img-lazy/index.html#_2、获取节点坐标-getboundingclinetrect",a:"_2、获取节点坐标-getboundingclinetrect"},"147.3":{t:"3、获取窗口尺寸",p:`窗口有两种定义，一种是当前窗口的实际大小（可能因为被缩小而变化），另外一种是屏幕的大小（固定值）
第一种，获取当前窗口实际大 ...`,l:"interview-questions/performance-optimization/img-lazy/index.html#_3、获取窗口尺寸",a:"_3、获取窗口尺寸"},"147.4":{t:"4、判断节点是否在可视范围",p:`function isInView(elem){
    if(elem.getBoundingClientRect().t ...`,l:"interview-questions/performance-optimization/img-lazy/index.html#_4、判断节点是否在可视范围",a:"_4、判断节点是否在可视范围"},"147.5":{t:"5、Intersection Observer",p:`该接口提供了一种异步观察目标元素与其祖先元素或顶级文档视窗 (viewport) 交叉状态的方法
该接口可以方便的检测元素的 ...`,l:"interview-questions/performance-optimization/img-lazy/index.html#_5、intersection-observer",a:"_5、intersection-observer"},"148.0":{t:"# 何减少卡顿的代码",p:`聊网站性能的文章有很多，通常为了提高js性能，避不开这两点：
不要阻塞主线程 减少长耗时
该怎么做呢？很明显，精简js代码有 ...`,l:"interview-questions/performance-optimization/js/reduce-stuttering-code/index.html",a:"何减少卡顿的代码"},"148.1":{t:"使用代码延迟任务执行",p:"为了拆分长任务，开发者经常使用定时器_setTimeout_。通过把方法传递给_setTimeout_，也就等同于重新创建了 ...",l:"interview-questions/performance-optimization/js/reduce-stuttering-code/index.html#使用代码延迟任务执行",a:"使用代码延迟任务执行"},"148.2":{t:"使用asycn、await来创造让步点",p:`在本文会出现一个新词让步，这个词的定义、用法和意义可以通过代码和介绍进行阐述。

重点提示


当_让步_于主线程后，浏览器 ...`,l:"interview-questions/performance-optimization/js/reduce-stuttering-code/index.html#使用asycn、await来创造让步点",a:"使用asycn、await来创造让步点"},"148.3":{t:"只在必要时让步",p:`假如有一堆的任务，但是只想在用户交互的时候才让步，该怎么办？正好有这种api--isInputPending
isInput ...`,l:"interview-questions/performance-optimization/js/reduce-stuttering-code/index.html#只在必要时让步",a:"只在必要时让步"},"148.4":{t:"专门编排优先级的api",p:"目前在书写本文时该api提供postTask的功能，对于所有的chromium浏览器和firefox均可使用。postTas ...",l:"interview-questions/performance-optimization/js/reduce-stuttering-code/index.html#专门编排优先级的api",a:"专门编排优先级的api"},"148.5":{t:"内置不中断的让步方法",p:"还有一个编排api目前还在提议阶段，还没有内置到任何浏览器中。它的用法和本章和开始讲到的yieldToMain这个方法类似。 ...",l:"interview-questions/performance-optimization/js/reduce-stuttering-code/index.html#内置不中断的让步方法",a:"内置不中断的让步方法"},"149.0":{t:"# 减少引用类型内存访问",p:"",l:"interview-questions/performance-optimization/js/reference-memory-access/index.html",a:"减少引用类型内存访问"},"149.1":{t:"案例",p:"",l:"interview-questions/performance-optimization/js/reference-memory-access/index.html#案例",a:"案例"},"149.2":{t:"请看为何 aaaaa 比 bbbbb 慢",p:`
{
  (function () {
    let sum = [0]
    console.time(&quot;a ...`,l:"interview-questions/performance-optimization/js/reference-memory-access/index.html#请看为何-aaaaa-比-bbbbb-慢",a:"请看为何-aaaaa-比-bbbbb-慢"},"149.3":{t:"运行",p:"",l:"interview-questions/performance-optimization/js/reference-memory-access/index.html#运行",a:"运行"},"149.4":{t:"原因",p:`
消除不必要的内存访问

对于一个函数  内部变量一般是存储在寄存器中  可以把寄存器看成一个 CPU 和内存之间的一个缓存 ...`,l:"interview-questions/performance-optimization/js/reference-memory-access/index.html#原因",a:"原因"},"150.0":{t:"# 前端性能监控Performance",p:"懒加载和预加载的目的都是为了提高用户的体验，二者行为是相反的，一个是延迟加载，另一个是提前加载。懒加载对缓解服务器压力有一定 ...",l:"interview-questions/performance-optimization/lazyload-preload/index.html",a:"前端性能监控performance"},"150.1":{t:"懒加载 lazyload",p:`
懒加载：又叫延迟加载、按需加载，当我们打开一个网页，优先展示的首屏图片就先加载，而其他的图片，等到需要去展示的时候再去请求 ...`,l:"interview-questions/performance-optimization/lazyload-preload/index.html#懒加载-lazyload",a:"懒加载-lazyload"},"150.2":{t:"实现代码",p:`
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt; ...`,l:"interview-questions/performance-optimization/lazyload-preload/index.html#实现代码",a:"实现代码"},"150.3":{t:"实现细节",p:"",l:"interview-questions/performance-optimization/lazyload-preload/index.html#实现细节",a:"实现细节"},"150.4":{t:"1 如何加载图片",p:"用img的data-src属性存放真正需要显示的图片的路径，当页面滚动直到图片出现在可视区域时，将data-src中的图片地 ...",l:"interview-questions/performance-optimization/lazyload-preload/index.html#_1-如何加载图片",a:"_1-如何加载图片"},"150.5":{t:"2 如何判断一个元素出现在可视区域",p:"监听滚动事件，用getBoundingClientRect()获取DOM元素在页面的位置，该函数返回rect对象，如下图所示 ...",l:"interview-questions/performance-optimization/lazyload-preload/index.html#_2-如何判断一个元素出现在可视区域",a:"_2-如何判断一个元素出现在可视区域"},"150.6":{t:"实现效果",p:`利用开发者工具我们可以看到如下截图：

最初打开页面：只显示前两张图片，后面三张图片还没有出现在当前页面

由于后面三张还没 ...`,l:"interview-questions/performance-optimization/lazyload-preload/index.html#实现效果",a:"实现效果"},"150.7":{t:"预加载 preload",p:`预加载：提前加载所需要的图片资源，加载完毕后会缓存到本地，当需要时可以立刻显示出来。
目的：看完一张图片，再看下一张时，会有 ...`,l:"interview-questions/performance-optimization/lazyload-preload/index.html#预加载-preload",a:"预加载-preload"},"150.8":{t:"实现方法",p:"",l:"interview-questions/performance-optimization/lazyload-preload/index.html#实现方法",a:"实现方法"},"150.9":{t:"1 通过CSS",p:"",l:"interview-questions/performance-optimization/lazyload-preload/index.html#_1-通过css",a:"_1-通过css"},"150.10":{t:"步骤",p:`
创建用来预加载的标签
给标签使用背景图，背景图的路径是需要预加载的图片资源，并将图片移到看不见的地方，或缩小到看不见。
当 ...`,l:"interview-questions/performance-optimization/lazyload-preload/index.html#步骤",a:"步骤"},"150.11":{t:"2 通过JavaScript",p:"",l:"interview-questions/performance-optimization/lazyload-preload/index.html#_2-通过javascript",a:"_2-通过javascript"},"150.12":{t:"步骤",p:`
将需要预加载的图片资源的 URL 保存在数组里
循环遍历 URL 数组执行以下步骤，直到结束
创建一个 image 对象  ...`,l:"interview-questions/performance-optimization/lazyload-preload/index.html#步骤",a:"步骤"},"150.13":{t:"实现效果",p:"",l:"interview-questions/performance-optimization/lazyload-preload/index.html#实现效果",a:"实现效果"},"150.14":{t:"总结对比",p:"",l:"interview-questions/performance-optimization/lazyload-preload/index.html#总结对比",a:"总结对比"},"150.15":{t:"懒加载 预加载",p:`定义 延迟加载、按需加载 提前加载、不需要也提前加载
目的 更好更快地加载页面首屏内容，网页性能优化 让用户无需等待，获得直 ...`,l:"interview-questions/performance-optimization/lazyload-preload/index.html#懒加载-预加载",a:"懒加载-预加载"},"151.0":{t:"# 前端性能监控Performance",p:"",l:"interview-questions/performance-optimization/performance/index.html",a:"前端性能监控performance"},"151.1":{t:"一、为什么需要性能监控",p:"web 的性能一定程度上影响了用户留存率，Google DoubleClick 研究表明：如果一个移动端页面加载时长超过 3 ...",l:"interview-questions/performance-optimization/performance/index.html#一、为什么需要性能监控",a:"一、为什么需要性能监控"},"151.2":{t:"二、监控什么",p:`首先我们需要知道应该监控些什么呢？有哪些具体的指标？
Google 开发者提出了一种 RAIL 模型来衡量应用性能，即：Re ...`,l:"interview-questions/performance-optimization/performance/index.html#二、监控什么",a:"二、监控什么"},"151.3":{t:"我们可转化为三个方面来看",p:`
响应速度：页面初始访问速度 + 交互响应速度
页面稳定性：页面出错率，如资源加载错误，JS 执行报错
外部服务调用：网络请 ...`,l:"interview-questions/performance-optimization/performance/index.html#我们可转化为三个方面来看",a:"我们可转化为三个方面来看"},"151.4":{t:"三、性能指标",p:`Google开发者针对用户体验，提出的几个性能指标
!图片

FP：首次绘制
First Paint：标记浏览器渲染任何在视 ...`,l:"interview-questions/performance-optimization/performance/index.html#三、性能指标",a:"三、性能指标"},"151.5":{t:"4.1 属性",p:`
navigation：返回一个 PerformanceNavigation 对象。这个对象表示出现在当前浏览上下文的 na ...`,l:"interview-questions/performance-optimization/performance/index.html#_4-1-属性",a:"_4-1-属性"},"151.6":{t:"4.2 window.performance.timing属性",p:`!图片
`,l:"interview-questions/performance-optimization/performance/index.html#_4-2-window-performance-timing属性",a:"_4-2-window-performance-timing属性"},"151.7":{t:"21个属性，如下",p:`属性名 含义
connectStart 返回与服务端建立连接开始时间，如果是持久连接或者是从缓存中获取资源，则这个值等于do ...`,l:"interview-questions/performance-optimization/performance/index.html#_21个属性-如下",a:"_21个属性-如下"},"151.8":{t:"4.3 PerformanceNavigationTiming属性",p:`!图片
与1.2中timing字段一致，不同点如下：
`,l:"interview-questions/performance-optimization/performance/index.html#_4-3-performancenavigationtiming属性",a:"_4-3-performancenavigationtiming属性"},"151.9":{t:"（1）比1.2timing多以下字段",p:`属性名 含义

decodedBodySize 返回编码后字节大小
duration 即 PerformanceNaviga ...`,l:"interview-questions/performance-optimization/performance/index.html#_1-比1-2timing多以下字段",a:"_1-比1-2timing多以下字段"},"151.10":{t:"（2）比1.2timing少以下字段",p:"domLoading、navigationStart PerformanceTiming 中每个属性记录时间戳，所有的属性是 ...",l:"interview-questions/performance-optimization/performance/index.html#_2-比1-2timing少以下字段",a:"_2-比1-2timing少以下字段"},"151.11":{t:"4.4 timing各字段渲染顺序",p:`!图片
`,l:"interview-questions/performance-optimization/performance/index.html#_4-4-timing各字段渲染顺序",a:"_4-4-timing各字段渲染顺序"},"151.12":{t:"五、各指标计算方式",p:`
指标 计算方式 说明
页面加载总耗时 loadEventEnd - startTime 指页面完全加载完所用的时间，这时候 ...`,l:"interview-questions/performance-optimization/performance/index.html#五、各指标计算方式",a:"五、各指标计算方式"},"151.13":{t:"六、首屏时间",p:`我们知道首屏时间是一项重要指标，但是又很难从 performance 中拿到，来看下首屏时间计算主要有哪些方式？

用户自定 ...`,l:"interview-questions/performance-optimization/performance/index.html#六、首屏时间",a:"六、首屏时间"},"152.0":{t:"# 最全的前端性能定位总结",p:"",l:"interview-questions/performance-optimization/performance-summary/index.html",a:"最全的前端性能定位总结"},"152.1":{t:"性能优化的意义",p:"",l:"interview-questions/performance-optimization/performance-summary/index.html#性能优化的意义",a:"性能优化的意义"},"152.2":{t:"1\\. 性能是留住用户很重要的一环",p:`

pinterest 重建了他们的页面以实现性能，使感知等待时间减少了 40％，从而将搜索引擎流量和注册量提高了 15％。 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#_1-性能是留住用户很重要的一环",a:"_1-性能是留住用户很重要的一环"},"152.3":{t:"2\\. 性能是改善转换率至关重要的一环",p:`
对于 Mobify，主页加载速度每减少 100 毫秒，基于会话的转换增加 1.11％，平均年收入增加近 380,000 美 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#_2-性能是改善转换率至关重要的一环",a:"_2-性能是改善转换率至关重要的一环"},"152.4":{t:"用户角度的性能标准是什么",p:"",l:"interview-questions/performance-optimization/performance-summary/index.html#用户角度的性能标准是什么",a:"用户角度的性能标准是什么"},"152.5":{t:"著名的 2-5-8 原则",p:`

当用户能够在 2 秒以内得到响应时，会感觉系统的响应很快；


当用户在 2-5 秒之间得到响应时，会感觉系统的响应速度 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#著名的-2-5-8-原则",a:"著名的-2-5-8-原则"},"152.6":{t:"常见网站性能指标",p:`
FP 白屏（First Paint Time ）： 从页面开始加载到浏览器中检测到渲染（任何渲染）时被触发（例如背景改变， ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#常见网站性能指标",a:"常见网站性能指标"},"152.7":{t:"Google Web Vitals - 使用者体验量化",p:"web-vitals: Google 于 2020 年 5 年 5 日提出了新的使用者体验量化方式，推出 Web Vital ...",l:"interview-questions/performance-optimization/performance-summary/index.html#google-web-vitals-使用者体验量化",a:"google-web-vitals-使用者体验量化"},"152.8":{t:"Performance API",p:"Performance 是一个浏览器全局对象，提供了一组 API 用于编程式地获取程序在某些节点的性能数据。它包含一组高精度 ...",l:"interview-questions/performance-optimization/performance-summary/index.html#performance-api",a:"performance-api"},"152.9":{t:"使用 `performance.timing` 信息简单计算出**网页性能数据**",p:"FP：responseStart - navigationStart 重定向耗时：redirectEnd - redirec ...",l:"interview-questions/performance-optimization/performance-summary/index.html#使用-performance-timing-信息简单计算出-网页性能数据",a:"使用-performance-timing-信息简单计算出-网页性能数据"},"152.10":{t:"使用`performance.getEntries()`获取所有资源请求的时间数据",p:`获取所有资源请求的时间数据,这个函数返回一个按 startTime 排序的对象数组
我们直接面板输出一下。 !11.png
`,l:"interview-questions/performance-optimization/performance-summary/index.html#使用-performance-getentries-获取所有资源请求的时间数据",a:"使用-performance-getentries-获取所有资源请求的时间数据"},"152.11":{t:"使用`performance.getEntriesByName(name)`获取特定名称的时间数据",p:`
比如面试过程非常喜欢问的 FCP 首屏时间如何计算呢

我们可以通过 getEntriesByName(name)提供的  ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#使用-performance-getentriesbyname-name-获取特定名称的时间数据",a:"使用-performance-getentriesbyname-name-获取特定名称的时间数据"},"152.12":{t:"使用`performance.now()`精确计算程序执行时间",p:"performance.now方法返回当前网页自从performance.timing.navigationStart到当前 ...",l:"interview-questions/performance-optimization/performance-summary/index.html#使用-performance-now-精确计算程序执行时间",a:"使用-performance-now-精确计算程序执行时间"},"152.13":{t:"使用`performance.mark`以及`performance.measure`手动测量性能",p:`这块具体的代码示例 建议大家可以直接访问这里去查看
咱们如果想自定义搜集性能数据指标 做前端的性能监控系统 那么这两个 ap ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#使用-performance-mark-以及-performance-measure-手动测量性能",a:"使用-performance-mark-以及-performance-measure-手动测量性能"},"152.14":{t:"Google performance 面板",p:`哈哈 大家别慌 虽然这个也叫 performance 但是这里指的是咱们浏览器的performance 面板工具
`,l:"interview-questions/performance-optimization/performance-summary/index.html#google-performance-面板",a:"google-performance-面板"},"152.15":{t:"整体结构",p:`!WX20220107-150213.png
我们第一眼可能会被这些花花绿绿的色块吓到 咱们别怕 一点点带大家分析
从上到下 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#整体结构",a:"整体结构"},"152.16":{t:"工具条区域",p:`!24.png
上面红框从左到右 咱们把鼠标放上去可以看到几个英文单词

record 记录浏览器运行中的某一个时间段的表现 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#工具条区域",a:"工具条区域"},"152.17":{t:"总览区域",p:"!WX20220107-150848.png1. FPS**: 全称 Frames Per Second，表示每秒传输帧数， ...",l:"interview-questions/performance-optimization/performance-summary/index.html#总览区域",a:"总览区域"},"152.18":{t:"火焰图",p:`!WX20220107-151346.png


Network：表示每个服务器资源的加载情况。


Frames：表示每幅 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#火焰图",a:"火焰图"},"152.19":{t:"总体报告",p:"",l:"interview-questions/performance-optimization/performance-summary/index.html#总体报告",a:"总体报告"},"152.20":{t:"Summary：表示各指标时间占用统计报表",p:`!WX20220107-155126.png
这里的颜色代表的意思和总览区域里面的 cpu颜色一样的意思 大家不清楚的可以往 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#summary-表示各指标时间占用统计报表",a:"summary-表示各指标时间占用统计报表"},"152.21":{t:"Bottom-Up：表示事件时长排序列表（倒序）",p:`!WX20220107-155339.png
这里有两列时间数据，一是&quot;Self Time&quot;代表任务自身 ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#bottom-up-表示事件时长排序列表-倒序",a:"bottom-up-表示事件时长排序列表-倒序"},"152.22":{t:"Call tree：表示事件调用顺序列表",p:"!WX20220107-155349.png Call Tree 中的内容，在 Bottom-Up 中也能看到，无明显的区别 ...",l:"interview-questions/performance-optimization/performance-summary/index.html#call-tree-表示事件调用顺序列表",a:"call-tree-表示事件调用顺序列表"},"152.23":{t:"Event Log：表示事件发生的顺序列表",p:"!WX20220107-155402.png Event Log 中的内容，是按顺序记录的事件日志，数据比较多。常见的优化级 ...",l:"interview-questions/performance-optimization/performance-summary/index.html#event-log-表示事件发生的顺序列表",a:"event-log-表示事件发生的顺序列表"},"152.24":{t:"lighthouse",p:"先来介绍 lighthouse 工具，目前官方提供了 google devtools、google 插件、npm cli 方 ...",l:"interview-questions/performance-optimization/performance-summary/index.html#lighthouse",a:"lighthouse"},"152.25":{t:"Performance 性能",p:`列出了 FCP、SP、LCP、TTI、TBI、CLS 六个指标。
!lighthouse03.jpg
同时也提供可优化方案  ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#performance-性能",a:"performance-性能"},"152.26":{t:"Accessibility 可访问性",p:"可访问性：指无障碍设计，也称为网站可达性。是指所创建的网站对所有用户都可用/可访问，不管用户的生理/身体能力如何、不管用户是 ...",l:"interview-questions/performance-optimization/performance-summary/index.html#accessibility-可访问性",a:"accessibility-可访问性"},"152.27":{t:"Best Practice 最佳实践",p:`实际应用中，网站的安全问题 !lighthouse06.jpg
`,l:"interview-questions/performance-optimization/performance-summary/index.html#best-practice-最佳实践",a:"best-practice-最佳实践"},"152.28":{t:"SEO 搜索引擎优化",p:`搜索引擎优化，是一种利用搜索引擎的规则提高网站在有关搜索引擎内的自然排名 !lighthouse07.jpg
`,l:"interview-questions/performance-optimization/performance-summary/index.html#seo-搜索引擎优化",a:"seo-搜索引擎优化"},"152.29":{t:"Progressive Web App 轻应用-离线应用",p:"PWA： 运用现代的 Web API 以及传统的渐进式增强策略来创建跨平台 Web 应用程序。这些应用无处不在、功能丰富，使 ...",l:"interview-questions/performance-optimization/performance-summary/index.html#progressive-web-app-轻应用-离线应用",a:"progressive-web-app-轻应用-离线应用"},"152.30":{t:"node cli lighthouse",p:`项目安装 lighthouse
npm i -g lighthouse
lighthouse https://www.tao ...`,l:"interview-questions/performance-optimization/performance-summary/index.html#node-cli-lighthouse",a:"node-cli-lighthouse"},"153.0":{t:"# 虚拟列表",p:"",l:"interview-questions/performance-optimization/virtual-list/react/index.html",a:"虚拟列表"},"153.1":{t:"介绍",p:"虚拟列表，其实就是将一个原本需要全部列表项的渲染的长列表，改为只渲染可视区域内的列表项，但滚动效果还是要和渲染所有列表项的长 ...",l:"interview-questions/performance-optimization/virtual-list/react/index.html#介绍",a:"介绍"},"153.2":{t:"虚拟列表解决的长列表渲染大量节点导致的性能问题",p:`

一次性渲染大量节点，会占用大量 GPU 资源，导致卡顿；


即使渲染好了，大量的节点也持续占用内存。列表项下的节点越多 ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#虚拟列表解决的长列表渲染大量节点导致的性能问题",a:"虚拟列表解决的长列表渲染大量节点导致的性能问题"},"153.3":{t:"列表项高度固定",p:"",l:"interview-questions/performance-optimization/virtual-list/react/index.html#列表项高度固定",a:"列表项高度固定"},"153.4":{t:"思路讲解",p:`
列表项高度固定的情况会简单很多，因为我们可以在渲染前就能知道任何一个列表项的位置。
因为涉及到的变量很多，实现起来还是有点 ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#思路讲解",a:"思路讲解"},"153.5":{t:"代码实现 一个将 items 往下推到正确位置的空元素",p:`
接收一个上面提到的几个数量和高度参数外，还接收一个列表项组件。
我们会将计算出来的高度做成 style 对象以及一个索引值 ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#代码实现-一个将-items-往下推到正确位置的空元素",a:"代码实现-一个将-items-往下推到正确位置的空元素"},"153.6":{t:"代码实现 transform",p:`/**
 * transform 方案
 */
import { useState } from 'react';
impo ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#代码实现-transform",a:"代码实现-transform"},"153.7":{t:"代码实现 绝对定位方案",p:`/**
 * 绝对定位方案
 */
import { useState } from 'react';
import { f ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#代码实现-绝对定位方案",a:"代码实现-绝对定位方案"},"153.8":{t:"使用示例",p:`import FixedSizeList from './FixedSizeList';
import './styles. ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#使用示例",a:"使用示例"},"153.9":{t:"列表项高度动态",p:"",l:"interview-questions/performance-optimization/virtual-list/react/index.html#列表项高度动态",a:"列表项高度动态"},"153.10":{t:"思路讲解",p:`
和列表项等高的实现不同，这里不能传一个固定值 itemHeight，改为传入一个根据 index 获取列表项宽度函数 ge ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#思路讲解",a:"思路讲解"},"153.11":{t:"代码实现",p:`import { forwardRef, useState } from 'react';
import { flushSy ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#代码实现",a:"代码实现"},"153.12":{t:"使用示例",p:`import { useEffect, useRef, useState } from 'react';
import Va ...`,l:"interview-questions/performance-optimization/virtual-list/react/index.html#使用示例",a:"使用示例"},"154.0":{t:"# webpack 5高级配置优化",p:`前言
越来越多的项目使用webpack5来构建项目了，今天给大家带来最前沿的webpack5配置，让我们代码在编译/运行时性 ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html",a:"webpack-5高级配置优化"},"154.1":{t:"提升打包构建速度",p:`在进行打包速度优化之前，需要对当前项目每个部分的打包时间了解清楚。
我们借助 speed-measure-webpack-p ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#提升打包构建速度",a:"提升打包构建速度"},"154.2":{t:"HotModuleReplacement",p:"开发时我们修改了其中一个模块代码，Webpack 默认会将所有模块全部重新打包编译，速度很慢。 所以我们需要做到修改某个模块 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#hotmodulereplacement",a:"hotmodulereplacement"},"154.3":{t:"**HMR 的工作原理图解**",p:`初识 HMR 的时候觉得其很神奇，一直有一些疑问萦绕在脑海。

webpack 可以将不同的模块打包成 bundle 文件或 ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#hmr-的工作原理图解",a:"hmr-的工作原理图解"},"154.4":{t:"OneOf",p:"打包时每个文件都会经过所有 loader 处理，虽然因为 test 正则原因实际没有处理上，但是都要过一遍。比较慢。实际上就 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#oneof",a:"oneof"},"154.5":{t:"Cache",p:"每次打包时 js 文件都要经过 Eslint 检查 和 Babel 编译，速度比较慢。 我们可以缓存之前的 Eslint 检 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#cache",a:"cache"},"154.6":{t:"持久化缓存",p:"我们还可以通过通过配置 webpack 持久化缓存 cache: filesystem，来缓存生成的 webpack 模块和 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#持久化缓存",a:"持久化缓存"},"154.7":{t:"Network Cache",p:`将来开发时我们对静态资源会使用缓存来优化，这样浏览器第二次请求资源就能读取缓存了，速度很快。
但是这样的话就会有一个问题,  ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#network-cache",a:"network-cache"},"154.8":{t:"Thead",p:"当项目越来越庞大时，打包速度越来越慢，甚至于需要一个下午才能打包出来代码。这个速度是比较慢的。 我们想要继续提升打包速度，其 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#thead",a:"thead"},"154.9":{t:"Tree Shaking",p:"开发时我们定义了一些工具函数库，或者引用第三方工具函数库或组件库。 如果没有特殊处理的话我们打包时会引入整个库，但是实际上可 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#tree-shaking",a:"tree-shaking"},"154.10":{t:"Babel",p:`Babel 为编译的每个文件都插入了辅助代码，使代码体积过大！
Babel 对一些公共方法使用了非常小的辅助代码，比如 _e ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#babel",a:"babel"},"154.11":{t:"多入口",p:`
文件目录

├── public
├── src
|   ├── app.js
|   └── main.js
├── p ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#多入口",a:"多入口"},"154.12":{t:"提取重复代码",p:`如果多入口文件中都引用了同一份代码，我们不希望这份代码被打包到两个文件中，导致代码重复，体积更大。
我们需要提取多入口的重复 ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#提取重复代码",a:"提取重复代码"},"154.13":{t:"按需加载，动态导入",p:`想要实现按需加载，动态导入模块。还需要额外配置：

修改文件


main.js

console.log(&quot;he ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#按需加载-动态导入",a:"按需加载-动态导入"},"154.14":{t:"给动态导入文件取名称",p:`
修改文件


main.js

import sum from &quot;./js/sum&quot;;
// 引入资源 ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#给动态导入文件取名称",a:"给动态导入文件取名称"},"154.15":{t:"eslint 配置",p:`npm i eslint-plugin-import -D

// .eslintrc.js
module.exports  ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#eslint-配置",a:"eslint-配置"},"154.16":{t:"统一命名配置",p:`const os = require(&quot;os&quot;);
const path = require(&quot ...`,l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#统一命名配置",a:"统一命名配置"},"154.17":{t:"Preload / Prefetch",p:"我们前面已经做了代码分割，同时会使用 import 动态导入语法来进行代码按需加载（我们也叫懒加载，比如路由懒加载就是这样实 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#preload-prefetch",a:"preload-prefetch"},"154.18":{t:"Core-js",p:"过去我们使用 babel 对 js 代码进行了兼容性处理，其中使用@babel/preset-env 智能预设来处理兼容性问 ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#core-js",a:"core-js"},"154.19":{t:"externals",p:"externals可以告诉webpack不打包资源，从而减少入口文件的大小，如果不打包某个包，又要用到他，这个时候需要从ht ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#externals",a:"externals"},"154.20":{t:"Shimming 预置依赖，ProvidePlugin",p:"webpack compiler 能够识别遵循 ES2015 模块语法、CommonJS 或 AMD 规范编写的模块。然而， ...",l:"interview-questions/performance-optimization/webpack/webpack5-optimization/index.html#shimming-预置依赖-provideplugin",a:"shimming-预置依赖-provideplugin"},"155.0":{t:"# 小程序代码包极致压缩之路",p:`影响小程序代码包大小的因素



类型
说明




业务代码
这是项目的基础，一般业务没有变更的情况下，很难减少


公共 ...`,l:"interview-questions/performance-optimization/westore/load-compress/index.html",a:"小程序代码包极致压缩之路"},"155.1":{t:"1、开启代码压缩",p:`这一步没啥成本，但效果很明显 !image.png
`,l:"interview-questions/performance-optimization/westore/load-compress/index.html#_1、开启代码压缩",a:"_1、开启代码压缩"},"155.2":{t:"2、分包",p:"这是最有效的手段，将非必须存在于主包的代码拆分到相应的分包中，分包按功能尽可能拆分的小一些；非主包用到的东西不允许放主包，一 ...",l:"interview-questions/performance-optimization/westore/load-compress/index.html#_2、分包",a:"_2、分包"},"155.3":{t:"3、删除无用代码(包括无用样式)",p:`废弃的代码及时删除，包括js、wxml和样式，特别是app.wxss内的样式
`,l:"interview-questions/performance-optimization/westore/load-compress/index.html#_3、删除无用代码-包括无用样式",a:"_3、删除无用代码-包括无用样式"},"155.4":{t:"4、本地图片替换成CDN图片",p:`除了本地必须的图片，如报错兜底、logo等，其他一律替换成CDN图片
`,l:"interview-questions/performance-optimization/westore/load-compress/index.html#_4、本地图片替换成cdn图片",a:"_4、本地图片替换成cdn图片"},"155.5":{t:"5、wxml结构精简",p:"wxml的内容基本以原始文本的形式存在于打包后的代码中，其结构越复杂，最终生成的代码越大，通过精简wxml的结构，可以有效降 ...",l:"interview-questions/performance-optimization/westore/load-compress/index.html#_5、wxml结构精简",a:"_5、wxml结构精简"},"155.6":{t:"1、文件路径压缩",p:"因为文件路径最终会原样打包到代码中，对于代码量很大的项目来说，替换成更短的路径也能省不少空间。组件越多、代码目录层级越深，最 ...",l:"interview-questions/performance-optimization/westore/load-compress/index.html#_1、文件路径压缩",a:"_1、文件路径压缩"},"155.7":{t:"2、原子css",p:"原子css的基本原则，决定了其基础库的大小是固定的，即使同样的css规则被使用了很多次，但其声明只有一次，唯一的弊端是会导致 ...",l:"interview-questions/performance-optimization/westore/load-compress/index.html#_2、原子css",a:"_2、原子css"},"155.8":{t:"3、类名压缩",p:"尽管采用原子css后，代码体积下降了多，但之前为了阅读的友好，命名仍然有些长，可以采用短命名替换，通过编译手段进一步降低代码 ...",l:"interview-questions/performance-optimization/westore/load-compress/index.html#_3、类名压缩",a:"_3、类名压缩"},"155.9":{t:"看起来很美好",p:"为什么说看起来很美好呢，是因为我们的小程序需要支持微信、企业微信的移动端和PC端，目前来说PC端支持的不是特别好，需要升级到 ...",l:"interview-questions/performance-optimization/westore/load-compress/index.html#看起来很美好",a:"看起来很美好"},"156.0":{t:"# hooks",p:`!深入 Hooks.png
`,l:"interview-questions/react/hooks/index.html",a:"hooks"},"156.1":{t:"自定义Hooks是什么？",p:"react-hooks是React16.8以后新增的钩子API，目的是增加代码的可复用性、逻辑性，最主要的是解决了函数式组件 ...",l:"interview-questions/react/hooks/index.html#自定义hooks是什么",a:"自定义hooks是什么"},"156.2":{t:"玩转React Hooks",p:"在上述中我们讲了用 useMemo来处理无关的渲染，接下来我们一起来看看React Hooks的这些钩子的妙用（这里建议先熟 ...",l:"interview-questions/react/hooks/index.html#玩转react-hooks",a:"玩转react-hooks"},"156.3":{t:"通过useRef获取对应的属性值",p:`我们先看个案例：
import React, { useState, useRef } from 'react';

con ...`,l:"interview-questions/react/hooks/index.html#通过useref获取对应的属性值",a:"通过useref获取对应的属性值"},"156.4":{t:"缓存数据",p:`除了获取对应的属性值外，useRef还有一点比较重要的特性，那就是 缓存数据
上述讲到我们封装一个合格的自定义hooks的时 ...`,l:"interview-questions/react/hooks/index.html#缓存数据",a:"缓存数据"},"156.5":{t:"useLatest",p:"经过上面的讲解我们知道useRef 可以拿到最新值，我们可以进行简单的封装，这样做的好处是：可以随时确保获取的是最新值，并且 ...",l:"interview-questions/react/hooks/index.html#uselatest",a:"uselatest"},"156.6":{t:"结合useMemo和useRef封装useCreation",p:"useCreation ：是 useMemo 或 useRef的替代品。换言之，useCreation这个钩子增强了 use ...",l:"interview-questions/react/hooks/index.html#结合usememo和useref封装usecreation",a:"结合usememo和useref封装usecreation"},"156.7":{t:"验证 useCreation",p:`接下来我们写个小例子，来验证下 useCreation是否能满足我们的要求：
    import React, { use ...`,l:"interview-questions/react/hooks/index.html#验证-usecreation",a:"验证-usecreation"},"156.8":{t:"useMount",p:`这个钩子不必多说，只是简化了使用useEffect的第二个参数：
    import { useEffect } from ...`,l:"interview-questions/react/hooks/index.html#usemount",a:"usemount"},"156.9":{t:"useUnmount",p:`这个需要注意一个点，就是使用useRef来确保所传入的函数为最新的状态，所以可以结合上述讲的useLatest结合使用
   ...`,l:"interview-questions/react/hooks/index.html#useunmount",a:"useunmount"},"156.10":{t:"结合`useMount`和`useUnmount`做个小例子",p:`    import { Button, Toast } from 'antd-mobile';
    import Re ...`,l:"interview-questions/react/hooks/index.html#结合-usemount-和-useunmount-做个小例子",a:"结合-usemount-和-useunmount-做个小例子"},"156.11":{t:"useUpdate",p:`useUpdate:强制更新
有的时候我们需要组件强制更新，这个时候就可以使用这个钩子：
    import { useC ...`,l:"interview-questions/react/hooks/index.html#useupdate",a:"useupdate"},"156.12":{t:"分析",p:"以上四个小问题，最关键的就是第二个，我们如何将数据弄成响应式，想要弄成响应式，就必须监听到值的变化，在做出更改，也就是说，我 ...",l:"interview-questions/react/hooks/index.html#分析",a:"分析"},"156.13":{t:"代码",p:`import { useRef } from 'react';
import { useUpdate, useCreatio ...`,l:"interview-questions/react/hooks/index.html#代码",a:"代码"},"156.14":{t:"验证",p:"接下来我们来验证一下我们写的 useReactive,我们将以 字符串、数字、布尔、数组、函数、计算属性几个方面去验证一下： ...",l:"interview-questions/react/hooks/index.html#验证",a:"验证"},"156.15":{t:"代码",p:`    import { useEffect } from 'react';

    const useEventList ...`,l:"interview-questions/react/hooks/index.html#代码",a:"代码"},"156.16":{t:"支持SSR（优化）",p:"在原本的ahooks代码中，会用到useEffectWithTarget，一开搞错了，以为这个是类似于useCreation ...",l:"interview-questions/react/hooks/index.html#支持ssr-优化",a:"支持ssr-优化"},"156.17":{t:"详细代码",p:`    import { useEffect } from 'react';
    import type { Depen ...`,l:"interview-questions/react/hooks/index.html#详细代码",a:"详细代码"},"156.18":{t:"验证",p:`验证一下useEventListener是否能够正常的使用，顺变验证一下初始化、卸载的，代码：
    import Rea ...`,l:"interview-questions/react/hooks/index.html#验证",a:"验证"},"156.19":{t:"小例子 useHover",p:`useHover：监听 DOM 元素是否有鼠标悬停
这个就很简单了，只需要通过 useEventListener来监听mou ...`,l:"interview-questions/react/hooks/index.html#小例子-usehover",a:"小例子-usehover"},"156.20":{t:"useTimeout",p:`useTimeout：一段时间内，执行一次
传递参数只要函数和延迟时间即可，需要注意的是卸载的时候将定时器清除下就OK了
详 ...`,l:"interview-questions/react/hooks/index.html#usetimeout",a:"usetimeout"},"156.21":{t:"useInterval",p:`useInterval: 每过一段时间内一直执行
大体上与useTimeout一样，多了一个是否要首次渲染的参数immedi ...`,l:"interview-questions/react/hooks/index.html#useinterval",a:"useinterval"},"156.22":{t:"useCountDown",p:`useCountDown：简单控制倒计时的钩子
跟之前一样我们先来想想这个钩子需要什么：

我们要做倒计时的钩子首先需要一个 ...`,l:"interview-questions/react/hooks/index.html#usecountdown",a:"usecountdown"},"156.23":{t:"详细代码",p:`    import { useState, useEffect, useMemo } from 'react';
     ...`,l:"interview-questions/react/hooks/index.html#详细代码",a:"详细代码"},"156.24":{t:"验证",p:`    import React, { useState } from 'react';
    import { useC ...`,l:"interview-questions/react/hooks/index.html#验证",a:"验证"},"156.25":{t:"效果展示",p:`!img5.gif
`,l:"interview-questions/react/hooks/index.html#效果展示",a:"效果展示"},"156.26":{t:"End",p:`参考

ahooks

总结
简单的做下总结：

一个优秀的hooks一定会具备useMemo、useCallback等ap ...`,l:"interview-questions/react/hooks/index.html#end",a:"end"},"157.0":{t:"# React的setState是异步的还是同步的",p:"开发中当组件中的状态发生了变化，页面并不会重新渲染。我们必须要通过setState来告知React数据已经发生了变化，重新渲 ...",l:"interview-questions/react/setstate/index.html",a:"react的setstate是异步的还是同步的"},"157.1":{t:"那么为什么setState设计为异步呢？",p:`

setState设计为异步，可以显著的提升性能

如果每次调用setState都进行一次更新，那么意味着render函数 ...`,l:"interview-questions/react/setstate/index.html#那么为什么setstate设计为异步呢",a:"那么为什么setstate设计为异步呢"},"157.2":{t:"如何获取异步的结果",p:`

setState的回调


setState接受两个参数：第二个参数是一个回调函数，这个回调函数会在更新后会执行；
ch ...`,l:"interview-questions/react/setstate/index.html#如何获取异步的结果",a:"如何获取异步的结果"},"158.0":{t:"# 关于前端：如何实现并发请求数量控制？",p:"",l:"interview-questions/scene-problem/concurrent-requests/index.html",a:"关于前端-如何实现并发请求数量控制"},"158.1":{t:"场景",p:"假设有这么一个场景：现在有20个异步请求需要发送，但是由于某些原因，要求我们必须将同一时刻的并发请求数量控制在3个以内，并且 ...",l:"interview-questions/scene-problem/concurrent-requests/index.html#场景",a:"场景"},"158.2":{t:"设计思路",p:`首先来看将上面的文字转化为图之后的效果：
!image.png
这样就直观的看到，有一个最大并发数maxNum，20个异步请 ...`,l:"interview-questions/scene-problem/concurrent-requests/index.html#设计思路",a:"设计思路"},"158.3":{t:"开发",p:`具体代码如下（代码中已备注有注释）：
// 并发请求函数
const concurrencyRequest = (urls, ...`,l:"interview-questions/scene-problem/concurrent-requests/index.html#开发",a:"开发"},"158.4":{t:"测试",p:`测试代码如下：
const urls = [];
for (let i = 1; i &lt;= 20; i++) {
   ...`,l:"interview-questions/scene-problem/concurrent-requests/index.html#测试",a:"测试"},"158.5":{t:"结果",p:`下面通过运行代码来看看效果：
首先来看看控制台输出的结果，如下：
!image.png
!image.png
可以看到20个 ...`,l:"interview-questions/scene-problem/concurrent-requests/index.html#结果",a:"结果"},"159.0":{t:"# 实时更新数据",p:`
先说一下这个动态事件列表的需求：我们的服务器每隔5秒会产生一个新的事件，每个事件都有一个id字段以及timestamp字段 ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html",a:"实时更新数据"},"159.1":{t:"概念解释",p:"我相信大多数程序员或多或少都使用过轮询来获取服务端的资源，简单来说轮询就是客户端不停地调用服务端接口以获得最新的数据。下图是 ...",l:"interview-questions/scene-problem/css-text-rotate/index.html#概念解释",a:"概念解释"},"159.2":{t:"代码实现",p:`下面就让我们用轮询来实现动态事件列表的需求, 首先是Node代码:
// node/polling.js

const ht ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#代码实现",a:"代码实现"},"159.3":{t:"Polling的优缺点",p:`从上面的代码我们可以看出，短轮询这个技术方案最大的优点就是实现简单，而它的缺点也很明显：

无用的请求多: 因为客户端不知道 ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#polling的优缺点",a:"polling的优缺点"},"159.4":{t:"使用场景",p:`一般生产级别的应用都不会使用短轮询这个方案，除非你只是写一些给少数人用的系统。
长轮询
看完了上面关于短轮询的介绍，我们知道 ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#使用场景",a:"使用场景"},"159.5":{t:"代码实现",p:`接着就让我们使用长轮询来动态实现事件列表的功能，先看一下后端代码:
// node/long-polling.js

con ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#代码实现",a:"代码实现"},"159.6":{t:"Long Polling的优缺点",p:"长轮询很完美地解决了短轮询的问题，首先服务端在没有数据更新的情况下没有给客户端返回数据，所以避免了客户端大量的重复请求。再者 ...",l:"interview-questions/scene-problem/css-text-rotate/index.html#long-polling的优缺点",a:"long-polling的优缺点"},"159.7":{t:"应用场景",p:`从网上找的资料来看之前的WebQQ和Web微信都是基于长轮询实现的，现在是不是我就不知道了，有兴趣的读者可以自行验证一下。
 ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#应用场景",a:"应用场景"},"159.8":{t:"概念解释",p:"上面说到长轮询不适用于服务端资源频繁更新的场景，而解决这类问题的一个方案就是WebSocket。用最简单的话来介绍WebSo ...",l:"interview-questions/scene-problem/css-text-rotate/index.html#概念解释",a:"概念解释"},"159.9":{t:"代码实现",p:`我们再来看一下如何使用WebSocket来实现动态事件列表的需求，下面是后端代码:
// node/websocket.js ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#代码实现",a:"代码实现"},"159.10":{t:"WebSocket的优缺点",p:`总的来说，我认为WebSocket有下面这些优点：

客户端和服务端建立连接的次数少：理想情况下客户端只需要发送一个HTTP ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#websocket的优缺点",a:"websocket的优缺点"},"159.11":{t:"应用场景",p:`WebSocket的应用场景是一些实时性要求很高的而且需要双工通信的系统例如IM软件等。
Server-Sent Event ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#应用场景",a:"应用场景"},"159.12":{t:"概念解释",p:"Server-Sent Events简称SSE，是一个基于HTTP协议的服务端向客户端推送数据的技术。下面是一个简单的SSE ...",l:"interview-questions/scene-problem/css-text-rotate/index.html#概念解释",a:"概念解释"},"159.13":{t:"代码实现",p:`和上面一样，我们使用SSE来实现一下动态事件列表的需求，先看后端代码:
// node/sse.js

const http ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#代码实现",a:"代码实现"},"159.14":{t:"SSE的优缺点",p:`在我看来，SSE的技术有下面的优点：

连接数少： 客户端和服务端只有一个持久的HTTP连接，因此性能也是很好的。
数据实时 ...`,l:"interview-questions/scene-problem/css-text-rotate/index.html#sse的优缺点",a:"sse的优缺点"},"159.15":{t:"使用场景",p:`SSE技术适合一些只需要服务端单向推送事件给客户端的场景，例如股票行情推送软件。
`,l:"interview-questions/scene-problem/css-text-rotate/index.html#使用场景",a:"使用场景"},"160.0":{t:"# 实现拖拽",p:`&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;

&lt;he ...`,l:"interview-questions/scene-problem/drag/index.html",a:"实现拖拽"},"161.0":{t:"# EventLoop",p:`  async function async1() {
            console.log('async1 st ...`,l:"interview-questions/scene-problem/event-loop/index.html",a:"eventloop"},"162.0":{t:"# 请设计一个不能操作DOM和调接口的环境",p:`最终实现
实现思路：
1）利用 iframe 创建沙箱，取出其中的原生浏览器全局对象作为沙箱的全局对象
2）设置一个黑名单， ...`,l:"interview-questions/scene-problem/operaction-dom/index.html",a:"请设计一个不能操作dom和调接口的环境"},"162.1":{t:"简陋的沙箱",p:`题目要求： 实现这样一个沙箱，要求程序中访问的所有变量，均来自可靠或自主实现的上下文环境，而不会从全局的执行环境中取值
举个 ...`,l:"interview-questions/scene-problem/operaction-dom/index.html#简陋的沙箱",a:"简陋的沙箱"},"162.2":{t:"With + Proxy 实现沙箱",p:`题目要求： 希望沙箱中的代码只在手动提供的上下文对象中查找变量，如果上下文对象中不存在该变量，则提示对应的错误
举个🌰：  ...`,l:"interview-questions/scene-problem/operaction-dom/index.html#with-proxy-实现沙箱",a:"with-proxy-实现沙箱"},"162.3":{t:"天然的优质沙箱（iframe）",p:`iframe 标签可以创造一个独立的浏览器原生级别的运行环境，这个环境由浏览器实现了与主环境的隔离
利用 iframe 来实 ...`,l:"interview-questions/scene-problem/operaction-dom/index.html#天然的优质沙箱-iframe",a:"天然的优质沙箱-iframe"},"163.0":{t:"# 设计一个 JS 插件系统",p:`原文地址：css-tricks.com/designing-a…
前言
许多开源库都有插件系统，例如：Vue、jQuery、 ...`,l:"interview-questions/scene-problem/plugin/index.html",a:"设计一个-js-插件系统"},"164.0":{t:"# 关于前端：如何实现并发请求数量控制？",p:"",l:"interview-questions/scene-problem/polling/index.html",a:"关于前端-如何实现并发请求数量控制"},"164.1":{t:"场景",p:"假设有这么一个场景：现在有20个异步请求需要发送，但是由于某些原因，要求我们必须将同一时刻的并发请求数量控制在3个以内，并且 ...",l:"interview-questions/scene-problem/polling/index.html#场景",a:"场景"},"164.2":{t:"设计思路",p:`首先来看将上面的文字转化为图之后的效果：
!image.png
这样就直观的看到，有一个最大并发数maxNum，20个异步请 ...`,l:"interview-questions/scene-problem/polling/index.html#设计思路",a:"设计思路"},"164.3":{t:"开发",p:`具体代码如下（代码中已备注有注释）：
// 并发请求函数
const concurrencyRequest = (urls, ...`,l:"interview-questions/scene-problem/polling/index.html#开发",a:"开发"},"164.4":{t:"测试",p:`测试代码如下：
const urls = [];
for (let i = 1; i &lt;= 20; i++) {
   ...`,l:"interview-questions/scene-problem/polling/index.html#测试",a:"测试"},"164.5":{t:"结果",p:`下面通过运行代码来看看效果：
首先来看看控制台输出的结果，如下：
!image.png
!image.png
可以看到20个 ...`,l:"interview-questions/scene-problem/polling/index.html#结果",a:"结果"},"165.0":{t:"# 红绿灯的两种实现",p:"",l:"interview-questions/scene-problem/promise-traffic-light/index.html",a:"红绿灯的两种实现"},"165.1":{t:"基础",p:`function solve(){
    setTimeout(() =&gt; {
        console.lo ...`,l:"interview-questions/scene-problem/promise-traffic-light/index.html#基础",a:"基础"},"165.2":{t:"Promise",p:`function solve(time1,time2,time3){
    let p=new Promise(resol ...`,l:"interview-questions/scene-problem/promise-traffic-light/index.html#promise",a:"promise"},"166.0":{t:"# 无感刷新token",p:`一、无感刷新refreshToken是什么？
首先，认证首先的方式有好几种，常见的有 session + cookie，需要 ...`,l:"interview-questions/scene-problem/refresh-token/index.html",a:"无感刷新token"},"166.1":{t:"1-1、先了解 token 认证流程",p:`token 的认证基本的流程就是：

客户端输入账号密码登录成功；
服务端返回 token（一般里面包含用户的一些基本信息， ...`,l:"interview-questions/scene-problem/refresh-token/index.html#_1-1、先了解-token-认证流程",a:"_1-1、先了解-token-认证流程"},"166.2":{t:"1-2、refreshToken是啥？",p:"refreshToken 其实和 token 并没有任何的区别，都是通过 jwt 加密的一串加密字符串，但是 token 是 ...",l:"interview-questions/scene-problem/refresh-token/index.html#_1-2、refreshtoken是啥",a:"_1-2、refreshtoken是啥"},"166.3":{t:"3-1、login 登录后返回",p:"  async login(ctx: Context, next: () =&gt; Promise&lt;void&gt; ...",l:"interview-questions/scene-problem/refresh-token/index.html#_3-1、login-登录后返回",a:"_3-1、login-登录后返回"},"166.4":{t:"3-2、router 单独配置 refreshToken",p:`router.get('/refresh', refreshAuth, refreshTokenCon)
// refres ...`,l:"interview-questions/scene-problem/refresh-token/index.html#_3-2、router-单独配置-refreshtoken",a:"_3-2、router-单独配置-refreshtoken"},"166.5":{t:"3-3、refreshToken 的权限时效判断",p:`import { Context } from 'koa'
import jwt from 'jsonwebtoken'
i ...`,l:"interview-questions/scene-problem/refresh-token/index.html#_3-3、refreshtoken-的权限时效判断",a:"_3-3、refreshtoken-的权限时效判断"},"166.6":{t:"3-4、token 的时效判断",p:`import { Context } from 'koa'
import jwt from 'jsonwebtoken'
i ...`,l:"interview-questions/scene-problem/refresh-token/index.html#_3-4、token-的时效判断",a:"_3-4、token-的时效判断"},"166.7":{t:"3-5、ctx.body 返回新的token",p:`  // 重新返回新的 token 和 refreshToken
  async refreshTokenCon(ctx:  ...`,l:"interview-questions/scene-problem/refresh-token/index.html#_3-5、ctx-body-返回新的token",a:"_3-5、ctx-body-返回新的token"},"166.8":{t:"4-1、request封装",p:`import axios, { type Method } from 'axios'
import NProgress fr ...`,l:"interview-questions/scene-problem/refresh-token/index.html#_4-1、request封装",a:"_4-1、request封装"},"166.9":{t:"4-2、handle401 封装重新请求 token 函数",p:`import instance from './index'
import { getRefreshToken, setTo ...`,l:"interview-questions/scene-problem/refresh-token/index.html#_4-2、handle401-封装重新请求-token-函数",a:"_4-2、handle401-封装重新请求-token-函数"},"166.10":{t:"4-3、实际效果图",p:`!
`,l:"interview-questions/scene-problem/refresh-token/index.html#_4-3、实际效果图",a:"_4-3、实际效果图"},"167.0":{t:"# 请求合并",p:`
面试中常考的一个代码题,也是业务开发中经常会遇到的问题

题目描述
短时间内需要请求多个同类型的资源
期望多个请求合并成一 ...`,l:"interview-questions/scene-problem/request-merge/index.html",a:"请求合并"},"167.1":{t:"要求",p:`实现一个 getArticle 方法,每个方法回调最终拿到的是自己需要的内容,且短时间内只发出了一次请求
getArticl ...`,l:"interview-questions/scene-problem/request-merge/index.html#要求",a:"要求"},"167.2":{t:"场景分析",p:`常见需要短时间请求多个同类型资源的场景就是资源懒加载的时候

如:一个文章列表的中,获取每个展示文章点赞/评论数是单独的一个 ...`,l:"interview-questions/scene-problem/request-merge/index.html#场景分析",a:"场景分析"},"167.3":{t:"考点",p:`
怎么确定这个短时间是多久?

其实这里就是考察到了event loop,这个短时间就是指同一个周期内,然后就变成了合并同一 ...`,l:"interview-questions/scene-problem/request-merge/index.html#考点",a:"考点"},"167.4":{t:"需要考虑的问题",p:`
如果多个请求参数是一样的那么,最终请求的参数只有一个

如 连续调用两次 getArticle(3)
那么 请求的quer ...`,l:"interview-questions/scene-problem/request-merge/index.html#需要考虑的问题",a:"需要考虑的问题"},"168.0":{t:"# requestAnimationFrame 和 requestIdleCallback",p:"",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html",a:"requestanimationframe-和-requestidlecallback"},"168.1":{t:"requestIdleCallback",p:"",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#requestidlecallback",a:"requestidlecallback"},"168.2":{t:"原理",p:"将在浏览器的空闲时段内调用的函数排队。这使开发者能够在主事件循环上执行后台和低优先级工作，而不会影响延迟关键事件，如动画和输 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#原理",a:"原理"},"168.3":{t:"使用方式",p:`&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;hea ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#使用方式",a:"使用方式"},"168.4":{t:"演示效果",p:`!演示结果
`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#演示效果",a:"演示效果"},"168.5":{t:"requestAnimationFrame",p:"",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#requestanimationframe",a:"requestanimationframe"},"168.6":{t:"原理",p:"告诉浏览器——你希望执行一个动画，并且要求浏览器在下次重绘之前调用指定的回调函数更新动画。该方法需要传入一个回调函数作为参数 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#原理",a:"原理"},"168.7":{t:"使用方式",p:`&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
&lt;hea ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#使用方式",a:"使用方式"},"168.8":{t:"演示效果",p:`!演示效果
`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#演示效果",a:"演示效果"},"168.9":{t:"requestAnimationFrame 和 requestIdleCallback 是是宏任务还是微任务",p:"",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#requestanimationframe-和-requestidlecallback-是是宏任务还是微任务",a:"requestanimationframe-和-requestidlecallback-是是宏任务还是微任务"},"168.10":{t:"一、思考",p:"要搞清楚requestAnimationFrame和requestIdleCallback是宏任务还是微任务就必须要搞清楚下 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#一、思考",a:"一、思考"},"168.11":{t:"二、任务的执行时机",p:"在浏览器的Event Loop中是有多个任务队列的，每个任务队列的执行时机是不一样的，下面直接上干货，说说浏览器执行任务的顺 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#二、任务的执行时机",a:"二、任务的执行时机"},"168.12":{t:"三、代码验证",p:"我们可以写一些代码到Chrome浏览器中验证一下，看看requestAnimationFrame和requestIdleCa ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#三、代码验证",a:"三、代码验证"},"168.13":{t:"四、总结",p:`
requestAnimationFrame和requestIdleCallback是和宏任务性质一样的任务，只是他们的执行 ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#四、总结",a:"四、总结"},"168.14":{t:"requestAnimationFrame 和 setTimeout 区别",p:"",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#requestanimationframe-和-settimeout-区别",a:"requestanimationframe-和-settimeout-区别"},"168.15":{t:"前言",p:"对于现在技术社区的现状的，我分析用户画像 觉得大部分的用户更多的是喜欢短频快的节奏文章，所以故尝试用最短时间挖掘简单的面试题 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#前言",a:"前言"},"168.16":{t:"背景",p:"相信大部分的开发者都使用过 setTimeout 这个 API, 如果没有使用过可以，使用跳转地址setTimeout 但是 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#背景",a:"背景"},"168.17":{t:"requestAnimationFrame",p:`顾明思议，Request，Animation，Frame, 在动画帧请求做件事情，具体可以看科普文章

window.req ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#requestanimationframe",a:"requestanimationframe"},"168.18":{t:"语法",p:`window.requestAnimationFrame(callback);

`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#语法",a:"语法"},"168.19":{t:"用法",p:`一般用在操作动画帧上，在物体需要在一帧渲染之前执行某个动画。一般是更好的优化动画上
const element = docu ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#用法",a:"用法"},"168.20":{t:"返回值",p:`你没看错 requestAnimationFrame 是有返回值的。
一个 long 整数，请求 ID ，是回调列表中唯一的 ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#返回值",a:"返回值"},"168.21":{t:"setTimeout",p:`下面介绍的 setTimeout 相信大部分的开发者都使用过这个API吧，而且可以说相当熟悉
`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#settimeout",a:"settimeout"},"168.22":{t:"语法",p:"var timeoutID = scope.setTimeout(function[ , delay, arg1, arg2 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#语法",a:"语法"},"168.23":{t:"用法",p:"用于延迟执行某个动作，或者可以循环调用自身，实现 setInterval 的效果,但注意需要释放 setTimeout 返回 ...",l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#用法",a:"用法"},"168.24":{t:"返回值",p:`返回值timeoutID是一个正整数，表示定时器的编号。这个值可以传递给clearTimeout()来取消该定时器。
这里有 ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#返回值",a:"返回值"},"168.25":{t:"两者对比",p:`下面我们总结一下他们的差异




requestAnimationFrame
setTimeout




语法
wind ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#两者对比",a:"两者对比"},"168.26":{t:"setTimeout 最小延迟时间",p:`console.time('ok')
setTimeout(() =&gt; {console.timeEnd('ok')} ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#settimeout-最小延迟时间",a:"settimeout-最小延迟时间"},"168.27":{t:"小结",p:`这篇文章到这里就结束了，水平有限难免有纰漏，欢迎纠错。最后希望帮忙点点赞，这对我创作是无比的肯定和动力。希望可以帮到你
`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#小结",a:"小结"},"168.28":{t:"requestAnimationFrame 和 requestIdleCallback 和微任务 宏任务的执行时机总结",p:`
微任务
宏任务
requestAnimationFrame 和宏任务会有几率先后执行
requestIdleCallbac ...`,l:"interview-questions/scene-problem/requestAnimationFrame-requestIdleCallback/index.html#requestanimationframe-和-requestidlecallback-和微任务-宏任务的执行时机总结",a:"requestanimationframe-和-requestidlecallback-和微任务-宏任务的执行时机总结"},"169.0":{t:"# 前端水印功能",p:"",l:"interview-questions/scene-problem/watermark/index.html",a:"前端水印功能"},"169.1":{t:"实现水印功能",p:`几种实现方案
`,l:"interview-questions/scene-problem/watermark/index.html#实现水印功能",a:"实现水印功能"},"169.2":{t:"基于原图生成水印图片（后端）",p:"这种方案就是将 原图片 添加水印之后生成了 新图片，后续在前端页面进行展示是后端接口不返回原图片，而是返回带有水印的图片即可 ...",l:"interview-questions/scene-problem/watermark/index.html#基于原图生成水印图片-后端",a:"基于原图生成水印图片-后端"},"169.3":{t:"基于 DOM 实现水印效果（前端）",p:"自定义指令钩子非常多，但实际上能使用到的不多，比如最常用的就是 mounted、updated，在这我们只需要通过 moun ...",l:"interview-questions/scene-problem/watermark/index.html#基于-dom-实现水印效果-前端",a:"基于-dom-实现水印效果-前端"},"169.4":{t:"基于 Canvas 实现水印效果（前端）",p:"基于 Canvas 实现方式的优点就在于能够动态的设置水印内容，相比于上一种基于固定背景图片的方式更灵活，这种方式也是 语雀 ...",l:"interview-questions/scene-problem/watermark/index.html#基于-canvas-实现水印效果-前端",a:"基于-canvas-实现水印效果-前端"},"170.0":{t:"# 微信小程序实现一些优惠券/卡券",p:`1.实现效果
!在这里插入图片描述
2.实现原理
`,l:"interview-questions/scene-problem/wx-coupon/index.html",a:"微信小程序实现一些优惠券-卡券"},"170.1":{t:"2.1 实现内凹圆角",p:`
假设我们要实现这样的一个效果，两侧透明内圆角+外侧投影，有几种实现方式呢？

!在这里插入图片描述
`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-1-实现内凹圆角",a:"_2-1-实现内凹圆角"},"170.2":{t:"2.1.1 方法一：半圆伪元素（投影不准确）",p:`
可将这个想象成一个正常的矩形，左右两侧分别有个小半圆

!在这里插入图片描述

将半圆的颜色设置为与背景色一致

!在这里 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-1-1-方法一-半圆伪元素-投影不准确",a:"_2-1-1-方法一-半圆伪元素-投影不准确"},"170.3":{t:"局限性",p:`
1.当页面背景是图片或者非纯色的时候，无法正确的显示
2.无法正确的显示投影

`,l:"interview-questions/scene-problem/wx-coupon/index.html#局限性",a:"局限性"},"170.4":{t:"2.1.2 方法二：radial-gradient渐变",p:`
radial-gradient：
radial-gradient() CSS 函数创建一个图像，该图像由从原点辐射的两种或 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-1-2-方法二-radial-gradient渐变",a:"_2-1-2-方法二-radial-gradient渐变"},"170.5":{t:"eg",p:`
圆形，起始点位置为左上角即left center（不写则为center），从橘色开始，变成粉色，最后变成天空蓝，不写百分比 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#eg",a:"eg"},"170.6":{t:"实现两侧内圆角",p:`
圆形，起始点位于left，center，定义一个透明色占据20rpx，剩下颜色为20rpx到100%的纯色

backgr ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#实现两侧内圆角",a:"实现两侧内圆角"},"170.7":{t:"局限性",p:`
1.当优惠券背景是渐变色的时候，处理起来不方便

`,l:"interview-questions/scene-problem/wx-coupon/index.html#局限性",a:"局限性"},"170.8":{t:"2.1.3 方法三： mask遮罩",p:`
mask：
CSS 属性 mask 允许使用者通过遮罩或者裁切特定区域的图片的方式来隐藏一个元素的部分或者全部可见区域。可 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-1-3-方法三-mask遮罩",a:"_2-1-3-方法三-mask遮罩"},"170.9":{t:"综上所述，使用mask遮罩实现内凹圆角无疑是最佳方法",p:"",l:"interview-questions/scene-problem/wx-coupon/index.html#综上所述-使用mask遮罩实现内凹圆角无疑是最佳方法",a:"综上所述-使用mask遮罩实现内凹圆角无疑是最佳方法"},"170.10":{t:"2.2 实现矩形四边1/4的内圆角",p:`
假设我们要实现这样的一个效果，矩形四边分别有1/4的圆角，有几种实现方式呢？

!在这里插入图片描述

可以把这个想象成四 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-2-实现矩形四边1-4的内圆角",a:"_2-2-实现矩形四边1-4的内圆角"},"170.11":{t:"2.2.1 radial-gradient渐变",p:`
先实现一个透明的的1/4内圆角

background: radial-gradient(circle at 0 0, t ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-2-1-radial-gradient渐变",a:"_2-2-1-radial-gradient渐变"},"170.12":{t:"2.2.2 mask遮罩",p:`
其实，mask遮罩的内容与radial-gradient渐变的内容是一致的，我们可以按照2.2.1的内容实现两种遮罩
遮罩 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-2-2-mask遮罩",a:"_2-2-2-mask遮罩"},"170.13":{t:"2.3 实现一个内凹圆角边框",p:`
假设我们要实现这样的一个效果，内凹圆角边框，有几种实现方式呢？

!在这里插入图片描述
`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-3-实现一个内凹圆角边框",a:"_2-3-实现一个内凹圆角边框"},"170.14":{t:"2.3.1 mask遮罩+多重drop-shadow",p:`

参考 XboxYan-CSS filter生成不规则边框这篇文章，利用多重投影drop-shadow


因为mask会 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-3-1-mask遮罩-多重drop-shadow",a:"_2-3-1-mask遮罩-多重drop-shadow"},"170.15":{t:"2.3.1 mask遮罩+伪元素+border",p:`
设置border+mask遮罩

  -webkit-mask: radial-gradient(circle at 20 ...`,l:"interview-questions/scene-problem/wx-coupon/index.html#_2-3-1-mask遮罩-伪元素-border",a:"_2-3-1-mask遮罩-伪元素-border"},"171.0":{t:"# 2022高频前端面试题——CSS篇",p:`1. px 和 em 的区别
📢 参考回答：
px全称pixel像素，是相对于屏幕分辨率而言的，它是一个绝对单位，但同时具 ...`,l:"interview-questions/topic-outline/2022-css/index.html",a:"_2022高频前端面试题——css篇"},"172.0":{t:"# 2022高频前端面试题——HTML篇",p:`1. 什么是 DOCTYPE， 有何作用？
Doctype是HTML5的文档声明，通过它可以告诉浏览器，使用哪一个HTML版 ...`,l:"interview-questions/topic-outline/2022-html/index.html",a:"_2022高频前端面试题——html篇"},"173.0":{t:"# 2022高频前端面试题合集之JavaScript篇",p:"",l:"interview-questions/topic-outline/2022-js-top/index.html",a:"_2022高频前端面试题合集之javascript篇"},"173.1":{t:"1\\. 根据下面 _ES6_ 构造函数的书写方式，要求写出 _ES5_ 的",p:`class Example { 
  constructor(name) { 
    this.name = name;
 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_1-根据下面-es6-构造函数的书写方式-要求写出-es5-的",a:"_1-根据下面-es6-构造函数的书写方式-要求写出-es5-的"},"173.2":{t:"2\\. 数组去重有哪些方法？（美团 _19_ 年）",p:`
参考答案：
// 数字或字符串数组去重，效率高
function unique(arr) {
      var resu ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_2-数组去重有哪些方法-美团-19-年",a:"_2-数组去重有哪些方法-美团-19-年"},"173.3":{t:"3\\. 描述下列代码的执行结果",p:`foo(typeof a);
function foo(p) {
    console.log(this);
    co ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_3-描述下列代码的执行结果",a:"_3-描述下列代码的执行结果"},"173.4":{t:"4\\. 描述下列代码的执行结果",p:`class Foo {
    constructor(arr) { 
        this.arr = arr; 
  ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_4-描述下列代码的执行结果",a:"_4-描述下列代码的执行结果"},"173.5":{t:"5\\. 描述下列代码的执行结果",p:"01 function f(count) {\n02    console.log(`foo${count}`);\n03    ...",l:"interview-questions/topic-outline/2022-js-top/index.html#_5-描述下列代码的执行结果",a:"_5-描述下列代码的执行结果"},"173.6":{t:"6\\. 描述下列代码的执行结果",p:`var a = 2;
var b = 5;
console.log(a === 2 || 1 &amp;&amp; b == ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_6-描述下列代码的执行结果",a:"_6-描述下列代码的执行结果"},"173.7":{t:"7\\. 描述下列代码的执行结果",p:`export class ButtonWrapper {
    constructor(domBtnEl, hash) { ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_7-描述下列代码的执行结果",a:"_7-描述下列代码的执行结果"},"173.8":{t:"8\\. 箭头函数有哪些特点",p:`
参考答案：


更简洁的语法，例如

只有一个形参就不需要用括号括起来
如果函数体只有一行，就不需要放到一个块中
如果 r ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_8-箭头函数有哪些特点",a:"_8-箭头函数有哪些特点"},"173.9":{t:"9\\. 说一说类的继承",p:`
参考答案：
继承是面向对象编程中的三大特性之一。
JavaScript 中的继承经过不断的发展，从最初的对象冒充慢慢发展到 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_9-说一说类的继承",a:"_9-说一说类的继承"},"173.10":{t:"10. _new_ 操作符都做了哪些事？",p:`
参考答案：
new 运算符创建一个用户定义的对象类型的实例或具有构造函数的内置对象的实例。
new 关键字会进行如下的操作 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_10-new-操作符都做了哪些事",a:"_10-new-操作符都做了哪些事"},"173.11":{t:"11. _call、apply、bind_ 的区别 ？",p:`
参考答案：
call 和 apply 的功能相同，区别在于传参的方式不一样:

fn.call(obj, arg1, ar ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_11-call、apply、bind-的区别",a:"_11-call、apply、bind-的区别"},"173.12":{t:"12\\. 事件循环机制（宏任务、微任务）",p:`
参考答案：
在 js 中任务会分为同步任务和异步任务。
如果是同步任务，则会在主线程（也就是 js 引擎线程）上进行执行， ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_12-事件循环机制-宏任务、微任务",a:"_12-事件循环机制-宏任务、微任务"},"173.13":{t:"13\\. 你了解 _node_ 中的事件循环机制吗？_node11_ 版本以后有什么改变",p:`
参考答案：
Node.js 在主线程里维护了一个事件队列，当接到请求后，就将该请求作为一个事件放入这个队列中，然后继续接收 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_13-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变",a:"_13-你了解-node-中的事件循环机制吗-node11-版本以后有什么改变"},"173.14":{t:"14\\. 什么是函数柯里化？",p:`
参考答案：
柯里化（currying）又称部分求值。一个柯里化的函数首先会接受一些参数，接受了这些参数之后，该函数并不会立 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_14-什么是函数柯里化",a:"_14-什么是函数柯里化"},"173.15":{t:"15. _promise.all_ 方法的使用场景？数组中必须每一项都是 _promise_ 对象吗？不是 _promise_ 对象会如何处理 ？",p:`
参考答案：
*promise.all(promiseArray) * 方法是 promise 对象上的静态方法，该方法的作 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_15-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理",a:"_15-promise-all-方法的使用场景-数组中必须每一项都是-promise-对象吗-不是-promise-对象会如何处理"},"173.16":{t:"16. _this_ 的指向哪几种 ？",p:`
参考答案：
总结起来，this 的指向规律有如下几条：

在函数体中，非显式或隐式地简单调用函数时，在严格模式下，函数内的 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_16-this-的指向哪几种",a:"_16-this-的指向哪几种"},"173.17":{t:"17. _JS_ 中继承实现的几种方式",p:`
参考答案：
JS 的继承随着语言的发展，从最早的对象冒充到现在的圣杯模式，涌现出了很多不同的继承方式。每一种新的继承方式都 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_17-js-中继承实现的几种方式",a:"_17-js-中继承实现的几种方式"},"173.18":{t:"18\\. 什么是事件监听",p:`
参考答案：
首先需要区别清楚事件监听和事件监听器。
在绑定事件的时候，我们需要对应的书写一个事件处理程序，来应对事件发生时 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_18-什么是事件监听",a:"_18-什么是事件监听"},"173.19":{t:"19\\. 什么是 _js_ 的闭包？有什么作用？",p:`
参考答案：
一个函数和对其周围状态（lexical environment，词法环境）的引用捆绑在一起（或者说函数被引用包 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_19-什么是-js-的闭包-有什么作用",a:"_19-什么是-js-的闭包-有什么作用"},"173.20":{t:"20\\. 事件委托以及冒泡原理",p:`
参考答案：
事件委托，又被称之为事件代理。在 JavaScript 中，添加到页面上的事件处理程序数量将直接关系到页面整体 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_20-事件委托以及冒泡原理",a:"_20-事件委托以及冒泡原理"},"173.21":{t:"21. _let const var_ 的区别？什么是块级作用域？如何用？",p:`
参考答案：

var 定义的变量，没有块的概念，可以跨块访问, 不能跨函数访问，有变量提升。
let 定义的变量，只能在块 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_21-let-const-var-的区别-什么是块级作用域-如何用",a:"_21-let-const-var-的区别-什么是块级作用域-如何用"},"173.22":{t:"22. _ES5_ 的方法实现块级作用域（立即执行函数） _ES6_ 呢？",p:`
参考答案：
ES6 原生支持块级作用域。块作用域由 { } 包括，if 语句和 for 语句里面的 { } 也属于块作用域 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_22-es5-的方法实现块级作用域-立即执行函数-es6-呢",a:"_22-es5-的方法实现块级作用域-立即执行函数-es6-呢"},"173.23":{t:"23. _ES6_ 箭头函数的特性",p:`
参考答案：


更简洁的语法，例如

只有一个形参就不需要用括号括起来
如果函数体只有一行，就不需要放到一个块中
如果 r ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_23-es6-箭头函数的特性",a:"_23-es6-箭头函数的特性"},"173.24":{t:"24\\. 箭头函数与普通函数的区别 ？",p:`
参考答案：


外形不同。箭头函数使用箭头定义，普通函数中没有


普通函数可以有匿名函数，也可以有具体名函数，但是箭头函 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_24-箭头函数与普通函数的区别",a:"_24-箭头函数与普通函数的区别"},"173.25":{t:"25. _JS_ 的基本数据类型有哪些？基本数据类型和引用数据类型的区别",p:`
参考答案：
在 JavaScript 中，数据类型整体上来讲可以分为两大类：基本类型和引用数据类型
基本数据类型，一共有  ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_25-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别",a:"_25-js-的基本数据类型有哪些-基本数据类型和引用数据类型的区别"},"173.26":{t:"26. _NaN_ 是什么的缩写",p:`
参考答案：
NaN 的全称为 Not a Number，表示非数，或者说不是一个数。虽然 NaN 表示非数，但是它却属于  ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_26-nan-是什么的缩写",a:"_26-nan-是什么的缩写"},"173.27":{t:"27. _JS_ 的作用域类型",p:`
参考答案：
在 JavaScript 里面，作用域一共有 4 种：全局作用域，局部作用域、函数作用域以及 eval 作用域 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_27-js-的作用域类型",a:"_27-js-的作用域类型"},"173.28":{t:"28. _undefined==null_ 返回的结果是什么？_undefined_ 与 _null_ 的区别在哪？",p:`
参考答案：
返回 true。
这两个值都表示“无”的意思。
通常情况下， 当我们试图访问某个不存在的或者没有赋值的变量时， ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_28-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪",a:"_28-undefined-null-返回的结果是什么-undefined-与-null-的区别在哪"},"173.29":{t:"29\\. 写一个函数判断变量类型",p:`
参考答案：
function getType(data){
    let type = typeof data;
    ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_29-写一个函数判断变量类型",a:"_29-写一个函数判断变量类型"},"173.30":{t:"30. _js_ 的异步处理函数",p:`
参考答案：
在最早期的时候，JavaScript 中要实现异步操作，使用的就是 Callback 回调函数。
但是回调函数 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_30-js-的异步处理函数",a:"_30-js-的异步处理函数"},"173.31":{t:"31. _defer_ 与 _async_ 的区别",p:`
参考答案：
按照惯例，所有 script 元素都应该放在页面的 head 元素中。这种做法的目的就是把所有外部文件（CSS ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_31-defer-与-async-的区别",a:"_31-defer-与-async-的区别"},"173.32":{t:"32\\. 浏览器事件循环和任务队列",p:`
参考答案：
JavaScript 的异步机制由事件循环和任务队列构成。
JavaScript 本身是单线程语言，所谓异步依 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_32-浏览器事件循环和任务队列",a:"_32-浏览器事件循环和任务队列"},"173.33":{t:"33\\. 原型与原型链 （美团 19年）",p:`
参考答案：

每个对象都有一个 __proto__ 属性，该属性指向自己的原型对象
每个构造函数都有一个 prototyp ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_33-原型与原型链-美团-19年",a:"_33-原型与原型链-美团-19年"},"173.34":{t:"34\\. 作用域与作用域链 （美团 19年）",p:`
参考答案：
作用域是在运行时代码中的某些特定部分中变量，函数和对象的可访问性。换句话说，作用域决定了代码区块中变量和其他资 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_34-作用域与作用域链-美团-19年",a:"_34-作用域与作用域链-美团-19年"},"173.35":{t:"35\\. 闭包及应用场景以及闭包缺点 （美团 19年）",p:`
参考答案：
闭包的应用场景：

匿名自执行函数
结果缓存
封装
实现类和继承

闭包的缺点：
因为闭包的作用域链会引用包含 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_35-闭包及应用场景以及闭包缺点-美团-19年",a:"_35-闭包及应用场景以及闭包缺点-美团-19年"},"173.36":{t:"36\\. 继承方式 （美团 19年）",p:`
参考答案：
参阅前面第 9 题以及第 18 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_36-继承方式-美团-19年",a:"_36-继承方式-美团-19年"},"173.37":{t:"37\\. 原始值与引用值 （美团 19年）",p:`
参考答案：
原始值是表示 JavaScript 中可用的数据或信息的最底层形式或最简单形式。简单类型的值被称为原始值，是因 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_37-原始值与引用值-美团-19年",a:"_37-原始值与引用值-美团-19年"},"173.38":{t:"38\\. 描述下列代码的执行结果",p:`const first = () =&gt; (new Promise((resolve, reject) =&gt; {
 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_38-描述下列代码的执行结果",a:"_38-描述下列代码的执行结果"},"173.39":{t:"39\\. 如何判断数组或对象（美团 19年）",p:`
参考答案：

通过 instanceof 进行判断

var arr = [1,2,3,1];
console.log(a ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_39-如何判断数组或对象-美团-19年",a:"_39-如何判断数组或对象-美团-19年"},"173.40":{t:"40\\. 对象深拷贝与浅拷贝，单独问了 _Object.assign_（美团 19年）",p:`
参考答案：


浅拷贝：只是拷贝了基本类型的数据，而引用类型数据，复制后也是会发生引用，我们把这种拷贝叫做浅拷贝（浅复制） ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_40-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19年",a:"_40-对象深拷贝与浅拷贝-单独问了-object-assign-美团-19年"},"173.41":{t:"42\\. 说说 _instanceof_ 原理，并回答下面的题目（美团 19年）",p:`function A(){}
function B(){}
A.prototype = new B(); 
let a =  ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_42-说说-instanceof-原理-并回答下面的题目-美团-19年",a:"_42-说说-instanceof-原理-并回答下面的题目-美团-19年"},"173.42":{t:"43\\. 内存泄漏（美团 19 年）",p:`
参考答案：
内存泄漏（Memory Leak）是指程序中己动态分配的堆内存由于某种原因程序未释放或无法释放，造成系统内存的 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_43-内存泄漏-美团-19-年",a:"_43-内存泄漏-美团-19-年"},"173.43":{t:"44. _ES6_ 新增哪些东西？让你自己说（美团 19 年）",p:`
参考答案：
ES6 新增内容众多，这里列举出一些关键的以及平时常用的新增内容：

箭头函数
字符串模板
支持模块化（imp ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_44-es6-新增哪些东西-让你自己说-美团-19-年",a:"_44-es6-新增哪些东西-让你自己说-美团-19-年"},"173.44":{t:"45. _weakmap、weakset_（美团 _19_ 年）",p:`
参考答案：
WeakSet 对象是一些对象值的集合, 并且其中的每个对象值都只能出现一次。在 WeakSet 的集合中是唯 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_45-weakmap、weakset-美团-19-年",a:"_45-weakmap、weakset-美团-19-年"},"173.45":{t:"46\\. 为什么 _ES6_ 会新增 _Promise_（美团 19年）",p:`
参考答案：
在 ES6 以前，解决异步的方法是回调函数。但是回调函数有一个最大的问题就是回调地狱（callback hel ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_46-为什么-es6-会新增-promise-美团-19年",a:"_46-为什么-es6-会新增-promise-美团-19年"},"173.46":{t:"47. _ES5_ 实现继承？（虾皮）",p:`
参考答案：

借用构造函数实现继承

function Parent1(){
    this.name = &quot; ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_47-es5-实现继承-虾皮",a:"_47-es5-实现继承-虾皮"},"173.47":{t:"48\\. 科里化？（搜狗）",p:`
参考答案：
柯里化，英语全称 Currying，是把接受多个参数的函数变换成接受一个单一参数（最初函数的第一个参数）的函数 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_48-科里化-搜狗",a:"_48-科里化-搜狗"},"173.48":{t:"49\\. 防抖和节流？（虾皮）",p:`
参考答案：
我们在平时开发的时候，会有很多场景会频繁触发事件，比如说搜索框实时发请求，onmousemove、resize ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_49-防抖和节流-虾皮",a:"_49-防抖和节流-虾皮"},"173.49":{t:"50\\. 闭包？（好未来---探讨了 _40_ 分钟）",p:`
参考答案：
请参阅前面第 20 题以及第 36 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_50-闭包-好未来-探讨了-40-分钟",a:"_50-闭包-好未来-探讨了-40-分钟"},"173.50":{t:"51\\. 原型和原型链？（字节）",p:`
参考答案：
请参阅前面第 34 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_51-原型和原型链-字节",a:"_51-原型和原型链-字节"},"173.51":{t:"52\\. 排序算法---（时间复杂度、空间复杂度）",p:`
参考答案：
算法（Algorithm）是指用来操作数据、解决程序问题的一组方法。对于同一个问题，使用不同的算法，也许最终得 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_52-排序算法-时间复杂度、空间复杂度",a:"_52-排序算法-时间复杂度、空间复杂度"},"173.52":{t:"53\\. 浏览器事件循环和 _node_ 事件循环（搜狗）",p:`
参考答案：

浏览器中的 Event Loop

事件循环中的异步队列有两种：macro（宏任务）队列和 micro（微任 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_53-浏览器事件循环和-node-事件循环-搜狗",a:"_53-浏览器事件循环和-node-事件循环-搜狗"},"173.53":{t:"54\\. 闭包的好处",p:`
参考答案：
请参阅前面第 20 题以及第 36 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_54-闭包的好处",a:"_54-闭包的好处"},"173.54":{t:"55. _let、const、var_ 的区别",p:`
参考答案：

var 定义的变量，没有块的概念，可以跨块访问, 不能跨函数访问，有变量提升。
let 定义的变量，只能在块 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_55-let、const、var-的区别",a:"_55-let、const、var-的区别"},"173.55":{t:"56\\. 闭包、作用域（可以扩充到作用域链）",p:`
参考答案：
什么是作业域?
ES5 中只存在两种作用域：全局作用域和函数作用域。在 JavaScript 中，我们将作用域 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_56-闭包、作用域-可以扩充到作用域链",a:"_56-闭包、作用域-可以扩充到作用域链"},"173.56":{t:"57. _Promise_",p:`
参考答案：
Promise 是异步编程的一种解决方案，比传统的解决方案——回调函数和事件——更合理且更强大。它最早由社区提 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_57-promise",a:"_57-promise"},"173.57":{t:"58\\. 实现一个函数,对一个url进行请求,失败就再次请求,超过最大次数就走失败回调,任何一次成功都走成功回调",p:`
参考答案：
示例代码如下：
/**
    @params url: 请求接口地址;
    @params body:  ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_58-实现一个函数-对一个url进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调",a:"_58-实现一个函数-对一个url进行请求-失败就再次请求-超过最大次数就走失败回调-任何一次成功都走成功回调"},"173.58":{t:"59\\. 冒泡排序",p:`
参考答案：
冒泡排序的核心思想是：

比较相邻的两个元素，如果前一个比后一个大或者小（取决于排序的顺序是小到大还是大到小） ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_59-冒泡排序",a:"_59-冒泡排序"},"173.59":{t:"60\\. 数组降维",p:`
参考答案：
数组降维就是将一个嵌套多层的数组进行降维操作，也就是对数组进行扁平化。在 ES5 时代我们需要自己手写方法或者 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_60-数组降维",a:"_60-数组降维"},"173.60":{t:"61. _call apply bind_",p:`
参考答案：
请参阅前面第 11 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_61-call-apply-bind",a:"_61-call-apply-bind"},"173.61":{t:"62\\. promise 代码题",p:`new Promise((resolve, reject) =&gt; {
    reject(1);
    conso ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_62-promise-代码题",a:"_62-promise-代码题"},"173.62":{t:"63. _proxy_ 是实现代理，可以改变 _js_ 底层的实现方式, 然后说了一下和 _Object.defineProperty_ 的区别",p:`
参考答案：
两者的区别总结如下：

代理原理：Object.defineProperty的原理是通过将数据属性转变为存取器 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_63-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别",a:"_63-proxy-是实现代理-可以改变-js-底层的实现方式-然后说了一下和-object-defineproperty-的区别"},"173.63":{t:"64\\. 使用 _ES5_ 与 _ES6_ 分别实现继承",p:`
参考答案：
如果是使用 ES5 来实现继承，那么现在的最优解是使用圣杯模式。圣杯模式的核心思想就是不通过调用父类构造函数来 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_64-使用-es5-与-es6-分别实现继承",a:"_64-使用-es5-与-es6-分别实现继承"},"173.64":{t:"65\\. 深拷贝",p:`
参考答案：
有深拷贝就有浅拷贝。
浅拷贝就是只拷贝对象的引用，而不深层次的拷贝对象的值，多个对象指向堆内存中的同一对象，任 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_65-深拷贝",a:"_65-深拷贝"},"173.65":{t:"66. _async_ 与 _await_ 的作用",p:`
参考答案：
async 是一个修饰符，async 定义的函数会默认的返回一个 Promise 对象 resolve 的值， ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_66-async-与-await-的作用",a:"_66-async-与-await-的作用"},"173.66":{t:"67\\. 数据的基础类型（原始类型）有哪些",p:`
参考答案：
JavaScript 中的基础数据类型，一共有 6 种：
string，symbol，number，boole ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_67-数据的基础类型-原始类型-有哪些",a:"_67-数据的基础类型-原始类型-有哪些"},"173.67":{t:"68. _typeof null_ 返回结果",p:`
参考答案：
返回 object


解析：至于为什么会返回 object，这实际上是来源于 JavaScript 从第一个 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_68-typeof-null-返回结果",a:"_68-typeof-null-返回结果"},"173.68":{t:"69\\. 对变量进行类型判断的方式有哪些",p:`
参考答案：
常用的方法有 4 种：

typeof

typeof 是一个操作符，其右侧跟一个一元表达式，并返回这个表达式 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_69-对变量进行类型判断的方式有哪些",a:"_69-对变量进行类型判断的方式有哪些"},"173.69":{t:"70. _typeof_ 与 _instanceof_ 的区别？ _instanceof_ 是如何实现？",p:`
参考答案：

typeof

typeof 是一个操作符，其右侧跟一个一元表达式，并返回这个表达式的数据类型。返回的结果用 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_70-typeof-与-instanceof-的区别-instanceof-是如何实现",a:"_70-typeof-与-instanceof-的区别-instanceof-是如何实现"},"173.70":{t:"71\\. 引用类型有哪些，有什么特点",p:`
参考答案：
JS 中七种内置类型（null，undefined，boolean，number，string，symbol， ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_71-引用类型有哪些-有什么特点",a:"_71-引用类型有哪些-有什么特点"},"173.71":{t:"72\\. 如何得到一个变量的类型---指函数封装实现",p:`
参考答案：
请参阅前面第 30 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_72-如何得到一个变量的类型-指函数封装实现",a:"_72-如何得到一个变量的类型-指函数封装实现"},"173.72":{t:"73\\. 什么是作用域、闭包",p:`
参考答案：
请参阅前面第 56 题。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_73-什么是作用域、闭包",a:"_73-什么是作用域、闭包"},"173.73":{t:"74\\. 闭包的缺点是什么？闭包的应用场景有哪些？怎么销毁闭包？",p:`
参考答案：
闭包是指有权访问另外一个函数作用域中的变量的函数。
因为闭包引用着另一个函数的变量，导致另一个函数已经不使用了 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_74-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包",a:"_74-闭包的缺点是什么-闭包的应用场景有哪些-怎么销毁闭包"},"173.74":{t:"75. _JS_的垃圾回收站机制",p:`
参考答案：
JS 具有自动垃圾回收机制。垃圾收集器会按照固定的时间间隔周期性的执行。
JS 常见的垃圾回收方式：标记清除、 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_75-js-的垃圾回收站机制",a:"_75-js-的垃圾回收站机制"},"173.75":{t:"76\\. 什么是作用域链、原型链",p:`
参考答案：
什么是作用域链?
当访问一个变量时，编译器在执行这段代码时，会首先从当前的作用域中查找是否有这个标识符，如果没 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_76-什么是作用域链、原型链",a:"_76-什么是作用域链、原型链"},"173.76":{t:"77. _new_ 一个构造函数发生了什么",p:`
参考答案：
new 运算符创建一个用户定义的对象类型的实例或具有构造函数的内置对象的实例。
new 关键字会进行如下的操作 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_77-new-一个构造函数发生了什么",a:"_77-new-一个构造函数发生了什么"},"173.77":{t:"78\\. 对一个构造函数实例化后. 它的原型链指向什么",p:`
参考答案：
指向该构造函数实例化出来对象的原型对象。
对于构造函数来讲，可以通过 prototype 访问到该对象。
对于 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_78-对一个构造函数实例化后-它的原型链指向什么",a:"_78-对一个构造函数实例化后-它的原型链指向什么"},"173.78":{t:"79\\. 什么是变量提升",p:`
参考答案：
当 JavaScript 编译所有代码时，所有使用 var 的变量声明都被提升到它们的函数/局部作用域的顶部( ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_79-什么是变量提升",a:"_79-什么是变量提升"},"173.79":{t:"80\\. == 和 === 的区别是什么",p:`
参考答案：
简单来说： == 代表相同， === 代表严格相同（数据类型和值都相等）。
当进行双等号比较时候，先检查两个操 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_80-和-的区别是什么",a:"_80-和-的区别是什么"},"173.80":{t:"81. _Object.is_ 方法比较的是什么",p:`
参考答案：
Object.is 方法是 ES6 新增的用来比较两个值是否严格相等的方法，与 === (严格相等)的行为基本 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_81-object-is-方法比较的是什么",a:"_81-object-is-方法比较的是什么"},"173.81":{t:"82\\. 基础数据类型和引用数据类型，哪个是保存在栈内存中？哪个是在堆内存中？",p:`
参考答案：
在 ECMAScript 规范中，共定义了 7 种数据类型，分为 基本类型 和 引用类型 两大类，如下所示：
 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_82-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中",a:"_82-基础数据类型和引用数据类型-哪个是保存在栈内存中-哪个是在堆内存中"},"173.82":{t:"83\\. 箭头函数解决了什么问题？",p:`
参考答案：
箭头函数主要解决了 this 的指向问题。


解析：
在 ES5 时代，一旦对象的方法里面又存在函数，则 t ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_83-箭头函数解决了什么问题",a:"_83-箭头函数解决了什么问题"},"173.83":{t:"84. _new_ 一个箭头函数后，它的 _this_ 指向什么？",p:`
参考答案：
我不知道这道题是出题人写错了还是故意为之。
箭头函数无法用来充当构造函数，所以是无法 new 一个箭头函数的。 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_84-new-一个箭头函数后-它的-this-指向什么",a:"_84-new-一个箭头函数后-它的-this-指向什么"},"173.84":{t:"85. _promise_ 的其他方法有用过吗？如 _all、race_。请说下这两者的区别",p:`
参考答案：
promise.all 方法参数是一个 promise 的数组,只有当所有的 promise 都完成并返回成功 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_85-promise-的其他方法有用过吗-如-all、race-。请说下这两者的区别",a:"_85-promise-的其他方法有用过吗-如-all、race-。请说下这两者的区别"},"173.85":{t:"86. _class_ 是如何实现的",p:`
参考答案：
class 是 ES6 新推出的关键字，它是一个语法糖，本质上就是基于这个原型实现的。只不过在以前 ES5 原 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_86-class-是如何实现的",a:"_86-class-是如何实现的"},"173.86":{t:"87. _let、const、var_ 的区别",p:`
参考答案：
请参阅前面第 22 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_87-let、const、var-的区别",a:"_87-let、const、var-的区别"},"173.87":{t:"88. _ES6_ 中模块化导入和导出与 _common.js_ 有什么区别",p:`
参考答案：
CommonJs模块输出的是值的拷贝，也就是说，一旦输出一个值，模块内部的变化不会影响到这个值.
// com ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_88-es6-中模块化导入和导出与-common-js-有什么区别",a:"_88-es6-中模块化导入和导出与-common-js-有什么区别"},"173.88":{t:"89\\. 说一下普通函数和箭头函数的区别",p:`
参考答案：
请参阅前面第 8、25、83 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_89-说一下普通函数和箭头函数的区别",a:"_89-说一下普通函数和箭头函数的区别"},"173.89":{t:"90\\. 说一下 _promise_ 和 _async_ 和 _await_ 什么关系",p:`
参考答案：
await 表达式会造成异步函数停止执行并且等待_promise_的解决，当值被_resolved_，异步函数 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_90-说一下-promise-和-async-和-await-什么关系",a:"_90-说一下-promise-和-async-和-await-什么关系"},"173.90":{t:"91\\. 说一下你学习过的有关 _ES6_ 的知识点",p:`
参考答案：
这种题目是开放题，可以简单列举一下 ES6 的新增知识点。（ ES6 的新增知识点参阅前面第 44 题）
然后 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_91-说一下你学习过的有关-es6-的知识点",a:"_91-说一下你学习过的有关-es6-的知识点"},"173.91":{t:"92\\. 了解过 _js_ 中 _arguments_ 吗？接收的是实参还是形参？",p:`
参考答案：
JS 中的 arguments 是一个伪数组对象。这个伪数组对象将包含调用函数时传递的所有的实参。
与之相对的 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_92-了解过-js-中-arguments-吗-接收的是实参还是形参",a:"_92-了解过-js-中-arguments-吗-接收的是实参还是形参"},"173.92":{t:"93. _ES6_ 相比于 _ES5_ 有什么变化",p:`
参考答案：
ES6 相比 ES5 新增了很多新特性，这里可以自己简述几个。
具体的新增特性可以参阅前面第 44 题。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_93-es6-相比于-es5-有什么变化",a:"_93-es6-相比于-es5-有什么变化"},"173.93":{t:"94\\. 强制类型转换方法有哪些？",p:`
参考答案：
JavaScript 中的数据类型转换，主要有三种方式：

转换函数

js 提供了诸如 parseInt 和 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_94-强制类型转换方法有哪些",a:"_94-强制类型转换方法有哪些"},"173.94":{t:"95\\. 纯函数",p:`
参考答案：
一个函数，如果符合以下两个特点，那么它就可以称之为纯函数：

对于相同的输入，永远得到相同的输出
没有任何可观 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_95-纯函数",a:"_95-纯函数"},"173.95":{t:"96. _JS_ 模块化",p:`
参考答案：
模块化主要是用来抽离公共代码，隔离作用域，避免变量冲突等。
模块化的整个发展历史如下：
IIFE： 使用自执行 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_96-js-模块化",a:"_96-js-模块化"},"173.96":{t:"97\\. 看过 _jquery_ 源码吗？",p:`
参考答案：
开放题，但是需要注意的是，如果看过 jquery 源码，不要简单的回答一个“看过”就完了，应该继续乘胜追击，告 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_97-看过-jquery-源码吗",a:"_97-看过-jquery-源码吗"},"173.97":{t:"98\\. 说一下 _js_ 中的 _this_",p:`
参考答案：
请参阅前面第 17 题答案。

`,l:"interview-questions/topic-outline/2022-js-top/index.html#_98-说一下-js-中的-this",a:"_98-说一下-js-中的-this"},"173.98":{t:"99. _apply call bind_ 区别，手写",p:`
参考答案：
apply call bind 区别 ？
call 和 apply 的功能相同，区别在于传参的方式不一样:

 ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_99-apply-call-bind-区别-手写",a:"_99-apply-call-bind-区别-手写"},"173.99":{t:"100\\. 手写 _reduce flat_",p:`
参考答案：
reduce 实现：
Array.prototype.my_reduce = function (callba ...`,l:"interview-questions/topic-outline/2022-js-top/index.html#_100-手写-reduce-flat",a:"_100-手写-reduce-flat"},"174.0":{t:"# 常见的前端算法题",p:"",l:"interview-questions/topic-outline/algorithm/index.html",a:"常见的前端算法题"},"174.1":{t:"两数之和",p:"",l:"interview-questions/topic-outline/algorithm/index.html#两数之和",a:"两数之和"},"174.2":{t:"题目： 给定一个数组 nums 和一个目标值 target，在该数组中找出和为目标值的两个数",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-给定一个数组-nums-和一个目标值-target-在该数组中找出和为目标值的两个数",a:"题目-给定一个数组-nums-和一个目标值-target-在该数组中找出和为目标值的两个数"},"174.3":{t:"输入： nums: [8, 2, 6, 5, 4, 1, 3] ； target:7",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-nums-8-2-6-5-4-1-3-target-7",a:"输入-nums-8-2-6-5-4-1-3-target-7"},"174.4":{t:"输出： [2, 5]",p:`// 时间复杂度O(n)、 空间复杂度O(n)
function twoNumAdd(arr, target) {
  if ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-2-5",a:"输出-2-5"},"174.5":{t:"三数之和",p:"",l:"interview-questions/topic-outline/algorithm/index.html#三数之和",a:"三数之和"},"174.6":{t:"题目： 给定一个数组nums，判断 nums 中是否存在三个元素a，b，c，使得 a + b + c = target，找出所有满足条件且不重复的三元组合",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-给定一个数组nums-判断-nums-中是否存在三个元素a-b-c-使得-a-b-c-target-找出所有满足条件且不重复的三元组合",a:"题目-给定一个数组nums-判断-nums-中是否存在三个元素a-b-c-使得-a-b-c-target-找出所有满足条件且不重复的三元组合"},"174.7":{t:"输入： nums: [5, 2, 1, 1, 3, 4, 6] ；target:8",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-nums-5-2-1-1-3-4-6-target-8",a:"输入-nums-5-2-1-1-3-4-6-target-8"},"174.8":{t:"输出： [[1, 1, 6], [1, 2, 5], [1, 3, 4]]",p:"// 用`双端指针`的方式，将三数之和转化为两数之和\nfunction findThree(arr, target) {\n  ...",l:"interview-questions/topic-outline/algorithm/index.html#输出-1-1-6-1-2-5-1-3-4",a:"输出-1-1-6-1-2-5-1-3-4"},"174.9":{t:"版本号排序",p:"",l:"interview-questions/topic-outline/algorithm/index.html#版本号排序",a:"版本号排序"},"174.10":{t:"题目： 输入一组版本号，输出从大到小的排序",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-输入一组版本号-输出从大到小的排序",a:"题目-输入一组版本号-输出从大到小的排序"},"174.11":{t:"输入： ['2.1.0.1', '0.402.1', '10.2.1', '5.1.2', '1.0.4.5']",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-2-1-0-1-0-402-1-10-2-1-5-1-2-1-0-4-5",a:"输入-2-1-0-1-0-402-1-10-2-1-5-1-2-1-0-4-5"},"174.12":{t:"输出： ['10.2.1', '5.1.2', '2.1.0.1', '1.0.4.5', '0.402.1']",p:`function versionSort(arr) {
  return arr.sort((a, b) =&gt; {
  ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-10-2-1-5-1-2-2-1-0-1-1-0-4-5-0-402-1",a:"输出-10-2-1-5-1-2-2-1-0-1-1-0-4-5-0-402-1"},"174.13":{t:"第一个不重复的字符",p:"",l:"interview-questions/topic-outline/algorithm/index.html#第一个不重复的字符",a:"第一个不重复的字符"},"174.14":{t:"题目： 输入一个字符串，找到第一个不重复字符的下标",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-输入一个字符串-找到第一个不重复字符的下标",a:"题目-输入一个字符串-找到第一个不重复字符的下标"},"174.15":{t:"输入： 'abcabcde'",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-abcabcde",a:"输入-abcabcde"},"174.16":{t:"输出： 6",p:`// 时间复杂度O(n)、 空间复杂度O(n)
function findOneStr(str) {
  if (!str) ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-6",a:"输出-6"},"174.17":{t:"字符串所有排列组合",p:"",l:"interview-questions/topic-outline/algorithm/index.html#字符串所有排列组合",a:"字符串所有排列组合"},"174.18":{t:"题目： 输入一个字符串，打印出该字符串中，所有字符的排列组合",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-输入一个字符串-打印出该字符串中-所有字符的排列组合",a:"题目-输入一个字符串-打印出该字符串中-所有字符的排列组合"},"174.19":{t:"输入： 'abc'",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-abc",a:"输入-abc"},"174.20":{t:"输出： ['abc', 'acb', 'bca', 'bac', 'cab', 'cba']",p:`/**
 * 利用回溯算法，计算所有字符串的组合
 * @param {array} list - 字符串列表
 * @pa ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-abc-acb-bca-bac-cab-cba",a:"输出-abc-acb-bca-bac-cab-cba"},"174.21":{t:"冒泡排序",p:`时间复杂度为O(n²)，稳定排序算法
function bubbleSort(arr) {
  let length = a ...`,l:"interview-questions/topic-outline/algorithm/index.html#冒泡排序",a:"冒泡排序"},"174.22":{t:"选择排序",p:`时间复杂度为O(n²)，不稳定
function selectSort(arr) {
  // 定义index存储最小值的下 ...`,l:"interview-questions/topic-outline/algorithm/index.html#选择排序",a:"选择排序"},"174.23":{t:"插入排序",p:`时间复杂度为O(n²)，稳定
function insertSort(arr) {
  // 从第 2 个元素开始遍历序列
 ...`,l:"interview-questions/topic-outline/algorithm/index.html#插入排序",a:"插入排序"},"174.24":{t:"快速排序",p:`时间复杂度为O(nlogn)，不稳定
function quickSort(list) {
  // 当list.lengt ...`,l:"interview-questions/topic-outline/algorithm/index.html#快速排序",a:"快速排序"},"174.25":{t:"归并排序",p:`时间复杂度为O(nlogn)，稳定
function MergeSort(array) {
  let len = arra ...`,l:"interview-questions/topic-outline/algorithm/index.html#归并排序",a:"归并排序"},"174.26":{t:"列表转成树",p:"",l:"interview-questions/topic-outline/algorithm/index.html#列表转成树",a:"列表转成树"},"174.27":{t:"题目： 输入一组列表如下，转化成树形结构",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-输入一组列表如下-转化成树形结构",a:"题目-输入一组列表如下-转化成树形结构"},"174.28":{t:"输入",p:`[
  { id: 1, title: &quot;child1&quot;, parentId: 0 },
  { id: ...`,l:"interview-questions/topic-outline/algorithm/index.html#输入",a:"输入"},"174.29":{t:"输出",p:`tree=[
  {
    &quot;id&quot;: 1,
    &quot;title&quot;: &quot ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出",a:"输出"},"174.30":{t:"深度优先遍历",p:"",l:"interview-questions/topic-outline/algorithm/index.html#深度优先遍历",a:"深度优先遍历"},"174.31":{t:"题目： 对树进行遍历，从第一个节点开始，遍历其子节点，直到它的所有子节点都被遍历完毕，然后再遍历它的兄弟节点",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-对树进行遍历-从第一个节点开始-遍历其子节点-直到它的所有子节点都被遍历完毕-然后再遍历它的兄弟节点",a:"题目-对树进行遍历-从第一个节点开始-遍历其子节点-直到它的所有子节点都被遍历完毕-然后再遍历它的兄弟节点"},"174.32":{t:"输入： tree",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-tree",a:"输入-tree"},"174.33":{t:"输出： [1, 3, 4, 2, 5]",p:`// 递归版本
function deepTree(tree, arr = []) {
  if (!tree || !tr ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-1-3-4-2-5",a:"输出-1-3-4-2-5"},"174.34":{t:"广度优先遍历",p:"",l:"interview-questions/topic-outline/algorithm/index.html#广度优先遍历",a:"广度优先遍历"},"174.35":{t:"题目： 以横向的维度对树进行遍历，从第一个节点开始，依次遍历其所有的兄弟节点，再遍历第一个节点的子节点，一层层向下遍历",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-以横向的维度对树进行遍历-从第一个节点开始-依次遍历其所有的兄弟节点-再遍历第一个节点的子节点-一层层向下遍历",a:"题目-以横向的维度对树进行遍历-从第一个节点开始-依次遍历其所有的兄弟节点-再遍历第一个节点的子节点-一层层向下遍历"},"174.36":{t:"输入： tree结构",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-tree结构",a:"输入-tree结构"},"174.37":{t:"输出： [1, 2, 3, 4, 5]",p:`function rangeTree(tree) {
  if (!tree || !tree.length) return ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-1-2-3-4-5",a:"输出-1-2-3-4-5"},"174.38":{t:"树形结构查找节点",p:"",l:"interview-questions/topic-outline/algorithm/index.html#树形结构查找节点",a:"树形结构查找节点"},"174.39":{t:"题目： 查找树形结构中符合要求的节点",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-查找树形结构中符合要求的节点",a:"题目-查找树形结构中符合要求的节点"},"174.40":{t:"输入 结果",p:`tree： 上文第11题生成的tree
func： data =&gt; data.title === &quot;chil ...`,l:"interview-questions/topic-outline/algorithm/index.html#输入-结果",a:"输入-结果"},"174.41":{t:"二叉查找树",p:"",l:"interview-questions/topic-outline/algorithm/index.html#二叉查找树",a:"二叉查找树"},"174.42":{t:"题目： 判断一个数组，是否为某二叉查找树的前序遍历结果，二叉查找树特点是所有的左节点比父节点的值小，所有的右节点比父节点的值大",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-判断一个数组-是否为某二叉查找树的前序遍历结果-二叉查找树特点是所有的左节点比父节点的值小-所有的右节点比父节点的值大",a:"题目-判断一个数组-是否为某二叉查找树的前序遍历结果-二叉查找树特点是所有的左节点比父节点的值小-所有的右节点比父节点的值大"},"174.43":{t:"输入： [5, 3, 2, 1, 4, 6, 7, 8, 9]",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-5-3-2-1-4-6-7-8-9",a:"输入-5-3-2-1-4-6-7-8-9"},"174.44":{t:"输出： true",p:`function preOrderOfBST(list) {
  if (list &amp;&amp; list.leng ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-true",a:"输出-true"},"174.45":{t:"查找二叉树的路径",p:"",l:"interview-questions/topic-outline/algorithm/index.html#查找二叉树的路径",a:"查找二叉树的路径"},"174.46":{t:"题目： 查找二叉树和为某一值的路径",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-查找二叉树和为某一值的路径",a:"题目-查找二叉树和为某一值的路径"},"174.47":{t:"输入： 二叉树结构如下，找到和为 11 的所有路径",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-二叉树结构如下-找到和为-11-的所有路径",a:"输入-二叉树结构如下-找到和为-11-的所有路径"},"174.48":{t:"输出： [[5, 3, 2, 1], [5, 6]]",p:`/**
* 利用回溯算法，找到和为某一值的路径
* @param {object} node - 二叉树
* @param  ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-5-3-2-1-5-6",a:"输出-5-3-2-1-5-6"},"174.49":{t:"买卖股票问题",p:"",l:"interview-questions/topic-outline/algorithm/index.html#买卖股票问题",a:"买卖股票问题"},"174.50":{t:"题目： 给定一个整数数组，其中第 i 个元素代表了第 i天的股票价格 非负整数 fee 代表了交易股票的手续费用，求返回获得利润的最大值",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-给定一个整数数组-其中第-i-个元素代表了第-i天的股票价格-非负整数-fee-代表了交易股票的手续费用-求返回获得利润的最大值",a:"题目-给定一个整数数组-其中第-i-个元素代表了第-i天的股票价格-非负整数-fee-代表了交易股票的手续费用-求返回获得利润的最大值"},"174.51":{t:"输入： arr: [1, 12, 13, 9, 15, 8, 6, 16]； fee: 2",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-arr-1-12-13-9-15-8-6-16-fee-2",a:"输入-arr-1-12-13-9-15-8-6-16-fee-2"},"174.52":{t:"输出： 22",p:`/**
 * 贪心算法求解
 * @param {array} list - 股票每天的价格列表
 * @param {nu ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-22",a:"输出-22"},"174.53":{t:"斐波那契数列",p:"",l:"interview-questions/topic-outline/algorithm/index.html#斐波那契数列",a:"斐波那契数列"},"174.54":{t:"题目： 从第3项开始，当前项等于前两项之和： 1 1 2 3 5 8 13 21 ……，计算第n项的值",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-从第3项开始-当前项等于前两项之和-1-1-2-3-5-8-13-21-计算第n项的值",a:"题目-从第3项开始-当前项等于前两项之和-1-1-2-3-5-8-13-21-计算第n项的值"},"174.55":{t:"输入： 10",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-10",a:"输入-10"},"174.56":{t:"输出： 89",p:"// 使用动态规划，将复杂的问题拆分，也就是：`F(N) = F(N - 1) + F(N - 2)`，用数组将已经计算过的 ...",l:"interview-questions/topic-outline/algorithm/index.html#输出-89",a:"输出-89"},"174.57":{t:"滑动窗口最大值",p:"",l:"interview-questions/topic-outline/algorithm/index.html#滑动窗口最大值",a:"滑动窗口最大值"},"174.58":{t:"题目： 给定一个数组 nums，有一个大小为 k 的滑动窗口，从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口中的k个数字。滑动窗口每次只向右移动一位，求返回滑动窗口最大值",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-给定一个数组-nums-有一个大小为-k-的滑动窗口-从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口中的k个数字。滑动窗口每次只向右移动一位-求返回滑动窗口最大值",a:"题目-给定一个数组-nums-有一个大小为-k-的滑动窗口-从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口中的k个数字。滑动窗口每次只向右移动一位-求返回滑动窗口最大值"},"174.59":{t:"输入： nums: [1,3,-1,-3,5,3,6,7]； k: 3",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-nums-1-3-1-3-5-3-6-7-k-3",a:"输入-nums-1-3-1-3-5-3-6-7-k-3"},"174.60":{t:"输出： [3, 3, 5, 5, 6, 7]",p:`function maxSlidingWindow(nums, k) {
  // window存储当前窗口中数据的下标
  ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-3-3-5-5-6-7",a:"输出-3-3-5-5-6-7"},"174.61":{t:"最长递增子序列",p:"",l:"interview-questions/topic-outline/algorithm/index.html#最长递增子序列",a:"最长递增子序列"},"174.62":{t:"题目： 一个整数数组 nums，找到其中一组最长递增子序列的值",p:"",l:"interview-questions/topic-outline/algorithm/index.html#题目-一个整数数组-nums-找到其中一组最长递增子序列的值",a:"题目-一个整数数组-nums-找到其中一组最长递增子序列的值"},"174.63":{t:"输入： [3,5,7,1,2,8]",p:"",l:"interview-questions/topic-outline/algorithm/index.html#输入-3-5-7-1-2-8",a:"输入-3-5-7-1-2-8"},"174.64":{t:"输出： [3,5,7,8]",p:`function lengthOfLIS(nums) {
  if (!nums.length) return 0;
  / ...`,l:"interview-questions/topic-outline/algorithm/index.html#输出-3-5-7-8",a:"输出-3-5-7-8"},"175.0":{t:"# 面试万字总结（浏览器网络篇）",p:`1. GET和POST的请求的区别
Post 和 Get 是 HTTP 请求的两种方法，其区别如下：

应用场景： (GET ...`,l:"interview-questions/topic-outline/browser/index.html",a:"面试万字总结-浏览器网络篇"},"175.1":{t:"为什么post请求会发送两次请求?",p:`1.第一次请求为options预检请求，状态码为:204 作用：
* 作用1: 询问服务器是否支持修改的请求头，如果服务器支 ...`,l:"interview-questions/topic-outline/browser/index.html#为什么post请求会发送两次请求",a:"为什么post请求会发送两次请求"},"175.2":{t:"HTTP Request Header Accept:浏览器能够处理的内容类型",p:`
Accept-Charset:浏览器能够显示的字符集
Accept-Encoding：浏览器能够处理的压缩编码
Accep ...`,l:"interview-questions/topic-outline/browser/index.html#http-request-header-accept-浏览器能够处理的内容类型",a:"http-request-header-accept-浏览器能够处理的内容类型"},"175.3":{t:"HTTP Responses Header",p:`
Date：表示消息发送的时间，时间的描述格式由rfc822定义
server:服务器名称
Connection：浏览器与服 ...`,l:"interview-questions/topic-outline/browser/index.html#http-responses-header",a:"http-responses-header"},"175.4":{t:"Content-Type常见的 Content-Type 属性值有以下四种：**",p:"（1）application/x-www-form-urlencoded：浏览器的原生 form 表单，如果不设置 enct ...",l:"interview-questions/topic-outline/browser/index.html#content-type常见的-content-type-属性值有以下四种",a:"content-type常见的-content-type-属性值有以下四种"},"175.5":{t:"7.2. onreadstatechange事件",p:`*/ 1. onload事件 ：  接收服务器响应的数（一次请求，只会执行一次）
  */      2. onreadys ...`,l:"interview-questions/topic-outline/browser/index.html#_7-2-onreadstatechange事件",a:"_7-2-onreadstatechange事件"},"175.6":{t:"7.3 如何上传文件（上传图片）",p:`   /*文件上传思路总结 
      1. 给file表单注册onchange事件 
        * 当用户选择图片 ...`,l:"interview-questions/topic-outline/browser/index.html#_7-3-如何上传文件-上传图片",a:"_7-3-如何上传文件-上传图片"},"175.7":{t:"7.4 如何自定义上传文件按钮",p:`    /*自定义文件上传按钮思路
      (1)隐藏file表单
      (2)给自定义按钮添加一个点击事件
   ...`,l:"interview-questions/topic-outline/browser/index.html#_7-4-如何自定义上传文件按钮",a:"_7-4-如何自定义上传文件按钮"},"175.8":{t:"7.5 ajax请求如何取消",p:`1. 原生xhr取消请求
var xhr = new XMLHttpRequest();
xhr.abort();


2. ...`,l:"interview-questions/topic-outline/browser/index.html#_7-5-ajax请求如何取消",a:"_7-5-ajax请求如何取消"},"175.9":{t:"7.6取消ajax请求有什么意义",p:`取消ajax请求的意义

已发出的请求可能仍然会到达后端
取消后续的回调处理，避免多余的回调处理，以及特殊情况，先发出的后返 ...`,l:"interview-questions/topic-outline/browser/index.html#_7-6取消ajax请求有什么意义",a:"_7-6取消ajax请求有什么意义"},"175.10":{t:"11.2 **队头阻塞的解决方案：**",p:"（1）并发连接：对于一个域名允许分配多个长连接，那么相当于增加了任务队列，不至于一个队伍的任务阻塞其它所有任务。 （2）域名 ...",l:"interview-questions/topic-outline/browser/index.html#_11-2-队头阻塞的解决方案",a:"_11-2-队头阻塞的解决方案"},"175.11":{t:"4.2 数字证书的作用",p:"现在的方法也不一定是安全的，因为没有办法确定得到的公钥就一定是安全的公钥。可能存在一个中间人，截取了对方发给我们的公钥，然后 ...",l:"interview-questions/topic-outline/browser/index.html#_4-2-数字证书的作用",a:"_4-2-数字证书的作用"},"175.12":{t:"4.3 数字签名是什么？",p:`数字签名就是先用CA自带的Hash算法来计算出证书内容的一个摘要，然后使用CA私钥进行加密，组成数字签名。
当别人把他的数字 ...`,l:"interview-questions/topic-outline/browser/index.html#_4-3-数字签名是什么",a:"_4-3-数字签名是什么"},"175.13":{t:"浏览器缓存的优点",p:`使用浏览器缓存，有以下优点：

减少了服务器的负担，提高了网站的性能
加快了客户端网页的加载速度
减少了多余网络数据传输

 ...`,l:"interview-questions/topic-outline/browser/index.html#浏览器缓存的优点",a:"浏览器缓存的优点"},"175.14":{t:"Cookie",p:"Cookie是最早被提出来的本地存储方式，在此之前，服务端是无法判断网络中的两个请求是否是同一用户发起的，为解决这个问题，C ...",l:"interview-questions/topic-outline/browser/index.html#cookie",a:"cookie"},"175.15":{t:"LocalStorage",p:"LocalStorage是HTML5新引入的特性，由于有的时候我们存储的信息较大，Cookie就不能满足我们的需求，这时候L ...",l:"interview-questions/topic-outline/browser/index.html#localstorage",a:"localstorage"},"175.16":{t:"SessionStorage",p:"SessionStorage和LocalStorage都是在HTML5才提出来的存储方案，SessionStorage 主要 ...",l:"interview-questions/topic-outline/browser/index.html#sessionstorage",a:"sessionstorage"},"175.17":{t:"CORS",p:"CORS需要浏览器和服务器同时支持，整个CORS过程都是浏览器完成的，无需用户参与。因此实现CORS的关键就是服务器，只要服 ...",l:"interview-questions/topic-outline/browser/index.html#cors",a:"cors"},"175.18":{t:"JSONP",p:"jsonp的原理就是利用&lt;script&gt;标签没有跨域限制，通过&lt;script&gt;标签src属性，发送带 ...",l:"interview-questions/topic-outline/browser/index.html#jsonp",a:"jsonp"},"175.19":{t:"postMessage",p:"postMessage是HTML5 XMLHttpRequest Level 2中的API，且是为数不多可以跨域操作的win ...",l:"interview-questions/topic-outline/browser/index.html#postmessage",a:"postmessage"},"175.20":{t:"**Node中间件代理(proxy正向代理)(两次跨域)**",p:`实现原理：同源策略是浏览器需要遵循的标准，而如果是服务器向服务器请求就无需遵循同源策略。 代理服务器，需要做以下几个步骤：
 ...`,l:"interview-questions/topic-outline/browser/index.html#node中间件代理-proxy正向代理-两次跨域",a:"node中间件代理-proxy正向代理-两次跨域"},"175.21":{t:"**nginx反向代理**",p:`实现原理类似于Node中间件代理，需要你搭建一个中转nginx服务器，用于转发请求。
使用nginx反向代理实现跨域，是最简 ...`,l:"interview-questions/topic-outline/browser/index.html#nginx反向代理",a:"nginx反向代理"},"175.22":{t:"什么是中间人攻击？",p:"中间⼈ (Man-in-the-middle attack, MITM) 是指攻击者与通讯的两端分别创建独⽴的联系, 并交换 ...",l:"interview-questions/topic-outline/browser/index.html#什么是中间人攻击",a:"什么是中间人攻击"},"176.0":{t:"# 字节前端面试题",p:"",l:"interview-questions/topic-outline/bytes/index.html",a:"字节前端面试题"},"176.1":{t:"写 React / Vue 项目时为什么要在列表组件中写 key，其作用是什么？",p:`
key 是给每一个 vnode 的唯一 id,可以依靠 key,更准确,更快的拿到 oldVnode 中对应的 vnode ...`,l:"interview-questions/topic-outline/bytes/index.html#写-react-vue-项目时为什么要在列表组件中写-key-其作用是什么",a:"写-react-vue-项目时为什么要在列表组件中写-key-其作用是什么"},"176.2":{t:"什么是防抖和节流？有什么区别？如何实现？",p:`
// 防抖——触发高频事件后 n 秒后函数只会执行一次，如果 n 秒内高频事件再次被触发，则重新计算时间；
functio ...`,l:"interview-questions/topic-outline/bytes/index.html#什么是防抖和节流-有什么区别-如何实现",a:"什么是防抖和节流-有什么区别-如何实现"},"176.3":{t:"介绍下 Set、Map、WeakSet 和 WeakMap 的区别？",p:`
Set——对象允许你存储任何类型的唯一值，无论是原始值或者是对象引用
WeakSet——成员都是对象；成员都是弱引用，可以 ...`,l:"interview-questions/topic-outline/bytes/index.html#介绍下-set、map、weakset-和-weakmap-的区别",a:"介绍下-set、map、weakset-和-weakmap-的区别"},"176.4":{t:"介绍下深度优先遍历和广度优先遍历，如何实现？",p:`
深度优先遍历——是指从某个顶点出发，首先访问这个顶点，然后找出刚访问这个结点的第一个未被访问的邻结点，然后再以此邻结点为顶 ...`,l:"interview-questions/topic-outline/bytes/index.html#介绍下深度优先遍历和广度优先遍历-如何实现",a:"介绍下深度优先遍历和广度优先遍历-如何实现"},"176.5":{t:"请分别用深度优先思想和广度优先思想实现一个拷贝函数？",p:`let _toString = Object.prototype.toString
let map = {
  array: ...`,l:"interview-questions/topic-outline/bytes/index.html#请分别用深度优先思想和广度优先思想实现一个拷贝函数",a:"请分别用深度优先思想和广度优先思想实现一个拷贝函数"},"176.6":{t:"ES5 / ES6 的继承除了写法以外还有什么区别？",p:`
ES5 的继承实质上是先创建子类的实例对象，然后再将父类的方法添加到 this 上（Parent.apply(this)） ...`,l:"interview-questions/topic-outline/bytes/index.html#es5-es6-的继承除了写法以外还有什么区别",a:"es5-es6-的继承除了写法以外还有什么区别"},"176.7":{t:"Async / Await 如何通过同步的方式实现异步",p:`
async 起什么作用——输出的是一个 Promise 对象

`,l:"interview-questions/topic-outline/bytes/index.html#async-await-如何通过同步的方式实现异步",a:"async-await-如何通过同步的方式实现异步"},"176.8":{t:"JS 异步解决方案的发展历程以及优缺点",p:"",l:"interview-questions/topic-outline/bytes/index.html#js-异步解决方案的发展历程以及优缺点",a:"js-异步解决方案的发展历程以及优缺点"},"176.9":{t:"1、回调函数（callback）",p:`
优点：解决了同步的问题（只要有一个任务耗时很长，后面的任务都必须排队
等着，会拖延整个程序的执行。）
缺点：回调地狱，不能 ...`,l:"interview-questions/topic-outline/bytes/index.html#_1、回调函数-callback",a:"_1、回调函数-callback"},"176.10":{t:"2、Promise",p:`
优点：解决了回调地狱的问题
缺点：无法取消 Promise ，错误需要通过回调函数来捕获

`,l:"interview-questions/topic-outline/bytes/index.html#_2、promise",a:"_2、promise"},"176.11":{t:"3、Generator",p:`
特点：可以控制函数的执行，可以配合 co 函数库使用

`,l:"interview-questions/topic-outline/bytes/index.html#_3、generator",a:"_3、generator"},"176.12":{t:"4、Async/await",p:`
优点：代码清晰，不用像 Promise 写一大堆 then 链，处理了回调地狱的问题
缺点：await 将异步代码改造成同 ...`,l:"interview-questions/topic-outline/bytes/index.html#_4、async-await",a:"_4、async-await"},"176.13":{t:"Promise 构造函数是同步执行还是异步执行，那么 then 方法呢？",p:`const promise = new Promise((resolve, reject) =&gt; {
  consol ...`,l:"interview-questions/topic-outline/bytes/index.html#promise-构造函数是同步执行还是异步执行-那么-then-方法呢",a:"promise-构造函数是同步执行还是异步执行-那么-then-方法呢"},"176.14":{t:"谈谈你对 TCP 三次握手和四次挥手的理解",p:"",l:"interview-questions/topic-outline/bytes/index.html#谈谈你对-tcp-三次握手和四次挥手的理解",a:"谈谈你对-tcp-三次握手和四次挥手的理解"},"176.15":{t:"TCP三次握手",p:`
客户端发送syn包到服务器，等待服务器确认接收。
服务器确认接收syn包并确认客户的syn，并发送回来一个syn+ack的 ...`,l:"interview-questions/topic-outline/bytes/index.html#tcp三次握手",a:"tcp三次握手"},"176.16":{t:"四次握手",p:`
就是中间多了一层：等待服务器再一次响应回复相关数据的过程
三次握手之所以是三次是保证client和server均让对方知道 ...`,l:"interview-questions/topic-outline/bytes/index.html#四次握手",a:"四次握手"},"176.17":{t:"React 中 setState 什么时候是同步的，什么时候是异步的？",p:`
由 React 控制的事件处理程序，以及生命周期函数调用 setState 不会同步更新 state 。
React 控制 ...`,l:"interview-questions/topic-outline/bytes/index.html#react-中-setstate-什么时候是同步的-什么时候是异步的",a:"react-中-setstate-什么时候是同步的-什么时候是异步的"},"176.18":{t:"React setState 笔试题，下面的代码输出什么？",p:`
class Example extends React.Component {
  constructor() {
    ...`,l:"interview-questions/topic-outline/bytes/index.html#react-setstate-笔试题-下面的代码输出什么",a:"react-setstate-笔试题-下面的代码输出什么"},"176.19":{t:"介绍下 npm 模块安装机制？",p:`
发出 npm install 命令
查询 node_modules 目录之中是否已经存在指定模块
若存在，不再重新安装
若 ...`,l:"interview-questions/topic-outline/bytes/index.html#介绍下-npm-模块安装机制",a:"介绍下-npm-模块安装机制"},"177.0":{t:"# 中级前端面试(下)",p:`Hybrid
随着 Web技术 和 移动设备 的快速发展，在各家大厂中，Hybrid 技术已经成为一种最主流最不可取代的架构 ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html",a:"中级前端面试-下"},"177.1":{t:"1\\. 混合方案简析",p:"Hybrid App，俗称 混合应用，即混合了 Native技术 与 Web技术 进行开发的移动应用。现在比较流行的混合方案 ...",l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_1-混合方案简析",a:"_1-混合方案简析"},"177.2":{t:"2\\. Webviev",p:`Webview 是 Native App 中内置的一款基于 Webkit内核 的浏览器，主要由两部分组成:

WebCore ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_2-webviev",a:"_2-webviev"},"177.3":{t:"3\\. 交互原理",p:"Hybrid技术 中最核心的点就是 Native端 与 H5端 之间的 双向通讯层，其实这里也可以理解为我们需要一套 跨语言 ...",l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_3-交互原理",a:"_3-交互原理"},"177.4":{t:"4\\. 接入方案",p:`整套方案需要 Web 与 Native 两部分共同来完成:

Native: 负责实现URL拦截与解析、环境信息的注入、拓展 ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_4-接入方案",a:"_4-接入方案"},"177.5":{t:"5\\. 优化方案简述",p:`
Webview 预加载: Webview 的初始化其实挺耗时的。我们测试过，大概在100~200ms之间，因此如果能前置做 ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_5-优化方案简述",a:"_5-优化方案简述"},"177.6":{t:"1\\. 原理简述",p:"Webpack 已经成为了现在前端工程化中最重要的一环，通过Webpack与Node的配合，前端领域完成了不可思议的进步。通 ...",l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_1-原理简述",a:"_1-原理简述"},"177.7":{t:"2\\. Loader",p:"由于 Webpack 是基于 Node，因此 Webpack 其实是只能识别 js 模块，比如 css / html / 图 ...",l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_2-loader",a:"_2-loader"},"177.8":{t:"3\\. Plugin",p:"插件系统是 Webpack 成功的一个关键性因素。在编译的整个生命周期中，Webpack 会触发许多事件钩子，Plugin  ...",l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_3-plugin",a:"_3-plugin"},"177.9":{t:"4\\. 编译优化",p:`

代码优化:


无用代码消除，是许多编程语言都具有的优化手段，这个过程称为 DCE (dead code elimina ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_4-编译优化",a:"_4-编译优化"},"177.10":{t:"1\\. 编码优化",p:"编码优化，指的就是 在代码编写时的，通过一些 最佳实践，提升代码的执行性能。通常这并不会带来非常大的收益，但这属于 程序猿的 ...",l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_1-编码优化",a:"_1-编码优化"},"177.11":{t:"2\\. 页面基础优化",p:`
引入位置: css 文件&lt;head&gt;中引入， js 文件&lt;body&gt;底部引入；

影响首屏的，优先 ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_2-页面基础优化",a:"_2-页面基础优化"},"177.12":{t:"3\\. 首屏渲染优化",p:`
css / js 分割，使首屏依赖的文件体积最小，内联首屏关键 css / js；
非关键性的文件尽可能的 异步加载和懒加 ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#_3-首屏渲染优化",a:"_3-首屏渲染优化"},"177.13":{t:"Nginx",p:"轻量级、高性能的 Web 服务器，在现今的大型应用、网站基本都离不开 Nginx，已经成为了一项必选的技术；其实可以把它理解 ...",l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#nginx",a:"nginx"},"177.14":{t:"Docker",p:`Docker，是一款现在最流行的 软件容器平台，提供了软件运行时所依赖的环境。


物理机:

硬件环境，真实的 计算机实体 ...`,l:"interview-questions/topic-outline/intermediate-engineer-bottom/index.html#docker",a:"docker"},"178.0":{t:"# 中级前端面试(中)",p:`进阶知识
框架: React
React 也是现如今最流行的前端框架，也是很多大厂面试必备。React 与 Vue 虽有不同 ...`,l:"interview-questions/topic-outline/intermediate-engineer-center/index.html",a:"中级前端面试-中"},"178.1":{t:"1\\. Fiber",p:`React 的核心流程可以分为两个部分:

reconciliation (调度算法，也可称为 render):

更新 s ...`,l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_1-fiber",a:"_1-fiber"},"178.2":{t:"2\\. 生命周期",p:`在新版本中，React 官方对生命周期有了新的 变动建议:

使用getDerivedStateFromProps 替换 c ...`,l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_2-生命周期",a:"_2-生命周期"},"178.3":{t:"3\\. setState",p:`在了解setState之前，我们先来简单了解下 React 一个包装结构: Transaction:

事务 (Transa ...`,l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_3-setstate",a:"_3-setstate"},"178.4":{t:"4\\. HOC(高阶组件)",p:"HOC(Higher Order Componennt) 是在 React 机制下社区形成的一种组件模式，在很多第三方开源库 ...",l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_4-hoc-高阶组件",a:"_4-hoc-高阶组件"},"178.5":{t:"5\\. Redux",p:"Redux 是一个 数据管理中心，可以把它理解为一个全局的 data store 实例。它通过一定的使用规则和限制，保证着数 ...",l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_5-redux",a:"_5-redux"},"178.6":{t:"6\\. React Hooks",p:`React 中通常使用 类定义 或者 函数定义 创建组件:
在类定义中，我们可以使用到许多 React 特性，例如 stat ...`,l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_6-react-hooks",a:"_6-react-hooks"},"178.7":{t:"7\\. SSR",p:"SSR，俗称 服务端渲染 (Server Side Render)，讲人话就是: 直接在服务端层获取数据，渲染出完成的 HT ...",l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_7-ssr",a:"_7-ssr"},"178.8":{t:"8\\. 函数式编程",p:"函数式编程是一种 编程范式，你可以理解为一种软件架构的思维模式。它有着独立一套理论基础与边界法则，追求的是 更简洁、可预测、 ...",l:"interview-questions/topic-outline/intermediate-engineer-center/index.html#_8-函数式编程",a:"_8-函数式编程"},"179.0":{t:"# 中级前端面试(上)",p:`CSS
`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html",a:"中级前端面试-上"},"179.1":{t:"1\\. 盒模型",p:`页面渲染时，dom 元素所采用的 布局模型。可通过box-sizing进行设置。根据计算宽高的区域可分为：

content ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_1-盒模型",a:"_1-盒模型"},"179.2":{t:"2\\. BFC",p:`块级格式化上下文，是一个独立的渲染区域，让处于 BFC 内部的元素与外部的元素相互隔离，使内外元素的定位不会相互影响。

I ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_2-bfc",a:"_2-bfc"},"179.3":{t:"3.层叠上下文",p:`元素提升为一个比较特殊的图层，在三维空间中 (z轴) 高出普通元素一等。


触发条件

根层叠上下文(html)
posi ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_3-层叠上下文",a:"_3-层叠上下文"},"179.4":{t:"4\\. 居中布局",p:`

水平居中

行内元素: text-align: center
块级元素: margin: 0 auto
absolute ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_4-居中布局",a:"_4-居中布局"},"179.5":{t:"5\\. 选择器优先级",p:`
!important &gt; 行内样式 &gt; #id &gt; .class &gt; tag &gt; * &gt ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_5-选择器优先级",a:"_5-选择器优先级"},"179.6":{t:"6.去除浮动影响，防止父级高度塌陷",p:`
通过增加尾元素清除浮动

:after / &lt;br&gt; : clear: both


创建父级 BFC
父级设 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_6-去除浮动影响-防止父级高度塌陷",a:"_6-去除浮动影响-防止父级高度塌陷"},"179.7":{t:"7.link 与 @import 的区别",p:`
link功能较多，可以定义 RSS，定义 Rel 等作用，而@import只能用于加载 css
当解析到link时，页面会 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_7-link-与-import-的区别",a:"_7-link-与-import-的区别"},"179.8":{t:"8\\. CSS预处理器(Sass/Less/Postcss)",p:"CSS预处理器的原理: 是将类 CSS 语言通过 Webpack 编译 转成浏览器可读的真正 CSS。在这层编译之上，便可以 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_8-css预处理器-sass-less-postcss",a:"_8-css预处理器-sass-less-postcss"},"179.9":{t:"9.CSS动画",p:`

transition: 过渡动画

transition-property: 属性
transition-duratio ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_9-css动画",a:"_9-css动画"},"179.10":{t:"经验",p:"通常，CSS 并不是重点的考察领域，但这其实是由于现在国内业界对 CSS 的专注不够导致的，真正精通并专注于 CSS 的团队 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#经验",a:"经验"},"179.11":{t:"1\\. 原型 / 构造函数 / 实例",p:`

原型(prototype): 一个简单的对象，用于实现对象的 属性继承。可以简单的理解成对象的爹。在 Firefox 和 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_1-原型-构造函数-实例",a:"_1-原型-构造函数-实例"},"179.12":{t:"2.原型链",p:"原型链是由原型对象组成，每个对象都有 __proto__ 属性，指向了创建该对象的构造函数的原型，__proto__ 将对象 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_2-原型链",a:"_2-原型链"},"179.13":{t:"3\\. 执行上下文(EC)",p:`执行上下文可以简单理解为一个对象:


它包含三个部分:

变量对象(VO)
作用域链(词法作用域)
this指向



它 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_3-执行上下文-ec",a:"_3-执行上下文-ec"},"179.14":{t:"2.变量对象",p:"变量对象，是执行上下文中的一部分，可以抽象为一种 数据作用域，其实也可以理解为就是一个简单的对象，它存储着该执行上下文中的所 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_2-变量对象",a:"_2-变量对象"},"179.15":{t:"3\\. 作用域",p:"执行上下文中还包含作用域链。理解作用域之前，先介绍下作用域。作用域其实可理解为该上下文中声明的 变量和声明的作用范围。可分为 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_3-作用域",a:"_3-作用域"},"179.16":{t:"4.作用域链",p:"我们知道，我们可以在执行上下文中访问到父级甚至全局的变量，这便是作用域链的功劳。作用域链可以理解为一组对象列表，包含 父级和 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_4-作用域链",a:"_4-作用域链"},"179.17":{t:"5\\. 闭包",p:"闭包属于一种特殊的作用域，称为 静态作用域。它的定义可以理解为: 父函数被销毁 的情况下，返回出的子函数的[[scope]] ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_5-闭包",a:"_5-闭包"},"179.18":{t:"6\\. script 引入方式",p:`
html 静态&lt;script&gt;引入
js 动态插入&lt;script&gt;
&lt;script defe ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_6-script-引入方式",a:"_6-script-引入方式"},"179.19":{t:"7\\. 对象的拷贝",p:`

浅拷贝: 以赋值的形式拷贝引用对象，仍指向同一个地址，修改时原对象也会受到影响

Object.assign
展开运算符 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_7-对象的拷贝",a:"_7-对象的拷贝"},"179.20":{t:"8\\. new运算符的执行过程",p:`
新生成一个对象
链接到原型: obj.__proto__ = Con.prototype
绑定this: apply
返回 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_8-new运算符的执行过程",a:"_8-new运算符的执行过程"},"179.21":{t:"9\\. instanceof原理",p:`能在实例的 原型对象链 中找到该构造函数的prototype属性所指向的 原型对象，就返回true。即:
// __prot ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_9-instanceof原理",a:"_9-instanceof原理"},"179.22":{t:"10\\. 代码的复用",p:`当你发现任何代码开始写第二遍时，就要开始考虑如何复用。一般有以下的方式:

函数封装
继承
复制extend
混入mixin ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_10-代码的复用",a:"_10-代码的复用"},"179.23":{t:"11\\. 继承",p:`在 JS 中，继承通常指的便是 原型链继承，也就是通过指定原型，并可以通过原型链继承原型上的属性或者方法。

最优化: 圣杯 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_11-继承",a:"_11-继承"},"179.24":{t:"12\\. 类型转换",p:`大家都知道 JS 中在使用运算符号或者对比符时，会自带隐式转换，规则如下:

-、*、/、% ：一律转换成数值后计算
+：
 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_12-类型转换",a:"_12-类型转换"},"179.25":{t:"13\\. 类型判断",p:"判断 Target 的类型，单单用 typeof 并无法完全满足，这其实并不是 bug，本质原因是 JS 的万物皆对象的理论 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_13-类型判断",a:"_13-类型判断"},"179.26":{t:"14\\. 模块化",p:"模块化开发在现代开发中已是必不可少的一部分，它大大提高了项目的可维护、可拓展和可协作性。通常，我们 在浏览器中使用 ES6  ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_14-模块化",a:"_14-模块化"},"179.27":{t:"15\\. 防抖与节流",p:`防抖与节流函数是一种最常用的 高频触发优化方式，能对性能有较大的帮助。

防抖 (debounce): 将多次高频操作优化为 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_15-防抖与节流",a:"_15-防抖与节流"},"179.28":{t:"16\\. 函数执行改变this",p:"由于 JS 的设计原理: 在函数中，可以引用运行环境中的变量。因此就需要一个机制来让我们可以在函数体内部获取当前的运行环境， ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_16-函数执行改变this",a:"_16-函数执行改变this"},"179.29":{t:"17\\. ES6/ES7",p:"由于 Babel 的强大和普及，现在 ES6/ES7 基本上已经是现代化开发的必备了。通过新的语法糖，能让代码整体更为简洁和 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_17-es6-es7",a:"_17-es6-es7"},"179.30":{t:"18\\. AST",p:"抽象语法树 (Abstract Syntax Tree)，是将代码逐字母解析成 树状对象 的形式。这是语言之间的转换、代码语 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_18-ast",a:"_18-ast"},"179.31":{t:"19\\. babel编译原理",p:"babylon 将 ES6/ES7 代码解析成 AST babel-traverse 对 AST 进行遍历转译，得到新的 A ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_19-babel编译原理",a:"_19-babel编译原理"},"179.32":{t:"20\\. 函数柯里化",p:"在一个函数中，首先填充几个参数，然后再返回一个新的函数的技术，称为函数的柯里化。通常可用于在不侵入函数的前提下，为函数 预置 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_20-函数柯里化",a:"_20-函数柯里化"},"179.33":{t:"21\\. 数组(array)",p:`

map: 遍历数组，返回回调返回值组成的新数组


forEach: 无法break，可以用try/catch中thro ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_21-数组-array",a:"_21-数组-array"},"179.34":{t:"1\\. 跨标签页通讯",p:`不同标签页间的通讯，本质原理就是去运用一些可以 共享的中间介质，因此比较常用的有以下方法:


通过父页面window.op ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_1-跨标签页通讯",a:"_1-跨标签页通讯"},"179.35":{t:"2\\. 浏览器架构",p:`
用户界面
主进程
内核

渲染引擎
JS 引擎

执行栈


事件触发线程

消息队列

微任务
宏任务




网络异步 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_2-浏览器架构",a:"_2-浏览器架构"},"179.36":{t:"3\\. 浏览器下事件循环(Event Loop)",p:`事件循环是指: 执行一个宏任务，然后执行清空微任务列表，循环再执行宏任务，再清微任务列表

微任务 microtask(jo ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_3-浏览器下事件循环-event-loop",a:"_3-浏览器下事件循环-event-loop"},"179.37":{t:"4\\. 从输入 url 到展示的过程",p:`
DNS 解析
TCP 三次握手
发送请求，分析 url，设置请求报文(头，主体)
服务器返回请求的文件 (html)
浏览 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_4-从输入-url-到展示的过程",a:"_4-从输入-url-到展示的过程"},"179.38":{t:"5\\. 重绘与回流",p:`当元素的样式发生变化时，浏览器需要触发更新，重新绘制元素。这个过程中，有两种类型的操作，即重绘与回流。


重绘(repai ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_5-重绘与回流",a:"_5-重绘与回流"},"179.39":{t:"最佳实践",p:`css 避免使用table布局

将动画效果应用到position属性为absolute或fixed的元素上
javascr ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#最佳实践",a:"最佳实践"},"179.40":{t:"6\\. 存储",p:`我们经常需要对业务中的一些数据进行存储，通常可以分为 短暂性存储 和 持久性储存。


短暂性的时候，我们只需要将数据存在内 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_6-存储",a:"_6-存储"},"179.41":{t:"7\\. Web Worker",p:"现代浏览器为JavaScript创造的 多线程环境。可以新建并将部分任务分配到worker线程并行运行，两个线程可 独立运行 ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_7-web-worker",a:"_7-web-worker"},"179.42":{t:"8\\. V8垃圾回收机制",p:`垃圾回收: 将内存中不再使用的数据进行清理，释放出内存空间。V8 将内存分成 新生代空间 和 老生代空间。

新生代空间:  ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_8-v8垃圾回收机制",a:"_8-v8垃圾回收机制"},"179.43":{t:"9\\. 内存泄露",p:`
意外的全局变量: 无法被回收
定时器: 未被正确关闭，导致所引用的外部变量无法被释放
事件监听: 没有正确销毁 (低版本浏 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_9-内存泄露",a:"_9-内存泄露"},"179.44":{t:"1\\. http/https 协议",p:`

1.0 协议缺陷:

无法复用链接，完成即断开，重新慢启动和 TCP 3次握手
head of line blockin ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_1-http-https-协议",a:"_1-http-https-协议"},"179.45":{t:"2\\. 常见状态码",p:`
1xx: 接受，继续处理
200: 成功，并返回数据
201: 已创建
202: 已接受
203: 成为，但未授权
204 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_2-常见状态码",a:"_2-常见状态码"},"179.46":{t:"3\\. get / post get: 缓存、请求长度受限、会被历史保存记录",p:`
无副作用(不修改资源)，幂等(请求次数与资源无关)的场景
post: 安全、大数据、更多编码类型

两者详细对比如下图:
 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_3-get-post-get-缓存、请求长度受限、会被历史保存记录",a:"_3-get-post-get-缓存、请求长度受限、会被历史保存记录"},"179.47":{t:"4\\. Websocket",p:`Websocket 是一个 持久化的协议， 基于 http ， 服务端可以 主动 push


兼容：
FLASH Sock ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_4-websocket",a:"_4-websocket"},"179.48":{t:"5\\. TCP三次握手",p:`建立连接前，客户端和服务端需要通过握手来确认对方:

客户端发送 syn(同步序列编号) 请求，进入 syn_send 状态 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_5-tcp三次握手",a:"_5-tcp三次握手"},"179.49":{t:"6\\. TCP四次挥手",p:`
客户端 -- FIN --&gt; 服务端， FIN—WAIT
服务端 -- ACK --&gt; 客户端， CLOSE- ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_6-tcp四次挥手",a:"_6-tcp四次挥手"},"179.50":{t:"7\\. Node 的 Event Loop: 6个阶段",p:`
timer 阶段: 执行到期的setTimeout / setInterval队列回调
I/O 阶段: 执行上轮循环残流的 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_7-node-的-event-loop-6个阶段",a:"_7-node-的-event-loop-6个阶段"},"179.51":{t:"跨域",p:`
JSONP: 利用&lt;script&gt;标签不受跨域限制的特点，缺点是只能支持 get 请求

function j ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#跨域",a:"跨域"},"179.52":{t:"安全",p:`
XSS攻击: 注入恶意代码
cookie 设置 httpOnly 转义页面上的输入内容和输出内容
CSRF: 跨站请求伪造 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#安全",a:"安全"},"179.53":{t:"1\\. nextTick",p:`在下次dom更新循环结束之后执行延迟回调，可用于获取更新后的dom状态


新版本中默认是microtasks, v-on中 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_1-nexttick",a:"_1-nexttick"},"179.54":{t:"2\\. 生命周期",p:`

_init_

initLifecycle/Event，往vm上挂载各种属性
callHook: beforeCreat ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_2-生命周期",a:"_2-生命周期"},"179.55":{t:"3\\. 数据响应(数据劫持)",p:"看完生命周期后，里面的watcher等内容其实是数据响应中的一部分。数据响应的实现由两部分构成: 观察者( watcher  ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_3-数据响应-数据劫持",a:"_3-数据响应-数据劫持"},"179.56":{t:"4\\. virtual dom 原理实现",p:`

创建 dom 树


树的diff，同层对比，输出patchs(listDiff/diffChildren/diffPr ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_4-virtual-dom-原理实现",a:"_4-virtual-dom-原理实现"},"179.57":{t:"5\\. Proxy 相比于 defineProperty 的优势",p:`
数组变化也能监听到
不需要深度遍历监听

let data = { a: 1 }
let reactiveData = n ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_5-proxy-相比于-defineproperty-的优势",a:"_5-proxy-相比于-defineproperty-的优势"},"179.58":{t:"6\\. vue-router",p:`
mode

hash
history


跳转

this.$router.push()
&lt;router-link  ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_6-vue-router",a:"_6-vue-router"},"179.59":{t:"7\\. vuex",p:`
state: 状态中心
mutations: 更改状态
actions: 异步更改状态
getters: 获取状态
mod ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_7-vuex",a:"_7-vuex"},"179.60":{t:"1\\. 五大算法",p:`
贪心算法: 局部最优解法
分治算法: 分成多个小模块，与原问题性质相同
动态规划: 每个状态都是过去历史的一个总结
回溯法 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_1-五大算法",a:"_1-五大算法"},"179.61":{t:"2\\. 基础排序算法",p:`
冒泡排序: 两两比较

 function bubleSort(arr) {
     var len = arr.len ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_2-基础排序算法",a:"_2-基础排序算法"},"179.62":{t:"3\\. 高级排序算法",p:`
快速排序

选择基准值(base)，原数组长度减一(基准值)，使用 splice
循环原数组，小的放左边(left数组)， ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_3-高级排序算法",a:"_3-高级排序算法"},"179.63":{t:"4\\. 递归运用(斐波那契数列)： 爬楼梯问题",p:"初始在第一级，到第一级有1种方法(s(1) = 1)，到第二级也只有一种方法(s(2) = 1)， 第三级(s(3) = s ...",l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_4-递归运用-斐波那契数列-爬楼梯问题",a:"_4-递归运用-斐波那契数列-爬楼梯问题"},"179.64":{t:"5\\. 数据树",p:`
二叉树: 最多只有两个子节点

完全二叉树
满二叉树

深度为 h, 有 n 个节点，且满足 n = 2^h - 1


 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_5-数据树",a:"_5-数据树"},"179.65":{t:"6\\. 天平找次品",p:`有n个硬币，其中1个为假币，假币重量较轻，你有一把天平，请问，至少需要称多少次能保证一定找到假币?

三等分算法:



将 ...`,l:"interview-questions/topic-outline/intermediate-engineer-top/index.html#_6-天平找次品",a:"_6-天平找次品"},"180.0":{t:"# 三十七个常见Vue面试题",p:`一、谈谈你对MVVM的理解？
映射关系简化，隐藏controller MVVM在MVC的基础上，把控制层隐藏掉了。
!ima ...`,l:"interview-questions/topic-outline/vue-37/index.html",a:"三十七个常见vue面试题"},"180.1":{t:"普通插槽",p:`普通插槽是渲染后做替换的工作。父组件渲染完毕后，替换子组件的内容。
!image.png
在模板编译的时候，处理组件中的子节 ...`,l:"interview-questions/topic-outline/vue-37/index.html#普通插槽",a:"普通插槽"},"180.2":{t:"作用域插槽",p:`作用域插槽可以拿到子组件里面的属性。在子组件中传入属性然后渲染。
!image.png
!image.png
作用域插槽的编 ...`,l:"interview-questions/topic-outline/vue-37/index.html#作用域插槽",a:"作用域插槽"},"181.0":{t:"# 30 道 Vue 面试题",p:`1、说说你对 SPA 单页面的理解，它的优缺点分别是什么？
SPA（ single-page application ）仅在 ...`,l:"interview-questions/topic-outline/vue30/index.html",a:"_30-道-vue-面试题"},"182.0":{t:"# Array 和 tuple 的区别",p:"",l:"interview-questions/ts/array-tuple/index.html",a:"array-和-tuple-的区别"},"182.1":{t:"数组一般只限制集合的类型  但是不会限制你某个位置的元素的类型  只要符合 集合类型限制就可以",p:`
let arr: (string | number | boolean)[] = ['1', 1, false]
arr[ ...`,l:"interview-questions/ts/array-tuple/index.html#数组一般只限制集合的类型-但是不会限制你某个位置的元素的类型-只要符合-集合类型限制就可以",a:"数组一般只限制集合的类型-但是不会限制你某个位置的元素的类型-只要符合-集合类型限制就可以"},"182.2":{t:"元祖 tuple 可以限制 集合中 每个位置的类型",p:`let tuple: [string, number, boolean] = ['1', 1, false]
tuple[0 ...`,l:"interview-questions/ts/array-tuple/index.html#元祖-tuple-可以限制-集合中-每个位置的类型",a:"元祖-tuple-可以限制-集合中-每个位置的类型"},"183.0":{t:"# interface 和 type 的区别",p:"",l:"interview-questions/ts/interface-type/index.html",a:"interface-和-type-的区别"},"183.1":{t:"type和interface的相同点",p:"",l:"interview-questions/ts/interface-type/index.html#type和interface的相同点",a:"type和interface的相同点"},"183.2":{t:"都是用来定义 对象 或者 函数 的形状",p:`   interface example {
        name: string
        age: numbe ...`,l:"interview-questions/ts/interface-type/index.html#都是用来定义-对象-或者-函数-的形状",a:"都是用来定义-对象-或者-函数-的形状"},"183.3":{t:"type和interface的不同点",p:"",l:"interview-questions/ts/interface-type/index.html#type和interface的不同点",a:"type和interface的不同点"},"183.4":{t:"首先聊聊type可以做到，但interface不能做到的事情",p:"type可以定义 基本类型的别名，如 type myString = string type可以通过 typeof 操作符来 ...",l:"interview-questions/ts/interface-type/index.html#首先聊聊type可以做到-但interface不能做到的事情",a:"首先聊聊type可以做到-但interface不能做到的事情"},"183.5":{t:"接下来聊聊interface可以做到，但是type不可以做到的事情",p:`interface可以 声明合并，示例如下
如果是type的话，就会是 覆盖 的效果，始终只有最后一个type生效
     ...`,l:"interview-questions/ts/interface-type/index.html#接下来聊聊interface可以做到-但是type不可以做到的事情",a:"接下来聊聊interface可以做到-但是type不可以做到的事情"},"184.0":{t:"# 面试题集合",p:"",l:"interview-questions/ts/interview-questions/index.html",a:"面试题集合"},"184.1":{t:"什么是TypeScript？",p:"Typescript 是一个强类型的 JavaScript 超集，支持ES6语法，支持面向对象编程的概念，如类、接口、继承、 ...",l:"interview-questions/ts/interview-questions/index.html#什么是typescript",a:"什么是typescript"},"184.2":{t:"为什么要使用 TypeScript ? TypeScript 相对于 JavaScript 的优势是什么？",p:`增加了静态类型，可以在开发人员编写脚本时检测错误，使得代码质量更好，更健壮。
`,l:"interview-questions/ts/interview-questions/index.html#为什么要使用-typescript-typescript-相对于-javascript-的优势是什么",a:"为什么要使用-typescript-typescript-相对于-javascript-的优势是什么"},"184.3":{t:"优势",p:`
杜绝手误导致的变量名写错;
类型可以一定程度上充当文档;
IDE自动填充，自动联想;

`,l:"interview-questions/ts/interview-questions/index.html#优势",a:"优势"},"184.4":{t:"TypeScript 中 const 和 readonly 的区别？枚举和常量枚举的区别？接口和类型别名的区别？",p:`
const 和 readonly: const可以防止变量的值被修改，readonly可以防止变量的属性被修改。
枚举和常 ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-中-const-和-readonly-的区别-枚举和常量枚举的区别-接口和类型别名的区别",a:"typescript-中-const-和-readonly-的区别-枚举和常量枚举的区别-接口和类型别名的区别"},"184.5":{t:"TypeScript 中 any 类型的作用是什么？",p:"为编程阶段还不清楚类型的变量指定一个类型。 这些值可能来自于动态的内容，比如来自用户输入或第三方代码库。 这种情况下，我们不 ...",l:"interview-questions/ts/interview-questions/index.html#typescript-中-any-类型的作用是什么",a:"typescript-中-any-类型的作用是什么"},"184.6":{t:"TypeScript 中 any、never、unknown、null & undefined 和 void 有什么区别？",p:`
any: 动态的变量类型（失去了类型检查的作用）。
never: 永不存在的值的类型。例如：never 类型是那些总是会抛 ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-中-any、never、unknown、null-undefined-和-void-有什么区别",a:"typescript-中-any、never、unknown、null-undefined-和-void-有什么区别"},"184.7":{t:"TypeScript 中 interface 可以给 Function / Array / Class（Indexable）做声明吗？",p:`
/*可以*/
// 函数声明
interface Say {
 (name: string): viod;
}
let s ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-中-interface-可以给-function-array-class-indexable-做声明吗",a:"typescript-中-interface-可以给-function-array-class-indexable-做声明吗"},"184.8":{t:"TypeScript 中可以使用 String、Number、Boolean、Symbol、Object 等给类型做声明吗？",p:`
/*可以*/
let name: string = &quot;bob&quot;;
let decLiteral: nu ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-中可以使用-string、number、boolean、symbol、object-等给类型做声明吗",a:"typescript-中可以使用-string、number、boolean、symbol、object-等给类型做声明吗"},"184.9":{t:"TypeScript 中的 this 和 JavaScript 中的 this 有什么差异？",p:`
TypeScript：noImplicitThis: true 的情况下，必须去声明 this 的类型，才能在函数或者对象 ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-中的-this-和-javascript-中的-this-有什么差异",a:"typescript-中的-this-和-javascript-中的-this-有什么差异"},"184.10":{t:"TypeScript 中使用 Union Types 时有哪些注意事项？",p:"属性或方法访问: 当 TypeScript 不确定一个联合类型的变量到底是哪个类型的时候，我们只能访问此联合类型的所有类型里 ...",l:"interview-questions/ts/interview-questions/index.html#typescript-中使用-union-types-时有哪些注意事项",a:"typescript-中使用-union-types-时有哪些注意事项"},"184.11":{t:"TypeScript 如何设计 Class 的声明？",p:`
class Greeter {
   greeting: string;
   constructor(message:  ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-如何设计-class-的声明",a:"typescript-如何设计-class-的声明"},"184.12":{t:"TypeScript 中如何联合枚举类型的 Key?",p:`
enum str {
   A,
   B,
   C
}
type strUnion =  keyof typeof s ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-中如何联合枚举类型的-key",a:"typescript-中如何联合枚举类型的-key"},"184.13":{t:"TypeScript 中 type 和 interface 的区别?",p:"",l:"interview-questions/ts/interview-questions/index.html#typescript-中-type-和-interface-的区别",a:"typescript-中-type-和-interface-的区别"},"184.14":{t:"相同点",p:`
都可以描述 '对象' 或者 '函数'
都允许拓展(extends)

`,l:"interview-questions/ts/interview-questions/index.html#相同点",a:"相同点"},"184.15":{t:"不同点",p:`
type 可以声明基本类型，联合类型，元组
type 可以使用 typeof 获取实例的类型进行赋值
多个相同的 inte ...`,l:"interview-questions/ts/interview-questions/index.html#不同点",a:"不同点"},"184.16":{t:"TypeScript 中 ?.、??、!、!.、_、** 等符号的含义？",p:`
?. 可选链 遇到 null 和 undefined 可以立即停止表达式的运行。
?? 空值合并运算符 当左侧操作数为 n ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-中-、-、-、-、-、-等符号的含义",a:"typescript-中-、-、-、-、-、-等符号的含义"},"184.17":{t:"简单介绍一下 TypeScript 模块的加载机制？",p:`假设有一个导入语句 import { a } from &quot;moduleA&quot;;

首先，编译器会尝试定位需 ...`,l:"interview-questions/ts/interview-questions/index.html#简单介绍一下-typescript-模块的加载机制",a:"简单介绍一下-typescript-模块的加载机制"},"184.18":{t:"简单聊聊你对 TypeScript 类型兼容性的理解？",p:`ts 类型兼容：
当一个类型 Y 可以赋值给另一个类型 X 时， 我们就可以说类型 X 兼容类型 Y。也就是说两者在结构上是 ...`,l:"interview-questions/ts/interview-questions/index.html#简单聊聊你对-typescript-类型兼容性的理解",a:"简单聊聊你对-typescript-类型兼容性的理解"},"184.19":{t:"协变、逆变、双变和抗变的理解？",p:"",l:"interview-questions/ts/interview-questions/index.html#协变、逆变、双变和抗变的理解",a:"协变、逆变、双变和抗变的理解"},"184.20":{t:"协变：X = Y Y 类型可以赋值给 X 类型的情况就叫做协变，也可以说是 X 类型兼容 Y 类型",p:`interface X { name: string; age: number; }
interface Y { name: ...`,l:"interview-questions/ts/interview-questions/index.html#协变-x-y-y-类型可以赋值给-x-类型的情况就叫做协变-也可以说是-x-类型兼容-y-类型",a:"协变-x-y-y-类型可以赋值给-x-类型的情况就叫做协变-也可以说是-x-类型兼容-y-类型"},"184.21":{t:"逆变：printY = printX 函数X 类型可以赋值给函数Y 类型，因为函数Y 在调用的时候参数是按照Y类型进行约束的，但是用到的是函数X的X的属性和方法，ts检查结果是类型安全的。这种特性就叫做逆变，函数的参数有逆变的性质",p:`let printY: (y: Y) =&gt; void
printY = (y) =&gt; { console.log ...`,l:"interview-questions/ts/interview-questions/index.html#逆变-printy-printx-函数x-类型可以赋值给函数y-类型-因为函数y-在调用的时候参数是按照y类型进行约束的-但是用到的是函数x的x的属性和方法-ts检查结果是类型安全的。这种特性就叫做逆变-函数的参数有逆变的性质",a:"逆变-printy-printx-函数x-类型可以赋值给函数y-类型-因为函数y-在调用的时候参数是按照y类型进行约束的-但是用到的是函数x的x的属性和方法-ts检查结果是类型安全的。这种特性就叫做逆变-函数的参数有逆变的性质"},"184.22":{t:"双变（双向协变）：X = Y；Y = X父类型可以赋值给子类型，子类型可以赋值给父类型，既逆变又协变，叫做“双向协变”（ts2.x 之前支持这种赋值，之后 ts 加了一个编译选项 strictFunctionTypes，设置为 true 就只支持函数参数的逆变，设置为 false 则支持双向协变）",p:"",l:"interview-questions/ts/interview-questions/index.html#双变-双向协变-x-y-y-x父类型可以赋值给子类型-子类型可以赋值给父类型-既逆变又协变-叫做-双向协变-ts2-x-之前支持这种赋值-之后-ts-加了一个编译选项-strictfunctiontypes-设置为-true-就只支持函数参数的逆变-设置为-false-则支持双向协变",a:"双变-双向协变-x-y-y-x父类型可以赋值给子类型-子类型可以赋值给父类型-既逆变又协变-叫做-双向协变-ts2-x-之前支持这种赋值-之后-ts-加了一个编译选项-strictfunctiontypes-设置为-true-就只支持函数参数的逆变-设置为-false-则支持双向协变"},"184.23":{t:"抗变（不变）：非父子类型之间不会发生型变，只要类型不一样就会报错",p:"",l:"interview-questions/ts/interview-questions/index.html#抗变-不变-非父子类型之间不会发生型变-只要类型不一样就会报错",a:"抗变-不变-非父子类型之间不会发生型变-只要类型不一样就会报错"},"184.24":{t:"TypeScript 中对象展开会有什么副作用吗？",p:`展开对象后面的属性会覆盖前面的属性；
仅包含对象自身的可枚举属性，不可枚举的属性将会丢失。
`,l:"interview-questions/ts/interview-questions/index.html#typescript-中对象展开会有什么副作用吗",a:"typescript-中对象展开会有什么副作用吗"},"184.25":{t:"类型的全局声明和局部声明",p:"如果声明文件内不包含import、export，那么这个文件声明的类型就会变成全局声明。反之，若是这个文件包含了import ...",l:"interview-questions/ts/interview-questions/index.html#类型的全局声明和局部声明",a:"类型的全局声明和局部声明"},"184.26":{t:"TypeScript 中同名的 interface 或者同名的 interface 和 class 可以合并吗？",p:`同名的interface会自动合并，同名的interface和class会自动聚合。
`,l:"interview-questions/ts/interview-questions/index.html#typescript-中同名的-interface-或者同名的-interface-和-class-可以合并吗",a:"typescript-中同名的-interface-或者同名的-interface-和-class-可以合并吗"},"184.27":{t:"如何使 TypeScript 项目引入并识别编译为 JavaScript 的 npm 库包？",p:`选择安装 ts 版本，npm install @types/包名 --save；
对于没有类型的 js 库，需要编写同名的. ...`,l:"interview-questions/ts/interview-questions/index.html#如何使-typescript-项目引入并识别编译为-javascript-的-npm-库包",a:"如何使-typescript-项目引入并识别编译为-javascript-的-npm-库包"},"184.28":{t:"TypeScript 的 tsconfig.json 中有哪些配置项信息？",p:`
files 是一个数组列表，里面包含指定文件的相对或绝对路径，用来指定待编译文件，编译器在编译的时候只会编译包含在file ...`,l:"interview-questions/ts/interview-questions/index.html#typescript-的-tsconfig-json-中有哪些配置项信息",a:"typescript-的-tsconfig-json-中有哪些配置项信息"},"184.29":{t:"declare，declare global是什么？",p:`declare 是用来定义全局变量、全局函数、全局命名空间、js modules、class等
declare global ...`,l:"interview-questions/ts/interview-questions/index.html#declare-declare-global是什么",a:"declare-declare-global是什么"},"184.30":{t:"对 TypeScript 类中成员的 public、private、protected、readonly 修饰符的理解？",p:`
public: 成员都默认为public，被此限定符修饰的成员是可以被外部访问；
private: 被此限定符修饰的成员是 ...`,l:"interview-questions/ts/interview-questions/index.html#对-typescript-类中成员的-public、private、protected、readonly-修饰符的理解",a:"对-typescript-类中成员的-public、private、protected、readonly-修饰符的理解"},"184.31":{t:"keyof 和 typeof 关键字的作用？",p:`keyof 索引类型查询操作符 获取索引类型的属性名，构成联合类型。
typeof 获取一个变量或对象的类型

`,l:"interview-questions/ts/interview-questions/index.html#keyof-和-typeof-关键字的作用",a:"keyof-和-typeof-关键字的作用"},"184.32":{t:"简述工具类型 Exclude、Omit、Merge、Intersection、Overwrite的作用",p:`Exclude&lt;T, U&gt; 从 T 中排除出可分配给 U的元素。
Omit&lt;T, K&gt; 的作用是忽略 ...`,l:"interview-questions/ts/interview-questions/index.html#简述工具类型-exclude、omit、merge、intersection、overwrite的作用",a:"简述工具类型-exclude、omit、merge、intersection、overwrite的作用"},"184.33":{t:"数组定义的两种方式",p:`
type Foo= Array&lt;string&gt;;
interface Bar {
     baz: Arra ...`,l:"interview-questions/ts/interview-questions/index.html#数组定义的两种方式",a:"数组定义的两种方式"},"185.0":{t:"# 说说你对 TypeScript 的理解？与 JavaScript 的区别？",p:"",l:"interview-questions/ts/ts-understand/index.html",a:"说说你对-typescript-的理解-与-javascript-的区别"},"185.1":{t:"一、是什么",p:"TypeScript 是 JavaScript 的类型的超集，支持ES6语法，支持面向对象编程的概念，如类、接口、继承、泛型 ...",l:"interview-questions/ts/ts-understand/index.html#一、是什么",a:"一、是什么"},"185.2":{t:"二、特性",p:"",l:"interview-questions/ts/ts-understand/index.html#二、特性",a:"二、特性"},"185.3":{t:"TypeScript 的特性主要有如下",p:`
类型批注和编译时类型检查 ：在编译时批注变量类型
类型推断：ts 中没有批注变量类型会自动推断变量的类型
类型擦除：在编译 ...`,l:"interview-questions/ts/ts-understand/index.html#typescript-的特性主要有如下",a:"typescript-的特性主要有如下"},"185.4":{t:"类型批注",p:`通过类型批注提供在编译时启动类型检查的静态类型，这是可选的，而且可以忽略而使用 JavaScript 常规的动态类型
fun ...`,l:"interview-questions/ts/ts-understand/index.html#类型批注",a:"类型批注"},"185.5":{t:"类型推断",p:`当类型没有给出时，TypeScript 编译器利用类型推断来推断类型，如下：
let str = &quot;string& ...`,l:"interview-questions/ts/ts-understand/index.html#类型推断",a:"类型推断"},"185.6":{t:"接口",p:"接口简单来说就是用来描述对象的类型 数据的类型有 number、null、 string 等数据格式，对象的类型就是用接口来 ...",l:"interview-questions/ts/ts-understand/index.html#接口",a:"接口"},"185.7":{t:"三、区别",p:`
TypeScript 是 JavaScript 的超集，扩展了 JavaScript 的语法
TypeScript 可处理 ...`,l:"interview-questions/ts/ts-understand/index.html#三、区别",a:"三、区别"},"186.0":{t:"# tsconfig",p:"",l:"interview-questions/ts/tsconfig/index.html",a:"tsconfig"},"186.1":{t:"tsconfig.json 是 TypeScript 项目的配置文件",p:"tsconfig.json 包含 TypeScript 编译的相关配置，通过更改编译配置项，我们可以让 TypeScript ...",l:"interview-questions/ts/tsconfig/index.html#tsconfig-json-是-typescript-项目的配置文件",a:"tsconfig-json-是-typescript-项目的配置文件"},"186.2":{t:"重要字段",p:`files - 设置要编译的文件的名称；
include - 设置需要进行编译的文件，支持路径模式匹配；
exclude - ...`,l:"interview-questions/ts/tsconfig/index.html#重要字段",a:"重要字段"},"186.3":{t:"compilerOptions 选项",p:`{
  &quot;compilerOptions&quot;: {

    /* 基本选项 */
    &quot;t ...`,l:"interview-questions/ts/tsconfig/index.html#compileroptions-选项",a:"compileroptions-选项"},"187.0":{t:"# type of 和 key of 的区别",p:`
typeof 操作符可以用来获取一个变量或对象的类型
typeof操作符可以用来判断数据的类 型是否是某个原始类型（num ...`,l:"interview-questions/ts/type0f-keyOf/index.html",a:"type-of-和-key-of-的区别"},"188.0":{t:"# unknown 和  any 的区别",p:`
any 类型 是任何类型可以直接使用  但是要尽量不使用  因为使用any过多 会导致 失去 ts 的类型检查意义
unk ...`,l:"interview-questions/ts/unknown-any/index.html",a:"unknown-和-any-的区别"},"189.0":{t:"# void  和 never  类型的 区别",p:`
void 类型 代表返回值 是空    只要不写 return  语句都可以  或者不返回东西
void 类型 可以返回  ...`,l:"interview-questions/ts/void-never/index.html",a:"void-和-never-类型的-区别"},"190.0":{t:"# Vue3中操作dom的四种方式",p:`通过ref直接拿到dom引用
&lt;template&gt;
    &lt;div class=&quot;demo1- ...`,l:"interview-questions/vue/dom/index.html",a:"vue3中操作dom的四种方式"},"190.1":{t:"适用场景",p:`单一dom元素或者个数较少的场景 !demo1.gif
`,l:"interview-questions/vue/dom/index.html#适用场景",a:"适用场景"},"190.2":{t:"示例代码",p:`&lt;template&gt;
    &lt;div class=&quot;demo1-container&quot; ...`,l:"interview-questions/vue/dom/index.html#示例代码",a:"示例代码"},"190.3":{t:"适用场景",p:`通过v-for循环生成的不固定数量或者多种元素的场景 !demo3.gif
`,l:"interview-questions/vue/dom/index.html#适用场景",a:"适用场景"},"190.4":{t:"示例代码",p:`&lt;template&gt;
    &lt;div class=&quot;demo2-container&quot; ...`,l:"interview-questions/vue/dom/index.html#示例代码",a:"示例代码"},"190.5":{t:"适用场景",p:`多个页面都可能有操作组件dom的场景 !demo4.gif
`,l:"interview-questions/vue/dom/index.html#适用场景",a:"适用场景"},"190.6":{t:"示例代码",p:`&lt;template&gt;
    &lt;div ref=&quot;cellRef&quot; @click=&q ...`,l:"interview-questions/vue/dom/index.html#示例代码",a:"示例代码"},"191.0":{t:"# webpack 编译时样式美化",p:`!image.png
对比下没有添加特效的，如
!image.png
差别还是挺大的，尤其是我之前一直是用脚手架去搭项目，突 ...`,l:"interview-questions/webpack/beautify-compile/index.html",a:"webpack-编译时样式美化"},"191.1":{t:"webpack内置插件ProgressPlugin",p:"因为是内置的，所以直接在webpack中引入就行 const { ProgressPlugin } = require('w ...",l:"interview-questions/webpack/beautify-compile/index.html#webpack内置插件progressplugin",a:"webpack内置插件progressplugin"},"191.2":{t:"WebpackBar美化",p:`先安装WebpackBar,这个包还是很多人在用的
!image.png
yarn add webpackbar
然后在we ...`,l:"interview-questions/webpack/beautify-compile/index.html#webpackbar美化",a:"webpackbar美化"},"191.3":{t:"friendly-errors-webpack-plugin",p:`首先下载这个包
yarn add friendly-errors-webpack-plugin
然后在webpack.con ...`,l:"interview-questions/webpack/beautify-compile/index.html#friendly-errors-webpack-plugin",a:"friendly-errors-webpack-plugin"},"191.4":{t:"总结",p:"编译样式美化算是弄完了，这些其实网上都可以搜的到，但是这也是我使用webpack必走的一条路，所以记录下来。原本想着是写在上 ...",l:"interview-questions/webpack/beautify-compile/index.html#总结",a:"总结"},"192.0":{t:"# webpack中的三种hash分别是",p:"",l:"interview-questions/webpack/hash/index.html",a:"webpack中的三种hash分别是"},"192.1":{t:"hash：全局hash",p:`entry: {
    main: './src/main.js',
    console: './src/consol ...`,l:"interview-questions/webpack/hash/index.html#hash-全局hash",a:"hash-全局hash"},"192.2":{t:"chunkhash：分组hash",p:`entry: {
    main: './src/main.js',
    console: './src/consol ...`,l:"interview-questions/webpack/hash/index.html#chunkhash-分组hash",a:"chunkhash-分组hash"},"192.3":{t:"contenthash：内容hash",p:`entry: {
    main: './src/main.js',
    console: './src/consol ...`,l:"interview-questions/webpack/hash/index.html#contenthash-内容hash",a:"contenthash-内容hash"},"192.4":{t:"file-loader 配置的 hash 是上面说的哪一种 hash",p:`contenthash
`,l:"interview-questions/webpack/hash/index.html#file-loader-配置的-hash-是上面说的哪一种-hash",a:"file-loader-配置的-hash-是上面说的哪一种-hash"},"193.0":{t:"# webpack面试题",p:"",l:"interview-questions/webpack/start/index.html",a:"webpack面试题"},"193.1":{t:"Webpack 的编译过程",p:`!图片

输入：从文件系统读入代码文件；
模块递归处理：调用 Loader 转译 Module 内容，并将结果转换为 AST ...`,l:"interview-questions/webpack/start/index.html#webpack-的编译过程",a:"webpack-的编译过程"},"193.2":{t:"Webpack 的打包过程",p:`!图片

合并webpack.config.js和命令行传递的参数，形成最终的配置
解析配置，得到entry入口
读取入口文 ...`,l:"interview-questions/webpack/start/index.html#webpack-的打包过程",a:"webpack-的打包过程"},"193.3":{t:"从上述打包流程角度，Webpack 配置项大体上可分为两类",p:`
流程类：作用于打包流程某个或若干个环节，直接影响编译打包效果的配置项
工具类：打包主流程之外，提供更多工程化工具的配置项
 ...`,l:"interview-questions/webpack/start/index.html#从上述打包流程角度-webpack-配置项大体上可分为两类",a:"从上述打包流程角度-webpack-配置项大体上可分为两类"},"193.4":{t:"流程类配置项综述",p:`与打包流程强相关的配置项有

输入输出：

entry：用于定义项目入口文件，Webpack 会从这些入口文件开始按图索骥找 ...`,l:"interview-questions/webpack/start/index.html#流程类配置项综述",a:"流程类配置项综述"},"193.5":{t:"工具类配置项综述",p:`除了核心的打包功能之外，Webpack 还提供了一系列用于提升研发效率的工具，大体上可划分为：

开发效率类：

watch ...`,l:"interview-questions/webpack/start/index.html#工具类配置项综述",a:"工具类配置项综述"},"193.6":{t:"webpack treeShaking机制的原理",p:`
treeShaking 也叫摇树优化，是一种通过移除多于代码，来优化打包体积的，生产环境默认开启。
可以在代码不运行的状态 ...`,l:"interview-questions/webpack/start/index.html#webpack-treeshaking机制的原理",a:"webpack-treeshaking机制的原理"},"193.7":{t:"webpack有哪些常⻅的Loader",p:`
file-loader：把⽂件输出到⼀个⽂件夹中，在代码中通过相对 URL 去引⽤输出的⽂件
url-loader：和 f ...`,l:"interview-questions/webpack/start/index.html#webpack有哪些常⻅的loader",a:"webpack有哪些常⻅的loader"},"193.8":{t:"webpack 常见的plugin有哪些",p:"ProvidePlugin：自动加载模块，代替require和import html-webpack-plugin可以根据模 ...",l:"interview-questions/webpack/start/index.html#webpack-常见的plugin有哪些",a:"webpack-常见的plugin有哪些"},"193.9":{t:"webpack 的构建流程是什么",p:`
初始化参数：解析webpack配置参数，合并shell传入和webpack.config.js文件配置的参数,形成最后的配 ...`,l:"interview-questions/webpack/start/index.html#webpack-的构建流程是什么",a:"webpack-的构建流程是什么"},"193.10":{t:"webpack Plugin 和 Loader 的区别",p:`loader是文件加载器，能够加载资源文件，并对文件进行一些处理，如编译，压缩 等，最终一起打包到指定的文件中。
!图片

 ...`,l:"interview-questions/webpack/start/index.html#webpack-plugin-和-loader-的区别",a:"webpack-plugin-和-loader-的区别"},"194.0":{t:"# 微信小程序的实现原理",p:"",l:"interview-questions/westore/implementation/index.html",a:"微信小程序的实现原理"},"194.1":{t:"一、背景",p:"网页开发，渲染线程和脚本是互斥的，这也是为什么长时间的脚本运行可能会导致页面失去响应的原因，本质就是我们常说的 JS 是单线 ...",l:"interview-questions/westore/implementation/index.html#一、背景",a:"一、背景"},"194.2":{t:"二、通信",p:`

小程序在渲染层，宿主环境会把wxml转化成对应的JS对象


在逻辑层发生数据变更的时候，通过宿主环境提供的setDat ...`,l:"interview-questions/westore/implementation/index.html#二、通信",a:"二、通信"},"194.3":{t:"三、运行机制",p:"",l:"interview-questions/westore/implementation/index.html#三、运行机制",a:"三、运行机制"},"194.4":{t:"小程序启动运行两种情况",p:`
冷启动（重新开始）：用户首次打开或者小程序被微信主动销毁后再次打开的情况，此时小程序需要重新加载启动，即为冷启动
热启动： ...`,l:"interview-questions/westore/implementation/index.html#小程序启动运行两种情况",a:"小程序启动运行两种情况"},"194.5":{t:"需要注意",p:`
小程序没有重启的概念
当小程序进入后台，客户端会维持一段时间的运行状态，超过一定时间后会被微信主动销毁
短时间内收到系统两 ...`,l:"interview-questions/westore/implementation/index.html#需要注意",a:"需要注意"},"195.0":{t:"# 小程序攻略",p:`
该内容由银科控股融汇研发部曹俊及其团队授权提供。该团队拥有 10 多名小程序开发，深耕小程序领域，总结出了本篇优质长文。同 ...`,l:"interview-questions/westore/introduction/index.html",a:"小程序攻略"},"195.1":{t:"利用现有登录体系",p:"直接复用现有系统的登录体系，只需要在小程序端设计用户名，密码/验证码输入页面，便可以简便的实现登录，只需要保持良好的用户体验 ...",l:"interview-questions/westore/introduction/index.html#利用现有登录体系",a:"利用现有登录体系"},"195.2":{t:"利用OpenId 创建用户体系",p:"👆提过，OpenId 是一个小程序对于一个用户的标识，利用这一点我们可以轻松的实现一套基于小程序的用户体系，值得一提的是这 ...",l:"interview-questions/westore/introduction/index.html#利用openid-创建用户体系",a:"利用openid-创建用户体系"},"195.3":{t:"利用 Unionid 创建用户体系",p:"如果想实现多个小程序，公众号，已有登录系统的数据互通，可以通过获取到用户 unionid 的方式建立用户体系。因为 unio ...",l:"interview-questions/westore/introduction/index.html#利用-unionid-创建用户体系",a:"利用-unionid-创建用户体系"},"195.4":{t:"注意事项",p:`
需要获取 unionid 形式的登录体系，在以前（18年4月之前）是通过以下这种方式来实现，但后续微信做了调整（因为一进入 ...`,l:"interview-questions/westore/introduction/index.html#注意事项",a:"注意事项"},"195.5":{t:"HTTP2支持情况：模拟器与真机均不支持",p:"为了验证小程序对HTTP的支持适配情况，我找了两个服务器做测试，一个是网上搜索到支持HTTP2的服务器，一个是我本地起的一个 ...",l:"interview-questions/westore/introduction/index.html#http2支持情况-模拟器与真机均不支持",a:"http2支持情况-模拟器与真机均不支持"},"195.6":{t:"HTTP2服务器需要对小程序做兼容性适配",p:"由上可以看出，在真机与模拟器都不支持 HTTP2，但是都是成功请求的，并且 响应头 里的 HTTP 版本都变成了HTTP1. ...",l:"interview-questions/westore/introduction/index.html#http2服务器需要对小程序做兼容性适配",a:"http2服务器需要对小程序做兼容性适配"},"195.7":{t:"使用分包加载优化",p:`!sub-package
在构建小程序分包项目时，构建会输出一个或多个功能的分包，其中每个分包小程序必定含有一个主包，所谓的 ...`,l:"interview-questions/westore/introduction/index.html#使用分包加载优化",a:"使用分包加载优化"},"195.8":{t:"compiler",p:"compiler相关，也就是template预编译这块，可以参考《聊聊Vue的template编译》来搞明白。原理是一样的。 ...",l:"interview-questions/westore/introduction/index.html#compiler",a:"compiler"},"195.9":{t:"runtime",p:`目录结构
.
├── events.js //解答问题5
├── index.js //入口提供Vue对象，以及$mount ...`,l:"interview-questions/westore/introduction/index.html#runtime",a:"runtime"},"196.0":{t:"# 小程序生命周期",p:"",l:"interview-questions/westore/life-cycle/index.html",a:"小程序生命周期"},"196.1":{t:"一、是什么",p:`跟vue、react框架一样，微信小程序框架也存在生命周期，实质也是一堆会在特定时期执行的函数
小程序中，生命周期主要分成了 ...`,l:"interview-questions/westore/life-cycle/index.html#一、是什么",a:"一、是什么"},"196.2":{t:"应用的生命周期",p:"小程序的生命周期函数是在app.js里面调用的，通过App(Object)函数用来注册一个小程序，指定其小程序的生命周期回调 ...",l:"interview-questions/westore/life-cycle/index.html#应用的生命周期",a:"应用的生命周期"},"196.3":{t:"页面的生命周期",p:"页面生命周期函数就是当你每进入/切换到一个新的页面的时候，就会调用的生命周期函数，同样通过App(Object)函数用来注册 ...",l:"interview-questions/westore/life-cycle/index.html#页面的生命周期",a:"页面的生命周期"},"196.4":{t:"组件的生命周期",p:"组件的生命周期，指的是组件自身的一些函数，这些函数在特殊的时间点或遇到一些特殊的框架事件时被自动触发，通过Component ...",l:"interview-questions/westore/life-cycle/index.html#组件的生命周期",a:"组件的生命周期"},"196.5":{t:"二、有哪些",p:"",l:"interview-questions/westore/life-cycle/index.html#二、有哪些",a:"二、有哪些"},"196.6":{t:"应用的生命周期",p:`生命周期 说明

onLaunch 小程序初始化完成时触发，全局只触发一次
onShow 小程序启动，或从后台进入前台显示时 ...`,l:"interview-questions/westore/life-cycle/index.html#应用的生命周期",a:"应用的生命周期"},"196.7":{t:"页面的生命周期",p:`
生命周期 说明 作用
onLoad 生命周期回调—监听页面加载 发送请求获取数据
onShow 生命周期回调—监听页面显示 ...`,l:"interview-questions/westore/life-cycle/index.html#页面的生命周期",a:"页面的生命周期"},"196.8":{t:"组件的生命周期",p:`生命周期 说明

created 生命周期回调—监听页面加载
attached 生命周期回调—监听页面显示
ready 生命 ...`,l:"interview-questions/westore/life-cycle/index.html#组件的生命周期",a:"组件的生命周期"},"196.9":{t:"注意的是",p:`
组件实例刚刚被创建好时， created 生命周期被触发，此时，组件数据 this.data 就是在 Component  ...`,l:"interview-questions/westore/life-cycle/index.html#注意的是",a:"注意的是"},"196.10":{t:"生命周期 说明",p:`show 组件所在的页面被展示时执行
hide 组件所在的页面被隐藏时执行
代码如下：
Component({
  page ...`,l:"interview-questions/westore/life-cycle/index.html#生命周期-说明",a:"生命周期-说明"},"196.11":{t:"三、执行过程",p:"",l:"interview-questions/westore/life-cycle/index.html#三、执行过程",a:"三、执行过程"},"196.12":{t:"应⽤的⽣命周期执行过程",p:`
⽤户⾸次打开⼩程序，触发 onLaunch（全局只触发⼀次）
⼩程序初始化完成后，触发onShow⽅法，监听⼩程序显示
⼩ ...`,l:"interview-questions/westore/life-cycle/index.html#应用的生命周期执行过程",a:"应用的生命周期执行过程"},"196.13":{t:"⻚⾯⽣命周期的执行过程",p:`
⼩程序注册完成后，加载⻚⾯，触发onLoad⽅法
⻚⾯载⼊后触发onShow⽅法，显示⻚⾯
⾸次显示⻚⾯，会触发onRea ...`,l:"interview-questions/westore/life-cycle/index.html#⻚面生命周期的执行过程",a:"⻚面生命周期的执行过程"},"196.14":{t:"当存在也应用生命周期和页面周期的时候，相关的执行顺序如下",p:`
打开小程序：(App)onLaunch --&gt; (App)onShow --&gt; (Pages)onLoad - ...`,l:"interview-questions/westore/life-cycle/index.html#当存在也应用生命周期和页面周期的时候-相关的执行顺序如下",a:"当存在也应用生命周期和页面周期的时候-相关的执行顺序如下"},"197.0":{t:"# 微信小程序的登录流程",p:"",l:"interview-questions/westore/login/index.html",a:"微信小程序的登录流程"},"197.1":{t:"一、背景",p:`传统的web开发实现登陆功能，一般的做法是输入账号密码、或者输入手机号及短信验证码进行登录
服务端校验用户信息通过之后，下发 ...`,l:"interview-questions/westore/login/index.html#一、背景",a:"一、背景"},"197.2":{t:"实现小程序用户体系主要涉及到openid和code的概念",p:`
调用wx.login()方法会生成code，将code作为参数传递给微信服务器指定接口，就可以获取用户的openid
对于 ...`,l:"interview-questions/westore/login/index.html#实现小程序用户体系主要涉及到openid和code的概念",a:"实现小程序用户体系主要涉及到openid和code的概念"},"197.3":{t:"二、流程",p:"",l:"interview-questions/westore/login/index.html#二、流程",a:"二、流程"},"197.4":{t:"微信小程序登陆具体实现的逻辑如下图所示",p:`!图片

通过 wx.login() 获取到用户的code判断用户是否授权读取用户信息，调用wx.getUserInfo 读 ...`,l:"interview-questions/westore/login/index.html#微信小程序登陆具体实现的逻辑如下图所示",a:"微信小程序登陆具体实现的逻辑如下图所示"},"197.5":{t:"更加详细的功能图如下所示",p:`!图片
`,l:"interview-questions/westore/login/index.html#更加详细的功能图如下所示",a:"更加详细的功能图如下所示"},"197.6":{t:"三、扩展",p:"实际业务中，我们还需要登录态是否过期，通常的做法是在登录态（临时令牌）中保存有效期数据，该有效期数据应该在服务端校验登录态时 ...",l:"interview-questions/westore/login/index.html#三、扩展",a:"三、扩展"},"197.7":{t:"这种方式的好处是不需要小程序服务端来参与校验，而是在小程序端调用AP，流程如下所示",p:`!图片
`,l:"interview-questions/westore/login/index.html#这种方式的好处是不需要小程序服务端来参与校验-而是在小程序端调用ap-流程如下所示",a:"这种方式的好处是不需要小程序服务端来参与校验-而是在小程序端调用ap-流程如下所示"},"198.0":{t:"# 提高微信小程序的应用速度的手段有哪些？",p:"",l:"interview-questions/westore/optimize/index.html",a:"提高微信小程序的应用速度的手段有哪些"},"198.1":{t:"一、是什么",p:"",l:"interview-questions/westore/optimize/index.html#一、是什么",a:"一、是什么"},"198.2":{t:"小程序启动会常常遇到如下图场景",p:`!图片
这是因为，小程序首次启动前，微信会在小程序启动前为小程序准备好通用的运行环境，如运行中的线程和一些基础库的初始化
然 ...`,l:"interview-questions/westore/optimize/index.html#小程序启动会常常遇到如下图场景",a:"小程序启动会常常遇到如下图场景"},"198.3":{t:"整体流程如下图",p:`!图片
`,l:"interview-questions/westore/optimize/index.html#整体流程如下图",a:"整体流程如下图"},"198.4":{t:"二、手段",p:`围绕上图小程序的启动流程， 我们可以从加载、渲染两个纬度进行切入：
`,l:"interview-questions/westore/optimize/index.html#二、手段",a:"二、手段"},"198.5":{t:"加载",p:`提升体验最直接的方法是控制小程序包的大小，常见手段有如下：

代码包的体积压缩可以通过勾选开发者工具中“上传代码时，压缩代码 ...`,l:"interview-questions/westore/optimize/index.html#加载",a:"加载"},"198.6":{t:"渲染",p:`关于微信小程序首屏渲染优化的手段如下：

请求可以在页面onLoad就加载，不需要等页面ready后在异步请求数据
尽量减少 ...`,l:"interview-questions/westore/optimize/index.html#渲染",a:"渲染"},"198.7":{t:"三、总结",p:"",l:"interview-questions/westore/optimize/index.html#三、总结",a:"三、总结"},"198.8":{t:"小程序启动加载性能",p:`
控制代码包的大小
分包加载
首屏体验（预请求，利用缓存，避免白屏，及时反馈

`,l:"interview-questions/westore/optimize/index.html#小程序启动加载性能",a:"小程序启动加载性能"},"198.9":{t:"小程序渲染性能",p:`
避免不当的使用setData
使用自定义组件

`,l:"interview-questions/westore/optimize/index.html#小程序渲染性能",a:"小程序渲染性能"},"199.0":{t:"# 微信小程序的支付流程",p:"",l:"interview-questions/westore/pay/index.html",a:"微信小程序的支付流程"},"199.1":{t:"一、前言",p:`微信小程序为电商类小程序，提供了非常完善、优秀、安全的支付功能
在小程序内可调用微信的API完成支付功能，方便、快捷
`,l:"interview-questions/westore/pay/index.html#一、前言",a:"一、前言"},"199.2":{t:"场景如下图所示",p:`!图片
!图片

用户通过分享或扫描二维码进入商户小程序，用户选择购买，完成选购流程
调起微信支付控件，用户开始输入支付密码 ...`,l:"interview-questions/westore/pay/index.html#场景如下图所示",a:"场景如下图所示"},"199.3":{t:"二、流程",p:`以电商小程序为例
支付流程图如下所示：
!图片
`,l:"interview-questions/westore/pay/index.html#二、流程",a:"二、流程"},"199.4":{t:"具体的做法",p:`
打开某小程序，点击直接下单
wx.login获取用户临时登录凭证code，发送到后端服务器换取openId 在下单时，小程 ...`,l:"interview-questions/westore/pay/index.html#具体的做法",a:"具体的做法"},"199.5":{t:"参数表如下所示",p:`!图片
`,l:"interview-questions/westore/pay/index.html#参数表如下所示",a:"参数表如下所示"},"199.6":{t:"三、结束",p:`小程序支付和以往的网页、APP微信支付大同小异，可以说小程序的支付变得更加简洁，不需要设置支付目录、域名授权等操作
`,l:"interview-questions/westore/pay/index.html#三、结束",a:"三、结束"},"200.0":{t:"# 小程序面试题",p:"",l:"interview-questions/westore/principle/index.html",a:"小程序面试题"},"200.1":{t:"小程序是双线程架构还是单线程架构？",p:`
小程序的架构模型有别与传统web单线程架构，小程序为双线程架构。
微信小程序的渲染层与逻辑层分别由两个线程管理，渲染层的界 ...`,l:"interview-questions/westore/principle/index.html#小程序是双线程架构还是单线程架构",a:"小程序是双线程架构还是单线程架构"},"200.2":{t:"小程序中 为什么不能在 onLaunch 里面阻止页面显示 达到有必须要最先请求的 接口响应 在展示 小程序页面",p:`
因为小程序是双线程架构
一个线程解析 运行 js
一个线程用来渲染 webview
所以不像 web 端等 单线程 架构  ...`,l:"interview-questions/westore/principle/index.html#小程序中-为什么不能在-onlaunch-里面阻止页面显示-达到有必须要最先请求的-接口响应-在展示-小程序页面",a:"小程序中-为什么不能在-onlaunch-里面阻止页面显示-达到有必须要最先请求的-接口响应-在展示-小程序页面"},"200.3":{t:"解决方案",p:`
通过自定义 tab-bar  nav-bar 还有一个每个页面都在使用的 公共组件可以实现
统一通过 变量所有组件默认隐藏 ...`,l:"interview-questions/westore/principle/index.html#解决方案",a:"解决方案"},"200.4":{t:"小程序 view text 到底是什么 ？ 又是如何实现的 ？",p:`
小程序 的 view text 标签是通过  渲染层中编译后的 Exparser 自定义组件标记
会通过 $gwx() 函 ...`,l:"interview-questions/westore/principle/index.html#小程序-view-text-到底是什么-又是如何实现的",a:"小程序-view-text-到底是什么-又是如何实现的"},"200.5":{t:"小程序中 为什么不能直接操作 dom 节点？",p:`
为了解决安全管控问题，小程序阻止开发者使用一些浏览器提供的比如跳转页面、操作DOM、动态执行脚本的开放性接口。
如果这些东 ...`,l:"interview-questions/westore/principle/index.html#小程序中-为什么不能直接操作-dom-节点",a:"小程序中-为什么不能直接操作-dom-节点"},"200.6":{t:"小程序 是单页面应用还是多页面应用 ？  为什么 ？",p:`
多页面应用  为了更好的让交互和原生 app 一样
左右滑动的同时 用户可以同时看到 两个页面

`,l:"interview-questions/westore/principle/index.html#小程序-是单页面应用还是多页面应用-为什么",a:"小程序-是单页面应用还是多页面应用-为什么"},"200.7":{t:"小程序中 为什么限制了 页面栈 最多数量？",p:`
因为小程序是多页面架构设计 为了更好的让交互和原生 app 一样
如果不限制 页面栈 数量 就会导致性能问题 所以限制了  ...`,l:"interview-questions/westore/principle/index.html#小程序中-为什么限制了-页面栈-最多数量",a:"小程序中-为什么限制了-页面栈-最多数量"},"200.8":{t:"小程序中 是怎么实现 自适应 rpx  ？",p:"rpx （responsive pixel）直译为：响应像素。写过小程序的都知道这个单位，可以自动适配所有大小的屏幕，而不必 ...",l:"interview-questions/westore/principle/index.html#小程序中-是怎么实现-自适应-rpx",a:"小程序中-是怎么实现-自适应-rpx"},"200.9":{t:"编译",p:`WXSS并不可以直接执行在webview层进行渲染，而是通过了一层编译。我们接下来就带大家编译一个WXSS看一下。
!图片
`,l:"interview-questions/westore/principle/index.html#编译",a:"编译"},"200.10":{t:"WCSC",p:"编译的工具名字叫WCSC，这个编译的过程是在微信开发者工具端执行的，那么这个编译工具在哪呢，我们来找一下。在微信开发者工具的 ...",l:"interview-questions/westore/principle/index.html#wcsc",a:"wcsc"},"200.11":{t:"三部分",p:`三部分加一起就是完整的代码。
第一部分：设备信息。
这个部分用于获取一套基本设备信息，包含设备高度、设备宽度、物理像素与CS ...`,l:"interview-questions/westore/principle/index.html#三部分",a:"三部分"},"200.12":{t:"第三部分：setCssToHead",p:`!图片
可以看到其中在index.wxss中写rpx单位的属性都变成了区间的样子[0, 128]、[0, 20]。其他单位并 ...`,l:"interview-questions/westore/principle/index.html#第三部分-setcsstohead",a:"第三部分-setcsstohead"},"200.13":{t:"小程序 分别有 哪三种 框架 ？",p:"",l:"interview-questions/westore/principle/index.html#小程序-分别有-哪三种-框架",a:"小程序-分别有-哪三种-框架"},"200.14":{t:"预编译",p:"什么是预编译的框架呢？还记得我们讲解WXSS的时候，WXSS的文件会编译成js再执行。像这种执行前就进行编译的手段就叫做预编 ...",l:"interview-questions/westore/principle/index.html#预编译",a:"预编译"},"200.15":{t:"半编译 半运行",p:`半编译半运行框架有什么呢，美团开发的mpvue。
那么就可以修改patch流程不直接生成真实node，而是触发setData ...`,l:"interview-questions/westore/principle/index.html#半编译-半运行",a:"半编译-半运行"},"200.16":{t:"运行时框架",p:"在小程序双线程架构中，渲染层是没有开放任何操作DOM的api给逻辑层的。逻辑层是没有办法通过操作DOM来改变视图的。所以我们 ...",l:"interview-questions/westore/principle/index.html#运行时框架",a:"运行时框架"},"201.0":{t:"# 微信小程序的发布流程",p:"",l:"interview-questions/westore/release/index.html",a:"微信小程序的发布流程"},"201.1":{t:"一、背景",p:"在中大型的公司里，人员的分工非常仔细，一般会有不同岗位角色的员工同时参与同一个小程序项目。为此，小程序平台设计了不同的权限管 ...",l:"interview-questions/westore/release/index.html#一、背景",a:"一、背景"},"201.2":{t:"二、流程",p:"",l:"interview-questions/westore/release/index.html#二、流程",a:"二、流程"},"201.3":{t:"关于发布的流程，主要分成了三个部分",p:`
上传代码
提交审核
发布版本

`,l:"interview-questions/westore/release/index.html#关于发布的流程-主要分成了三个部分",a:"关于发布的流程-主要分成了三个部分"},"201.4":{t:"上传代码",p:`在开发者工具中，可以点击代码上传功能：
!图片
然后就可以填写版本信息：
!图片
然后点击上传，编译器则会提示上传代码成功
`,l:"interview-questions/westore/release/index.html#上传代码",a:"上传代码"},"201.5":{t:"提交审核",p:`代码上传完毕，就可以登陆微信公众号的官网首页，点击【开发管理】，查看应用详情：
!图片
提交审核过程需要填写审核信息，如下图 ...`,l:"interview-questions/westore/release/index.html#提交审核",a:"提交审核"},"201.6":{t:"发布版本",p:`当审核通过之后，即可提交发布
!图片
发布成功之后则如下：
!图片
`,l:"interview-questions/westore/release/index.html#发布版本",a:"发布版本"},"201.7":{t:"三、扩展",p:"",l:"interview-questions/westore/release/index.html#三、扩展",a:"三、扩展"},"201.8":{t:"上述是最简单的小程序代码发布的流程，通常的流程如下",p:`!图片

代码管理服务器上新建分支
开发测试新需求
测试完成后，将本地分支合并到 master 分支
拉取 master 分 ...`,l:"interview-questions/westore/release/index.html#上述是最简单的小程序代码发布的流程-通常的流程如下",a:"上述是最简单的小程序代码发布的流程-通常的流程如下"},"202.0":{t:"# 微信小程序中路由跳转的方式有哪些？区别？",p:"",l:"interview-questions/westore/router-navigate/index.html",a:"微信小程序中路由跳转的方式有哪些-区别"},"202.1":{t:"一、是什么",p:"微信小程序拥有web网页和Application共同的特征，我们的页面都不是孤立存在的，而是通过和其他页面进行交互，来共同完 ...",l:"interview-questions/westore/router-navigate/index.html#一、是什么",a:"一、是什么"},"202.2":{t:"二、有哪些",p:"",l:"interview-questions/westore/router-navigate/index.html#二、有哪些",a:"二、有哪些"},"202.3":{t:"常见的微信小程序页面跳转方式有如下",p:`
wx.navigateTo(Object)
wx.redirectTo(Object)
wx.switchTab(Obje ...`,l:"interview-questions/westore/router-navigate/index.html#常见的微信小程序页面跳转方式有如下",a:"常见的微信小程序页面跳转方式有如下"},"202.4":{t:"wx.navigateTo(Object)",p:"wx.navigateTo()用于保留当前页面、跳转到应用内的某个页面，使用 wx.navigateBack可以返回到原页面 ...",l:"interview-questions/westore/router-navigate/index.html#wx-navigateto-object",a:"wx-navigateto-object"},"202.5":{t:"参数表如下所示",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#参数表如下所示",a:"参数表如下所示"},"202.6":{t:"流程图如下",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#流程图如下",a:"流程图如下"},"202.7":{t:"wx.redirectTo(Object)",p:"重定向，当页面过多时，被保留页面会挤占微信分配给小程序的内存，或是达到微信所限制的 10 层页面栈的情况下，我们应该考虑选择 ...",l:"interview-questions/westore/router-navigate/index.html#wx-redirectto-object",a:"wx-redirectto-object"},"202.8":{t:"参数表如下所示",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#参数表如下所示",a:"参数表如下所示"},"202.9":{t:"流程图如下所示",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#流程图如下所示",a:"流程图如下所示"},"202.10":{t:"wx.switchTab(Object)",p:`跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面
`,l:"interview-questions/westore/router-navigate/index.html#wx-switchtab-object",a:"wx-switchtab-object"},"202.11":{t:"参数表如下所示",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#参数表如下所示",a:"参数表如下所示"},"202.12":{t:"wx.navigateBack(Object)",p:"wx.navigateBack() 用于关闭当前页面，并返回上一页面或多级页面，开发者可通过 getCurrentPages ...",l:"interview-questions/westore/router-navigate/index.html#wx-navigateback-object",a:"wx-navigateback-object"},"202.13":{t:"参数表如下",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#参数表如下",a:"参数表如下"},"202.14":{t:"wx.reLaunch(Object)",p:`关闭所有页面，打开到应用内的某个页面，返回的时候跳到首页
`,l:"interview-questions/westore/router-navigate/index.html#wx-relaunch-object",a:"wx-relaunch-object"},"202.15":{t:"参数表如下所示",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#参数表如下所示",a:"参数表如下所示"},"202.16":{t:"流程图如下所示",p:`!图片
`,l:"interview-questions/westore/router-navigate/index.html#流程图如下所示",a:"流程图如下所示"},"202.17":{t:"三、总结",p:"",l:"interview-questions/westore/router-navigate/index.html#三、总结",a:"三、总结"},"202.18":{t:"关于上述五种跳转方式，做下总结",p:`
navigateTo 保留当前页面，跳转到应用内的某个页面，使用 wx.navigateBack 可以返回到原页
redi ...`,l:"interview-questions/westore/router-navigate/index.html#关于上述五种跳转方式-做下总结",a:"关于上述五种跳转方式-做下总结"},"202.19":{t:"其中关于它们的页面栈的关系如下",p:`
avigateTo 新页面入栈
redirectTo 当前页面出栈，新页面入栈
navigateBack 页面不断出栈，直 ...`,l:"interview-questions/westore/router-navigate/index.html#其中关于它们的页面栈的关系如下",a:"其中关于它们的页面栈的关系如下"},"203.0":{t:"# 微信小程序的理解",p:"",l:"interview-questions/westore/understand/index.html",a:"微信小程序的理解"},"203.1":{t:"一、是什么",p:`2017年，微信正式推出了小程序，允许外部开发者在微信内部运行自己的代码，开展业务
截至目前，小程序已经成为国内前端的一个重 ...`,l:"interview-questions/westore/understand/index.html#一、是什么",a:"一、是什么"},"203.2":{t:"二、背景",p:"⼩程序并⾮凭空冒出来的⼀个概念，当微信中的 WebView 逐渐成为移动 Web的⼀个重要⼊⼝时，微信就有相关的 JS-SD ...",l:"interview-questions/westore/understand/index.html#二、背景",a:"二、背景"},"203.3":{t:"其中相比H5，小程序与其的区别有如下",p:`
运⾏环境：⼩程序基于浏览器内核重构的内置解析器
系统权限：⼩程序能获得更多的系统权限，如⽹络通信状态、数据缓存能⼒等
渲染 ...`,l:"interview-questions/westore/understand/index.html#其中相比h5-小程序与其的区别有如下",a:"其中相比h5-小程序与其的区别有如下"},"203.4":{t:"三、优缺点",p:"",l:"interview-questions/westore/understand/index.html#三、优缺点",a:"三、优缺点"},"203.5":{t:"优点",p:`
随搜随用，用完即走：使得小程序可以代替许多APP，或是做APP的整体嫁接，或是作为阉割版功能的承载体
流量大，易接受：小程 ...`,l:"interview-questions/westore/understand/index.html#优点",a:"优点"},"203.6":{t:"缺点",p:`
用户留存：及相关数据显示，小程序的平均次日留存在13%左右，但是双周留存骤降到仅有1%
体积限制：微信小程序只有2M的大小 ...`,l:"interview-questions/westore/understand/index.html#缺点",a:"缺点"},"204.0":{t:"# Axios 源码介绍",p:"axios是个很优秀的项目，到2022/2/25日为止，GitHub上有着91.3k的start。而它的源码也不多，所以很值 ...",l:"source/axios/start/index.html",a:"axios-源码介绍"},"204.1":{t:"1.axios是怎么实现可以创建多个实例的",p:"打开lib/axios.js这个入口文件的源码，可以看到这个文件代码很少，主要的一个函数就是createInstance，这 ...",l:"source/axios/start/index.html#_1-axios是怎么实现可以创建多个实例的",a:"_1-axios是怎么实现可以创建多个实例的"},"204.2":{t:"2.axios的拦截器是怎么实现的",p:`axios拦截器的源码主要在Axios.js和InterceptorManager.js文件中。
我们先来看看Axios函数 ...`,l:"source/axios/start/index.html#_2-axios的拦截器是怎么实现的",a:"_2-axios的拦截器是怎么实现的"},"204.3":{t:"3.axios取消请求是怎么实现的",p:`先来看看取消请求是如何使用的：
const CancelToken = axios.CancelToken;
const s ...`,l:"source/axios/start/index.html#_3-axios取消请求是怎么实现的",a:"_3-axios取消请求是怎么实现的"},"204.4":{t:"4.axios是怎么做到防`xsrf(csrf)`攻击的",p:"在axios使用很简单，在请求上添加配置即可\n//`xsrfCookieName`是要用作 xsrf 令牌的值的cookie ...",l:"source/axios/start/index.html#_4-axios是怎么做到防-xsrf-csrf-攻击的",a:"_4-axios是怎么做到防-xsrf-csrf-攻击的"},"204.5":{t:"5.axios的优缺点",p:`axios的优点有很多，比如

体积小
支持请求响应拦截
支持取消请求
返回自动转换JSON
兼容性好
支持node
等等. ...`,l:"source/axios/start/index.html#_5-axios的优缺点",a:"_5-axios的优缺点"},"204.6":{t:"最后",p:"除了以上的内容，axios还有很多值得学习的地方，这里就不一一讲解了。比如axios对config配置的合并、处理；对请求响 ...",l:"source/axios/start/index.html#最后",a:"最后"},"205.0":{t:"# React 17 vs React 18 变化",p:`React 17 更新
首先，官方发布日志称react17最大的特点就是无新特性，这个版本主要目标是让React能渐进式升级 ...`,l:"source/react/17vs18/index.html",a:"react-17-vs-react-18-变化"},"205.1":{t:"去除事件池",p:`在React17之前，如果使用异步的方式来获取事件e对象，会发现合成事件对象被销毁，如下：
function App() { ...`,l:"source/react/17vs18/index.html#去除事件池",a:"去除事件池"},"205.2":{t:"事件委托到根节点",p:`reactv17前，React 将事件委托到 document 上，在react17中，则委托到根节点
const root ...`,l:"source/react/17vs18/index.html#事件委托到根节点",a:"事件委托到根节点"},"205.3":{t:"更贴近原生浏览器事件",p:`对事件系统进行了一些较小的更改：

onScroll 事件不再冒泡，以防止出现常见的混淆
React 的 onFocus 和 ...`,l:"source/react/17vs18/index.html#更贴近原生浏览器事件",a:"更贴近原生浏览器事件"},"205.4":{t:"全新的 JSX 转换器",p:`总结下来就是两点：

用 jsx() 函数替换 React.createElement()
运行时自动引入 jsx() 函数 ...`,l:"source/react/17vs18/index.html#全新的-jsx-转换器",a:"全新的-jsx-转换器"},"205.5":{t:"副作用清理时机",p:`useEffect(() =&gt; {
  // This is the effect itself.
  return  ...`,l:"source/react/17vs18/index.html#副作用清理时机",a:"副作用清理时机"},"205.6":{t:"返回一致的 undefined 错误",p:"在v17以前，组件返回undefined始终是一个错误。但是有漏网之鱼，React 只对类组件和函数组件执行此操作，但并不会 ...",l:"source/react/17vs18/index.html#返回一致的-undefined-错误",a:"返回一致的-undefined-错误"},"205.7":{t:"原生组件栈",p:`v16中错误调用栈的缺点：

缺少源码位置追溯，在控制台无法点击跳转到到出错的地方
无法适用于生产环境

整体来说不如原生的 ...`,l:"source/react/17vs18/index.html#原生组件栈",a:"原生组件栈"},"205.8":{t:"移除私有导出 API",p:`v17 删除了一些私有 API，主要是 React Native for Web 使用的
另外，还删除了ReactTestU ...`,l:"source/react/17vs18/index.html#移除私有导出-api",a:"移除私有导出-api"},"205.9":{t:"启发式更新算法更新",p:`引用 React17新特性：启发式更新算法

React16的expirationTimes模型只能区分是否&gt;=exp ...`,l:"source/react/17vs18/index.html#启发式更新算法更新",a:"启发式更新算法更新"},"205.10":{t:"并发模式",p:`v18的新特性是使用现代浏览器的特性构建的，彻底放弃对 IE 的支持。
v17 和 v18 的区别就是：从同步不可中断更新变 ...`,l:"source/react/17vs18/index.html#并发模式",a:"并发模式"},"205.11":{t:"更新 render API",p:"v18 使用 ReactDOM.createRoot() 创建一个新的根元素进行渲染，使用该 API，会自动启用并发模式。如 ...",l:"source/react/17vs18/index.html#更新-render-api",a:"更新-render-api"},"205.12":{t:"自动批处理",p:`批处理是指 React 将多个状态更新，聚合到一次 render 中执行，以提升性能
在v17的批处理只会在事件处理函数中实 ...`,l:"source/react/17vs18/index.html#自动批处理",a:"自动批处理"},"205.13":{t:"Suspense 支持 SSR",p:`SSR 一次页面渲染的流程：

服务器获取页面所需数据
将组件渲染成 HTML 形式作为响应返回
客户端加载资源
（hydr ...`,l:"source/react/17vs18/index.html#suspense-支持-ssr",a:"suspense-支持-ssr"},"205.14":{t:"startTransition",p:"Transitions 是 React 18 引入的一个全新的并发特性。它允许你将标记更新作为一个 transitions（ ...",l:"source/react/17vs18/index.html#starttransition",a:"starttransition"},"205.15":{t:"useTransition",p:"当有过渡任务（非紧急更新）时，我们可能需要告诉用户什么时候当前处于 pending（过渡） 状态，因此v18提供了一个带有i ...",l:"source/react/17vs18/index.html#usetransition",a:"usetransition"},"205.16":{t:"useDeferredValue",p:"useDeferredValue 和 useTransition 一样，都是标记了一次非紧急更新。useTransition ...",l:"source/react/17vs18/index.html#usedeferredvalue",a:"usedeferredvalue"},"205.17":{t:"useId",p:"useId支持同一个组件在客户端和服务端生成相同的唯一的 ID，避免 hydration 的不匹配，原理就是每个 id 代表 ...",l:"source/react/17vs18/index.html#useid",a:"useid"},"205.18":{t:"提供给第三方库的 Hook",p:`这两个 Hook 日常开发基本用不到，简单带过
`,l:"source/react/17vs18/index.html#提供给第三方库的-hook",a:"提供给第三方库的-hook"},"205.19":{t:"useSyncExternalStore",p:"useSyncExternalStore 一般是第三方状态管理库使用如 Redux。它通过强制的同步状态更新，使得外部 st ...",l:"source/react/17vs18/index.html#usesyncexternalstore",a:"usesyncexternalstore"},"205.20":{t:"useInsertionEffect",p:"useInsertionEffect 仅限于 css-in-js 库使用。它允许 css-in-js 库解决在渲染中注入样式 ...",l:"source/react/17vs18/index.html#useinsertioneffect",a:"useinsertioneffect"},"206.0":{t:"# 协调与调度",p:"其实在React执行过程中，会有数不清的任务要去执行，但是他们会有一个优先级的判定，假如两个事件的优先级一样，那么React ...",l:"source/react/coordination-scheduling/index.html",a:"协调与调度"},"206.1":{t:"requestUpdateLane",p:"requestEventTime位每一个需要执行的任务打上了触发更新时间标签，那么任务的优先级还需要进一步的确立，reque ...",l:"source/react/coordination-scheduling/index.html#requestupdatelane",a:"requestupdatelane"},"206.2":{t:"findUpdateLane",p:`export function findUpdateLane(
  lanePriority: LanePriority,  ...`,l:"source/react/coordination-scheduling/index.html#findupdatelane",a:"findupdatelane"},"206.3":{t:"lanePriority: LanePriority",p:`export opaque type LanePriority =
  | 0
  | 1
  | 2
  | 3
  |  ...`,l:"source/react/coordination-scheduling/index.html#lanepriority-lanepriority",a:"lanepriority-lanepriority"},"206.4":{t:"createUpdate",p:"export function createUpdate(eventTime: number, lane: Lane): U ...",l:"source/react/coordination-scheduling/index.html#createupdate",a:"createupdate"},"206.5":{t:"enqueueUpdate",p:"export function enqueueUpdate&lt;State&gt;(fiber: Fiber, updat ...",l:"source/react/coordination-scheduling/index.html#enqueueupdate",a:"enqueueupdate"},"206.6":{t:"总结",p:"React通过获取事件的优先级，处理具有同样优先级的事件，创建更新对象并与fiber的更新队列关联起来。到这一步update ...",l:"source/react/coordination-scheduling/index.html#总结",a:"总结"},"206.7":{t:"协调与调度",p:`协调与调度的流程大致如图所示：
!在这里插入图片描述
`,l:"source/react/coordination-scheduling/index.html#协调与调度",a:"协调与调度"},"206.8":{t:"reconciler流程",p:"React的reconciler流程以scheduleUpdateOnFiber为入口，并在checkForNestedUp ...",l:"source/react/coordination-scheduling/index.html#reconciler流程",a:"reconciler流程"},"206.9":{t:"同步任务类型执行机制",p:"当任务的类型为同步任务，并且当前的js主线程空闲，会通过 performSyncWorkOnRoot(root) 方法开始执 ...",l:"source/react/coordination-scheduling/index.html#同步任务类型执行机制",a:"同步任务类型执行机制"},"206.10":{t:"异步任务类型执行机制",p:"异步任务则会去执行performConcurrentWorkOnRoot，进而去执行renderRootConcurrent ...",l:"source/react/coordination-scheduling/index.html#异步任务类型执行机制",a:"异步任务类型执行机制"},"206.11":{t:"shouldYield",p:`// packages\\scheduler\\src\\SchedulerPostTask.js
export function ...`,l:"source/react/coordination-scheduling/index.html#shouldyield",a:"shouldyield"},"206.12":{t:"performUnitOfWork",p:`function performUnitOfWork(unitOfWork: Fiber): void {
  // The ...`,l:"source/react/coordination-scheduling/index.html#performunitofwork",a:"performunitofwork"},"206.13":{t:"beginWork",p:`!在这里插入图片描述 !在这里插入图片描述
我们可以看到beginWork就是originBeginWork得实际执行。我们 ...`,l:"source/react/coordination-scheduling/index.html#beginwork",a:"beginwork"},"206.14":{t:"completeUnitOfWork",p:`当遍历完毕执行beginWork，遍历完毕之后就会走completeUnitOfWork。
function complet ...`,l:"source/react/coordination-scheduling/index.html#completeunitofwork",a:"completeunitofwork"},"206.15":{t:"scheduler流程",p:`在这里应该有很多人不明白，协调和调度是什么意思，通俗来讲：

协调就是协同合作
调度就是执行命令

所以在React中协调就 ...`,l:"source/react/coordination-scheduling/index.html#scheduler流程",a:"scheduler流程"},"206.16":{t:"performWorkUntilDeadline",p:`  const performWorkUntilDeadline = () =&gt; {
    if (schedule ...`,l:"source/react/coordination-scheduling/index.html#performworkuntildeadline",a:"performworkuntildeadline"},"206.17":{t:"总结",p:"本文讲了React在状态改变的时候，会根据当前任务优先级，等一些列操作去创建workInProgress fiber链表树， ...",l:"source/react/coordination-scheduling/index.html#总结",a:"总结"},"207.0":{t:"# 事件机制",p:"",l:"source/react/event-mechanism/index.html",a:"事件机制"},"207.1":{t:"React 为什么有自己的事件系统？",p:"首先，对于不同的浏览器，对事件存在不同的兼容性，React 想实现一个兼容全浏览器的框架， 为了实现这个目标就需要创建一个兼 ...",l:"source/react/event-mechanism/index.html#react-为什么有自己的事件系统",a:"react-为什么有自己的事件系统"},"207.2":{t:"冒泡阶段和捕获阶段",p:`
冒泡阶段：开发者正常给 React 绑定的事件比如 onClick，onChange，默认会在模拟冒泡阶段执行。
捕获阶段 ...`,l:"source/react/event-mechanism/index.html#冒泡阶段和捕获阶段",a:"冒泡阶段和捕获阶段"},"207.3":{t:"阻止冒泡",p:`React 中如果想要阻止事件向上冒泡，可以用 e.stopPropagation()

React 阻止冒泡和原生事件中的 ...`,l:"source/react/event-mechanism/index.html#阻止冒泡",a:"阻止冒泡"},"207.4":{t:"什么是事件合成 ？",p:`
第一个部分是事件合成系统，初始化会注册不同的事件插件。
第二个就是在一次渲染过程中，对事件标签中事件的收集，向 conta ...`,l:"source/react/event-mechanism/index.html#什么是事件合成",a:"什么是事件合成"},"207.5":{t:"事件合成概念",p:`
React 的事件不是绑定在元素上的，而是统一绑定在顶部容器上，在 v17 之前是绑定在 document 上的，在 v1 ...`,l:"source/react/event-mechanism/index.html#事件合成概念",a:"事件合成概念"},"207.6":{t:"事件插件机制",p:"React 有一种事件插件机制，比如上述 onClick 和 onChange ，会有不同的事件插件 SimpleEvent ...",l:"source/react/event-mechanism/index.html#事件插件机制",a:"事件插件机制"},"207.7":{t:"第一个 registrationNameModules",p:`const registrationNameModules = {
    onBlur: SimpleEventPlugi ...`,l:"source/react/event-mechanism/index.html#第一个-registrationnamemodules",a:"第一个-registrationnamemodules"},"207.8":{t:"第二个registrationNameDependencies",p:`{
    onBlur: ['blur'],
    onClick: ['click'],
    onClickCap ...`,l:"source/react/event-mechanism/index.html#第二个registrationnamedependencies",a:"第二个registrationnamedependencies"},"207.9":{t:"为什么要用不同的事件插件处理不同的 React 事件",p:"首先对于不同的事件，有不同的处理逻辑；对应的事件源对象也有所不同，React 的事件和事件源是自己合成的，所以对于不同事件需 ...",l:"source/react/event-mechanism/index.html#为什么要用不同的事件插件处理不同的-react-事件",a:"为什么要用不同的事件插件处理不同的-react-事件"},"207.10":{t:"为什么不能用 return false 来阻止事件的默认行为？",p:`
因为React 重写了事件
React 中给元素的事件并不是真正的事件处理函数。所以导致 return false 方法在 ...`,l:"source/react/event-mechanism/index.html#为什么不能用-return-false-来阻止事件的默认行为",a:"为什么不能用-return-false-来阻止事件的默认行为"},"207.11":{t:"事件是绑定在真实的dom上吗？如何不是绑定在哪里？",p:`
React 的事件不是绑定在元素上的，而是统一绑定在顶部容器上，在 v17 之前是绑定在 document 上的，在 v1 ...`,l:"source/react/event-mechanism/index.html#事件是绑定在真实的dom上吗-如何不是绑定在哪里",a:"事件是绑定在真实的dom上吗-如何不是绑定在哪里"},"207.12":{t:"1.为什么要手动绑定this",p:`通过事件触发过程的分析，dispatchEvent调用了invokeGuardedCallback方法。
function  ...`,l:"source/react/event-mechanism/index.html#_1-为什么要手动绑定this",a:"_1-为什么要手动绑定this"},"207.13":{t:"2.React事件和原生事件有什么区别",p:`
React 事件使用驼峰命名，而不是全部小写。
通过 JSX , 你传递一个函数作为事件处理程序，而不是一个字符串。
另一 ...`,l:"source/react/event-mechanism/index.html#_2-react事件和原生事件有什么区别",a:"_2-react事件和原生事件有什么区别"},"207.14":{t:"3.React事件和原生事件的执行顺序，可以混用吗",p:`
react的所有事件都挂载在document中
当真实dom触发后冒泡到document后才会对react事件进行处理
所 ...`,l:"source/react/event-mechanism/index.html#_3-react事件和原生事件的执行顺序-可以混用吗",a:"_3-react事件和原生事件的执行顺序-可以混用吗"},"207.15":{t:"4.react事件和原生事件可以混用吗？",p:`react事件和原生事件最好不要混用。
原生事件中如果执行了stopPropagation方法，则会导致其他react事件失 ...`,l:"source/react/event-mechanism/index.html#_4-react事件和原生事件可以混用吗",a:"_4-react事件和原生事件可以混用吗"},"207.16":{t:"5. 合成事件、浏览器兼容",p:`  function handleClick(e) {
    e.preventDefault();
    consol ...`,l:"source/react/event-mechanism/index.html#_5-合成事件、浏览器兼容",a:"_5-合成事件、浏览器兼容"},"207.17":{t:"事件注册",p:`!图片

组件装载 / 更新。
通过lastProps、nextProps判断是否新增、删除事件分别调用事件注册、卸载方法。 ...`,l:"source/react/event-mechanism/index.html#事件注册",a:"事件注册"},"207.18":{t:"事件存储",p:`!图片

EventPluginHub负责管理React合成事件的callback，它将callback存储在listene ...`,l:"source/react/event-mechanism/index.html#事件存储",a:"事件存储"},"207.19":{t:"事件触发 / 执行",p:`!图片
这里的事件执行利用了React的批处理机制，在前一篇的【React深入】setState的执行机制中已经分析过，这里 ...`,l:"source/react/event-mechanism/index.html#事件触发-执行",a:"事件触发-执行"},"207.20":{t:"合成事件",p:`!图片

调用EventPluginHub的extractEvents方法。
循环所有类型的EventPlugin（用来处理 ...`,l:"source/react/event-mechanism/index.html#合成事件",a:"合成事件"},"207.21":{t:"总流程",p:`!图片
`,l:"source/react/event-mechanism/index.html#总流程",a:"总流程"},"208.0":{t:"# Hooks 原理",p:"",l:"source/react/hooks/index.html",a:"hooks-原理"},"208.1":{t:"Hooks 出现本质上原因是",p:`
让函数组件也能做类组件的事，有自己的状态，可以处理一些副作用，能获取 ref ，也能做数据缓存。
解决逻辑复用难的问题。
 ...`,l:"source/react/hooks/index.html#hooks-出现本质上原因是",a:"hooks-出现本质上原因是"},"208.2":{t:"hooks 对象本质上是主要以三种处理策略存在 React 中",p:`
ContextOnlyDispatcher： 第一种形态是防止开发者在函数组件外部调用 hooks ，所以第一种就是报错形 ...`,l:"source/react/hooks/index.html#hooks-对象本质上是主要以三种处理策略存在-react-中",a:"hooks-对象本质上是主要以三种处理策略存在-react-中"},"208.3":{t:"React Hooks 为什么不能写在条件语句中？",p:"因为在更新过程中，如果通过 if 条件语句，增加或者删除 hooks，在复用 hooks 过程中，会产生复用 hooks 状 ...",l:"source/react/hooks/index.html#react-hooks-为什么不能写在条件语句中",a:"react-hooks-为什么不能写在条件语句中"},"208.4":{t:"状态派发",p:"useState 解决了函数组件没有 state 的问题，让无状态组件有了自己的状态，useState 在 state 章节 ...",l:"source/react/hooks/index.html#状态派发",a:"状态派发"},"208.5":{t:"dispatchAction",p:`
function dispatchAction(fiber, queue, action){
    /*第一步：创建一个 ...`,l:"source/react/hooks/index.html#dispatchaction",a:"dispatchaction"},"208.6":{t:"处理副作用",p:"",l:"source/react/hooks/index.html#处理副作用",a:"处理副作用"},"208.7":{t:"初始化",p:"在 render 阶段，实际没有进行真正的 DOM 元素的增加，删除，React 把想要做的不同操作打成不同的 effect ...",l:"source/react/hooks/index.html#初始化",a:"初始化"},"208.8":{t:"useEffect和useLayoutEffect区别",p:"",l:"source/react/hooks/index.html#useeffect和uselayouteffect区别",a:"useeffect和uselayouteffect区别"},"208.9":{t:"useEffect",p:"render结束后,你的callback函数执行,但是不会block browser painting,算是某种异步的方式吧 ...",l:"source/react/hooks/index.html#useeffect",a:"useeffect"},"208.10":{t:"useLayoutEffect",p:"这个是用在处理DOM的时候,当你的useEffect里面的操作需要处理DOM,并且会改变页面的样式,就需要用这个,否则可能会 ...",l:"source/react/hooks/index.html#uselayouteffect",a:"uselayouteffect"},"208.11":{t:"状态获取与状态缓存",p:"",l:"source/react/hooks/index.html#状态获取与状态缓存",a:"状态获取与状态缓存"},"208.12":{t:"ref 处理",p:"在 ref 章节详细介绍过，useRef 就是创建并维护一个 ref 原始对象。用于获取原生 DOM 或者组件实例，或者保存 ...",l:"source/react/hooks/index.html#ref-处理",a:"ref-处理"},"208.13":{t:"ref 创建",p:`function mountRef(initialValue) {
  const hook = mountWorkInPr ...`,l:"source/react/hooks/index.html#ref-创建",a:"ref-创建"},"208.14":{t:"ref 更新",p:`function updateRef(initialValue){
  const hook = updateWorkInP ...`,l:"source/react/hooks/index.html#ref-更新",a:"ref-更新"},"208.15":{t:"useMemo的处理",p:"",l:"source/react/hooks/index.html#usememo的处理",a:"usememo的处理"},"208.16":{t:"useMemo 创建",p:`function mountMemo(nextCreate,deps){
  const hook = mountWorkI ...`,l:"source/react/hooks/index.html#usememo-创建",a:"usememo-创建"},"208.17":{t:"useMemo 更新",p:`function updateMemo(nextCreate,nextDeps){
    const hook = upd ...`,l:"source/react/hooks/index.html#usememo-更新",a:"usememo-更新"},"209.0":{t:"# 协调与调度",p:"",l:"source/react/render/index.html",a:"协调与调度"},"209.1":{t:"render阶段作用是什么？",p:"根据一次更新中产生的新状态值，通过 React.createElement ，替换成新的状态，得到新的 React elem ...",l:"source/react/render/index.html#render阶段作用是什么",a:"render阶段作用是什么"},"209.2":{t:"React 几种控制 render 方法",p:`
第一种就是从父组件直接隔断子组件的渲染，经典的就是 memo，缓存 element 对象。
第二种就是组件从自身来控制是否 ...`,l:"source/react/render/index.html#react-几种控制-render-方法",a:"react-几种控制-render-方法"},"209.3":{t:"缓存React.element对象",p:`/*子组件*/
function Children ({ number }){
    console.log('子组件渲染 ...`,l:"source/react/render/index.html#缓存react-element对象",a:"缓存react-element对象"},"209.4":{t:"useMemo",p:`const cacheSomething = useMemo(create,deps)


create：第一个参数为一个函 ...`,l:"source/react/render/index.html#usememo",a:"usememo"},"209.5":{t:"useMemo原理",p:"useMemo 会记录上一次执行 create 的返回值，并把它绑定在函数组件对应的 fiber 对象上，只要组件不销毁，缓 ...",l:"source/react/render/index.html#usememo原理",a:"usememo原理"},"209.6":{t:"useMemo应用场景",p:`
可以缓存 element 对象，从而达到按条件渲染组件，优化性能的作用。
如果组件中不期望每次 render 都重新计算一 ...`,l:"source/react/render/index.html#usememo应用场景",a:"usememo应用场景"},"209.7":{t:"PureComponent",p:"纯组件是一种发自组件本身的渲染优化策略，当开发类组件选择了继承 PureComponent ，就意味这要遵循其渲染规则。规则 ...",l:"source/react/render/index.html#purecomponent",a:"purecomponent"},"209.8":{t:"PureComponent 原理及其浅比较原则",p:`原型链上会有 isPureReactComponent 属性。
// react/src/ReactBaseClasses. ...`,l:"source/react/render/index.html#purecomponent-原理及其浅比较原则",a:"purecomponent-原理及其浅比较原则"},"209.9":{t:"shallowEqual 是如何浅比较的呢",p:`
第一步，首先会直接比较新老 props 或者新老 state 是否相等。如果相等那么不更新组件。
第二步，判断新老 sta ...`,l:"source/react/render/index.html#shallowequal-是如何浅比较的呢",a:"shallowequal-是如何浅比较的呢"},"209.10":{t:"shouldComponentUpdate",p:"shouldComponentUpdate 可以根据传入的新的 props 和 state ，或者 newContext 来 ...",l:"source/react/render/index.html#shouldcomponentupdate",a:"shouldcomponentupdate"},"209.11":{t:"React.memo",p:`React.memo(Component,compare)

React.memo 可作为一种容器化的控制渲染方案，可以对比 ...`,l:"source/react/render/index.html#react-memo",a:"react-memo"},"209.12":{t:"memo的几个特点是",p:`
React.memo: 第二个参数 返回 true 组件不渲染 ， 返回 false 组件重新渲染。和 shouldCom ...`,l:"source/react/render/index.html#memo的几个特点是",a:"memo的几个特点是"},"209.13":{t:"有没有必要在乎组件不必要渲染",p:"在正常情况下，无须过分在乎 React 没有必要的渲染，要理解执行 render 不等于真正的浏览器渲染视图，render  ...",l:"source/react/render/index.html#有没有必要在乎组件不必要渲染",a:"有没有必要在乎组件不必要渲染"},"209.14":{t:"一些开发中的细节问题",p:`
开发过程中对于大量数据展示的模块，开发者有必要用 shouldComponentUpdate ，PureComponent ...`,l:"source/react/render/index.html#一些开发中的细节问题",a:"一些开发中的细节问题"},"209.15":{t:"useCallback 和 useMemo 有什么区别？",p:`
useCallback 第一个参数就是缓存的内容，
useMemo 需要执行第一个函数，返回值为缓存的内容，
比起 use ...`,l:"source/react/render/index.html#usecallback-和-usememo-有什么区别",a:"usecallback-和-usememo-有什么区别"},"210.0":{t:"# AST 转换",p:`
对于模版的编译会先通过 baseParse 生成一个 AST 对象
然后针对这个 对象进行一定的转换

export fu ...`,l:"source/vue/ast-transform/ast-transform/index.html",a:"ast-转换"},"210.1":{t:"getBaseTransformPreset",p:`
会执行 getBaseTransformPreset 函数获取节点和指令转换的函数
然后调用 transform 函数做  ...`,l:"source/vue/ast-transform/ast-transform/index.html#getbasetransformpreset",a:"getbasetransformpreset"},"210.2":{t:"transform",p:`
核心流程 主要做了四件事
创建 tramsform 上下文
遍历 AST 节点
静态提升
创建根代码生成节点

expor ...`,l:"source/vue/ast-transform/ast-transform/index.html#transform",a:"transform"},"211.0":{t:"# AST 转换总结",p:`
如果说 parse 阶段是一个 词法分析的过程  构造基础的 ast 节点对象
那么 transform 节点就是 语法分 ...`,l:"source/vue/ast-transform/conclusion/index.html",a:"ast-转换总结"},"212.0":{t:"# 创建根节点的代码生成节点",p:"",l:"source/vue/ast-transform/create-root/index.html",a:"创建根节点的代码生成节点"},"212.1":{t:"createRootCodegen",p:`
createRootCodegen 目的就是 为 root 这个虚拟的 ast 根节点创建一个代码生成节点
如果 root ...`,l:"source/vue/ast-transform/create-root/index.html#createrootcodegen",a:"createrootcodegen"},"213.0":{t:"# 创建 tramsform 上下文",p:`
和 parse 过程一样 在 tramsform 阶段会创建一个上下文对象
上下文对象 context 维护了 trams ...`,l:"source/vue/ast-transform/create-transform/index.html",a:"创建-tramsform-上下文"},"214.0":{t:"# 遍历 AST 节点",p:`
通过 traverseNode 函数完成
递归遍历 ast 节点 针对每个节点执行一系列的转换函数  有些还会设计退出函数 ...`,l:"source/vue/ast-transform/each-transform/index.html",a:"遍历-ast-节点"},"214.1":{t:"element 节点转换函数",p:`
transformElement 函数 实现
会返回一个退出函数  会在该元素节点的子节点逻辑处理完毕之后 退出
判断这个 ...`,l:"source/vue/ast-transform/each-transform/index.html#element-节点转换函数",a:"element-节点转换函数"},"214.2":{t:"表达式节点转换函数",p:`
transformExpression 函数实现
主要就是转换插值和元素节点中的动态表达式
内部主要通过 processE ...`,l:"source/vue/ast-transform/each-transform/index.html#表达式节点转换函数",a:"表达式节点转换函数"},"214.3":{t:"Text 节点转换函数",p:`
transformText 函数实现
只处理 根节点 元素节点 v-for 以及 v-if 分支相关节点
会返回一个退出函 ...`,l:"source/vue/ast-transform/each-transform/index.html#text-节点转换函数",a:"text-节点转换函数"},"215.0":{t:"# 静态提升",p:"",l:"source/vue/ast-transform/hoist-static/index.html",a:"静态提升"},"215.1":{t:"hoistStatic",p:`
节点转换完毕之后 会判断编译配置中是否配置了 hoistStatic 如果配置了就会执行 hoistStatic 做静态提 ...`,l:"source/vue/ast-transform/hoist-static/index.html#hoiststatic",a:"hoiststatic"},"215.2":{t:"getConstantType",p:`
会根据节点类型的不同 返回不同的值
对于文本和注释节点 返回 3  CAN_STRINGIFY
对于元素节点 会判断节点自 ...`,l:"source/vue/ast-transform/hoist-static/index.html#getconstanttype",a:"getconstanttype"},"215.3":{t:"静态提升的成本",p:`
静态提升过程最终结果还是修改了可以被静态提升的节点的 codegenNode
静态提升创建的节点 放在的 render 函 ...`,l:"source/vue/ast-transform/hoist-static/index.html#静态提升的成本",a:"静态提升的成本"},"216.0":{t:"# 内置组件",p:"",l:"source/vue/built-components/index.html",a:"内置组件"},"216.1":{t:"Teleport",p:`
Teleport 组件是vue3 提供的内置组件 目的是让包裹的子节点可以脱离当前组件的DOM 流 渲染到任意指定的目标元 ...`,l:"source/vue/built-components/index.html#teleport",a:"teleport"},"216.2":{t:"keepAlive",p:"\nconst KeepAliveImpl: ComponentOptions = {\n  name: `KeepAlive` ...",l:"source/vue/built-components/index.html#keepalive",a:"keepalive"},"216.3":{t:"组件的渲染",p:`
渲染函数先通过执行 slots.default() 拿到子节点 children
它就是 KeepAlive 组件包裹的子 ...`,l:"source/vue/built-components/index.html#组件的渲染",a:"组件的渲染"},"216.4":{t:"缓存的设计",p:`
组件递归的 patch 过程就是为了渲染 DOM 递归是需要性能耗时的
其实就是缓存了 DOM 在 下一次渲染直接从缓存中 ...`,l:"source/vue/built-components/index.html#缓存的设计",a:"缓存的设计"},"216.5":{t:"Props 设计",p:`include exclude
max 当 include 发生变化 从缓存中删除 name 不匹配当 include 的  ...`,l:"source/vue/built-components/index.html#props-设计",a:"props-设计"},"216.6":{t:"组件的卸载",p:`
通过 move 函数从 DOM 树中移除节点 通过 queuePostRenderEffect 的方式执行定义的 deac ...`,l:"source/vue/built-components/index.html#组件的卸载",a:"组件的卸载"},"216.7":{t:"总结",p:`
KeepAlive 是一个抽象组件 组件本身不渲染任何实体节点 只渲染第一个子元素节点
KeepAlive 组件通过缓存组 ...`,l:"source/vue/built-components/index.html#总结",a:"总结"},"217.0":{t:"# 异步组件",p:`defineAsyncComponent
function defineAsyncComponent(
  source:  ...`,l:"source/vue/component/vue-component-async/index.html",a:"异步组件"},"217.1":{t:"渲染占位节点",p:`
defineAsyncComponent 返回的是 defineComponent 函数执行的结果
defineCompo ...`,l:"source/vue/component/vue-component-async/index.html#渲染占位节点",a:"渲染占位节点"},"217.2":{t:"加载异步 javascript 模块",p:`
除了把异步组件渲染成注释节点 setup函数内部还调用了 load 函数来加载异步 js模块
load 函数内部主要是通过 ...`,l:"source/vue/component/vue-component-async/index.html#加载异步-javascript-模块",a:"加载异步-javascript-模块"},"217.3":{t:"重新渲染组件",p:`
在调用 load  会修改响应式对象 loaded 来触发异步组件的重新渲染
当异步组件重新渲染后 会再次执行组件的 re ...`,l:"source/vue/component/vue-component-async/index.html#重新渲染组件",a:"重新渲染组件"},"217.4":{t:"高级用法",p:`
defineAsyncComponent 可以接受一个对象

loader 工厂函数
loadingComponent : ...`,l:"source/vue/component/vue-component-async/index.html#高级用法",a:"高级用法"},"217.5":{t:"loading组件",p:`defineAsyncComponent loadingComponent : 加载异步组件时要使用的组件
`,l:"source/vue/component/vue-component-async/index.html#loading组件",a:"loading组件"},"217.6":{t:"error组件",p:`
defineAsyncComponent 可以接受一个对象

errorComponent : 加载失败的时候要使用的组件 ...`,l:"source/vue/component/vue-component-async/index.html#error组件",a:"error组件"},"217.7":{t:"只加载一次",p:"defineAsyncComponent 内部会通过 一个变量 pendingRequest 即使初始化多次 变量还是共享的 ...",l:"source/vue/component/vue-component-async/index.html#只加载一次",a:"只加载一次"},"217.8":{t:"总结",p:`
异步组件本质就是一个普通的组件
在内部通过定义的 loader 加载器在首次渲染的时候发起一个加载异步组件的模块请求 同时 ...`,l:"source/vue/component/vue-component-async/index.html#总结",a:"总结"},"218.0":{t:"# 组件的初始化流程",p:"",l:"source/vue/component/vue-component-create/index.html",a:"组件的初始化流程"},"218.1":{t:"组件的创建",p:"",l:"source/vue/component/vue-component-create/index.html#组件的创建",a:"组件的创建"},"218.2":{t:"什么是 vnode",p:`
vnode 本质上是用来描述 DOM 的 Javascript 对象 在 vue 中 可以描述不同类型的节点
比如普通元素 ...`,l:"source/vue/component/vue-component-create/index.html#什么是-vnode",a:"什么是-vnode"},"218.3":{t:"如何创建 vnode",p:"",l:"source/vue/component/vue-component-create/index.html#如何创建-vnode",a:"如何创建-vnode"},"218.4":{t:"createBaseVNode",p:`
用来创建基础的 vnode 对象
根据传入的参数 创建一个 vnode 对象 可以完整的描述该节点的信息
如果参数 nee ...`,l:"source/vue/component/vue-component-create/index.html#createbasevnode",a:"createbasevnode"},"218.5":{t:"createVNode",p:`
相比于  createBaseVNode   createVNode 有很多额外的判断
判断 type  是否为空 是否  ...`,l:"source/vue/component/vue-component-create/index.html#createvnode",a:"createvnode"},"218.6":{t:"组件的挂载",p:"",l:"source/vue/component/vue-component-create/index.html#组件的挂载",a:"组件的挂载"},"218.7":{t:"mountComponent",p:`主要用来创建组件的实例
设置组件的实例
设置并运行带有副作用的渲染函数
`,l:"source/vue/component/vue-component-create/index.html#mountcomponent",a:"mountcomponent"},"218.8":{t:"主要参数",p:`
initialVNode 表示组件的 vnode
container 组件挂载的父节点
anchor 表示挂载的参考锚点
 ...`,l:"source/vue/component/vue-component-create/index.html#主要参数",a:"主要参数"},"218.9":{t:"应用程序初始化",p:`初始化一个应用程序 需要通过  createApp
createApp 返回的 app 对象已经拥有的 mount 函数 但 ...`,l:"source/vue/component/vue-component-create/index.html#应用程序初始化",a:"应用程序初始化"},"218.10":{t:"为什么要重写？",p:`
因为 vue 不仅仅是为了 web 服务 是为了支持 跨平台渲染 createApp的mount 函数是一个标准的可跨平台 ...`,l:"source/vue/component/vue-component-create/index.html#为什么要重写",a:"为什么要重写"},"218.11":{t:"总结",p:`!图片

组件化是 vue 的核心思想之一  允许用模版加对象描述的方式创建组件 再给组件注入不同的数据 就可以渲染组件了
 ...`,l:"source/vue/component/vue-component-create/index.html#总结",a:"总结"},"219.0":{t:"# 组件的实例",p:"",l:"source/vue/component/vue-component-instance/index.html",a:"组件的实例"},"219.1":{t:"mountComponent",p:`
渲染 vnode 和 生成 DOM 流程主要是通过 mountComponent 函数来完成的
mountComponen ...`,l:"source/vue/component/vue-component-instance/index.html#mountcomponent",a:"mountcomponent"},"219.2":{t:"创建组件实例",p:"",l:"source/vue/component/vue-component-instance/index.html#创建组件实例",a:"创建组件实例"},"219.3":{t:"为什么要创建组件实例？",p:`
整个渲染过程中 要维护组件的上下文数据
组件渲染需要的 props 数据 data 数据 组件 vnode 节点 rend ...`,l:"source/vue/component/vue-component-instance/index.html#为什么要创建组件实例",a:"为什么要创建组件实例"},"219.4":{t:"设置组件实例",p:`
通过 setupComponent 方法实现
从组件的 vnode 获取 props children shapeFlag ...`,l:"source/vue/component/vue-component-instance/index.html#设置组件实例",a:"设置组件实例"},"219.5":{t:"有状态组件是什么",p:`组件会在渲染过程中把一些状态挂载到组件实例对应的属性上
`,l:"source/vue/component/vue-component-instance/index.html#有状态组件是什么",a:"有状态组件是什么"},"219.6":{t:"setupStatefulComponent",p:`主要做  创建渲染上下文代理  判断处理 setup 函数 完成组件实例的设置
function setupStateful ...`,l:"source/vue/component/vue-component-instance/index.html#setupstatefulcomponent",a:"setupstatefulcomponent"},"219.7":{t:"创建渲染函数上下文代理",p:`
主要对 instance.ctx 做代理
做代理为了后续 render 函数内部之间访问上下文 instance.ctx  ...`,l:"source/vue/component/vue-component-instance/index.html#创建渲染函数上下文代理",a:"创建渲染函数上下文代理"},"219.8":{t:"上下文代理的优化",p:`
在解析 SFC 的时候做了一些额外处理
来分析组件中返回的绑定数据
然后模版编译器就可以捕获这些信息
自动转换适当的绑定  ...`,l:"source/vue/component/vue-component-instance/index.html#上下文代理的优化",a:"上下文代理的优化"},"219.9":{t:"处理 setup 函数",p:`
setupStatefulComponent 中对 setup 函数 主要做了
创建 setup 函数上下文
执行 set ...`,l:"source/vue/component/vue-component-instance/index.html#处理-setup-函数",a:"处理-setup-函数"},"219.10":{t:"完成组件实例的设置",p:`
finishComponentSetup 函数 主要
标准化模版或者渲染函数
兼容 options api
兼容 opti ...`,l:"source/vue/component/vue-component-instance/index.html#完成组件实例的设置",a:"完成组件实例的设置"},"219.11":{t:"组件的初始化流程",p:`!图片
`,l:"source/vue/component/vue-component-instance/index.html#组件的初始化流程",a:"组件的初始化流程"},"219.12":{t:"runtime-only  vs  runtime + compiler",p:"",l:"source/vue/component/vue-component-instance/index.html#runtime-only-vs-runtime-compiler",a:"runtime-only-vs-runtime-compiler"},"219.13":{t:"runtime-only",p:`
体积更小
运行时不用编译
耗时少 性能优秀

`,l:"source/vue/component/vue-component-instance/index.html#runtime-only",a:"runtime-only"},"219.14":{t:"区别",p:`是否注册了 compile
`,l:"source/vue/component/vue-component-instance/index.html#区别",a:"区别"},"219.15":{t:"总结",p:`!图片

组件的初始化流程主要包含创建组件实例和设置组件实例
组件的实例用来维护组件的整个生命周期中的一些上下文数据
组件实 ...`,l:"source/vue/component/vue-component-instance/index.html#总结",a:"总结"},"220.0":{t:"# 组件的生命周期",p:`
setup 函数替代了 vue2 中的 beforeCreate created 钩子函数

`,l:"source/vue/component/vue-component-life-cycle/index.html",a:"组件的生命周期"},"220.1":{t:"vue3 钩子函数 vs vue2 钩子函数",p:`setup =&gt; beforeCreate setup =&gt; created
onBeforeMount =&g ...`,l:"source/vue/component/vue-component-life-cycle/index.html#vue3-钩子函数-vs-vue2-钩子函数",a:"vue3-钩子函数-vs-vue2-钩子函数"},"220.2":{t:"注册钩子函数",p:`
都是通过 createHook 注册
会返回一个函数 内部通过 injectHook 注册钩子函数

export fun ...`,l:"source/vue/component/vue-component-life-cycle/index.html#注册钩子函数",a:"注册钩子函数"},"220.3":{t:"injectHook",p:`
对用户注册的钩子函数 hook 做了一层封装
然后添加到一个数组中 并把数组保存到当前组件的实例的 target 上
不同 ...`,l:"source/vue/component/vue-component-life-cycle/index.html#injecthook",a:"injecthook"},"220.4":{t:"onBeforeMount 和 onMounted",p:`
onBeforeMount 注册的 beforeMount 钩子函数 会在组件挂载之前执行
onMounted 注册的 m ...`,l:"source/vue/component/vue-component-life-cycle/index.html#onbeforemount-和-onmounted",a:"onbeforemount-和-onmounted"},"220.5":{t:"onBeforeUpdate 和 onUpdated",p:`
onBeforeUpdate 注册的 beforeUpdate 钩子函数 会在组件更新之前执行
onUpdated 注册的 ...`,l:"source/vue/component/vue-component-life-cycle/index.html#onbeforeupdate-和-onupdated",a:"onbeforeupdate-和-onupdated"},"220.6":{t:"onBeforeUnmount 和 onUnmounted",p:`
onBeforeUnmount 注册的 beforeUnMount 钩子函数 会在组件销毁之前执行
onUnmounted ...`,l:"source/vue/component/vue-component-life-cycle/index.html#onbeforeunmount-和-onunmounted",a:"onbeforeunmount-和-onunmounted"},"220.7":{t:"onErrorCaptured",p:`
是在 调用 handleError 函数 中执行的 钩子函数
handleError 会从当前报错的组件的父组件实例开始  ...`,l:"source/vue/component/vue-component-life-cycle/index.html#onerrorcaptured",a:"onerrorcaptured"},"220.8":{t:"总结",p:`
vue js 组件的生命周期包括 创建 更新 销毁等阶段 在此我们可以注入一些生命周期钩子函数执行自己的代码逻辑
!图片
 ...`,l:"source/vue/component/vue-component-life-cycle/index.html#总结",a:"总结"},"221.0":{t:"# 组件的 props",p:"",l:"source/vue/component/vue-component-props/index.html",a:"组件的-props"},"221.1":{t:"props 配置的标准化",p:`
标准化 props 的配置是通过 normalizePropsOptions 函数完成的
normalizePropsOp ...`,l:"source/vue/component/vue-component-props/index.html#props-配置的标准化",a:"props-配置的标准化"},"221.2":{t:"props 值的初始化",p:`
有了标准化的 props 配置 还需要根据配置对父组件传递的 props 数据做一些求值和验证 然后把结果 赋值到组件的实 ...`,l:"source/vue/component/vue-component-props/index.html#props-值的初始化",a:"props-值的初始化"},"221.3":{t:"设置props 通过 setFullProps 实现",p:`
setFullProps 主要目的就是遍历 props 数据求值 以及对需要转换的 props 求值
该过程就是遍历 ra ...`,l:"source/vue/component/vue-component-props/index.html#设置props-通过-setfullprops-实现",a:"设置props-通过-setfullprops-实现"},"221.4":{t:"验证props",p:`
validateProp 函数用来检测 props 求的的值 是否合法 如不匹配则会抛出警告
validateProp 首 ...`,l:"source/vue/component/vue-component-props/index.html#验证props",a:"验证props"},"221.5":{t:"响应式处理",p:`
通过 shallowReactive API变成响应式

`,l:"source/vue/component/vue-component-props/index.html#响应式处理",a:"响应式处理"},"221.6":{t:"props 的更新",p:`
props 数据的更新 会触发组件的重新

`,l:"source/vue/component/vue-component-props/index.html#props-的更新",a:"props-的更新"},"221.7":{t:"触发子组件的重新渲染",p:`
组件的重新渲染会触发 patch 流程 然后遍历子节点 递归 patch 遇到组件节点 执行 updateComponen ...`,l:"source/vue/component/vue-component-props/index.html#触发子组件的重新渲染",a:"触发子组件的重新渲染"},"221.8":{t:"更新 instance.props",p:`
其实就是执行 componentUpdateFn 组件副作用函数
在更新组件的时候 会判断是否有 instance.nex ...`,l:"source/vue/component/vue-component-props/index.html#更新-instance-props",a:"更新-instance-props"},"221.9":{t:"把 instance.props 变成响应式的",p:`
为什么使用 shallowReactive 而不是 reactive
shallowReactive 不会递归执行 rea ...`,l:"source/vue/component/vue-component-props/index.html#把-instance-props-变成响应式的",a:"把-instance-props-变成响应式的"},"221.10":{t:"对象类型 props 数据的更新",p:`
对象类型的 props 数据变化 也会触发子组件的重新渲染
子组件的渲染过程中 访问 对象props 相当于 子组件的渲染 ...`,l:"source/vue/component/vue-component-props/index.html#对象类型-props-数据的更新",a:"对象类型-props-数据的更新"},"221.11":{t:"总结",p:"props 在组件设置是一个非常重要的特性 允许组件的使用者在外层传递 props 组件内部就可以根据 props 实现各种 ...",l:"source/vue/component/vue-component-props/index.html#总结",a:"总结"},"222.0":{t:"# 组件的渲染流程",p:"",l:"source/vue/component/vue-component-update/index.html",a:"组件的渲染流程"},"222.1":{t:"渲染函数更新组件的过程",p:"",l:"source/vue/component/vue-component-update/index.html#渲染函数更新组件的过程",a:"渲染函数更新组件的过程"},"222.2":{t:"更新组件主要做了三件事情",p:`
更新组件 vnode 节点
渲染新的子树 vnode
根据新旧子树 vnode 执行 patch 逻辑

`,l:"source/vue/component/vue-component-update/index.html#更新组件主要做了三件事情",a:"更新组件主要做了三件事情"},"222.3":{t:"patch 流程",p:`首先判断 新旧节点是否相同 vnode 类型 如果不同 则删除旧的节点 再创建新的节点
如果类型相同  则需要进入 diff ...`,l:"source/vue/component/vue-component-update/index.html#patch-流程",a:"patch-流程"},"222.4":{t:"首先处理组件",p:`
执行 processComponent 中 再执行 updateComponent 函数来更新子组件
updateComp ...`,l:"source/vue/component/vue-component-update/index.html#首先处理组件",a:"首先处理组件"},"222.5":{t:"处理普通元素",p:`
执行 processElement 逻辑
更新元素的过程中主要做了两件事  更新 props  以及 更新子节点


   ...`,l:"source/vue/component/vue-component-update/index.html#处理普通元素",a:"处理普通元素"},"222.6":{t:"更新 props",p:`patchProps  函数 会更新 DOM 节点的  class style event 等等其他 dom 属性
  co ...`,l:"source/vue/component/vue-component-update/index.html#更新-props",a:"更新-props"},"222.7":{t:"更新子节点",p:`patchChildren 函数
const patchChildren: PatchChildrenFn = (
     ...`,l:"source/vue/component/vue-component-update/index.html#更新子节点",a:"更新子节点"},"222.8":{t:"diff 算法",p:"",l:"source/vue/component/vue-component-update/index.html#diff-算法",a:"diff-算法"},"222.9":{t:"同步头部节点",p:`需要维护几个变量

头部的索引 i
旧子节点的尾部索引 e1
新子节点的尾部索引 e2
从头部开始 依次对比新旧节点  如果 ...`,l:"source/vue/component/vue-component-update/index.html#同步头部节点",a:"同步头部节点"},"222.10":{t:"同步尾部节点",p:`依次对比新旧节点 如果相同 执行 patch 更新节点
不同 或者 索引 i 大于 e1 或e2 则同步过程结束
`,l:"source/vue/component/vue-component-update/index.html#同步尾部节点",a:"同步尾部节点"},"222.11":{t:"处理完 头部尾部节点 只会剩下三种情况",p:`
新子节点有剩余 添加新节点
a. 如果索引 i 大于 尾部索引 e1 并且小于 e2
b. 直接挂载新子树丛索引 i 开始 ...`,l:"source/vue/component/vue-component-update/index.html#处理完-头部尾部节点-只会剩下三种情况",a:"处理完-头部尾部节点-只会剩下三种情况"},"222.12":{t:"总结",p:`
vue 视图更新粒度是组件级别的
patch 过程 递归便利子节点的时候 如果遇到组件的 vnode 会进行一些判断 在满 ...`,l:"source/vue/component/vue-component-update/index.html#总结",a:"总结"},"223.0":{t:"# computed API",p:`
如果传递给 computed 是一个函数 就会默认是 getter 函数 不能修改 只能获取
可以传递一个对象   就可以 ...`,l:"source/vue/computed/computed/index.html",a:"computed-api"},"223.1":{t:"computed 拥有单个参数 getterOrOptions  可以是 getter 函数 也可以是一个对象",p:`
首先会先标准化参数 拿到计算属性对应的 getter 函数和 setter函数
如果值传递了 getter 函数 在开发环 ...`,l:"source/vue/computed/computed/index.html#computed-拥有单个参数-getteroroptions-可以是-getter-函数-也可以是一个对象",a:"computed-拥有单个参数-getteroroptions-可以是-getter-函数-也可以是一个对象"},"223.2":{t:"ReactiveEffect 第一个参数 fn 函数在后续执行 effect.run 会执行这个 fn 函数",p:`
第二个参数 scheduler 函数 在后续执行派发通知的时候好 会通知 effect 依赖执行对应的 scheduler ...`,l:"source/vue/computed/computed/index.html#reactiveeffect-第一个参数-fn-函数在后续执行-effect-run-会执行这个-fn-函数",a:"reactiveeffect-第一个参数-fn-函数在后续执行-effect-run-会执行这个-fn-函数"},"224.0":{t:"# 计算属性 computed 总结",p:`
计算属性的本质其实就是响应式对象  通常会依赖单个或者多个响应式对象的值
计算属性也支持嵌套 可以由其他计算属性的值计算的 ...`,l:"source/vue/computed/conclusion/index.html",a:"计算属性-computed-总结"},"225.0":{t:"# 计算属性的运行机制",p:`
计算属性在 template 中也不需要访问 value  因为也拥有了 __v_isRef 属性
首先执行 trackR ...`,l:"source/vue/computed/operation-mechanism/index.html",a:"计算属性的运行机制"},"225.1":{t:"运行机制",p:`!图片
`,l:"source/vue/computed/operation-mechanism/index.html#运行机制",a:"运行机制"},"225.2":{t:"计算属性的两个特点",p:"",l:"source/vue/computed/operation-mechanism/index.html#计算属性的两个特点",a:"计算属性的两个特点"},"225.3":{t:"延时计算",p:`当我们访问计算属性的时候 才会执行  computed getter 函数进行计算
`,l:"source/vue/computed/operation-mechanism/index.html#延时计算",a:"延时计算"},"225.4":{t:"缓存",p:`
内部会缓存上次的计算结果 value  只有 _dirtry 为 true 的时候才会重新计算
如果访问计算属性时_dir ...`,l:"source/vue/computed/operation-mechanism/index.html#缓存",a:"缓存"},"226.0":{t:"# 生成代码",p:"",l:"source/vue/create-code/1/index.html",a:"生成代码"},"226.1":{t:"generate",p:`
在 AST 转换后 会执行 generate 函数生成代码
generate 函数的输入 就是转换后的  AST 节点
主 ...`,l:"source/vue/create-code/1/index.html#generate",a:"generate"},"227.0":{t:"# 创建代码生成上下文",p:`通过执行 createCodegenContext 创建代码生成上下文
`,l:"source/vue/create-code/2/index.html",a:"创建代码生成上下文"},"227.1":{t:"createCodegenContext",p:`
该上下文对象 context 维护了 generate 过程中的一些配置 比如： mode prefixIdentifer ...`,l:"source/vue/create-code/2/index.html#createcodegencontext",a:"createcodegencontext"},"228.0":{t:"# 生成预设代码",p:`由于 mode 的值是 modules 所以会执行  genModulePreamble 生成预设代码
`,l:"source/vue/create-code/3/index.html",a:"生成预设代码"},"228.1":{t:"genModulePreamble",p:`function genModulePreamble(
  ast: RootNode,
  context: Codege ...`,l:"source/vue/create-code/3/index.html#genmodulepreamble",a:"genmodulepreamble"},"228.2":{t:"helperNameMap",p:`
每个属性对应的值是一个字符串 就是需要引用的模块或者函数的名称
创建 vnode 函数 createVnode 是直接通过 ...`,l:"source/vue/create-code/3/index.html#helpernamemap",a:"helpernamemap"},"228.3":{t:"genHoists",p:`
内部先执行 newline 生成一个空行 然后遍历 hoists 数组 生成静态提升遍历定义的函数


function  ...`,l:"source/vue/create-code/3/index.html#genhoists",a:"genhoists"},"229.0":{t:"# 生成渲染函数的名称和参数",p:"\n  const functionName = ssr ? `ssrRender` : `render`\n  const a ...",l:"source/vue/create-code/4/index.html",a:"生成渲染函数的名称和参数"},"230.0":{t:"# 生成资源声明代码",p:"",l:"source/vue/create-code/5/index.html",a:"生成资源声明代码"},"230.1":{t:"在渲染函数内部 先生成资源声明代码",p:` // generate asset resolution statements
  if (ast.components. ...`,l:"source/vue/create-code/5/index.html#在渲染函数内部-先生成资源声明代码",a:"在渲染函数内部-先生成资源声明代码"},"230.2":{t:"genAssets",p:`
接下来通过 genAssets 生成自定义组件声明代码
函数内部调用了 helper函数 就是从 helperNameMa ...`,l:"source/vue/create-code/5/index.html#genassets",a:"genassets"},"231.0":{t:"# 生成创建的 vnode 树的表达式",p:`通过 genNode生成创建 vnode 树的表达式
`,l:"source/vue/create-code/6/index.html",a:"生成创建的-vnode-树的表达式"},"231.1":{t:"genNode",p:`
主要的思路就是根据不同节点类型 生成不同代码
根节点的 codegenNode 类型是 13 是一个 vNodeCall  ...`,l:"source/vue/create-code/6/index.html#gennode",a:"gennode"},"231.2":{t:"genVNodeCall",p:"function genVNodeCall(node: VNodeCall, context: CodegenContext ...",l:"source/vue/create-code/6/index.html#genvnodecall",a:"genvnodecall"},"231.3":{t:"genNullableArgs",p:`
会倒叙遍历参数数组 找到一个不为空的参数 返回该参数前面所有参数组成的数组

function genNullableAr ...`,l:"source/vue/create-code/6/index.html#gennullableargs",a:"gennullableargs"},"231.4":{t:"genNodeList",p:`
遍历 nodes  拿到每个node 判断 node 类型
如果是字符串 直接添加到代码中
如果是数组 执行  genNo ...`,l:"source/vue/create-code/6/index.html#gennodelist",a:"gennodelist"},"231.5":{t:"genExpression",p:`
就是往代码中添加 content 的内容
transform 阶段已经做过静态提升

function genExpres ...`,l:"source/vue/create-code/6/index.html#genexpression",a:"genexpression"},"231.6":{t:"genNodeListAsArray 把一个 node 列表生成类似数组形式的代码",p:`
前后添加中括号 判断是否生成多行代码
如果多行 前后需要添加代码缩进 中间部分代码继续递归调用 genNodeList

 ...`,l:"source/vue/create-code/6/index.html#gennodelistasarray-把一个-node-列表生成类似数组形式的代码",a:"gennodelistasarray-把一个-node-列表生成类似数组形式的代码"},"231.7":{t:"genConditionalExpression 生成条件表达式的代码 会在逻辑测试代码",p:`function genConditionalExpression(
  node: ConditionalExpressi ...`,l:"source/vue/create-code/6/index.html#genconditionalexpression-生成条件表达式的代码-会在逻辑测试代码",a:"genconditionalexpression-生成条件表达式的代码-会在逻辑测试代码"},"232.0":{t:"# 运行时的优化",p:"",l:"source/vue/create-code/7/index.html",a:"运行时的优化"},"232.1":{t:"openBlock",p:"vue3 在运行时设计了一个 blockStack 和 currentBlock blockStack 表示一个 block ...",l:"source/vue/create-code/7/index.html#openblock",a:"openblock"},"232.2":{t:"createBaseVNode",p:`
会通过 patchFlag 判断 vnode 是不是一个动态节点 如果是 并且 isBlockTreeEnabled 大于 ...`,l:"source/vue/create-code/7/index.html#createbasevnode",a:"createbasevnode"},"232.3":{t:"createElementBlock",p:`
本质就是通过 setupBlock 函数封装 createBaseVNode 函数生成的 vnode 将其变成一个 blo ...`,l:"source/vue/create-code/7/index.html#createelementblock",a:"createelementblock"},"232.4":{t:"patchBlockChildren",p:`
主要是用来遍历新的动态子节点数组 拿到对应的新旧动态子节点 执行 patch 更新子节点
更新子节点会遇到 是动态 vno ...`,l:"source/vue/create-code/7/index.html#patchblockchildren",a:"patchblockchildren"},"233.0":{t:"# 总结",p:`
生成代码阶段也是一个 自顶向下的过程 主要依据在前面转换了 AST 对象去生成相应的代码
在生成过程中  首先创建了 co ...`,l:"source/vue/create-code/conclusion/index.html",a:"总结"},"234.0":{t:"# 自定义指令的定义",p:`
自定义指令本质就是一个 js 对象
对象上面挂载了一些 钩子函数

`,l:"source/vue/directive/1/index.html",a:"自定义指令的定义"},"234.1":{t:"钩子函数",p:"",l:"source/vue/directive/1/index.html#钩子函数",a:"钩子函数"},"234.2":{t:"created",p:`
绑定元素 的 attribute 或 事件侦听器被应用之前调用
当指令需要添加一些事件侦听器  并且这些侦听器要在 v-o ...`,l:"source/vue/directive/1/index.html#created",a:"created"},"234.3":{t:"beforeMount",p:`
当指令第一次绑定到元素
挂载父组件之前调用

`,l:"source/vue/directive/1/index.html#beforemount",a:"beforemount"},"234.4":{t:"mounted",p:`
绑定元素的父组件被挂载后调用

`,l:"source/vue/directive/1/index.html#mounted",a:"mounted"},"234.5":{t:"beforeUpdate",p:`
更新包含指令元素的 vnode 之前调用

`,l:"source/vue/directive/1/index.html#beforeupdate",a:"beforeupdate"},"234.6":{t:"updated",p:`
包含指令元素的 vnode 及其子元素的 vnode 更新后调用

`,l:"source/vue/directive/1/index.html#updated",a:"updated"},"234.7":{t:"beforeUnmount",p:`
卸载绑定元素的父组件之前调用

`,l:"source/vue/directive/1/index.html#beforeunmount",a:"beforeunmount"},"234.8":{t:"unmounted",p:`
指令与元素解除绑定  并且 父组件已经卸载掉时候调用

`,l:"source/vue/directive/1/index.html#unmounted",a:"unmounted"},"235.0":{t:"# 指令的注册",p:"",l:"source/vue/directive/2/index.html",a:"指令的注册"},"235.1":{t:"全局注册",p:`
app.directive 进行注册

`,l:"source/vue/directive/2/index.html#全局注册",a:"全局注册"},"235.2":{t:"局部注册",p:`
组件对象的  dirctives

`,l:"source/vue/directive/2/index.html#局部注册",a:"局部注册"},"235.3":{t:"指令的全局注册和局部注册区别",p:`
指令对象保存的地方不同
一个保存在 appContext 中
一个保存在 组件对象的定义中

`,l:"source/vue/directive/2/index.html#指令的全局注册和局部注册区别",a:"指令的全局注册和局部注册区别"},"235.4":{t:"directive",p:`
函数拥有两个参数

name 表示名称
directive 表示指令对象


指令的全局注册就是把指令对象创建在全局上下文 ...`,l:"source/vue/directive/2/index.html#directive",a:"directive"},"236.0":{t:"# 指令的应用",p:`
指令编译后的 render 函数 是通过 withDirectives 函数包裹进行实现的
通过 resolveDirec ...`,l:"source/vue/directive/3/index.html",a:"指令的应用"},"236.1":{t:"resolveDirective",p:`

resolveDirective 内部调用了  resolveAsset 函数 传入的类型名称为 directives  ...`,l:"source/vue/directive/3/index.html#resolvedirective",a:"resolvedirective"},"236.2":{t:"withDirectives",p:`
withDirectives 拥有两个参数
vnode 就是应用指令节点的 vnode 对象
directives 是指令 ...`,l:"source/vue/directive/3/index.html#withdirectives",a:"withdirectives"},"236.3":{t:"元素的生命周期如何运行钩子函数",p:"",l:"source/vue/directive/3/index.html#元素的生命周期如何运行钩子函数",a:"元素的生命周期如何运行钩子函数"},"236.4":{t:"挂载",p:`
通过执行 mountElement 函数完成的
在其中处理元素的 props 之前 会执行指令的 created 钩子函数 ...`,l:"source/vue/directive/3/index.html#挂载",a:"挂载"},"236.5":{t:"invokeDirectiveHook",p:`
invokeDirectiveHook 拥有四个参数

vnode
■ 元素当前的 vnode preVNode
■ 元素 ...`,l:"source/vue/directive/3/index.html#invokedirectivehook",a:"invokedirectivehook"},"236.6":{t:"更新",p:`
通过 patchElement 函数实现的
更新子节点之前会执行指令的 beforeUpdate 钩子函数
更新完子节点后 ...`,l:"source/vue/directive/3/index.html#更新",a:"更新"},"236.7":{t:"卸载",p:`
元素的卸载通过 执行 unmount 函数完成
主要思路就是递归的方式遍历删除自身节点和子节点
在移除元素之前 执行指令的 ...`,l:"source/vue/directive/3/index.html#卸载",a:"卸载"},"237.0":{t:"# 总结",p:`
自定义指令是 vue 提供给用户对普通 DOM 元素进行底层操作的一种方式
定义一个指令 无非就是在合适的钩子函数中编写一 ...`,l:"source/vue/directive/conclusion/index.html",a:"总结"},"238.0":{t:"# 模版解析总结",p:`
模版解析是 vue 编译过程的第一步 把 template 解析生成  AST对象
整个解析过程是一个自顶向下的分析过程
 ...`,l:"source/vue/parsing/conclusion/index.html",a:"模版解析总结"},"239.0":{t:"# 生成 AST",p:"",l:"source/vue/parsing/create-ast/index.html",a:"生成-ast"},"239.1":{t:"vue3 的编译场景",p:`
web 编译
SSR 编译

`,l:"source/vue/parsing/create-ast/index.html#vue3-的编译场景",a:"vue3-的编译场景"},"239.2":{t:"compile web 端主要是通过 compile 函数实现模版编译",p:`
compile 拥有两个参数

template 待编译的模版字符串
options 一些配置信息
compile 内部通 ...`,l:"source/vue/parsing/create-ast/index.html#compile-web-端主要是通过-compile-函数实现模版编译",a:"compile-web-端主要是通过-compile-函数实现模版编译"},"239.3":{t:"baseCompile 主要做了三件事",p:`
解析 template 生成 AST  抽象语法树
AST 转换
生成代码

// we name it \`baseCom ...`,l:"source/vue/parsing/create-ast/index.html#basecompile-主要做了三件事",a:"basecompile-主要做了三件事"},"239.4":{t:"生成 AST",p:`
在计算机科学中  AST 是源代码语法结构的一种抽象表示
以树状的形式表示编程语言的语法结构
树上的每一个节点都表示源代码 ...`,l:"source/vue/parsing/create-ast/index.html#生成-ast",a:"生成-ast"},"239.5":{t:"如果通过模版字符串生成 AST",p:`
baseParse 函数完成
用于两个参数

content 要编译的模版字符串
options 编译的相关配置


主要 ...`,l:"source/vue/parsing/create-ast/index.html#如果通过模版字符串生成-ast",a:"如果通过模版字符串生成-ast"},"240.0":{t:"# 创建 AST 根节点",p:`
子节点解析完毕  baseParse 过程就剩最后一步创建 AST 根节点

`,l:"source/vue/parsing/create-root/index.html",a:"创建-ast-根节点"},"240.1":{t:"createRoot",p:`
createRoot 会返回一个 js 对象作为 AST 的根节点

type ： 0 表示是一个根节点类型
childr ...`,l:"source/vue/parsing/create-root/index.html#createroot",a:"createroot"},"241.0":{t:"# 解析子节点",p:"",l:"source/vue/parsing/resolving-children/index.html",a:"解析子节点"},"241.1":{t:"parseChildren",p:`
解析子节点通过 parseChildren 函数完成
目的就是 解析模版并创建 AST 节点数据
有两个主要流程

自顶向 ...`,l:"source/vue/parsing/resolving-children/index.html#parsechildren",a:"parsechildren"},"241.2":{t:"生成 AST节点数组",p:`
主要分为四种情况
注释节点的解析
插值的解析
普通文本的解析
元素节点的解析

`,l:"source/vue/parsing/resolving-children/index.html#生成-ast节点数组",a:"生成-ast节点数组"},"241.3":{t:"注释节点的解析",p:`
以 &lt;!-- 开头的字符串 会进入注释节点的解析
通过 parseComment 函数解析的

首先会利用注释结束符 ...`,l:"source/vue/parsing/resolving-children/index.html#注释节点的解析",a:"注释节点的解析"},"241.4":{t:"advanceBy",p:`
主要更新上下文 context 和 source 来前进代码
同时更新  offset line column 等和代码位 ...`,l:"source/vue/parsing/resolving-children/index.html#advanceby",a:"advanceby"},"241.5":{t:"advanceBy 作用",p:"",l:"source/vue/parsing/resolving-children/index.html#advanceby-作用",a:"advanceby-作用"},"241.6":{t:"插值的解析",p:`
如果是 v-pre 会跳过插值的解析
通过 parseInterpolation 函数解析的
首先尝试查找取插值的结束隔离 ...`,l:"source/vue/parsing/resolving-children/index.html#插值的解析",a:"插值的解析"},"241.7":{t:"普通文本的解析",p:`
通过 parseText 函数解析

会尝试从代码中截取响应的文本内容
遇到 &lt; 或者插值分隔符 &lt;span  ...`,l:"source/vue/parsing/resolving-children/index.html#普通文本的解析",a:"普通文本的解析"},"241.8":{t:"元素节点的解析",p:`
会解析模版中的标签节点

当代码是 以 &lt; 开头 后门跟着字母 说明是一个标签开头 进入解析


通过 parseE ...`,l:"source/vue/parsing/resolving-children/index.html#元素节点的解析",a:"元素节点的解析"},"241.9":{t:"解析开始标签 parseTag",p:`
首先匹配标签文本的结束位置  将代码前进到标签文本后门的空白字符后
然后执行 parseAttributes 解析标签的属 ...`,l:"source/vue/parsing/resolving-children/index.html#解析开始标签-parsetag",a:"解析开始标签-parsetag"},"241.10":{t:"解析子节点 parseChildren",p:`
如果遇到元素节点 递归执行 parseElement
parseChildren  和 parseElement 开头 获 ...`,l:"source/vue/parsing/resolving-children/index.html#解析子节点-parsechildren",a:"解析子节点-parsechildren"},"241.11":{t:"解析结束标签",p:`
更新标签节点的代码位置
parseElement 最终返回的值就是一个元素节点的  element

`,l:"source/vue/parsing/resolving-children/index.html#解析结束标签",a:"解析结束标签"},"241.12":{t:"总结",p:`
通过不断递归的解析 就得到整个模版
并且标签类型的  AST 节点保持对子节点数组的引用 构成了一个树形的数据结构
整个解 ...`,l:"source/vue/parsing/resolving-children/index.html#总结",a:"总结"},"242.0":{t:"# 创建解析上下文",p:"",l:"source/vue/parsing/resolving-content/index.html",a:"创建解析上下文"},"242.1":{t:"createParserContext",p:`
解析上下文实际就是一个 js 对象 维护着解析过程中的上下文
options 表示 解析相关配置

会根据传入的配置和默认 ...`,l:"source/vue/parsing/resolving-content/index.html#createparsercontext",a:"createparsercontext"},"243.0":{t:"# 依赖注入",p:"",l:"source/vue/provide-inject/index.html",a:"依赖注入"},"243.1":{t:"provide",p:`
provide 就是提供数据
provide 函数提供的数据主要保存在组件实例的 provides 对象上
在创建组件实例 ...`,l:"source/vue/provide-inject/index.html#provide",a:"provide"},"243.2":{t:"inject",p:`
inject 就是注入数据  注入来自其祖先组件的数据
inject 通过注入的key  来访问其祖先组件实例中的 pro ...`,l:"source/vue/provide-inject/index.html#inject",a:"inject"},"243.3":{t:"对比模块化共享数据的方式",p:"",l:"source/vue/provide-inject/index.html#对比模块化共享数据的方式",a:"对比模块化共享数据的方式"},"243.4":{t:"依赖注入和模块化共享数据的差异",p:`
模块化可以共享数据 但是 provide 和 inject 于模块化相比有几个不同

`,l:"source/vue/provide-inject/index.html#依赖注入和模块化共享数据的差异",a:"依赖注入和模块化共享数据的差异"},"243.5":{t:"作用域不同",p:"",l:"source/vue/provide-inject/index.html#作用域不同",a:"作用域不同"},"243.6":{t:"依赖注入",p:`
局部范围
只能把数据注入这个节点为根的后代组件
不是这颗树上的组件不可能访问到该数据

`,l:"source/vue/provide-inject/index.html#依赖注入",a:"依赖注入"},"243.7":{t:"模块化共享数据",p:`
作用域是全局范围
任何地方可以引用 导出的数据

`,l:"source/vue/provide-inject/index.html#模块化共享数据",a:"模块化共享数据"},"243.8":{t:"数据来源不同",p:"",l:"source/vue/provide-inject/index.html#数据来源不同",a:"数据来源不同"},"243.9":{t:"依赖注入",p:`
后代组件不需要知道那里注入的数据
只需要使用就行

`,l:"source/vue/provide-inject/index.html#依赖注入",a:"依赖注入"},"243.10":{t:"模块化共享数据",p:`
用户必须明确知道这个数据那里来的
那个模块定义的  从而引用

`,l:"source/vue/provide-inject/index.html#模块化共享数据",a:"模块化共享数据"},"243.11":{t:"上下文不同",p:"",l:"source/vue/provide-inject/index.html#上下文不同",a:"上下文不同"},"243.12":{t:"依赖注入",p:`
提供数据的上下文就是组件实例
同一个组件定义可以有多个组件实例
可以根据不同组件上下文方式 为 后代组件提供不同数据

`,l:"source/vue/provide-inject/index.html#依赖注入",a:"依赖注入"},"243.13":{t:"模块化共享数据",p:`
没有上下文
仅仅为了一个模块定义数据
想要根据不同的情况提供不同的数据 需要提供其他 的

`,l:"source/vue/provide-inject/index.html#模块化共享数据",a:"模块化共享数据"},"243.14":{t:"依赖注入的缺陷和应用场景",p:`
依赖注入是和上下文相关的 导致代码耦合在一起

因为祖先组件不需要知道哪些后代组件使用它提供的数据
后代组件也不知道数据注 ...`,l:"source/vue/provide-inject/index.html#依赖注入的缺陷和应用场景",a:"依赖注入的缺陷和应用场景"},"243.15":{t:"总结",p:`
依赖注入的实现主要依赖实例的 provides 对象 默认情况下 子组件的  provides 对象直接指向父组件的 pr ...`,l:"source/vue/provide-inject/index.html#总结",a:"总结"},"244.0":{t:"# 响应式原理总结",p:`
利用 Proxy 实现了对数据访问和修改的劫持 弥补了 Object.defineProperty 的不足
响应式的核心实 ...`,l:"source/vue/reactive-principle/conclusion/index.html",a:"响应式原理总结"},"244.1":{t:"vue2 响应式API实现和组件更新之间的关系",p:`!图片
`,l:"source/vue/reactive-principle/conclusion/index.html#vue2-响应式api实现和组件更新之间的关系",a:"vue2-响应式api实现和组件更新之间的关系"},"244.2":{t:"vue3 响应式API实现和组件更新之间的关系",p:`!图片
`,l:"source/vue/reactive-principle/conclusion/index.html#vue3-响应式api实现和组件更新之间的关系",a:"vue3-响应式api实现和组件更新之间的关系"},"245.0":{t:"# 依赖收集",p:`
依赖收集发生在数据的访问阶段 当数据被访问 会执行 get 函数
get 函数 是执行 createGetter 函数的返 ...`,l:"source/vue/reactive-principle/dep-collection/index.html",a:"依赖收集"},"245.1":{t:"get get 函数主要做了 4件事",p:`
对特殊的 key 做了 代理  比如： __v_raw 返回原始对象 target
如果 target 是数组 并且命中了 ...`,l:"source/vue/reactive-principle/dep-collection/index.html#get-get-函数主要做了-4件事",a:"get-get-函数主要做了-4件事"},"245.2":{t:"arrayInstrumentations",p:`
重写了数组中的 includes indexOf lastIndexOf 函数
当对响应式对象调用 这三个函数 就会 对数 ...`,l:"source/vue/reactive-principle/dep-collection/index.html#arrayinstrumentations",a:"arrayinstrumentations"},"245.3":{t:"track",p:`
创建了全局的 targetMap作为原始数据对象的 Map
键是 target 值是 depsMap 用来作为依赖的 Ma ...`,l:"source/vue/reactive-principle/dep-collection/index.html#track",a:"track"},"246.0":{t:"# 响应式实现的优化 Vue3.2 版本",p:"",l:"source/vue/reactive-principle/implementation-optimized/index.html",a:"响应式实现的优化-vue3-2-版本"},"246.1":{t:"依赖收集的优化",p:`
之前每次执行副作用函数 都需要先执行 cleanup 清除依赖  然后在副作用函数执行的过程重新收集依赖

过程涉及大量的 ...`,l:"source/vue/reactive-principle/implementation-optimized/index.html#依赖收集的优化",a:"依赖收集的优化"},"246.2":{t:"设计的全局变量",p:`effectTrackDepth 执行 effect函数的深度
trackOpBit 标识依赖的收集状态
maxMarker ...`,l:"source/vue/reactive-principle/implementation-optimized/index.html#设计的全局变量",a:"设计的全局变量"},"246.3":{t:"effect 函数实现优化",p:`
内部使用 ReactiveEffect 类创建了  _effect实例 并且让函数返回 runner 指向 Reactiv ...`,l:"source/vue/reactive-principle/implementation-optimized/index.html#effect-函数实现优化",a:"effect-函数实现优化"},"246.4":{t:"优化结果",p:`
相比于优化前 每次执行 effect 函数 都需要清空依赖 添加依赖的过程
优化后 每次执行 effect 函数 标记依赖 ...`,l:"source/vue/reactive-principle/implementation-optimized/index.html#优化结果",a:"优化结果"},"246.5":{t:"trackOpBit 的设计",p:`
标记依赖的 trackOpBit 每次执行计算的时候采用了 左移运算符 trackOpBit = 1 &lt;&lt; + ...`,l:"source/vue/reactive-principle/implementation-optimized/index.html#trackopbit-的设计",a:"trackopbit-的设计"},"247.0":{t:"# 派发通知",p:`
派发通知发生在数据更新阶段 用 proxy 劫持了数据对象 所以当响应式对象的属性值更新的时候 会执行 set 函数
se ...`,l:"source/vue/reactive-principle/notification/index.html",a:"派发通知"},"247.1":{t:"set set 函数 通过 Reflect.set 求值",p:`
通过 trigger 函数派发通知
并依据 key 是否存在与 target 上来确认通知类型 新增还是修改
最核心部分就 ...`,l:"source/vue/reactive-principle/notification/index.html#set-set-函数-通过-reflect-set-求值",a:"set-set-函数-通过-reflect-set-求值"},"247.2":{t:"trigger",p:`
主要做了 4件事

从 targetMap 中获取 target 对应的依赖集合 depsMap
创建运行的 effect ...`,l:"source/vue/reactive-principle/notification/index.html#trigger",a:"trigger"},"247.3":{t:"effect",p:`
effect 内部通过执行 createReactiveEffect 函数创建一个新的 effect 函数  可以叫做 r ...`,l:"source/vue/reactive-principle/notification/index.html#effect",a:"effect"},"247.4":{t:"reactiveEffect 副作用函数",p:"reactiveEffect 函数就是响应式的副作用函数 当执行 trigger 过程派发通知的时候 执行 effect 的 ...",l:"source/vue/reactive-principle/notification/index.html#reactiveeffect-副作用函数",a:"reactiveeffect-副作用函数"},"248.0":{t:"# reactive API",p:`
reactive 函数拥有单个参数 target 必须是对象或者数据类型
内部通过了 createReactiveObje ...`,l:"source/vue/reactive-principle/reactive/index.html",a:"reactive-api"},"248.1":{t:"createReactiveObject",p:`
createReactiveObject 拥有 5个参数

target 表示待变成响应式对象的 对象或者数组
isRea ...`,l:"source/vue/reactive-principle/reactive/index.html#createreactiveobject",a:"createreactiveobject"},"248.2":{t:"mutableHandlers",p:`
劫持了对 proxy 对象对一些操作
访问对象属性会触发 get 函数
设置对象属性会触发 set 函数
删除对象属性会触 ...`,l:"source/vue/reactive-principle/reactive/index.html#mutablehandlers",a:"mutablehandlers"},"249.0":{t:"# readonly",p:`
readonly  和 reactive 主要区别 就是执行 createReactiveObject 函数的参数 isR ...`,l:"source/vue/reactive-principle/readonly/index.html",a:"readonly"},"249.1":{t:"readonlyHandlers",p:`
readonlyHandlers 和 mutableHandlers 区别主要是在于 get set 和 deletePr ...`,l:"source/vue/reactive-principle/readonly/index.html#readonlyhandlers",a:"readonlyhandlers"},"249.2":{t:"readonlyGet",p:`
就是 createGetter(true) 的返回值
readonly  和 reactive  最大区别就是 reado ...`,l:"source/vue/reactive-principle/readonly/index.html#readonlyget",a:"readonlyget"},"250.0":{t:"# ref",p:`
ref 函数返回执行 createRef 函数的返回值
在 createRef 内部 处理了嵌套 ref 的情况  和已经 ...`,l:"source/vue/reactive-principle/ref/index.html",a:"ref"},"250.1":{t:"ref 的优化",p:`
主要是对 ref 对象的 value 属性执行依赖收集和派发通知的逻辑
在 3.2 版本 ref 的实现中 依赖收集部分由 ...`,l:"source/vue/reactive-principle/ref/index.html#ref-的优化",a:"ref-的优化"},"250.2":{t:"trackRefValue",p:`
直接把 ref 相关依赖保存到 dep 属性中 在 track 函数的实现 会把依赖保存在 全局的 targetMap 中 ...`,l:"source/vue/reactive-principle/ref/index.html#trackrefvalue",a:"trackrefvalue"},"250.3":{t:"unref",p:`
template 中访问 响应式对象 不需要 .value 访问  而是在 setupResult 处理的时候 赋值给组件 ...`,l:"source/vue/reactive-principle/ref/index.html#unref",a:"unref"},"251.0":{t:"# shallowReactive API",p:`
reactive  和 shallowReactive 主要区别相当于 baseHandlers 和 collection ...`,l:"source/vue/reactive-principle/shallowReactive/index.html",a:"shallowreactive-api"},"251.1":{t:"shallowReactiveHandlers",p:`
是基于 mutableHandlers 的基础上进行拓展
修改了 get 和 set 函数的实现  实际执行的是 shal ...`,l:"source/vue/reactive-principle/shallowReactive/index.html#shallowreactivehandlers",a:"shallowreactivehandlers"},"251.2":{t:"shallowGet",p:`
也是通过  createGetter 第二个参数传递是 true
第二个参数传递是 true   即使 返回的 res 的 ...`,l:"source/vue/reactive-principle/shallowReactive/index.html#shallowget",a:"shallowget"},"252.0":{t:"# 插槽",p:"",l:"source/vue/slot/index.html",a:"插槽"},"252.1":{t:"插槽的实现",p:`
父组件渲染阶段 子组件插槽部分的 DOM 是不能渲染的
需要通过某种方式保留下来
等到子组件渲染的时候 再渲染

`,l:"source/vue/slot/index.html#插槽的实现",a:"插槽的实现"},"252.2":{t:"父组件的渲染",p:`
通常创建 vnode 传入的子节点是一个数组
createVNode 函数的最后执行了 createBaseVNode 函 ...`,l:"source/vue/slot/index.html#父组件的渲染",a:"父组件的渲染"},"252.3":{t:"normalizeChildren",p:`
主要的作用标准化 children 以及更新 vnode 的节点类型 shapeFlag
主要关注插槽的逻辑

child ...`,l:"source/vue/slot/index.html#normalizechildren",a:"normalizechildren"},"252.4":{t:"子组件的渲染",p:`
在组件的渲染过程中  有一个 setupComponent 的流程
在 setupComponent 的执行过程中  会通 ...`,l:"source/vue/slot/index.html#子组件的渲染",a:"子组件的渲染"},"252.5":{t:"renderSlot",p:`renderSlot 首先根据第二个参数 name 获取对应的插槽函数 slot 然后执行 slot 函数获取插槽的内容

 ...`,l:"source/vue/slot/index.html#renderslot",a:"renderslot"},"252.6":{t:"slot 函数执行的逻辑",p:`
执行了_withCtx 函后的返回值
_withCtx 的主要作用就是给待执行的函数 fn 坐了一层封装

使 fn 执行 ...`,l:"source/vue/slot/index.html#slot-函数执行的逻辑",a:"slot-函数执行的逻辑"},"252.7":{t:"作用域插槽",p:`
和普通插槽相比 作用域插槽编译生成的 render 函数中的插槽对象稍有不同

使用 withCtx 封装的插槽函数多了一 ...`,l:"source/vue/slot/index.html#作用域插槽",a:"作用域插槽"},"252.8":{t:"总结",p:`
插槽的实现实际就是一种延时渲染 把父组件中编写的插槽内容保存到一个对象上

并且把具体的渲染 dom 的代码用函数的方式  ...`,l:"source/vue/slot/index.html#总结",a:"总结"},"253.0":{t:"# v-model",p:`
v-model 指令才是真正意义上的双向绑定

因为数据的流动是双向的
可以作用于原声带表单元素
也可以作用于自定义指令
 ...`,l:"source/vue/v-model/index.html",a:"v-model"},"254.0":{t:"# 整体设计",p:"",l:"source/vue/vue-design/index.html",a:"整体设计"},"254.1":{t:"Vue3 相比于 Vue2 做了哪些优化",p:"",l:"source/vue/vue-design/index.html#vue3-相比于-vue2-做了哪些优化",a:"vue3-相比于-vue2-做了哪些优化"},"254.2":{t:"源码结构上面的优化  采用了  monorepo 和 typscript",p:"vue2 的源码是托管 src 目录 下  根据功能才分了  compiler  core  platforms  serv ...",l:"source/vue/vue-design/index.html#源码结构上面的优化-采用了-monorepo-和-typscript",a:"源码结构上面的优化-采用了-monorepo-和-typscript"},"254.3":{t:"源码体积的优化",p:`
移除一些不常用的 API filter inline-template delete  set 等
引入tree-shak ...`,l:"source/vue/vue-design/index.html#源码体积的优化",a:"源码体积的优化"},"254.4":{t:"数据劫持的优化",p:`
直接 Proxy 替换 Object.defineProperty

缺点：  兼容性更低


vue2 使用的 Obje ...`,l:"source/vue/vue-design/index.html#数据劫持的优化",a:"数据劫持的优化"},"254.5":{t:"编译优化",p:"vue2 的更新 dom  颗粒度是到组件的   虽然保证了更新组件的最小化 但是单个组件内部 依然需要遍历整个 vnode ...",l:"source/vue/vue-design/index.html#编译优化",a:"编译优化"},"254.6":{t:"语法 API 优化",p:`Compostion  Api 更好的逻辑代码拆分  代码不分散

复用优势更大
Vue2 options 代码过于分散
多 ...`,l:"source/vue/vue-design/index.html#语法-api-优化",a:"语法-api-优化"},"254.7":{t:"引入 RFC",p:`
保证每一个 fearure-request 都是经过团队讨论才会进行开发的
提升了 稳定性 少走弯路

`,l:"source/vue/vue-design/index.html#引入-rfc",a:"引入-rfc"},"254.8":{t:"diff算法优化",p:`
新增了静态标记 如果被标记过的 就不会在重新对比
vue2 是全量对比

`,l:"source/vue/vue-design/index.html#diff算法优化",a:"diff算法优化"},"254.9":{t:"静态提升",p:`
会把静态节点进行局部作用域的提升  再次更新的时候不会循环 会直接取声明的
vue2 是 无论是否更新 都会重新创建 do ...`,l:"source/vue/vue-design/index.html#静态提升",a:"静态提升"},"254.10":{t:"SSR优化",p:`
当存在大量静态内容时，这些内容会被当作纯字符串推进一个 buffer 里面，即使存在动态的绑定，会通过模版插值潜入进去。这 ...`,l:"source/vue/vue-design/index.html#ssr优化",a:"ssr优化"},"254.11":{t:"vue3 源码编译过程",p:`
vue3 的源码是通过 monorepo 的方式维护的  根据功能不同的模块拆分到 packages 目录下的不同子目录中 ...`,l:"source/vue/vue-design/index.html#vue3-源码编译过程",a:"vue3-源码编译过程"},"254.12":{t:"vue3 源码结构",p:"",l:"source/vue/vue-design/index.html#vue3-源码结构",a:"vue3-源码结构"},"254.13":{t:"compiler-core",p:`
与平台无关的编译器核心代码实现
包含编译器  基础编译流程
解析模版 生成 ast
ast 节点的转换
根据 ast 生成 ...`,l:"source/vue/vue-design/index.html#compiler-core",a:"compiler-core"},"254.14":{t:"compiler-dom",p:`
在浏览器端编译时 使用 compiler-dom 提供的编译器
专门针对浏览器的转换插件

`,l:"source/vue/vue-design/index.html#compiler-dom",a:"compiler-dom"},"254.15":{t:"compiler-ssr",p:`
在服务端编译时 所使用的 渲染转换插件

`,l:"source/vue/vue-design/index.html#compiler-ssr",a:"compiler-ssr"},"254.16":{t:"compiler-sfc",p:`
处理 .vue 单文件组件 解析 vue 文件
template style script 解析都是这里实现的

`,l:"source/vue/vue-design/index.html#compiler-sfc",a:"compiler-sfc"},"254.17":{t:"runtime-core 虚拟 DOM 渲染器",p:`
组件实现
全局的 js api

`,l:"source/vue/vue-design/index.html#runtime-core-虚拟-dom-渲染器",a:"runtime-core-虚拟-dom-渲染器"},"254.18":{t:"runtime-dom",p:`
对原生 dom api   属性 样式 事件等的管理

`,l:"source/vue/vue-design/index.html#runtime-dom",a:"runtime-dom"},"254.19":{t:"runtime-test",p:`
测试 runtime-core 用于内部测试

`,l:"source/vue/vue-design/index.html#runtime-test",a:"runtime-test"},"254.20":{t:"reactivity",p:`
响应式系统
runtime-core 包的依赖
可以独立使用

`,l:"source/vue/vue-design/index.html#reactivity",a:"reactivity"},"254.21":{t:"template-explorer",p:`
调试模版编译输出的工具
在源码目录中 yarn dev-compiler

`,l:"source/vue/vue-design/index.html#template-explorer",a:"template-explorer"},"254.22":{t:"sfc-playground",p:`
调试 sfc 的工具

`,l:"source/vue/vue-design/index.html#sfc-playground",a:"sfc-playground"},"254.23":{t:"shared",p:`
多个包共享的实用工具库
size-check
检测 tree-shaking 后的代码体积

`,l:"source/vue/vue-design/index.html#shared",a:"shared"},"254.24":{t:"server-renderer",p:`
服务端渲染的核心实现

`,l:"source/vue/vue-design/index.html#server-renderer",a:"server-renderer"},"254.25":{t:"vue",p:`
面向用户的完整构建

`,l:"source/vue/vue-design/index.html#vue",a:"vue"},"254.26":{t:"vue-compat",p:`
构建版本 可配置兼容 vue2 版本

`,l:"source/vue/vue-design/index.html#vue-compat",a:"vue-compat"},"255.0":{t:"# 监听器总结总结",p:`
侦听器用于观测响应式数据的变化 然后执行执行某些逻辑 执行也分多钟

同步执行
渲染前执行
渲染后执行


即使 侦听器观 ...`,l:"source/vue/watch/conclusion/index.html",a:"监听器总结总结"},"256.0":{t:"# 异步任务队列的创建",p:"",l:"source/vue/watch/design/index.html",a:"异步任务队列的创建"},"256.1":{t:"异步任务队列的创建",p:`
组件的副作用函数 instance.update 在它依赖的响应数据更新后 通过 queueJob 方式再次运行
vue  ...`,l:"source/vue/watch/design/index.html#异步任务队列的创建",a:"异步任务队列的创建"},"256.2":{t:"queueFlush",p:`
vue 内部维护了 isFlushing  和 isFlushPending 变量 用来控制异步任务的刷新逻辑
在 que ...`,l:"source/vue/watch/design/index.html#queueflush",a:"queueflush"},"256.3":{t:"异步任务队列的执行",p:"",l:"source/vue/watch/design/index.html#异步任务队列的执行",a:"异步任务队列的执行"},"256.4":{t:"flushJobs",p:`
一开始会把 isFlushPending 重置为 false 把 isFlushing 设置为 true 表示正在执行异步 ...`,l:"source/vue/watch/design/index.html#flushjobs",a:"flushjobs"},"256.5":{t:"flushPreFlushCbs",p:`
首先对 pendingPreFlushCbs 做了去重 赋值给 activePreFlushCbs 然后清空自己
遍历 a ...`,l:"source/vue/watch/design/index.html#flushpreflushcbs",a:"flushpreflushcbs"},"256.6":{t:"flushPostFlushCbs",p:`
flushPostFlushCbs 函数和 flushPreFlushCbs 的逻辑类似 主要就是执行一些后续处理的任务
 ...`,l:"source/vue/watch/design/index.html#flushpostflushcbs",a:"flushpostflushcbs"},"256.7":{t:"检查循环更新",p:"",l:"source/vue/watch/design/index.html#检查循环更新",a:"检查循环更新"},"256.8":{t:"checkRecursiveUpdates flushJobs 一开始创建了 seen 是一个 map 对象  然后在 checkRecursiveUpdates 的时候",p:`
会把任务添加到 seen 中并记录引用计数 count  初始值 为 1 如果再次添加相同的任务 会自增 如果 count ...`,l:"source/vue/watch/design/index.html#checkrecursiveupdates-flushjobs-一开始创建了-seen-是一个-map-对象-然后在-checkrecursiveupdates-的时候",a:"checkrecursiveupdates-flushjobs-一开始创建了-seen-是一个-map-对象-然后在-checkrecursiveupdates-的时候"},"257.0":{t:"# 开发环境 侦听器调试",p:"",l:"source/vue/watch/dev-debg/index.html",a:"开发环境-侦听器调试"},"257.1":{t:"onTrack",p:`
当观测的响应式对象被访问的时候 会触发 onTrack回调函数
会接受一个包含有关依赖细腻下的调试器事件

`,l:"source/vue/watch/dev-debg/index.html#ontrack",a:"ontrack"},"257.2":{t:"onTrigger",p:`

当响应式对象被修改的时候 会触发 onTrigger 回调函数


会接受一个包含有关依赖细腻下的调试器事件


侦听器 ...`,l:"source/vue/watch/dev-debg/index.html#ontrigger",a:"ontrigger"},"258.0":{t:"# watch API 的实现原理",p:"",l:"source/vue/watch/realize-principle/index.html",a:"watch-api-的实现原理"},"258.1":{t:"watch API 用法",p:`
watch API 可以监听一个 getter 函数  但是必须返回一个响应式对象

当响应式对象更新后 会执行对应的回调 ...`,l:"source/vue/watch/realize-principle/index.html#watch-api-用法",a:"watch-api-用法"},"258.2":{t:"watch API 实现原理",p:`
当监听对象或者函数发生变化的时候   监听器自动执行某个回调函数
watch 函数 拥有三个参数

source 表示监听 ...`,l:"source/vue/watch/realize-principle/index.html#watch-api-实现原理",a:"watch-api-实现原理"},"258.3":{t:"标准化 source",p:`
source 可以是 getter 函数 也可以是响应式对象 甚至是响应式对象数组

所以需要标准化 source


s ...`,l:"source/vue/watch/realize-principle/index.html#标准化-source",a:"标准化-source"},"258.4":{t:"traverse",p:`
通过递归的方式访问 value 的每一个子属性
deep 属于 watcher 的一个配置选项

`,l:"source/vue/watch/realize-principle/index.html#traverse",a:"traverse"},"258.5":{t:"创建 job 处理完 watch 第一个 参数 source 之后 开始处理 cb",p:`
cb 是一个回调函数 有三个参数

newValue : 新值
oldValue : 老值
onInvalidate :  ...`,l:"source/vue/watch/realize-principle/index.html#创建-job-处理完-watch-第一个-参数-source-之后-开始处理-cb",a:"创建-job-处理完-watch-第一个-参数-source-之后-开始处理-cb"},"258.6":{t:"创建 scheduler",p:`
scheduler 创建逻辑收到了第三个参数 options 中的 flush 的值影响 有三种状态 决定  watche ...`,l:"source/vue/watch/realize-principle/index.html#创建-scheduler",a:"创建-scheduler"},"258.7":{t:"创建 effect wachter 内部都会 创建 effect 对象",p:"",l:"source/vue/watch/realize-principle/index.html#创建-effect-wachter-内部都会-创建-effect-对象",a:"创建-effect-wachter-内部都会-创建-effect-对象"},"258.8":{t:"effect.run 的执行",p:`
当回调函数 cb 存在 immediate 为 false 首次执行 effect.run 函数求 旧值
函数内部执行 g ...`,l:"source/vue/watch/realize-principle/index.html#effect-run-的执行",a:"effect-run-的执行"},"258.9":{t:"配置了 immediate",p:`
创建完 wacher 就会立刻直接 job 函数
oldValue 还是初始值 在 job 执行时候也会执行 effect ...`,l:"source/vue/watch/realize-principle/index.html#配置了-immediate",a:"配置了-immediate"},"258.10":{t:"返回销毁函数",p:`
会返回一个 销毁函数  是 watch 执行后返回的函数 可以通过调用 来停止对数据的监听
销毁函数 内部会执行 effe ...`,l:"source/vue/watch/realize-principle/index.html#返回销毁函数",a:"返回销毁函数"},"258.11":{t:"总结",p:`
watch 内部设计很巧妙 可以监听数据的变化 内部创建了 effect 对象
首次执行  effect.run 做依赖收 ...`,l:"source/vue/watch/realize-principle/index.html#总结",a:"总结"},"259.0":{t:"# watchEffect API",p:"",l:"source/vue/watch/watchEffect/index.html",a:"watcheffect-api"},"259.1":{t:"watchEffect",p:`
作用是注册 一个副作用函数 副作用函数内部可以访问响应式对象
当响应式对象变化 立即执行这个函数

`,l:"source/vue/watch/watchEffect/index.html#watcheffect",a:"watcheffect"},"259.2":{t:"watchEffect 和 watch  的不同",p:`
监听的源不同

watch 可以监听一个或者多个响应式对象 还可以监听一个 getter 函数
watchEffect 监 ...`,l:"source/vue/watch/watchEffect/index.html#watcheffect-和-watch-的不同",a:"watcheffect-和-watch-的不同"},"259.3":{t:"注册无效回调函数 onInvalidate 可以利用 watchEffect 注册一个副作用函数  有一个 onInvalidate 参数",p:`
函数内部通过 preformAsyncOperation 执行某些异步操作 并且访问了 id 这个响应式对象
然后通过 o ...`,l:"source/vue/watch/watchEffect/index.html#注册无效回调函数-oninvalidate-可以利用-watcheffect-注册一个副作用函数-有一个-oninvalidate-参数",a:"注册无效回调函数-oninvalidate-可以利用-watcheffect-注册一个副作用函数-有一个-oninvalidate-参数"},"260.0":{t:"# Warp",p:"程序员的一生，用的最多的两个工具，一个是代码编辑器（Code Editor），另外一个就是命令行终端工具（Terminal） ...",l:"tool/Warp/index.html",a:"warp"},"260.1":{t:"一、安装 Warp",p:"直接到官网 warp.dev 点击「download now」就可以下载最新版了。下载完成后，双击安装包就可以安装了。完成后 ...",l:"tool/Warp/index.html#一、安装-warp",a:"一、安装-warp"},"260.2":{t:"二、使用 Warp",p:`Warp 解决的第一个痛点，就是减少配置、方便输入、优化输出，并且增加常用命令的自动提示。
1）智能提示
普通的终端在你键入 ...`,l:"tool/Warp/index.html#二、使用-warp",a:"二、使用-warp"},"260.3":{t:"三、配置 Warp",p:`输入 Command+P 快捷键可以打开 Warp 的命令面板。
!
键入 sett 关键字就可以打开配置页。
比如说在「A ...`,l:"tool/Warp/index.html#三、配置-warp",a:"三、配置-warp"},"260.4":{t:"四、总结",p:`最后总结一波吧。
这波着实属于尝鲜了，市面上应该还木有 Warp 终端的普及安利文章，我这期应该属于大姑娘坐花轿———头一回 ...`,l:"tool/Warp/index.html#四、总结",a:"四、总结"},"261.0":{t:"# api 搜索",p:"",l:"tool/api-all/index.html",a:"api-搜索"},"261.1":{t:"api all",p:`https://devdocs.io/
`,l:"tool/api-all/index.html#api-all",a:"api-all"},"262.0":{t:"# 1. 背景",p:`目前国内有很多 NPM 的 CDN，可以高速支持相关包文件的访问下载，如：

BootCDN: www.bootcdn.cn ...`,l:"tool/cdn/index.html",a:"_1-背景"},"263.0":{t:"# OpenAI 推出超神 ChatGPT 注册攻略来了",p:"前几天，OpenAI 推出超神 ChatGPT，非常火爆。但是呢，因为不可抗力原因，大部分人无法体验到。这里我分享一下注册的 ...",l:"tool/chartGpt/index.html",a:"openai-推出超神-chatgpt-注册攻略来了"},"263.1":{t:"准备",p:`
首先能能访问 Google（前置条件，不能明确说，懂得都懂）
你得有一个国外手机号，GV 号肯定不行。

如果你没有国外手 ...`,l:"tool/chartGpt/index.html#准备",a:"准备"},"263.2":{t:"注册短信平台并充值",p:`
先行注册sms-activate.org
注册好之后进行对应的充值

!image.png 接码费用一次为 10.5 卢布 ...`,l:"tool/chartGpt/index.html#注册短信平台并充值",a:"注册短信平台并充值"},"263.3":{t:"注册OpenAI账号",p:`
打开beta.openai.com/signup 页面进行相应的注册。

这里同样需要你能访问Google且 ip 不是香 ...`,l:"tool/chartGpt/index.html#注册openai账号",a:"注册openai账号"},"263.4":{t:"准备接码",p:`
这里需要注意下的就是，目前好像就只有巴西和印度支持了，之前我选的印尼，是可以收到码的。

!image.png
!imag ...`,l:"tool/chartGpt/index.html#准备接码",a:"准备接码"},"263.5":{t:"开始使用ChatGPT",p:`注册完后，我们去ChatGPT网站去登陆。chat.openai.com/auth/login
!image.png
!im ...`,l:"tool/chartGpt/index.html#开始使用chatgpt",a:"开始使用chatgpt"},"263.6":{t:"12 月 6 日更新",p:`
如果你的页面出现下面提示，说明你代理不行~~

!img_v2_36533eb4-fa66-40bb-b165-ad8b6 ...`,l:"tool/chartGpt/index.html#_12-月-6-日更新",a:"_12-月-6-日更新"},"264.0":{t:"# 在线编辑器",p:`https://jsrun.net/new
`,l:"tool/code/index.html",a:"在线编辑器"},"265.0":{t:"# code-fun",p:`☀️ 前言
🤔 什么是 CodeFun

大部分公司中我们前端现在的开发工作流大概是下面这几步。

一般会有UI先根据产品 ...`,l:"tool/code-fun/index.html",a:"code-fun"},"265.1":{t:"多平台、多框架支持",p:`
支持 Vue 等主流 Web 开发框架代码输出。
支持微信小程序代码输出，当你选择小程序代码输出时，像素单位会新增一个rp ...`,l:"tool/code-fun/index.html#多平台、多框架支持",a:"多平台、多框架支持"},"265.2":{t:"循环列表自动输出",p:`
我们平时在写一个列表组件的时候都喜欢使用v-for,wx:for,map等遍历输出列表，而CodeFun也做到了这种代码的 ...`,l:"tool/code-fun/index.html#循环列表自动输出",a:"循环列表自动输出"},"265.3":{t:"批量数据绑定",p:`

在我们平时Coding的过程中都不会把数据写死，而是用变量来代替进行动态渲染，而CodeFun支持批量数据绑定功能，我们 ...`,l:"tool/code-fun/index.html#批量数据绑定",a:"批量数据绑定"},"265.4":{t:"一键预览功能",p:`
有很多同学反馈在之前做小程序的情况下需要将代码编写完整并跑起来的情况下，使用微信的预览功能才可以看到效果，会比较繁琐。
而 ...`,l:"tool/code-fun/index.html#一键预览功能",a:"一键预览功能"},"265.5":{t:"更加舒适的“生成代码”",p:`
在CodeFun生成的代码中是会让人看起来比较舒适的。

变量名可读性会比较强。
布局一般不会固定死宽高，而是使用padd ...`,l:"tool/code-fun/index.html#更加舒适的-生成代码",a:"更加舒适的-生成代码"},"266.0":{t:"# 代码转换工具",p:`https://toolgg.com/jade-to-html.html
`,l:"tool/code-transform/index.html",a:"代码转换工具"},"267.0":{t:"# 压缩图片",p:"",l:"tool/compressed-image/index.html",a:"压缩图片"},"267.1":{t:"IIMG",p:`https://www.iloveimg.com/zh-cn/compress-image
`,l:"tool/compressed-image/index.html#iimg",a:"iimg"},"268.0":{t:"# 压缩视频",p:"",l:"tool/compressed-video/index.html",a:"压缩视频"},"268.1":{t:"shipinyasuo",p:`https://www.shipinyasuo.com/compress
`,l:"tool/compressed-video/index.html#shipinyasuo",a:"shipinyasuo"},"269.0":{t:"# 生成指定尺寸的图片",p:`https://dummyimage.com/200x300&amp;text=dummyimage.com+rocks!
`,l:"tool/create-image/index.html",a:"生成指定尺寸的图片"},"270.0":{t:"# 抽奖插件",p:`https://100px.net/demo/slot.html
https://github.com/buuing/luc ...`,l:"tool/ducky-draw/index.html",a:"抽奖插件"},"271.0":{t:"# 常用 git",p:"",l:"tool/git-all/index.html",a:"常用-git"},"271.1":{t:"阮一峰",p:`http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html
`,l:"tool/git-all/index.html#阮一峰",a:"阮一峰"},"272.0":{t:"# intro 页面引导",p:`https://github.com/usablica/intro.js
`,l:"tool/intro/index.html",a:"intro-页面引导"},"273.0":{t:"# JSON",p:"",l:"tool/json-view/index.html",a:"json"},"273.1":{t:"JSON可视化",p:`https://www.json.cn/
`,l:"tool/json-view/index.html#json可视化",a:"json可视化"},"274.0":{t:"# 好看的loading 网站",p:`https://epic-spinners.epicmax.co/
`,l:"tool/loading-html/index.html",a:"好看的loading-网站"},"275.0":{t:"# 快速搭建前端Mac环境",p:`一、终端

一个好看的终端，可以给自己带来好心情

`,l:"tool/mac-init/index.html",a:"快速搭建前端mac环境"},"275.1":{t:"1\\. iTerm2",p:`

下载地址


设置默认终端

安装完成后，在/bin目录下会多出一个zsh的文件。
Mac系统默认使用bash作为终端， ...`,l:"tool/mac-init/index.html#_1-iterm2",a:"_1-iterm2"},"275.2":{t:"2\\. 使用Oh My Zsh 打扮终端",p:`

安装Oh my zsh

第一种：curl 安装方式



# curl 安装方式
sh -c &quot;$(curl ...`,l:"tool/mac-init/index.html#_2-使用oh-my-zsh-打扮终端",a:"_2-使用oh-my-zsh-打扮终端"},"276.0":{t:"# marktext",p:`
作为一名程序员，经常会有写技术文档的需求。Markdown由于语法简洁、使用方便深受广大程序员们的喜爱。谁电脑上不安装个M ...`,l:"tool/marktext/index.html",a:"marktext"},"277.0":{t:"# 在线ps",p:`https://ps.gaoding.com/#/
`,l:"tool/ps/index.html",a:"在线ps"},"278.0":{t:"# 奇链",p:`https://www.dbyun.net/
`,l:"tool/q-link/index.html",a:"奇链"},"279.0":{t:"# 鼠标特效",p:"",l:"tool/special-effects/mouse/index.html",a:"鼠标特效"},"279.1":{t:"1\\. 鼠标点击弹出爱心",p:`效果图
!1.gif
html代码
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en ...`,l:"tool/special-effects/mouse/index.html#_1-鼠标点击弹出爱心",a:"_1-鼠标点击弹出爱心"},"279.2":{t:"2\\. 鼠标点击弹出文字",p:`效果图
!2.gif
html代码
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en ...`,l:"tool/special-effects/mouse/index.html#_2-鼠标点击弹出文字",a:"_2-鼠标点击弹出文字"},"279.3":{t:"3\\. 鼠标点击弹出烟花波纹",p:`效果图
!3.gif
html代码
&lt;html&gt;
&lt;body&gt;

&lt;/body&gt;
&lt ...`,l:"tool/special-effects/mouse/index.html#_3-鼠标点击弹出烟花波纹",a:"_3-鼠标点击弹出烟花波纹"},"279.4":{t:"4\\. 鼠标小星星拖尾跟随",p:`效果图
!4.gif
html代码
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en ...`,l:"tool/special-effects/mouse/index.html#_4-鼠标小星星拖尾跟随",a:"_4-鼠标小星星拖尾跟随"},"279.5":{t:"5\\. 鼠标粒子随心拖尾跟随",p:`效果图
!5.gif
html代码
&lt;!DOCTYPE html&gt;
&lt;html&gt;
  &lt;hea ...`,l:"tool/special-effects/mouse/index.html#_5-鼠标粒子随心拖尾跟随",a:"_5-鼠标粒子随心拖尾跟随"},"279.6":{t:"6\\. 鼠标笑脸跟随+仙女棒+泡泡+雪花+点击烟花效果（自由组合）",p:`效果图
!6.gif
html代码
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en ...`,l:"tool/special-effects/mouse/index.html#_6-鼠标笑脸跟随-仙女棒-泡泡-雪花-点击烟花效果-自由组合",a:"_6-鼠标笑脸跟随-仙女棒-泡泡-雪花-点击烟花效果-自由组合"},"279.7":{t:"7\\. 樱花特效",p:`效果图
!7.gif
html代码
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD X ...`,l:"tool/special-effects/mouse/index.html#_7-樱花特效",a:"_7-樱花特效"},"279.8":{t:"8\\. 蜘蛛网特效",p:`效果图 !8.gif
js代码
!function () {
    function n(n, e, t) {
      ...`,l:"tool/special-effects/mouse/index.html#_8-蜘蛛网特效",a:"_8-蜘蛛网特效"},"279.9":{t:"9\\. 看板娘（左下角的小人）",p:`效果图
!9.gif
html代码
&lt;link rel=&quot;stylesheet&quot; href=&qu ...`,l:"tool/special-effects/mouse/index.html#_9-看板娘-左下角的小人",a:"_9-看板娘-左下角的小人"},"279.10":{t:"10\\. 烟花",p:`效果图
!10.gif
html代码
&lt;!doctype html&gt;
&lt;html&gt;
&lt;head ...`,l:"tool/special-effects/mouse/index.html#_10-烟花",a:"_10-烟花"},"280.0":{t:"# 静态站点部署",p:"",l:"tool/static-html/index.html",a:"静态站点部署"},"280.1":{t:"腾讯云",p:`https://console.cloud.tencent.com/webify/index
`,l:"tool/static-html/index.html#腾讯云",a:"腾讯云"},"281.0":{t:"# 常用轮子集合",p:"",l:"tool/tool-collection/index.html",a:"常用轮子集合"},"281.1":{t:"函数库",p:`
Lodash（推荐）：https://github.com/lodash/lodash
Underscore：unders ...`,l:"tool/tool-collection/index.html#函数库",a:"函数库"},"281.2":{t:"动画库",p:`Animate.css CSS3 动画库，也是目前最通用的动画库。

https://daneden.github.io/a ...`,l:"tool/tool-collection/index.html#动画库",a:"动画库"},"281.3":{t:"滚动库",p:`
iscroll - 平滑滚动插件：https://github.com/cubiq/iscroll
BetterScrol ...`,l:"tool/tool-collection/index.html#滚动库",a:"滚动库"},"281.4":{t:"轮播图",p:`
Swiper：

常用于移动端网站的内容触摸滑动
www.swiper.com.cn/


slip.js：

移动端跟随 ...`,l:"tool/tool-collection/index.html#轮播图",a:"轮播图"},"281.5":{t:"滚屏",p:`fullpage：https://www.jq22.com/jquery-info1124
`,l:"tool/tool-collection/index.html#滚屏",a:"滚屏"},"282.0":{t:"# valine 页面评论功能",p:"",l:"tool/valine/index.html",a:"valine-页面评论功能"},"282.1":{t:"官网",p:`https://valine.js.org/
`,l:"tool/valine/index.html#官网",a:"官网"},"282.2":{t:"实例",p:`&lt;template&gt;
  &lt;div class=&quot;page&quot;&gt;
    &lt; ...`,l:"tool/valine/index.html#实例",a:"实例"},"283.0":{t:"# 常用hooks",p:"",l:"utils/hooks/index.html",a:"常用hooks"},"283.1":{t:"useAfter",p:`/*
 * 后置装饰器，按照AOP原则为功能动态注入一个后置函数，默认同步
 * */
const useAfter = ( ...`,l:"utils/hooks/index.html#useafter",a:"useafter"},"283.2":{t:"useBefore",p:`/*
 * 前置装饰器，按照AOP原则为功能动态注入一个前置函数，默认同步
 * */
const useBefore =  ...`,l:"utils/hooks/index.html#usebefore",a:"usebefore"},"283.3":{t:"责任链 Chain",p:`/*
 * 责任链 类
 * */
class Chain {
  constructor(fn) {
    this.f ...`,l:"utils/hooks/index.html#责任链-chain",a:"责任链-chain"},"283.4":{t:"防抖 useDebounce",p:`
/*
 * 防抖
 * */

/**
 * 防抖
 * @param {*} func
 * @param {*} wa ...`,l:"utils/hooks/index.html#防抖-usedebounce",a:"防抖-usedebounce"},"283.5":{t:"useDelay",p:`/*
 * 延时
 * */
const useDelay = wait =&gt; new Promise(resolve ...`,l:"utils/hooks/index.html#usedelay",a:"usedelay"},"283.6":{t:"useLock",p:`/*
 * 锁机制-&gt; 解决多次连续触发接口问题，防双击
 * 默认情况下，需要原函数返回一个promise以达到pr ...`,l:"utils/hooks/index.html#uselock",a:"uselock"},"283.7":{t:"责任链 Middleware",p:`/*
 * 中间件 类
 * */
class Middleware {
  constructor() {
    thi ...`,l:"utils/hooks/index.html#责任链-middleware",a:"责任链-middleware"},"283.8":{t:"useOnce",p:`/*
 * 让一个事件（一个函数）只允许调用一次
 * */
const useOnce = fn =&gt; {
  le ...`,l:"utils/hooks/index.html#useonce",a:"useonce"},"283.9":{t:"useSafeCall",p:`/*
 * */
const useSafeCall = async callback =&gt; {
  if (call ...`,l:"utils/hooks/index.html#usesafecall",a:"usesafecall"},"283.10":{t:"useServices",p:`
const isObject = (obj) =&gt; typeof obj === 'object'
const is ...`,l:"utils/hooks/index.html#useservices",a:"useservices"},"283.11":{t:"状态机 State",p:`/*
 * 状态模式 状态机
 *  */
class State {
  constructor(actions) {
  ...`,l:"utils/hooks/index.html#状态机-state",a:"状态机-state"},"283.12":{t:"节流 useThrottle",p:`
/*
 * 节流
 * */

/**
 * 节流
 * @param   {function}  func        ...`,l:"utils/hooks/index.html#节流-usethrottle",a:"节流-usethrottle"},"284.0":{t:"# 常用正则",p:"",l:"utils/rules/index.html",a:"常用正则"},"284.1":{t:"火车车次",p:`/^[GCDZTSPKXLY1-9]\\d{1,4}$/

`,l:"utils/rules/index.html#火车车次",a:"火车车次"},"284.2":{t:"手机机身码(IMEI)",p:`/^\\d{15,17}$/

`,l:"utils/rules/index.html#手机机身码-imei",a:"手机机身码-imei"},"284.3":{t:"必须带端口号的网址(或ip)",p:`/^((ht|f)tps?:\\/\\/)?[\\w-]+(\\.[\\w-]+)+:\\d{1,5}\\/?$/

`,l:"utils/rules/index.html#必须带端口号的网址-或ip",a:"必须带端口号的网址-或ip"},"284.4":{t:"网址(URL)",p:`/^(((ht|f)tps?):\\/\\/)?(^!@#$%^&amp;*?.\\s-?\\.)+[a-z]{2,6}\\/?/

`,l:"utils/rules/index.html#网址-url",a:"网址-url"},"284.5":{t:"统一社会信用代码",p:`/^[0-9A-HJ-NPQRTUWXY]{2}\\d{6}[0-9A-HJ-NPQRTUWXY]{10}$/

`,l:"utils/rules/index.html#统一社会信用代码",a:"统一社会信用代码"},"284.6":{t:"统一社会信用代码(宽松匹配)(15位/18位/20位数字/字母)",p:`/^(([0-9A-Za-z]{15})|([0-9A-Za-z]{18})|([0-9A-Za-z]{20}))$/

`,l:"utils/rules/index.html#统一社会信用代码-宽松匹配-15位-18位-20位数字-字母",a:"统一社会信用代码-宽松匹配-15位-18位-20位数字-字母"},"284.7":{t:"迅雷链接",p:`/^thunderx?:\\/\\/[a-zA-Z\\d]+=$/

`,l:"utils/rules/index.html#迅雷链接",a:"迅雷链接"},"284.8":{t:"ed2k链接(宽松匹配)",p:`/^ed2k:\\/\\/\\|file\\|.+\\|\\/$/

`,l:"utils/rules/index.html#ed2k链接-宽松匹配",a:"ed2k链接-宽松匹配"},"284.9":{t:"磁力链接(宽松匹配)",p:`/^magnet:\\?xt=urn:btih:[0-9a-fA-F]{40,}.*$/

`,l:"utils/rules/index.html#磁力链接-宽松匹配",a:"磁力链接-宽松匹配"},"284.10":{t:"子网掩码(不包含 0.0.0.0)",p:"/^(254|252|248|240|224|192|128)\\.0\\.0\\.0|255\\.(254|252|248|240 ...",l:"utils/rules/index.html#子网掩码-不包含-0-0-0-0",a:"子网掩码-不包含-0-0-0-0"},"284.11":{t:'linux"隐藏文件"路径',p:`/^\\/(?:[^/]+\\/)*\\.[^/]*/

`,l:"utils/rules/index.html#linux-隐藏文件-路径",a:"linux-隐藏文件-路径"},"284.12":{t:"linux文件夹路径",p:`/^\\/(?:[^/]+\\/)*$/

`,l:"utils/rules/index.html#linux文件夹路径",a:"linux文件夹路径"},"284.13":{t:"linux文件路径",p:`/^\\/(?:[^/]+\\/)*[^/]+$/

`,l:"utils/rules/index.html#linux文件路径",a:"linux文件路径"},"284.14":{t:'window"文件夹"路径',p:`/^[a-zA-Z]:\\\\(?:\\w+\\\\?)*$/

`,l:"utils/rules/index.html#window-文件夹-路径",a:"window-文件夹-路径"},"284.15":{t:'window下"文件"路径',p:`/^[a-zA-Z]:\\\\(?:\\w+\\\\)*\\w+\\.\\w+$/

`,l:"utils/rules/index.html#window下-文件-路径",a:"window下-文件-路径"},"284.16":{t:"股票代码(A股)",p:"/^(s[hz]|S[HZ])(000[\\d]{3}|002[\\d]{3}|300[\\d]{3}|600[\\d]{3}|60 ...",l:"utils/rules/index.html#股票代码-a股",a:"股票代码-a股"},"284.17":{t:"大于等于0, 小于等于150, 支持小数位出现5, 如145.5, 用于判断考卷分数",p:`/^150$|^(?:\\d|[1-9]\\d|1[0-4]\\d)(?:\\.5)?$/

`,l:"utils/rules/index.html#大于等于0-小于等于150-支持小数位出现5-如145-5-用于判断考卷分数",a:"大于等于0-小于等于150-支持小数位出现5-如145-5-用于判断考卷分数"},"284.18":{t:"html注释",p:`/&lt;!--[\\s\\S]*?--&gt;/g

`,l:"utils/rules/index.html#html注释",a:"html注释"},"284.19":{t:"md5格式(32位)",p:`/^[a-fA-F0-9]{32}$/

`,l:"utils/rules/index.html#md5格式-32位",a:"md5格式-32位"},"284.20":{t:"GUID/UUID",p:`/^[a-f\\d]{4}(?:[a-f\\d]{4}-){4}[a-f\\d]{12}$/i

`,l:"utils/rules/index.html#guid-uuid",a:"guid-uuid"},"284.21":{t:"版本号(version)格式必须为X.Y.Z",p:`/^\\d+(?:\\.\\d+){2}$/

`,l:"utils/rules/index.html#版本号-version-格式必须为x-y-z",a:"版本号-version-格式必须为x-y-z"},"284.22":{t:"视频(video)链接地址（视频格式可按需增删）",p:"/^https?:\\/\\/(.+\\/)+.+(\\.(swf|avi|flv|mpg|rm|mov|wav|asf|3gp|m ...",l:"utils/rules/index.html#视频-video-链接地址-视频格式可按需增删",a:"视频-video-链接地址-视频格式可按需增删"},"284.23":{t:"图片(image)链接地址（图片格式可按需增删）",p:"/^https?:\\/\\/(.+\\/)+.+(\\.(gif|png|jpg|jpeg|webp|svg|psd|bmp|ti ...",l:"utils/rules/index.html#图片-image-链接地址-图片格式可按需增删",a:"图片-image-链接地址-图片格式可按需增删"},"284.24":{t:"24小时制时间（HH:mm:ss）",p:`/^(?:[01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d$/

`,l:"utils/rules/index.html#_24小时制时间-hh-mm-ss",a:"_24小时制时间-hh-mm-ss"},"284.25":{t:"12小时制时间（hh:mm:ss）",p:`/^(?:1[0-2]|0?[1-9]):[0-5]\\d:[0-5]\\d$/

`,l:"utils/rules/index.html#_12小时制时间-hh-mm-ss",a:"_12小时制时间-hh-mm-ss"},"284.26":{t:"base64格式",p:"/^\\s*data:(?:[a-z]+\\/[a-z0-9-+.]+(?:;[a-z-]+=[a-z0-9-]+)?)?(?: ...",l:"utils/rules/index.html#base64格式",a:"base64格式"},"284.27":{t:"数字/货币金额（支持负数、千分位分隔符）",p:`/^-?\\d+(,\\d{3})*(\\.\\d{1,2})?$/

`,l:"utils/rules/index.html#数字-货币金额-支持负数、千分位分隔符",a:"数字-货币金额-支持负数、千分位分隔符"},"284.28":{t:"数字/货币金额 (只支持正数、不支持校验千分位分隔符)",p:`/(?:^1-9?(?:\\.0-9]{1,2})?$)|(?:^(?:0)$)|(?:^[0-9]\\.[0-9?$)/

`,l:"utils/rules/index.html#数字-货币金额-只支持正数、不支持校验千分位分隔符",a:"数字-货币金额-只支持正数、不支持校验千分位分隔符"},"284.29":{t:"银行卡号（10到30位, 覆盖对公/私账户, 参考微信支付）",p:`/^[1-9]\\d{9,29}$/

`,l:"utils/rules/index.html#银行卡号-10到30位-覆盖对公-私账户-参考微信支付",a:"银行卡号-10到30位-覆盖对公-私账户-参考微信支付"},"284.30":{t:"中文姓名",p:`/^(?:[\\u4e00-\\u9fa5·]{2,16})$/

`,l:"utils/rules/index.html#中文姓名",a:"中文姓名"},"284.31":{t:"英文姓名",p:`/(^[a-zA-Z][a-zA-Z\\s]{0,20}[a-zA-Z]$)/

`,l:"utils/rules/index.html#英文姓名",a:"英文姓名"},"284.32":{t:"车牌号(新能源)",p:"/^京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z|([A-HJK][A-HJ-N ...",l:"utils/rules/index.html#车牌号-新能源",a:"车牌号-新能源"},"284.33":{t:"车牌号(非新能源)",p:"/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9] ...",l:"utils/rules/index.html#车牌号-非新能源",a:"车牌号-非新能源"},"284.34":{t:"车牌号(新能源+非新能源)",p:"/^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领][A-HJ-NP-Z][A-HJ-NP-Z0-9] ...",l:"utils/rules/index.html#车牌号-新能源-非新能源",a:"车牌号-新能源-非新能源"},"284.35":{t:"手机号(mobile phone)中国(严谨), 根据工信部2019年最新公布的手机号段",p:"/^(?:(?:\\+|00)86)?1(?:(?:3[\\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6 ...",l:"utils/rules/index.html#手机号-mobile-phone-中国-严谨-根据工信部2019年最新公布的手机号段",a:"手机号-mobile-phone-中国-严谨-根据工信部2019年最新公布的手机号段"},"284.36":{t:"手机号(mobile phone)中国(宽松), 只要是13,14,15,16,17,18,19开头即可",p:`/^(?:(?:\\+|00)86)?1[3-9]\\d{9}$/

`,l:"utils/rules/index.html#手机号-mobile-phone-中国-宽松-只要是13-14-15-16-17-18-19开头即可",a:"手机号-mobile-phone-中国-宽松-只要是13-14-15-16-17-18-19开头即可"},"284.37":{t:"手机号(mobile phone)中国(最宽松), 只要是1开头即可, 如果你的手机号是用来接收短信, 优先建议选择这一条",p:`/^(?:(?:\\+|00)86)?1\\d{10}$/

`,l:"utils/rules/index.html#手机号-mobile-phone-中国-最宽松-只要是1开头即可-如果你的手机号是用来接收短信-优先建议选择这一条",a:"手机号-mobile-phone-中国-最宽松-只要是1开头即可-如果你的手机号是用来接收短信-优先建议选择这一条"},"284.38":{t:"日期(宽松)",p:`/^\\d{1,4}(-)(1[0-2]|0?[1-9])\\1(0?[1-9]|[1-2]\\d|30|31)$/

`,l:"utils/rules/index.html#日期-宽松",a:"日期-宽松"},"284.39":{t:"日期(严谨, 支持闰年判断)",p:"/^(([0-9]{3}[1-9]|[0-9]{2}[1-9][0-9]{1}|[0-9]{1}[1-9][0-9]{2}| ...",l:"utils/rules/index.html#日期-严谨-支持闰年判断",a:"日期-严谨-支持闰年判断"},"284.40":{t:"中国省",p:"/^浙江|上海|北京|天津|重庆|黑龙江|吉林|辽宁|内蒙古|河北|新疆|甘肃|青海|陕西|宁夏|河南|山东|山西|安徽|湖 ...",l:"utils/rules/index.html#中国省",a:"中国省"},"284.41":{t:"可以被moment转化成功的时间 YYYYMMDD HH:mm:ss",p:"/^\\d{4}([/:-\\S])(1[0-2]|0?[1-9])\\1(0?[1-9]|[1-2]\\d|30|31) (?:[ ...",l:"utils/rules/index.html#可以被moment转化成功的时间-yyyymmdd-hh-mm-ss",a:"可以被moment转化成功的时间-yyyymmdd-hh-mm-ss"},"284.42":{t:"email(邮箱)",p:"/^(([^&lt;&gt;()[\\]\\\\.,;:\\s@&quot;]+(\\.[^&lt;&gt;()[\\]\\\\.,;:\\s ...",l:"utils/rules/index.html#email-邮箱",a:"email-邮箱"},"284.43":{t:"座机(tel phone)电话(国内),如: 0341-86091234",p:`/^(?:(?:\\d{3}-)?\\d{8}|^(?:\\d{4}-)?\\d{7,8})(?:-\\d+)?$/

`,l:"utils/rules/index.html#座机-tel-phone-电话-国内-如-0341-86091234",a:"座机-tel-phone-电话-国内-如-0341-86091234"},"284.44":{t:"身份证号(1代,15位数字)",p:`/^[1-9]\\d{7}(?:0\\d|10|11|12)(?:0[1-9]|[1-2][\\d]|30|31)\\d{3}$/
 ...`,l:"utils/rules/index.html#身份证号-1代-15位数字",a:"身份证号-1代-15位数字"},"284.45":{t:"身份证号(2代,18位数字),最后一位是校验位,可能为数字或字符X",p:"/^[1-9]\\d{5}(?:18|19|20)\\d{2}(?:0[1-9]|10|11|12)(?:0[1-9]|[1-2 ...",l:"utils/rules/index.html#身份证号-2代-18位数字-最后一位是校验位-可能为数字或字符x",a:"身份证号-2代-18位数字-最后一位是校验位-可能为数字或字符x"},"284.46":{t:"身份证号, 支持1/2代(15位/18位数字)",p:"/^\\d{6}((((((19|20)\\d{2})(0[13-9]|1[012])(0[1-9]|[12]\\d|30))|( ...",l:"utils/rules/index.html#身份证号-支持1-2代-15位-18位数字",a:"身份证号-支持1-2代-15位-18位数字"},"284.47":{t:"护照（包含香港、澳门）",p:"/(^[EeKkGgDdSsPpHh]\\d{8}$)|(^(([Ee][a-fA-F])|([DdSsPp][Ee])|([ ...",l:"utils/rules/index.html#护照-包含香港、澳门",a:"护照-包含香港、澳门"},"284.48":{t:"帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线组合",p:`/^[a-zA-Z]\\w{4,15}$/

`,l:"utils/rules/index.html#帐号是否合法-字母开头-允许5-16字节-允许字母数字下划线组合",a:"帐号是否合法-字母开头-允许5-16字节-允许字母数字下划线组合"},"284.49":{t:"中文/汉字",p:"/^(?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA14 ...",l:"utils/rules/index.html#中文-汉字",a:"中文-汉字"},"284.50":{t:"小数",p:`/^\\d+\\.\\d+$/

`,l:"utils/rules/index.html#小数",a:"小数"},"284.51":{t:"只包含数字",p:`/^\\d+$/

`,l:"utils/rules/index.html#只包含数字",a:"只包含数字"},"284.52":{t:"html标签(宽松匹配)",p:`/&lt;(\\w+)[^&gt;]*&gt;(.*?&lt;\\/\\1&gt;)?/

`,l:"utils/rules/index.html#html标签-宽松匹配",a:"html标签-宽松匹配"},"284.53":{t:"匹配中文汉字和中文标点",p:"/[\\u4e00-\\u9fa5|\\u3002|\\uff1f|\\uff01|\\uff0c|\\u3001|\\uff1b|\\uff ...",l:"utils/rules/index.html#匹配中文汉字和中文标点",a:"匹配中文汉字和中文标点"},"284.54":{t:"qq号格式正确",p:`/^[1-9][0-9]{4,10}$/

`,l:"utils/rules/index.html#qq号格式正确",a:"qq号格式正确"},"284.55":{t:"数字和字母组成",p:`/^[A-Za-z0-9]+$/

`,l:"utils/rules/index.html#数字和字母组成",a:"数字和字母组成"},"284.56":{t:"英文字母",p:`/^[a-zA-Z]+$/

`,l:"utils/rules/index.html#英文字母",a:"英文字母"},"284.57":{t:"小写英文字母组成",p:`/^[a-z]+$/

`,l:"utils/rules/index.html#小写英文字母组成",a:"小写英文字母组成"},"284.58":{t:"大写英文字母",p:`/^[A-Z]+$/

`,l:"utils/rules/index.html#大写英文字母",a:"大写英文字母"},"284.59":{t:"密码强度校验，最少6位，包括至少1个大写字母，1个小写字母，1个数字，1个特殊字符",p:"/^\\S*(?=\\S{6,})(?=\\S*\\d)(?=\\S*[A-Z])(?=\\S*[a-z])(?=\\S*[!@#$%^& ...",l:"utils/rules/index.html#密码强度校验-最少6位-包括至少1个大写字母-1个小写字母-1个数字-1个特殊字符",a:"密码强度校验-最少6位-包括至少1个大写字母-1个小写字母-1个数字-1个特殊字符"},"284.60":{t:"用户名校验，4到16位（字母，数字，下划线，减号）",p:`/^[a-zA-Z0-9_-]{4,16}$/

`,l:"utils/rules/index.html#用户名校验-4到16位-字母-数字-下划线-减号",a:"用户名校验-4到16位-字母-数字-下划线-减号"},"284.61":{t:"ip-v4[:端口]",p:"/^((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.){3}(\\d|[1-9]\\d|1\\d\\d| ...",l:"utils/rules/index.html#ip-v4-端口",a:"ip-v4-端口"},"284.62":{t:"ip-v6[:端口]",p:"/(^(?:(?:(?:0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4})|(([0-9A-Fa-f ...",l:"utils/rules/index.html#ip-v6-端口",a:"ip-v6-端口"},"284.63":{t:"16进制颜色",p:`/^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/

`,l:"utils/rules/index.html#_16进制颜色",a:"_16进制颜色"},"284.64":{t:"微信号(wx)，6至20位，以字母开头，字母，数字，减号，下划线",p:`/^[a-zA-Z][-_a-zA-Z0-9]{5,19}$/

`,l:"utils/rules/index.html#微信号-wx-6至20位-以字母开头-字母-数字-减号-下划线",a:"微信号-wx-6至20位-以字母开头-字母-数字-减号-下划线"},"284.65":{t:"邮政编码(中国)",p:"/^(0[1-7]|1[0-356]|2[0-7]|3[0-6]|4[0-7]|5[1-7]|6[1-7]|7[0-5]|8 ...",l:"utils/rules/index.html#邮政编码-中国",a:"邮政编码-中国"},"284.66":{t:"中文和数字",p:"/^((?:[\\u3400-\\u4DB5\\u4E00-\\u9FEA\\uFA0E\\uFA0F\\uFA11\\uFA13\\uFA1 ...",l:"utils/rules/index.html#中文和数字",a:"中文和数字"},"284.67":{t:"不能包含字母",p:`/^[^A-Za-z]*$/

`,l:"utils/rules/index.html#不能包含字母",a:"不能包含字母"},"284.68":{t:"java包名",p:`/^([a-zA-Z_]\\w*)+([.][a-zA-Z_]\\w*)+$/

`,l:"utils/rules/index.html#java包名",a:"java包名"},"284.69":{t:"mac地址",p:`/^((([a-f0-9]{2}:){5})|(([a-f0-9]{2}-){5}))[a-f0-9]{2}$/i

`,l:"utils/rules/index.html#mac地址",a:"mac地址"},"284.70":{t:"匹配连续重复的字符",p:`/(.)\\1+/

`,l:"utils/rules/index.html#匹配连续重复的字符",a:"匹配连续重复的字符"},"284.71":{t:"数字和英文字母组成，并且同时含有数字和英文字母",p:`/^(?=.*[a-zA-Z])(?=.*\\d).+$/

`,l:"utils/rules/index.html#数字和英文字母组成-并且同时含有数字和英文字母",a:"数字和英文字母组成-并且同时含有数字和英文字母"},"284.72":{t:"香港身份证",p:`/^[a-zA-Z]\\d{6}\\([\\dA]\\)$/

`,l:"utils/rules/index.html#香港身份证",a:"香港身份证"},"284.73":{t:"澳门身份证",p:`/^[1|5|7]\\d{6}\\(\\d\\)$/

`,l:"utils/rules/index.html#澳门身份证",a:"澳门身份证"},"284.74":{t:"台湾身份证",p:`/^[a-zA-Z][0-9]{9}$/

`,l:"utils/rules/index.html#台湾身份证",a:"台湾身份证"},"284.75":{t:"大写字母，小写字母，数字，特殊符号 `@#$%^&*`~()-+=` 中任意3项密码",p:"/^(?![a-zA-Z]+$)(?![A-Z0-9]+$)(?![A-Z\\W_!@#$%^&amp;*`~()-+=]+$ ...",l:"utils/rules/index.html#大写字母-小写字母-数字-特殊符号-中任意3项密码",a:"大写字母-小写字母-数字-特殊符号-中任意3项密码"},"284.76":{t:"ASCII码表中的全部的特殊字符",p:`/[\\x21-\\x2F\\x3A-\\x40\\x5B-\\x60\\x7B-\\x7E]+/

`,l:"utils/rules/index.html#ascii码表中的全部的特殊字符",a:"ascii码表中的全部的特殊字符"},"284.77":{t:"正整数，不包含0",p:`/^\\+?[1-9]\\d*$/

`,l:"utils/rules/index.html#正整数-不包含0",a:"正整数-不包含0"},"284.78":{t:"负整数，不包含0",p:`/^-[1-9]\\d*$/

`,l:"utils/rules/index.html#负整数-不包含0",a:"负整数-不包含0"},"284.79":{t:"整数",p:`/^(?:0|(?:-?[1-9]\\d*))$/

`,l:"utils/rules/index.html#整数",a:"整数"},"284.80":{t:"浮点数",p:`/^(-?[1-9]\\d*\\.\\d+|-?0\\.\\d*[1-9]\\d*|0\\.0+)$/

`,l:"utils/rules/index.html#浮点数",a:"浮点数"},"284.81":{t:"浮点数(严格)",p:`/^(-?[1-9]\\d*\\.\\d+|-?0\\.\\d*[1-9])$/

`,l:"utils/rules/index.html#浮点数-严格",a:"浮点数-严格"},"284.82":{t:"email(支持中文邮箱)",p:"/^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$ ...",l:"utils/rules/index.html#email-支持中文邮箱",a:"email-支持中文邮箱"},"284.83":{t:"域名(非网址, 不包含协议)",p:`/^([0-9a-zA-Z-]{1,}\\.)+([a-zA-Z]{2,})$/

`,l:"utils/rules/index.html#域名-非网址-不包含协议",a:"域名-非网址-不包含协议"},"284.84":{t:"luhnCheck：银行卡号码校验（luhn算法）",p:`const luhnCheck = num =&gt; {
  let arr = (num + '')
    .spli ...`,l:"utils/rules/index.html#luhncheck-银行卡号码校验-luhn算法",a:"luhncheck-银行卡号码校验-luhn算法"},"285.0":{t:"# 数组 utils",p:"",l:"utils/utils/array-utils/index.html",a:"数组-utils"},"285.1":{t:"计算数组的平均值",p:"const average = (arr) =&gt; arr.reduce((a, b) =&gt; a + b) / a ...",l:"utils/utils/array-utils/index.html#计算数组的平均值",a:"计算数组的平均值"},"285.2":{t:"数组排序， 1：从小到大 2：从大到小 3：随机",p:`// 数组排序，{type} 1：从小到大 2：从大到小 3：随机
const sort = (arr, type = 1) ...`,l:"utils/utils/array-utils/index.html#type",a:"type"},"285.3":{t:"求和",p:`const sum = (arr) =&gt; {
  return arr.reduce((pre, cur) =&gt; ...`,l:"utils/utils/array-utils/index.html#求和",a:"求和"},"285.4":{t:"数组去重",p:`const uniqueArr = (arr) =&gt; [...new Set(arr)]
console.log(un ...`,l:"utils/utils/array-utils/index.html#数组去重",a:"数组去重"},"285.5":{t:"对象数组去重",p:`/**
 * 数组的对象完全匹配后去重
 * @param  {} data 对象数组
 */
const uniqObje ...`,l:"utils/utils/array-utils/index.html#对象数组去重",a:"对象数组去重"},"285.6":{t:"all：布尔全等判断",p:`const all = (arr, fn = Boolean) =&gt; arr.every(fn);

all([4,  ...`,l:"utils/utils/array-utils/index.html#all-布尔全等判断",a:"all-布尔全等判断"},"285.7":{t:"allEqual：检查数组各项相等",p:"const allEqual = arr =&gt; arr.every(val =&gt; val === arr[0]) ...",l:"utils/utils/array-utils/index.html#allequal-检查数组各项相等",a:"allequal-检查数组各项相等"},"285.8":{t:"castArray：其它类型转数组",p:"const castArray = val =&gt; (Array.isArray(val) ? val : [val]) ...",l:"utils/utils/array-utils/index.html#castarray-其它类型转数组",a:"castarray-其它类型转数组"},"285.9":{t:"compact：去除数组中的无效/无用值",p:`const compact = arr =&gt; arr.filter(Boolean);

compact([0, 1, ...`,l:"utils/utils/array-utils/index.html#compact-去除数组中的无效-无用值",a:"compact-去除数组中的无效-无用值"},"285.10":{t:"deepFlatten：递归扁平化数组",p:"const deepFlatten = arr =&gt; [].concat(...arr.map(v =&gt; (Ar ...",l:"utils/utils/array-utils/index.html#deepflatten-递归扁平化数组",a:"deepflatten-递归扁平化数组"},"285.11":{t:"intersection：两数组的交集",p:`
const intersection = (a, b) =&gt; {
  const s = new Set(b);
  ...`,l:"utils/utils/array-utils/index.html#intersection-两数组的交集",a:"intersection-两数组的交集"},"285.12":{t:"intersectionWith：两数组都符合条件的交集",p:`
const intersectionBy = (a, b, fn) =&gt; {
  const s = new Set ...`,l:"utils/utils/array-utils/index.html#intersectionwith-两数组都符合条件的交集",a:"intersectionwith-两数组都符合条件的交集"},"285.13":{t:"shuffle：“洗牌” 数组",p:`
const shuffle = ([...arr]) =&gt; {
  let m = arr.length;
  wh ...`,l:"utils/utils/array-utils/index.html#shuffle-洗牌-数组",a:"shuffle-洗牌-数组"},"285.14":{t:"nest：根据parent_id生成树结构（阿里一面真题）",p:`const nest = (items, id = null, link = 'parent_id') =&gt;
  it ...`,l:"utils/utils/array-utils/index.html#nest-根据parent-id生成树结构-阿里一面真题",a:"nest-根据parent-id生成树结构-阿里一面真题"},"286.0":{t:"# 业务utils",p:"",l:"utils/utils/business-utils/index.html",a:"业务utils"},"286.1":{t:"判断图片尺寸",p:`  function checkFile(f) {
      // 判断图片尺寸
      var img = null ...`,l:"utils/utils/business-utils/index.html#判断图片尺寸",a:"判断图片尺寸"},"286.2":{t:"统计页面中所有标签的种类和个数",p:`function getTagCount() {
  const tags = document.getElementsBy ...`,l:"utils/utils/business-utils/index.html#统计页面中所有标签的种类和个数",a:"统计页面中所有标签的种类和个数"},"286.3":{t:"计算首屏加载时间",p:"console.log(new Date().getTime() - performance.timing.navigati ...",l:"utils/utils/business-utils/index.html#计算首屏加载时间",a:"计算首屏加载时间"},"286.4":{t:"检查设备上的触摸支持",p:"const touchSupported = () =&gt; ('ontouchstart' in window || D ...",l:"utils/utils/business-utils/index.html#检查设备上的触摸支持",a:"检查设备上的触摸支持"},"286.5":{t:"网页上获取选定的文本",p:"const getSelectedText = () =&gt; window.getSelection().toStrin ...",l:"utils/utils/business-utils/index.html#网页上获取选定的文本",a:"网页上获取选定的文本"},"286.6":{t:"检测密码强度",p:`// 检测密码强度
const checkPwd = str =&gt; {
  let Lv = 0
  if (str. ...`,l:"utils/utils/business-utils/index.html#检测密码强度",a:"检测密码强度"},"286.7":{t:"求两个集合的交集",p:`const intersect = (a, b) =&gt; {
  let _this = this
  a = this ...`,l:"utils/utils/business-utils/index.html#求两个集合的交集",a:"求两个集合的交集"},"286.8":{t:"求两个集合的并集",p:` const union = (a, b) =&gt; {
  const newArr = a.concat(b)
  r ...`,l:"utils/utils/business-utils/index.html#求两个集合的并集",a:"求两个集合的并集"},"286.9":{t:"动态引入js",p:`const injectScript = src =&gt; {
  const s = document.createEl ...`,l:"utils/utils/business-utils/index.html#动态引入js",a:"动态引入js"},"286.10":{t:"滚动到顶部",p:`const scrollToTop = () =&gt; {
  const c = document.documentEl ...`,l:"utils/utils/business-utils/index.html#滚动到顶部",a:"滚动到顶部"},"286.11":{t:"el是否在视口范围",p:"const elementIsVisibleInViewport = (el, partiallyVisible = fal ...",l:"utils/utils/business-utils/index.html#el是否在视口范围",a:"el是否在视口范围"},"286.12":{t:"洗牌算法随机",p:`const shuffle = arr =&gt; {
  let result = []
  let random
  w ...`,l:"utils/utils/business-utils/index.html#洗牌算法随机",a:"洗牌算法随机"},"286.13":{t:"判断类型集合",p:`const checkStr = (str, type) =&gt; {
  switch (type) {
    cas ...`,l:"utils/utils/business-utils/index.html#判断类型集合",a:"判断类型集合"},"286.14":{t:"deepClone  深拷贝",p:`const deepClone = obj =&gt; {
  // 先检测是不是数组和Object
  let isArr ...`,l:"utils/utils/business-utils/index.html#deepclone-深拷贝",a:"deepclone-深拷贝"},"286.15":{t:"unique  去重",p:`const unique = arr =&gt; {
  let newArr = []
  let obj = {}
   ...`,l:"utils/utils/business-utils/index.html#unique-去重",a:"unique-去重"},"286.16":{t:"判断数据类型",p:`const typeOf = (obj) =&gt; {
  return Object.prototype.toStrin ...`,l:"utils/utils/business-utils/index.html#判断数据类型",a:"判断数据类型"},"286.17":{t:"getUUID",p:"",l:"utils/utils/business-utils/index.html#getuuid",a:"getuuid"},"286.18":{t:"createObjectURL",p:`URL.createObjectURL(new Blob()).substr(-36)

`,l:"utils/utils/business-utils/index.html#createobjecturl",a:"createobjecturl"},"286.19":{t:"随机",p:`export function getUUID(len = 8, radix = 16) {
  let chars = ' ...`,l:"utils/utils/business-utils/index.html#随机",a:"随机"},"286.20":{t:"判断是否是 undefined null",p:`export function isUndef(v) {
  return v === undefined || v === ...`,l:"utils/utils/business-utils/index.html#判断是否是-undefined-null",a:"判断是否是-undefined-null"},"286.21":{t:"判断不是 undefined null",p:`export function isDef(v) {
  return v !== undefined &amp;&amp; ...`,l:"utils/utils/business-utils/index.html#判断不是-undefined-null",a:"判断不是-undefined-null"},"286.22":{t:"生成随机十六进制",p:"const randomHexColor = () =&gt; `#${Math.floor(Math.random() * ...",l:"utils/utils/business-utils/index.html#生成随机十六进制",a:"生成随机十六进制"},"286.23":{t:"检查当前选项卡是否在后台",p:`const isTabActive = () =&gt; !document.hidden; 

isTabActive() ...`,l:"utils/utils/business-utils/index.html#检查当前选项卡是否在后台",a:"检查当前选项卡是否在后台"},"286.24":{t:"检测元素是否处于焦点",p:"const elementIsInFocus = (el) =&gt; (el === document.activeEle ...",l:"utils/utils/business-utils/index.html#检测元素是否处于焦点",a:"检测元素是否处于焦点"},"286.25":{t:"检查设备类型",p:`const judgeDeviceType =
      () =&gt; /Android|webOS|iPhone|i ...`,l:"utils/utils/business-utils/index.html#检查设备类型",a:"检查设备类型"},"286.26":{t:"文字复制到剪贴板",p:"const copyText = async (text) =&gt; await navigator.clipboard. ...",l:"utils/utils/business-utils/index.html#文字复制到剪贴板",a:"文字复制到剪贴板"},"286.27":{t:"将 RGB 转换为十六进制",p:"const rgbToHex = (r, g, b) =&gt;   &quot;#&quot; + ((1 &lt;&lt ...",l:"utils/utils/business-utils/index.html#将-rgb-转换为十六进制",a:"将-rgb-转换为十六进制"},"286.28":{t:"根据身份证号自动生成性别、出生日期和年龄",p:`//根据身份证号自动生成性别、出生日期和年龄
      const reg = /^[1-9]\\d{5}(18|19|([ ...`,l:"utils/utils/business-utils/index.html#根据身份证号自动生成性别、出生日期和年龄",a:"根据身份证号自动生成性别、出生日期和年龄"},"286.29":{t:"扁平数据结构转Tree",p:"",l:"utils/utils/business-utils/index.html#扁平数据结构转tree",a:"扁平数据结构转tree"},"286.30":{t:"递归",p:` /**
     * 递归查找，获取children
     */
    const getChildren = (d ...`,l:"utils/utils/business-utils/index.html#递归",a:"递归"},"286.31":{t:"map  地址引用",p:`  function arrayToTree(items, parentId = 'pid') {
      const  ...`,l:"utils/utils/business-utils/index.html#map-地址引用",a:"map-地址引用"},"286.32":{t:"数字滚动",p:"",l:"utils/utils/business-utils/index.html#数字滚动",a:"数字滚动"},"286.33":{t:"封装",p:` /**
   * 实现数字滚动的效果的类
   */
  class DigitScroll {
    construc ...`,l:"utils/utils/business-utils/index.html#封装",a:"封装"},"286.34":{t:"使用",p:` const a = new DigitScroll({
      container: '#test',
      / ...`,l:"utils/utils/business-utils/index.html#使用",a:"使用"},"286.35":{t:"处理海量数据",p:"",l:"utils/utils/business-utils/index.html#处理海量数据",a:"处理海量数据"},"286.36":{t:"React",p:"",l:"utils/utils/business-utils/index.html#react",a:"react"},"286.37":{t:"时间分片",p:"时间分片主要解决，初次加载，一次性渲染大量数据造成的卡顿现象。浏览器执 js 速度要比渲染 DOM 速度快的多。，时间分片， ...",l:"utils/utils/business-utils/index.html#时间分片",a:"时间分片"},"286.38":{t:"虚拟列表",p:"虚拟列表是一种长列表的解决方案，现在滑动加载是 M 端和 PC 端一种常见的数据请求加载场景，这种数据交互有一个问题就是，如 ...",l:"utils/utils/business-utils/index.html#虚拟列表",a:"虚拟列表"},"286.39":{t:"纯JS监听document是否加载完成",p:`跨浏览器且纯JavaScript检测document是否加载完成的方法是使用readyState
.

if (docume ...`,l:"utils/utils/business-utils/index.html#纯js监听document是否加载完成",a:"纯js监听document是否加载完成"},"286.40":{t:"取得文件扩展名",p:`var file1 = &quot;50.xsl&quot;;
var file2 = &quot;30.doc&quot; ...`,l:"utils/utils/business-utils/index.html#取得文件扩展名",a:"取得文件扩展名"},"286.41":{t:"大文件 断点续传",p:"",l:"utils/utils/business-utils/index.html#大文件-断点续传",a:"大文件-断点续传"},"286.42":{t:"创建切片",p:`createFileChunks 方法接收两个参数

要进行切片的文件对象
切片大小，这里设置默认值为 1024100，单位 ...`,l:"utils/utils/business-utils/index.html#创建切片",a:"创建切片"},"286.43":{t:"拼接 formData",p:`上传的时候，通过 formData 对象组装要上传的切片数据
/**
2、拼接 formData 参数1：存储文件切片信息的 ...`,l:"utils/utils/business-utils/index.html#拼接-formdata",a:"拼接-formdata"},"286.44":{t:"上传切片",p:`遍历上面的 chunksList 数组，调用 axios 对每个 formData 信息进行提交
// 3、上传切片
  c ...`,l:"utils/utils/business-utils/index.html#上传切片",a:"上传切片"},"286.45":{t:"合并切片",p:`当所有切片都已经上传成功后，告诉后端一声
// 合并切片
   const mergeFileChunks = async  ...`,l:"utils/utils/business-utils/index.html#合并切片",a:"合并切片"},"286.46":{t:"handleFileUpload 函数",p:`// 大文件上传
async function handleFileUpload(event) {
  event.prev ...`,l:"utils/utils/business-utils/index.html#handlefileupload-函数",a:"handlefileupload-函数"},"286.47":{t:"vue 示例",p:`
&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;
  &lt; ...`,l:"utils/utils/business-utils/index.html#vue-示例",a:"vue-示例"},"286.48":{t:"页面尺寸整体缩放",p:`window.addEventListener('resize', () =&gt; {
  fun();
});
cons ...`,l:"utils/utils/business-utils/index.html#页面尺寸整体缩放",a:"页面尺寸整体缩放"},"286.49":{t:"用数组建立一个简单的循环 (循环播放使用)",p:`var aList = ['A','B','C','D','E'];
function make_looper( arr ) ...`,l:"utils/utils/business-utils/index.html#用数组建立一个简单的循环-循环播放使用",a:"用数组建立一个简单的循环-循环播放使用"},"286.50":{t:"js 实现上传",p:"",l:"utils/utils/business-utils/index.html#js-实现上传",a:"js-实现上传"},"286.51":{t:"window.showOpenFilePicker()",p:`代表选中文件

    const clickFunc = async () =&gt; {
      const opt ...`,l:"utils/utils/business-utils/index.html#window-showopenfilepicker",a:"window-showopenfilepicker"},"286.52":{t:"相关 options 的属性",p:"excludeAcceptAllOption上面代码中 options 里的一个配置 excludeAcceptAllOpt ...",l:"utils/utils/business-utils/index.html#相关-options-的属性",a:"相关-options-的属性"},"286.53":{t:"window.showSaveFilePicker()",p:`保存文件
 const clickFunc = async () =&gt; {
     const options =  ...`,l:"utils/utils/business-utils/index.html#window-showsavefilepicker",a:"window-showsavefilepicker"},"286.54":{t:"window.showDirectoryPicker()",p:`这个 API 代表的是 选中 文件夹

      const clickFunc = async () =&gt; {
  ...`,l:"utils/utils/business-utils/index.html#window-showdirectorypicker",a:"window-showdirectorypicker"},"286.55":{t:"处理浏览器默认样式",p:`
html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4 ...`,l:"utils/utils/business-utils/index.html#处理浏览器默认样式",a:"处理浏览器默认样式"},"286.56":{t:"scrollToTop：平滑滚动至顶部",p:`const scrollToTop = () =&gt; {
  const c = document.documentEl ...`,l:"utils/utils/business-utils/index.html#scrolltotop-平滑滚动至顶部",a:"scrolltotop-平滑滚动至顶部"},"286.57":{t:"smoothScroll：滚动到指定元素区域",p:`const smoothScroll = element =&gt;
  document.querySelector(el ...`,l:"utils/utils/business-utils/index.html#smoothscroll-滚动到指定元素区域",a:"smoothscroll-滚动到指定元素区域"},"286.58":{t:"detectDeviceType：检测移动/PC设备",p:`const detectDeviceType = () =&gt;
  /Android|webOS|iPhone|iPad ...`,l:"utils/utils/business-utils/index.html#detectdevicetype-检测移动-pc设备",a:"detectdevicetype-检测移动-pc设备"},"286.59":{t:"getScrollPosition：返回当前的滚动位置",p:"默认参数为window ，pageXOffset(pageYOffset)为第一选择，没有则用scrollLeft(scro ...",l:"utils/utils/business-utils/index.html#getscrollposition-返回当前的滚动位置",a:"getscrollposition-返回当前的滚动位置"},"286.60":{t:"escapeHTML：转义HTML",p:`当然是用来防XSS攻击啦。
const escapeHTML = str =&gt;
  str.replace(
     ...`,l:"utils/utils/business-utils/index.html#escapehtml-转义html",a:"escapehtml-转义html"},"286.61":{t:"isBrowser：检查是否为浏览器环境",p:"const isBrowser = () =&gt; ![typeof window, typeof document].i ...",l:"utils/utils/business-utils/index.html#isbrowser-检查是否为浏览器环境",a:"isbrowser-检查是否为浏览器环境"},"286.62":{t:"isBrowserTab：检查当前标签页是否活动",p:`const isBrowserTabFocused = () =&gt; !document.hidden;

isBrow ...`,l:"utils/utils/business-utils/index.html#isbrowsertab-检查当前标签页是否活动",a:"isbrowsertab-检查当前标签页是否活动"},"286.63":{t:"Random Hexadecimal Color Code：随机十六进制颜色",p:`
const randomHexColorCode = () =&gt; {
  let n = (Math.random( ...`,l:"utils/utils/business-utils/index.html#random-hexadecimal-color-code-随机十六进制颜色",a:"random-hexadecimal-color-code-随机十六进制颜色"},"286.64":{t:"httpsRedirect：HTTP 跳转 HTTPS",p:`const httpsRedirect = () =&gt; {
  if (location.protocol !== ' ...`,l:"utils/utils/business-utils/index.html#httpsredirect-http-跳转-https",a:"httpsredirect-http-跳转-https"},"286.65":{t:"hide：隐藏所有的指定标签",p:"const hide = (...el) =&gt; [...el].forEach(e =&gt; (e.style.di ...",l:"utils/utils/business-utils/index.html#hide-隐藏所有的指定标签",a:"hide-隐藏所有的指定标签"},"286.66":{t:"hasClass：校验指定元素的类名",p:"const hasClass = (el, className) =&gt; el.classList.contains(c ...",l:"utils/utils/business-utils/index.html#hasclass-校验指定元素的类名",a:"hasclass-校验指定元素的类名"},"286.67":{t:"distance：返回两点间的距离",p:"const distance = (x0, y0, x1, y1) =&gt; Math.hypot(x1 - x0, y1 ...",l:"utils/utils/business-utils/index.html#distance-返回两点间的距离",a:"distance-返回两点间的距离"},"286.68":{t:"bottomVisible：检查页面底部是否可见",p:`const bottomVisible = () =&gt;
  document.documentElement.clie ...`,l:"utils/utils/business-utils/index.html#bottomvisible-检查页面底部是否可见",a:"bottomvisible-检查页面底部是否可见"},"286.69":{t:"不能操作DOM和调接口的环境",p:`// 沙箱全局代理对象类
class SandboxGlobalProxy {
  constructor(blacklis ...`,l:"utils/utils/business-utils/index.html#不能操作dom和调接口的环境",a:"不能操作dom和调接口的环境"},"286.70":{t:"防止重复请求",p:`保证同一时间只有一个请求
function firstPromise(promiseFunction) {
  let p  ...`,l:"utils/utils/business-utils/index.html#防止重复请求",a:"防止重复请求"},"286.71":{t:"获取获取字符串的宽度",p:`// 获取获取字符串的宽度代码： 
getTextWidth(textStr,fontSize = 14) {
    // ...`,l:"utils/utils/business-utils/index.html#获取获取字符串的宽度",a:"获取获取字符串的宽度"},"286.72":{t:"笛卡尔积算法 计算商品SKU集合",p:`
// 调用：cartesian({         color: ['黑色', '白色', '金色'],          ...`,l:"utils/utils/business-utils/index.html#笛卡尔积算法-计算商品sku集合",a:"笛卡尔积算法-计算商品sku集合"},"287.0":{t:"# 时间 utils",p:"",l:"utils/utils/date-utils/index.html",a:"时间-utils"},"287.1":{t:"两个日期之间的日差",p:`const dayDiff = (date1, date2) =&gt;
  Math.ceil(Math.abs(date ...`,l:"utils/utils/date-utils/index.html#两个日期之间的日差",a:"两个日期之间的日差"},"287.2":{t:"获取前几天后几天的时间",p:`/**
 * 获取前几天后几天的时间
 * @param {String|Date} date 参照日期
 * @param ...`,l:"utils/utils/date-utils/index.html#获取前几天后几天的时间",a:"获取前几天后几天的时间"},"287.3":{t:"获取前三个月的时间",p:`/**
 * 获取前三个月的时间
 * @returns dateObj { startTime, endTime }
 * ...`,l:"utils/utils/date-utils/index.html#获取前三个月的时间",a:"获取前三个月的时间"},"287.4":{t:"年月日日期前添加 0",p:`/**
 * 年月日日期前添加0 2022-3-30--&gt;2022-03-30
 * @param {String}  ...`,l:"utils/utils/date-utils/index.html#年月日日期前添加-0",a:"年月日日期前添加-0"},"287.5":{t:"判断是否为同一天",p:`const isSameDay = (startTime, endTime) =&gt; {
  return new Da ...`,l:"utils/utils/date-utils/index.html#判断是否为同一天",a:"判断是否为同一天"},"287.6":{t:"根据时间戳返回天、时、分、秒",p:`const countdownFormat = (distance) =&gt; {
  if (distance &gt; ...`,l:"utils/utils/date-utils/index.html#根据时间戳返回天、时、分、秒",a:"根据时间戳返回天、时、分、秒"},"287.7":{t:"查询某天是否为工作日",p:`const isWeekday = (date) =&gt; date.getDay() % 6 !== 0

isWeek ...`,l:"utils/utils/date-utils/index.html#查询某天是否为工作日",a:"查询某天是否为工作日"},"287.8":{t:"转换华氏/摄氏",p:`// 将华氏温度转换为摄氏温度
const fahrenheitToCelsius = (fahrenheit) =&gt; ...`,l:"utils/utils/date-utils/index.html#转换华氏-摄氏",a:"转换华氏-摄氏"},"288.0":{t:"# 函数 utils",p:"",l:"utils/utils/function-utils/index.html",a:"函数-utils"},"288.1":{t:"递归处理输入的函数",p:`function continous(reducer) {
  return function (...args) {
   ...`,l:"utils/utils/function-utils/index.html#递归处理输入的函数",a:"递归处理输入的函数"},"288.2":{t:"批量处理函数",p:`function batch(fn) {
  return function (subject, ...args) {
   ...`,l:"utils/utils/function-utils/index.html#批量处理函数",a:"批量处理函数"},"288.3":{t:"通用函数拦截器",p:"function intercept(fn, { beforeCall = null, afterCall = null } ...",l:"utils/utils/function-utils/index.html#通用函数拦截器",a:"通用函数拦截器"},"288.4":{t:"函数重载",p:`function createOverloaded(fnList) {
    let curFn = null
    f ...`,l:"utils/utils/function-utils/index.html#函数重载",a:"函数重载"},"288.5":{t:"函数结果缓存",p:`function fnCache(fn) {
  const cache = {};
  return function ( ...`,l:"utils/utils/function-utils/index.html#函数结果缓存",a:"函数结果缓存"},"289.0":{t:"# 图片 utils",p:"",l:"utils/utils/img-utils/index.html",a:"图片-utils"},"289.1":{t:"base64 转换 file",p:`const base64ToFile = async (src, name) =&gt; {
  const b = awa ...`,l:"utils/utils/img-utils/index.html#base64-转换-file",a:"base64-转换-file"},"290.0":{t:"# json-utils",p:"",l:"utils/utils/json-utils/index.html",a:"json-utils"},"290.1":{t:"safeJsonParse JSON 转换",p:`const safeJsonParse = (str) =&gt; {
  if (!str || typeof str ! ...`,l:"utils/utils/json-utils/index.html#safejsonparse-json-转换",a:"safejsonparse-json-转换"},"291.0":{t:"# 数字 utils",p:"",l:"utils/utils/number-utils/index.html",a:"数字-utils"},"291.1":{t:"随机数范围",p:`const random = (min, max) =&gt; {
  if (arguments.length === 2 ...`,l:"utils/utils/number-utils/index.html#随机数范围",a:"随机数范围"},"291.2":{t:"数字千分位",p:`/**
 * 数字千分位
 * @param {Number|String} number 数字
 * @param {Nu ...`,l:"utils/utils/number-utils/index.html#数字千分位",a:"数字千分位"},"291.3":{t:"randomNumberInRange：生成指定范围的随机小数",p:"const randomNumberInRange = (min, max) =&gt; Math.random() * ( ...",l:"utils/utils/number-utils/index.html#randomnumberinrange-生成指定范围的随机小数",a:"randomnumberinrange-生成指定范围的随机小数"},"291.4":{t:"round：四舍五入到指定位数",p:"const round = (n, decimals = 0) =&gt; Number(`${Math.round(`${ ...",l:"utils/utils/number-utils/index.html#round-四舍五入到指定位数",a:"round-四舍五入到指定位数"},"291.5":{t:"toCurrency：简单的货币单位转换",p:"const toCurrency = (n, curr, LanguageFormat = undefined) =&gt; ...",l:"utils/utils/number-utils/index.html#tocurrency-简单的货币单位转换",a:"tocurrency-简单的货币单位转换"},"291.6":{t:"数值单位转换",p:`const numberUnitFormat =(value) =&gt; {
            let param  ...`,l:"utils/utils/number-utils/index.html#数值单位转换",a:"数值单位转换"},"292.0":{t:"# 对象 utils",p:"",l:"utils/utils/object-utils/index.html",a:"对象-utils"},"292.1":{t:"判断是否是空对象",p:`const isEmptyObject = (obj) =&gt;
  Reflect.ownKeys(obj).lengt ...`,l:"utils/utils/object-utils/index.html#判断是否是空对象",a:"判断是否是空对象"},"292.2":{t:"判断是不是对象",p:`const isObject = (obj) =&gt; {
  return Object.prototype.toStr ...`,l:"utils/utils/object-utils/index.html#判断是不是对象",a:"判断是不是对象"},"293.0":{t:"# 对象 utils",p:"",l:"utils/utils/object-utils copy/index.html",a:"对象-utils"},"293.1":{t:"判断是否是空对象",p:`const isEmptyObject = (obj) =&gt;
  Reflect.ownKeys(obj).lengt ...`,l:"utils/utils/object-utils copy/index.html#判断是否是空对象",a:"判断是否是空对象"},"293.2":{t:"判断是不是对象",p:`const isObject = (obj) =&gt; {
  return Object.prototype.toStr ...`,l:"utils/utils/object-utils copy/index.html#判断是不是对象",a:"判断是不是对象"},"294.0":{t:"# 请求 utils",p:"",l:"utils/utils/request-utils/index.html",a:"请求-utils"},"294.1":{t:"请求结果缓存",p:`// 最多缓存接口数
const CACHE_MAX = 20;
const cache = (function () {
 ...`,l:"utils/utils/request-utils/index.html#请求结果缓存",a:"请求结果缓存"},"295.0":{t:"# 字符串 utils",p:"",l:"utils/utils/string-utils/index.html",a:"字符串-utils"},"295.1":{t:"字符转换，type: 1:首字母大写 2：首字母小写 3：大小写转换 4：全部大写 5：全部小写",p:`const changeCase = (str, type) =&gt; {
  type = type || 4
  sw ...`,l:"utils/utils/string-utils/index.html#字符转换-type-1-首字母大写-2-首字母小写-3-大小写转换-4-全部大写-5-全部小写",a:"字符转换-type-1-首字母大写-2-首字母小写-3-大小写转换-4-全部大写-5-全部小写"},"295.2":{t:"实现 qs 的 stringify",p:`const stringify = (obj) =&gt; {
  if (!isObject(obj)) {
    re ...`,l:"utils/utils/string-utils/index.html#实现-qs-的-stringify",a:"实现-qs-的-stringify"},"295.3":{t:"反转字符串",p:`const reverse = (str) =&gt; str.split('').reverse().join('')
r ...`,l:"utils/utils/string-utils/index.html#反转字符串",a:"反转字符串"},"295.4":{t:"byteSize：返回字符串的字节长度",p:`const byteSize = str =&gt; new Blob([str]).size;

byteSize('😀 ...`,l:"utils/utils/string-utils/index.html#bytesize-返回字符串的字节长度",a:"bytesize-返回字符串的字节长度"},"295.5":{t:"capitalize：首字母大写",p:`const capitalize = ([first, ...rest]) =&gt;
  first.toUpperCas ...`,l:"utils/utils/string-utils/index.html#capitalize-首字母大写",a:"capitalize-首字母大写"},"295.6":{t:"capitalizeEveryWord：每个单词首字母大写",p:"const capitalizeEveryWord = str =&gt; str.replace(/\\b[a-z]/g,  ...",l:"utils/utils/string-utils/index.html#capitalizeeveryword-每个单词首字母大写",a:"capitalizeeveryword-每个单词首字母大写"},"295.7":{t:"decapitalize：首字母小写",p:`const decapitalize = ([first, ...rest]) =&gt;
  first.toLowerC ...`,l:"utils/utils/string-utils/index.html#decapitalize-首字母小写",a:"decapitalize-首字母小写"},"295.8":{t:"'-'连接命名转换成小驼峰命名",p:`const _toLittleCamel =(str) =&gt; {
    if(!str) return ''
    ...`,l:"utils/utils/string-utils/index.html#连接命名转换成小驼峰命名",a:"连接命名转换成小驼峰命名"},"295.9":{t:"'-'连接命名转换成大驼峰命名",p:`const _toBigCamel = (str) =&gt; {
        if (!str) return ''
 ...`,l:"utils/utils/string-utils/index.html#连接命名转换成大驼峰命名",a:"连接命名转换成大驼峰命名"},"295.10":{t:"驼峰命名转换成'-'连接命名",p:`const camelTo_ = (str) =&gt; {
        if (!str) return ''
    ...`,l:"utils/utils/string-utils/index.html#驼峰命名转换成-连接命名",a:"驼峰命名转换成-连接命名"},"296.0":{t:"# url-utils",p:"",l:"utils/utils/url-utils/index.html",a:"url-utils"},"296.1":{t:"追加 url 参数",p:`const appendQuery = (url, key, value) =&gt; {
  let options =  ...`,l:"utils/utils/url-utils/index.html#追加-url-参数",a:"追加-url-参数"},"296.2":{t:"根据 url 地址下载",p:`const download = (url) =&gt; {
  let isChrome = navigator.user ...`,l:"utils/utils/url-utils/index.html#根据-url-地址下载",a:"根据-url-地址下载"},"296.3":{t:"从 url 获取参数并转为对象",p:"const getParameters = (URL) =&gt;\n  JSON.parse(\n    `{&quot;${ ...",l:"utils/utils/url-utils/index.html#从-url-获取参数并转为对象",a:"从-url-获取参数并转为对象"},"296.4":{t:"currentURL：返回当前链接url",p:`const currentURL = () =&gt; window.location.href;

currentURL( ...`,l:"utils/utils/url-utils/index.html#currenturl-返回当前链接url",a:"currenturl-返回当前链接url"}},n={previewLength:62,buttonLabel:"Search",placeholder:"Search docs",allow:[],ignore:[]},i={INDEX_DATA:e,PREVIEW_LOOKUP:t,Options:n};export{i as default};
