import{_ as i,o as l,c as o,J as e,w as n,m as a,a as c,aa as p,E as s}from"./chunks/framework.DJCjJe2w.js";const d="/vite-press-blog/assets/release1.DRCO605w.webp",_="/vite-press-blog/assets/release2.CkzFnq3b.webp",h="/vite-press-blog/assets/release3.BtT5b3d9.webp",m="/vite-press-blog/assets/release4.CWRhHGj5.webp",b="/vite-press-blog/assets/release5.kQusMqzc.webp",u="/vite-press-blog/assets/release6.D78g15Oq.webp",g="/vite-press-blog/assets/release7.Dkpo_1S_.webp",q="/vite-press-blog/assets/release8.CVfM5rQi.webp",w="/vite-press-blog/assets/release9.CW9J2gzJ.webp",f="/vite-press-blog/assets/release10.DUETZJiB.webp",B=JSON.parse('{"title":"微信小程序的发布流程","description":"","frontmatter":{"createTime":"2022/10/09","tag":"westore"},"headers":[],"relativePath":"interview-questions/westore/release/index.md","filePath":"interview-questions/westore/release/index.md","lastUpdated":1667281923000}'),x={name:"interview-questions/westore/release/index.md"},v=a("h1",{id:"微信小程序的发布流程",tabindex:"-1"},[c("微信小程序的发布流程 "),a("a",{class:"header-anchor",href:"#微信小程序的发布流程","aria-label":'Permalink to "微信小程序的发布流程"'},"​")],-1),k=p('<h2 id="一、背景" tabindex="-1">一、背景 <a class="header-anchor" href="#一、背景" aria-label="Permalink to &quot;一、背景&quot;">​</a></h2><p>在中大型的公司里，人员的分工非常仔细，一般会有不同岗位角色的员工同时参与同一个小程序项目。为此，小程序平台设计了不同的权限管理使得项目管理者可以更加高效管理整个团队的协同工作 <img src="'+d+'" alt="图片"></p><p>以往我们在开发完网页之后，需要把网页的代码和资源放在服务器上，让用户通过互联网来访问 在小程序的平台里，开发者完成开发之后，需要在开发者工具提交小程序的代码包，然后在小程序后台发布小程序 <img src="'+_+'" alt="图片"></p><h2 id="二、流程" tabindex="-1">二、流程 <a class="header-anchor" href="#二、流程" aria-label="Permalink to &quot;二、流程&quot;">​</a></h2><h3 id="关于发布的流程-主要分成了三个部分" tabindex="-1">关于发布的流程，主要分成了三个部分 <a class="header-anchor" href="#关于发布的流程-主要分成了三个部分" aria-label="Permalink to &quot;关于发布的流程，主要分成了三个部分&quot;">​</a></h3><ul><li>上传代码</li><li>提交审核</li><li>发布版本</li></ul><h3 id="上传代码" tabindex="-1">上传代码 <a class="header-anchor" href="#上传代码" aria-label="Permalink to &quot;上传代码&quot;">​</a></h3><p>在开发者工具中，可以点击代码上传功能： <img src="'+h+'" alt="图片"></p><p>然后就可以填写版本信息： <img src="'+m+'" alt="图片"></p><p>然后点击上传，编译器则会提示上传代码成功</p><h3 id="提交审核" tabindex="-1">提交审核 <a class="header-anchor" href="#提交审核" aria-label="Permalink to &quot;提交审核&quot;">​</a></h3><p>代码上传完毕，就可以登陆微信公众号的官网首页，点击【开发管理】，查看应用详情： <img src="'+b+'" alt="图片"></p><p>提交审核过程需要填写审核信息，如下图： <img src="'+u+'" alt="图片"></p><p>提交审核成功之后如下图： <img src="'+g+'" alt="图片"></p><h3 id="发布版本" tabindex="-1">发布版本 <a class="header-anchor" href="#发布版本" aria-label="Permalink to &quot;发布版本&quot;">​</a></h3><p>当审核通过之后，即可提交发布 <img src="'+q+'" alt="图片"></p><p>发布成功之后则如下： <img src="'+w+'" alt="图片"></p><h2 id="三、扩展" tabindex="-1">三、扩展 <a class="header-anchor" href="#三、扩展" aria-label="Permalink to &quot;三、扩展&quot;">​</a></h2><h3 id="上述是最简单的小程序代码发布的流程-通常的流程如下" tabindex="-1">上述是最简单的小程序代码发布的流程，通常的流程如下 <a class="header-anchor" href="#上述是最简单的小程序代码发布的流程-通常的流程如下" aria-label="Permalink to &quot;上述是最简单的小程序代码发布的流程，通常的流程如下&quot;">​</a></h3><p><img src="'+f+'" alt="图片"></p><ul><li>代码管理服务器上新建分支</li><li>开发测试新需求</li><li>测试完成后，将本地分支合并到 master 分支</li><li>拉取 master 分支最新代码，执行 build 命令生成小程序可执行文件</li><li>开发者工具点击“上传”</li><li>提审</li><li>发布 但是面对多人协调开发的时候，有可能出现已经上线的代码还没合并到master的情况 因此可以考虑自动化构建部署，就是将从开发到部署的一系列流程变成自动化，衔接连贯，在构建失败时能够告知开发者，构建成功后能够告知测试和实施人员，可参考如下流程图：</li></ul>',21);function P(C,T,V,D,N,S){const t=s("ArticleMetadata"),r=s("ClientOnly");return l(),o("div",null,[v,e(r,null,{default:n(()=>[e(t)]),_:1}),k])}const J=i(x,[["render",P]]);export{B as __pageData,J as default};
