import{_ as s,o as r,c as o,J as a,w as c,m as e,a as l,E as t}from"./chunks/framework.DJCjJe2w.js";const k=JSON.parse('{"title":"TCP/IP / 如何保证数据包传输的有序可靠？","description":"","frontmatter":{"createTime":"2022/10/26","tag":"计算机"},"headers":[],"relativePath":"basic-quality/orderly-reliable-transmission/index.md","filePath":"basic-quality/orderly-reliable-transmission/index.md","lastUpdated":1667281923000}'),d={name:"basic-quality/orderly-reliable-transmission/index.md"},_=e("h1",{id:"tcp-ip-如何保证数据包传输的有序可靠",tabindex:"-1"},[l("TCP/IP / 如何保证数据包传输的有序可靠？ "),e("a",{class:"header-anchor",href:"#tcp-ip-如何保证数据包传输的有序可靠","aria-label":'Permalink to "TCP/IP / 如何保证数据包传输的有序可靠？"'},"​")],-1),m=e("h2",{id:"对字节流分段并进行编号然后通过-ack-回复和超时重发这两个机制来保证",tabindex:"-1"},[l("对字节流分段并进行编号然后通过 ACK 回复和超时重发这两个机制来保证 "),e("a",{class:"header-anchor",href:"#对字节流分段并进行编号然后通过-ack-回复和超时重发这两个机制来保证","aria-label":'Permalink to "对字节流分段并进行编号然后通过 ACK 回复和超时重发这两个机制来保证"'},"​")],-1),p=e("ul",null,[e("li",null,"（1）为了保证数据包的可靠传递，发送方必须把已发送的数据包保留在缓冲区；"),e("li",null,"（2）并为每个已发送的数据包启动一个超时定时器；"),e("li",null,"（3）如在定时器超时之前收到了对方发来的应答信息（可能是对本包的应答，也可以是对本包后续包的应答），则释放该数据包占用的缓冲区;"),e("li",null,"（4）否则，重传该数据包，直到收到应答或重传次数超过规定的最大次数为止。"),e("li",null,"（5）接收方收到数据包后，先进行CRC校验，如果正确则把数据交给上层协议，然后给发送方发送一个累计应答包，表明该数据已收到，如果接收方正好也有数据要发给发送方，应答包也可方在数据包中捎带过去。")],-1);function u(h,f,x,C,b,P){const n=t("ArticleMetadata"),i=t("ClientOnly");return r(),o("div",null,[_,a(i,null,{default:c(()=>[a(n)]),_:1}),m,p])}const T=s(d,[["render",u]]);export{k as __pageData,T as default};
